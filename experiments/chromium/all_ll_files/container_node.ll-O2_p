; ModuleID = '../../third_party/blink/renderer/core/dom/container_node.cc'
source_filename = "../../third_party/blink/renderer/core/dom/container_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1625", i64 }
%"class.std::__1::vector.1625" = type { %"class.std::__1::__vector_base.1626" }
%"class.std::__1::__vector_base.1626" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1627" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::NodeChildRemovalTracker" = type { %"class.blink::Node"*, %"class.blink::NodeChildRemovalTracker"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1387", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1395", i8, i32, %"class.blink::Member.1397", %"class.blink::Member.1399", %"class.blink::Member.1401", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1403", %"class.WTF::HashMap.1405", %"class.blink::Member.1410", %"class.blink::Member.1412", %"class.blink::Member.1414", %"class.blink::Member.1416", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1418", i8, i32, %"class.blink::Member.1425", %"class.blink::Member.1427", i32, %"class.blink::Member.1429", %"class.blink::Member.1431", %"class.blink::Member.1433", %"class.std::__1::unique_ptr.1435", i64, %"class.std::__1::unique_ptr.1441", i32, i32, %"class.blink::Member.1452", %"class.blink::Member.1454", %"class.blink::Member.1456", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1458", %"class.WTF::Vector.1460", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1465", %"class.blink::Member.1472", %"class.std::__1::unique_ptr.1474", %"class.blink::Member.1480", i8, i8, %"class.WTF::String", %"class.blink::Member.1482", i8, [7 x i8], %"class.blink::HeapHashMap.1484", %"class.blink::HeapObserverSet", %"class.blink::Member.1498", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1500", i32, i8, i8, %"class.blink::WeakMember.1502", %"class.blink::Member.1503" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1527", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1594", i32, i8, [3 x i8], %"class.blink::HeapVector.1596", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1604", %"class.blink::Member.1606", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1615", %"class.blink::Member.1621", %"class.blink::Member.1623", i8, [7 x i8] }>
%"class.blink::Supplementable.1527" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1528" }
%"class.blink::HeapHashMap.1528" = type { %"class.WTF::HashMap.1531" }
%"class.WTF::HashMap.1531" = type { %"class.WTF::HashTable.1532" }
%"class.WTF::HashTable.1532" = type <{ %"struct.WTF::KeyValuePair.1534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1534" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1543" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1535" }
%"class.blink::HeapObserverSet.1535" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1536" }
%"class.blink::HeapHashSet.1536" = type { %"class.WTF::HashSet.1539" }
%"class.WTF::HashSet.1539" = type { %"class.WTF::HashTable.1540" }
%"class.WTF::HashTable.1540" = type <{ %"class.blink::WeakMember.1542"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1542" = type opaque
%"class.blink::Supplementable.1543" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1544" }
%"class.blink::HeapHashMap.1544" = type { %"class.WTF::HashMap.1547" }
%"class.WTF::HashMap.1547" = type { %"class.WTF::HashTable.1548" }
%"class.WTF::HashTable.1548" = type <{ %"struct.WTF::KeyValuePair.1550"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1550" = type { i8*, %"class.blink::Member.2896" }
%"class.blink::Member.2896" = type { %"class.blink::MemberBase.2897" }
%"class.blink::MemberBase.2897" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2898" }
%"class.blink::Member.2898" = type { %"class.blink::MemberBase.2899" }
%"class.blink::MemberBase.2899" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1551, %"class.std::__1::unique_ptr.1560", %"class.std::__1::unique_ptr.1560", %"class.std::__1::unique_ptr.1584", %"class.std::__1::unique_ptr.1584", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1590", i32, i32 }
%class.scoped_refptr.1551 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1552", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1554", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1559 }
%"class.WTF::RefCounted.1552" = type { %"class.base::RefCounted.1553" }
%"class.base::RefCounted.1553" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1554" = type { %"class.absl::optional_internal::optional_data.1555" }
%"class.absl::optional_internal::optional_data.1555" = type { %"class.absl::optional_internal::optional_data_base.1556" }
%"class.absl::optional_internal::optional_data_base.1556" = type { %"class.absl::optional_internal::optional_data_dtor_base.1557" }
%"class.absl::optional_internal::optional_data_dtor_base.1557" = type { i8, %union.anon.1558 }
%union.anon.1558 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1559 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1560" = type { %"class.std::__1::__compressed_pair.1561" }
%"class.std::__1::__compressed_pair.1561" = type { %"struct.std::__1::__compressed_pair_elem.1562" }
%"struct.std::__1::__compressed_pair_elem.1562" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1571", %"class.std::__1::map.1580"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1554" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1563", %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1571" = type { %"class.std::__1::__tree.1572" }
%"class.std::__1::__tree.1572" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1573", %"class.std::__1::__compressed_pair.1577" }
%"class.std::__1::__compressed_pair.1573" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.1577" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1580" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1590" = type { %"class.WTF::HashTable.1591" }
%"class.WTF::HashTable.1591" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1596" = type { %"class.WTF::Vector.1599" }
%"class.WTF::Vector.1599" = type { %"class.WTF::VectorBuffer.1600" }
%"class.WTF::VectorBuffer.1600" = type { %"class.WTF::VectorBufferBase.1601" }
%"class.WTF::VectorBufferBase.1601" = type { %"class.blink::Member.1602"*, i32, i32 }
%"class.blink::Member.1602" = type opaque
%"class.blink::Member.1604" = type { %"class.blink::MemberBase.1605" }
%"class.blink::MemberBase.1605" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1608", i32, i32 }
%"class.blink::HeapHashMap.1608" = type { %"class.WTF::HashMap.1611" }
%"class.WTF::HashMap.1611" = type { %"class.WTF::HashTable.1612" }
%"class.WTF::HashTable.1612" = type <{ %"struct.WTF::KeyValuePair.1614"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1614" = type opaque
%"class.std::__1::unique_ptr.1615" = type { %"class.std::__1::__compressed_pair.1616" }
%"class.std::__1::__compressed_pair.1616" = type { %"struct.std::__1::__compressed_pair_elem.1617" }
%"struct.std::__1::__compressed_pair_elem.1617" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1699", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1699" = type { %"class.std::__1::unique_ptr.1700" }
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1656" }
%"class.WTF::Vector.1656" = type { %"class.WTF::VectorBuffer.1657" }
%"class.WTF::VectorBuffer.1657" = type { %"class.WTF::VectorBufferBase.1658" }
%"class.WTF::VectorBufferBase.1658" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1659" }
%"class.std::__1::unique_ptr.1659" = type { %"class.std::__1::__compressed_pair.1660" }
%"class.std::__1::__compressed_pair.1660" = type { %"struct.std::__1::__compressed_pair_elem.1661" }
%"struct.std::__1::__compressed_pair_elem.1661" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1662", %"class.WTF::HashMap.1669", %"class.WTF::HashMap.1674", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1679", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1662" = type { %"class.std::__1::unique_ptr.1663" }
%"class.std::__1::unique_ptr.1663" = type { %"class.std::__1::__compressed_pair.1664" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1669" = type { %"class.WTF::HashTable.1670" }
%"class.WTF::HashTable.1670" = type <{ %"struct.WTF::KeyValuePair.1673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1673" = type opaque
%"class.WTF::HashMap.1674" = type { %"class.WTF::HashTable.1675" }
%"class.WTF::HashTable.1675" = type <{ %"struct.WTF::KeyValuePair.1678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1678" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1679" = type { %"class.std::__1::unique_ptr.1680" }
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1771" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1706", i32 }>
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1709", %"class.absl::optional.1710", %"class.absl::optional.1715", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1724", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1746", %"class.std::__1::map.1757", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1766", i8, %class.scoped_refptr.1720, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1767" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1709" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1710" = type { %"class.absl::optional_internal::optional_data.1711" }
%"class.absl::optional_internal::optional_data.1711" = type { %"class.absl::optional_internal::optional_data_base.1712" }
%"class.absl::optional_internal::optional_data_base.1712" = type { %"class.absl::optional_internal::optional_data_dtor_base.1713" }
%"class.absl::optional_internal::optional_data_dtor_base.1713" = type { i8, %union.anon.1714 }
%union.anon.1714 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1715" = type { %"class.absl::optional_internal::optional_data.1716" }
%"class.absl::optional_internal::optional_data.1716" = type { %"class.absl::optional_internal::optional_data_base.1717" }
%"class.absl::optional_internal::optional_data_base.1717" = type { %"class.absl::optional_internal::optional_data_dtor_base.1718" }
%"class.absl::optional_internal::optional_data_dtor_base.1718" = type { i8, %union.anon.1719 }
%union.anon.1719 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1720, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1721" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1721" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1722 }
%class.scoped_refptr.1722 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1777", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1720, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1777" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1723 }
%class.scoped_refptr.1723 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1727", %class.scoped_refptr.1728 }
%"class.base::RepeatingCallback.1727" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1728 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1729", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1729" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1733", %"class.std::__1::unique_ptr.1739", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1745" }
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1739" = type { %"class.std::__1::__compressed_pair.1740" }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1745" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1746" = type { %"class.std::__1::__tree.1747" }
%"class.std::__1::__tree.1747" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1748", %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1757" = type { %"class.std::__1::__tree.1758" }
%"class.std::__1::__tree.1758" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1759", %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::__compressed_pair.1759" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1766" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1720 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1767" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1606", i8, [7 x i8], %"class.WTF::Vector.1656", %"class.blink::HeapVector.1691", i8, [7 x i8], %"class.WTF::HashSet.1590", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1691" = type { %"class.WTF::Vector.1694" }
%"class.WTF::Vector.1694" = type { %"class.WTF::VectorBuffer.1695" }
%"class.WTF::VectorBuffer.1695" = type { %"class.WTF::VectorBufferBase.1696" }
%"class.WTF::VectorBufferBase.1696" = type { %"class.blink::Member.1697"*, i32, i32 }
%"class.blink::Member.1697" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1518", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1518" = type { %"class.WTF::Vector.1521" }
%"class.WTF::Vector.1521" = type { %"class.WTF::VectorBuffer.1522" }
%"class.WTF::VectorBuffer.1522" = type { %"class.WTF::VectorBufferBase.1523" }
%"class.WTF::VectorBufferBase.1523" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1632", [4 x i8] }>
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2906" }
%"class.WTF::Vector.2906" = type { %"class.WTF::VectorBuffer.2907" }
%"class.WTF::VectorBuffer.2907" = type { %"class.WTF::VectorBufferBase.2908" }
%"class.WTF::VectorBufferBase.2908" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2911", %"class.absl::optional.2911", %"class.absl::optional.2911" }
%"class.absl::optional.2911" = type { %"class.absl::optional_internal::optional_data.2912" }
%"class.absl::optional_internal::optional_data.2912" = type { %"class.absl::optional_internal::optional_data_base.2913" }
%"class.absl::optional_internal::optional_data_base.2913" = type { %"class.absl::optional_internal::optional_data_dtor_base.2914" }
%"class.absl::optional_internal::optional_data_dtor_base.2914" = type { i8, %union.anon.2915 }
%union.anon.2915 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2916 }
%class.scoped_refptr.2916 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2917", %"class.WTF::Vector.630", %"class.WTF::Vector.2919", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2917" = type { %"class.base::RefCounted.2918" }
%"class.base::RefCounted.2918" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2919" = type { %"class.WTF::VectorBuffer.2920" }
%"class.WTF::VectorBuffer.2920" = type { %"class.WTF::VectorBufferBase.2921" }
%"class.WTF::VectorBufferBase.2921" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2922 }
%union.anon.2922 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2926" }
%"class.WTF::VectorBuffer.2926" = type { %"class.WTF::VectorBufferBase.2927", [32 x i8] }
%"class.WTF::VectorBufferBase.2927" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2890 }
%class.scoped_refptr.2890 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2904" }
%"class.blink::Member.2904" = type { %"class.blink::MemberBase.2905" }
%"class.blink::MemberBase.2905" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2900" }
%"class.blink::MemberBase.2900" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2902" }
%"class.blink::MemberBase.2902" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2903" }
%"class.blink::MemberBase.2903" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2891", %"class.WTF::Vector.2891" }
%"class.WTF::Vector.2891" = type { %"class.WTF::VectorBuffer.2892" }
%"class.WTF::VectorBuffer.2892" = type { %"class.WTF::VectorBufferBase.2893" }
%"class.WTF::VectorBufferBase.2893" = type { %class.scoped_refptr.2890*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type { %"class.WTF::HashMap.1379" }
%"class.WTF::HashMap.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"struct.WTF::KeyValuePair.1383"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1383" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1387" = type { %"class.WTF::Vector.1390" }
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"class.blink::Member.1393"*, i32, i32 }
%"class.blink::Member.1393" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"struct.WTF::KeyValuePair.1409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1409" = type opaque
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1418" = type { %"class.WTF::HashSet.1421" }
%"class.WTF::HashSet.1421" = type { %"class.WTF::HashTable.1422" }
%"class.WTF::HashTable.1422" = type <{ %"class.blink::Member.1424"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1424" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1435" = type { %"class.std::__1::__compressed_pair.1436" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1441" = type { %"class.std::__1::__compressed_pair.1442" }
%"class.std::__1::__compressed_pair.1442" = type { %"struct.std::__1::__compressed_pair_elem.1443" }
%"struct.std::__1::__compressed_pair_elem.1443" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1444", %"class.WTF::HashMap.1444", %"class.WTF::HashMap.1444", %"class.WTF::HashMap.1444", %"class.WTF::HashMap.1444", %"class.WTF::HashMap.1444", %"class.WTF::HashMap.1444", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1444" = type { %"class.WTF::HashTable.1445" }
%"class.WTF::HashTable.1445" = type <{ %"struct.WTF::KeyValuePair.1448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1448" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1465" = type { %"class.WTF::HashMap.1468" }
%"class.WTF::HashMap.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ %"struct.WTF::KeyValuePair.1471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1471" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1474" = type { %"class.std::__1::__compressed_pair.1475" }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1484" = type { %"class.WTF::HashMap.1487" }
%"class.WTF::HashMap.1487" = type { %"class.WTF::HashTable.1488" }
%"class.WTF::HashTable.1488" = type <{ %"struct.WTF::KeyValuePair.1490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1490" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1491" }
%"class.blink::HeapHashSet.1491" = type { %"class.WTF::HashSet.1494" }
%"class.WTF::HashSet.1494" = type { %"class.WTF::HashTable.1495" }
%"class.WTF::HashTable.1495" = type <{ %"class.blink::WeakMember.1497"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1497" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1507", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1514", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1507" = type { %"class.WTF::HashSet.1510" }
%"class.WTF::HashSet.1510" = type { %"class.WTF::HashTable.1511" }
%"class.WTF::HashTable.1511" = type <{ %"class.blink::Member.1513"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1513" = type opaque
%"class.blink::HeapTaskRunnerTimer.1514" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1515", { i64, i64 } }
%"class.blink::WeakMember.1515" = type { %"class.blink::MemberBase.1501" }
%"class.blink::WeakMember.1502" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::ChildFrameDisconnector" = type { %"class.blink::HeapVector.1804", %"class.blink::Node"* }
%"class.blink::HeapVector.1804" = type { %"class.WTF::Vector.1807" }
%"class.WTF::Vector.1807" = type { %"class.WTF::VectorBuffer.1808" }
%"class.WTF::VectorBuffer.1808" = type { %"class.WTF::VectorBufferBase.1809", [80 x i8] }
%"class.WTF::VectorBufferBase.1809" = type { %"class.blink::Member.1810"*, i32, i32 }
%"class.blink::Member.1810" = type { %"class.blink::MemberBase.1811" }
%"class.blink::MemberBase.1811" = type { %"class.blink::HTMLFrameOwnerElement"* }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.1812", %"class.blink::Member.1814", %"struct.blink::FramePolicy", %"class.blink::Member.1839", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1845", %"class.blink::Member.1847", %"class.blink::Member.1849", i8, i32, i8, i32, %"class.blink::Member.1982", %"class.blink::Member.1872", %"class.blink::FrameLifecycle", %"class.blink::Member.1812", %"class.blink::Member.1812", %"class.blink::Member.1812", %"class.blink::Member.1812", %"class.blink::Member.1812", %"class.blink::Member.1812", %"class.blink::Member.1984", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1986", i8, %"class.base::UnguessableToken", %"class.absl::optional.1988", %"class.absl::optional.1993", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1812", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1845" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1812", %"class.blink::Member.1872", %"class.blink::Member.1874", %"class.blink::Member.1876", i8, %"class.WTF::Vector.1878" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1865" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1853" }
%"class.blink::HeapVector.1853" = type { %"class.WTF::Vector.1856" }
%"class.WTF::Vector.1856" = type { %"class.WTF::VectorBuffer.1857" }
%"class.WTF::VectorBuffer.1857" = type { %"class.WTF::VectorBufferBase.1858", [32 x i8] }
%"class.WTF::VectorBufferBase.1858" = type { %"struct.std::__1::pair.1859"*, i32, i32 }
%"struct.std::__1::pair.1859" = type { %"class.WTF::AtomicString", %"class.blink::Member.1860" }
%"class.blink::Member.1860" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::HeapVector.1862"* }
%"class.blink::HeapVector.1862" = type opaque
%"class.std::__1::unique_ptr.1865" = type { %"class.std::__1::__compressed_pair.1866" }
%"class.std::__1::__compressed_pair.1866" = type { %"struct.std::__1::__compressed_pair_elem.1867" }
%"struct.std::__1::__compressed_pair_elem.1867" = type { %"class.WTF::Vector.1868"* }
%"class.WTF::Vector.1868" = type opaque
%"class.blink::Member.1874" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880" }
%"class.WTF::VectorBufferBase.1880" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1974" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1881, %"class.std::__1::unique_ptr.1706", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1720, i32 }>
%class.scoped_refptr.1881 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1720, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1940", %"class.absl::optional.1945", %"class.absl::optional.1898", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1965", i8, [7 x i8], %class.scoped_refptr.1720, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1729" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1720, %"class.std::__1::unique_ptr.1882", %"class.absl::optional.1892", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1898", %"class.std::__1::unique_ptr.1903", i8, i64, %class.scoped_refptr.1937, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1938", %"class.base::WeakPtrFactory.1939" }
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1720, i8, %"class.mojo::ScopedHandleBase.1885", %class.scoped_refptr.1886, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1887", i8*, %"class.base::WeakPtrFactory.1888" }
%"class.mojo::ScopedHandleBase.1885" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1886 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1887" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1888" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1892" = type { %"class.absl::optional_internal::optional_data.1893" }
%"class.absl::optional_internal::optional_data.1893" = type { %"class.absl::optional_internal::optional_data_base.1894" }
%"class.absl::optional_internal::optional_data_base.1894" = type { %"class.absl::optional_internal::optional_data_dtor_base.1895" }
%"class.absl::optional_internal::optional_data_dtor_base.1895" = type { i8, %union.anon.1896 }
%union.anon.1896 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1897", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1897" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1903" = type { %"class.std::__1::__compressed_pair.1904" }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1906", i8, i64, %class.scoped_refptr.1907, %class.scoped_refptr.1932 }
%"class.base::RepeatingCallback.1906" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1907 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1908", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1910", %"class.std::__1::map.1921", i8, [7 x i8] }>
%"class.base::RefCounted.1908" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1909 }
%class.scoped_refptr.1909 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1910" = type { %"class.std::__1::__tree.1911" }
%"class.std::__1::__tree.1911" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1912", %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1912" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1921" = type { %"class.std::__1::__tree.1922" }
%"class.std::__1::__tree.1922" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1923", %"class.std::__1::__compressed_pair.1927" }
%"class.std::__1::__compressed_pair.1923" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.1927" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.1932 = type { %"class.base::RefCountedData.1933"* }
%"class.base::RefCountedData.1933" = type opaque
%class.scoped_refptr.1937 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1938" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1939" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1940" = type { %"class.absl::optional_internal::optional_data.1941" }
%"class.absl::optional_internal::optional_data.1941" = type { %"class.absl::optional_internal::optional_data_base.1942" }
%"class.absl::optional_internal::optional_data_base.1942" = type { %"class.absl::optional_internal::optional_data_dtor_base.1943" }
%"class.absl::optional_internal::optional_data_dtor_base.1943" = type { i8, %union.anon.1944 }
%union.anon.1944 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1945" = type { %"class.absl::optional_internal::optional_data.1946" }
%"class.absl::optional_internal::optional_data.1946" = type { %"class.absl::optional_internal::optional_data_base.1947" }
%"class.absl::optional_internal::optional_data_base.1947" = type { %"class.absl::optional_internal::optional_data_dtor_base.1948" }
%"class.absl::optional_internal::optional_data_dtor_base.1948" = type { i8, [7 x i8], %union.anon.1949 }
%union.anon.1949 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1898" = type { %"class.absl::optional_internal::optional_data.1899" }
%"class.absl::optional_internal::optional_data.1899" = type { %"class.absl::optional_internal::optional_data_base.1900" }
%"class.absl::optional_internal::optional_data_base.1900" = type { %"class.absl::optional_internal::optional_data_dtor_base.1901" }
%"class.absl::optional_internal::optional_data_dtor_base.1901" = type { i8, %union.anon.1902 }
%union.anon.1902 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1950 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1950 = type { %"class.std::__1::map.1953" }
%"class.std::__1::map.1953" = type { %"class.std::__1::__tree.1954" }
%"class.std::__1::__tree.1954" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1955", %"class.std::__1::__compressed_pair.1959" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.1959" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1964"*, i64 }
%"class.std::__1::unique_ptr.1964" = type opaque
%"class.std::__1::map.1965" = type { %"class.std::__1::__tree.1966" }
%"class.std::__1::__tree.1966" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1967", %"class.std::__1::__compressed_pair.1971" }
%"class.std::__1::__compressed_pair.1967" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.1971" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1974" = type { %"class.std::__1::__compressed_pair.1975" }
%"class.std::__1::__compressed_pair.1975" = type { %"struct.std::__1::__compressed_pair_elem.1976" }
%"struct.std::__1::__compressed_pair_elem.1976" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1872" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2005", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2013", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2027", %"class.blink::FrameLoader", %"class.blink::Member.2048", %"class.blink::Member.343", %"class.blink::Member.2050", %"class.blink::Member.2052", %"class.blink::Member.2068", %"class.blink::Member.2070", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2072", %class.scoped_refptr.2296, %"class.blink::Member.2297", %"class.blink::Member.2299", %"class.blink::Member.2310", %"class.blink::Member.2312", %"class.blink::Member.2314", %"class.blink::Member.2318", %"class.blink::Member.2320", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2324", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2330", %"class.std::__1::unique_ptr.2331", %"class.absl::optional.1993", i32, [4 x i8], %"class.std::__1::unique_ptr.2337", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2345", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2350", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2355", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2358", %"class.blink::Member.2360", %"class.blink::Member.2362", %"class.blink::Member.2364", %"class.mojo::StructPtr.2367", %"class.blink::Member.2376", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2378", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2005" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2006" }
%"class.blink::HeapHashMap.2006" = type { %"class.WTF::HashMap.2009" }
%"class.WTF::HashMap.2009" = type { %"class.WTF::HashTable.2010" }
%"class.WTF::HashTable.2010" = type <{ %"struct.WTF::KeyValuePair.2012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2012" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2013" = type { %"class.std::__1::__compressed_pair.2014" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.2015" }
%"struct.std::__1::__compressed_pair_elem.2015" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2016", %"class.base::WeakPtrFactory.2021" }
%"class.WTF::HashMap.2016" = type { %"class.WTF::HashTable.2017" }
%"class.WTF::HashTable.2017" = type <{ %"struct.WTF::KeyValuePair.2020"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2020" = type opaque
%"class.base::WeakPtrFactory.2021" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2025" }
%"class.blink::Member.2025" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2932" }
%"class.blink::WeakMember.2932" = type { %"class.blink::MemberBase.2933" }
%"class.blink::MemberBase.2933" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2934", i64, %"class.std::__1::map.2935", i8*, i64, %"class.base::WeakPtrFactory.2944" }
%"class.base::RepeatingCallback.2934" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2935" = type { %"class.std::__1::__tree.2936" }
%"class.std::__1::__tree.2936" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2937", %"class.std::__1::__compressed_pair.2941" }
%"class.std::__1::__compressed_pair.2937" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"class.std::__1::__compressed_pair.2941" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.2944" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2027" = type { %"class.WTF::HashSet.2030" }
%"class.WTF::HashSet.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"class.blink::WeakMember.2033"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2033" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1984", %"class.blink::Member.2034", %"class.blink::Member.2036", %"class.std::__1::unique_ptr.2038", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2044" }
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2036" = type { %"class.blink::MemberBase.2037" }
%"class.blink::MemberBase.2037" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2038" = type { %"class.std::__1::__compressed_pair.2039" }
%"class.std::__1::__compressed_pair.2039" = type { %"struct.std::__1::__compressed_pair_elem.2040" }
%"struct.std::__1::__compressed_pair_elem.2040" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.WTF::HashSet.2044" = type { %"class.WTF::HashTable.2045" }
%"class.WTF::HashTable.2045" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2457", %"class.blink::Member.1984", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2462", i8, i32, %"class.blink::Color", %"class.absl::optional.2464", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2469", %"class.blink::Member.2471", %"class.blink::Member.2471", %"class.std::__1::unique_ptr.2474", i32, [4 x i8], %"class.WTF::HashSet.2477", %"class.blink::Member.2484", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2486", %"class.blink::HeapHashSet.2493", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2501", i8, %"class.blink::Member.2507", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2519", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2533", i8, %"class.std::__1::unique_ptr.2539", %"class.std::__1::unique_ptr.2620", %"class.WTF::Vector.2626", i32, %class.scoped_refptr.2631, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2632", %"class.blink::Member.2634", %"class.blink::Member.2636", %"class.blink::HeapHashSet.2638", %"class.blink::HeapHashSet.2645", %"class.std::__1::unique_ptr.2652", %"class.std::__1::unique_ptr.2659", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2457" = type { %"class.WTF::HashTable.2458" }
%"class.WTF::HashTable.2458" = type <{ %class.scoped_refptr.2461*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2461 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2462" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2463", { i64, i64 } }
%"class.blink::WeakMember.2463" = type { %"class.blink::MemberBase.2049" }
%"class.absl::optional.2464" = type { %"class.absl::optional_internal::optional_data.2465" }
%"class.absl::optional_internal::optional_data.2465" = type { %"class.absl::optional_internal::optional_data_base.2466" }
%"class.absl::optional_internal::optional_data_base.2466" = type { %"class.absl::optional_internal::optional_data_dtor_base.2467" }
%"class.absl::optional_internal::optional_data_dtor_base.2467" = type { i8, %union.anon.2468 }
%union.anon.2468 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2469" = type { %"class.blink::MemberBase.2470" }
%"class.blink::MemberBase.2470" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2471" = type { %"class.blink::MemberBase.2472" }
%"class.blink::MemberBase.2472" = type { %"class.blink::HeapHashSet.2473"* }
%"class.blink::HeapHashSet.2473" = type opaque
%"class.std::__1::unique_ptr.2474" = type { %"class.std::__1::__compressed_pair.2475" }
%"class.std::__1::__compressed_pair.2475" = type { %"struct.std::__1::__compressed_pair_elem.2476" }
%"struct.std::__1::__compressed_pair_elem.2476" = type { %"class.WTF::HashSet.2477"* }
%"class.WTF::HashSet.2477" = type { %"class.WTF::HashTable.2478" }
%"class.WTF::HashTable.2478" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2486" = type { %"class.WTF::HashSet.2489" }
%"class.WTF::HashSet.2489" = type { %"class.WTF::HashTable.2490" }
%"class.WTF::HashTable.2490" = type <{ %"class.blink::Member.2492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2492" = type opaque
%"class.blink::HeapHashSet.2493" = type { %"class.WTF::HashSet.2496" }
%"class.WTF::HashSet.2496" = type { %"class.WTF::HashTable.2497" }
%"class.WTF::HashTable.2497" = type <{ %"class.blink::Member.2499"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2499" = type { %"class.blink::MemberBase.2500" }
%"class.blink::MemberBase.2500" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2672", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2682", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2674", %"class.blink::Member.2676", %"class.blink::Member.2678", %"class.blink::Member.2680", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2674" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2678" = type { %"class.blink::MemberBase.2679" }
%"class.blink::MemberBase.2679" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2682" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2683", { i64, i64 } }
%"class.blink::WeakMember.2683" = type { %"class.blink::MemberBase.2500" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2501" = type { %"class.std::__1::__compressed_pair.2502" }
%"class.std::__1::__compressed_pair.2502" = type { %"struct.std::__1::__compressed_pair_elem.2503" }
%"struct.std::__1::__compressed_pair_elem.2503" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2511", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2511" = type { %"class.WTF::HashTable.2512" }
%"class.WTF::HashTable.2512" = type <{ %"struct.WTF::KeyValuePair.2514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2514" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2515", i32, i32 }
%"class.WTF::Vector.2515" = type { %"class.WTF::VectorBuffer.2516" }
%"class.WTF::VectorBuffer.2516" = type { %"class.WTF::VectorBufferBase.2517" }
%"class.WTF::VectorBufferBase.2517" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2519" = type { %"class.WTF::LinkedHashSet.2522" }
%"class.WTF::LinkedHashSet.2522" = type { %"class.WTF::HashMap.2523", %"class.WTF::VectorBackedLinkedList.2527" }
%"class.WTF::HashMap.2523" = type { %"class.WTF::HashTable.2524" }
%"class.WTF::HashTable.2524" = type <{ %"struct.WTF::KeyValuePair.2526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2526" = type opaque
%"class.WTF::VectorBackedLinkedList.2527" = type { %"class.WTF::Vector.2528", i32, i32 }
%"class.WTF::Vector.2528" = type { %"class.WTF::VectorBuffer.2529" }
%"class.WTF::VectorBuffer.2529" = type { %"class.WTF::VectorBufferBase.2530" }
%"class.WTF::VectorBufferBase.2530" = type { %"class.WTF::VectorBackedLinkedListNode.2531"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2531" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2533" = type { %"class.std::__1::__compressed_pair.2534" }
%"class.std::__1::__compressed_pair.2534" = type { %"struct.std::__1::__compressed_pair_elem.2535" }
%"struct.std::__1::__compressed_pair_elem.2535" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2539" = type { %"class.std::__1::__compressed_pair.2540" }
%"class.std::__1::__compressed_pair.2540" = type { %"struct.std::__1::__compressed_pair_elem.2541" }
%"struct.std::__1::__compressed_pair_elem.2541" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2542, %class.scoped_refptr.2542, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2597", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2602", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2542 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2543", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2550" }
%"class.WTF::RefCounted.2543" = type { %"class.base::RefCounted.2544" }
%"class.base::RefCounted.2544" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2545", i32, [4 x i8] }>
%"class.WTF::Vector.2545" = type { %"class.WTF::VectorBuffer.2546" }
%"class.WTF::VectorBuffer.2546" = type { %"class.WTF::VectorBufferBase.2547" }
%"class.WTF::VectorBufferBase.2547" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2550" = type { %"class.WTF::VectorBuffer.2551" }
%"class.WTF::VectorBuffer.2551" = type { %"class.WTF::VectorBufferBase.2552" }
%"class.WTF::VectorBufferBase.2552" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2553", %"class.std::__1::unique_ptr.2569", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2553" = type { %"class.std::__1::__compressed_pair.2554" }
%"class.std::__1::__compressed_pair.2554" = type { %"struct.std::__1::__compressed_pair_elem.2555" }
%"struct.std::__1::__compressed_pair_elem.2555" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2556", %"class.WTF::Vector.2561", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2556" = type { %"class.WTF::VectorBuffer.2557" }
%"class.WTF::VectorBuffer.2557" = type { %"class.WTF::VectorBufferBase.2558" }
%"class.WTF::VectorBufferBase.2558" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2561" = type { %"class.WTF::VectorBuffer.2562" }
%"class.WTF::VectorBuffer.2562" = type { %"class.WTF::VectorBufferBase.2563" }
%"class.WTF::VectorBufferBase.2563" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2569" = type { %"class.std::__1::__compressed_pair.2570" }
%"class.std::__1::__compressed_pair.2570" = type { %"struct.std::__1::__compressed_pair_elem.2571" }
%"struct.std::__1::__compressed_pair_elem.2571" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2572", %"class.absl::optional.2572" }
%"class.absl::optional.2572" = type { %"class.absl::optional_internal::optional_data.2573" }
%"class.absl::optional_internal::optional_data.2573" = type { %"class.absl::optional_internal::optional_data_base.2574" }
%"class.absl::optional_internal::optional_data_base.2574" = type { %"class.absl::optional_internal::optional_data_dtor_base.2575" }
%"class.absl::optional_internal::optional_data_dtor_base.2575" = type { i8, [3 x i8], %union.anon.2576 }
%union.anon.2576 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2550"*, %"class.absl::optional.2582", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2582" = type { %"class.absl::optional_internal::optional_data.2583" }
%"class.absl::optional_internal::optional_data.2583" = type { %"class.absl::optional_internal::optional_data_base.2584" }
%"class.absl::optional_internal::optional_data_base.2584" = type { %"class.absl::optional_internal::optional_data_dtor_base.2585" }
%"class.absl::optional_internal::optional_data_dtor_base.2585" = type { i8, %union.anon.2586 }
%union.anon.2586 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2587", %"class.WTF::Vector.2592" }
%"class.WTF::Vector.2587" = type { %"class.WTF::VectorBuffer.2588" }
%"class.WTF::VectorBuffer.2588" = type { %"class.WTF::VectorBufferBase.2589", [128 x i8] }
%"class.WTF::VectorBufferBase.2589" = type { i32*, i32, i32 }
%"class.WTF::Vector.2592" = type { %"class.WTF::VectorBuffer.2593" }
%"class.WTF::VectorBuffer.2593" = type { %"class.WTF::VectorBufferBase.2594", [128 x i8] }
%"class.WTF::VectorBufferBase.2594" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2597" = type { %"class.WTF::VectorBuffer.2598" }
%"class.WTF::VectorBuffer.2598" = type { %"class.WTF::VectorBufferBase.2599" }
%"class.WTF::VectorBufferBase.2599" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2602" = type { %"class.WTF::HashTable.2603" }
%"class.WTF::HashTable.2603" = type <{ %"struct.WTF::KeyValuePair.2606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2606" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2607", %"class.WTF::Vector.2612" }
%"class.WTF::HashMap.2607" = type { %"class.WTF::HashTable.2608" }
%"class.WTF::HashTable.2608" = type <{ %"struct.WTF::KeyValuePair.2611"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2611" = type opaque
%"class.WTF::Vector.2612" = type { %"class.WTF::VectorBuffer.2613" }
%"class.WTF::VectorBuffer.2613" = type { %"class.WTF::VectorBufferBase.2614" }
%"class.WTF::VectorBufferBase.2614" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2620" = type { %"class.std::__1::__compressed_pair.2621" }
%"class.std::__1::__compressed_pair.2621" = type { %"struct.std::__1::__compressed_pair_elem.2622" }
%"struct.std::__1::__compressed_pair_elem.2622" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2626" = type { %"class.WTF::VectorBuffer.2627" }
%"class.WTF::VectorBuffer.2627" = type { %"class.WTF::VectorBufferBase.2628" }
%"class.WTF::VectorBufferBase.2628" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2631 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2632" = type { %"class.blink::MemberBase.2633" }
%"class.blink::MemberBase.2633" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2634" = type { %"class.blink::MemberBase.2635" }
%"class.blink::MemberBase.2635" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2636" = type { %"class.blink::MemberBase.2637" }
%"class.blink::MemberBase.2637" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2638" = type { %"class.WTF::HashSet.2641" }
%"class.WTF::HashSet.2641" = type { %"class.WTF::HashTable.2642" }
%"class.WTF::HashTable.2642" = type <{ %"class.blink::WeakMember.2644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2644" = type opaque
%"class.blink::HeapHashSet.2645" = type { %"class.WTF::HashSet.2648" }
%"class.WTF::HashSet.2648" = type { %"class.WTF::HashTable.2649" }
%"class.WTF::HashTable.2649" = type <{ %"class.blink::WeakMember.2651"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2651" = type opaque
%"class.std::__1::unique_ptr.2652" = type { %"class.std::__1::__compressed_pair.2653" }
%"class.std::__1::__compressed_pair.2653" = type { %"struct.std::__1::__compressed_pair_elem.2654" }
%"struct.std::__1::__compressed_pair_elem.2654" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2655" }
%"class.base::time_internal::TimeBase.2655" = type { i64 }
%"class.std::__1::unique_ptr.2659" = type { %"class.std::__1::__compressed_pair.2660" }
%"class.std::__1::__compressed_pair.2660" = type { %"struct.std::__1::__compressed_pair_elem.2661" }
%"struct.std::__1::__compressed_pair_elem.2661" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2662", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2662" = type { %"class.absl::optional_internal::optional_data.2663" }
%"class.absl::optional_internal::optional_data.2663" = type { %"class.absl::optional_internal::optional_data_base.2664" }
%"class.absl::optional_internal::optional_data_base.2664" = type { %"class.absl::optional_internal::optional_data_dtor_base.2665" }
%"class.absl::optional_internal::optional_data_dtor_base.2665" = type { i8, %union.anon.2666 }
%union.anon.2666 = type { %"class.base::Time" }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1984", %"class.blink::Member.2056", %"class.blink::Member.2058", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2060", %"class.blink::Member.2066" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2058" = type { %"class.blink::MemberBase.2059" }
%"class.blink::MemberBase.2059" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2060" = type { %"class.std::__1::__compressed_pair.2061" }
%"class.std::__1::__compressed_pair.2061" = type { %"struct.std::__1::__compressed_pair_elem.2062" }
%"struct.std::__1::__compressed_pair_elem.2062" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2066" = type { %"class.blink::MemberBase.2067" }
%"class.blink::MemberBase.2067" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2068" = type { %"class.blink::MemberBase.2069" }
%"class.blink::MemberBase.2069" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2070" = type { %"class.blink::MemberBase.2071" }
%"class.blink::MemberBase.2071" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2072" = type { %"class.blink::MemberBase.2073" }
%"class.blink::MemberBase.2073" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2076", %"class.blink::HeapListHashSet.2087", %"class.blink::HeapListHashSet.2098", %"class.blink::HeapListHashSet.2109", %"class.blink::HeapListHashSet.2120", %"class.blink::HeapListHashSet.2131", %"class.blink::HeapListHashSet.2142", %"class.blink::HeapListHashSet.2153", %"class.blink::HeapListHashSet.2164", %"class.blink::HeapListHashSet.2175", %"class.blink::HeapListHashSet.2186", %"class.blink::HeapListHashSet.2197", %"class.blink::HeapListHashSet.2208", %"class.blink::HeapListHashSet.2219", %"class.blink::HeapListHashSet.2230", %"class.blink::HeapListHashSet.2241", %"class.blink::HeapListHashSet.2252", %"class.blink::HeapListHashSet.2263", %"class.blink::HeapListHashSet.2274", %"class.blink::HeapListHashSet.2285" }
%"class.blink::HeapListHashSet.2076" = type { %"class.WTF::ListHashSet.base.2086", [7 x i8] }
%"class.WTF::ListHashSet.base.2086" = type <{ %"class.WTF::HashTable.2081", %"class.blink::Member.2083", %"class.blink::Member.2083", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2081" = type <{ %"class.blink::Member.2083"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::HeapListHashSetNode.2085"* }
%"class.blink::HeapListHashSetNode.2085" = type { %"class.blink::Member.2299", %"class.blink::Member.2083", %"class.blink::Member.2083" }
%"class.blink::HeapListHashSet.2087" = type { %"class.WTF::ListHashSet.base.2097", [7 x i8] }
%"class.WTF::ListHashSet.base.2097" = type <{ %"class.WTF::HashTable.2092", %"class.blink::Member.2094", %"class.blink::Member.2094", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2092" = type <{ %"class.blink::Member.2094"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::HeapListHashSetNode.2096"* }
%"class.blink::HeapListHashSetNode.2096" = type { %"class.blink::Member.2451", %"class.blink::Member.2094", %"class.blink::Member.2094" }
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2098" = type { %"class.WTF::ListHashSet.base.2108", [7 x i8] }
%"class.WTF::ListHashSet.base.2108" = type <{ %"class.WTF::HashTable.2103", %"class.blink::Member.2105", %"class.blink::Member.2105", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2103" = type <{ %"class.blink::Member.2105"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::HeapListHashSetNode.2107"* }
%"class.blink::HeapListHashSetNode.2107" = type { %"class.blink::Member.2447", %"class.blink::Member.2105", %"class.blink::Member.2105" }
%"class.blink::Member.2447" = type { %"class.blink::MemberBase.2448" }
%"class.blink::MemberBase.2448" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2109" = type { %"class.WTF::ListHashSet.base.2119", [7 x i8] }
%"class.WTF::ListHashSet.base.2119" = type <{ %"class.WTF::HashTable.2114", %"class.blink::Member.2116", %"class.blink::Member.2116", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2114" = type <{ %"class.blink::Member.2116"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2116" = type { %"class.blink::MemberBase.2117" }
%"class.blink::MemberBase.2117" = type { %"class.blink::HeapListHashSetNode.2118"* }
%"class.blink::HeapListHashSetNode.2118" = type { %"class.blink::Member.2443", %"class.blink::Member.2116", %"class.blink::Member.2116" }
%"class.blink::Member.2443" = type { %"class.blink::MemberBase.2444" }
%"class.blink::MemberBase.2444" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2120" = type { %"class.WTF::ListHashSet.base.2130", [7 x i8] }
%"class.WTF::ListHashSet.base.2130" = type <{ %"class.WTF::HashTable.2125", %"class.blink::Member.2127", %"class.blink::Member.2127", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2125" = type <{ %"class.blink::Member.2127"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::HeapListHashSetNode.2129"* }
%"class.blink::HeapListHashSetNode.2129" = type { %"class.blink::Member.2439", %"class.blink::Member.2127", %"class.blink::Member.2127" }
%"class.blink::Member.2439" = type { %"class.blink::MemberBase.2440" }
%"class.blink::MemberBase.2440" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2131" = type { %"class.WTF::ListHashSet.base.2141", [7 x i8] }
%"class.WTF::ListHashSet.base.2141" = type <{ %"class.WTF::HashTable.2136", %"class.blink::Member.2138", %"class.blink::Member.2138", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2136" = type <{ %"class.blink::Member.2138"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::HeapListHashSetNode.2140"* }
%"class.blink::HeapListHashSetNode.2140" = type { %"class.blink::Member.2435", %"class.blink::Member.2138", %"class.blink::Member.2138" }
%"class.blink::Member.2435" = type { %"class.blink::MemberBase.2436" }
%"class.blink::MemberBase.2436" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2142" = type { %"class.WTF::ListHashSet.base.2152", [7 x i8] }
%"class.WTF::ListHashSet.base.2152" = type <{ %"class.WTF::HashTable.2147", %"class.blink::Member.2149", %"class.blink::Member.2149", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2147" = type <{ %"class.blink::Member.2149"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2149" = type { %"class.blink::MemberBase.2150" }
%"class.blink::MemberBase.2150" = type { %"class.blink::HeapListHashSetNode.2151"* }
%"class.blink::HeapListHashSetNode.2151" = type { %"class.blink::Member.2431", %"class.blink::Member.2149", %"class.blink::Member.2149" }
%"class.blink::Member.2431" = type { %"class.blink::MemberBase.2432" }
%"class.blink::MemberBase.2432" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2153" = type { %"class.WTF::ListHashSet.base.2163", [7 x i8] }
%"class.WTF::ListHashSet.base.2163" = type <{ %"class.WTF::HashTable.2158", %"class.blink::Member.2160", %"class.blink::Member.2160", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2158" = type <{ %"class.blink::Member.2160"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::HeapListHashSetNode.2162"* }
%"class.blink::HeapListHashSetNode.2162" = type { %"class.blink::Member.2427", %"class.blink::Member.2160", %"class.blink::Member.2160" }
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2164" = type { %"class.WTF::ListHashSet.base.2174", [7 x i8] }
%"class.WTF::ListHashSet.base.2174" = type <{ %"class.WTF::HashTable.2169", %"class.blink::Member.2171", %"class.blink::Member.2171", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2169" = type <{ %"class.blink::Member.2171"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2171" = type { %"class.blink::MemberBase.2172" }
%"class.blink::MemberBase.2172" = type { %"class.blink::HeapListHashSetNode.2173"* }
%"class.blink::HeapListHashSetNode.2173" = type { %"class.blink::Member.2423", %"class.blink::Member.2171", %"class.blink::Member.2171" }
%"class.blink::Member.2423" = type { %"class.blink::MemberBase.2424" }
%"class.blink::MemberBase.2424" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2175" = type { %"class.WTF::ListHashSet.base.2185", [7 x i8] }
%"class.WTF::ListHashSet.base.2185" = type <{ %"class.WTF::HashTable.2180", %"class.blink::Member.2182", %"class.blink::Member.2182", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2180" = type <{ %"class.blink::Member.2182"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::HeapListHashSetNode.2184"* }
%"class.blink::HeapListHashSetNode.2184" = type { %"class.blink::Member.2419", %"class.blink::Member.2182", %"class.blink::Member.2182" }
%"class.blink::Member.2419" = type { %"class.blink::MemberBase.2420" }
%"class.blink::MemberBase.2420" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2186" = type { %"class.WTF::ListHashSet.base.2196", [7 x i8] }
%"class.WTF::ListHashSet.base.2196" = type <{ %"class.WTF::HashTable.2191", %"class.blink::Member.2193", %"class.blink::Member.2193", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2191" = type <{ %"class.blink::Member.2193"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2193" = type { %"class.blink::MemberBase.2194" }
%"class.blink::MemberBase.2194" = type { %"class.blink::HeapListHashSetNode.2195"* }
%"class.blink::HeapListHashSetNode.2195" = type { %"class.blink::Member.2312", %"class.blink::Member.2193", %"class.blink::Member.2193" }
%"class.blink::HeapListHashSet.2197" = type { %"class.WTF::ListHashSet.base.2207", [7 x i8] }
%"class.WTF::ListHashSet.base.2207" = type <{ %"class.WTF::HashTable.2202", %"class.blink::Member.2204", %"class.blink::Member.2204", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2202" = type <{ %"class.blink::Member.2204"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2204" = type { %"class.blink::MemberBase.2205" }
%"class.blink::MemberBase.2205" = type { %"class.blink::HeapListHashSetNode.2206"* }
%"class.blink::HeapListHashSetNode.2206" = type { %"class.blink::Member.2413", %"class.blink::Member.2204", %"class.blink::Member.2204" }
%"class.blink::Member.2413" = type { %"class.blink::MemberBase.2414" }
%"class.blink::MemberBase.2414" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2208" = type { %"class.WTF::ListHashSet.base.2218", [7 x i8] }
%"class.WTF::ListHashSet.base.2218" = type <{ %"class.WTF::HashTable.2213", %"class.blink::Member.2215", %"class.blink::Member.2215", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2213" = type <{ %"class.blink::Member.2215"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2215" = type { %"class.blink::MemberBase.2216" }
%"class.blink::MemberBase.2216" = type { %"class.blink::HeapListHashSetNode.2217"* }
%"class.blink::HeapListHashSetNode.2217" = type { %"class.blink::Member.2409", %"class.blink::Member.2215", %"class.blink::Member.2215" }
%"class.blink::Member.2409" = type { %"class.blink::MemberBase.2410" }
%"class.blink::MemberBase.2410" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2219" = type { %"class.WTF::ListHashSet.base.2229", [7 x i8] }
%"class.WTF::ListHashSet.base.2229" = type <{ %"class.WTF::HashTable.2224", %"class.blink::Member.2226", %"class.blink::Member.2226", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2224" = type <{ %"class.blink::Member.2226"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2226" = type { %"class.blink::MemberBase.2227" }
%"class.blink::MemberBase.2227" = type { %"class.blink::HeapListHashSetNode.2228"* }
%"class.blink::HeapListHashSetNode.2228" = type { %"class.blink::Member.2405", %"class.blink::Member.2226", %"class.blink::Member.2226" }
%"class.blink::Member.2405" = type { %"class.blink::MemberBase.2406" }
%"class.blink::MemberBase.2406" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2230" = type { %"class.WTF::ListHashSet.base.2240", [7 x i8] }
%"class.WTF::ListHashSet.base.2240" = type <{ %"class.WTF::HashTable.2235", %"class.blink::Member.2237", %"class.blink::Member.2237", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2235" = type <{ %"class.blink::Member.2237"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2237" = type { %"class.blink::MemberBase.2238" }
%"class.blink::MemberBase.2238" = type { %"class.blink::HeapListHashSetNode.2239"* }
%"class.blink::HeapListHashSetNode.2239" = type { %"class.blink::Member.2401", %"class.blink::Member.2237", %"class.blink::Member.2237" }
%"class.blink::Member.2401" = type { %"class.blink::MemberBase.2402" }
%"class.blink::MemberBase.2402" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2241" = type { %"class.WTF::ListHashSet.base.2251", [7 x i8] }
%"class.WTF::ListHashSet.base.2251" = type <{ %"class.WTF::HashTable.2246", %"class.blink::Member.2248", %"class.blink::Member.2248", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2246" = type <{ %"class.blink::Member.2248"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2248" = type { %"class.blink::MemberBase.2249" }
%"class.blink::MemberBase.2249" = type { %"class.blink::HeapListHashSetNode.2250"* }
%"class.blink::HeapListHashSetNode.2250" = type { %"class.blink::Member.2397", %"class.blink::Member.2248", %"class.blink::Member.2248" }
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2252" = type { %"class.WTF::ListHashSet.base.2262", [7 x i8] }
%"class.WTF::ListHashSet.base.2262" = type <{ %"class.WTF::HashTable.2257", %"class.blink::Member.2259", %"class.blink::Member.2259", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2257" = type <{ %"class.blink::Member.2259"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2259" = type { %"class.blink::MemberBase.2260" }
%"class.blink::MemberBase.2260" = type { %"class.blink::HeapListHashSetNode.2261"* }
%"class.blink::HeapListHashSetNode.2261" = type { %"class.blink::Member.2393", %"class.blink::Member.2259", %"class.blink::Member.2259" }
%"class.blink::Member.2393" = type { %"class.blink::MemberBase.2394" }
%"class.blink::MemberBase.2394" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2263" = type { %"class.WTF::ListHashSet.base.2273", [7 x i8] }
%"class.WTF::ListHashSet.base.2273" = type <{ %"class.WTF::HashTable.2268", %"class.blink::Member.2270", %"class.blink::Member.2270", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2268" = type <{ %"class.blink::Member.2270"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2270" = type { %"class.blink::MemberBase.2271" }
%"class.blink::MemberBase.2271" = type { %"class.blink::HeapListHashSetNode.2272"* }
%"class.blink::HeapListHashSetNode.2272" = type { %"class.blink::Member.2389", %"class.blink::Member.2270", %"class.blink::Member.2270" }
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2274" = type { %"class.WTF::ListHashSet.base.2284", [7 x i8] }
%"class.WTF::ListHashSet.base.2284" = type <{ %"class.WTF::HashTable.2279", %"class.blink::Member.2281", %"class.blink::Member.2281", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2279" = type <{ %"class.blink::Member.2281"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::HeapListHashSetNode.2283"* }
%"class.blink::HeapListHashSetNode.2283" = type { %"class.blink::Member.2314", %"class.blink::Member.2281", %"class.blink::Member.2281" }
%"class.blink::HeapListHashSet.2285" = type { %"class.WTF::ListHashSet.base.2295", [7 x i8] }
%"class.WTF::ListHashSet.base.2295" = type <{ %"class.WTF::HashTable.2290", %"class.blink::Member.2292", %"class.blink::Member.2292", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2290" = type <{ %"class.blink::Member.2292"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2292" = type { %"class.blink::MemberBase.2293" }
%"class.blink::MemberBase.2293" = type { %"class.blink::HeapListHashSetNode.2294"* }
%"class.blink::HeapListHashSetNode.2294" = type { %"class.blink::Member.2297", %"class.blink::Member.2292", %"class.blink::Member.2292" }
%class.scoped_refptr.2296 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2297" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2299" = type { %"class.blink::MemberBase.2300" }
%"class.blink::MemberBase.2300" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1984", %"class.WTF::Vector.1460", i32, [4 x i8], %"class.blink::HeapHashMap.2303", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2303" = type { %"class.WTF::HashMap.2306" }
%"class.WTF::HashMap.2306" = type { %"class.WTF::HashTable.2307" }
%"class.WTF::HashTable.2307" = type <{ %"struct.WTF::KeyValuePair.2309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2309" = type opaque
%"class.blink::Member.2310" = type { %"class.blink::MemberBase.2311" }
%"class.blink::MemberBase.2311" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2312" = type { %"class.blink::MemberBase.2313" }
%"class.blink::MemberBase.2313" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2314" = type { %"class.blink::MemberBase.2315" }
%"class.blink::MemberBase.2315" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2322" }
%"class.blink::Member.2322" = type { %"class.blink::MemberBase.2323" }
%"class.blink::MemberBase.2323" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2947" }
%"class.mojo::Remote.2947" = type { %"class.mojo::internal::InterfacePtrState.2948" }
%"class.mojo::internal::InterfacePtrState.2948" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2949" }
%"class.std::__1::unique_ptr.2949" = type { %"class.std::__1::__compressed_pair.2950" }
%"class.std::__1::__compressed_pair.2950" = type { %"struct.std::__1::__compressed_pair_elem.2951" }
%"struct.std::__1::__compressed_pair_elem.2951" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2324" = type { %"class.std::__1::__compressed_pair.2325" }
%"class.std::__1::__compressed_pair.2325" = type { %"struct.std::__1::__compressed_pair_elem.2326" }
%"struct.std::__1::__compressed_pair_elem.2326" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2330" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2331" = type { %"class.std::__1::__compressed_pair.2332" }
%"class.std::__1::__compressed_pair.2332" = type { %"struct.std::__1::__compressed_pair_elem.2333" }
%"struct.std::__1::__compressed_pair_elem.2333" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2337" = type { %"class.std::__1::__compressed_pair.2338" }
%"class.std::__1::__compressed_pair.2338" = type { %"struct.std::__1::__compressed_pair_elem.2339" }
%"struct.std::__1::__compressed_pair_elem.2339" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2343" }
%"class.blink::Member.2343" = type { %"class.blink::MemberBase.2344" }
%"class.blink::MemberBase.2344" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2957" }
%"class.mojo::AssociatedRemote.2957" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2958" }
%"class.mojo::internal::AssociatedInterfacePtrState.2958" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2959" }
%"class.std::__1::unique_ptr.2959" = type { %"class.std::__1::__compressed_pair.2960" }
%"class.std::__1::__compressed_pair.2960" = type { %"struct.std::__1::__compressed_pair_elem.2961" }
%"struct.std::__1::__compressed_pair_elem.2961" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2345" = type { %"class.blink::Member.2346" }
%"class.blink::Member.2346" = type { %"class.blink::MemberBase.2347" }
%"class.blink::MemberBase.2347" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2967" }
%"class.mojo::AssociatedRemote.2967" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2968" }
%"class.mojo::internal::AssociatedInterfacePtrState.2968" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2969" }
%"class.std::__1::unique_ptr.2969" = type { %"class.std::__1::__compressed_pair.2970" }
%"class.std::__1::__compressed_pair.2970" = type { %"struct.std::__1::__compressed_pair_elem.2971" }
%"struct.std::__1::__compressed_pair_elem.2971" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2348" }
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2977", %"class.blink::Member.1984", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2977" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2978" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1706" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2978" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2350" = type { %"class.blink::Member.2351" }
%"class.blink::Member.2351" = type { %"class.blink::MemberBase.2352" }
%"class.blink::MemberBase.2352" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2981", %"class.blink::Member.1984", %"class.mojo::AssociatedReceiver.2982" }
%"class.blink::ThreadState::PrefinalizerRegistration.2981" = type { i8 }
%"class.mojo::AssociatedReceiver.2982" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2983" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2983" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2353" }
%"class.blink::Member.2353" = type { %"class.blink::MemberBase.2354" }
%"class.blink::MemberBase.2354" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2986", %"class.blink::Member.1984", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2986" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1881, %"class.std::__1::unique_ptr.1706", %"class.base::WeakPtrFactory.2987" }
%"class.base::WeakPtrFactory.2987" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2355" = type { %"class.blink::Member.2356" }
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2990", %"class.blink::Member.1984", %"class.mojo::AssociatedReceiver.2991" }
%"class.blink::ThreadState::PrefinalizerRegistration.2990" = type { i8 }
%"class.mojo::AssociatedReceiver.2991" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2992" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2992" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::HeapHashMap.2366"* }
%"class.blink::HeapHashMap.2366" = type opaque
%"class.mojo::StructPtr.2367" = type { %"class.std::__1::unique_ptr.2368" }
%"class.std::__1::unique_ptr.2368" = type { %"class.std::__1::__compressed_pair.2369" }
%"class.std::__1::__compressed_pair.2369" = type { %"struct.std::__1::__compressed_pair_elem.2370" }
%"struct.std::__1::__compressed_pair_elem.2370" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2371", %"class.mojo::InlinedStructPtr.2372" }
%"class.mojo::InlinedStructPtr.2371" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2372" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2376" = type { %"class.blink::MemberBase.2377" }
%"class.blink::MemberBase.2377" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2378" = type { %"class.absl::optional_internal::optional_data.2379" }
%"class.absl::optional_internal::optional_data.2379" = type { %"class.absl::optional_internal::optional_data_base.2380" }
%"class.absl::optional_internal::optional_data_base.2380" = type { %"class.absl::optional_internal::optional_data_dtor_base.2381" }
%"class.absl::optional_internal::optional_data_dtor_base.2381" = type { i8, %union.anon.2382 }
%union.anon.2382 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1812", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1830" }
%"class.base::internal::flat_tree.1830" = type { %"class.std::__1::vector.1831" }
%"class.std::__1::vector.1831" = type { %"class.std::__1::__vector_base.1832" }
%"class.std::__1::__vector_base.1832" = type { %"struct.std::__1::pair.1833"*, %"struct.std::__1::pair.1833"*, %"class.std::__1::__compressed_pair.1834" }
%"struct.std::__1::pair.1833" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1834" = type { %"struct.std::__1::__compressed_pair_elem.1835" }
%"struct.std::__1::__compressed_pair_elem.1835" = type { %"struct.std::__1::pair.1833"* }
%"class.blink::Member.1986" = type { %"class.blink::MemberBase.1987" }
%"class.blink::MemberBase.1987" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1988" = type { %"class.absl::optional_internal::optional_data.1989" }
%"class.absl::optional_internal::optional_data.1989" = type { %"class.absl::optional_internal::optional_data_base.1990" }
%"class.absl::optional_internal::optional_data_base.1990" = type { %"class.absl::optional_internal::optional_data_dtor_base.1991" }
%"class.absl::optional_internal::optional_data_dtor_base.1991" = type { i8, %union.anon.1992 }
%union.anon.1992 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1993" = type { %"class.absl::optional_internal::optional_data.1994" }
%"class.absl::optional_internal::optional_data.1994" = type { %"class.absl::optional_internal::optional_data_base.1995" }
%"class.absl::optional_internal::optional_data_base.1995" = type { %"class.absl::optional_internal::optional_data_dtor_base.1996" }
%"class.absl::optional_internal::optional_data_dtor_base.1996" = type { i8, %union.anon.1997 }
%union.anon.1997 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1998" }
%"class.blink::HeapHashSet.1998" = type { %"class.WTF::HashSet.2001" }
%"class.WTF::HashSet.2001" = type { %"class.WTF::HashTable.2002" }
%"class.WTF::HashTable.2002" = type <{ %"class.blink::WeakMember.2004"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2004" = type opaque
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1816", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.1816" = type { %"class.std::__1::__vector_base.1817" }
%"class.std::__1::__vector_base.1817" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1825" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1818", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1818" = type { %"class.std::__1::__vector_base.1819" }
%"class.std::__1::__vector_base.1819" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1820" }
%"class.std::__1::__compressed_pair.1820" = type { %"struct.std::__1::__compressed_pair_elem.1821" }
%"struct.std::__1::__compressed_pair_elem.1821" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1825" = type { %"struct.std::__1::__compressed_pair_elem.1826" }
%"struct.std::__1::__compressed_pair_elem.1826" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope" = type { i8 }
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.1794", %"class.WTF::String"* }
%"class.blink::HeapVector.1794" = type { %"class.WTF::Vector.1797" }
%"class.WTF::Vector.1797" = type { %"class.WTF::VectorBuffer.1798" }
%"class.WTF::VectorBuffer.1798" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.blink::ChildListMutationAccumulator" = type <{ %"class.blink::Member.318", %"class.blink::HeapVector.1794", %"class.blink::HeapVector.1794", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.1802", i32, [4 x i8] }>
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"class.blink::MutationObserverInterestGroup"* }
%"class.blink::MutationObserverInterestGroup" = type opaque
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1780" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1780" = type { %"class.v8::TracedReference.1781" }
%"class.v8::TracedReference.1781" = type { %"class.v8::BasicTracedReference.1782" }
%"class.v8::BasicTracedReference.1782" = type { %"class.v8::TracedReferenceBase" }
%"class.absl::optional.2736" = type { %"class.absl::optional_internal::optional_data.2737" }
%"class.absl::optional_internal::optional_data.2737" = type { %"class.absl::optional_internal::optional_data_base.2738" }
%"class.absl::optional_internal::optional_data_base.2738" = type { %"class.absl::optional_internal::optional_data_dtor_base.2739" }
%"class.absl::optional_internal::optional_data_dtor_base.2739" = type { i8, %union.anon.2740 }
%union.anon.2740 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.WTF::StringAppend.1783" = type { %"class.WTF::StringAppend.1784", %"class.WTF::String" }
%"class.WTF::StringAppend.1784" = type { %"class.WTF::StringAppend.1785", i8* }
%"class.WTF::StringAppend.1785" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1783", i8* }
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.WTF::StringTypeAdapter.3039" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::HeapVector.1786" = type { %"class.WTF::Vector.1789" }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791", [88 x i8] }
%"class.blink::MutationEvent" = type <{ %"class.blink::Event", %"class.blink::Member.318", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, [6 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2878", %"class.blink::Member.2878", %"class.blink::Member.2880", %"class.blink::Member.2882", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2873" }
%"class.absl::optional.2873" = type { %"class.absl::optional_internal::optional_data.2874" }
%"class.absl::optional_internal::optional_data.2874" = type { %"class.absl::optional_internal::optional_data_base.2875" }
%"class.absl::optional_internal::optional_data_base.2875" = type { %"class.absl::optional_internal::optional_data_dtor_base.2876" }
%"class.absl::optional_internal::optional_data_dtor_base.2876" = type { i8, %union.anon.2877 }
%union.anon.2877 = type { i64 }
%"class.blink::Member.2878" = type { %"class.blink::MemberBase.2879" }
%"class.blink::MemberBase.2879" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2880" = type { %"class.blink::MemberBase.2881" }
%"class.blink::MemberBase.2881" = type { %"class.blink::Event"* }
%"class.blink::Member.2882" = type { %"class.blink::MemberBase.2883" }
%"class.blink::MemberBase.2883" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::ContainerNode::AdoptAndInsertBefore" = type { i8 }
%"class.blink::ContainerNode::AdoptAndAppendChild" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2686", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2687", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2686" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2687" = type { %"class.absl::optional_internal::optional_data.2688" }
%"class.absl::optional_internal::optional_data.2688" = type { %"class.absl::optional_internal::optional_data_base.2689" }
%"class.absl::optional_internal::optional_data_base.2689" = type { %"class.absl::optional_internal::optional_data_dtor_base.2690" }
%"class.absl::optional_internal::optional_data_dtor_base.2690" = type { i8, %union.anon.2691 }
%union.anon.2691 = type { %"class.blink::FloatSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2692, %"class.WTF::Vector.2693", %"class.std::__1::unique_ptr.2698", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2719, %"class.blink::Persistent.2720" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2692 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.2693" = type { %"class.WTF::VectorBuffer.2694" }
%"class.WTF::VectorBuffer.2694" = type { %"class.WTF::VectorBufferBase.2695", [8 x i8] }
%"class.WTF::VectorBufferBase.2695" = type { %class.scoped_refptr.2692*, i32, i32 }
%"class.std::__1::unique_ptr.2698" = type { %"class.std::__1::__compressed_pair.2699" }
%"class.std::__1::__compressed_pair.2699" = type { %"struct.std::__1::__compressed_pair_elem.2700" }
%"struct.std::__1::__compressed_pair_elem.2700" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2701", %"class.absl::optional.2706", %"class.absl::optional.2711" }
%"class.absl::optional.2701" = type { %"class.absl::optional_internal::optional_data.2702" }
%"class.absl::optional_internal::optional_data.2702" = type { %"class.absl::optional_internal::optional_data_base.2703" }
%"class.absl::optional_internal::optional_data_base.2703" = type { %"class.absl::optional_internal::optional_data_dtor_base.2704" }
%"class.absl::optional_internal::optional_data_dtor_base.2704" = type { i8, %union.anon.2705 }
%union.anon.2705 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2706" = type { %"class.absl::optional_internal::optional_data.2707" }
%"class.absl::optional_internal::optional_data.2707" = type { %"class.absl::optional_internal::optional_data_base.2708" }
%"class.absl::optional_internal::optional_data_base.2708" = type { %"class.absl::optional_internal::optional_data_dtor_base.2709" }
%"class.absl::optional_internal::optional_data_dtor_base.2709" = type { i8, [3 x i8], %union.anon.2710 }
%union.anon.2710 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2711" = type { %"class.absl::optional_internal::optional_data.2712" }
%"class.absl::optional_internal::optional_data.2712" = type { %"class.absl::optional_internal::optional_data_base.2713" }
%"class.absl::optional_internal::optional_data_base.2713" = type { %"class.absl::optional_internal::optional_data_dtor_base.2714" }
%"class.absl::optional_internal::optional_data_dtor_base.2714" = type { i8, %union.anon.2715 }
%union.anon.2715 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2719 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1634", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1634" = type { %"class.std::__1::__compressed_pair.1635" }
%"class.std::__1::__compressed_pair.1635" = type { %"struct.std::__1::__compressed_pair_elem.1636" }
%"struct.std::__1::__compressed_pair_elem.1636" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1637", %"class.absl::optional.1646" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1646" = type { %"class.absl::optional_internal::optional_data.1647" }
%"class.absl::optional_internal::optional_data.1647" = type { %"class.absl::optional_internal::optional_data_base.1648" }
%"class.absl::optional_internal::optional_data_base.1648" = type { %"class.absl::optional_internal::optional_data_dtor_base.1649" }
%"class.absl::optional_internal::optional_data_dtor_base.1649" = type { i8, %union.anon.1650 }
%union.anon.1650 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.2720" = type { %"class.blink::PersistentBase.2721" }
%"class.blink::PersistentBase.2721" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2724", %"struct.blink::PhysicalRect", %"class.blink::Member.2734" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.2724" = type { %"class.std::__1::__compressed_pair.2725" }
%"class.std::__1::__compressed_pair.2725" = type { %"struct.std::__1::__compressed_pair_elem.2726" }
%"struct.std::__1::__compressed_pair_elem.2726" = type { %"class.WTF::HashSet.2727"* }
%"class.WTF::HashSet.2727" = type { %"class.WTF::HashTable.2728" }
%"class.WTF::HashTable.2728" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2734" = type { %"class.blink::MemberBase.2735" }
%"class.blink::MemberBase.2735" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1318", %"class.blink::Member.2741", i32, [4 x i8] }>
%"class.blink::Member.2741" = type { %"class.blink::MemberBase.2742" }
%"class.blink::MemberBase.2742" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3021" }
%"class.WTF::HashMap.3021" = type { %"class.WTF::HashTable.3022" }
%"class.WTF::HashTable.3022" = type <{ %"struct.WTF::KeyValuePair.3025"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3025" = type <{ %"class.blink::UntracedMember", i32, [4 x i8] }>
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2763", %"class.blink::Member.2765", %"class.blink::Member.2790", %"class.blink::Member.2808", %"class.blink::Member.2810" }
%"class.blink::Member.2763" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2765" = type { %"class.blink::MemberBase.2766" }
%"class.blink::MemberBase.2766" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type { %"class.blink::Member.2769", %"class.blink::HeapHashMap.2771", %"class.blink::HeapHashMap.2781" }
%"class.blink::Member.2769" = type { %"class.blink::MemberBase.2770" }
%"class.blink::MemberBase.2770" = type { %"class.blink::NodeList"* }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2771" = type { %"class.WTF::HashMap.2774" }
%"class.WTF::HashMap.2774" = type { %"class.WTF::HashTable.2775" }
%"class.WTF::HashTable.2775" = type <{ %"struct.WTF::KeyValuePair.2777"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2777" = type { %"struct.std::__1::pair.2778", %"class.blink::Member.2779" }
%"struct.std::__1::pair.2778" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::Member.2779" = type { %"class.blink::MemberBase.2780" }
%"class.blink::MemberBase.2780" = type { %"class.blink::LiveNodeListBase"* }
%"class.blink::LiveNodeListBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", i16, [6 x i8] }>
%"class.blink::HeapHashMap.2781" = type { %"class.WTF::HashMap.2784" }
%"class.WTF::HashMap.2784" = type { %"class.WTF::HashTable.2785" }
%"class.WTF::HashTable.2785" = type <{ %"struct.WTF::KeyValuePair.2787"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2787" = type { %"class.blink::QualifiedName", %"class.blink::Member.2788" }
%"class.blink::Member.2788" = type { %"class.blink::MemberBase.2789" }
%"class.blink::MemberBase.2789" = type { %"class.blink::TagCollectionNS"* }
%"class.blink::TagCollectionNS" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.2745", %"class.blink::CollectionItemsCache" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", i16 }>
%"class.blink::Member.2745" = type { %"class.blink::MemberBase.2746" }
%"class.blink::MemberBase.2746" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.2749", %"class.blink::HeapHashMap.2749" }
%"class.blink::HeapHashMap.2749" = type { %"class.WTF::HashMap.2752" }
%"class.WTF::HashMap.2752" = type { %"class.WTF::HashTable.2753" }
%"class.WTF::HashTable.2753" = type <{ %"struct.WTF::KeyValuePair.2755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2755" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.2756" }
%"class.blink::Member.2756" = type { %"class.blink::MemberBase.2757" }
%"class.blink::MemberBase.2757" = type { %"class.blink::HeapVector.365"* }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector.365" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.343", i32, i32 }
%"class.blink::Member.2790" = type { %"class.blink::MemberBase.2791" }
%"class.blink::MemberBase.2791" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2794", %"class.blink::HeapHashSet.2802" }
%"class.blink::HeapVector.2794" = type { %"class.WTF::Vector.2797" }
%"class.WTF::Vector.2797" = type { %"class.WTF::VectorBuffer.2798" }
%"class.WTF::VectorBuffer.2798" = type { %"class.WTF::VectorBufferBase.2799" }
%"class.WTF::VectorBufferBase.2799" = type { %"class.blink::Member.2800"*, i32, i32 }
%"class.blink::Member.2800" = type { %"class.blink::MemberBase.2889" }
%"class.blink::MemberBase.2889" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2802" = type { %"class.WTF::HashSet.2805" }
%"class.WTF::HashSet.2805" = type { %"class.WTF::HashTable.2806" }
%"class.WTF::HashTable.2806" = type <{ %"class.blink::Member.2800"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2808" = type { %"class.blink::MemberBase.2809" }
%"class.blink::MemberBase.2809" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2810" = type { %"class.blink::MemberBase.2811" }
%"class.blink::MemberBase.2811" = type { %"class.blink::HeapHashSet.2812"* }
%"class.blink::HeapHashSet.2812" = type opaque
%"class.blink::ChildNodeList" = type { %"class.blink::NodeList", %"class.blink::Member.314", %"class.blink::CollectionIndexCache.2857" }
%"class.blink::CollectionIndexCache.2857" = type { i32 (...)**, %"class.blink::Member.318", i32, i32 }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::SelectorQuery" = type <{ %"class.blink::CSSSelectorList", %"class.WTF::Vector.2758", %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.WTF::Vector.2758" = type { %"class.WTF::VectorBuffer.2759" }
%"class.WTF::VectorBuffer.2759" = type { %"class.WTF::VectorBufferBase.2760" }
%"class.WTF::VectorBufferBase.2760" = type { %"class.blink::CSSSelector"**, i32, i32 }
%"class.blink::StaticNodeTypeList" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::StyleRecalcChange" = type <{ i32, i8, i8, [2 x i8] }>
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2813 }
%class.scoped_refptr.2813 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2814", %"class.WTF::String", %"class.std::__1::unique_ptr.2816" }
%"class.WTF::RefCounted.2814" = type { %"class.base::RefCounted.2815" }
%"class.base::RefCounted.2815" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2816" = type { %"class.std::__1::__compressed_pair.2817" }
%"class.std::__1::__compressed_pair.2817" = type { %"struct.std::__1::__compressed_pair_elem.2818" }
%"struct.std::__1::__compressed_pair_elem.2818" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2819", %"class.std::__1::unique_ptr.2830", %"class.WTF::Vector.2836", i8, i32 }
%"class.std::__1::unique_ptr.2819" = type { %"class.std::__1::__compressed_pair.2820" }
%"class.std::__1::__compressed_pair.2820" = type { %"struct.std::__1::__compressed_pair_elem.2821" }
%"struct.std::__1::__compressed_pair_elem.2821" = type { %"class.WTF::Vector.2822"* }
%"class.WTF::Vector.2822" = type { %"class.WTF::VectorBuffer.2823" }
%"class.WTF::VectorBuffer.2823" = type { %"class.WTF::VectorBufferBase.2824" }
%"class.WTF::VectorBufferBase.2824" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2830" = type { %"class.std::__1::__compressed_pair.2831" }
%"class.std::__1::__compressed_pair.2831" = type { %"struct.std::__1::__compressed_pair_elem.2832" }
%"struct.std::__1::__compressed_pair_elem.2832" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2836" = type { %"class.WTF::VectorBuffer.2837" }
%"class.WTF::VectorBuffer.2837" = type { %"class.WTF::VectorBufferBase.2824", [32 x i8] }
%"class.blink::WhitespaceAttacher" = type <{ %"class.blink::Element"*, %"class.blink::Text"*, i8, i8, [6 x i8] }>
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.1794", %"class.blink::HeapVector.1794", i8, %"class.blink::HeapLinkedHashSet.2843" }
%"class.blink::HeapLinkedHashSet.2843" = type { %"class.WTF::LinkedHashSet.2846" }
%"class.WTF::LinkedHashSet.2846" = type { %"class.WTF::HashMap.2847", %"class.WTF::VectorBackedLinkedList.2851" }
%"class.WTF::HashMap.2847" = type { %"class.WTF::HashTable.2848" }
%"class.WTF::HashTable.2848" = type <{ %"struct.WTF::KeyValuePair.2850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2850" = type opaque
%"class.WTF::VectorBackedLinkedList.2851" = type { %"class.WTF::Vector.2852", i32, i32 }
%"class.WTF::Vector.2852" = type { %"class.WTF::VectorBuffer.2853" }
%"class.WTF::VectorBuffer.2853" = type { %"class.WTF::VectorBufferBase.2854" }
%"class.WTF::VectorBufferBase.2854" = type { %"class.WTF::VectorBackedLinkedListNode.2855"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2855" = type opaque
%"class.blink::HTMLTagCollection" = type { %"class.blink::TagCollection", %"class.WTF::AtomicString" }
%"class.blink::TagCollection" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString" }
%"class.blink::NameNodeList" = type { %"class.blink::LiveNodeList", %"class.WTF::AtomicString" }
%"class.blink::LiveNodeList" = type { %"class.blink::NodeList", %"class.blink::LiveNodeListBase.base", %"class.blink::CollectionItemsCache.2858" }
%"class.blink::CollectionItemsCache.2858" = type { %"class.blink::CollectionIndexCache.2859", i8, %"class.blink::HeapVector.365" }
%"class.blink::CollectionIndexCache.2859" = type { i32 (...)**, %"class.blink::Member.343", i32, i32 }
%"class.blink::ClassCollection" = type { %"class.blink::HTMLCollection", %"class.blink::SpaceSplitString" }
%"class.blink::RadioNodeList" = type { %"class.blink::LiveNodeList", %"class.WTF::AtomicString" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3034" }
%"class.WTF::Vector.3034" = type { %"class.WTF::VectorBuffer.3035" }
%"class.WTF::VectorBuffer.3035" = type { %"class.WTF::VectorBufferBase.3036", [64 x i8] }
%"class.WTF::VectorBufferBase.3036" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2866, %"class.blink::Member.2867", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2871" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2866 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2867" = type { %"class.blink::MemberBase.2868" }
%"class.blink::MemberBase.2868" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2869" }
%"class.blink::Persistent.2869" = type { %"class.blink::PersistentBase.2870" }
%"class.blink::PersistentBase.2870" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.2871" = type { %"class.base::StrongAlias.2872" }
%"class.base::StrongAlias.2872" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2884", i8, [7 x i8] }>
%"class.blink::Member.2884" = type { %"class.blink::MemberBase.2885" }
%"class.blink::MemberBase.2885" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.3041" = type { %"class.WTF::StringTypeAdapter.3042" }
%"class.WTF::StringTypeAdapter.3042" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.3006", %"class.blink::FreeList", %"class.WTF::Vector.3011" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.3006" = type { %"class.WTF::VectorBuffer.3007" }
%"class.WTF::VectorBuffer.3007" = type { %"class.WTF::VectorBufferBase.3008" }
%"class.WTF::VectorBufferBase.3008" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.3011" = type { %"class.WTF::VectorBuffer.3012" }
%"class.WTF::VectorBuffer.3012" = type { %"class.WTF::VectorBufferBase.3013" }
%"class.WTF::VectorBufferBase.3013" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapHashTableBacking.3060" = type { i8 }

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink13ContainerNode16InsertNodeVectorINS0_20AdoptAndInsertBeforeEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_ = comdat any

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN5blink13ContainerNode16InsertNodeVectorINS0_19AdoptAndAppendChildEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_ = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink4Node18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink4Node23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_21HTMLFrameOwnerElementEEELj10ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF14HashCountedSetIN5blink14UntracedMemberINS1_4NodeEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE5eraseERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findEPS3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_14HTMLCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_ = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_17HTMLTagCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_13TagCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheERNS_13ContainerNodeERKN3WTF12AtomicStringES6_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_15TagCollectionNSEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_15TagCollectionNSEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_15TagCollectionNSEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15TagCollectionNSEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_12NameNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_15ClassCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_13RadioNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink13ContainerNodeE = hidden unnamed_addr constant { [78 x i8*] } { [78 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*)* @_ZN5blink13ContainerNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*)* @_ZN5blink13ContainerNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)* @_ZNK5blink13ContainerNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Node"*)* @_ZNK5blink4Node18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*, i32)* @_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink13ContainerNode16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)* @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*)* @_ZN5blink13ContainerNode11RemovedFromERS0_ to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Document"*)* @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink13ContainerNode15ChildrenChangedERKNS0_14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode24GetLayoutBoxForScrollingEv to i8*)] }, align 8
@.str = private unnamed_addr constant [43 x i8] c"The new child element is a pseudo-element.\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Nodes of type '\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"' may not be inserted inside nodes of type '\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"The node to be replaced is null.\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"The node to be removed is not a child of this node.\00", align 1
@.str.6 = private unnamed_addr constant [106 x i8] c"The node to be removed is no longer a child of this node. Perhaps it was moved in a 'blur' event handler?\00", align 1
@.str.7 = private unnamed_addr constant [106 x i8] c"The node to be removed is no longer a child of this node. Perhaps it was moved in response to a mutation?\00", align 1
@_ZN5blink19style_change_reason12kPseudoClassE = external constant [0 x i8], align 1
@_ZN5blink23style_change_extra_data7g_focusE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23style_change_extra_data15g_focus_visibleE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23style_change_extra_data14g_focus_withinE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23style_change_extra_data6g_dragE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.8 = private unnamed_addr constant [43 x i8] c"The new child element contains the parent.\00", align 1
@.str.9 = private unnamed_addr constant [82 x i8] c"The node before which the new node is to be inserted is not a child of this node.\00", align 1
@.str.10 = private unnamed_addr constant [53 x i8] c"The node to be replaced is not a child of this node.\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@.str.11 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.17 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.20 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E = external local_unnamed_addr global i32, align 4
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink14UntracedMemberINS2_4NodeEEEjEEEEPKcv = private unnamed_addr constant [115 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::UntracedMember<blink::Node>, unsigned int>]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZN5blink8Document20global_tree_version_E = external local_unnamed_addr global i64, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase29is_css_focus_visible_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink16event_type_names16kDOMNodeInsertedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names28kDOMNodeInsertedIntoDocumentE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink16event_type_names15kDOMNodeRemovedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names27kDOMNodeRemovedFromDocumentE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23NodeChildRemovalTracker5last_E = external local_unnamed_addr global %"class.blink::NodeChildRemovalTracker"*, align 8
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/core/dom/node_rare_data.h\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"bit_field_.get<RestyleFlags>()\00", align 1
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink4Node18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.26 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.29 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS1_6MemberINS1_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [616 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<std::__1::pair<blink::CollectionType, WTF::AtomicString>, WTF::KeyValuePair<std::__1::pair<blink::CollectionType, WTF::AtomicString>, blink::Member<blink::LiveNodeListBase> >, WTF::KeyValuePairKeyExtractor, blink::NodeListsNodeData::NodeListAtomicCacheMapEntryHash, WTF::HashMapValueTraits<WTF::HashTraits<std::__1::pair<blink::CollectionType, WTF::AtomicString> >, WTF::HashTraits<blink::Member<blink::LiveNodeListBase> > >, WTF::HashTraits<std::__1::pair<blink::CollectionType, WTF::AtomicString> >, blink::HeapAllocator> >]\00", align 1
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_15TagCollectionNSEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [435 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::QualifiedName, WTF::KeyValuePair<blink::QualifiedName, blink::Member<blink::TagCollectionNS> >, WTF::KeyValuePairKeyExtractor, blink::QualifiedNameHash, WTF::HashMapValueTraits<WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<blink::Member<blink::TagCollectionNS> > >, WTF::HashTraits<blink::QualifiedName>, blink::HeapAllocator> >]\00", align 1

@_ZN5blink13ContainerNodeD1Ev = hidden unnamed_addr alias void (%"class.blink::ContainerNode"*), void (%"class.blink::ContainerNode"*)* @_ZN5blink13ContainerNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode25ParserTakeAllChildrenFromERS0_(%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"class.blink::Node"* [ %8, %6 ], [ %4, %2 ]
  tail call void @_ZN5blink13ContainerNode17ParserRemoveChildERNS_4NodeE(%"class.blink::ContainerNode"* %1, %"class.blink::Node"* nonnull dereferenceable(64) %7)
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* nonnull %7)
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %6

10:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode17ParserRemoveChildERNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ChildFrameDisconnector", align 8
  %5 = alloca %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope", align 1
  %6 = alloca %"struct.blink::ContainerNode::ChildrenChange", align 8
  %7 = tail call i32 @_ZNK5blink4Node22ConnectedSubframeCountEv(%"class.blink::Node"* %1) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::ChildFrameDisconnector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast %"class.blink::ChildFrameDisconnector"* %4 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 84, i1 false) #11
  %16 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 1
  store %"class.blink::Node"* %1, %"class.blink::Node"** %16, align 8
  call void @_ZN5blink22ChildFrameDisconnector10DisconnectENS0_16DisconnectPolicyE(%"class.blink::ChildFrameDisconnector"* nonnull %4, i32 0) #11
  %17 = load i32, i32* %14, align 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1810"*, %"class.blink::Member.1810"** %19, align 8
  br i1 %18, label %21, label %23, !prof !2

21:                                               ; preds = %9
  %22 = bitcast i8* %11 to %"class.blink::Member.1810"*
  br label %29

23:                                               ; preds = %9
  %24 = icmp ne %"class.blink::Member.1810"* %20, null
  %25 = bitcast i8* %11 to %"class.blink::Member.1810"*
  %26 = icmp ne %"class.blink::Member.1810"* %20, %25
  %27 = and i1 %24, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  store i32 0, i32* %14, align 4
  br label %29

29:                                               ; preds = %21, %28, %23
  %30 = phi %"class.blink::Member.1810"* [ %22, %21 ], [ %25, %28 ], [ %25, %23 ]
  %31 = icmp eq %"class.blink::Member.1810"* %20, %30
  br i1 %31, label %34, label %32, !prof !3

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_21HTMLFrameOwnerElementEEELj10ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1808"* nonnull %33, %"class.blink::Member.1810"* %20) #11
  br label %34

34:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #11
  br label %35

35:                                               ; preds = %2, %34
  %36 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #11
  %37 = icmp eq %"class.blink::ContainerNode"* %36, %0
  br i1 %37, label %38, label %101

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 57
  %44 = load i8, i8* %43, align 2
  %45 = and i8 %44, 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %49 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %48) #11
  %50 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %49, i64 0, i32 7
  %51 = load i32, i32* %50, align 8
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 8
  %53 = icmp eq %"class.blink::ChildListMutationAccumulator"* %49, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %49, i64 0, i32 6, i32 0, i32 0
  %56 = load %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationObserverInterestGroup"** %55, align 8
  %57 = icmp eq %"class.blink::MutationObserverInterestGroup"* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  call void @_ZN5blink28ChildListMutationAccumulator15WillRemoveChildERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"* nonnull %49, %"class.blink::Node"* dereferenceable(64) %1) #11
  br label %59

59:                                               ; preds = %58, %54
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %49) #11
  br label %60

60:                                               ; preds = %38, %47, %59
  call void @_ZN5blink4Node37NotifyMutationObserversNodeWillDetachEv(%"class.blink::Node"* %1) #11
  %61 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope", %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %61) #11
  store i8 -86, i8* %61, align 1
  %62 = load i32, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %63 = add nsw i32 %62, 2
  store i32 %63, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 4, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 5, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %70, i64 0, i32 59, i32 0, i32 0
  %72 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %72, i64 0, i32 20
  %74 = load i8, i8* %73, align 1, !range !4
  store i8 1, i8* %73, align 1
  call void @_ZN5blink13ContainerNode13RemoveBetweenEPNS_4NodeES2_RS1_(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %65, %"class.blink::Node"* %67, %"class.blink::Node"* dereferenceable(64) %1)
  call void @_ZN5blink13ContainerNode17NotifyNodeRemovedERNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1)
  %75 = icmp eq i8* %73, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %60
  store i8 %74, i8* %73, align 1
  br label %77

77:                                               ; preds = %60, %76
  %78 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %78) #11
  %79 = bitcast %"struct.blink::ContainerNode::ChildrenChange"* %6 to i64*
  store i64 -6148914691236560470, i64* %79, align 8, !alias.scope !5
  %80 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %81 = load i32, i32* %80, align 8, !noalias !5
  %82 = and i32 %81, 12
  %83 = icmp eq i32 %82, 0
  %84 = select i1 %83, i8 2, i8 3
  store i8 %84, i8* %78, align 8, !alias.scope !5
  %85 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %85, align 8, !alias.scope !5
  %86 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 3
  store %"class.blink::Node"* %65, %"class.blink::Node"** %86, align 8, !alias.scope !5
  %87 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 4
  store %"class.blink::Node"* %67, %"class.blink::Node"** %87, align 8, !alias.scope !5
  %88 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 5
  %89 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 6
  %90 = bitcast %"class.WTF::String"* %3 to i8*
  %91 = bitcast %"class.blink::HeapVector.1794"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #11, !alias.scope !5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11, !noalias !5
  store %"class.WTF::String"* %3, %"class.WTF::String"** %89, align 8, !alias.scope !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11, !noalias !5
  %92 = bitcast %"class.blink::ContainerNode"* %0 to void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)***
  %93 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)**, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %93, i64 72
  %95 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %94, align 8
  call void %95(%"class.blink::ContainerNode"* %0, %"struct.blink::ContainerNode::ChildrenChange"* nonnull dereferenceable(56) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %78) #11
  %96 = load i32, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %97 = add nsw i32 %96, -2
  store i32 %97, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %100

99:                                               ; preds = %77
  call void @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope28PerformDeferredPluginDisposeEv(%"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope"* nonnull %5) #11
  br label %100

100:                                              ; preds = %77, %99
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %61) #11
  br label %101

101:                                              ; preds = %35, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = alloca %"class.absl::optional.2736", align 8
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #11
  %9 = bitcast %"class.absl::optional.2736"* %6 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  store i8 0, i8* %8, align 8
  %10 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.2740* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false) #11
  %12 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %29, label %14, !prof !3

14:                                               ; preds = %2
  %15 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #11
  %16 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %15) #11
  %17 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %16, i64 0, i32 3
  %18 = bitcast %"class.base::TickClock"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %16, %"class.blink::RuntimeCallStats"** %20, align 8
  %21 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %22 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %24 = bitcast i64* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %25 = bitcast %"class.base::TickClock"** %23 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %16, i64 0, i32 2, i64 13
  %27 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %16, i64 0, i32 0
  %28 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %27, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %21, %"class.blink::RuntimeCallCounter"* %26, %"class.blink::RuntimeCallTimer"* %28) #11
  store %"class.blink::RuntimeCallTimer"* %21, %"class.blink::RuntimeCallTimer"** %27, align 8
  store i8 1, i8* %8, align 8
  br label %29

29:                                               ; preds = %2, %14
  %30 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %30, label %51, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 0, i32 0
  %38 = icmp eq %"class.blink::Node"* %37, %32
  br i1 %38, label %39, label %51

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Document"*
  %41 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %43, align 8
  %44 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %44, align 2
  %45 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %46 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.WTF::StringImpl"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #11
  %48 = bitcast i8** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %49 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  %50 = call zeroext i1 @_ZNK5blink8Document14CanAcceptChildERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::Document"* nonnull %40, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* null, %"class.blink::Node"* null, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %49) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %41) #11
  br i1 %50, label %51, label %126

51:                                               ; preds = %31, %29, %39
  %52 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #11
  %53 = icmp eq %"class.blink::ContainerNode"* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"class.blink::ContainerNode"* [ %56, %54 ], [ %52, %51 ]
  call void @_ZN5blink13ContainerNode17ParserRemoveChildERNS_4NodeE(%"class.blink::ContainerNode"* nonnull %55, %"class.blink::Node"* dereferenceable(64) %1)
  %56 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #11
  %57 = icmp eq %"class.blink::ContainerNode"* %56, null
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  %59 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::Document"*, %"class.blink::Document"** %66, align 8
  %68 = icmp eq %"class.blink::Document"* %63, %67
  br i1 %68, label %80, label %69

69:                                               ; preds = %58
  %70 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %72, align 8
  %73 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %73, align 2
  %74 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %75 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %76 = bitcast %"class.WTF::StringImpl"** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #11
  %77 = bitcast i8** %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %78 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  %79 = call %"class.blink::Node"* @_ZN5blink8Document9adoptNodeEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::Document"* %63, %"class.blink::Node"* %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %78) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %70) #11
  br label %80

80:                                               ; preds = %58, %69
  %81 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #11
  %82 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %83 = ptrtoint i64* %3 to i64
  %84 = sub i64 %82, %83
  %85 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %86 = icmp ult i64 %84, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #11
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %80
  %88 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %89

89:                                               ; preds = %80, %87
  %90 = phi i32* [ %88, %87 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %80 ]
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %90, align 4
  %93 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  call void @_ZN5blink9TreeScope13AdoptIfNeededERNS_4NodeE(%"class.blink::TreeScope"* %93, %"class.blink::Node"* dereferenceable(64) %1) #11
  call void @_ZN5blink13ContainerNode17AppendChildCommonERNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1) #11
  %94 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %95 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %94, i64 0, i32 2, i32 0, i32 0
  %96 = load %"class.blink::Document"*, %"class.blink::Document"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %96, i64 0, i32 57
  %98 = load i8, i8* %97, align 2
  %99 = and i8 %98, 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %113, label %101

101:                                              ; preds = %89
  %102 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %59) #11
  %103 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %102, i64 0, i32 7
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  %106 = icmp eq %"class.blink::ChildListMutationAccumulator"* %102, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %102, i64 0, i32 6, i32 0, i32 0
  %109 = load %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationObserverInterestGroup"** %108, align 8
  %110 = icmp eq %"class.blink::MutationObserverInterestGroup"* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  call void @_ZN5blink28ChildListMutationAccumulator10ChildAddedERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"* nonnull %102, %"class.blink::Node"* dereferenceable(64) %1) #11
  br label %112

112:                                              ; preds = %111, %107
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %102) #11
  br label %113

113:                                              ; preds = %89, %101, %112
  %114 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #11
  %115 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %116 = ptrtoint i64* %4 to i64
  %117 = sub i64 %115, %116
  %118 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %119 = icmp ult i64 %117, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #11
  br i1 %119, label %122, label %120, !prof !3

120:                                              ; preds = %113
  %121 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %122

122:                                              ; preds = %113, %120
  %123 = phi i32* [ %121, %120 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %113 ]
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %124, -1
  store i32 %125, i32* %123, align 4
  call void @_ZN5blink13ContainerNode18NotifyNodeInsertedERNS_4NodeENS0_20ChildrenChangeSourceE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1, i8 zeroext 1)
  br label %126

126:                                              ; preds = %39, %122
  %127 = load i8, i8* %8, align 8, !range !4
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %131 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %130, align 8
  %132 = getelementptr inbounds %"class.absl::optional.2736", %"class.absl::optional.2736"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %133 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %132) #11
  %134 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %131, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %133, %"class.blink::RuntimeCallTimer"** %134, align 8
  store i8 0, i8* %8, align 8
  br label %135

135:                                              ; preds = %126, %129
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [78 x i8*] }, { [78 x i8*] }* @_ZTVN5blink13ContainerNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink4NodeD2Ev(%"class.blink::Node"* %3) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4NodeD2Ev(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNodeD0Ev(%"class.blink::ContainerNode"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ContainerNode26EnsurePreInsertionValidityERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringAppend.1783", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringAppend.1783", align 8
  %10 = alloca %"class.WTF::StringAppend.1784", align 8
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  switch i32 %13, label %66 [
    i32 0, label %14
    i32 4, label %14
  ]

14:                                               ; preds = %5, %5
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %66

20:                                               ; preds = %14
  %21 = and i32 %12, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %54, label %23

23:                                               ; preds = %20
  %24 = and i32 %17, 512
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 135, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = icmp eq %"class.blink::Document"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %26, %23
  %35 = tail call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %1, %"class.blink::Node"* dereferenceable(64) %15) #11
  br i1 %35, label %53, label %54

36:                                               ; preds = %26
  %37 = tail call dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"* %15) #11
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 12
  %41 = icmp eq i32 %40, 8
  br i1 %41, label %42, label %51

42:                                               ; preds = %36
  %43 = bitcast %"class.blink::Node"* %37 to %"class.blink::DocumentFragment"*
  %44 = bitcast %"class.blink::Node"* %37 to i1 (%"class.blink::DocumentFragment"*)***
  %45 = load i1 (%"class.blink::DocumentFragment"*)**, i1 (%"class.blink::DocumentFragment"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::DocumentFragment"*)*, i1 (%"class.blink::DocumentFragment"*)** %45, i64 76
  %47 = load i1 (%"class.blink::DocumentFragment"*)*, i1 (%"class.blink::DocumentFragment"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::DocumentFragment"* nonnull %43) #11
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = tail call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %1, %"class.blink::Node"* dereferenceable(64) %15) #11
  br i1 %50, label %53, label %54

51:                                               ; preds = %36, %42
  %52 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %1, %"class.blink::Node"* %15) #11
  br i1 %52, label %53, label %54

53:                                               ; preds = %34, %49, %51
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %480

54:                                               ; preds = %20, %51, %34, %49
  %55 = icmp eq %"class.blink::Node"* %2, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %2) #11
  %58 = icmp eq %"class.blink::ContainerNode"* %57, %0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.9, i64 0, i64 0)) #11
  br label %480

60:                                               ; preds = %56, %54
  %61 = icmp eq %"class.blink::Node"* %3, null
  br i1 %61, label %480, label %62

62:                                               ; preds = %60
  %63 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #11
  %64 = icmp eq %"class.blink::ContainerNode"* %63, %0
  br i1 %64, label %480, label %65

65:                                               ; preds = %62
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)) #11
  br label %480

66:                                               ; preds = %5, %14
  %67 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %68 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %67, align 8
  %69 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %68, i64 34
  %70 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %69, align 8
  %71 = tail call zeroext i8 %70(%"class.blink::Node"* %1) #11
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %66
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0)) #11
  br label %480

74:                                               ; preds = %66
  %75 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %78 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %81, i64 0, i32 0, i32 0
  %83 = icmp eq %"class.blink::Node"* %82, %77
  %84 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Document"*
  br i1 %83, label %85, label %99

85:                                               ; preds = %76
  %86 = icmp eq %"class.blink::Node"* %2, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %85
  %88 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %2) #11
  %89 = icmp eq %"class.blink::ContainerNode"* %88, %0
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.9, i64 0, i64 0)) #11
  br label %480

91:                                               ; preds = %87, %85
  %92 = icmp eq %"class.blink::Node"* %3, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %91
  %94 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #11
  %95 = icmp eq %"class.blink::ContainerNode"* %94, %0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)) #11
  br label %480

97:                                               ; preds = %93, %91
  %98 = tail call zeroext i1 @_ZNK5blink8Document14CanAcceptChildERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::Document"* nonnull %84, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* %2, %"class.blink::Node"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #11
  br label %480

99:                                               ; preds = %76, %74
  %100 = load i32, i32* %11, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %137, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %105 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 512
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %117

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %111 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %111, i64 0, i32 2, i32 0, i32 0
  %113 = load %"class.blink::Document"*, %"class.blink::Document"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %113, i64 0, i32 135, i32 0, i32 0
  %115 = load %"class.blink::Document"*, %"class.blink::Document"** %114, align 8
  %116 = icmp eq %"class.blink::Document"* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %109, %103
  %118 = tail call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %1, %"class.blink::Node"* dereferenceable(64) %104) #11
  br i1 %118, label %136, label %137

119:                                              ; preds = %109
  %120 = tail call dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"* %104) #11
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 12
  %124 = icmp eq i32 %123, 8
  br i1 %124, label %125, label %134

125:                                              ; preds = %119
  %126 = bitcast %"class.blink::Node"* %120 to %"class.blink::DocumentFragment"*
  %127 = bitcast %"class.blink::Node"* %120 to i1 (%"class.blink::DocumentFragment"*)***
  %128 = load i1 (%"class.blink::DocumentFragment"*)**, i1 (%"class.blink::DocumentFragment"*)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::DocumentFragment"*)*, i1 (%"class.blink::DocumentFragment"*)** %128, i64 76
  %130 = load i1 (%"class.blink::DocumentFragment"*)*, i1 (%"class.blink::DocumentFragment"*)** %129, align 8
  %131 = tail call zeroext i1 %130(%"class.blink::DocumentFragment"* nonnull %126) #11
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = tail call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %1, %"class.blink::Node"* dereferenceable(64) %104) #11
  br i1 %133, label %136, label %137

134:                                              ; preds = %119, %125
  %135 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %1, %"class.blink::Node"* %104) #11
  br i1 %135, label %136, label %137

136:                                              ; preds = %117, %132, %134
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %480

137:                                              ; preds = %99, %134, %117, %132
  %138 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %139 = icmp eq %"class.blink::Node"* %2, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %2) #11
  %142 = icmp eq %"class.blink::ContainerNode"* %141, %0
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.9, i64 0, i64 0)) #11
  br label %480

144:                                              ; preds = %140, %137
  %145 = icmp eq %"class.blink::Node"* %3, null
  br i1 %145, label %150, label %146

146:                                              ; preds = %144
  %147 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #11
  %148 = icmp eq %"class.blink::ContainerNode"* %147, %0
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)) #11
  br label %480

150:                                              ; preds = %146, %144
  %151 = load i32, i32* %11, align 8
  %152 = and i32 %151, 12
  %153 = icmp ne i32 %152, 8
  %154 = icmp eq %"class.blink::Node"* %1, null
  %155 = or i1 %154, %153
  br i1 %155, label %178, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %158 = bitcast %"class.blink::Node"* %157 to %"class.blink::Node"**
  %159 = load %"class.blink::Node"*, %"class.blink::Node"** %158, align 8
  %160 = icmp eq %"class.blink::Node"* %159, null
  br i1 %160, label %480, label %161

161:                                              ; preds = %156
  %162 = bitcast %"class.blink::ContainerNode"* %0 to i1 (%"class.blink::Node"*, i32)***
  br label %167

163:                                              ; preds = %167
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 0, i32 5, i32 0, i32 0
  %165 = load %"class.blink::Node"*, %"class.blink::Node"** %164, align 8
  %166 = icmp eq %"class.blink::Node"* %165, null
  br i1 %166, label %480, label %167

167:                                              ; preds = %163, %161
  %168 = phi %"class.blink::Node"* [ %159, %161 ], [ %165, %163 ]
  %169 = bitcast %"class.blink::Node"* %168 to i32 (%"class.blink::Node"*)***
  %170 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %169, align 8
  %171 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %170, i64 30
  %172 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %171, align 8
  %173 = tail call i32 %172(%"class.blink::Node"* nonnull %168) #11
  %174 = load i1 (%"class.blink::Node"*, i32)**, i1 (%"class.blink::Node"*, i32)*** %162, align 8
  %175 = getelementptr inbounds i1 (%"class.blink::Node"*, i32)*, i1 (%"class.blink::Node"*, i32)** %174, i64 53
  %176 = load i1 (%"class.blink::Node"*, i32)*, i1 (%"class.blink::Node"*, i32)** %175, align 8
  %177 = tail call zeroext i1 %176(%"class.blink::Node"* %138, i32 %173) #11
  br i1 %177, label %163, label %189

178:                                              ; preds = %150
  %179 = bitcast %"class.blink::Node"* %1 to i32 (%"class.blink::Node"*)***
  %180 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %179, align 8
  %181 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %180, i64 30
  %182 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %181, align 8
  %183 = tail call i32 %182(%"class.blink::Node"* %1) #11
  %184 = bitcast %"class.blink::ContainerNode"* %0 to i1 (%"class.blink::Node"*, i32)***
  %185 = load i1 (%"class.blink::Node"*, i32)**, i1 (%"class.blink::Node"*, i32)*** %184, align 8
  %186 = getelementptr inbounds i1 (%"class.blink::Node"*, i32)*, i1 (%"class.blink::Node"*, i32)** %185, i64 53
  %187 = load i1 (%"class.blink::Node"*, i32)*, i1 (%"class.blink::Node"*, i32)** %186, align 8
  %188 = tail call zeroext i1 %187(%"class.blink::Node"* %138, i32 %183) #11
  br i1 %188, label %480, label %189

189:                                              ; preds = %167, %178
  %190 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #11
  %191 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %191) #11
  %192 = bitcast %"class.WTF::StringAppend.1783"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %192) #11
  %193 = bitcast %"class.WTF::StringAppend.1784"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #11
  %194 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %195 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %194, align 8
  %196 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %195, i64 27
  %197 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %196, align 8
  %198 = tail call %"class.WTF::StringImpl"* %197(%"class.blink::Node"* %1) #11
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %275, label %200

200:                                              ; preds = %189
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %217

207:                                              ; preds = %200
  %208 = zext i32 %206 to i33
  %209 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #11
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !2

214:                                              ; preds = %207
  tail call void @llvm.trap() #11
  unreachable

215:                                              ; preds = %207
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %205, align 4
  br label %217

217:                                              ; preds = %215, %200
  %218 = phi i32 [ %216, %215 ], [ %206, %200 ]
  %219 = load atomic i32, i32* %201 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %232

222:                                              ; preds = %217
  %223 = zext i32 %218 to i33
  %224 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %223, i33 1) #11
  %225 = extractvalue { i33, i1 } %224, 1
  %226 = extractvalue { i33, i1 } %224, 0
  %227 = icmp slt i33 %226, 0
  %228 = or i1 %225, %227
  br i1 %228, label %229, label %230, !prof !2

229:                                              ; preds = %222
  tail call void @llvm.trap() #11
  unreachable

230:                                              ; preds = %222
  %231 = trunc i33 %226 to i32
  store i32 %231, i32* %205, align 4
  br label %232

232:                                              ; preds = %230, %217
  %233 = phi i32 [ %231, %230 ], [ %218, %217 ]
  %234 = load atomic i32, i32* %201 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %232
  %238 = add i32 %233, -1
  store i32 %238, i32* %205, align 4
  br label %239

239:                                              ; preds = %237, %232
  %240 = phi i32 [ %238, %237 ], [ %233, %232 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #11
  br label %243

243:                                              ; preds = %239, %242
  %244 = load atomic i32, i32* %201 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %258

247:                                              ; preds = %243
  %248 = load i32, i32* %205, align 4
  %249 = zext i32 %248 to i33
  %250 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %249, i33 1) #11
  %251 = extractvalue { i33, i1 } %250, 1
  %252 = extractvalue { i33, i1 } %250, 0
  %253 = icmp slt i33 %252, 0
  %254 = or i1 %251, %253
  br i1 %254, label %255, label %256, !prof !2

255:                                              ; preds = %247
  tail call void @llvm.trap() #11
  unreachable

256:                                              ; preds = %247
  %257 = trunc i33 %252 to i32
  store i32 %257, i32* %205, align 4
  br label %258

258:                                              ; preds = %243, %256
  %259 = bitcast %"class.WTF::StringAppend.1784"* %10 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.1 to i64), i64* %259, align 8
  %260 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %198, %"class.WTF::StringImpl"** %260, align 8
  %261 = load atomic i32, i32* %201 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %279

264:                                              ; preds = %258
  %265 = load i32, i32* %205, align 4
  %266 = zext i32 %265 to i33
  %267 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %266, i33 1) #11
  %268 = extractvalue { i33, i1 } %267, 1
  %269 = extractvalue { i33, i1 } %267, 0
  %270 = icmp slt i33 %269, 0
  %271 = or i1 %268, %270
  br i1 %271, label %272, label %273, !prof !2

272:                                              ; preds = %264
  tail call void @llvm.trap() #11
  unreachable

273:                                              ; preds = %264
  %274 = trunc i33 %269 to i32
  store i32 %274, i32* %205, align 4
  br label %279

275:                                              ; preds = %189
  %276 = bitcast %"class.WTF::StringAppend.1784"* %10 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.1 to i64), i64* %276, align 8
  %277 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %277, align 8
  %278 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8** %278, align 8
  br label %291

279:                                              ; preds = %273, %258
  %280 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8** %280, align 8
  %281 = load atomic i32, i32* %201 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = load i32, i32* %205, align 4
  br i1 %283, label %285, label %287

285:                                              ; preds = %279
  %286 = add i32 %284, -1
  store i32 %286, i32* %205, align 4
  br label %287

287:                                              ; preds = %285, %279
  %288 = phi i32 [ %286, %285 ], [ %284, %279 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #11
  br label %291

291:                                              ; preds = %275, %287, %290
  %292 = phi %"class.WTF::StringImpl"** [ %277, %275 ], [ %260, %287 ], [ %260, %290 ]
  %293 = bitcast %"class.blink::ContainerNode"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %294 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %293, align 8
  %295 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %294, i64 27
  %296 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %295, align 8
  %297 = tail call %"class.WTF::StringImpl"* %296(%"class.blink::Node"* %138) #11
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1783"* nonnull sret %9, %"class.WTF::StringAppend.1784"* nonnull dereferenceable(24) %10, %"class.WTF::StringImpl"* %297)
  %298 = bitcast %"class.WTF::StringAppend.1783"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %298)
  %299 = bitcast %"class.WTF::StringAppend.1783"* %9 to i64*
  %300 = load i64, i64* %299, align 8, !noalias !8
  %301 = bitcast %"class.WTF::StringAppend.1783"* %6 to i64*
  store i64 %300, i64* %301, align 8, !noalias !8
  %302 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8, !noalias !8
  %304 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %303, %"class.WTF::StringImpl"** %304, align 8, !noalias !8
  %305 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %305, label %323, label %306

306:                                              ; preds = %291
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %323

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = zext i32 %313 to i33
  %315 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %314, i33 1) #11
  %316 = extractvalue { i33, i1 } %315, 1
  %317 = extractvalue { i33, i1 } %315, 0
  %318 = icmp slt i33 %317, 0
  %319 = or i1 %316, %318
  br i1 %319, label %320, label %321, !prof !2

320:                                              ; preds = %311
  call void @llvm.trap() #11
  unreachable

321:                                              ; preds = %311
  %322 = trunc i33 %317 to i32
  store i32 %322, i32* %312, align 4
  br label %323

323:                                              ; preds = %321, %306, %291
  %324 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %6, i64 0, i32 0, i32 1
  %325 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %9, i64 0, i32 0, i32 1
  %326 = bitcast i8** %325 to i64*
  %327 = load i64, i64* %326, align 8, !noalias !8
  %328 = bitcast i8** %324 to i64*
  store i64 %327, i64* %328, align 8, !noalias !8
  %329 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %9, i64 0, i32 1, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8, !noalias !8
  %331 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %330, %"class.WTF::StringImpl"** %331, align 8, !noalias !8
  %332 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %332, label %350, label %333

333:                                              ; preds = %323
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %350

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i33
  %342 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %341, i33 1) #11
  %343 = extractvalue { i33, i1 } %342, 1
  %344 = extractvalue { i33, i1 } %342, 0
  %345 = icmp slt i33 %344, 0
  %346 = or i1 %343, %345
  br i1 %346, label %347, label %348, !prof !2

347:                                              ; preds = %338
  call void @llvm.trap() #11
  unreachable

348:                                              ; preds = %338
  %349 = trunc i33 %344 to i32
  store i32 %349, i32* %339, align 4
  br label %350

350:                                              ; preds = %323, %333, %348
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %8, %"class.WTF::StringAppend.1783"* nonnull byval(%"class.WTF::StringAppend.1783") align 8 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %298)
  %351 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %352 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %351, %"class.WTF::StringImpl"** %352, align 8
  %353 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %354 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %353, align 8
  %355 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %354, align 8
  call void %355(%"class.blink::ExceptionState"* %4, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %371, label %358

358:                                              ; preds = %350
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  br i1 %362, label %365, label %367

365:                                              ; preds = %358
  %366 = add i32 %364, -1
  store i32 %366, i32* %363, align 4
  br label %367

367:                                              ; preds = %365, %358
  %368 = phi i32 [ %366, %365 ], [ %364, %358 ]
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #11
  br label %371

371:                                              ; preds = %350, %367, %370
  %372 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %372, align 8
  %374 = icmp eq %"class.WTF::StringImpl"* %373, null
  br i1 %374, label %388, label %375

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 0
  %381 = load i32, i32* %380, align 4
  br i1 %379, label %382, label %384

382:                                              ; preds = %375
  %383 = add i32 %381, -1
  store i32 %383, i32* %380, align 4
  br label %384

384:                                              ; preds = %382, %375
  %385 = phi i32 [ %383, %382 ], [ %381, %375 ]
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %388

387:                                              ; preds = %384
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %373) #11
  br label %388

388:                                              ; preds = %387, %384, %371
  %389 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  %391 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %391, label %405, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load atomic i32, i32* %393 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  br i1 %396, label %399, label %401

399:                                              ; preds = %392
  %400 = add i32 %398, -1
  store i32 %400, i32* %397, align 4
  br label %401

401:                                              ; preds = %399, %392
  %402 = phi i32 [ %400, %399 ], [ %398, %392 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %390) #11
  br label %405

405:                                              ; preds = %388, %401, %404
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %405
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #11
  br label %421

421:                                              ; preds = %420, %417, %405
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %437, label %424

424:                                              ; preds = %421
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %433

431:                                              ; preds = %424
  %432 = add i32 %430, -1
  store i32 %432, i32* %429, align 4
  br label %433

433:                                              ; preds = %431, %424
  %434 = phi i32 [ %432, %431 ], [ %430, %424 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #11
  br label %437

437:                                              ; preds = %421, %433, %436
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %437
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #11
  br label %453

453:                                              ; preds = %437, %449, %452
  br i1 %199, label %479, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %468

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #11
  %467 = load i32, i32* %459, align 4
  br label %468

468:                                              ; preds = %463, %466
  %469 = phi i32 [ %464, %463 ], [ %467, %466 ]
  %470 = load atomic i32, i32* %455 monotonic, align 4
  %471 = and i32 %470, 2
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %475

473:                                              ; preds = %468
  %474 = add i32 %469, -1
  store i32 %474, i32* %459, align 4
  br label %475

475:                                              ; preds = %473, %468
  %476 = phi i32 [ %474, %473 ], [ %469, %468 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #11
  br label %479

479:                                              ; preds = %453, %475, %478
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %192) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %191) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #11
  br label %480

480:                                              ; preds = %163, %156, %96, %90, %97, %149, %143, %136, %65, %62, %60, %59, %53, %178, %479, %73
  %481 = phi i1 [ false, %73 ], [ false, %479 ], [ false, %53 ], [ false, %136 ], [ true, %178 ], [ false, %59 ], [ false, %65 ], [ true, %62 ], [ true, %60 ], [ false, %143 ], [ false, %149 ], [ false, %96 ], [ false, %90 ], [ %98, %97 ], [ true, %156 ], [ true, %163 ]
  ret i1 %481
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink8Document14CanAcceptChildERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::Document"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1783"* noalias sret, %"class.WTF::StringAppend.1784"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1784", align 8
  %5 = bitcast %"class.WTF::StringAppend.1784"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1784"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1783"* %0, %"class.WTF::StringAppend.1784"* nonnull byval(%"class.WTF::StringAppend.1784") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1783"* %0, %"class.WTF::StringAppend.1784"* nonnull byval(%"class.WTF::StringAppend.1784") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.3039"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #11
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %3, i8* %15) #11
  %16 = bitcast %"class.WTF::StringTypeAdapter.3039"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #11
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %2, i8* %18) #11
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #11
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #11
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #11
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #11
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13ContainerNode36RecheckNodeInsertionStructuralPrereqERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPKS3_RNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::HeapVector.1786"* nocapture readonly dereferenceable(104), %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %74, label %12

12:                                               ; preds = %4
  %13 = icmp eq %"class.blink::ContainerNode"* %0, null
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Document"*
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  br label %18

18:                                               ; preds = %12, %71
  %19 = phi %"class.blink::Member.318"* [ %6, %12 ], [ %72, %71 ]
  %20 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %21) #11
  %23 = icmp eq %"class.blink::ContainerNode"* %22, null
  br i1 %23, label %24, label %80

24:                                               ; preds = %18
  br i1 %13, label %31, label %25

25:                                               ; preds = %24
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 0, i32 0
  %30 = icmp eq %"class.blink::Node"* %29, %14
  br i1 %30, label %37, label %31

31:                                               ; preds = %25, %24
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %71, label %40

37:                                               ; preds = %25
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %39 = tail call zeroext i1 @_ZNK5blink8Document14CanAcceptChildERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::Document"* nonnull %16, %"class.blink::Node"* dereferenceable(64) %38, %"class.blink::Node"* %2, %"class.blink::Node"* null, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  br i1 %39, label %71, label %80

40:                                               ; preds = %31
  %41 = load i32, i32* %17, align 8
  %42 = and i32 %41, 512
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %40
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 135, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = icmp eq %"class.blink::Document"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %44, %40
  %52 = tail call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %32, %"class.blink::Node"* dereferenceable(64) %14) #11
  br i1 %52, label %70, label %71

53:                                               ; preds = %44
  %54 = tail call dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"* %14) #11
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %54, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 12
  %58 = icmp eq i32 %57, 8
  br i1 %58, label %59, label %68

59:                                               ; preds = %53
  %60 = bitcast %"class.blink::Node"* %54 to %"class.blink::DocumentFragment"*
  %61 = bitcast %"class.blink::Node"* %54 to i1 (%"class.blink::DocumentFragment"*)***
  %62 = load i1 (%"class.blink::DocumentFragment"*)**, i1 (%"class.blink::DocumentFragment"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::DocumentFragment"*)*, i1 (%"class.blink::DocumentFragment"*)** %62, i64 76
  %64 = load i1 (%"class.blink::DocumentFragment"*)*, i1 (%"class.blink::DocumentFragment"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::DocumentFragment"* nonnull %60) #11
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  %67 = tail call zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"* %32, %"class.blink::Node"* dereferenceable(64) %14) #11
  br i1 %67, label %70, label %71

68:                                               ; preds = %53, %59
  %69 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %32, %"class.blink::Node"* %14) #11
  br i1 %69, label %70, label %71

70:                                               ; preds = %51, %66, %68
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %80

71:                                               ; preds = %66, %51, %68, %31, %37
  %72 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %19, i64 1
  %73 = icmp eq %"class.blink::Member.318"* %72, %10
  br i1 %73, label %74, label %18

74:                                               ; preds = %71, %4
  %75 = icmp eq %"class.blink::Node"* %2, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %74
  %77 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %2) #11
  %78 = icmp eq %"class.blink::ContainerNode"* %77, %0
  br i1 %78, label %80, label %79

79:                                               ; preds = %76
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.9, i64 0, i64 0)) #11
  br label %80

80:                                               ; preds = %37, %18, %70, %79, %76, %74
  %81 = phi i1 [ false, %79 ], [ true, %76 ], [ true, %74 ], [ false, %70 ], [ false, %18 ], [ false, %37 ]
  ret i1 %81
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode19DidInsertNodeVectorERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS3_S7_(%"class.blink::ContainerNode"*, %"class.blink::HeapVector.1786"* dereferenceable(104), %"class.blink::Node"*, %"class.blink::HeapVector.1786"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"struct.blink::ContainerNode::ChildrenChange", align 8
  %13 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %44

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0
  %20 = tail call dereferenceable(8) %"class.blink::Member.318"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1789"* %19, i32 0) #11
  %21 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 4, i32 0, i32 0
  %24 = bitcast %"class.blink::Node"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i32, i32* %13, align 4
  %27 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %27, align 8
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %28, i64 %29
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %12, i64 0, i32 0
  %34 = bitcast %"struct.blink::ContainerNode::ChildrenChange"* %12 to i64*
  %35 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %12, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %12, i64 0, i32 3
  %37 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %12, i64 0, i32 4
  %38 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %12, i64 0, i32 5
  %39 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %12, i64 0, i32 6
  %40 = bitcast %"class.WTF::String"* %5 to i8*
  %41 = bitcast %"class.blink::HeapVector.1794"* %38 to i8*
  %42 = bitcast %"class.blink::ContainerNode"* %0 to void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)***
  %43 = bitcast %"class.blink::Node"** %36 to i64*
  br label %53

44:                                               ; preds = %53, %16, %18
  %45 = phi %"class.blink::Member.318"** [ %17, %16 ], [ %27, %18 ], [ %27, %53 ]
  %46 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %47, i64 %50
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %67, label %88

53:                                               ; preds = %32, %53
  %54 = phi %"class.blink::Member.318"* [ %28, %32 ], [ %65, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %33) #11
  %55 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  store i64 -6148914691236560726, i64* %34, align 8, !alias.scope !11
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 1
  %58 = load i32, i32* %57, align 8, !noalias !11
  %59 = and i32 %58, 12
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %33, align 8, !alias.scope !11
  store %"class.blink::Node"* %56, %"class.blink::Node"** %35, align 8, !alias.scope !11
  store i64 %25, i64* %43, align 8, !alias.scope !11
  store %"class.blink::Node"* %2, %"class.blink::Node"** %37, align 8, !alias.scope !11
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #11, !alias.scope !11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11, !noalias !11
  store %"class.WTF::String"* %5, %"class.WTF::String"** %39, align 8, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11, !noalias !11
  %62 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)**, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*** %42, align 8
  %63 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %62, i64 72
  %64 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %63, align 8
  call void %64(%"class.blink::ContainerNode"* %0, %"struct.blink::ContainerNode::ChildrenChange"* nonnull dereferenceable(56) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %33) #11
  %65 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %54, i64 1
  %66 = icmp eq %"class.blink::Member.318"* %65, %30
  br i1 %66, label %44, label %53

67:                                               ; preds = %101, %44
  %68 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %45, align 8
  %69 = load i32, i32* %13, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %68, i64 %70
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %104, label %73

73:                                               ; preds = %67
  %74 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names16kDOMNodeInsertedE, align 8
  %75 = bitcast %"class.WTF::String"* %6 to i8*
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %77 = bitcast %"class.WTF::String"* %7 to i8*
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %79 = bitcast %"class.WTF::String"* %8 to i8*
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names28kDOMNodeInsertedIntoDocumentE, align 8
  %82 = bitcast %"class.WTF::String"* %9 to i8*
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %10 to i8*
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %86 = bitcast %"class.WTF::String"* %11 to i8*
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  br label %112

88:                                               ; preds = %44, %101
  %89 = phi %"class.blink::Member.318"* [ %102, %101 ], [ %47, %44 ]
  %90 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 256
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %88
  %97 = bitcast %"class.blink::Node"* %91 to void (%"class.blink::Node"*)***
  %98 = load void (%"class.blink::Node"*)**, void (%"class.blink::Node"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::Node"*)*, void (%"class.blink::Node"*)** %98, i64 58
  %100 = load void (%"class.blink::Node"*)*, void (%"class.blink::Node"*)** %99, align 8
  call void %100(%"class.blink::Node"* %91) #11
  br label %101

101:                                              ; preds = %88, %96
  %102 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %89, i64 1
  %103 = icmp eq %"class.blink::Member.318"* %102, %51
  br i1 %103, label %67, label %88

104:                                              ; preds = %282, %67
  %105 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  call void @_ZN5blink4Node28DispatchSubtreeModifiedEventEv(%"class.blink::Node"* %105) #11
  %106 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %107, i64 0, i32 2, i32 0, i32 0
  %109 = load %"class.blink::Document"*, %"class.blink::Document"** %108, align 8
  %110 = call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %109) #11
  %111 = icmp eq %"class.blink::AXObjectCache"* %110, null
  br i1 %111, label %290, label %285

112:                                              ; preds = %73, %282
  %113 = phi %"class.blink::Member.318"* [ %68, %73 ], [ %283, %282 ]
  %114 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %116 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %115) #11
  %117 = icmp eq %"class.blink::ContainerNode"* %116, %0
  br i1 %117, label %118, label %282

118:                                              ; preds = %112
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %119, i64 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = and i32 %121, 512
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %282

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %119, i64 0, i32 3, i32 0, i32 0
  %126 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %126, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::Document"*, %"class.blink::Document"** %127, align 8
  %129 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %119) #11
  %130 = icmp eq %"class.blink::ContainerNode"* %129, null
  br i1 %130, label %194, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %128, i64 0, i32 56
  %133 = load i16, i16* %132, align 8
  %134 = and i16 %133, 2
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %194, label %136

136:                                              ; preds = %131
  %137 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %119) #11
  %138 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %137, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %80, align 8
  %139 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #11
  %140 = bitcast i8* %139 to %"class.blink::MutationEvent"*
  call void @_ZN5blink13MutationEventC1ERKN3WTF12AtomicStringENS_5Event7BubblesENS5_10CancelableEPNS_4NodeERKNS1_6StringESC_SC_t(%"class.blink::MutationEvent"* %140, %"class.WTF::AtomicString"* dereferenceable(8) %74, i32 0, i32 1, %"class.blink::Node"* %138, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8, i16 zeroext 0) #11
  %141 = getelementptr inbounds i8, i8* %139, i64 -4
  %142 = bitcast i8* %141 to i16*
  %143 = load atomic i16, i16* %142 monotonic, align 2
  %144 = or i16 %143, 1
  store atomic i16 %144, i16* %142 release, align 2
  %145 = bitcast i8* %139 to %"class.blink::Event"*
  call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* %119, %"class.blink::Event"* dereferenceable(104) %145) #11
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %136
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #11
  br label %161

161:                                              ; preds = %160, %157, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #11
  br label %177

177:                                              ; preds = %176, %173, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #11
  br label %193

193:                                              ; preds = %192, %189, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  br label %194

194:                                              ; preds = %193, %131, %124
  %195 = load i32, i32* %120, align 8
  %196 = and i32 %195, 256
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %282, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %128, i64 0, i32 56
  %200 = load i16, i16* %199, align 8
  %201 = and i16 %200, 16
  %202 = icmp eq i16 %201, 0
  %203 = icmp eq %"class.blink::Node"* %119, null
  %204 = or i1 %203, %202
  br i1 %204, label %282, label %205

205:                                              ; preds = %198, %279
  %206 = phi %"class.blink::Node"* [ %280, %279 ], [ %119, %198 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %207 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #11
  %208 = bitcast i8* %207 to %"class.blink::MutationEvent"*
  call void @_ZN5blink13MutationEventC1ERKN3WTF12AtomicStringENS_5Event7BubblesENS5_10CancelableEPNS_4NodeERKNS1_6StringESC_SC_t(%"class.blink::MutationEvent"* %208, %"class.WTF::AtomicString"* dereferenceable(8) %81, i32 1, i32 1, %"class.blink::Node"* null, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11, i16 zeroext 0) #11
  %209 = getelementptr inbounds i8, i8* %207, i64 -4
  %210 = bitcast i8* %209 to i16*
  %211 = load atomic i16, i16* %210 monotonic, align 2
  %212 = or i16 %211, 1
  store atomic i16 %212, i16* %210 release, align 2
  %213 = bitcast i8* %207 to %"class.blink::Event"*
  call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* nonnull %206, %"class.blink::Event"* dereferenceable(104) %213) #11
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %205
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #11
  br label %229

229:                                              ; preds = %228, %225, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #11
  br label %245

245:                                              ; preds = %244, %241, %229
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #11
  br label %261

261:                                              ; preds = %260, %257, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %262 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %206, i64 0, i32 1
  %263 = load i32, i32* %262, align 8
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %206, i64 1
  %268 = bitcast %"class.blink::Node"* %267 to %"class.blink::Node"**
  %269 = load %"class.blink::Node"*, %"class.blink::Node"** %268, align 8
  %270 = icmp eq %"class.blink::Node"* %269, null
  br i1 %270, label %271, label %279

271:                                              ; preds = %266, %261
  %272 = icmp eq %"class.blink::Node"* %206, %119
  br i1 %272, label %282, label %273

273:                                              ; preds = %271
  %274 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %206, i64 0, i32 5, i32 0, i32 0
  %275 = load %"class.blink::Node"*, %"class.blink::Node"** %274, align 8
  %276 = icmp eq %"class.blink::Node"* %275, null
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %206, %"class.blink::Node"* %119) #11
  br label %279

279:                                              ; preds = %277, %273, %266
  %280 = phi %"class.blink::Node"* [ %278, %277 ], [ %275, %273 ], [ %269, %266 ]
  %281 = icmp eq %"class.blink::Node"* %280, null
  br i1 %281, label %282, label %205

282:                                              ; preds = %279, %271, %198, %194, %118, %112
  %283 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %113, i64 1
  %284 = icmp eq %"class.blink::Member.318"* %283, %71
  br i1 %284, label %104, label %112

285:                                              ; preds = %104
  %286 = bitcast %"class.blink::AXObjectCache"* %110 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %287 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %287, i64 29
  %289 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %288, align 8
  call void %289(%"class.blink::AXObjectCache"* nonnull %110, %"class.blink::Node"* %105) #11
  br label %290

290:                                              ; preds = %104, %285
  ret void
}

declare void @_ZN5blink4Node28DispatchSubtreeModifiedEventEv(%"class.blink::Node"*) local_unnamed_addr #5

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.1786", align 8
  %6 = alloca %"class.blink::HeapVector.1786", align 8
  %7 = alloca %"class.blink::ContainerNode::AdoptAndInsertBefore", align 1
  %8 = icmp eq %"class.blink::Node"* %2, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %128

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZNK5blink13ContainerNode26EnsurePreInsertionValidityERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* nonnull %2, %"class.blink::Node"* null, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %12, label %13, label %128

13:                                               ; preds = %11
  %14 = icmp eq %"class.blink::Node"* %2, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* nonnull %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %128

21:                                               ; preds = %15, %13
  %22 = phi %"class.blink::Node"* [ %17, %15 ], [ %2, %13 ]
  %23 = bitcast %"class.blink::HeapVector.1786"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %25 = bitcast %"class.blink::HeapVector.1786"* %5 to i8**
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %26, align 8
  %27 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 92, i1 false) #11
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %33, i64 0, i32 52
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 52
  %41 = load i64, i64* %40, align 8
  %42 = call fastcc zeroext i1 @_ZN5blinkL37CollectChildrenAndRemoveFromOldParentERNS_4NodeERNS_10HeapVectorINS_6MemberIS0_EELj11EEERNS_14ExceptionStateE(%"class.blink::Node"* dereferenceable(64) %1, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %42, label %43, label %109

43:                                               ; preds = %21
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = icmp eq %"class.blink::Document"* %33, %46
  br i1 %47, label %48, label %62

48:                                               ; preds = %43
  %49 = load i64, i64* %38, align 8
  %50 = add i64 %39, 1
  %51 = icmp ugt i64 %49, %50
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = icmp eq %"class.blink::Document"* %37, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = icmp eq %"class.blink::Document"* %33, %37
  br i1 %58, label %66, label %59

59:                                               ; preds = %57
  %60 = load i64, i64* %40, align 8
  %61 = icmp eq i64 %60, %41
  br i1 %61, label %66, label %62

62:                                               ; preds = %52, %48, %43, %59
  %63 = call zeroext i1 @_ZN5blink13ContainerNode36RecheckNodeInsertionStructuralPrereqERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPKS3_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::Node"* nonnull %22, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %63, label %64, label %109

64:                                               ; preds = %62
  %65 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  br label %66

66:                                               ; preds = %64, %57, %59
  %67 = phi %"class.blink::TreeScope"* [ %65, %64 ], [ %53, %57 ], [ %53, %59 ]
  %68 = bitcast %"class.blink::HeapVector.1786"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %70 = bitcast %"class.blink::HeapVector.1786"* %6 to i8**
  store i8* %69, i8** %70, align 8
  %71 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %71, align 8
  %72 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %73 = bitcast i32* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 92, i1 false) #11
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %67, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %75, i64 0, i32 57
  %77 = load i8, i8* %76, align 2
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %66
  %81 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %29) #11
  %82 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %81, i64 0, i32 7
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 1
  store i32 %84, i32* %82, align 8
  br label %85

85:                                               ; preds = %66, %80
  %86 = phi %"class.blink::ChildListMutationAccumulator"* [ null, %66 ], [ %81, %80 ]
  %87 = getelementptr inbounds %"class.blink::ContainerNode::AdoptAndInsertBefore", %"class.blink::ContainerNode::AdoptAndInsertBefore"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #11
  call void @_ZN5blink13ContainerNode16InsertNodeVectorINS0_20AdoptAndInsertBeforeEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::Node"* nonnull %22, %"class.blink::ContainerNode::AdoptAndInsertBefore"* nonnull dereferenceable(1) %7, %"class.blink::HeapVector.1786"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #11
  %88 = icmp eq %"class.blink::ChildListMutationAccumulator"* %86, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %86) #11
  br label %90

90:                                               ; preds = %85, %89
  call void @_ZN5blink13ContainerNode19DidInsertNodeVectorERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS3_S7_(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::Node"* nonnull %22, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %6)
  %91 = load i32, i32* %72, align 4
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %93, align 8
  br i1 %92, label %95, label %97, !prof !2

95:                                               ; preds = %90
  %96 = bitcast i8* %69 to %"class.blink::Member.318"*
  br label %103

97:                                               ; preds = %90
  %98 = icmp ne %"class.blink::Member.318"* %94, null
  %99 = bitcast i8* %69 to %"class.blink::Member.318"*
  %100 = icmp ne %"class.blink::Member.318"* %94, %99
  %101 = and i1 %98, %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  store i32 0, i32* %72, align 4
  br label %103

103:                                              ; preds = %95, %102, %97
  %104 = phi %"class.blink::Member.318"* [ %96, %95 ], [ %99, %102 ], [ %99, %97 ]
  %105 = icmp eq %"class.blink::Member.318"* %94, %104
  br i1 %105, label %108, label %106, !prof !3

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %107, %"class.blink::Member.318"* %94) #11
  br label %108

108:                                              ; preds = %103, %106
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %68) #11
  br label %109

109:                                              ; preds = %62, %21, %108
  %110 = load i32, i32* %27, align 4
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %112, align 8
  br i1 %111, label %114, label %116, !prof !2

114:                                              ; preds = %109
  %115 = bitcast i8* %24 to %"class.blink::Member.318"*
  br label %122

116:                                              ; preds = %109
  %117 = icmp ne %"class.blink::Member.318"* %113, null
  %118 = bitcast i8* %24 to %"class.blink::Member.318"*
  %119 = icmp ne %"class.blink::Member.318"* %113, %118
  %120 = and i1 %117, %119
  br i1 %120, label %122, label %121

121:                                              ; preds = %116
  store i32 0, i32* %27, align 4
  br label %122

122:                                              ; preds = %114, %121, %116
  %123 = phi %"class.blink::Member.318"* [ %115, %114 ], [ %118, %121 ], [ %118, %116 ]
  %124 = icmp eq %"class.blink::Member.318"* %113, %123
  br i1 %124, label %127, label %125, !prof !3

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %126, %"class.blink::Member.318"* %113) #11
  br label %127

127:                                              ; preds = %122, %125
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %23) #11
  br label %128

128:                                              ; preds = %11, %127, %19, %9
  %129 = phi %"class.blink::Node"* [ %1, %127 ], [ %20, %19 ], [ %10, %9 ], [ %1, %11 ]
  ret %"class.blink::Node"* %129
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"* returned, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapVector.1786", align 8
  %5 = alloca %"class.blink::HeapVector.1786", align 8
  %6 = alloca %"class.blink::ContainerNode::AdoptAndAppendChild", align 1
  %7 = tail call zeroext i1 @_ZNK5blink13ContainerNode26EnsurePreInsertionValidityERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* null, %"class.blink::Node"* null, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %7, label %8, label %114

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::HeapVector.1786"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"class.blink::HeapVector.1786"* %4 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 92, i1 false) #11
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 52
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 52
  %27 = load i64, i64* %26, align 8
  %28 = call fastcc zeroext i1 @_ZN5blinkL37CollectChildrenAndRemoveFromOldParentERNS_4NodeERNS_10HeapVectorINS_6MemberIS0_EELj11EEERNS_14ExceptionStateE(%"class.blink::Node"* dereferenceable(64) %1, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %4, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %28, label %29, label %95

29:                                               ; preds = %8
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = icmp eq %"class.blink::Document"* %19, %32
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = load i64, i64* %24, align 8
  %36 = add i64 %25, 1
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = icmp eq %"class.blink::Document"* %23, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = icmp eq %"class.blink::Document"* %19, %23
  br i1 %44, label %52, label %45

45:                                               ; preds = %43
  %46 = load i64, i64* %26, align 8
  %47 = icmp eq i64 %46, %27
  br i1 %47, label %52, label %48

48:                                               ; preds = %38, %34, %29, %45
  %49 = call zeroext i1 @_ZN5blink13ContainerNode36RecheckNodeInsertionStructuralPrereqERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPKS3_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %4, %"class.blink::Node"* null, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %49, label %50, label %95

50:                                               ; preds = %48
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  br label %52

52:                                               ; preds = %50, %43, %45
  %53 = phi %"class.blink::TreeScope"* [ %51, %50 ], [ %39, %43 ], [ %39, %45 ]
  %54 = bitcast %"class.blink::HeapVector.1786"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %56 = bitcast %"class.blink::HeapVector.1786"* %5 to i8**
  store i8* %55, i8** %56, align 8
  %57 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %57, align 8
  %58 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast i32* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 92, i1 false) #11
  %60 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::Document"*, %"class.blink::Document"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %61, i64 0, i32 57
  %63 = load i8, i8* %62, align 2
  %64 = and i8 %63, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %52
  %67 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %15) #11
  %68 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %67, i64 0, i32 7
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 8
  br label %71

71:                                               ; preds = %52, %66
  %72 = phi %"class.blink::ChildListMutationAccumulator"* [ null, %52 ], [ %67, %66 ]
  %73 = getelementptr inbounds %"class.blink::ContainerNode::AdoptAndAppendChild", %"class.blink::ContainerNode::AdoptAndAppendChild"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %73) #11
  call void @_ZN5blink13ContainerNode16InsertNodeVectorINS0_19AdoptAndAppendChildEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %4, %"class.blink::Node"* null, %"class.blink::ContainerNode::AdoptAndAppendChild"* nonnull dereferenceable(1) %6, %"class.blink::HeapVector.1786"* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %73) #11
  %74 = icmp eq %"class.blink::ChildListMutationAccumulator"* %72, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %72) #11
  br label %76

76:                                               ; preds = %71, %75
  call void @_ZN5blink13ContainerNode19DidInsertNodeVectorERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS3_S7_(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %4, %"class.blink::Node"* null, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5)
  %77 = load i32, i32* %58, align 4
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %79, align 8
  br i1 %78, label %81, label %83, !prof !2

81:                                               ; preds = %76
  %82 = bitcast i8* %55 to %"class.blink::Member.318"*
  br label %89

83:                                               ; preds = %76
  %84 = icmp ne %"class.blink::Member.318"* %80, null
  %85 = bitcast i8* %55 to %"class.blink::Member.318"*
  %86 = icmp ne %"class.blink::Member.318"* %80, %85
  %87 = and i1 %84, %86
  br i1 %87, label %89, label %88

88:                                               ; preds = %83
  store i32 0, i32* %58, align 4
  br label %89

89:                                               ; preds = %81, %88, %83
  %90 = phi %"class.blink::Member.318"* [ %82, %81 ], [ %85, %88 ], [ %85, %83 ]
  %91 = icmp eq %"class.blink::Member.318"* %80, %90
  br i1 %91, label %94, label %92, !prof !3

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %93, %"class.blink::Member.318"* %80) #11
  br label %94

94:                                               ; preds = %89, %92
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %54) #11
  br label %95

95:                                               ; preds = %48, %8, %94
  %96 = load i32, i32* %13, align 4
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %98, align 8
  br i1 %97, label %100, label %102, !prof !2

100:                                              ; preds = %95
  %101 = bitcast i8* %10 to %"class.blink::Member.318"*
  br label %108

102:                                              ; preds = %95
  %103 = icmp ne %"class.blink::Member.318"* %99, null
  %104 = bitcast i8* %10 to %"class.blink::Member.318"*
  %105 = icmp ne %"class.blink::Member.318"* %99, %104
  %106 = and i1 %103, %105
  br i1 %106, label %108, label %107

107:                                              ; preds = %102
  store i32 0, i32* %13, align 4
  br label %108

108:                                              ; preds = %100, %107, %102
  %109 = phi %"class.blink::Member.318"* [ %101, %100 ], [ %104, %107 ], [ %104, %102 ]
  %110 = icmp eq %"class.blink::Member.318"* %99, %109
  br i1 %110, label %113, label %111, !prof !3

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %4, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %112, %"class.blink::Member.318"* %99) #11
  br label %113

113:                                              ; preds = %108, %111
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #11
  br label %114

114:                                              ; preds = %3, %113
  ret %"class.blink::Node"* %1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL37CollectChildrenAndRemoveFromOldParentERNS_4NodeERNS_10HeapVectorINS_6MemberIS0_EELj11EEERNS_14ExceptionStateE(%"class.blink::Node"* dereferenceable(64), %"class.blink::HeapVector.1786"* dereferenceable(104), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #6 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp ne i32 %8, 8
  %10 = icmp eq %"class.blink::Node"* %0, null
  %11 = or i1 %10, %9
  br i1 %11, label %53, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::Node"* %0 to %"class.blink::ContainerNode"*
  %14 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %16 = bitcast %"class.blink::Node"* %15 to %"class.blink::Node"**
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  store %"class.blink::Node"* %17, %"class.blink::Node"** %4, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %49, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0
  br label %24

24:                                               ; preds = %44, %19
  %25 = phi %"class.blink::Node"* [ %17, %19 ], [ %47, %44 ]
  %26 = load i32, i32* %20, align 4
  %27 = load i32, i32* %21, align 8
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %43, label %29, !prof !2

29:                                               ; preds = %24
  %30 = ptrtoint %"class.blink::Node"* %25 to i64
  %31 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %22, align 8
  %32 = zext i32 %26 to i64
  %33 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %31, i64 %32
  %34 = bitcast %"class.blink::Member.318"* %33 to i64*
  store atomic i64 %30, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %29
  %38 = bitcast %"class.blink::Node"* %25 to i8*
  %39 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #11
  br label %40

40:                                               ; preds = %37, %29
  %41 = load i32, i32* %20, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %20, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1789"* %23, %"class.blink::Node"** nonnull dereferenceable(8) %4) #11
  br label %44

44:                                               ; preds = %43, %40
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 5, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  store %"class.blink::Node"* %47, %"class.blink::Node"** %4, align 8
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %49, label %24

49:                                               ; preds = %44, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %13, i32 0)
  %50 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp ne i32 %51, 0
  br label %89

53:                                               ; preds = %3
  %54 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.blink::Node"* %0, %"class.blink::Node"** %5, align 8
  %55 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %75, label %60, !prof !2

60:                                               ; preds = %53
  %61 = ptrtoint %"class.blink::Node"* %0 to i64
  %62 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %62, align 8
  %64 = zext i32 %56 to i64
  %65 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %63, i64 %64
  %66 = bitcast %"class.blink::Member.318"* %65 to i64*
  store atomic i64 %61, i64* %66 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %60
  %70 = bitcast %"class.blink::Node"* %0 to i8*
  %71 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #11
  br label %72

72:                                               ; preds = %69, %60
  %73 = load i32, i32* %55, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %55, align 4
  br label %77

75:                                               ; preds = %53
  %76 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1789"* %76, %"class.blink::Node"** nonnull dereferenceable(8) %5) #11
  br label %77

77:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %78 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #11
  %79 = icmp eq %"class.blink::ContainerNode"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* nonnull %78, %"class.blink::Node"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %82

82:                                               ; preds = %77, %80
  %83 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %82
  %87 = load i32, i32* %55, align 4
  %88 = icmp ne i32 %87, 0
  br label %89

89:                                               ; preds = %82, %49, %86
  %90 = phi i1 [ %52, %49 ], [ false, %82 ], [ %88, %86 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ContainerNode16InsertNodeVectorINS0_20AdoptAndInsertBeforeEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_(%"class.blink::ContainerNode"*, %"class.blink::HeapVector.1786"* dereferenceable(104), %"class.blink::Node"*, %"class.blink::ContainerNode::AdoptAndInsertBefore"* dereferenceable(1), %"class.blink::HeapVector.1786"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %10 = trunc i32 %9 to i8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  tail call void @_ZN5blink5probe21WillInsertDOMNodeImplEPNS_4NodeE(%"class.blink::Node"* %8) #11
  br label %13

13:                                               ; preds = %5, %12
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %16 = ptrtoint i64* %7 to i64
  %17 = sub i64 %15, %16
  %18 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %19 = icmp ult i64 %17, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br i1 %19, label %22, label %20, !prof !3

20:                                               ; preds = %13
  %21 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %22

22:                                               ; preds = %13, %20
  %23 = phi i32* [ %21, %20 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %13 ]
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %27, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %48

35:                                               ; preds = %85, %22
  %36 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %38 = ptrtoint i64* %6 to i64
  %39 = sub i64 %37, %38
  %40 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %41 = icmp ult i64 %39, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br i1 %41, label %44, label %42, !prof !3

42:                                               ; preds = %35
  %43 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %44

44:                                               ; preds = %35, %42
  %45 = phi i32* [ %43, %42 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %35 ]
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, -1
  store i32 %47, i32* %45, align 4
  ret void

48:                                               ; preds = %33, %85
  %49 = phi %"class.blink::Member.318"* [ %27, %33 ], [ %86, %85 ]
  %50 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  call void @_ZN5blink9TreeScope13AdoptIfNeededERNS_4NodeE(%"class.blink::TreeScope"* %52, %"class.blink::Node"* dereferenceable(64) %51) #11
  call void @_ZN5blink13ContainerNode18InsertBeforeCommonERNS_4NodeES2_(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %2, %"class.blink::Node"* dereferenceable(64) %51) #11
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %55, i64 0, i32 57
  %57 = load i8, i8* %56, align 2
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %48
  %61 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %8) #11
  %62 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %61, i64 0, i32 7
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %63, 1
  store i32 %64, i32* %62, align 8
  %65 = icmp eq %"class.blink::ChildListMutationAccumulator"* %61, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %61, i64 0, i32 6, i32 0, i32 0
  %68 = load %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationObserverInterestGroup"** %67, align 8
  %69 = icmp eq %"class.blink::MutationObserverInterestGroup"* %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZN5blink28ChildListMutationAccumulator10ChildAddedERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"* nonnull %61, %"class.blink::Node"* dereferenceable(64) %51) #11
  br label %71

71:                                               ; preds = %70, %66
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %61) #11
  br label %72

72:                                               ; preds = %48, %60, %71
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %75, i64 0, i32 4
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %51, i32 0) #11
  br label %80

80:                                               ; preds = %79, %72
  %81 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %82 = and i32 %81, 448
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  call void @_ZN5blink5probe20DidInsertDOMNodeImplEPNS_4NodeE(%"class.blink::Node"* %51) #11
  br label %85

85:                                               ; preds = %80, %84
  call void @_ZN5blink13ContainerNode26NotifyNodeInsertedInternalERNS_4NodeERNS_10HeapVectorINS_6MemberIS1_EELj11EEE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %51, %"class.blink::HeapVector.1786"* dereferenceable(104) %4)
  %86 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %49, i64 1
  %87 = icmp eq %"class.blink::Member.318"* %86, %31
  br i1 %87, label %35, label %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %14 = call %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %1, %"class.blink::Node"* %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %13)
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #11
  ret %"class.blink::Node"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #11
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #11
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #11
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode18InsertBeforeCommonERNS_4NodeES2_(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 4
  %7 = ptrtoint %"class.blink::Node"* %2 to i64
  %8 = bitcast %"class.blink::Member.318"* %6 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::Node"* %2 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #11
  br label %14

14:                                               ; preds = %3, %11
  %15 = icmp eq %"class.blink::Node"* %5, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 5
  %18 = bitcast %"class.blink::Member.318"* %17 to i64*
  store atomic i64 %7, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %2 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %32

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.318"* %25 to i64*
  store atomic i64 %7, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Node"* %2 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #11
  br label %32

32:                                               ; preds = %29, %24, %21, %16
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 2
  %34 = ptrtoint %"class.blink::ContainerNode"* %0 to i64
  %35 = bitcast %"class.blink::Member.318"* %33 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::ContainerNode"* %0 to i8*
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #11
  br label %41

41:                                               ; preds = %32, %38
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 4
  %43 = ptrtoint %"class.blink::Node"* %5 to i64
  %44 = bitcast %"class.blink::Member.318"* %42 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::Node"* %5 to i8*
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %41, %47
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 5
  %52 = ptrtoint %"class.blink::Node"* %1 to i64
  %53 = bitcast %"class.blink::Member.318"* %51 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.blink::Node"* %1 to i8*
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #11
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode17AppendChildCommonERNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 2
  %4 = ptrtoint %"class.blink::ContainerNode"* %0 to i64
  %5 = bitcast %"class.blink::Member.318"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ContainerNode"* %0 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 4
  %17 = ptrtoint %"class.blink::Node"* %13 to i64
  %18 = bitcast %"class.blink::Member.318"* %16 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::Node"* %13 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %22) #11
  br label %24

24:                                               ; preds = %15, %21
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 5
  %27 = ptrtoint %"class.blink::Node"* %1 to i64
  %28 = bitcast %"class.blink::Member.318"* %26 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::Node"* %1 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #11
  br label %43

34:                                               ; preds = %11
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1
  %36 = ptrtoint %"class.blink::Node"* %1 to i64
  %37 = bitcast %"class.blink::Member.318"* %35 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.blink::Node"* %1 to i8*
  %42 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #11
  br label %43

43:                                               ; preds = %40, %34, %31, %24
  %44 = phi i64 [ %36, %40 ], [ %36, %34 ], [ %27, %31 ], [ %27, %24 ]
  %45 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 2
  %46 = bitcast %"class.blink::Member.318"* %45 to i64*
  store atomic i64 %44, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.blink::Node"* %1 to i8*
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #11
  br label %52

52:                                               ; preds = %43, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode18ParserInsertBeforeEPNS_4NodeERS1_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, %1
  %11 = icmp eq %"class.blink::Node"* %2, %1
  %12 = or i1 %11, %10
  br i1 %12, label %113, label %13

13:                                               ; preds = %3
  %14 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 0, i32 0
  %22 = icmp eq %"class.blink::Node"* %21, %16
  br i1 %22, label %23, label %35

23:                                               ; preds = %15
  %24 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Document"*
  %25 = bitcast %"class.blink::DummyExceptionStateForTesting"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %27, align 8
  %28 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #11
  %32 = bitcast i8** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0
  %34 = call zeroext i1 @_ZNK5blink8Document14CanAcceptChildERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::Document"* nonnull %24, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* null, %"class.blink::Node"* null, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %33) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #11
  br i1 %34, label %35, label %113

35:                                               ; preds = %15, %13, %23
  %36 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #11
  %37 = icmp eq %"class.blink::ContainerNode"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"class.blink::ContainerNode"* [ %40, %38 ], [ %36, %35 ]
  call void @_ZN5blink13ContainerNode17ParserRemoveChildERNS_4NodeE(%"class.blink::ContainerNode"* nonnull %39, %"class.blink::Node"* dereferenceable(64) %1)
  %40 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #11
  %41 = icmp eq %"class.blink::ContainerNode"* %40, null
  br i1 %41, label %42, label %38

42:                                               ; preds = %38, %35
  %43 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #11
  %44 = icmp eq %"class.blink::ContainerNode"* %43, %0
  br i1 %44, label %45, label %113

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %47 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  %55 = icmp eq %"class.blink::Document"* %50, %54
  br i1 %55, label %67, label %56

56:                                               ; preds = %45
  %57 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #11
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %62 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %63 = bitcast %"class.WTF::StringImpl"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  %64 = bitcast i8** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %65 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  %66 = call %"class.blink::Node"* @_ZN5blink8Document9adoptNodeEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::Document"* %50, %"class.blink::Node"* %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %65) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #11
  br label %67

67:                                               ; preds = %45, %56
  %68 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11
  %69 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %70 = ptrtoint i64* %4 to i64
  %71 = sub i64 %69, %70
  %72 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %73 = icmp ult i64 %71, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  br i1 %73, label %76, label %74, !prof !3

74:                                               ; preds = %67
  %75 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %76

76:                                               ; preds = %67, %74
  %77 = phi i32* [ %75, %74 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %67 ]
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %77, align 4
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  call void @_ZN5blink9TreeScope13AdoptIfNeededERNS_4NodeE(%"class.blink::TreeScope"* %80, %"class.blink::Node"* dereferenceable(64) %1) #11
  call void @_ZN5blink13ContainerNode18InsertBeforeCommonERNS_4NodeES2_(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %2, %"class.blink::Node"* dereferenceable(64) %1) #11
  %81 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %82 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %81, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::Document"*, %"class.blink::Document"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %83, i64 0, i32 57
  %85 = load i8, i8* %84, align 2
  %86 = and i8 %85, 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %76
  %89 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %46) #11
  %90 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %89, i64 0, i32 7
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 1
  store i32 %92, i32* %90, align 8
  %93 = icmp eq %"class.blink::ChildListMutationAccumulator"* %89, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %89, i64 0, i32 6, i32 0, i32 0
  %96 = load %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationObserverInterestGroup"** %95, align 8
  %97 = icmp eq %"class.blink::MutationObserverInterestGroup"* %96, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  call void @_ZN5blink28ChildListMutationAccumulator10ChildAddedERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"* nonnull %89, %"class.blink::Node"* dereferenceable(64) %1) #11
  br label %99

99:                                               ; preds = %98, %94
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %89) #11
  br label %100

100:                                              ; preds = %76, %88, %99
  %101 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #11
  %102 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %103 = ptrtoint i64* %5 to i64
  %104 = sub i64 %102, %103
  %105 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %106 = icmp ult i64 %104, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #11
  br i1 %106, label %109, label %107, !prof !3

107:                                              ; preds = %100
  %108 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %109

109:                                              ; preds = %100, %107
  %110 = phi i32* [ %108, %107 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %100 ]
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, -1
  store i32 %112, i32* %110, align 4
  call void @_ZN5blink13ContainerNode18NotifyNodeInsertedERNS_4NodeENS0_20ChildrenChangeSourceE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1, i8 zeroext 1)
  br label %113

113:                                              ; preds = %23, %42, %3, %109
  ret void
}

declare %"class.blink::Node"* @_ZN5blink8Document9adoptNodeEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::Document"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode18NotifyNodeInsertedERNS_4NodeENS0_20ChildrenChangeSourceE(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64), i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::HeapVector.1786", align 8
  %6 = alloca %"struct.blink::ContainerNode::ChildrenChange", align 8
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %1, i32 0) #11
  br label %15

15:                                               ; preds = %14, %3
  %16 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %17 = and i32 %16, 448
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZN5blink5probe20DidInsertDOMNodeImplEPNS_4NodeE(%"class.blink::Node"* %1) #11
  br label %20

20:                                               ; preds = %15, %19
  %21 = bitcast %"class.blink::HeapVector.1786"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %23 = bitcast %"class.blink::HeapVector.1786"* %5 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast i32* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 92, i1 false) #11
  call void @_ZN5blink13ContainerNode26NotifyNodeInsertedInternalERNS_4NodeERNS_10HeapVectorINS_6MemberIS1_EELj11EEE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5)
  %27 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 4, i32 0, i32 0
  %29 = bitcast %"class.blink::Node"** %28 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  %31 = bitcast %"struct.blink::ContainerNode::ChildrenChange"* %6 to i64*
  store i64 -6148914691236517206, i64* %31, align 8, !alias.scope !14
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 8, !noalias !14
  %34 = and i32 %33, 12
  %35 = icmp ne i32 %34, 0
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %27, align 8, !alias.scope !14
  %37 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 1
  store i8 %2, i8* %37, align 1, !alias.scope !14
  %38 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %38, align 8, !alias.scope !14
  %39 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 3
  %40 = bitcast %"class.blink::Node"** %39 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %40, align 8, !alias.scope !14
  %41 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 5
  %42 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 6
  %43 = bitcast %"class.WTF::String"* %4 to i8*
  %44 = bitcast %"class.blink::HeapVector.1794"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #11, !alias.scope !14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11, !noalias !14
  store %"class.WTF::String"* %4, %"class.WTF::String"** %42, align 8, !alias.scope !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11, !noalias !14
  %45 = bitcast %"class.blink::ContainerNode"* %0 to void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)***
  %46 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)**, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %46, i64 72
  %48 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %47, align 8
  call void %48(%"class.blink::ContainerNode"* %0, %"struct.blink::ContainerNode::ChildrenChange"* nonnull dereferenceable(56) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %27) #11
  %49 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %49, align 8
  %51 = load i32, i32* %25, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %50, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %59, label %75, !prof !17

55:                                               ; preds = %88
  %56 = load i32, i32* %25, align 4
  %57 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %49, align 8
  %58 = icmp eq i32 %56, 0
  br i1 %58, label %59, label %62, !prof !2

59:                                               ; preds = %20, %55
  %60 = phi %"class.blink::Member.318"* [ %57, %55 ], [ %50, %20 ]
  %61 = bitcast i8* %22 to %"class.blink::Member.318"*
  br label %68

62:                                               ; preds = %55
  %63 = icmp ne %"class.blink::Member.318"* %57, null
  %64 = bitcast i8* %22 to %"class.blink::Member.318"*
  %65 = icmp ne %"class.blink::Member.318"* %57, %64
  %66 = and i1 %63, %65
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  store i32 0, i32* %25, align 4
  br label %68

68:                                               ; preds = %59, %67, %62
  %69 = phi %"class.blink::Member.318"* [ %60, %59 ], [ %57, %67 ], [ %57, %62 ]
  %70 = phi %"class.blink::Member.318"* [ %61, %59 ], [ %64, %67 ], [ %64, %62 ]
  %71 = icmp eq %"class.blink::Member.318"* %69, %70
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %73, %"class.blink::Member.318"* %69) #11
  br label %74

74:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %21) #11
  ret void

75:                                               ; preds = %20, %88
  %76 = phi %"class.blink::Member.318"* [ %89, %88 ], [ %50, %20 ]
  %77 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %78, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 256
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %75
  %84 = bitcast %"class.blink::Node"* %78 to void (%"class.blink::Node"*)***
  %85 = load void (%"class.blink::Node"*)**, void (%"class.blink::Node"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::Node"*)*, void (%"class.blink::Node"*)** %85, i64 58
  %87 = load void (%"class.blink::Node"*)*, void (%"class.blink::Node"*)** %86, align 8
  call void %87(%"class.blink::Node"* %78) #11
  br label %88

88:                                               ; preds = %75, %83
  %89 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %76, i64 1
  %90 = icmp eq %"class.blink::Member.318"* %89, %53
  br i1 %90, label %55, label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.1786", align 8
  %6 = alloca %"class.blink::HeapVector.1786", align 8
  %7 = alloca %"class.blink::ContainerNode::AdoptAndInsertBefore", align 1
  %8 = alloca %"class.blink::ContainerNode::AdoptAndAppendChild", align 1
  %9 = icmp eq %"class.blink::Node"* %2, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %221

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZNK5blink13ContainerNode26EnsurePreInsertionValidityERKNS_4NodeEPS2_S4_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::Node"* null, %"class.blink::Node"* nonnull %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %12, label %13, label %221

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, %1
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  br label %20

20:                                               ; preds = %17, %13
  %21 = phi %"class.blink::Node"* [ %19, %17 ], [ %15, %13 ]
  %22 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #11
  %23 = icmp eq %"class.blink::ContainerNode"* %22, null
  br i1 %23, label %61, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 52
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 52
  %36 = load i64, i64* %35, align 8
  %37 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* nonnull %22, %"class.blink::Node"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %221

41:                                               ; preds = %24
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = icmp eq %"class.blink::Document"* %28, %44
  br i1 %45, label %46, label %61

46:                                               ; preds = %41
  %47 = load i64, i64* %33, align 8
  %48 = add i64 %34, 1
  %49 = icmp ugt i64 %47, %48
  br i1 %49, label %61, label %50

50:                                               ; preds = %46
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = icmp eq %"class.blink::Document"* %32, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = icmp eq %"class.blink::Document"* %28, %32
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = load i64, i64* %35, align 8
  %59 = icmp eq i64 %58, %36
  br i1 %59, label %60, label %61

60:                                               ; preds = %55, %57
  br label %61

61:                                               ; preds = %50, %46, %41, %60, %57, %20
  %62 = phi i8 [ 0, %20 ], [ 1, %57 ], [ 0, %60 ], [ 1, %41 ], [ 1, %46 ], [ 1, %50 ]
  %63 = bitcast %"class.blink::HeapVector.1786"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %65 = bitcast %"class.blink::HeapVector.1786"* %5 to i8**
  store i8* %64, i8** %65, align 8
  %66 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %66, align 8
  %67 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %68 = bitcast i32* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 92, i1 false) #11
  %69 = bitcast %"class.blink::HeapVector.1786"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %69) #11
  %70 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %71 = bitcast %"class.blink::HeapVector.1786"* %6 to i8**
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %72, align 8
  %73 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = bitcast i32* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 92, i1 false) #11
  %75 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::Document"*, %"class.blink::Document"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %78, i64 0, i32 57
  %80 = load i8, i8* %79, align 2
  %81 = and i8 %80, 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %61
  %84 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %85 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %84) #11
  %86 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %85, i64 0, i32 7
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 8
  br label %89

89:                                               ; preds = %61, %83
  %90 = phi %"class.blink::ChildListMutationAccumulator"* [ null, %61 ], [ %85, %83 ]
  %91 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %2) #11
  %92 = icmp eq %"class.blink::ContainerNode"* %91, null
  br i1 %92, label %129, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 3, i32 0, i32 0
  %95 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %95, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::Document"*, %"class.blink::Document"** %96, align 8
  %98 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %99 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::Document"*, %"class.blink::Document"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %97, i64 0, i32 52
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %100, i64 0, i32 52
  %104 = load i64, i64* %103, align 8
  %105 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* nonnull %91, %"class.blink::Node"* nonnull %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %106 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %175

109:                                              ; preds = %93
  %110 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %94, align 8
  %111 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %110, i64 0, i32 2, i32 0, i32 0
  %112 = load %"class.blink::Document"*, %"class.blink::Document"** %111, align 8
  %113 = icmp eq %"class.blink::Document"* %97, %112
  br i1 %113, label %114, label %129

114:                                              ; preds = %109
  %115 = load i64, i64* %101, align 8
  %116 = add i64 %102, 1
  %117 = icmp ugt i64 %115, %116
  br i1 %117, label %129, label %118

118:                                              ; preds = %114
  %119 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %120 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %119, i64 0, i32 2, i32 0, i32 0
  %121 = load %"class.blink::Document"*, %"class.blink::Document"** %120, align 8
  %122 = icmp eq %"class.blink::Document"* %100, %121
  br i1 %122, label %123, label %129

123:                                              ; preds = %118
  %124 = icmp eq %"class.blink::Document"* %97, %100
  br i1 %124, label %128, label %125

125:                                              ; preds = %123
  %126 = load i64, i64* %103, align 8
  %127 = icmp eq i64 %126, %104
  br i1 %127, label %128, label %129

128:                                              ; preds = %123, %125
  br label %129

129:                                              ; preds = %118, %114, %109, %128, %125, %89
  %130 = phi i8 [ %62, %89 ], [ 1, %125 ], [ %62, %128 ], [ 1, %109 ], [ 1, %114 ], [ 1, %118 ]
  %131 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %132 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %131, i64 0, i32 2, i32 0, i32 0
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  %137 = load %"class.blink::Document"*, %"class.blink::Document"** %132, align 8
  %138 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %136, i64 0, i32 52
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %137, i64 0, i32 52
  %141 = load i64, i64* %140, align 8
  %142 = call fastcc zeroext i1 @_ZN5blinkL37CollectChildrenAndRemoveFromOldParentERNS_4NodeERNS_10HeapVectorINS_6MemberIS0_EELj11EEERNS_14ExceptionStateE(%"class.blink::Node"* dereferenceable(64) %1, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %142, label %143, label %175

143:                                              ; preds = %129
  %144 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %145 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %144, i64 0, i32 2, i32 0, i32 0
  %146 = load %"class.blink::Document"*, %"class.blink::Document"** %145, align 8
  %147 = icmp eq %"class.blink::Document"* %136, %146
  br i1 %147, label %148, label %167

148:                                              ; preds = %143
  %149 = load i64, i64* %138, align 8
  %150 = add i64 %139, 1
  %151 = icmp ugt i64 %149, %150
  br i1 %151, label %167, label %152

152:                                              ; preds = %148
  %153 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %154 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %153, i64 0, i32 2, i32 0, i32 0
  %155 = load %"class.blink::Document"*, %"class.blink::Document"** %154, align 8
  %156 = icmp eq %"class.blink::Document"* %137, %155
  br i1 %156, label %157, label %167

157:                                              ; preds = %152
  %158 = icmp eq %"class.blink::Document"* %136, %137
  br i1 %158, label %162, label %159

159:                                              ; preds = %157
  %160 = load i64, i64* %140, align 8
  %161 = icmp eq i64 %160, %141
  br label %162

162:                                              ; preds = %157, %159
  %163 = phi i1 [ %161, %159 ], [ true, %157 ]
  %164 = and i8 %130, 1
  %165 = icmp eq i8 %164, 0
  %166 = and i1 %165, %163
  br i1 %166, label %169, label %167

167:                                              ; preds = %152, %148, %143, %162
  %168 = call zeroext i1 @_ZN5blink13ContainerNode36RecheckNodeInsertionStructuralPrereqERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPKS3_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::Node"* %21, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %168, label %169, label %175

169:                                              ; preds = %162, %167
  %170 = icmp eq %"class.blink::Node"* %21, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %169
  %172 = getelementptr inbounds %"class.blink::ContainerNode::AdoptAndInsertBefore", %"class.blink::ContainerNode::AdoptAndInsertBefore"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172) #11
  call void @_ZN5blink13ContainerNode16InsertNodeVectorINS0_20AdoptAndInsertBeforeEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::Node"* nonnull %21, %"class.blink::ContainerNode::AdoptAndInsertBefore"* nonnull dereferenceable(1) %7, %"class.blink::HeapVector.1786"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #11
  br label %175

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::ContainerNode::AdoptAndAppendChild", %"class.blink::ContainerNode::AdoptAndAppendChild"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %174) #11
  call void @_ZN5blink13ContainerNode16InsertNodeVectorINS0_19AdoptAndAppendChildEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::Node"* null, %"class.blink::ContainerNode::AdoptAndAppendChild"* nonnull dereferenceable(1) %8, %"class.blink::HeapVector.1786"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %174) #11
  br label %175

175:                                              ; preds = %93, %129, %167, %173, %171
  %176 = phi %"class.blink::Node"* [ null, %93 ], [ %2, %129 ], [ %2, %167 ], [ null, %173 ], [ null, %171 ]
  %177 = phi i32 [ 1, %93 ], [ 1, %129 ], [ 1, %167 ], [ 0, %173 ], [ 0, %171 ]
  %178 = icmp eq %"class.blink::ChildListMutationAccumulator"* %90, null
  br i1 %178, label %180, label %179

179:                                              ; preds = %175
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %90) #11
  br label %180

180:                                              ; preds = %175, %179
  %181 = icmp eq i32 %177, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %180
  call void @_ZN5blink13ContainerNode19DidInsertNodeVectorERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS3_S7_(%"class.blink::ContainerNode"* %0, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %5, %"class.blink::Node"* %21, %"class.blink::HeapVector.1786"* nonnull dereferenceable(104) %6)
  br label %183

183:                                              ; preds = %180, %182
  %184 = phi %"class.blink::Node"* [ %2, %182 ], [ %176, %180 ]
  %185 = load i32, i32* %73, align 4
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %187, align 8
  br i1 %186, label %189, label %191, !prof !2

189:                                              ; preds = %183
  %190 = bitcast i8* %70 to %"class.blink::Member.318"*
  br label %197

191:                                              ; preds = %183
  %192 = icmp ne %"class.blink::Member.318"* %188, null
  %193 = bitcast i8* %70 to %"class.blink::Member.318"*
  %194 = icmp ne %"class.blink::Member.318"* %188, %193
  %195 = and i1 %192, %194
  br i1 %195, label %197, label %196

196:                                              ; preds = %191
  store i32 0, i32* %73, align 4
  br label %197

197:                                              ; preds = %189, %196, %191
  %198 = phi %"class.blink::Member.318"* [ %190, %189 ], [ %193, %196 ], [ %193, %191 ]
  %199 = icmp eq %"class.blink::Member.318"* %188, %198
  br i1 %199, label %202, label %200, !prof !3

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %201, %"class.blink::Member.318"* %188) #11
  br label %202

202:                                              ; preds = %197, %200
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %69) #11
  %203 = load i32, i32* %67, align 4
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %206 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %205, align 8
  br i1 %204, label %207, label %209, !prof !2

207:                                              ; preds = %202
  %208 = bitcast i8* %64 to %"class.blink::Member.318"*
  br label %215

209:                                              ; preds = %202
  %210 = icmp ne %"class.blink::Member.318"* %206, null
  %211 = bitcast i8* %64 to %"class.blink::Member.318"*
  %212 = icmp ne %"class.blink::Member.318"* %206, %211
  %213 = and i1 %210, %212
  br i1 %213, label %215, label %214

214:                                              ; preds = %209
  store i32 0, i32* %67, align 4
  br label %215

215:                                              ; preds = %207, %214, %209
  %216 = phi %"class.blink::Member.318"* [ %208, %207 ], [ %211, %214 ], [ %211, %209 ]
  %217 = icmp eq %"class.blink::Member.318"* %206, %216
  br i1 %217, label %220, label %218, !prof !3

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %219, %"class.blink::Member.318"* %206) #11
  br label %220

220:                                              ; preds = %215, %218
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %63) #11
  br label %221

221:                                              ; preds = %24, %220, %11, %10
  %222 = phi %"class.blink::Node"* [ null, %10 ], [ %2, %11 ], [ %184, %220 ], [ null, %24 ]
  ret %"class.blink::Node"* %222
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope", align 1
  %6 = alloca %"struct.blink::ContainerNode::ChildrenChange", align 8
  %7 = icmp eq %"class.blink::Node"* %1, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #11
  %10 = icmp eq %"class.blink::ContainerNode"* %9, %0
  br i1 %10, label %11, label %18

11:                                               ; preds = %8
  %12 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %13 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %12, align 8
  %14 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %13, i64 34
  %15 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %14, align 8
  %16 = tail call zeroext i8 %15(%"class.blink::Node"* nonnull %1) #11
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %11, %8, %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %73

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  tail call void @_ZN5blink8Document29RemoveFocusedElementOfSubtreeERNS_4NodeEb(%"class.blink::Document"* %24, %"class.blink::Node"* nonnull dereferenceable(64) %1, i1 zeroext false) #11
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #11
  %26 = icmp eq %"class.blink::ContainerNode"* %25, %0
  br i1 %26, label %28, label %27

27:                                               ; preds = %19
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %73

28:                                               ; preds = %19
  tail call void @_ZN5blink13ContainerNode15WillRemoveChildERNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* nonnull dereferenceable(64) %1)
  %29 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #11
  %30 = icmp eq %"class.blink::ContainerNode"* %29, %0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.7, i64 0, i64 0)) #11
  br label %73

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope", %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #11
  store i8 -86, i8* %33, align 1
  %34 = load i32, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %35 = add nsw i32 %34, 2
  store i32 %35, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 4, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 5, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 59, i32 0, i32 0
  %44 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %44, i64 0, i32 20
  %46 = load i8, i8* %45, align 1, !range !4
  store i8 1, i8* %45, align 1
  tail call void @_ZN5blink13ContainerNode13RemoveBetweenEPNS_4NodeES2_RS1_(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %37, %"class.blink::Node"* %39, %"class.blink::Node"* nonnull dereferenceable(64) %1)
  tail call void @_ZN5blink13ContainerNode17NotifyNodeRemovedERNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* nonnull dereferenceable(64) %1)
  %47 = icmp eq i8* %45, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %32
  store i8 %46, i8* %45, align 1
  br label %49

49:                                               ; preds = %32, %48
  %50 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %50) #11
  %51 = bitcast %"struct.blink::ContainerNode::ChildrenChange"* %6 to i64*
  store i64 -6148914691236560726, i64* %51, align 8, !alias.scope !18
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 8, !noalias !18
  %54 = and i32 %53, 12
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %55, i8 2, i8 3
  store i8 %56, i8* %50, align 8, !alias.scope !18
  %57 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %57, align 8, !alias.scope !18
  %58 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 3
  store %"class.blink::Node"* %37, %"class.blink::Node"** %58, align 8, !alias.scope !18
  %59 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 4
  store %"class.blink::Node"* %39, %"class.blink::Node"** %59, align 8, !alias.scope !18
  %60 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 5
  %61 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %6, i64 0, i32 6
  %62 = bitcast %"class.WTF::String"* %4 to i8*
  %63 = bitcast %"class.blink::HeapVector.1794"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11, !alias.scope !18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11, !noalias !18
  store %"class.WTF::String"* %4, %"class.WTF::String"** %61, align 8, !alias.scope !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11, !noalias !18
  %64 = bitcast %"class.blink::ContainerNode"* %0 to void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)***
  %65 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)**, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %65, i64 72
  %67 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %66, align 8
  call void %67(%"class.blink::ContainerNode"* %0, %"struct.blink::ContainerNode::ChildrenChange"* nonnull dereferenceable(56) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %50) #11
  %68 = load i32, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %69 = add nsw i32 %68, -2
  store i32 %69, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %72

71:                                               ; preds = %49
  call void @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope28PerformDeferredPluginDisposeEv(%"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope"* nonnull %5) #11
  br label %72

72:                                               ; preds = %49, %71
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #11
  call void @_ZN5blink4Node28DispatchSubtreeModifiedEventEv(%"class.blink::Node"* %20) #11
  br label %73

73:                                               ; preds = %27, %31, %72, %18
  %74 = phi %"class.blink::Node"* [ null, %18 ], [ null, %27 ], [ null, %31 ], [ %1, %72 ]
  ret %"class.blink::Node"* %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ContainerNode16InsertNodeVectorINS0_19AdoptAndAppendChildEEEvRKNS_10HeapVectorINS_6MemberINS_4NodeEEELj11EEEPS5_RKT_PS7_(%"class.blink::ContainerNode"*, %"class.blink::HeapVector.1786"* dereferenceable(104), %"class.blink::Node"*, %"class.blink::ContainerNode::AdoptAndAppendChild"* dereferenceable(1), %"class.blink::HeapVector.1786"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %10 = trunc i32 %9 to i8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  tail call void @_ZN5blink5probe21WillInsertDOMNodeImplEPNS_4NodeE(%"class.blink::Node"* %8) #11
  br label %13

13:                                               ; preds = %5, %12
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %16 = ptrtoint i64* %7 to i64
  %17 = sub i64 %15, %16
  %18 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %19 = icmp ult i64 %17, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br i1 %19, label %22, label %20, !prof !3

20:                                               ; preds = %13
  %21 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %22

22:                                               ; preds = %13, %20
  %23 = phi i32* [ %21, %20 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %13 ]
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %27, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  br label %48

35:                                               ; preds = %85, %22
  %36 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %38 = ptrtoint i64* %6 to i64
  %39 = sub i64 %37, %38
  %40 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %41 = icmp ult i64 %39, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br i1 %41, label %44, label %42, !prof !3

42:                                               ; preds = %35
  %43 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %44

44:                                               ; preds = %35, %42
  %45 = phi i32* [ %43, %42 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %35 ]
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, -1
  store i32 %47, i32* %45, align 4
  ret void

48:                                               ; preds = %33, %85
  %49 = phi %"class.blink::Member.318"* [ %27, %33 ], [ %86, %85 ]
  %50 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  call void @_ZN5blink9TreeScope13AdoptIfNeededERNS_4NodeE(%"class.blink::TreeScope"* %52, %"class.blink::Node"* dereferenceable(64) %51) #11
  call void @_ZN5blink13ContainerNode17AppendChildCommonERNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %51) #11
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %55, i64 0, i32 57
  %57 = load i8, i8* %56, align 2
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %48
  %61 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %8) #11
  %62 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %61, i64 0, i32 7
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %63, 1
  store i32 %64, i32* %62, align 8
  %65 = icmp eq %"class.blink::ChildListMutationAccumulator"* %61, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %61, i64 0, i32 6, i32 0, i32 0
  %68 = load %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationObserverInterestGroup"** %67, align 8
  %69 = icmp eq %"class.blink::MutationObserverInterestGroup"* %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZN5blink28ChildListMutationAccumulator10ChildAddedERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"* nonnull %61, %"class.blink::Node"* dereferenceable(64) %51) #11
  br label %71

71:                                               ; preds = %70, %66
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %61) #11
  br label %72

72:                                               ; preds = %48, %60, %71
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %75, i64 0, i32 4
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %51, i32 0) #11
  br label %80

80:                                               ; preds = %79, %72
  %81 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %82 = and i32 %81, 448
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  call void @_ZN5blink5probe20DidInsertDOMNodeImplEPNS_4NodeE(%"class.blink::Node"* %51) #11
  br label %85

85:                                               ; preds = %80, %84
  call void @_ZN5blink13ContainerNode26NotifyNodeInsertedInternalERNS_4NodeERNS_10HeapVectorINS_6MemberIS1_EELj11EEE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %51, %"class.blink::HeapVector.1786"* dereferenceable(104) %4)
  %86 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %49, i64 1
  %87 = icmp eq %"class.blink::Member.318"* %86, %31
  br i1 %87, label %35, label %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %14 = call %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %1, %"class.blink::Node"* %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %13)
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #11
  ret %"class.blink::Node"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode15WillRemoveChildERNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ChildFrameDisconnector", align 8
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 57
  %11 = load i8, i8* %10, align 2
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %16 = tail call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %15) #11
  %17 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %16, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = icmp eq %"class.blink::ChildListMutationAccumulator"* %16, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %16, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationObserverInterestGroup"** %22, align 8
  %24 = icmp eq %"class.blink::MutationObserverInterestGroup"* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZN5blink28ChildListMutationAccumulator15WillRemoveChildERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"* nonnull %16, %"class.blink::Node"* dereferenceable(64) %1) #11
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %16) #11
  br label %27

27:                                               ; preds = %2, %14, %26
  tail call void @_ZN5blink4Node37NotifyMutationObserversNodeWillDetachEv(%"class.blink::Node"* %1) #11
  tail call fastcc void @_ZN5blinkL26DispatchChildRemovalEventsERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1)
  %28 = bitcast %"class.blink::ChildFrameDisconnector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %30 = bitcast %"class.blink::ChildFrameDisconnector"* %5 to i8**
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 84, i1 false) #11
  %34 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %5, i64 0, i32 1
  store %"class.blink::Node"* %1, %"class.blink::Node"** %34, align 8
  call void @_ZN5blink22ChildFrameDisconnector10DisconnectENS0_16DisconnectPolicyE(%"class.blink::ChildFrameDisconnector"* nonnull %5, i32 0) #11
  %35 = load i32, i32* %32, align 4
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::Member.1810"*, %"class.blink::Member.1810"** %37, align 8
  br i1 %36, label %39, label %41, !prof !2

39:                                               ; preds = %27
  %40 = bitcast i8* %29 to %"class.blink::Member.1810"*
  br label %47

41:                                               ; preds = %27
  %42 = icmp ne %"class.blink::Member.1810"* %38, null
  %43 = bitcast i8* %29 to %"class.blink::Member.1810"*
  %44 = icmp ne %"class.blink::Member.1810"* %38, %43
  %45 = and i1 %42, %44
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  store i32 0, i32* %32, align 4
  br label %47

47:                                               ; preds = %39, %46, %41
  %48 = phi %"class.blink::Member.1810"* [ %40, %39 ], [ %43, %46 ], [ %43, %41 ]
  %49 = icmp eq %"class.blink::Member.1810"* %38, %48
  br i1 %49, label %52, label %50, !prof !3

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_21HTMLFrameOwnerElementEEELj10ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1808"* nonnull %51, %"class.blink::Member.1810"* %38) #11
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %28) #11
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %57 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::Document"*, %"class.blink::Document"** %58, align 8
  %60 = icmp eq %"class.blink::Document"* %55, %59
  br i1 %60, label %61, label %104

61:                                               ; preds = %52
  %62 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  %63 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %64 = ptrtoint i64* %3 to i64
  %65 = sub i64 %63, %64
  %66 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %67 = icmp ult i64 %65, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  br i1 %67, label %68, label %71, !prof !3

68:                                               ; preds = %61
  %69 = load i32, i32* @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, align 4
  br label %78

71:                                               ; preds = %61
  %72 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %72, align 4
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %76, align 8
  br label %78

78:                                               ; preds = %68, %71
  %79 = phi %"class.blink::Document"* [ %55, %68 ], [ %77, %71 ]
  call void @_ZN5blink8Document17NodeWillBeRemovedERNS_4NodeE(%"class.blink::Document"* %79, %"class.blink::Node"* dereferenceable(64) %1) #11
  %80 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq %"class.blink::Node"* %1, null
  %83 = and i32 %81, 67108876
  %84 = icmp ne i32 %83, 67108864
  %85 = or i1 %84, %82
  br i1 %85, label %91, label %86, !prof !21

86:                                               ; preds = %78
  %87 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  %88 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %87) #11
  %89 = icmp eq %"class.blink::DisplayLockContext"* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  call void @_ZN5blink18DisplayLockContext20NotifyWillDisconnectEv(%"class.blink::DisplayLockContext"* nonnull %88) #11
  br label %91

91:                                               ; preds = %90, %86, %78
  %92 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %94 = ptrtoint i64* %4 to i64
  %95 = sub i64 %93, %94
  %96 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %97 = icmp ult i64 %95, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  br i1 %97, label %100, label %98, !prof !3

98:                                               ; preds = %91
  %99 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %100

100:                                              ; preds = %91, %98
  %101 = phi i32* [ %99, %98 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %91 ]
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %102, -1
  store i32 %103, i32* %101, align 4
  br label %104

104:                                              ; preds = %100, %52
  ret void
}

declare void @_ZN5blink4Node37NotifyMutationObserversNodeWillDetachEv(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL26DispatchChildRemovalEventsERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) unnamed_addr #0 {
  %2 = alloca %"class.blink::NodeChildRemovalTracker", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::NodeChildRemovalTracker", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 512
  %13 = icmp eq i32 %12, 0
  %14 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %15 = and i32 %14, 192
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %1
  tail call void @_ZN5blink5probe21WillRemoveDOMNodeImplEPNS_4NodeE(%"class.blink::Node"* %0) #11
  br label %18

18:                                               ; preds = %1, %17
  br i1 %13, label %19, label %207

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #11
  %25 = icmp eq %"class.blink::ContainerNode"* %24, null
  br i1 %25, label %102, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 56
  %28 = load i16, i16* %27, align 8
  %29 = and i16 %28, 4
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %102, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::NodeChildRemovalTracker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.blink::NodeChildRemovalTracker", %"class.blink::NodeChildRemovalTracker"* %2, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::NodeChildRemovalTracker", %"class.blink::NodeChildRemovalTracker"* %2, i64 0, i32 1
  store %"class.blink::Node"* %0, %"class.blink::Node"** %33, align 8
  %35 = load i64, i64* bitcast (%"class.blink::NodeChildRemovalTracker"** @_ZN5blink23NodeChildRemovalTracker5last_E to i64*), align 8
  %36 = bitcast %"class.blink::NodeChildRemovalTracker"** %34 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::NodeChildRemovalTracker"* %2, %"class.blink::NodeChildRemovalTracker"** @_ZN5blink23NodeChildRemovalTracker5last_E, align 8
  %37 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kDOMNodeRemovedE, align 8
  %38 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #11
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %38, i64 0, i32 0
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %43, align 8
  %44 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #11
  %47 = bitcast i8* %46 to %"class.blink::MutationEvent"*
  call void @_ZN5blink13MutationEventC1ERKN3WTF12AtomicStringENS_5Event7BubblesENS5_10CancelableEPNS_4NodeERKNS1_6StringESC_SC_t(%"class.blink::MutationEvent"* %47, %"class.WTF::AtomicString"* dereferenceable(8) %37, i32 0, i32 1, %"class.blink::Node"* %39, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, i16 zeroext 0) #11
  %48 = getelementptr inbounds i8, i8* %46, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  %52 = bitcast i8* %46 to %"class.blink::Event"*
  call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* %0, %"class.blink::Event"* dereferenceable(104) %52) #11
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %31
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #11
  br label %68

68:                                               ; preds = %31, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #11
  br label %84

84:                                               ; preds = %68, %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #11
  br label %100

100:                                              ; preds = %84, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  %101 = load i64, i64* %36, align 8
  store i64 %101, i64* bitcast (%"class.blink::NodeChildRemovalTracker"** @_ZN5blink23NodeChildRemovalTracker5last_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #11
  br label %102

102:                                              ; preds = %26, %19, %100
  %103 = load i32, i32* %10, align 8
  %104 = and i32 %103, 256
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %207, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 56
  %108 = load i16, i16* %107, align 8
  %109 = and i16 %108, 8
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %207, label %111

111:                                              ; preds = %106
  %112 = bitcast %"class.blink::NodeChildRemovalTracker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #11
  %113 = getelementptr inbounds %"class.blink::NodeChildRemovalTracker", %"class.blink::NodeChildRemovalTracker"* %6, i64 0, i32 0
  %114 = getelementptr inbounds %"class.blink::NodeChildRemovalTracker", %"class.blink::NodeChildRemovalTracker"* %6, i64 0, i32 1
  store %"class.blink::Node"* %0, %"class.blink::Node"** %113, align 8
  %115 = load i64, i64* bitcast (%"class.blink::NodeChildRemovalTracker"** @_ZN5blink23NodeChildRemovalTracker5last_E to i64*), align 8
  %116 = bitcast %"class.blink::NodeChildRemovalTracker"** %114 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.blink::NodeChildRemovalTracker"* %6, %"class.blink::NodeChildRemovalTracker"** @_ZN5blink23NodeChildRemovalTracker5last_E, align 8
  %117 = icmp eq %"class.blink::Node"* %0, null
  br i1 %117, label %205, label %118

118:                                              ; preds = %111
  %119 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names27kDOMNodeRemovedFromDocumentE, align 8
  %120 = bitcast %"class.WTF::String"* %7 to i8*
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::String"* %8 to i8*
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %9 to i8*
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  br label %126

126:                                              ; preds = %118, %200
  %127 = phi %"class.blink::Node"* [ %0, %118 ], [ %201, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %128 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #11
  %129 = bitcast i8* %128 to %"class.blink::MutationEvent"*
  call void @_ZN5blink13MutationEventC1ERKN3WTF12AtomicStringENS_5Event7BubblesENS5_10CancelableEPNS_4NodeERKNS1_6StringESC_SC_t(%"class.blink::MutationEvent"* %129, %"class.WTF::AtomicString"* dereferenceable(8) %119, i32 1, i32 1, %"class.blink::Node"* null, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, i16 zeroext 0) #11
  %130 = getelementptr inbounds i8, i8* %128, i64 -4
  %131 = bitcast i8* %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = or i16 %132, 1
  store atomic i16 %133, i16* %131 release, align 2
  %134 = bitcast i8* %128 to %"class.blink::Event"*
  call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* nonnull %127, %"class.blink::Event"* dereferenceable(104) %134) #11
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %126
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #11
  br label %150

150:                                              ; preds = %126, %146, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #11
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #11
  br label %166

166:                                              ; preds = %150, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #11
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #11
  br label %182

182:                                              ; preds = %181, %178, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  %183 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %127, i64 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %127, i64 1
  %189 = bitcast %"class.blink::Node"* %188 to %"class.blink::Node"**
  %190 = load %"class.blink::Node"*, %"class.blink::Node"** %189, align 8
  %191 = icmp eq %"class.blink::Node"* %190, null
  br i1 %191, label %192, label %200

192:                                              ; preds = %187, %182
  %193 = icmp eq %"class.blink::Node"* %127, %0
  br i1 %193, label %203, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %127, i64 0, i32 5, i32 0, i32 0
  %196 = load %"class.blink::Node"*, %"class.blink::Node"** %195, align 8
  %197 = icmp eq %"class.blink::Node"* %196, null
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  %199 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %127, %"class.blink::Node"* nonnull %0) #11
  br label %200

200:                                              ; preds = %187, %194, %198
  %201 = phi %"class.blink::Node"* [ %199, %198 ], [ %196, %194 ], [ %190, %187 ]
  %202 = icmp eq %"class.blink::Node"* %201, null
  br i1 %202, label %203, label %126

203:                                              ; preds = %192, %200
  %204 = load i64, i64* %116, align 8
  br label %205

205:                                              ; preds = %203, %111
  %206 = phi i64 [ %204, %203 ], [ %115, %111 ]
  store i64 %206, i64* bitcast (%"class.blink::NodeChildRemovalTracker"** @_ZN5blink23NodeChildRemovalTracker5last_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #11
  br label %207

207:                                              ; preds = %106, %102, %18, %205
  ret void
}

declare void @_ZN5blink22ChildFrameDisconnector10DisconnectENS0_16DisconnectPolicyE(%"class.blink::ChildFrameDisconnector"*, i32) local_unnamed_addr #5

declare void @_ZN5blink8Document17NodeWillBeRemovedERNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare void @_ZN5blink18DisplayLockContext20NotifyWillDisconnectEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode18WillRemoveChildrenEv(%"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Node"*, align 8
  %3 = alloca %"class.blink::HeapVector.1786", align 8
  %4 = alloca %"class.blink::ChildFrameDisconnector", align 8
  %5 = bitcast %"class.blink::HeapVector.1786"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %7 = bitcast %"class.blink::HeapVector.1786"* %3 to i8**
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 11, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 92, i1 false) #11
  %11 = bitcast %"class.blink::Node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  store %"class.blink::Node"* %13, %"class.blink::Node"** %2, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %46, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0
  br label %18

18:                                               ; preds = %43, %15
  %19 = phi i32 [ 11, %15 ], [ %45, %43 ]
  %20 = phi i32 [ 0, %15 ], [ %44, %43 ]
  %21 = phi %"class.blink::Node"* [ %13, %15 ], [ %41, %43 ]
  %22 = icmp eq i32 %20, %19
  br i1 %22, label %37, label %23, !prof !2

23:                                               ; preds = %18
  %24 = ptrtoint %"class.blink::Node"* %21 to i64
  %25 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %16, align 8
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %25, i64 %26
  %28 = bitcast %"class.blink::Member.318"* %27 to i64*
  store atomic i64 %24, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::Node"* %21 to i8*
  %33 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #11
  br label %34

34:                                               ; preds = %31, %23
  %35 = load i32, i32* %9, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %9, align 4
  br label %38

37:                                               ; preds = %18
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1789"* nonnull %17, %"class.blink::Node"** nonnull dereferenceable(8) %2) #11
  br label %38

38:                                               ; preds = %37, %34
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 5, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  store %"class.blink::Node"* %41, %"class.blink::Node"** %2, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = load i32, i32* %9, align 4
  %45 = load i32, i32* %8, align 8
  br label %18

46:                                               ; preds = %38, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %47 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %51, i64 0, i32 57
  %53 = load i8, i8* %52, align 2
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %46
  %57 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %47) #11
  %58 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %57, i64 0, i32 7
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 8
  br label %61

61:                                               ; preds = %46, %56
  %62 = phi %"class.blink::ChildListMutationAccumulator"* [ null, %46 ], [ %57, %56 ]
  %63 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %63, align 8
  %65 = load i32, i32* %9, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %64, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %61
  %70 = icmp eq %"class.blink::ChildListMutationAccumulator"* %62, null
  %71 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %62, i64 0, i32 6, i32 0, i32 0
  br label %118

72:                                               ; preds = %126, %61
  %73 = bitcast %"class.blink::ChildFrameDisconnector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %75 = bitcast %"class.blink::ChildFrameDisconnector"* %4 to i8**
  store i8* %74, i8** %75, align 8
  %76 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %76, align 8
  %77 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %78 = bitcast i32* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 84, i1 false) #11
  %79 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 1
  store %"class.blink::Node"* %47, %"class.blink::Node"** %79, align 8
  call void @_ZN5blink22ChildFrameDisconnector10DisconnectENS0_16DisconnectPolicyE(%"class.blink::ChildFrameDisconnector"* nonnull %4, i32 1) #11
  %80 = load i32, i32* %77, align 4
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::Member.1810"*, %"class.blink::Member.1810"** %82, align 8
  br i1 %81, label %84, label %86, !prof !2

84:                                               ; preds = %72
  %85 = bitcast i8* %74 to %"class.blink::Member.1810"*
  br label %92

86:                                               ; preds = %72
  %87 = icmp ne %"class.blink::Member.1810"* %83, null
  %88 = bitcast i8* %74 to %"class.blink::Member.1810"*
  %89 = icmp ne %"class.blink::Member.1810"* %83, %88
  %90 = and i1 %87, %89
  br i1 %90, label %92, label %91

91:                                               ; preds = %86
  store i32 0, i32* %77, align 4
  br label %92

92:                                               ; preds = %84, %91, %86
  %93 = phi %"class.blink::Member.1810"* [ %85, %84 ], [ %88, %91 ], [ %88, %86 ]
  %94 = icmp eq %"class.blink::Member.1810"* %83, %93
  br i1 %94, label %97, label %95, !prof !3

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::ChildFrameDisconnector", %"class.blink::ChildFrameDisconnector"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_21HTMLFrameOwnerElementEEELj10ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1808"* nonnull %96, %"class.blink::Member.1810"* %83) #11
  br label %97

97:                                               ; preds = %92, %95
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %73) #11
  %98 = icmp eq %"class.blink::ChildListMutationAccumulator"* %62, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %97
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %62) #11
  br label %100

100:                                              ; preds = %97, %99
  %101 = load i32, i32* %9, align 4
  %102 = icmp eq i32 %101, 0
  %103 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %63, align 8
  br i1 %102, label %104, label %106, !prof !2

104:                                              ; preds = %100
  %105 = bitcast i8* %6 to %"class.blink::Member.318"*
  br label %112

106:                                              ; preds = %100
  %107 = icmp ne %"class.blink::Member.318"* %103, null
  %108 = bitcast i8* %6 to %"class.blink::Member.318"*
  %109 = icmp ne %"class.blink::Member.318"* %103, %108
  %110 = and i1 %107, %109
  br i1 %110, label %112, label %111

111:                                              ; preds = %106
  store i32 0, i32* %9, align 4
  br label %112

112:                                              ; preds = %104, %111, %106
  %113 = phi %"class.blink::Member.318"* [ %105, %104 ], [ %108, %111 ], [ %108, %106 ]
  %114 = icmp eq %"class.blink::Member.318"* %103, %113
  br i1 %114, label %117, label %115, !prof !3

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %3, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* nonnull %116, %"class.blink::Member.318"* %103) #11
  br label %117

117:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #11
  ret void

118:                                              ; preds = %69, %126
  %119 = phi %"class.blink::Member.318"* [ %64, %69 ], [ %127, %126 ]
  %120 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  br i1 %70, label %126, label %122

122:                                              ; preds = %118
  %123 = load %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationObserverInterestGroup"** %71, align 8
  %124 = icmp eq %"class.blink::MutationObserverInterestGroup"* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZN5blink28ChildListMutationAccumulator15WillRemoveChildERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"* nonnull %62, %"class.blink::Node"* dereferenceable(64) %121) #11
  br label %126

126:                                              ; preds = %118, %122, %125
  call void @_ZN5blink4Node37NotifyMutationObserversNodeWillDetachEv(%"class.blink::Node"* %121) #11
  call fastcc void @_ZN5blinkL26DispatchChildRemovalEventsERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %121)
  %127 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %119, i64 1
  %128 = icmp eq %"class.blink::Member.318"* %127, %67
  br i1 %128, label %72, label %118
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink13ContainerNode24GetLayoutBoxForScrollingEv(%"class.blink::ContainerNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %2) #11
  ret %"class.blink::LayoutBox"* %3
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13ContainerNode5TraceEPNS_7VisitorE(%"class.blink::ContainerNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.318"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  tail call void @_ZNK5blink4Node5TraceEPNS_7VisitorE(%"class.blink::Node"* %25, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink4Node5TraceEPNS_7VisitorE(%"class.blink::Node"*, %"class.blink::Visitor"*) unnamed_addr #5

declare void @_ZN5blink8Document29RemoveFocusedElementOfSubtreeERNS_4NodeEb(%"class.blink::Document"*, %"class.blink::Node"* dereferenceable(64), i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode13RemoveBetweenEPNS_4NodeES2_RS1_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %5) #11
  br i1 %6, label %7, label %12

7:                                                ; preds = %4
  %8 = bitcast %"class.blink::Node"* %3 to void (%"class.blink::Node"*, i1)***
  %9 = load void (%"class.blink::Node"*, i1)**, void (%"class.blink::Node"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %9, i64 56
  %11 = load void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %10, align 8
  tail call void %11(%"class.blink::Node"* %3, i1 zeroext false) #11
  br label %12

12:                                               ; preds = %7, %4
  %13 = icmp eq %"class.blink::Node"* %2, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 4
  %16 = ptrtoint %"class.blink::Node"* %1 to i64
  %17 = bitcast %"class.blink::Member.318"* %15 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::Node"* %1 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #11
  br label %23

23:                                               ; preds = %20, %14, %12
  %24 = icmp eq %"class.blink::Node"* %1, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 5
  %27 = ptrtoint %"class.blink::Node"* %2 to i64
  %28 = bitcast %"class.blink::Member.318"* %26 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::Node"* %2 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #11
  br label %34

34:                                               ; preds = %31, %25, %23
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, %3
  br i1 %37, label %38, label %47

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1
  %40 = ptrtoint %"class.blink::Node"* %2 to i64
  %41 = bitcast %"class.blink::Member.318"* %39 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::Node"* %2 to i8*
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #11
  br label %47

47:                                               ; preds = %44, %38, %34
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, %3
  br i1 %50, label %51, label %60

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 2
  %53 = ptrtoint %"class.blink::Node"* %1 to i64
  %54 = bitcast %"class.blink::Member.318"* %52 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.blink::Node"* %1 to i8*
  %59 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #11
  br label %60

60:                                               ; preds = %57, %51, %47
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 4
  %62 = bitcast %"class.blink::Member.318"* %61 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %60
  %66 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %67

67:                                               ; preds = %60, %65
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 5
  %69 = bitcast %"class.blink::Member.318"* %68 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %67
  %73 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %74

74:                                               ; preds = %67, %72
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 2
  %76 = bitcast %"class.blink::Member.318"* %75 to i64*
  store atomic i64 0, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %81

81:                                               ; preds = %74, %79
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %83, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::Document"*, %"class.blink::Document"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %85, i64 0, i32 1
  tail call void @_ZN5blink9TreeScope13AdoptIfNeededERNS_4NodeE(%"class.blink::TreeScope"* %86, %"class.blink::Node"* dereferenceable(64) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode17NotifyNodeRemovedERNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %7 = ptrtoint i64* %4 to i64
  %8 = sub i64 %6, %7
  %9 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %10 = icmp ult i64 %8, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %2
  %12 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i32* [ %12, %11 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %2 ]
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = icmp eq %"class.blink::Node"* %1, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %60, %68, %13
  %19 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %21 = ptrtoint i64* %3 to i64
  %22 = sub i64 %20, %21
  %23 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %24 = icmp ult i64 %22, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br i1 %24, label %27, label %25, !prof !3

25:                                               ; preds = %18
  %26 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi i32* [ %26, %25 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %18 ]
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, -1
  store i32 %30, i32* %28, align 4
  ret void

31:                                               ; preds = %13, %68
  %32 = phi %"class.blink::Node"* [ %69, %68 ], [ %1, %13 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 770
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %51, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::Node"* %32 to void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)***
  %39 = load void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)**, void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)*, void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)** %39, i64 59
  %41 = load void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)*, void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)** %40, align 8
  call void %41(%"class.blink::Node"* nonnull %32, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  %42 = load i32, i32* %33, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %37
  %46 = bitcast %"class.blink::Node"* %32 to %"class.blink::Element"*
  %47 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %46) #11
  %48 = icmp eq %"class.blink::ShadowRoot"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %47, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17NotifyNodeRemovedERNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %50)
  br label %51

51:                                               ; preds = %31, %37, %45, %49
  %52 = load i32, i32* %33, align 8
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1
  %57 = bitcast %"class.blink::Node"* %56 to %"class.blink::Node"**
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %55, %51
  %61 = icmp eq %"class.blink::Node"* %32, %1
  br i1 %61, label %18, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 5, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %32, %"class.blink::Node"* nonnull %1) #11
  br label %68

68:                                               ; preds = %55, %62, %66
  %69 = phi %"class.blink::Node"* [ %67, %66 ], [ %64, %62 ], [ %58, %55 ]
  %70 = icmp eq %"class.blink::Node"* %69, null
  br i1 %70, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12)
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::Node"* %13
}

declare zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"*) local_unnamed_addr #5

declare void @_ZN5blink9TreeScope13AdoptIfNeededERNS_4NodeE(%"class.blink::TreeScope"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare i32 @_ZNK5blink4Node22ConnectedSubframeCountEv(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::UntracedMember", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::UntracedMember", align 8
  %8 = alloca %"class.blink::HeapVector.1794", align 8
  %9 = alloca %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope", align 1
  %10 = alloca %"class.blink::Node"*, align 8
  %11 = alloca %"struct.blink::ContainerNode::ChildrenChange", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %181, label %16

16:                                               ; preds = %2
  tail call void @_ZN5blink13ContainerNode18WillRemoveChildrenEv(%"class.blink::ContainerNode"* %0)
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %18 = ptrtoint %"class.blink::ContainerNode"* %0 to i64
  %19 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = tail call dereferenceable(24) %"class.WTF::HashCountedSet"* @_ZN5blink23SubframeLoadingDisabler20DisabledSubtreeRootsEv() #11
  %22 = bitcast %"class.blink::UntracedMember"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = bitcast %"class.blink::UntracedMember"* %7 to i64*
  store i64 %18, i64* %23, align 8
  %24 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #11
  store i32 0, i32* %6, align 4
  %25 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %21, i64 0, i32 0, i32 0
  %26 = call { %"struct.WTF::KeyValuePair.3025"*, i8 } @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3022"* %25, %"class.blink::UntracedMember"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %6) #11
  %27 = extractvalue { %"struct.WTF::KeyValuePair.3025"*, i8 } %26, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #11
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %31

31:                                               ; preds = %16, %20
  %32 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  call void @_ZN5blink8Document29RemoveFocusedElementOfSubtreeERNS_4NodeEb(%"class.blink::Document"* %35, %"class.blink::Node"* dereferenceable(64) %17, i1 zeroext true) #11
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  call void @_ZN5blink8Document25NodeChildrenWillBeRemovedERNS_13ContainerNodeE(%"class.blink::Document"* %38, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  br i1 %19, label %44, label %39

39:                                               ; preds = %31
  %40 = call dereferenceable(24) %"class.WTF::HashCountedSet"* @_ZN5blink23SubframeLoadingDisabler20DisabledSubtreeRootsEv() #11
  %41 = bitcast %"class.blink::UntracedMember"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = bitcast %"class.blink::UntracedMember"* %5 to i64*
  store i64 %18, i64* %42, align 8
  %43 = call zeroext i1 @_ZN3WTF14HashCountedSetIN5blink14UntracedMemberINS1_4NodeEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE5eraseERKS4_(%"class.WTF::HashCountedSet"* %40, %"class.blink::UntracedMember"* nonnull dereferenceable(8) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  br label %44

44:                                               ; preds = %31, %39
  %45 = bitcast %"class.blink::HeapVector.1794"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.blink::HeapVector.1794", %"class.blink::HeapVector.1794"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::HeapVector.1794", %"class.blink::HeapVector.1794"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.blink::HeapVector.1794", %"class.blink::HeapVector.1794"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #11
  %49 = bitcast %"class.blink::ContainerNode"* %0 to i1 (%"class.blink::ContainerNode"*)***
  %50 = load i1 (%"class.blink::ContainerNode"*)**, i1 (%"class.blink::ContainerNode"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::ContainerNode"*)*, i1 (%"class.blink::ContainerNode"*)** %50, i64 73
  %52 = load i1 (%"class.blink::ContainerNode"*)*, i1 (%"class.blink::ContainerNode"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.blink::ContainerNode"* %0) #11
  %54 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope", %"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %54) #11
  store i8 -86, i8* %54, align 1
  %55 = load i32, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %56 = add nsw i32 %55, 2
  store i32 %56, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %57 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %58 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::Document"*, %"class.blink::Document"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %59, i64 0, i32 59, i32 0, i32 0
  %61 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %61, i64 0, i32 20
  %63 = load i8, i8* %62, align 1, !range !4
  store i8 1, i8* %62, align 1
  %64 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %66 = ptrtoint i64* %3 to i64
  %67 = sub i64 %65, %66
  %68 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %69 = icmp ult i64 %67, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br i1 %69, label %72, label %70, !prof !3

70:                                               ; preds = %44
  %71 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %72

72:                                               ; preds = %44, %70
  %73 = phi i32* [ %71, %70 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %44 ]
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 4
  %76 = bitcast %"class.blink::Node"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  store %"class.blink::Node"* %77, %"class.blink::Node"** %10, align 8
  %78 = icmp eq %"class.blink::Node"* %77, null
  br i1 %78, label %109, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.blink::Node"** %10 to i64*
  %81 = getelementptr inbounds %"class.blink::HeapVector.1794", %"class.blink::HeapVector.1794"* %8, i64 0, i32 0
  br label %82

82:                                               ; preds = %79, %106
  %83 = phi %"class.blink::Node"* [ %77, %79 ], [ %107, %106 ]
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::Node"*, %"class.blink::Node"** %84, align 8
  call void @_ZN5blink13ContainerNode13RemoveBetweenEPNS_4NodeES2_RS1_(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* null, %"class.blink::Node"* %85, %"class.blink::Node"* nonnull dereferenceable(64) %83)
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  call void @_ZN5blink13ContainerNode17NotifyNodeRemovedERNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %86)
  br i1 %53, label %87, label %106

87:                                               ; preds = %82
  %88 = load i32, i32* %48, align 4
  %89 = load i32, i32* %47, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %105, label %91, !prof !2

91:                                               ; preds = %87
  %92 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %46, align 8
  %93 = zext i32 %88 to i64
  %94 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %92, i64 %93
  %95 = load i64, i64* %80, align 8
  %96 = bitcast %"class.blink::Member.318"* %94 to i64*
  store atomic i64 %95, i64* %96 monotonic, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %91
  %100 = inttoptr i64 %95 to i8*
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #11
  br label %102

102:                                              ; preds = %99, %91
  %103 = load i32, i32* %48, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %48, align 4
  br label %106

105:                                              ; preds = %87
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1797"* nonnull %81, %"class.blink::Node"** nonnull dereferenceable(8) %10) #11
  br label %106

106:                                              ; preds = %105, %102, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  store %"class.blink::Node"* %107, %"class.blink::Node"** %10, align 8
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %109, label %82

109:                                              ; preds = %106, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  %110 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  %111 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %112 = ptrtoint i64* %4 to i64
  %113 = sub i64 %111, %112
  %114 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %115 = icmp ult i64 %113, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  br i1 %115, label %118, label %116, !prof !3

116:                                              ; preds = %109
  %117 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %118

118:                                              ; preds = %109, %116
  %119 = phi i32* [ %117, %116 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %109 ]
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, -1
  store i32 %121, i32* %119, align 4
  %122 = icmp eq i8* %62, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %118
  store i8 %63, i8* %62, align 1
  br label %124

124:                                              ; preds = %118, %123
  %125 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %125) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 56, i1 false)
  store i8 4, i8* %125, align 8
  %126 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %11, i64 0, i32 1
  store i8 0, i8* %126, align 1
  %127 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %11, i64 0, i32 2
  %128 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %11, i64 0, i32 5
  %129 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %11, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %130 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %11, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %131 = bitcast %"class.blink::HeapVector.1794"* %8 to i64*
  %132 = bitcast %"class.blink::Node"** %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 32, i1 false)
  %133 = load i64, i64* %131, align 8
  %134 = bitcast %"class.blink::HeapVector.1794"* %128 to i64*
  store atomic i64 0, i64* %131 monotonic, align 8
  store atomic i64 %133, i64* %134 monotonic, align 8
  %135 = load i32, i32* %47, align 8
  store i32 %135, i32* %129, align 8
  store i32 0, i32* %47, align 8
  %136 = load i32, i32* %48, align 4
  store i32 %136, i32* %130, align 4
  store i32 0, i32* %48, align 4
  %137 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %124
  %140 = inttoptr i64 %133 to i8*
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #11
  br label %142

142:                                              ; preds = %139, %124
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.blink::HeapVector.1794"* %8 to i8**
  %147 = load i8*, i8** %146, align 8
  %148 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %147) #11
  br label %149

149:                                              ; preds = %142, %145
  %150 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %11, i64 0, i32 6
  %151 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #11
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %152, align 8
  store %"class.WTF::String"* %12, %"class.WTF::String"** %150, align 8
  %153 = bitcast %"class.blink::ContainerNode"* %0 to void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)***
  %154 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)**, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %154, i64 72
  %156 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %155, align 8
  call void %156(%"class.blink::ContainerNode"* %0, %"struct.blink::ContainerNode::ChildrenChange"* nonnull dereferenceable(56) %11) #11
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #11
  br label %172

172:                                              ; preds = %149, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %125) #11
  %173 = load i32, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %174 = add nsw i32 %173, -2
  store i32 %174, i32* @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope14suspend_count_E, align 4
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  call void @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope28PerformDeferredPluginDisposeEv(%"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope"* nonnull %9) #11
  br label %177

177:                                              ; preds = %172, %176
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %54) #11
  %178 = icmp eq i32 %1, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %177
  call void @_ZN5blink4Node28DispatchSubtreeModifiedEventEv(%"class.blink::Node"* %17) #11
  br label %180

180:                                              ; preds = %179, %177
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #11
  br label %181

181:                                              ; preds = %2, %180
  ret void
}

declare void @_ZN5blink8Document25NodeChildrenWillBeRemovedERNS_13ContainerNodeE(%"class.blink::Document"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"* returned) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12)
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::Node"* %13
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #5

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode26NotifyNodeInsertedInternalERNS_4NodeERNS_10HeapVectorINS_6MemberIS1_EELj11EEE(%"class.blink::ContainerNode"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::HeapVector.1786"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %9 = ptrtoint i64* %5 to i64
  %10 = sub i64 %8, %9
  %11 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %12 = icmp ult i64 %10, %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  br i1 %12, label %15, label %13, !prof !3

13:                                               ; preds = %3
  %14 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi i32* [ %14, %13 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %3 ]
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = icmp eq %"class.blink::Node"* %1, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.blink::Node"** %6 to i8*
  %23 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::HeapVector.1786", %"class.blink::HeapVector.1786"* %2, i64 0, i32 0
  br label %40

27:                                               ; preds = %98, %106, %15
  %28 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %30 = ptrtoint i64* %4 to i64
  %31 = sub i64 %29, %30
  %32 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %33 = icmp ult i64 %31, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br i1 %33, label %36, label %34, !prof !3

34:                                               ; preds = %27
  %35 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %36

36:                                               ; preds = %27, %34
  %37 = phi i32* [ %35, %34 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %27 ]
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, -1
  store i32 %39, i32* %37, align 4
  ret void

40:                                               ; preds = %20, %106
  %41 = phi %"class.blink::Node"* [ %1, %20 ], [ %107, %106 ]
  %42 = load i32, i32* %21, align 8
  %43 = and i32 %42, 768
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %88, label %50

50:                                               ; preds = %45, %40
  %51 = bitcast %"class.blink::Node"* %41 to i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)***
  %52 = load i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)**, i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)*, i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)** %52, i64 57
  %54 = load i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)*, i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)** %53, align 8
  %55 = call i32 %54(%"class.blink::Node"* nonnull %41, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %77

57:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store %"class.blink::Node"* %41, %"class.blink::Node"** %6, align 8
  %58 = load i32, i32* %23, align 4
  %59 = load i32, i32* %24, align 8
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %75, label %61, !prof !2

61:                                               ; preds = %57
  %62 = ptrtoint %"class.blink::Node"* %41 to i64
  %63 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %25, align 8
  %64 = zext i32 %58 to i64
  %65 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %63, i64 %64
  %66 = bitcast %"class.blink::Member.318"* %65 to i64*
  store atomic i64 %62, i64* %66 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %61
  %70 = bitcast %"class.blink::Node"* %41 to i8*
  %71 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #11
  br label %72

72:                                               ; preds = %69, %61
  %73 = load i32, i32* %23, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %23, align 4
  br label %76

75:                                               ; preds = %57
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1789"* %26, %"class.blink::Node"** nonnull dereferenceable(8) %6) #11
  br label %76

76:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %77

77:                                               ; preds = %50, %76
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 12
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %77
  %83 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %84 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %83) #11
  %85 = icmp eq %"class.blink::ShadowRoot"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %84, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode26NotifyNodeInsertedInternalERNS_4NodeERNS_10HeapVectorINS_6MemberIS1_EELj11EEE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* dereferenceable(64) %87, %"class.blink::HeapVector.1786"* dereferenceable(104) %2)
  br label %88

88:                                               ; preds = %45, %77, %82, %86
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1
  %95 = bitcast %"class.blink::Node"* %94 to %"class.blink::Node"**
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %98, label %106

98:                                               ; preds = %93, %88
  %99 = icmp eq %"class.blink::Node"* %41, %1
  br i1 %99, label %27, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 5, i32 0, i32 0
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %103 = icmp eq %"class.blink::Node"* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %41, %"class.blink::Node"* nonnull %1) #11
  br label %106

106:                                              ; preds = %93, %100, %104
  %107 = phi %"class.blink::Node"* [ %105, %104 ], [ %102, %100 ], [ %96, %93 ]
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %27, label %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode11RemovedFromERS0_(%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = and i32 %5, 8192
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %15, i64 0, i32 59, i32 0, i32 0
  %17 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %17, i64 0, i32 32
  tail call void @_ZN5blink20PendingInvalidations17ClearInvalidationERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"* %18, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  %19 = load i32, i32* %4, align 8
  %20 = and i32 %19, -8193
  store i32 %20, i32* %4, align 8
  br label %21

21:                                               ; preds = %8, %11
  %22 = phi i32 [ %5, %8 ], [ %20, %11 ]
  %23 = and i32 %22, -4097
  store i32 %23, i32* %4, align 8
  br label %24

24:                                               ; preds = %2, %21
  tail call void @_ZN5blink4Node11RemovedFromERNS_13ContainerNodeE(%"class.blink::Node"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #11
  ret void
}

declare void @_ZN5blink20PendingInvalidations17ClearInvalidationERNS_13ContainerNodeE(%"class.blink::PendingInvalidations"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

declare void @_ZN5blink4Node11RemovedFromERNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::ContainerNode"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 0
  %9 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Element"*
  br i1 %8, label %10, label %22

10:                                               ; preds = %4
  %11 = tail call zeroext i1 @_ZNK5blink7Element36ChildStyleRecalcBlockedByDisplayLockEv(%"class.blink::Element"* nonnull %9) #11
  br i1 %11, label %12, label %22

12:                                               ; preds = %10
  %13 = load i32, i32* %5, align 8
  %14 = and i32 %13, 67108864
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16, !prof !3

16:                                               ; preds = %12
  %17 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %9) #11
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::DisplayLockContext"* [ %17, %16 ], [ null, %12 ]
  %20 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %19, i64 0, i32 8
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink4Node16AttachLayoutTreeERNS0_13AttachContextE(%"class.blink::Node"* %21, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #11
  br label %40

22:                                               ; preds = %4, %2, %10
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %31, %22
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink4Node16AttachLayoutTreeERNS0_13AttachContextE(%"class.blink::Node"* %27, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #11
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -8388609
  store i32 %30, i32* %28, align 8
  br label %40

31:                                               ; preds = %22, %31
  %32 = phi %"class.blink::Node"* [ %38, %31 ], [ %24, %22 ]
  %33 = bitcast %"class.blink::Node"* %32 to void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)***
  %34 = load void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)**, void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)*, void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)** %34, i64 55
  %36 = load void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)*, void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)** %35, align 8
  tail call void %36(%"class.blink::Node"* nonnull %32, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #11
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %26, label %31

40:                                               ; preds = %26, %18
  ret void
}

declare zeroext i1 @_ZNK5blink7Element36ChildStyleRecalcBlockedByDisplayLockEv(%"class.blink::Element"*) local_unnamed_addr #5

declare void @_ZN5blink4Node16AttachLayoutTreeERNS0_13AttachContextE(%"class.blink::Node"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode16DetachLayoutTreeEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %8, %2
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink4Node16DetachLayoutTreeEb(%"class.blink::Node"* %7, i1 zeroext %1) #11
  ret void

8:                                                ; preds = %2, %8
  %9 = phi %"class.blink::Node"* [ %15, %8 ], [ %4, %2 ]
  %10 = bitcast %"class.blink::Node"* %9 to void (%"class.blink::Node"*, i1)***
  %11 = load void (%"class.blink::Node"*, i1)**, void (%"class.blink::Node"*, i1)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %11, i64 56
  %13 = load void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %12, align 8
  tail call void %13(%"class.blink::Node"* nonnull %9, i1 zeroext %1) #11
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %6, label %8
}

declare void @_ZN5blink4Node16DetachLayoutTreeEb(%"class.blink::Node"*, i1 zeroext) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode15ChildrenChangedERKNS0_14ChildrenChangeE(%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = load i64, i64* @_ZN5blink8Document20global_tree_version_E, align 8
  %9 = add i64 %8, 1
  store i64 %9, i64* @_ZN5blink8Document20global_tree_version_E, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 52
  store i64 %9, i64* %10, align 8
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  tail call void @_ZN5blink8Document20NotifyChangeChildrenERKNS_13ContainerNodeE(%"class.blink::Document"* %13, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  tail call void @_ZN5blink13ContainerNode35InvalidateNodeListCachesInAncestorsEPKNS_13QualifiedNameEPNS_7ElementEPKNS0_14ChildrenChangeE(%"class.blink::ContainerNode"* %0, %"class.blink::QualifiedName"* null, %"class.blink::Element"* null, %"struct.blink::ContainerNode::ChildrenChange"* %1)
  %14 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 0
  %15 = load i8, i8* %14, align 8
  %16 = add i8 %15, -2
  %17 = icmp ult i8 %16, 3
  br i1 %17, label %18, label %24

18:                                               ; preds = %2
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 59, i32 0, i32 0
  %23 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %22, align 8
  tail call void @_ZN5blink11StyleEngine15ChildrenRemovedERNS_13ContainerNodeE(%"class.blink::StyleEngine"* %23, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  br label %77

24:                                               ; preds = %2
  %25 = icmp ult i8 %15, 2
  br i1 %25, label %26, label %77

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 2
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 2
  %32 = icmp ne i32 %31, 0
  %33 = and i32 %30, 12
  %34 = icmp eq i32 %33, 4
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %26
  tail call void @_ZN5blink4Node34ClearFlatTreeNodeDataIfHostChangedERKNS_13ContainerNodeE(%"class.blink::Node"* %28, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  br label %37

37:                                               ; preds = %26, %36
  %38 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %3) #11
  br i1 %38, label %39, label %77

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %39
  %45 = and i32 %41, 1
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %46, label %52, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.blink::NodeData"** %47 to %"class.blink::NodeRareData"**
  %50 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %50, i64 0, i32 1, i32 0, i32 0
  br label %54

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::NodeData"** %47 to %"class.blink::NodeRenderingData"**
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi %"class.blink::NodeRenderingData"** [ %51, %48 ], [ %53, %52 ]
  %56 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %56, i64 0, i32 2, i32 0
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %57, align 8
  %59 = icmp eq %"class.blink::ComputedStyle"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %54, %39
  %61 = load i32, i32* %29, align 8
  %62 = and i32 %61, 2
  %63 = icmp ne i32 %62, 0
  %64 = and i32 %61, 12
  %65 = icmp eq i32 %64, 4
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %77

67:                                               ; preds = %60
  %68 = tail call zeroext i1 @_ZNK5blink4Node27ShouldSkipMarkingStyleDirtyEv(%"class.blink::Node"* %28) #11
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = load i32, i32* %29, align 8
  %71 = and i32 %70, 98304
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = and i32 %70, -98305
  %75 = or i32 %74, 32768
  store i32 %75, i32* %29, align 8
  br label %76

76:                                               ; preds = %73, %69
  tail call void @_ZN5blink4Node38MarkAncestorsWithChildNeedsStyleRecalcEv(%"class.blink::Node"* %28) #11
  br label %77

77:                                               ; preds = %60, %76, %67, %37, %54, %24, %18
  ret void
}

declare void @_ZN5blink8Document20NotifyChangeChildrenERKNS_13ContainerNodeE(%"class.blink::Document"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode35InvalidateNodeListCachesInAncestorsEPKNS_13QualifiedNameEPNS_7ElementEPKNS0_14ChildrenChangeE(%"class.blink::ContainerNode"*, %"class.blink::QualifiedName"*, %"class.blink::Element"* readnone, %"struct.blink::ContainerNode::ChildrenChange"*) local_unnamed_addr #0 align 2 {
  %5 = icmp ne %"struct.blink::ContainerNode::ChildrenChange"* %3, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %3, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 5
  br i1 %9, label %67, label %10

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %10
  %17 = icmp eq %"class.blink::QualifiedName"* %1, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.blink::ContainerNode"* %0 to i1 (%"class.blink::Node"*)***
  %20 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %20, i64 40
  %22 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::Node"* %11) #11
  br i1 %23, label %24, label %43

24:                                               ; preds = %16, %18
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %26 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %28, align 8
  %30 = icmp eq %"class.blink::NodeListsNodeData"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::NodeListsNodeData"* %29 to %"class.blink::ChildNodeList"**
  %33 = load %"class.blink::ChildNodeList"*, %"class.blink::ChildNodeList"** %32, align 8
  %34 = icmp eq %"class.blink::ChildNodeList"* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  br i1 %5, label %36, label %37

36:                                               ; preds = %35
  tail call void @_ZN5blink13ChildNodeList15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::ChildNodeList"* nonnull %33, %"struct.blink::ContainerNode::ChildrenChange"* nonnull dereferenceable(56) %3) #11
  br label %43

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %33, i64 0, i32 2, i32 1
  %39 = bitcast %"class.blink::Member.318"* %38 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  %40 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %33, i64 0, i32 2, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 2147483647
  store i32 %42, i32* %40, align 4
  br label %43

43:                                               ; preds = %10, %24, %31, %36, %37, %18
  %44 = icmp eq %"class.blink::QualifiedName"* %1, null
  %45 = icmp ne %"class.blink::Element"* %2, null
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %67

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = tail call zeroext i1 @_ZNK5blink8Document30ShouldInvalidateNodeListCachesEPKNS_13QualifiedNameE(%"class.blink::Document"* %51, %"class.blink::QualifiedName"* %1) #11
  br i1 %52, label %53, label %67

53:                                               ; preds = %47
  %54 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %55 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  tail call void @_ZN5blink8Document24InvalidateNodeListCachesEPKNS_13QualifiedNameE(%"class.blink::Document"* %56, %"class.blink::QualifiedName"* %1) #11
  %57 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %57, label %67, label %58

58:                                               ; preds = %53, %64
  %59 = phi %"class.blink::ContainerNode"* [ %65, %64 ], [ %0, %53 ]
  %60 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %59, i64 0, i32 0
  %61 = tail call %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"* %60) #11
  %62 = icmp eq %"class.blink::NodeListsNodeData"* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  tail call void @_ZN5blink17NodeListsNodeData16InvalidateCachesEPKNS_13QualifiedNameE(%"class.blink::NodeListsNodeData"* nonnull %61, %"class.blink::QualifiedName"* %1) #11
  br label %64

64:                                               ; preds = %58, %63
  %65 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %60) #11
  %66 = icmp eq %"class.blink::ContainerNode"* %65, null
  br i1 %66, label %67, label %58

67:                                               ; preds = %64, %53, %47, %43, %6
  ret void
}

declare void @_ZN5blink11StyleEngine15ChildrenRemovedERNS_13ContainerNodeE(%"class.blink::StyleEngine"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

declare void @_ZN5blink4Node34ClearFlatTreeNodeDataIfHostChangedERKNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode19CloneChildNodesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"* readonly dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %6 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %14 = bitcast %"class.blink::Node"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  %20 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringImpl"** %24 to i8*
  %26 = bitcast i8** %23 to i8*
  %27 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  br label %29

28:                                               ; preds = %29, %7, %3, %12
  ret void

29:                                               ; preds = %17, %29
  %30 = phi i64 [ %15, %17 ], [ %43, %29 ]
  %31 = inttoptr i64 %30 to %"class.blink::Node"*
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = inttoptr i64 %30 to %"class.blink::Node"* (%"class.blink::Node"*, %"class.blink::Document"*, i32)***
  %36 = load %"class.blink::Node"* (%"class.blink::Node"*, %"class.blink::Document"*, i32)**, %"class.blink::Node"* (%"class.blink::Node"*, %"class.blink::Document"*, i32)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::Node"*, %"class.blink::Document"*, i32)*, %"class.blink::Node"* (%"class.blink::Node"*, %"class.blink::Document"*, i32)** %36, i64 31
  %38 = load %"class.blink::Node"* (%"class.blink::Node"*, %"class.blink::Document"*, i32)*, %"class.blink::Node"* (%"class.blink::Node"*, %"class.blink::Document"*, i32)** %37, align 8
  %39 = call %"class.blink::Node"* %38(%"class.blink::Node"* nonnull %31, %"class.blink::Document"* dereferenceable(2848) %34, i32 %2) #11
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #11
  store i16 1, i16* %21, align 8
  store i16 0, i16* %22, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %40 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %39, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %27) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #11
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.blink::Node"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %5, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::NodeRenderingData"** [ %10, %7 ], [ %12, %11 ]
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %13
  br i1 %5, label %24, label %20

20:                                               ; preds = %19
  %21 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %22 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %22, i64 0, i32 1, i32 0, i32 0
  br label %26

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi %"class.blink::NodeRenderingData"** [ %23, %20 ], [ %25, %24 ]
  %28 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %28, i64 0, i32 1
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = bitcast %"class.blink::LayoutObject"* %30 to { i64, i64 } (%"class.blink::LayoutObject"*, i32)***
  %32 = load { i64, i64 } (%"class.blink::LayoutObject"*, i32)**, { i64, i64 } (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutObject"*, i32)*, { i64, i64 } (%"class.blink::LayoutObject"*, i32)** %32, i64 66
  %34 = load { i64, i64 } (%"class.blink::LayoutObject"*, i32)*, { i64, i64 } (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call { i64, i64 } %34(%"class.blink::LayoutObject"* %30, i32 0) #11
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  br label %38

38:                                               ; preds = %13, %26
  %39 = phi i64 [ %36, %26 ], [ 0, %13 ]
  %40 = phi i64 [ %37, %26 ], [ 0, %13 ]
  %41 = insertvalue { i64, i64 } undef, i64 %39, 0
  %42 = insertvalue { i64, i64 } %41, i64 %40, 1
  ret { i64, i64 } %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode17FocusStateChangedEv(%"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %117, label %21

21:                                               ; preds = %15
  %22 = and i32 %5, 12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %21
  br i1 %7, label %31, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %29, i64 0, i32 2, i32 0
  br label %50

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 2, i32 0
  br label %50

35:                                               ; preds = %21
  br i1 %7, label %40, label %36

36:                                               ; preds = %35
  %37 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %38 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  br label %42

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi %"class.blink::NodeRenderingData"** [ %39, %36 ], [ %41, %40 ]
  %44 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %44, i64 0, i32 1
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutObject"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 5, i32 0
  br label %50

50:                                               ; preds = %48, %31, %25
  %51 = phi %"class.blink::ComputedStyle"** [ %30, %25 ], [ %34, %31 ], [ %49, %48 ]
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  br label %53

53:                                               ; preds = %50, %42
  %54 = phi %"class.blink::ComputedStyle"* [ null, %42 ], [ %52, %50 ]
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8
  %58 = and i160 %57, 2
  %59 = icmp eq i160 %58, 0
  %60 = select i1 %59, i32 32768, i32 65536
  %61 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data7g_focusE, align 8
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %53
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #11
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  tail call void @llvm.trap() #11
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %53, %66, %81
  %84 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %85, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %3, i32 %60, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #11
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #11
  br label %101

101:                                              ; preds = %83, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11
  %102 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %101
  %104 = load i32, i32* %4, align 8
  %105 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Element"*
  %106 = and i32 %104, 13
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %116

108:                                              ; preds = %103
  %109 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %110 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %110, i64 0, i32 0, i32 1, i32 0, i32 0
  %112 = load i16, i16* %111, align 2
  %113 = and i16 %112, 1
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %108
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %105, i32 28) #11
  br label %116

116:                                              ; preds = %103, %108, %101, %115
  call void @_ZNK5blink4Node34InvalidateIfHasEffectiveAppearanceEv(%"class.blink::Node"* %3) #11
  call void @_ZN5blink13ContainerNode24FocusVisibleStateChangedEv(%"class.blink::ContainerNode"* %0)
  call void @_ZN5blink13ContainerNode23FocusWithinStateChangedEv(%"class.blink::ContainerNode"* %0)
  br label %117

117:                                              ; preds = %15, %116
  ret void
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #5

declare void @_ZNK5blink4Node34InvalidateIfHasEffectiveAppearanceEv(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode24FocusVisibleStateChangedEv(%"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_css_focus_visible_enabled_E, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %106, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 0
  %11 = and i32 %8, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %10, label %14, label %25

14:                                               ; preds = %5
  br i1 %12, label %21, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 2, i32 0
  br label %40

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRenderingData"**
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 2, i32 0
  br label %40

25:                                               ; preds = %5
  br i1 %12, label %30, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  br label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRenderingData"**
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi %"class.blink::NodeRenderingData"** [ %29, %26 ], [ %31, %30 ]
  %34 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %34, i64 0, i32 1
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 5, i32 0
  br label %40

40:                                               ; preds = %38, %21, %15
  %41 = phi %"class.blink::ComputedStyle"** [ %20, %15 ], [ %24, %21 ], [ %39, %38 ]
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  br label %43

43:                                               ; preds = %40, %32
  %44 = phi %"class.blink::ComputedStyle"* [ null, %32 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 2
  %49 = icmp eq i160 %48, 0
  %50 = select i1 %49, i32 32768, i32 65536
  %51 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  %52 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data15g_focus_visibleE, align 8
  %53 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #11
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  tail call void @llvm.trap() #11
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %43, %56, %71
  %74 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %6, i32 %50, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #11
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #11
  br label %91

91:                                               ; preds = %73, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  %92 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %91
  %94 = load i32, i32* %7, align 8
  %95 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Element"*
  %96 = and i32 %94, 13
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %106

98:                                               ; preds = %93
  %99 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %100 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %100, i64 0, i32 0, i32 1, i32 0, i32 0
  %102 = load i16, i16* %101, align 2
  %103 = and i16 %102, 8192
  %104 = icmp eq i16 %103, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %98
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %95, i32 29) #11
  br label %106

106:                                              ; preds = %93, %98, %1, %91, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode23FocusWithinStateChangedEv(%"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 12
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %5, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %11, label %22

11:                                               ; preds = %1
  br i1 %9, label %18, label %12

12:                                               ; preds = %11
  %13 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 2, i32 0
  br label %37

18:                                               ; preds = %11
  %19 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 2, i32 0
  br label %37

22:                                               ; preds = %1
  br i1 %9, label %27, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  br label %29

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi %"class.blink::NodeRenderingData"** [ %26, %23 ], [ %28, %27 ]
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %158, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 5, i32 0
  br label %37

37:                                               ; preds = %12, %18, %35
  %38 = phi %"class.blink::ComputedStyle"** [ %36, %35 ], [ %17, %12 ], [ %21, %18 ]
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %158, label %41

41:                                               ; preds = %37
  br i1 %7, label %42, label %53

42:                                               ; preds = %41
  br i1 %9, label %49, label %43

43:                                               ; preds = %42
  %44 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %45 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %45, i64 0, i32 1, i32 0, i32 0
  %47 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %47, i64 0, i32 2, i32 0
  br label %68

49:                                               ; preds = %42
  %50 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  %51 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %51, i64 0, i32 2, i32 0
  br label %68

53:                                               ; preds = %41
  br i1 %9, label %58, label %54

54:                                               ; preds = %53
  %55 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %56 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %56, i64 0, i32 1, i32 0, i32 0
  br label %60

58:                                               ; preds = %53
  %59 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi %"class.blink::NodeRenderingData"** [ %57, %54 ], [ %59, %58 ]
  %62 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %62, i64 0, i32 1
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = icmp eq %"class.blink::LayoutObject"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %64, i64 0, i32 5, i32 0
  br label %68

68:                                               ; preds = %66, %49, %43
  %69 = phi %"class.blink::ComputedStyle"** [ %48, %43 ], [ %52, %49 ], [ %67, %66 ]
  %70 = bitcast %"class.blink::ComputedStyle"** %69 to %"class.blink::ComputedStyleBase"**
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %70, align 8
  br label %72

72:                                               ; preds = %68, %60
  %73 = phi %"class.blink::ComputedStyleBase"* [ null, %60 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %73, i64 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 20282409603651670423947251286016
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %158, label %79

79:                                               ; preds = %72
  br i1 %7, label %80, label %91

80:                                               ; preds = %79
  br i1 %9, label %87, label %81

81:                                               ; preds = %80
  %82 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %83 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %83, i64 0, i32 1, i32 0, i32 0
  %85 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %85, i64 0, i32 2, i32 0
  br label %106

87:                                               ; preds = %80
  %88 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  %89 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %89, i64 0, i32 2, i32 0
  br label %106

91:                                               ; preds = %79
  br i1 %9, label %96, label %92

92:                                               ; preds = %91
  %93 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %94 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %94, i64 0, i32 1, i32 0, i32 0
  br label %98

96:                                               ; preds = %91
  %97 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %98

98:                                               ; preds = %96, %92
  %99 = phi %"class.blink::NodeRenderingData"** [ %95, %92 ], [ %97, %96 ]
  %100 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %100, i64 0, i32 1
  %102 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %101, align 8
  %103 = icmp eq %"class.blink::LayoutObject"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 0, i32 5, i32 0
  br label %106

106:                                              ; preds = %104, %87, %81
  %107 = phi %"class.blink::ComputedStyle"** [ %86, %81 ], [ %90, %87 ], [ %105, %104 ]
  %108 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %107, align 8
  br label %109

109:                                              ; preds = %106, %98
  %110 = phi %"class.blink::ComputedStyle"* [ null, %98 ], [ %108, %106 ]
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 9
  %112 = bitcast [20 x i8]* %111 to i160*
  %113 = load i160, i160* %112, align 8
  %114 = and i160 %113, 2
  %115 = icmp eq i160 %114, 0
  %116 = select i1 %115, i32 32768, i32 65536
  %117 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #11
  %118 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data14g_focus_withinE, align 8
  %119 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %109
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i33
  %131 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #11
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !2

136:                                              ; preds = %127
  tail call void @llvm.trap() #11
  unreachable

137:                                              ; preds = %127
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %128, align 4
  br label %139

139:                                              ; preds = %109, %122, %137
  %140 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %140, align 8
  %141 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %141, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %3, i32 %116, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #11
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #11
  br label %157

157:                                              ; preds = %139, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #11
  br label %158

158:                                              ; preds = %72, %29, %37, %157
  %159 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %158
  %161 = load i32, i32* %4, align 8
  %162 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Element"*
  %163 = and i32 %161, 13
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %165, label %173

165:                                              ; preds = %160
  %166 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %167 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %167, i64 0, i32 0, i32 1, i32 0, i32 0
  %169 = load i16, i16* %168, align 2
  %170 = and i16 %169, 4096
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %173, label %172

172:                                              ; preds = %165
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %162, i32 30) #11
  br label %173

173:                                              ; preds = %160, %165, %158, %172
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %6 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %7) #11
  %9 = icmp eq %"class.blink::ShadowRoot"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %8, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 196608
  %14 = icmp eq i32 %13, 131072
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %7) #11
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %16, i64 0, i32 0
  %18 = bitcast %"class.blink::Element"* %16 to void (%"class.blink::ContainerNode"*, i1, i32)***
  %19 = load void (%"class.blink::ContainerNode"*, i1, i32)**, void (%"class.blink::ContainerNode"*, i1, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::ContainerNode"*, i1, i32)*, void (%"class.blink::ContainerNode"*, i1, i32)** %19, i64 49
  %21 = load void (%"class.blink::ContainerNode"*, i1, i32)*, void (%"class.blink::ContainerNode"*, i1, i32)** %20, align 8
  tail call void %21(%"class.blink::ContainerNode"* %17, i1 zeroext %1, i32 %2) #11
  br label %22

22:                                               ; preds = %3, %10, %15
  %23 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %23, label %53, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 12
  %28 = icmp eq i32 %27, 0
  %29 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Element"*
  br i1 %28, label %30, label %53

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 43, i32 0, i32 0
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %37 = icmp eq %"class.blink::Element"* %36, null
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %36, i64 0, i32 0
  %39 = icmp eq %"class.blink::ContainerNode"* %38, %0
  %40 = or i1 %37, %39
  br i1 %40, label %53, label %41

41:                                               ; preds = %30
  %42 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* nonnull %29) #11
  %43 = icmp eq %"class.blink::ShadowRoot"* %42, null
  %44 = xor i1 %1, true
  %45 = or i1 %43, %44
  %46 = and i1 %43, %1
  br i1 %45, label %53, label %47

47:                                               ; preds = %41
  %48 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* nonnull %29) #11
  %49 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %48, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 524288
  %52 = icmp ne i32 %51, 0
  br label %53

53:                                               ; preds = %22, %24, %41, %47, %30
  %54 = phi i1 [ true, %41 ], [ true, %30 ], [ true, %47 ], [ false, %24 ], [ false, %22 ]
  %55 = phi %"class.blink::Element"* [ %29, %41 ], [ %29, %30 ], [ %29, %47 ], [ null, %24 ], [ null, %22 ]
  %56 = phi i1 [ %46, %41 ], [ %1, %30 ], [ %52, %47 ], [ %1, %24 ], [ %1, %22 ]
  %57 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = trunc i32 %58 to i8
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %53
  br i1 %56, label %65, label %257

62:                                               ; preds = %53
  %63 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %7) #11
  %64 = xor i1 %56, %63
  br i1 %64, label %65, label %257

65:                                               ; preds = %61, %62
  tail call void @_ZN5blink4Node10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::Node"* %7, i1 zeroext %56, i32 %2) #11
  tail call void @_ZN5blink13ContainerNode17FocusStateChangedEv(%"class.blink::ContainerNode"* %0)
  %66 = load i32, i32* %57, align 8
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %68, label %74, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::NodeData"** %69 to %"class.blink::NodeRareData"**
  %72 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %72, i64 0, i32 1, i32 0, i32 0
  br label %76

74:                                               ; preds = %65
  %75 = bitcast %"class.blink::NodeData"** %69 to %"class.blink::NodeRenderingData"**
  br label %76

76:                                               ; preds = %70, %74
  %77 = phi %"class.blink::NodeRenderingData"** [ %73, %70 ], [ %75, %74 ]
  %78 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %78, i64 0, i32 1
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %79, align 8
  %81 = icmp ne %"class.blink::LayoutObject"* %80, null
  %82 = or i1 %56, %81
  br i1 %82, label %257, label %83

83:                                               ; preds = %76
  br i1 %54, label %84, label %98

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %55, i64 0, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %55, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %91 = bitcast %"class.blink::NodeData"** %90 to %"class.blink::NodeRareData"**
  %92 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %92, i64 0, i32 0, i32 1, i32 0, i32 0
  %94 = load i16, i16* %93, align 2
  %95 = and i16 %94, 1
  %96 = icmp eq i16 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %89
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %55, i32 28) #11
  br label %140

98:                                               ; preds = %89, %84, %83
  %99 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #11
  %100 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data7g_focusE, align 8
  %101 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #11
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  tail call void @llvm.trap() #11
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %98, %104, %119
  %122 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %122, align 8
  %123 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %123, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %7, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #11
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #11
  br label %139

139:                                              ; preds = %121, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #11
  br label %140

140:                                              ; preds = %139, %97
  %141 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_css_focus_visible_enabled_E, align 1, !range !4
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %200, label %143

143:                                              ; preds = %140
  br i1 %54, label %144, label %158

144:                                              ; preds = %143
  %145 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %55, i64 0, i32 0, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %158, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %55, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %151 = bitcast %"class.blink::NodeData"** %150 to %"class.blink::NodeRareData"**
  %152 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %152, i64 0, i32 0, i32 1, i32 0, i32 0
  %154 = load i16, i16* %153, align 2
  %155 = and i16 %154, 8192
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %158, label %157

157:                                              ; preds = %149
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %55, i32 29) #11
  br label %201

158:                                              ; preds = %149, %144, %143
  %159 = bitcast %"class.blink::StyleChangeReasonForTracing"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #11
  %160 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data15g_focus_visibleE, align 8
  %161 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %181, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i33
  %173 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %172, i33 1) #11
  %174 = extractvalue { i33, i1 } %173, 1
  %175 = extractvalue { i33, i1 } %173, 0
  %176 = icmp slt i33 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %179, !prof !2

178:                                              ; preds = %169
  call void @llvm.trap() #11
  unreachable

179:                                              ; preds = %169
  %180 = trunc i33 %175 to i32
  store i32 %180, i32* %170, align 4
  br label %181

181:                                              ; preds = %158, %164, %179
  %182 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %182, align 8
  %183 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %183, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %7, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %5) #11
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #11
  br label %199

199:                                              ; preds = %181, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #11
  br i1 %54, label %201, label %215

200:                                              ; preds = %140
  br i1 %54, label %201, label %215

201:                                              ; preds = %199, %157, %200
  %202 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %55, i64 0, i32 0, i32 0, i32 1
  %203 = load i32, i32* %202, align 8
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %215, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %55, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %208 = bitcast %"class.blink::NodeData"** %207 to %"class.blink::NodeRareData"**
  %209 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %209, i64 0, i32 0, i32 1, i32 0, i32 0
  %211 = load i16, i16* %210, align 2
  %212 = and i16 %211, 4096
  %213 = icmp eq i16 %212, 0
  br i1 %213, label %215, label %214

214:                                              ; preds = %206
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %55, i32 30) #11
  br label %257

215:                                              ; preds = %206, %201, %199, %200
  %216 = bitcast %"class.blink::StyleChangeReasonForTracing"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %216) #11
  %217 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data14g_focus_withinE, align 8
  %218 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %217, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %238, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %238

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i33
  %230 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #11
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !2

235:                                              ; preds = %226
  call void @llvm.trap() #11
  unreachable

236:                                              ; preds = %226
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %227, align 4
  br label %238

238:                                              ; preds = %215, %221, %236
  %239 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %239, align 8
  %240 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %240, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %7, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %6) #11
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %256, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %241) #11
  br label %256

256:                                              ; preds = %238, %252, %255
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #11
  br label %257

257:                                              ; preds = %61, %214, %256, %76, %62
  ret void
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #5

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #5

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #5

declare void @_ZN5blink4Node10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::Node"*, i1 zeroext, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode29SetHasFocusWithinUpToAncestorEbPNS_4NodeE(%"class.blink::ContainerNode"*, i1 zeroext, %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3, %10
  %6 = phi %"class.blink::ContainerNode"* [ %11, %10 ], [ %0, %3 ]
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %6, i64 0, i32 0
  %8 = icmp eq %"class.blink::Node"* %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %5, %3
  ret void

10:                                               ; preds = %5
  tail call void @_ZN5blink4Node17SetHasFocusWithinEb(%"class.blink::Node"* %7, i1 zeroext %1) #11
  tail call void @_ZN5blink13ContainerNode23FocusWithinStateChangedEv(%"class.blink::ContainerNode"* nonnull %6)
  %11 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %7) #11
  %12 = icmp eq %"class.blink::ContainerNode"* %11, null
  br i1 %12, label %9, label %5
}

declare void @_ZN5blink4Node17SetHasFocusWithinEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = trunc i32 %7 to i8
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  br i1 %1, label %14, label %222

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementDraggedEv(%"class.blink::Node"* %5) #11
  %13 = xor i1 %12, %1
  br i1 %13, label %14, label %222

14:                                               ; preds = %10, %11
  tail call void @_ZN5blink4Node10SetDraggedEb(%"class.blink::Node"* %5, i1 zeroext %1) #11
  %15 = load i32, i32* %6, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %31, label %88

31:                                               ; preds = %25
  br i1 %1, label %222, label %32

32:                                               ; preds = %31
  %33 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %32
  %35 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Element"*
  %36 = and i32 %15, 13
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %40 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %40, i64 0, i32 0, i32 1, i32 0, i32 0
  %42 = load i16, i16* %41, align 2
  %43 = and i16 %42, 8
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %35, i32 27) #11
  br label %222

46:                                               ; preds = %34, %38, %32
  %47 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #11
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data6g_dragE, align 8
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #11
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  tail call void @llvm.trap() #11
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %46, %52, %67
  %70 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %71, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %5, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #11
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #11
  br label %87

87:                                               ; preds = %69, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #11
  br label %222

88:                                               ; preds = %25
  %89 = and i32 %15, 12
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %102

91:                                               ; preds = %88
  br i1 %17, label %98, label %92

92:                                               ; preds = %91
  %93 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %94 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %94, i64 0, i32 1, i32 0, i32 0
  %96 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %96, i64 0, i32 2, i32 0
  br label %117

98:                                               ; preds = %91
  %99 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  %100 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %100, i64 0, i32 2, i32 0
  br label %117

102:                                              ; preds = %88
  br i1 %17, label %107, label %103

103:                                              ; preds = %102
  %104 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %105 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %105, i64 0, i32 1, i32 0, i32 0
  br label %109

107:                                              ; preds = %102
  %108 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %109

109:                                              ; preds = %107, %103
  %110 = phi %"class.blink::NodeRenderingData"** [ %106, %103 ], [ %108, %107 ]
  %111 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %111, i64 0, i32 1
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  %114 = icmp eq %"class.blink::LayoutObject"* %113, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 5, i32 0
  br label %117

117:                                              ; preds = %115, %98, %92
  %118 = phi %"class.blink::ComputedStyle"** [ %97, %92 ], [ %101, %98 ], [ %116, %115 ]
  %119 = bitcast %"class.blink::ComputedStyle"** %118 to %"class.blink::ComputedStyleBase"**
  %120 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %119, align 8
  br label %121

121:                                              ; preds = %117, %109
  %122 = phi %"class.blink::ComputedStyleBase"* [ null, %109 ], [ %120, %117 ]
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %122, i64 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 39614081257132168796771975168
  %127 = icmp eq i160 %126, 0
  br i1 %127, label %207, label %128

128:                                              ; preds = %121
  br i1 %90, label %129, label %140

129:                                              ; preds = %128
  br i1 %17, label %136, label %130

130:                                              ; preds = %129
  %131 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %132 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %132, i64 0, i32 1, i32 0, i32 0
  %134 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %134, i64 0, i32 2, i32 0
  br label %155

136:                                              ; preds = %129
  %137 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  %138 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %138, i64 0, i32 2, i32 0
  br label %155

140:                                              ; preds = %128
  br i1 %17, label %145, label %141

141:                                              ; preds = %140
  %142 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %143 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %143, i64 0, i32 1, i32 0, i32 0
  br label %147

145:                                              ; preds = %140
  %146 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %147

147:                                              ; preds = %145, %141
  %148 = phi %"class.blink::NodeRenderingData"** [ %144, %141 ], [ %146, %145 ]
  %149 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %149, i64 0, i32 1
  %151 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %150, align 8
  %152 = icmp eq %"class.blink::LayoutObject"* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %151, i64 0, i32 5, i32 0
  br label %155

155:                                              ; preds = %153, %136, %130
  %156 = phi %"class.blink::ComputedStyle"** [ %135, %130 ], [ %139, %136 ], [ %154, %153 ]
  %157 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %156, align 8
  br label %158

158:                                              ; preds = %155, %147
  %159 = phi %"class.blink::ComputedStyle"* [ null, %147 ], [ %157, %155 ]
  %160 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %159, i64 0, i32 0, i32 9
  %161 = bitcast [20 x i8]* %160 to i160*
  %162 = load i160, i160* %161, align 8
  %163 = and i160 %162, 2
  %164 = icmp eq i160 %163, 0
  %165 = select i1 %164, i32 32768, i32 65536
  %166 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #11
  %167 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23style_change_extra_data6g_dragE, align 8
  %168 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %188, label %171

171:                                              ; preds = %158
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %188

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #11
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !2

185:                                              ; preds = %176
  tail call void @llvm.trap() #11
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  br label %188

188:                                              ; preds = %158, %171, %186
  %189 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %189, align 8
  %190 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %190, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %5, i32 %165, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #11
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #11
  br label %206

206:                                              ; preds = %188, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #11
  br label %207

207:                                              ; preds = %121, %206
  %208 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %207
  %210 = load i32, i32* %6, align 8
  %211 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::Element"*
  %212 = and i32 %210, 13
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %222

214:                                              ; preds = %209
  %215 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %216 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %216, i64 0, i32 0, i32 1, i32 0, i32 0
  %218 = load i16, i16* %217, align 2
  %219 = and i16 %218, 8
  %220 = icmp eq i16 %219, 0
  br i1 %220, label %222, label %221

221:                                              ; preds = %214
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %211, i32 27) #11
  br label %222

222:                                              ; preds = %209, %214, %207, %10, %221, %45, %87, %11, %31
  ret void
}

declare void @_ZN5blink4Node10SetDraggedEb(%"class.blink::Node"*, i1 zeroext) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLCollection"* @_ZN5blink13ContainerNode8ChildrenEv(%"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %8 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %11) #11
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi %"class.blink::NodeRareData"* [ %9, %6 ], [ %12, %10 ]
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %15, align 8
  %17 = icmp eq %"class.blink::NodeListsNodeData"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %14) #11
  br label %20

20:                                               ; preds = %13, %18
  %21 = phi %"class.blink::NodeListsNodeData"* [ %19, %18 ], [ %16, %13 ]
  %22 = tail call %"class.blink::HTMLCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_14HTMLCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %21, %"class.blink::ContainerNode"* dereferenceable(80) %0, i32 8) #11
  ret %"class.blink::HTMLCollection"* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %7, %1
  %6 = phi i32 [ 0, %1 ], [ %10, %7 ]
  ret i32 %6

7:                                                ; preds = %1, %7
  %8 = phi %"class.blink::Node"* [ %12, %7 ], [ %3, %1 ]
  %9 = phi i32 [ %10, %7 ], [ 0, %1 ]
  %10 = add i32 %9, 1
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %5, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink13ContainerNode13QuerySelectorERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call dereferenceable(24) %"class.blink::SelectorQueryCache"* @_ZN5blink8Document21GetSelectorQueryCacheEv(%"class.blink::Document"* %7) #11
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = tail call %"class.blink::SelectorQuery"* @_ZN5blink18SelectorQueryCache3AddERKN3WTF12AtomicStringERKNS_8DocumentERNS_14ExceptionStateE(%"class.blink::SelectorQueryCache"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %11, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  %13 = icmp eq %"class.blink::SelectorQuery"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = tail call %"class.blink::Element"* @_ZNK5blink13SelectorQuery10QueryFirstERNS_13ContainerNodeE(%"class.blink::SelectorQuery"* nonnull %12, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi %"class.blink::Element"* [ %15, %14 ], [ null, %3 ]
  ret %"class.blink::Element"* %17
}

declare dereferenceable(24) %"class.blink::SelectorQueryCache"* @_ZN5blink8Document21GetSelectorQueryCacheEv(%"class.blink::Document"*) local_unnamed_addr #5

declare %"class.blink::SelectorQuery"* @_ZN5blink18SelectorQueryCache3AddERKN3WTF12AtomicStringERKNS_8DocumentERNS_14ExceptionStateE(%"class.blink::SelectorQueryCache"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #5

declare %"class.blink::Element"* @_ZNK5blink13SelectorQuery10QueryFirstERNS_13ContainerNodeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink13ContainerNode13QuerySelectorERKN3WTF12AtomicStringE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = tail call dereferenceable(24) %"class.blink::SelectorQueryCache"* @_ZN5blink8Document21GetSelectorQueryCacheEv(%"class.blink::Document"* %16) #11
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = call %"class.blink::SelectorQuery"* @_ZN5blink18SelectorQueryCache3AddERKN3WTF12AtomicStringERKNS_8DocumentERNS_14ExceptionStateE(%"class.blink::SelectorQueryCache"* %17, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %20, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #11
  %22 = icmp eq %"class.blink::SelectorQuery"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %2
  %24 = call %"class.blink::Element"* @_ZNK5blink13SelectorQuery10QueryFirstERNS_13ContainerNodeE(%"class.blink::SelectorQuery"* nonnull %21, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  br label %25

25:                                               ; preds = %2, %23
  %26 = phi %"class.blink::Element"* [ %24, %23 ], [ null, %2 ]
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::Element"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call dereferenceable(24) %"class.blink::SelectorQueryCache"* @_ZN5blink8Document21GetSelectorQueryCacheEv(%"class.blink::Document"* %7) #11
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = tail call %"class.blink::SelectorQuery"* @_ZN5blink18SelectorQueryCache3AddERKN3WTF12AtomicStringERKNS_8DocumentERNS_14ExceptionStateE(%"class.blink::SelectorQueryCache"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %11, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  %13 = icmp eq %"class.blink::SelectorQuery"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = tail call %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SelectorQuery8QueryAllERNS_13ContainerNodeE(%"class.blink::SelectorQuery"* nonnull %12, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi %"class.blink::StaticNodeTypeList"* [ %15, %14 ], [ null, %3 ]
  ret %"class.blink::StaticNodeTypeList"* %17
}

declare %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SelectorQuery8QueryAllERNS_13ContainerNodeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = tail call dereferenceable(24) %"class.blink::SelectorQueryCache"* @_ZN5blink8Document21GetSelectorQueryCacheEv(%"class.blink::Document"* %16) #11
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = call %"class.blink::SelectorQuery"* @_ZN5blink18SelectorQueryCache3AddERKN3WTF12AtomicStringERKNS_8DocumentERNS_14ExceptionStateE(%"class.blink::SelectorQueryCache"* %17, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %20, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #11
  %22 = icmp eq %"class.blink::SelectorQuery"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %2
  %24 = call %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SelectorQuery8QueryAllERNS_13ContainerNodeE(%"class.blink::SelectorQuery"* nonnull %21, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  br label %25

25:                                               ; preds = %2, %23
  %26 = phi %"class.blink::StaticNodeTypeList"* [ %24, %23 ], [ null, %2 ]
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::StaticNodeTypeList"* %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ContainerNode22HasRestyleFlagInternalENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %4 = bitcast %"class.blink::NodeData"** %3 to %"class.blink::NodeRareData"**
  %5 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = and i16 %7, 16383
  %9 = zext i16 %8 to i32
  %10 = and i32 %9, %1
  %11 = icmp ne i32 %10, 0
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ContainerNode23HasRestyleFlagsInternalEv(%"class.blink::ContainerNode"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %3 = bitcast %"class.blink::NodeData"** %2 to %"class.blink::NodeRareData"**
  %4 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = and i16 %6, 16383
  %8 = icmp ne i16 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %10 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  br label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %13) #11
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.blink::NodeRareData"* [ %11, %8 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, 16383
  %20 = trunc i32 %1 to i16
  %21 = or i16 %19, %20
  %22 = and i16 %18, -16384
  %23 = or i16 %21, %22
  store atomic i16 %23, i16* %17 monotonic, align 2
  %24 = and i16 %21, 16383
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %15
  %27 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 202, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0)) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %15, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode22RecalcDescendantStylesENS_17StyleRecalcChangeERKNS_18StyleRecalcContextE(%"class.blink::ContainerNode"* nocapture readonly, i64, %"class.blink::StyleRecalcContext"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::StyleRecalcChange"*
  store i64 %1, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %29, %3
  ret void

10:                                               ; preds = %3, %29
  %11 = phi %"class.blink::Node"* [ %31, %29 ], [ %7, %3 ]
  %12 = call zeroext i1 @_ZNK5blink17StyleRecalcChange13TraverseChildERKNS_4NodeE(%"class.blink::StyleRecalcChange"* nonnull %5, %"class.blink::Node"* nonnull dereferenceable(64) %11) #11
  br i1 %12, label %13, label %29

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 12
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::Node"* %11 to %"class.blink::Text"*
  %20 = load i64, i64* %4, align 8
  call void @_ZN5blink4Text15RecalcTextStyleENS_17StyleRecalcChangeE(%"class.blink::Text"* nonnull %19, i64 %20) #11
  %21 = load i32, i32* %14, align 8
  br label %22

22:                                               ; preds = %13, %18
  %23 = phi i32 [ %15, %13 ], [ %21, %18 ]
  %24 = and i32 %23, 12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::Node"* %11 to %"class.blink::Element"*
  %28 = load i64, i64* %4, align 8
  call void @_ZN5blink7Element11RecalcStyleENS_17StyleRecalcChangeERKNS_18StyleRecalcContextE(%"class.blink::Element"* nonnull %27, i64 %28, %"class.blink::StyleRecalcContext"* dereferenceable(8) %2) #11
  br label %29

29:                                               ; preds = %22, %26, %10
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %9, label %10
}

declare zeroext i1 @_ZNK5blink17StyleRecalcChange13TraverseChildERKNS_4NodeE(%"class.blink::StyleRecalcChange"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare void @_ZN5blink4Text15RecalcTextStyleENS_17StyleRecalcChangeE(%"class.blink::Text"*, i64) local_unnamed_addr #5

declare void @_ZN5blink7Element11RecalcStyleENS_17StyleRecalcChangeERKNS_18StyleRecalcContextE(%"class.blink::Element"*, i64, %"class.blink::StyleRecalcContext"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode25RebuildLayoutTreeForChildEPNS_4NodeERNS_18WhitespaceAttacherE(%"class.blink::ContainerNode"* nocapture readnone, %"class.blink::Node"*, %"class.blink::WhitespaceAttacher"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 4
  %10 = bitcast %"class.blink::Node"* %1 to %"class.blink::Text"*
  br i1 %9, label %11, label %16

11:                                               ; preds = %5
  %12 = and i32 %7, 4194304
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN5blink4Text21RebuildTextLayoutTreeERNS_18WhitespaceAttacherE(%"class.blink::Text"* nonnull %10, %"class.blink::WhitespaceAttacher"* dereferenceable(24) %2) #11
  br label %34

15:                                               ; preds = %11
  tail call void @_ZN5blink18WhitespaceAttacher12DidVisitTextEPNS_4TextE(%"class.blink::WhitespaceAttacher"* %2, %"class.blink::Text"* nonnull %10) #11
  br label %34

16:                                               ; preds = %5
  %17 = icmp eq i32 %8, 0
  %18 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  br i1 %17, label %19, label %34

19:                                               ; preds = %16
  %20 = and i32 %7, 12582912
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %32

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::WhitespaceAttacher", %"class.blink::WhitespaceAttacher"* %2, i64 0, i32 2
  %24 = load i8, i8* %23, align 8, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::WhitespaceAttacher", %"class.blink::WhitespaceAttacher"* %2, i64 0, i32 3
  %28 = load i8, i8* %27, align 1, !range !4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22, %26
  %31 = tail call zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"* nonnull %18) #11
  br i1 %31, label %32, label %33

32:                                               ; preds = %19, %30
  tail call void @_ZN5blink7Element17RebuildLayoutTreeERNS_18WhitespaceAttacherE(%"class.blink::Element"* nonnull %18, %"class.blink::WhitespaceAttacher"* dereferenceable(24) %2) #11
  br label %34

33:                                               ; preds = %26, %30
  tail call void @_ZN5blink18WhitespaceAttacher15DidVisitElementEPNS_7ElementE(%"class.blink::WhitespaceAttacher"* %2, %"class.blink::Element"* nonnull %18) #11
  br label %34

34:                                               ; preds = %16, %3, %33, %32, %14, %15
  ret void
}

declare void @_ZN5blink4Text21RebuildTextLayoutTreeERNS_18WhitespaceAttacherE(%"class.blink::Text"*, %"class.blink::WhitespaceAttacher"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN5blink18WhitespaceAttacher12DidVisitTextEPNS_4TextE(%"class.blink::WhitespaceAttacher"*, %"class.blink::Text"*) local_unnamed_addr #5

declare void @_ZN5blink7Element17RebuildLayoutTreeERNS_18WhitespaceAttacherE(%"class.blink::Element"*, %"class.blink::WhitespaceAttacher"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN5blink18WhitespaceAttacher15DidVisitElementEPNS_7ElementE(%"class.blink::WhitespaceAttacher"*, %"class.blink::Element"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode26RebuildChildrenLayoutTreesERNS_18WhitespaceAttacherE(%"class.blink::ContainerNode"*, %"class.blink::WhitespaceAttacher"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink4Node12IsActiveSlotEv(%"class.blink::Node"* %3) #11
  br i1 %4, label %5, label %26

5:                                                ; preds = %2
  %6 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 48
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %35

12:                                               ; preds = %7
  %13 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %17 = bitcast %"class.blink::Member.318"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %24, label %35

24:                                               ; preds = %12
  %25 = bitcast %"class.blink::ContainerNode"* %0 to %"class.blink::HTMLSlotElement"*
  tail call void @_ZN5blink15HTMLSlotElement37RebuildDistributedChildrenLayoutTreesERNS_18WhitespaceAttacherE(%"class.blink::HTMLSlotElement"* nonnull %25, %"class.blink::WhitespaceAttacher"* dereferenceable(24) %1) #11
  br label %35

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"class.blink::Node"* [ %33, %30 ], [ %28, %26 ]
  tail call void @_ZN5blink13ContainerNode25RebuildLayoutTreeForChildEPNS_4NodeERNS_18WhitespaceAttacherE(%"class.blink::ContainerNode"* undef, %"class.blink::Node"* nonnull %31, %"class.blink::WhitespaceAttacher"* dereferenceable(24) %1)
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 4, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %30

35:                                               ; preds = %30, %26, %12, %5, %7, %24
  ret void
}

declare zeroext i1 @_ZNK5blink4Node12IsActiveSlotEv(%"class.blink::Node"*) local_unnamed_addr #5

declare void @_ZN5blink15HTMLSlotElement37RebuildDistributedChildrenLayoutTreesERNS_18WhitespaceAttacherE(%"class.blink::HTMLSlotElement"*, %"class.blink::WhitespaceAttacher"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ContainerNode27CheckForSiblingStyleChangesENS0_16SiblingCheckTypeEPNS_7ElementEPNS_4NodeES5_(%"class.blink::ContainerNode"*, i32, %"class.blink::Element"*, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %6) #11
  br i1 %7, label %8, label %163

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK5blink8Document27HasPendingForcedStyleRecalcEv(%"class.blink::Document"* %12) #11
  br i1 %13, label %163, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 98304
  %18 = icmp eq i32 %17, 65536
  %19 = and i32 %16, 1
  %20 = icmp eq i32 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %163, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %24 = bitcast %"class.blink::NodeData"** %23 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = load i16, i16* %26, align 2
  %28 = and i16 %27, 1008
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %163, label %30

30:                                               ; preds = %22
  %31 = icmp eq %"class.blink::Node"* %4, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 12
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.blink::Node"* %4 to %"class.blink::Element"*
  br i1 %36, label %50, label %38

38:                                               ; preds = %32, %43
  %39 = phi %"class.blink::Node"* [ %41, %43 ], [ %4, %32 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 5, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 12
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %38

48:                                               ; preds = %38, %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  br label %50

50:                                               ; preds = %30, %32, %48
  %51 = phi %"class.blink::Element"* [ %37, %32 ], [ %49, %48 ], [ null, %30 ]
  %52 = icmp eq %"class.blink::Node"* %3, null
  br i1 %52, label %71, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 12
  %57 = icmp eq i32 %56, 0
  %58 = bitcast %"class.blink::Node"* %3 to %"class.blink::Element"*
  br i1 %57, label %71, label %59

59:                                               ; preds = %53, %64
  %60 = phi %"class.blink::Node"* [ %62, %64 ], [ %3, %53 ]
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %60, i64 0, i32 4, i32 0, i32 0
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 12
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %59

69:                                               ; preds = %59, %64
  %70 = bitcast %"class.blink::Node"* %62 to %"class.blink::Element"*
  br label %71

71:                                               ; preds = %69, %53, %50
  %72 = phi %"class.blink::Element"* [ %58, %53 ], [ %70, %69 ], [ null, %50 ]
  %73 = and i16 %27, 256
  %74 = icmp ne i16 %73, 0
  %75 = icmp ne %"class.blink::Element"* %51, null
  %76 = and i1 %75, %74
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = and i16 %27, 512
  %79 = icmp ne i16 %78, 0
  %80 = icmp ne %"class.blink::Element"* %72, null
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %89

82:                                               ; preds = %77, %71
  %83 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %84 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %83, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::Document"*, %"class.blink::Document"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %85, i64 0, i32 59, i32 0, i32 0
  %87 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %86, align 8
  tail call void @_ZN5blink11StyleEngine30ScheduleNthPseudoInvalidationsERNS_13ContainerNodeE(%"class.blink::StyleEngine"* %87, %"class.blink::ContainerNode"* dereferenceable(80) %0) #11
  %88 = load i32, i32* %15, align 8
  br label %89

89:                                               ; preds = %82, %77
  %90 = phi i32 [ %88, %82 ], [ %16, %77 ]
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %143, label %93

93:                                               ; preds = %89
  %94 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %95 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %94, i64 0, i32 0, i32 1, i32 0, i32 0
  %96 = load i16, i16* %95, align 2
  %97 = and i16 %96, 16
  %98 = icmp ne i16 %97, 0
  %99 = icmp ne %"class.blink::Element"* %72, null
  %100 = xor i1 %99, true
  %101 = and i1 %98, %100
  %102 = and i1 %75, %101
  br i1 %102, label %103, label %120

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %51, i64 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %120, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %51, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %110 = bitcast %"class.blink::NodeData"** %109 to %"class.blink::NodeRareData"**
  %111 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %111, i64 0, i32 0, i32 1, i32 0, i32 0
  %113 = load i16, i16* %112, align 2
  %114 = and i16 %113, 1024
  %115 = icmp eq i16 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %108
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %51, i32 2) #11
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %51, i32 6) #11
  %117 = load i32, i32* %15, align 8
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %143, label %120

120:                                              ; preds = %93, %103, %108, %116
  %121 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %122 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %121, i64 0, i32 0, i32 1, i32 0, i32 0
  %123 = load i16, i16* %122, align 2
  %124 = and i16 %123, 32
  %125 = icmp ne i16 %124, 0
  %126 = xor i1 %75, true
  %127 = and i1 %125, %126
  %128 = and i1 %99, %127
  br i1 %128, label %129, label %143

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %72, i64 0, i32 0, i32 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %143, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %72, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %136 = bitcast %"class.blink::NodeData"** %135 to %"class.blink::NodeRareData"**
  %137 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %137, i64 0, i32 0, i32 1, i32 0, i32 0
  %139 = load i16, i16* %138, align 2
  %140 = and i16 %139, 2048
  %141 = icmp eq i16 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %134
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %72, i32 4) #11
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %72, i32 6) #11
  br label %143

143:                                              ; preds = %89, %134, %129, %116, %120, %142
  br i1 %75, label %144, label %163

144:                                              ; preds = %143
  %145 = load i32, i32* %15, align 8
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %163, label %148

148:                                              ; preds = %144
  %149 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %150 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %149, i64 0, i32 0, i32 1, i32 0, i32 0
  %151 = load i16, i16* %150, align 2
  %152 = and i16 %151, 192
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %163, label %154

154:                                              ; preds = %148
  %155 = icmp eq i32 %1, 1
  %156 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %157 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %156, i64 0, i32 2, i32 0, i32 0
  %158 = load %"class.blink::Document"*, %"class.blink::Document"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %158, i64 0, i32 59, i32 0, i32 0
  %160 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %159, align 8
  br i1 %155, label %161, label %162

161:                                              ; preds = %154
  tail call void @_ZN5blink11StyleEngine39ScheduleInvalidationsForInsertedSiblingEPNS_7ElementERS1_(%"class.blink::StyleEngine"* %160, %"class.blink::Element"* %72, %"class.blink::Element"* dereferenceable(104) %2) #11
  br label %163

162:                                              ; preds = %154
  tail call void @_ZN5blink11StyleEngine38ScheduleInvalidationsForRemovedSiblingEPNS_7ElementERS1_S3_(%"class.blink::StyleEngine"* %160, %"class.blink::Element"* %72, %"class.blink::Element"* dereferenceable(104) %2, %"class.blink::Element"* nonnull dereferenceable(104) %51) #11
  br label %163

163:                                              ; preds = %148, %22, %144, %161, %162, %143, %5, %8, %14
  ret void
}

declare zeroext i1 @_ZNK5blink8Document27HasPendingForcedStyleRecalcEv(%"class.blink::Document"*) local_unnamed_addr #5

declare void @_ZN5blink11StyleEngine30ScheduleNthPseudoInvalidationsERNS_13ContainerNodeE(%"class.blink::StyleEngine"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #5

declare void @_ZN5blink11StyleEngine39ScheduleInvalidationsForInsertedSiblingEPNS_7ElementERS1_(%"class.blink::StyleEngine"*, %"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #5

declare void @_ZN5blink11StyleEngine38ScheduleInvalidationsForRemovedSiblingEPNS_7ElementERS1_S3_(%"class.blink::StyleEngine"*, %"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #5

declare void @_ZN5blink13ChildNodeList15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::ChildNodeList"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink8Document30ShouldInvalidateNodeListCachesEPKNS_13QualifiedNameE(%"class.blink::Document"*, %"class.blink::QualifiedName"*) local_unnamed_addr #5

declare void @_ZN5blink8Document24InvalidateNodeListCachesEPKNS_13QualifiedNameE(%"class.blink::Document"*, %"class.blink::QualifiedName"*) local_unnamed_addr #5

declare %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"*) local_unnamed_addr #5

declare void @_ZN5blink17NodeListsNodeData16InvalidateCachesEPKNS_13QualifiedNameE(%"class.blink::NodeListsNodeData"*, %"class.blink::QualifiedName"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLCollection"* @_ZN5blink13ContainerNode20getElementsByTagNameERKN3WTF12AtomicStringE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 107
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %11, label %34, label %16

16:                                               ; preds = %2
  br i1 %15, label %21, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %19 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %20 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %19, align 8
  br label %23

21:                                               ; preds = %16
  %22 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %3) #11
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi %"class.blink::NodeRareData"* [ %20, %17 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %25, align 8
  %27 = icmp eq %"class.blink::NodeListsNodeData"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %24) #11
  br label %30

30:                                               ; preds = %23, %28
  %31 = phi %"class.blink::NodeListsNodeData"* [ %29, %28 ], [ %26, %23 ]
  %32 = tail call %"class.blink::HTMLTagCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_17HTMLTagCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"* %31, %"class.blink::ContainerNode"* dereferenceable(80) %0, i32 23, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  %33 = getelementptr inbounds %"class.blink::HTMLTagCollection", %"class.blink::HTMLTagCollection"* %32, i64 0, i32 0, i32 0
  br label %52

34:                                               ; preds = %2
  br i1 %15, label %39, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %37 = bitcast %"class.blink::NodeData"** %36 to %"class.blink::NodeRareData"**
  %38 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %37, align 8
  br label %41

39:                                               ; preds = %34
  %40 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %3) #11
  br label %41

41:                                               ; preds = %39, %35
  %42 = phi %"class.blink::NodeRareData"* [ %38, %35 ], [ %40, %39 ]
  %43 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %43, align 8
  %45 = icmp eq %"class.blink::NodeListsNodeData"* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %42) #11
  br label %48

48:                                               ; preds = %41, %46
  %49 = phi %"class.blink::NodeListsNodeData"* [ %47, %46 ], [ %44, %41 ]
  %50 = tail call %"class.blink::TagCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_13TagCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"* %49, %"class.blink::ContainerNode"* dereferenceable(80) %0, i32 22, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  %51 = getelementptr inbounds %"class.blink::TagCollection", %"class.blink::TagCollection"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %30
  %53 = phi %"class.blink::HTMLCollection"* [ %33, %30 ], [ %51, %48 ]
  ret %"class.blink::HTMLCollection"* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLCollection"* @_ZN5blink13ContainerNode22getElementsByTagNameNSERKN3WTF12AtomicStringES4_(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %3, %7
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.WTF::AtomicString"* [ %12, %11 ], [ %1, %7 ]
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %21 = bitcast %"class.blink::NodeData"** %20 to %"class.blink::NodeRareData"**
  %22 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %21, align 8
  br label %26

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %25 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %24) #11
  br label %26

26:                                               ; preds = %23, %19
  %27 = phi %"class.blink::NodeRareData"* [ %22, %19 ], [ %25, %23 ]
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %28, align 8
  %30 = icmp eq %"class.blink::NodeListsNodeData"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %27) #11
  br label %33

33:                                               ; preds = %26, %31
  %34 = phi %"class.blink::NodeListsNodeData"* [ %32, %31 ], [ %29, %26 ]
  %35 = tail call %"class.blink::TagCollectionNS"* @_ZN5blink17NodeListsNodeData8AddCacheERNS_13ContainerNodeERKN3WTF12AtomicStringES6_(%"class.blink::NodeListsNodeData"* %34, %"class.blink::ContainerNode"* dereferenceable(80) %0, %"class.WTF::AtomicString"* dereferenceable(8) %14, %"class.WTF::AtomicString"* dereferenceable(8) %2) #11
  %36 = getelementptr inbounds %"class.blink::TagCollectionNS", %"class.blink::TagCollectionNS"* %35, i64 0, i32 0
  ret %"class.blink::HTMLCollection"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NodeList"* @_ZN5blink13ContainerNode17getElementsByNameERKN3WTF12AtomicStringE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %9 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  br label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %13 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %12) #11
  br label %14

14:                                               ; preds = %11, %7
  %15 = phi %"class.blink::NodeRareData"* [ %10, %7 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %16, align 8
  %18 = icmp eq %"class.blink::NodeListsNodeData"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %15) #11
  br label %21

21:                                               ; preds = %14, %19
  %22 = phi %"class.blink::NodeListsNodeData"* [ %20, %19 ], [ %17, %14 ]
  %23 = tail call %"class.blink::NameNodeList"* @_ZN5blink17NodeListsNodeData8AddCacheINS_12NameNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"* %22, %"class.blink::ContainerNode"* dereferenceable(80) %0, i32 25, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  %24 = getelementptr inbounds %"class.blink::NameNodeList", %"class.blink::NameNodeList"* %23, i64 0, i32 0, i32 0
  ret %"class.blink::NodeList"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLCollection"* @_ZN5blink13ContainerNode22getElementsByClassNameERKN3WTF12AtomicStringE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %9 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  br label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %13 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %12) #11
  br label %14

14:                                               ; preds = %11, %7
  %15 = phi %"class.blink::NodeRareData"* [ %10, %7 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %16, align 8
  %18 = icmp eq %"class.blink::NodeListsNodeData"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %15) #11
  br label %21

21:                                               ; preds = %14, %19
  %22 = phi %"class.blink::NodeListsNodeData"* [ %20, %19 ], [ %17, %14 ]
  %23 = tail call %"class.blink::ClassCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_15ClassCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"* %22, %"class.blink::ContainerNode"* dereferenceable(80) %0, i32 21, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  %24 = getelementptr inbounds %"class.blink::ClassCollection", %"class.blink::ClassCollection"* %23, i64 0, i32 0
  ret %"class.blink::HTMLCollection"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RadioNodeList"* @_ZN5blink13ContainerNode16GetRadioNodeListERKN3WTF12AtomicStringEb(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = select i1 %2, i32 27, i32 26
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %11 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  br label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %14) #11
  br label %16

16:                                               ; preds = %13, %9
  %17 = phi %"class.blink::NodeRareData"* [ %12, %9 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %18, align 8
  %20 = icmp eq %"class.blink::NodeListsNodeData"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %17) #11
  br label %23

23:                                               ; preds = %16, %21
  %24 = phi %"class.blink::NodeListsNodeData"* [ %22, %21 ], [ %19, %16 ]
  %25 = tail call %"class.blink::RadioNodeList"* @_ZN5blink17NodeListsNodeData8AddCacheINS_13RadioNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"* %24, %"class.blink::ContainerNode"* dereferenceable(80) %0, i32 %4, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  ret %"class.blink::RadioNodeList"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink13ContainerNode14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %159, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %159, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 768
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %18, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %159, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0, i32 0
  %23 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %22, %"class.blink::Node"* %11) #11
  br i1 %23, label %159, label %24

24:                                               ; preds = %21, %10
  %25 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %25, label %159, label %26

26:                                               ; preds = %24
  %27 = load i32, i32* %12, align 8
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %159, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1
  %32 = bitcast %"class.blink::Node"* %31 to %"class.blink::Node"**
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = bitcast %"class.blink::Node"* %33 to %"class.blink::Element"*
  %35 = icmp eq %"class.blink::Node"* %33, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 12
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %53, label %46

41:                                               ; preds = %46
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 12
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %36, %41
  %47 = phi %"class.blink::Node"* [ %49, %41 ], [ %33, %36 ]
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 5, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %159, label %41

51:                                               ; preds = %41
  %52 = bitcast %"class.blink::Node"* %49 to %"class.blink::Element"*
  br label %53

53:                                               ; preds = %30, %36, %51
  %54 = phi %"class.blink::Element"* [ %34, %30 ], [ %34, %36 ], [ %52, %51 ]
  %55 = icmp eq %"class.blink::Element"* %54, null
  br i1 %55, label %159, label %56

56:                                               ; preds = %53
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %157, %56
  %61 = phi %"class.blink::Element"* [ %54, %56 ], [ %158, %157 ]
  %62 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %61, i64 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %62, align 8
  %64 = icmp eq %"class.blink::ElementData"* %63, null
  br i1 %64, label %118, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %118, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 0, i32 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::ElementData"* %63 to %"class.blink::UniqueElementData"*
  %76 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 1, i32 1
  %77 = bitcast %"class.blink::Member.354"* %76 to %"class.blink::Attribute"**
  %78 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %75, i64 0, i32 2, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  br label %86

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 1
  %83 = bitcast %"class.blink::ElementData"* %82 to %"class.blink::Attribute"*
  %84 = lshr i32 %71, 1
  %85 = and i32 %84, 268435455
  br label %86

86:                                               ; preds = %81, %74
  %87 = phi %"class.blink::Attribute"* [ %83, %81 ], [ %78, %74 ]
  %88 = phi i32 [ %85, %81 ], [ %80, %74 ]
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %87, i64 %89
  %91 = icmp eq i32 %88, 0
  br i1 %91, label %118, label %92

92:                                               ; preds = %86
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %96

96:                                               ; preds = %111, %92
  %97 = phi %"class.blink::Attribute"* [ %87, %92 ], [ %112, %111 ]
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %99, %93
  br i1 %100, label %114, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %103, %104
  br i1 %105, label %106, label %111

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %108, %109
  br i1 %110, label %114, label %111

111:                                              ; preds = %106, %101
  %112 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %97, i64 1
  %113 = icmp eq %"class.blink::Attribute"* %112, %90
  br i1 %113, label %118, label %96

114:                                              ; preds = %106, %96
  %115 = icmp eq %"class.blink::Attribute"* %97, null
  %116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %97, i64 0, i32 1
  %117 = select i1 %115, %"class.WTF::AtomicString"* %59, %"class.WTF::AtomicString"* %116
  br label %118

118:                                              ; preds = %111, %114, %60, %65, %86
  %119 = phi %"class.WTF::AtomicString"* [ %59, %86 ], [ %59, %65 ], [ %59, %60 ], [ %117, %114 ], [ %59, %111 ]
  %120 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %121, %122
  br i1 %123, label %159, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %61, i64 0, i32 0, i32 1, i32 0, i32 0
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %128, label %138

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %61, i64 0, i32 0, i32 0
  %130 = icmp eq %"class.blink::Node"* %129, %11
  br i1 %130, label %159, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %61, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %138

135:                                              ; preds = %131
  %136 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %129, %"class.blink::Node"* %11) #11
  %137 = icmp eq %"class.blink::Node"* %136, null
  br i1 %137, label %159, label %138

138:                                              ; preds = %135, %131, %124
  %139 = phi %"class.blink::Node"* [ %126, %124 ], [ %133, %131 ], [ %136, %135 ]
  br label %140

140:                                              ; preds = %138, %154
  %141 = phi %"class.blink::Node"* [ %155, %154 ], [ %139, %138 ]
  %142 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = and i32 %143, 12
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %140
  %147 = icmp eq %"class.blink::Node"* %141, %11
  br i1 %147, label %159, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 0, i32 5, i32 0, i32 0
  %150 = load %"class.blink::Node"*, %"class.blink::Node"** %149, align 8
  %151 = icmp eq %"class.blink::Node"* %150, null
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  %153 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %141, %"class.blink::Node"* %11) #11
  br label %154

154:                                              ; preds = %152, %148
  %155 = phi %"class.blink::Node"* [ %153, %152 ], [ %150, %148 ]
  %156 = icmp eq %"class.blink::Node"* %155, null
  br i1 %156, label %159, label %140

157:                                              ; preds = %140
  %158 = bitcast %"class.blink::Node"* %141 to %"class.blink::Element"*
  br label %60

159:                                              ; preds = %46, %128, %135, %118, %154, %146, %26, %24, %53, %21, %6, %2, %16
  %160 = phi %"class.blink::Element"* [ %19, %21 ], [ null, %6 ], [ null, %2 ], [ null, %16 ], [ null, %53 ], [ null, %24 ], [ null, %26 ], [ null, %146 ], [ null, %154 ], [ null, %128 ], [ null, %135 ], [ %61, %118 ], [ null, %46 ]
  ret %"class.blink::Element"* %160
}

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %8 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"* %11) #11
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi %"class.blink::NodeRareData"* [ %9, %6 ], [ %12, %10 ]
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::NodeListsNodeData"*, %"class.blink::NodeListsNodeData"** %15, align 8
  %17 = icmp eq %"class.blink::NodeListsNodeData"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"* %14) #11
  br label %20

20:                                               ; preds = %13, %18
  %21 = phi %"class.blink::NodeListsNodeData"* [ %19, %18 ], [ %16, %13 ]
  ret %"class.blink::NodeListsNodeData"* %21
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink4Node18GetWrapperTypeInfoEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Node18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #5

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #5

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #5

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #5

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #5

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #5

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #5

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #5

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #5

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #5

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #5

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #5

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #5

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #5

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #5

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #5

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #5

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node23CanContainRangeEndPointEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #5

declare i32 @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #5

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #5

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #5

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #5

declare void @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Node"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #5

declare %"class.blink::ComputedStyle"* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Node"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink4Node29ContainsIncludingHostElementsERKS0_(%"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

declare %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"*, %"class.blink::Member.318"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::Member.318"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #5

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #5

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #5

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #5

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #5

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #5

declare void @_ZN5blink28ChildListMutationAccumulator10ChildAddedERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare void @_ZN5blink28ChildListMutationAccumulator15WillRemoveChildERNS_4NodeE(%"class.blink::ChildListMutationAccumulator"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_21HTMLFrameOwnerElementEEELj10ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1808"*, %"class.blink::Member.1810"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::Member.1810"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #11
  ret void
}

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1789"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1789"* %0, i32 %5) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %7, i64 %9
  %11 = bitcast %"class.blink::Node"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member.318"* %10 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #11
  br label %19

19:                                               ; preds = %2, %16
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1789"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1789"* %0, i32 %27)
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1789"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %8, align 8
  %10 = icmp eq %"class.blink::Member.318"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 11
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.1789"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #11
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.1789"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 11, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.318"*
  %33 = icmp eq %"class.blink::Member.318"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 12
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %37) #11
  %39 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %8, align 8
  %40 = icmp eq %"class.blink::Member.318"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 88, %34 ]
  %43 = phi %"class.blink::Member.318"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.318"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #11
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #11
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #11
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1789"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1789"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 12
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %5, align 8
  %7 = icmp eq %"class.blink::Member.318"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.318"*
  %10 = icmp eq %"class.blink::Member.318"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1789"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 11, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.1789"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 11, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.318"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #11
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.318"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.318"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #11
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #11
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* %20, %"class.blink::Member.318"* %6) #11
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %44) #11
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %46) #11
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.318"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !3

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.318"*
  %58 = icmp ne %"class.blink::Member.318"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.318"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #11
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.318"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.318"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.318"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #11
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.1789"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #11
  %87 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.318"*
  %90 = icmp eq %"class.blink::Member.318"* %87, %89
  br i1 %90, label %93, label %91, !prof !3

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1790"* %92, %"class.blink::Member.318"* %87) #11
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.1789"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #11
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.15, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.17, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.318"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.318"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #5

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #5

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #5

declare void @_ZN5blink21HTMLFrameOwnerElement25PluginDisposeSuspendScope28PerformDeferredPluginDisposeEv(%"class.blink::HTMLFrameOwnerElement::PluginDisposeSuspendScope"*) local_unnamed_addr #5

declare dereferenceable(24) %"class.WTF::HashCountedSet"* @_ZN5blink23SubframeLoadingDisabler20DisabledSubtreeRootsEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3025"*, i8 } @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3022"*, %"class.blink::UntracedMember"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3025"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3025"* @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3022"* %0, %"struct.WTF::KeyValuePair.3025"* null)
  %9 = load %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3025"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::UntracedMember"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3025"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3025"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3025"* %60, %"struct.WTF::KeyValuePair.3025"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3025"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3025"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3025"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.3025"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %89, i64 0, i32 1
  %92 = load i32, i32* %2, align 4
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.3025"* @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3022"* %0, %"struct.WTF::KeyValuePair.3025"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.3025"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.3025"*, i8 } undef, %"struct.WTF::KeyValuePair.3025"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.3025"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.3025"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3025"* @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3022"*, %"struct.WTF::KeyValuePair.3025"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink14UntracedMemberINS2_4NodeEEEjEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3025"*
  %37 = call %"struct.WTF::KeyValuePair.3025"* @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3022"* %0, %"struct.WTF::KeyValuePair.3025"* %36, i32 %32, %"struct.WTF::KeyValuePair.3025"* %1) #11
  ret %"struct.WTF::KeyValuePair.3025"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3025"* @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3022"*, %"struct.WTF::KeyValuePair.3025"*, i32, %"struct.WTF::KeyValuePair.3025"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3022", align 8
  %6 = bitcast %"class.WTF::HashTable.3022"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3022"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3025"* %1, %"struct.WTF::KeyValuePair.3025"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3025"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3022"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3022"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3025"* %22 to i64
  br label %42

24:                                               ; preds = %67
  %25 = bitcast %"class.WTF::HashTable.3022"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3022"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %68, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3025"* [ null, %16 ], [ %71, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %69, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.3025"* %33

42:                                               ; preds = %21, %67
  %43 = phi i64 [ %68, %67 ], [ %23, %21 ]
  %44 = phi i32 [ %69, %67 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.3025"* [ %70, %67 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.3025"* [ %71, %67 ], [ null, %21 ]
  %47 = phi i32 [ %72, %67 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.3025"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %67
    i64 0, label %67
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.3025"*, i8 } @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3022"* nonnull %5, %"class.blink::UntracedMember"* dereferenceable(8) %53) #11
  %55 = extractvalue { %"struct.WTF::KeyValuePair.3025"*, i8 } %54, 0
  %56 = load i64, i64* %50, align 8
  %57 = bitcast %"struct.WTF::KeyValuePair.3025"* %55 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %55, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %45, i64 %48, i32 1
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %58, align 8
  %61 = load %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"** %15, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %61, i64 %48
  %63 = icmp eq %"struct.WTF::KeyValuePair.3025"* %62, %3
  %64 = select i1 %63, %"struct.WTF::KeyValuePair.3025"* %55, %"struct.WTF::KeyValuePair.3025"* %46
  %65 = load i32, i32* %12, align 8
  %66 = ptrtoint %"struct.WTF::KeyValuePair.3025"* %61 to i64
  br label %67

67:                                               ; preds = %42, %42, %52
  %68 = phi i64 [ %43, %42 ], [ %66, %52 ], [ %43, %42 ]
  %69 = phi i32 [ %44, %42 ], [ %65, %52 ], [ %44, %42 ]
  %70 = phi %"struct.WTF::KeyValuePair.3025"* [ %45, %42 ], [ %61, %52 ], [ %45, %42 ]
  %71 = phi %"struct.WTF::KeyValuePair.3025"* [ %46, %42 ], [ %64, %52 ], [ %46, %42 ]
  %72 = add i32 %47, 1
  %73 = icmp eq i32 %72, %69
  br i1 %73, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3025"*, i8 } @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3022"*, %"class.blink::UntracedMember"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::UntracedMember"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3025"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3025"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.3025"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3025"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3025"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3025"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.3025"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.3025"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.3025"*, i8 } undef, %"struct.WTF::KeyValuePair.3025"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.3025"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.3025"*, i8 } %87
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF14HashCountedSetIN5blink14UntracedMemberINS1_4NodeEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE5eraseERKS4_(%"class.WTF::HashCountedSet"*, %"class.blink::UntracedMember"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::UntracedMember", %"class.blink::UntracedMember"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"* } @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable.3022"* %5, %"class.blink::Node"* %4) #11
  %7 = extractvalue { %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair.3025"* %13, %7
  br i1 %14, label %44, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %7, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  store i32 %18, i32* %16, align 8
  br label %44

21:                                               ; preds = %15
  %22 = bitcast %"struct.WTF::KeyValuePair.3025"* %7 to i64*
  store i64 -1, i64* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = load i32, i32* %10, align 8
  %34 = icmp ult i32 %32, %33
  %35 = icmp ugt i32 %33, 8
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %21
  %38 = lshr i32 %33, 1
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  %41 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %40, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink14UntracedMemberINS2_4NodeEEEjEEEEPKcv, i64 0, i64 0)) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %40, i1 false) #11
  %42 = bitcast i8* %41 to %"struct.WTF::KeyValuePair.3025"*
  %43 = tail call %"struct.WTF::KeyValuePair.3025"* @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3022"* %5, %"struct.WTF::KeyValuePair.3025"* %42, i32 %38, %"struct.WTF::KeyValuePair.3025"* null) #11
  br label %44

44:                                               ; preds = %2, %20, %21, %37
  %45 = phi i1 [ false, %2 ], [ false, %20 ], [ true, %21 ], [ true, %37 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"* } @_ZN3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable.3022"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3025"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.3022", %"class.WTF::HashTable.3022"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.3025"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.3025"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3025", %"struct.WTF::KeyValuePair.3025"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.3025"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.3025"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"* } undef, %"struct.WTF::KeyValuePair.3025"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"* } %78, %"struct.WTF::KeyValuePair.3025"* %77, 1
  ret { %"struct.WTF::KeyValuePair.3025"*, %"struct.WTF::KeyValuePair.3025"* } %79
}

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #5

declare void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"*, i32) local_unnamed_addr #5

declare void @_ZN5blink5probe20DidInsertDOMNodeImplEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #5

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Node27ShouldSkipMarkingStyleDirtyEv(%"class.blink::Node"*) local_unnamed_addr #5

declare void @_ZN5blink4Node38MarkAncestorsWithChildNeedsStyleRecalcEv(%"class.blink::Node"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"*) local_unnamed_addr #5

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementDraggedEv(%"class.blink::Node"*) local_unnamed_addr #5

declare void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #5

declare void @_ZN5blink13MutationEventC1ERKN3WTF12AtomicStringENS_5Event7BubblesENS5_10CancelableEPNS_4NodeERKNS1_6StringESC_SC_t(%"class.blink::MutationEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, %"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i16 zeroext) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #5

declare void @_ZN5blink5probe21WillRemoveDOMNodeImplEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #5

declare dereferenceable(48) %"class.blink::NodeRareData"* @_ZN5blink4Node14CreateRareDataEv(%"class.blink::Node"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"*) local_unnamed_addr #5

declare dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink12NodeRareData15CreateNodeListsEv(%"class.blink::NodeRareData"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1789"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1789"* %0, i32 %5) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %7, i64 %9
  %11 = bitcast %"class.blink::Node"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member.318"* %10 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #11
  br label %19

19:                                               ; preds = %2, %16
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1783"*, %"class.WTF::StringAppend.1784"* byval(%"class.WTF::StringAppend.1784") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1784"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1783"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.1783"* byval(%"class.WTF::StringAppend.1783") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1783"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #11
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3039", %"class.WTF::StringTypeAdapter.3039"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1783"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1783"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3041", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3041"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3041"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1784"* %10, i8* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1784"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3042"* nonnull %30, i8* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1783"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i8* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3041", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3041"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3041"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1784"* %10, i16* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1784"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3042"* nonnull %30, i16* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1783"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i16* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1783"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1783", %"class.WTF::StringAppend.1783"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1784"* %8) #11
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1784"* %8) #11
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1784"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3039", %"class.WTF::StringTypeAdapter.3039"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1785"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1785"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1785"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3039", %"class.WTF::StringTypeAdapter.3039"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1785", %"class.WTF::StringAppend.1785"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3039"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1785", %"class.WTF::StringAppend.1785"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3039"*, i8*) local_unnamed_addr #5

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3042"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1784"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3041", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3039"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3039"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.3039"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3039", %"class.WTF::StringTypeAdapter.3039"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.3041"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3041"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3039"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3042"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1785"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3039"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3039"*, i16*) local_unnamed_addr #5

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3042"*, i16*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1784"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3041", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3039", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3039"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3039"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.3039"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3039", %"class.WTF::StringTypeAdapter.3039"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3039"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.3041"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1784", %"class.WTF::StringAppend.1784"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3041"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3039"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3041", %"class.WTF::StringTypeAdapter.3041"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3042"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1785"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3039"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.318"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1789"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %24, i64 %25
  ret %"class.blink::Member.318"* %26
}

declare void @_ZN5blink5probe21WillInsertDOMNodeImplEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1797"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1797"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.318"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1797"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %8, align 8
  %10 = icmp eq %"class.blink::Member.318"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %8, align 8
  %26 = icmp eq %"class.blink::Member.318"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.318"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1797"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1797"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1797"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.318"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.318"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1797"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.1797"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.1797"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1797", %"class.WTF::Vector.1797"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_14HTMLCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.2778", align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %"struct.std::__1::pair.2778"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %4, i64 0, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %5, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2775"* %32, %"struct.std::__1::pair.2778"* nonnull dereferenceable(16) %4, i8** nonnull dereferenceable(8) %5) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %30, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::HTMLCollection"*
  %60 = select i1 %57, %"class.blink::HTMLCollection"* null, %"class.blink::HTMLCollection"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #11
  %63 = bitcast i8* %62 to %"class.blink::HTMLCollection"*
  call void @_ZN5blink14HTMLCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2, i32 1) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.2779"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::HTMLCollection"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::HTMLCollection"* %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2775"*, %"struct.std::__1::pair.2778"* dereferenceable(16), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2777"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2775"* %0, %"struct.WTF::KeyValuePair.2777"* null)
  %9 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2777"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %1, i64 0, i32 1
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %24 = select i1 %22, %"class.WTF::AtomicString"* %23, %"class.WTF::AtomicString"* %16
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %29, %31
  %33 = and i32 %32, %14
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %11, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, -128
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %11, i64 %34, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  %42 = and i1 %38, %41
  br i1 %42, label %118, label %43

43:                                               ; preds = %10
  %44 = xor i32 %32, -1
  %45 = lshr i32 %32, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %69
  %58 = phi %"class.WTF::StringImpl"* [ %40, %43 ], [ %80, %69 ]
  %59 = phi i32 [ %37, %43 ], [ %77, %69 ]
  %60 = phi %"struct.WTF::KeyValuePair.2777"* [ %35, %43 ], [ %75, %69 ]
  %61 = phi %"struct.WTF::KeyValuePair.2777"* [ null, %43 ], [ %70, %69 ]
  %62 = phi i64 [ %34, %43 ], [ %74, %69 ]
  %63 = phi i64 [ 0, %43 ], [ %72, %69 ]
  %64 = icmp eq i32 %59, -127
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = icmp eq i32 %59, %31
  %67 = icmp eq %"class.WTF::StringImpl"* %58, %19
  %68 = and i1 %66, %67
  br i1 %68, label %156, label %69

69:                                               ; preds = %57, %65
  %70 = phi %"struct.WTF::KeyValuePair.2777"* [ %60, %57 ], [ %61, %65 ]
  %71 = icmp eq i64 %63, 0
  %72 = select i1 %71, i64 %56, i64 %63
  %73 = add i64 %72, %62
  %74 = and i64 %73, %15
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %11, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %75, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, -128
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %11, i64 %74, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = and i1 %78, %81
  br i1 %82, label %83, label %57

83:                                               ; preds = %69
  %84 = icmp eq %"struct.WTF::KeyValuePair.2777"* %70, null
  br i1 %84, label %118, label %85

85:                                               ; preds = %83
  %86 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4, !noalias !22
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !22
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #11
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %92
  tail call void @llvm.trap() #11, !noalias !22
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4, !noalias !22
  br label %104

104:                                              ; preds = %85, %87, %102
  %105 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %70, i64 0, i32 0, i32 0
  store i32 -128, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %70, i64 0, i32 0, i32 1
  %108 = bitcast %"class.WTF::AtomicString"* %107 to i64*
  store i64 %105, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %70, i64 0, i32 1
  %110 = bitcast %"class.blink::Member.2779"* %109 to i64*
  store i64 0, i64* %110, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2777"* nonnull %70) #11
  %111 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 2147483647
  %114 = and i32 %113, 2147483647
  %115 = and i32 %112, -2147483648
  %116 = or i32 %114, %115
  store i32 %116, i32* %111, align 8
  %117 = load i32, i32* %30, align 4
  br label %118

118:                                              ; preds = %10, %83, %104
  %119 = phi i32 [ %117, %104 ], [ %31, %83 ], [ %31, %10 ]
  %120 = phi %"struct.WTF::KeyValuePair.2777"* [ %70, %104 ], [ %75, %83 ], [ %35, %10 ]
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %120, i64 0, i32 0, i32 0
  store i32 %119, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %120, i64 0, i32 0, i32 1
  %123 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %125 = bitcast %"class.WTF::AtomicString"* %122 to i64*
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  store i64 %124, i64* %125, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #11
  br label %142

142:                                              ; preds = %118, %138, %141
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %120, i64 0, i32 1
  %144 = bitcast %"class.blink::Member.2779"* %143 to i64*
  store atomic i64 0, i64* %144 monotonic, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2777"* %120) #11
  %145 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %145, align 4
  %148 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 3
  %149 = load i32, i32* %148, align 8
  %150 = add i32 %149, %147
  %151 = shl i32 %150, 1
  %152 = load i32, i32* %12, align 8
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %156, label %154

154:                                              ; preds = %142
  %155 = tail call %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2775"* %0, %"struct.WTF::KeyValuePair.2777"* %120)
  br label %156

156:                                              ; preds = %65, %142, %154
  %157 = phi i8 [ 1, %142 ], [ 1, %154 ], [ 0, %65 ]
  %158 = phi %"struct.WTF::KeyValuePair.2777"* [ %120, %142 ], [ %155, %154 ], [ %60, %65 ]
  %159 = insertvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } undef, %"struct.WTF::KeyValuePair.2777"* %158, 0
  %160 = insertvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %159, i8 %157, 1
  ret { %"struct.WTF::KeyValuePair.2777"*, i8 } %160
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2775"*, %"struct.WTF::KeyValuePair.2777"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %44, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.2775"* %0, i32 %35, %"struct.WTF::KeyValuePair.2777"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %44, label %90

39:                                               ; preds = %31
  %40 = zext i32 %14 to i64
  %41 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %40) #11
  %42 = bitcast %"class.blink::HeapHashTableBacking"* %41 to %"struct.WTF::KeyValuePair.2777"*
  %43 = icmp eq i32 %14, 0
  br i1 %43, label %86, label %49

44:                                               ; preds = %34, %10
  %45 = phi i32 [ %8, %10 ], [ %35, %34 ]
  %46 = zext i32 %45 to i64
  %47 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #11
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair.2777"*
  br label %49

49:                                               ; preds = %44, %39
  %50 = phi i32 [ %14, %39 ], [ %45, %44 ]
  %51 = phi %"struct.WTF::KeyValuePair.2777"* [ %42, %39 ], [ %48, %44 ]
  %52 = phi i64 [ %40, %39 ], [ %46, %44 ]
  %53 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !25
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %77, %49
  %56 = phi i64 [ 0, %49 ], [ %84, %77 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %51, i64 %56
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8, !noalias !25
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4, !noalias !25
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4, !noalias !25
  %68 = zext i32 %67 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #11
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %65
  call void @llvm.trap() #11, !noalias !25
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4, !noalias !25
  br label %77

77:                                               ; preds = %75, %60, %55
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %57, i64 0, i32 0, i32 0
  store i32 -128, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %51, i64 %56, i32 0, i32 1
  %81 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  store i64 %78, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %51, i64 %56, i32 1
  %83 = bitcast %"class.blink::Member.2779"* %82 to i64*
  store i64 0, i64* %83, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2777"* %57) #11
  %84 = add nuw nsw i64 %56, 1
  %85 = icmp eq i64 %84, %52
  br i1 %85, label %86, label %55

86:                                               ; preds = %77, %39
  %87 = phi i32 [ 0, %39 ], [ %50, %77 ]
  %88 = phi %"struct.WTF::KeyValuePair.2777"* [ %42, %39 ], [ %51, %77 ]
  %89 = call %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2775"* %0, %"struct.WTF::KeyValuePair.2777"* %88, i32 %87, %"struct.WTF::KeyValuePair.2777"* %1) #11
  br label %90

90:                                               ; preds = %34, %86
  %91 = phi %"struct.WTF::KeyValuePair.2777"* [ %89, %86 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2777"* %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.2775"*, i32, %"struct.WTF::KeyValuePair.2777"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2777"* %32, null
  br i1 %33, label %196, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = mul nuw nsw i64 %35, 24
  %37 = bitcast %"struct.WTF::KeyValuePair.2777"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %196

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.2777"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %85, label %47

47:                                               ; preds = %39
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !28
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %72, %47
  %51 = phi i64 [ 0, %47 ], [ %79, %72 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %45, i64 %51
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !28
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4, !noalias !28
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !28
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #11
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !2

69:                                               ; preds = %60
  call void @llvm.trap() #11, !noalias !28
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4, !noalias !28
  br label %72

72:                                               ; preds = %70, %55, %50
  %73 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %52, i64 0, i32 0, i32 0
  store i32 -128, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %45, i64 %51, i32 0, i32 1
  %76 = bitcast %"class.WTF::AtomicString"* %75 to i64*
  store i64 %73, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %45, i64 %51, i32 1
  %78 = bitcast %"class.blink::Member.2779"* %77 to i64*
  store i64 0, i64* %78, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2777"* %52) #11
  %79 = add nuw nsw i64 %51, 1
  %80 = icmp eq i64 %79, %43
  br i1 %80, label %81, label %50

81:                                               ; preds = %72
  br i1 %46, label %85, label %82

82:                                               ; preds = %81
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %84 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  br label %98

85:                                               ; preds = %160, %39, %81
  %86 = phi %"struct.WTF::KeyValuePair.2777"* [ null, %81 ], [ null, %39 ], [ %105, %160 ]
  %87 = bitcast %"class.WTF::HashTable.2775"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %87, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #11
  br label %93

93:                                               ; preds = %85, %90
  %94 = icmp eq i32 %1, 0
  br i1 %94, label %163, label %95

95:                                               ; preds = %93
  %96 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !31
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %96, i64 0, i32 0, i32 0, i32 0
  br label %165

98:                                               ; preds = %160, %82
  %99 = phi i64 [ 0, %82 ], [ %161, %160 ]
  %100 = phi %"struct.WTF::KeyValuePair.2777"* [ null, %82 ], [ %105, %160 ]
  %101 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %31, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %101, i64 %99
  %103 = icmp eq %"struct.WTF::KeyValuePair.2777"* %102, %2
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %45, i64 %99
  %105 = select i1 %103, %"struct.WTF::KeyValuePair.2777"* %104, %"struct.WTF::KeyValuePair.2777"* %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %102, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, -128
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %101, i64 %99, i32 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  %112 = and i1 %108, %111
  %113 = icmp eq i32 %107, -127
  %114 = or i1 %113, %112
  br i1 %114, label %115, label %142

115:                                              ; preds = %98
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8, !noalias !34
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4, !noalias !34
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4, !noalias !34
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #11
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %123
  call void @llvm.trap() #11, !noalias !34
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4, !noalias !34
  br label %135

135:                                              ; preds = %115, %118, %133
  %136 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %104, i64 0, i32 0, i32 0
  store i32 -128, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %45, i64 %99, i32 0, i32 1
  %139 = bitcast %"class.WTF::AtomicString"* %138 to i64*
  store i64 %136, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %45, i64 %99, i32 1
  %141 = bitcast %"class.blink::Member.2779"* %140 to i64*
  store i64 0, i64* %141, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2777"* %104) #11
  br label %160

142:                                              ; preds = %98
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.2777"* dereferenceable(24) %102, %"struct.WTF::KeyValuePair.2777"* dereferenceable(24) %104)
  %143 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %31, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %143, i64 %99, i32 0, i32 1, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #11
  br label %160

160:                                              ; preds = %159, %156, %142, %135
  %161 = add nuw nsw i64 %99, 1
  %162 = icmp eq i64 %161, %43
  br i1 %162, label %85, label %98

163:                                              ; preds = %187, %93
  %164 = call %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2775"* %0, %"struct.WTF::KeyValuePair.2777"* %42, i32 %1, %"struct.WTF::KeyValuePair.2777"* %86)
  br label %196

165:                                              ; preds = %187, %95
  %166 = phi i64 [ 0, %95 ], [ %194, %187 ]
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %42, i64 %166
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8, !noalias !31
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4, !noalias !31
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %177 = load i32, i32* %176, align 4, !noalias !31
  %178 = zext i32 %177 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #11
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %175
  call void @llvm.trap() #11, !noalias !31
  unreachable

185:                                              ; preds = %175
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %176, align 4, !noalias !31
  br label %187

187:                                              ; preds = %165, %170, %185
  %188 = ptrtoint %"class.WTF::StringImpl"* %168 to i64
  %189 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %167, i64 0, i32 0, i32 0
  store i32 -128, i32* %189, align 8
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %42, i64 %166, i32 0, i32 1
  %191 = bitcast %"class.WTF::AtomicString"* %190 to i64*
  store i64 %188, i64* %191, align 8
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %42, i64 %166, i32 1
  %193 = bitcast %"class.blink::Member.2779"* %192 to i64*
  store i64 0, i64* %193, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2777"* %167) #11
  %194 = add nuw nsw i64 %166, 1
  %195 = icmp eq i64 %194, %35
  br i1 %195, label %163, label %165

196:                                              ; preds = %34, %30, %163
  %197 = phi %"struct.WTF::KeyValuePair.2777"* [ %164, %163 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2777"* %197
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2777"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2775"*, %"struct.WTF::KeyValuePair.2777"*, i32, %"struct.WTF::KeyValuePair.2777"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2775", align 8
  %6 = bitcast %"class.WTF::HashTable.2775"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2775"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2777"* %1, %"struct.WTF::KeyValuePair.2777"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2777"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2777"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %19, align 8
  br label %95

21:                                               ; preds = %120
  %22 = bitcast %"class.WTF::HashTable.2775"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %121, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.2777"* [ null, %15 ], [ %123, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.2775"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.2775"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.2775"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.2777"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %91, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %89, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %86, %54
  %57 = phi i64 [ 0, %54 ], [ %87, %86 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %50, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, -128
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %50, i64 %57, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  %64 = and i1 %60, %63
  %65 = icmp eq i32 %59, -127
  %66 = or i1 %65, %64
  br i1 %66, label %86, label %67

67:                                               ; preds = %56
  br i1 %63, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %81

81:                                               ; preds = %80, %77, %67
  store i32 -127, i32* %58, align 4
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %50, i64 %57, i32 0, i32 1
  %83 = bitcast %"class.WTF::AtomicString"* %82 to i64*
  store i64 0, i64* %83, align 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %50, i64 %57, i32 1
  %85 = bitcast %"class.blink::Member.2779"* %84 to i64*
  store atomic i64 0, i64* %85 monotonic, align 8
  br label %86

86:                                               ; preds = %81, %56
  %87 = add nuw nsw i64 %57, 1
  %88 = icmp eq i64 %87, %55
  br i1 %88, label %89, label %56

89:                                               ; preds = %86, %52
  %90 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %90) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %91

91:                                               ; preds = %49, %89
  %92 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, -2147483648
  store i32 %94, i32* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.2777"* %29

95:                                               ; preds = %18, %120
  %96 = phi i32 [ %13, %18 ], [ %121, %120 ]
  %97 = phi %"struct.WTF::KeyValuePair.2777"* [ %20, %18 ], [ %122, %120 ]
  %98 = phi %"struct.WTF::KeyValuePair.2777"* [ null, %18 ], [ %123, %120 ]
  %99 = phi i32 [ 0, %18 ], [ %124, %120 ]
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %97, i64 %100
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %101, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, -128
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %97, i64 %100, i32 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  %108 = and i1 %104, %107
  %109 = icmp eq i32 %103, -127
  %110 = or i1 %109, %108
  br i1 %110, label %120, label %111

111:                                              ; preds = %95
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %101, i64 0, i32 0
  %113 = call { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_(%"class.WTF::HashTable.2775"* nonnull %5, %"struct.std::__1::pair.2778"* dereferenceable(16) %112) #11
  %114 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %113, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.2777"* dereferenceable(24) %101, %"struct.WTF::KeyValuePair.2777"* dereferenceable(24) %114) #11
  %115 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %19, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %115, i64 %100
  %117 = icmp eq %"struct.WTF::KeyValuePair.2777"* %116, %3
  %118 = select i1 %117, %"struct.WTF::KeyValuePair.2777"* %114, %"struct.WTF::KeyValuePair.2777"* %98
  %119 = load i32, i32* %12, align 8
  br label %120

120:                                              ; preds = %95, %111
  %121 = phi i32 [ %96, %95 ], [ %119, %111 ]
  %122 = phi %"struct.WTF::KeyValuePair.2777"* [ %97, %95 ], [ %115, %111 ]
  %123 = phi %"struct.WTF::KeyValuePair.2777"* [ %98, %95 ], [ %118, %111 ]
  %124 = add i32 %99, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %21, label %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.2777"* dereferenceable(24), %"struct.WTF::KeyValuePair.2777"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #11
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !2

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %9, %28, %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %0, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %1, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %0, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::AtomicString"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.WTF::AtomicString"* %36 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %0, i64 0, i32 1
  %44 = bitcast %"class.blink::Member.2779"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Member.2779"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %32
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #11
  br label %53

53:                                               ; preds = %32, %51
  %54 = phi i8* [ %52, %51 ], [ %49, %32 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 14
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %57, align 8
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.29, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([616 x i8], [616 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS1_6MemberINS1_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.2777"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %51

24:                                               ; preds = %18, %47
  %25 = phi i64 [ %49, %47 ], [ 0, %18 ]
  %26 = phi i32 [ %48, %47 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %22, i64 %25, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %22, i64 %25, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  %32 = icmp eq i32 %28, -127
  %33 = or i1 %32, %31
  br i1 %33, label %47, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #11
  br label %47

47:                                               ; preds = %46, %43, %24
  %48 = add i32 %26, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %21, %49
  br i1 %50, label %24, label %51

51:                                               ; preds = %47, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2777"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = udiv i64 %22, 24
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp ugt i64 %22, 23
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %198, %20
  ret void

33:                                               ; preds = %30, %198
  %34 = phi i64 [ 0, %30 ], [ %199, %198 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %3, i64 %34
  br i1 %28, label %36, label %118

36:                                               ; preds = %33
  %37 = bitcast %"struct.WTF::KeyValuePair.2777"* %35 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %3, i64 %34, i32 0, i32 1
  %41 = bitcast %"class.WTF::AtomicString"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i32 %39, -128
  %44 = icmp eq i64 %42, 0
  %45 = and i1 %44, %43
  %46 = icmp eq i32 %39, -127
  %47 = or i1 %46, %45
  br i1 %47, label %198, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %3, i64 %34, i32 1
  %50 = bitcast %"class.blink::Member.2779"* %49 to i64*
  %51 = load atomic i64, i64* %50 monotonic, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %48
  %54 = inttoptr i64 %51 to i8*
  %55 = and i64 %51, -131072
  %56 = inttoptr i64 %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 4138
  %58 = load i8, i8* %57, align 2
  %59 = icmp eq i8 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %56, i64 4160
  br label %100

62:                                               ; preds = %53
  %63 = getelementptr inbounds i8, i8* %56, i64 4096
  %64 = bitcast i8* %63 to %"class.blink::NormalPage"*
  %65 = getelementptr inbounds i8, i8* %56, i64 4400
  %66 = bitcast i8* %65 to i8**
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %51, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %64, i64 0, i32 2, i32 0, i32 1, i64 %71
  %73 = load atomic i8, i8* %72 acquire, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 2, %75
  %77 = trunc i32 %76 to i8
  %78 = add i8 %77, -1
  %79 = and i8 %78, %73
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %62, %81
  %82 = phi i64 [ %83, %81 ], [ %71, %62 ]
  %83 = add i64 %82, -1
  %84 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %64, i64 0, i32 2, i32 0, i32 1, i64 %83
  %85 = load atomic i8, i8* %84 acquire, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %81, label %87

87:                                               ; preds = %81, %62
  %88 = phi i64 [ %71, %62 ], [ %83, %81 ]
  %89 = phi i8 [ %79, %62 ], [ %85, %81 ]
  %90 = zext i8 %89 to i32
  %91 = tail call i32 @llvm.ctlz.i32(i32 %90, i1 true) #11, !range !37
  %92 = add nsw i32 %91, -24
  %93 = shl i64 %88, 3
  %94 = or i64 %93, 7
  %95 = sext i32 %92 to i64
  %96 = sub i64 %94, %95
  %97 = shl i64 %96, 3
  %98 = load i8*, i8** %66, align 16
  %99 = getelementptr inbounds i8, i8* %98, i64 %97
  br label %100

100:                                              ; preds = %87, %60
  %101 = phi i8* [ %61, %60 ], [ %99, %87 ]
  %102 = getelementptr inbounds i8, i8* %101, i64 8
  %103 = getelementptr inbounds i8, i8* %101, i64 4
  %104 = bitcast i8* %103 to i16*
  %105 = load atomic i16, i16* %104 acquire, align 2
  %106 = lshr i16 %105, 2
  %107 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %108 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %107, i64 0, i32 0
  %109 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %108, align 8
  %110 = zext i16 %106 to i64
  %111 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %109, i64 %110
  %112 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %111, align 8
  %113 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %112, i64 0, i32 0
  %114 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %113, align 8
  %115 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %116 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %115, i64 5
  %117 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %116, align 8
  tail call void %117(%"class.blink::Visitor"* %0, i8* nonnull %54, i8* %102, void (%"class.blink::Visitor"*, i8*)* %114) #11
  br label %198

118:                                              ; preds = %33
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %35, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, -128
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %3, i64 %34, i32 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  %125 = and i1 %121, %124
  %126 = icmp eq i32 %120, -127
  %127 = or i1 %126, %125
  br i1 %127, label %198, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %3, i64 %34, i32 1
  %130 = bitcast %"class.blink::Member.2779"* %129 to i64*
  %131 = load atomic i64, i64* %130 monotonic, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %198, label %133

133:                                              ; preds = %128
  %134 = inttoptr i64 %131 to i8*
  %135 = and i64 %131, -131072
  %136 = inttoptr i64 %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 4138
  %138 = load i8, i8* %137, align 2
  %139 = icmp eq i8 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = getelementptr inbounds i8, i8* %136, i64 4160
  br label %180

142:                                              ; preds = %133
  %143 = getelementptr inbounds i8, i8* %136, i64 4096
  %144 = bitcast i8* %143 to %"class.blink::NormalPage"*
  %145 = getelementptr inbounds i8, i8* %136, i64 4400
  %146 = bitcast i8* %145 to i8**
  %147 = bitcast i8* %145 to i64*
  %148 = load i64, i64* %147, align 16
  %149 = sub i64 %131, %148
  %150 = lshr i64 %149, 3
  %151 = lshr i64 %149, 6
  %152 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %144, i64 0, i32 2, i32 0, i32 1, i64 %151
  %153 = load atomic i8, i8* %152 acquire, align 1
  %154 = trunc i64 %150 to i32
  %155 = and i32 %154, 7
  %156 = shl i32 2, %155
  %157 = trunc i32 %156 to i8
  %158 = add i8 %157, -1
  %159 = and i8 %158, %153
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %167

161:                                              ; preds = %142, %161
  %162 = phi i64 [ %163, %161 ], [ %151, %142 ]
  %163 = add i64 %162, -1
  %164 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %144, i64 0, i32 2, i32 0, i32 1, i64 %163
  %165 = load atomic i8, i8* %164 acquire, align 1
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %161, label %167

167:                                              ; preds = %161, %142
  %168 = phi i64 [ %151, %142 ], [ %163, %161 ]
  %169 = phi i8 [ %159, %142 ], [ %165, %161 ]
  %170 = zext i8 %169 to i32
  %171 = tail call i32 @llvm.ctlz.i32(i32 %170, i1 true) #11, !range !37
  %172 = add nsw i32 %171, -24
  %173 = shl i64 %168, 3
  %174 = or i64 %173, 7
  %175 = sext i32 %172 to i64
  %176 = sub i64 %174, %175
  %177 = shl i64 %176, 3
  %178 = load i8*, i8** %146, align 16
  %179 = getelementptr inbounds i8, i8* %178, i64 %177
  br label %180

180:                                              ; preds = %167, %140
  %181 = phi i8* [ %141, %140 ], [ %179, %167 ]
  %182 = getelementptr inbounds i8, i8* %181, i64 8
  %183 = getelementptr inbounds i8, i8* %181, i64 4
  %184 = bitcast i8* %183 to i16*
  %185 = load atomic i16, i16* %184 acquire, align 2
  %186 = lshr i16 %185, 2
  %187 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %188 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %187, i64 0, i32 0
  %189 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %188, align 8
  %190 = zext i16 %186 to i64
  %191 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %189, i64 %190
  %192 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %191, align 8
  %193 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %192, i64 0, i32 0
  %194 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %193, align 8
  %195 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %196 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %195, i64 5
  %197 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %196, align 8
  tail call void %197(%"class.blink::Visitor"* %0, i8* nonnull %134, i8* %182, void (%"class.blink::Visitor"*, i8*)* %194) #11
  br label %198

198:                                              ; preds = %180, %128, %36, %48, %100, %118
  %199 = add nuw nsw i64 %34, 1
  %200 = icmp ult i64 %199, %23
  br i1 %200, label %33, label %32
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_(%"class.WTF::HashTable.2775"*, %"struct.std::__1::pair.2778"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2777"*, %"struct.WTF::KeyValuePair.2777"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2775", %"class.WTF::HashTable.2775"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %1, i64 0, i32 1
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %17 = select i1 %15, %"class.WTF::AtomicString"* %16, %"class.WTF::AtomicString"* %9
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = lshr i32 %21, 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %1, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %22, %24
  %26 = and i32 %25, %7
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %4, i64 %27
  %29 = ptrtoint %"struct.WTF::KeyValuePair.2777"* %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, -128
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %4, i64 %27, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  %36 = and i1 %32, %35
  br i1 %36, label %53, label %37

37:                                               ; preds = %2
  %38 = xor i32 %25, -1
  %39 = lshr i32 %25, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %59

51:                                               ; preds = %72
  %52 = ptrtoint %"struct.WTF::KeyValuePair.2777"* %78 to i64
  br label %53

53:                                               ; preds = %51, %2
  %54 = phi i64 [ %29, %2 ], [ %52, %51 ]
  %55 = phi %"struct.WTF::KeyValuePair.2777"* [ null, %2 ], [ %73, %51 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.2777"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.2777"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %87

59:                                               ; preds = %72, %37
  %60 = phi %"class.WTF::StringImpl"* [ %34, %37 ], [ %84, %72 ]
  %61 = phi %"struct.WTF::KeyValuePair.2777"* [ null, %37 ], [ %73, %72 ]
  %62 = phi i32 [ %31, %37 ], [ %81, %72 ]
  %63 = phi i64 [ %29, %37 ], [ %79, %72 ]
  %64 = phi %"struct.WTF::KeyValuePair.2777"* [ %28, %37 ], [ %78, %72 ]
  %65 = phi i64 [ %27, %37 ], [ %77, %72 ]
  %66 = phi i64 [ 0, %37 ], [ %75, %72 ]
  %67 = icmp eq i32 %62, -127
  br i1 %67, label %72, label %68

68:                                               ; preds = %59
  %69 = icmp eq i32 %62, %24
  %70 = icmp eq %"class.WTF::StringImpl"* %60, %12
  %71 = and i1 %70, %69
  br i1 %71, label %87, label %72

72:                                               ; preds = %68, %59
  %73 = phi %"struct.WTF::KeyValuePair.2777"* [ %61, %68 ], [ %64, %59 ]
  %74 = icmp eq i64 %66, 0
  %75 = select i1 %74, i64 %50, i64 %66
  %76 = add i64 %75, %65
  %77 = and i64 %76, %8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %4, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.2777"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %78, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, -128
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %4, i64 %77, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  %86 = and i1 %82, %85
  br i1 %86, label %51, label %59

87:                                               ; preds = %68, %53
  %88 = phi i64 [ %58, %53 ], [ %63, %68 ]
  %89 = phi i8 [ 0, %53 ], [ 1, %68 ]
  %90 = inttoptr i64 %88 to %"struct.WTF::KeyValuePair.2777"*
  %91 = insertvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } undef, %"struct.WTF::KeyValuePair.2777"* %90, 0
  %92 = insertvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %91, i8 %89, 1
  ret { %"struct.WTF::KeyValuePair.2777"*, i8 } %92
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #5

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2777"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %98, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %98, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.2779"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = and i64 %27, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4138
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %32, i64 4160
  br label %75

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %32, i64 4400
  %40 = bitcast i8* %39 to %"class.blink::ObjectStartBitmap"*
  %41 = bitcast i8* %39 to i8**
  %42 = bitcast i8* %39 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = sub i64 %27, %43
  %45 = lshr i64 %44, 3
  %46 = lshr i64 %44, 6
  %47 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = trunc i64 %45 to i32
  %50 = and i32 %49, 7
  %51 = shl i32 2, %50
  %52 = trunc i32 %51 to i8
  %53 = add i8 %52, -1
  %54 = and i8 %53, %48
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %38, %56
  %57 = phi i64 [ %58, %56 ], [ %46, %38 ]
  %58 = add i64 %57, -1
  %59 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %58
  %60 = load atomic i8, i8* %59 acquire, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %56, label %62

62:                                               ; preds = %56, %38
  %63 = phi i64 [ %46, %38 ], [ %58, %56 ]
  %64 = phi i8 [ %54, %38 ], [ %60, %56 ]
  %65 = zext i8 %64 to i32
  %66 = tail call i32 @llvm.ctlz.i32(i32 %65, i1 true) #11, !range !37
  %67 = add nsw i32 %66, -24
  %68 = shl i64 %63, 3
  %69 = or i64 %68, 7
  %70 = sext i32 %67 to i64
  %71 = sub i64 %69, %70
  %72 = shl i64 %71, 3
  %73 = load i8*, i8** %41, align 16
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  br label %75

75:                                               ; preds = %36, %62
  %76 = phi i8* [ %37, %36 ], [ %74, %62 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 acquire, align 2
  %81 = lshr i16 %80, 2
  %82 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %83 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %82, i64 0, i32 0
  %84 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %83, align 8
  %85 = zext i16 %81 to i64
  %86 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %84, i64 %85
  %87 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %87, i64 0, i32 0
  %89 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %88, align 8
  %90 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, i64 5
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, align 8
  tail call void %93(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %77, void (%"class.blink::Visitor"*, i8*)* %89) #11
  %94 = load i64, i64* %19, align 8
  br label %95

95:                                               ; preds = %18, %75
  %96 = phi i64 [ %21, %18 ], [ %94, %75 ]
  %97 = add i64 %96, -1
  store i64 %97, i64* %19, align 8
  br label %98

98:                                               ; preds = %1, %11, %95
  ret void
}

declare void @_ZN5blink14HTMLCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLTagCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_17HTMLTagCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::pair.2778", align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"struct.std::__1::pair.2778"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %4, %11, %26
  %29 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 0
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %30, align 8
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %6, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2775"* %32, %"struct.std::__1::pair.2778"* nonnull dereferenceable(16) %5, i8** nonnull dereferenceable(8) %6) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %28, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::HTMLTagCollection"*
  %60 = select i1 %57, %"class.blink::HTMLTagCollection"* null, %"class.blink::HTMLTagCollection"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 112) #11
  %63 = bitcast i8* %62 to %"class.blink::HTMLTagCollection"*
  call void @_ZN5blink17HTMLTagCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLTagCollection"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.2779"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::HTMLTagCollection"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::HTMLTagCollection"* %80
}

declare void @_ZN5blink17HTMLTagCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLTagCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TagCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_13TagCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::pair.2778", align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"struct.std::__1::pair.2778"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %4, %11, %26
  %29 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 0
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %30, align 8
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %6, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2775"* %32, %"struct.std::__1::pair.2778"* nonnull dereferenceable(16) %5, i8** nonnull dereferenceable(8) %6) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %28, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::TagCollection"*
  %60 = select i1 %57, %"class.blink::TagCollection"* null, %"class.blink::TagCollection"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #11
  %63 = bitcast i8* %62 to %"class.blink::TagCollection"*
  call void @_ZN5blink13TagCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::TagCollection"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.2779"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::TagCollection"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::TagCollection"* %80
}

declare void @_ZN5blink13TagCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::TagCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TagCollectionNS"* @_ZN5blink17NodeListsNodeData8AddCacheERNS_13ContainerNodeERKN3WTF12AtomicStringES6_(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::QualifiedName", align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"class.blink::QualifiedName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %5, %"class.WTF::AtomicString"* dereferenceable(8) %9, %"class.WTF::AtomicString"* dereferenceable(8) %3, %"class.WTF::AtomicString"* dereferenceable(8) %2) #11
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i8* null, i8** %6, align 8
  %11 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair.2787"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.2785"* %11, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %5, i8** nonnull dereferenceable(8) %6) #11
  %13 = extractvalue { %"struct.WTF::KeyValuePair.2787"*, i8 } %12, 0
  %14 = extractvalue { %"struct.WTF::KeyValuePair.2787"*, i8 } %12, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %13, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::TagCollectionNS"*, %"class.blink::TagCollectionNS"** %18, align 8
  br label %34

20:                                               ; preds = %4
  %21 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 112) #11
  %22 = bitcast i8* %21 to %"class.blink::TagCollectionNS"*
  call void @_ZN5blink15TagCollectionNSC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringES7_(%"class.blink::TagCollectionNS"* %22, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 24, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %13, i64 0, i32 1
  %28 = ptrtoint i8* %21 to i64
  %29 = bitcast %"class.blink::Member.2788"* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %20
  %33 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #11
  br label %34

34:                                               ; preds = %32, %20, %17
  %35 = phi %"class.blink::TagCollectionNS"* [ %19, %17 ], [ %22, %20 ], [ %22, %32 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %"class.blink::TagCollectionNS"* %35
}

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2787"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.2785"*, %"class.blink::QualifiedName"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.2787", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.2787"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2785"* %0, %"struct.WTF::KeyValuePair.2787"* null)
  %10 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.2787"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #11
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %101, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair.2787"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair.2787"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.2787"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %180, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair.2787"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair.2787"* %67, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2787"* %67 to i8*
  %80 = bitcast %"struct.WTF::KeyValuePair.2787"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8, !alias.scope !38
  %82 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %85 = load i32, i32* %84, align 4, !noalias !38
  %86 = and i32 %85, 16777216
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #11, !noalias !38
  br label %90

90:                                               ; preds = %78, %83, %88
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %4, i64 0, i32 1
  %92 = bitcast %"class.blink::Member.2788"* %91 to i64*
  store i64 0, i64* %92, align 8, !alias.scope !38
  %93 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_15TagCollectionNSEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* nonnull %79, %"struct.WTF::KeyValuePair.2787"* nonnull dereferenceable(16) %4) #11
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  %95 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 2147483647
  %98 = and i32 %97, 2147483647
  %99 = and i32 %96, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %95, align 8
  br label %101

101:                                              ; preds = %29, %76, %90
  %102 = phi %"struct.WTF::KeyValuePair.2787"* [ %67, %90 ], [ %72, %76 ], [ %33, %29 ]
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %104 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 16777216
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %111) #11
  br label %112

112:                                              ; preds = %110, %105, %101
  %113 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %103 to i64
  %114 = bitcast %"struct.WTF::KeyValuePair.2787"* %102 to i64*
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %102, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %116, null
  br i1 %117, label %130, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 16777216
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %130

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #11
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %116) #11
  %129 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %116 to i8*
  call void @free(i8* %129) #11
  br label %130

130:                                              ; preds = %112, %118, %123, %128
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %102, i64 0, i32 1
  %132 = bitcast %"class.blink::Member.2788"* %131 to i64*
  store atomic i64 0, i64* %132 monotonic, align 8
  %133 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %168, label %135

135:                                              ; preds = %130
  %136 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %137 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %136, i64 0, i32 1
  %138 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %137) #11
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %142, !prof !2

140:                                              ; preds = %135
  %141 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %137, i8* %141) #11
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i8* [ %141, %140 ], [ %138, %135 ]
  %144 = bitcast i8* %143 to %"class.blink::ThreadState"**
  %145 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 9
  %147 = load i8, i8* %146, align 1, !range !4
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %168, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 13
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %153, align 8
  %155 = load atomic i64, i64* %132 monotonic, align 8
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %154, i64 0, i32 0, i32 0
  %159 = inttoptr i64 %155 to i8*
  %160 = bitcast %"class.blink::MarkingVisitor"* %154 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %161 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %161, i64 5
  %163 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %162, align 8
  call void %163(%"class.blink::Visitor"* %158, i8* nonnull %159, i8* %159, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15TagCollectionNSEE5TraceEPNS_7VisitorEPKv) #11
  %164 = load i64, i64* %150, align 8
  br label %165

165:                                              ; preds = %157, %149
  %166 = phi i64 [ %152, %149 ], [ %164, %157 ]
  %167 = add i64 %166, -1
  store i64 %167, i64* %150, align 8
  br label %168

168:                                              ; preds = %130, %142, %165
  %169 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 3
  %173 = load i32, i32* %172, align 8
  %174 = add i32 %173, %171
  %175 = shl i32 %174, 1
  %176 = load i32, i32* %13, align 8
  %177 = icmp ult i32 %175, %176
  br i1 %177, label %180, label %178

178:                                              ; preds = %168
  %179 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2785"* %0, %"struct.WTF::KeyValuePair.2787"* %102)
  br label %180

180:                                              ; preds = %63, %168, %178
  %181 = phi i8 [ 1, %168 ], [ 1, %178 ], [ 0, %63 ]
  %182 = phi %"struct.WTF::KeyValuePair.2787"* [ %102, %168 ], [ %179, %178 ], [ %56, %63 ]
  %183 = insertvalue { %"struct.WTF::KeyValuePair.2787"*, i8 } undef, %"struct.WTF::KeyValuePair.2787"* %182, 0
  %184 = insertvalue { %"struct.WTF::KeyValuePair.2787"*, i8 } %183, i8 %181, 1
  ret { %"struct.WTF::KeyValuePair.2787"*, i8 } %184
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2785"*, %"struct.WTF::KeyValuePair.2787"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.WTF::KeyValuePair.2787", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul i32 %13, 6
  %15 = shl i32 %9, 1
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %45, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %15, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #11
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %24, i8* %25) #11
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %6) #11
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %32

32:                                               ; preds = %29, %23, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %33 = load i32, i32* %8, align 8
  %34 = icmp ult i32 %33, %15
  br i1 %34, label %35, label %40

35:                                               ; preds = %2, %32
  %36 = phi i32 [ %15, %32 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 -86, i8* %5, align 1
  %37 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.2785"* %0, i32 %36, %"struct.WTF::KeyValuePair.2787"* %1, i8* nonnull dereferenceable(1) %5) #11
  %38 = load i8, i8* %5, align 1, !range !4
  %39 = icmp eq i8 %38, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br i1 %39, label %45, label %82

40:                                               ; preds = %32
  %41 = zext i32 %15 to i64
  %42 = call %"class.blink::HeapHashTableBacking.3060"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.3060"* %42 to %"struct.WTF::KeyValuePair.2787"*
  %44 = icmp eq i32 %15, 0
  br i1 %44, label %78, label %50

45:                                               ; preds = %35, %11
  %46 = phi i32 [ %9, %11 ], [ %36, %35 ]
  %47 = zext i32 %46 to i64
  %48 = call %"class.blink::HeapHashTableBacking.3060"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %47) #11
  %49 = bitcast %"class.blink::HeapHashTableBacking.3060"* %48 to %"struct.WTF::KeyValuePair.2787"*
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i32 [ %15, %40 ], [ %46, %45 ]
  %52 = phi %"struct.WTF::KeyValuePair.2787"* [ %43, %40 ], [ %49, %45 ]
  %53 = phi i64 [ %41, %40 ], [ %47, %45 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.2787"* %3 to i8*
  %55 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !41
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %3, i64 0, i32 1
  %59 = bitcast %"class.blink::Member.2788"* %58 to i64*
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %3, i64 0, i32 0
  br label %61

61:                                               ; preds = %74, %50
  %62 = phi i64 [ 0, %50 ], [ %76, %74 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %52, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.2787"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #11
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8, !noalias !41
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %65, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8, !alias.scope !41
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %65, null
  br i1 %66, label %74, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4, !noalias !41
  %70 = and i32 %69, 16777216
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %73) #11, !noalias !41
  br label %74

74:                                               ; preds = %72, %67, %61
  store i64 0, i64* %59, align 8, !alias.scope !41
  %75 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_15TagCollectionNSEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %64, %"struct.WTF::KeyValuePair.2787"* nonnull dereferenceable(16) %3) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #11
  %76 = add nuw nsw i64 %62, 1
  %77 = icmp eq i64 %76, %53
  br i1 %77, label %78, label %61

78:                                               ; preds = %74, %40
  %79 = phi i32 [ 0, %40 ], [ %51, %74 ]
  %80 = phi %"struct.WTF::KeyValuePair.2787"* [ %43, %40 ], [ %52, %74 ]
  %81 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2785"* %0, %"struct.WTF::KeyValuePair.2787"* %80, i32 %79, %"struct.WTF::KeyValuePair.2787"* %1) #11
  br label %82

82:                                               ; preds = %35, %78
  %83 = phi %"struct.WTF::KeyValuePair.2787"* [ %81, %78 ], [ %37, %35 ]
  ret %"struct.WTF::KeyValuePair.2787"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.2785"*, i32, %"struct.WTF::KeyValuePair.2787"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.WTF::KeyValuePair.2787", align 8
  %6 = alloca %"struct.WTF::KeyValuePair.2787", align 8
  %7 = alloca %"struct.WTF::KeyValuePair.2787", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %4
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #11
  br label %15

15:                                               ; preds = %13, %4
  %16 = phi i8* [ %14, %13 ], [ %11, %4 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 6
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 16
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %30, label %26

26:                                               ; preds = %15, %22
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 13
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22, %26
  %31 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %26, %30
  %34 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %34, align 8
  %36 = icmp eq %"struct.WTF::KeyValuePair.2787"* %35, null
  br i1 %36, label %170, label %37

37:                                               ; preds = %33
  %38 = zext i32 %1 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = bitcast %"struct.WTF::KeyValuePair.2787"* %35 to i8*
  %41 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %40, i64 %39) #11
  br i1 %41, label %42, label %170

42:                                               ; preds = %37
  store i8 1, i8* %3, align 1
  %43 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %34, align 8
  %46 = zext i32 %44 to i64
  %47 = call %"class.blink::HeapHashTableBacking.3060"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #11
  %48 = bitcast %"class.blink::HeapHashTableBacking.3060"* %47 to %"struct.WTF::KeyValuePair.2787"*
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %84, label %50

50:                                               ; preds = %42
  %51 = bitcast %"struct.WTF::KeyValuePair.2787"* %7 to i8*
  %52 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !44
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %52, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %7, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %7, i64 0, i32 1
  %56 = bitcast %"class.blink::Member.2788"* %55 to i64*
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %7, i64 0, i32 0
  br label %58

58:                                               ; preds = %71, %50
  %59 = phi i64 [ 0, %50 ], [ %73, %71 ]
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %48, i64 %59
  %61 = bitcast %"struct.WTF::KeyValuePair.2787"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8, !noalias !44
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8, !alias.scope !44
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4, !noalias !44
  %67 = and i32 %66, 16777216
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #11, !noalias !44
  br label %71

71:                                               ; preds = %69, %64, %58
  store i64 0, i64* %56, align 8, !alias.scope !44
  %72 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_15TagCollectionNSEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %61, %"struct.WTF::KeyValuePair.2787"* nonnull dereferenceable(16) %7) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  %73 = add nuw nsw i64 %59, 1
  %74 = icmp eq i64 %73, %46
  br i1 %74, label %75, label %58

75:                                               ; preds = %71
  br i1 %49, label %84, label %76

76:                                               ; preds = %75
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %77, i64 0, i32 0, i32 0
  %79 = bitcast %"struct.WTF::KeyValuePair.2787"* %6 to i8*
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %6, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %6, i64 0, i32 1
  %82 = bitcast %"class.blink::Member.2788"* %81 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %6, i64 0, i32 0
  br label %102

84:                                               ; preds = %148, %42, %75
  %85 = phi %"struct.WTF::KeyValuePair.2787"* [ null, %75 ], [ null, %42 ], [ %109, %148 ]
  %86 = bitcast %"class.WTF::HashTable.2785"* %0 to %"class.blink::HeapHashTableBacking.3060"**
  store %"class.blink::HeapHashTableBacking.3060"* %47, %"class.blink::HeapHashTableBacking.3060"** %86, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::HeapHashTableBacking.3060", %"class.blink::HeapHashTableBacking.3060"* %47, i64 0, i32 0
  %91 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #11
  br label %92

92:                                               ; preds = %84, %89
  %93 = icmp eq i32 %1, 0
  br i1 %93, label %151, label %94

94:                                               ; preds = %92
  %95 = bitcast %"struct.WTF::KeyValuePair.2787"* %5 to i8*
  %96 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !47
  %97 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %96, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %5, i64 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %5, i64 0, i32 1
  %100 = bitcast %"class.blink::Member.2788"* %99 to i64*
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %5, i64 0, i32 0
  br label %153

102:                                              ; preds = %148, %76
  %103 = phi i64 [ 0, %76 ], [ %149, %148 ]
  %104 = phi %"struct.WTF::KeyValuePair.2787"* [ null, %76 ], [ %109, %148 ]
  %105 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %34, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %105, i64 %103
  %107 = icmp eq %"struct.WTF::KeyValuePair.2787"* %106, %2
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %48, i64 %103
  %109 = select i1 %107, %"struct.WTF::KeyValuePair.2787"* %108, %"struct.WTF::KeyValuePair.2787"* %104
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %106, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %113 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, %112
  %114 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %115 = or i1 %114, %113
  br i1 %115, label %116, label %128

116:                                              ; preds = %102
  %117 = bitcast %"struct.WTF::KeyValuePair.2787"* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %112, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !50
  %118 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %112, null
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 1
  %121 = load i32, i32* %120, align 4, !noalias !50
  %122 = and i32 %121, 16777216
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %125) #11, !noalias !50
  br label %126

126:                                              ; preds = %116, %119, %124
  store i64 0, i64* %82, align 8, !alias.scope !50
  %127 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_15TagCollectionNSEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %117, %"struct.WTF::KeyValuePair.2787"* nonnull dereferenceable(16) %6) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #11
  br label %148

128:                                              ; preds = %102
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %108, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %129) #11
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %108, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %130, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %132 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %130, null
  br i1 %132, label %140, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 16777216
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %139) #11
  br label %140

140:                                              ; preds = %128, %133, %138
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %48, i64 %103, i32 1
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %105, i64 %103, i32 1
  %143 = bitcast %"class.blink::Member.2788"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::Member.2788"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %34, align 8
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %146, i64 %103, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %147) #11
  br label %148

148:                                              ; preds = %126, %140
  %149 = add nuw nsw i64 %103, 1
  %150 = icmp eq i64 %149, %46
  br i1 %150, label %84, label %102

151:                                              ; preds = %166, %92
  %152 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2785"* %0, %"struct.WTF::KeyValuePair.2787"* %45, i32 %1, %"struct.WTF::KeyValuePair.2787"* %85)
  br label %170

153:                                              ; preds = %166, %94
  %154 = phi i64 [ 0, %94 ], [ %168, %166 ]
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %45, i64 %154
  %156 = bitcast %"struct.WTF::KeyValuePair.2787"* %155 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #11
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8, !noalias !47
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %157, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8, !alias.scope !47
  %158 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %157, null
  br i1 %158, label %166, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 4, !noalias !47
  %162 = and i32 %161, 16777216
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #11, !noalias !47
  br label %166

166:                                              ; preds = %153, %159, %164
  store i64 0, i64* %100, align 8, !alias.scope !47
  %167 = call %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_15TagCollectionNSEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %156, %"struct.WTF::KeyValuePair.2787"* nonnull dereferenceable(16) %5) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #11
  %168 = add nuw nsw i64 %154, 1
  %169 = icmp eq i64 %168, %38
  br i1 %169, label %151, label %153

170:                                              ; preds = %37, %33, %151
  %171 = phi %"struct.WTF::KeyValuePair.2787"* [ %152, %151 ], [ null, %33 ], [ null, %37 ]
  ret %"struct.WTF::KeyValuePair.2787"* %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2785"*, %"struct.WTF::KeyValuePair.2787"*, i32, %"struct.WTF::KeyValuePair.2787"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2785", align 8
  %6 = bitcast %"class.WTF::HashTable.2785"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2785"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2787"* %1, %"struct.WTF::KeyValuePair.2787"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2787"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2787"* %1 to i8*
  br label %27

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 0
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %19, align 8
  br label %83

23:                                               ; preds = %122
  %24 = bitcast %"class.WTF::HashTable.2785"* %5 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = ptrtoint i8* %25 to i64
  br label %27

27:                                               ; preds = %15, %23
  %28 = phi i64 [ %16, %15 ], [ %26, %23 ]
  %29 = phi i32 [ 0, %15 ], [ %123, %23 ]
  %30 = phi i8* [ %17, %15 ], [ %25, %23 ]
  %31 = phi %"struct.WTF::KeyValuePair.2787"* [ null, %15 ], [ %125, %23 ]
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.WTF::HashTable.2785"* %5 to i64*
  br label %40

36:                                               ; preds = %27
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %30) #11
  %37 = load i32, i32* %12, align 8
  %38 = bitcast %"class.WTF::HashTable.2785"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %34, %36
  %41 = phi i64* [ %35, %34 ], [ %38, %36 ]
  %42 = phi i64 [ %28, %34 ], [ %39, %36 ]
  %43 = phi i32 [ %29, %34 ], [ %37, %36 ]
  %44 = bitcast %"class.WTF::HashTable.2785"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  store atomic i64 %42, i64* %44 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = inttoptr i64 %42 to i8*
  %50 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #11
  br label %51

51:                                               ; preds = %40, %48
  store i32 %2, i32* %12, align 8
  store i64 %45, i64* %41, align 8
  store i32 %43, i32* %8, align 8
  %52 = inttoptr i64 %45 to %"struct.WTF::KeyValuePair.2787"*
  %53 = icmp eq i64 %45, 0
  br i1 %53, label %79, label %54

54:                                               ; preds = %51
  %55 = icmp eq i32 %43, 0
  br i1 %55, label %77, label %56

56:                                               ; preds = %54
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = zext i32 %43 to i64
  br label %60

60:                                               ; preds = %74, %56
  %61 = phi i64 [ 0, %56 ], [ %75, %74 ]
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %52, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %65
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %68 = or i1 %67, %66
  br i1 %68, label %74, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %62, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %70) #11
  %71 = bitcast %"struct.WTF::KeyValuePair.2787"* %62 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %52, i64 %61, i32 1
  %73 = bitcast %"class.blink::Member.2788"* %72 to i64*
  store atomic i64 0, i64* %73 monotonic, align 8
  br label %74

74:                                               ; preds = %69, %60
  %75 = add nuw nsw i64 %61, 1
  %76 = icmp eq i64 %75, %59
  br i1 %76, label %77, label %60

77:                                               ; preds = %74, %54
  %78 = inttoptr i64 %45 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %78) #11
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %79

79:                                               ; preds = %51, %77
  %80 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, -2147483648
  store i32 %82, i32* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.2787"* %31

83:                                               ; preds = %18, %122
  %84 = phi i32 [ %13, %18 ], [ %123, %122 ]
  %85 = phi %"struct.WTF::KeyValuePair.2787"* [ %22, %18 ], [ %124, %122 ]
  %86 = phi %"struct.WTF::KeyValuePair.2787"* [ null, %18 ], [ %125, %122 ]
  %87 = phi i32 [ 0, %18 ], [ %126, %122 ]
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %85, i64 %88
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, %92
  %94 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %95 = or i1 %94, %93
  br i1 %95, label %122, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %89, i64 0, i32 0
  %98 = call { %"struct.WTF::KeyValuePair.2787"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2785"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %97) #11
  %99 = extractvalue { %"struct.WTF::KeyValuePair.2787"*, i8 } %98, 0
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %99, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %100) #11
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %99, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %101, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %103 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %101, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 16777216
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %110) #11
  br label %111

111:                                              ; preds = %96, %104, %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %99, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %85, i64 %88, i32 1
  %114 = bitcast %"class.blink::Member.2788"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::Member.2788"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %19, align 8
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %117, i64 %88
  %119 = icmp eq %"struct.WTF::KeyValuePair.2787"* %118, %3
  %120 = select i1 %119, %"struct.WTF::KeyValuePair.2787"* %99, %"struct.WTF::KeyValuePair.2787"* %86
  %121 = load i32, i32* %12, align 8
  br label %122

122:                                              ; preds = %83, %111
  %123 = phi i32 [ %84, %83 ], [ %121, %111 ]
  %124 = phi %"struct.WTF::KeyValuePair.2787"* [ %85, %83 ], [ %117, %111 ]
  %125 = phi %"struct.WTF::KeyValuePair.2787"* [ %86, %83 ], [ %120, %111 ]
  %126 = add i32 %87, 1
  %127 = icmp eq i32 %126, %123
  br i1 %127, label %23, label %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2787"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_15TagCollectionNSEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8*, %"struct.WTF::KeyValuePair.2787"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.2787"*
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %7 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 16777216
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #11
  br label %15

15:                                               ; preds = %2, %8, %13
  %16 = getelementptr inbounds i8, i8* %0, i64 8
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %1, i64 0, i32 1
  %18 = bitcast %"class.blink::Member.2788"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %15
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #11
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #11
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 9
  %35 = load i8, i8* %34, align 1, !range !4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %41, align 8
  %43 = load atomic i64, i64* %20 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %42, i64 0, i32 0, i32 0
  %47 = inttoptr i64 %43 to i8*
  %48 = bitcast %"class.blink::MarkingVisitor"* %42 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, i64 5
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %46, i8* nonnull %47, i8* %47, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15TagCollectionNSEE5TraceEPNS_7VisitorEPKv) #11
  %52 = load i64, i64* %38, align 8
  br label %53

53:                                               ; preds = %45, %37
  %54 = phi i64 [ %40, %37 ], [ %52, %45 ]
  %55 = add i64 %54, -1
  store i64 %55, i64* %38, align 8
  br label %56

56:                                               ; preds = %15, %30, %53
  ret %"struct.WTF::KeyValuePair.2787"* %3
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.3060"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.29, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_15TagCollectionNSEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.3060"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.3060"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_15TagCollectionNSEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([435 x i8], [435 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_15TagCollectionNSEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.2787"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %18
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %39, %24
  %28 = phi i64 [ 0, %24 ], [ %41, %39 ]
  %29 = phi i32 [ 0, %24 ], [ %40, %39 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %22, i64 %28
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %33
  %35 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %36 = or i1 %35, %34
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %30, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %38) #11
  br label %39

39:                                               ; preds = %37, %27
  %40 = add i32 %29, 1
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %21, %41
  br i1 %42, label %27, label %43

43:                                               ; preds = %39, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_15TagCollectionNSEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2787"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %20
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %35

34:                                               ; preds = %73, %20
  ret void

35:                                               ; preds = %73, %30
  %36 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %3, i64 %36
  br i1 %28, label %38, label %56

38:                                               ; preds = %35
  %39 = bitcast %"struct.WTF::KeyValuePair.2787"* %37 to i64*
  %40 = load atomic i64, i64* %39 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %41
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %45 = or i1 %44, %43
  br i1 %45, label %73, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %3, i64 %36, i32 1
  %48 = bitcast %"class.blink::Member.2788"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %0, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15TagCollectionNSEE5TraceEPNS_7VisitorEPKv) #11
  br label %73

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %37, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %59
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %62 = or i1 %61, %60
  br i1 %62, label %73, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %3, i64 %36, i32 1
  %65 = bitcast %"class.blink::Member.2788"* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15TagCollectionNSEE5TraceEPNS_7VisitorEPKv) #11
  br label %73

73:                                               ; preds = %68, %63, %38, %46, %51, %56
  %74 = add nuw nsw i64 %36, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15TagCollectionNSEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLCollection"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLCollection"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2787"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_15TagCollectionNSEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2785"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2787"*, %"struct.WTF::KeyValuePair.2787"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2785", %"class.WTF::HashTable.2785"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #11
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair.2787"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair.2787"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair.2787"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.2787"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair.2787"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair.2787"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair.2787"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair.2787"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair.2787"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair.2787"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2787", %"struct.WTF::KeyValuePair.2787"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair.2787"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair.2787"*, i8 } undef, %"struct.WTF::KeyValuePair.2787"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2787"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair.2787"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN5blink15TagCollectionNSC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringES7_(%"class.blink::TagCollectionNS"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameNodeList"* @_ZN5blink17NodeListsNodeData8AddCacheINS_12NameNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::pair.2778", align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"struct.std::__1::pair.2778"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %4, %11, %26
  %29 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 0
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %30, align 8
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %6, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2775"* %32, %"struct.std::__1::pair.2778"* nonnull dereferenceable(16) %5, i8** nonnull dereferenceable(8) %6) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %28, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::NameNodeList"*
  %60 = select i1 %57, %"class.blink::NameNodeList"* null, %"class.blink::NameNodeList"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #11
  %63 = bitcast i8* %62 to %"class.blink::NameNodeList"*
  call void @_ZN5blink12NameNodeListC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NameNodeList"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.2779"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::NameNodeList"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::NameNodeList"* %80
}

declare void @_ZN5blink12NameNodeListC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NameNodeList"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ClassCollection"* @_ZN5blink17NodeListsNodeData8AddCacheINS_15ClassCollectionEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::pair.2778", align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"struct.std::__1::pair.2778"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %4, %11, %26
  %29 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 0
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %30, align 8
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %6, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2775"* %32, %"struct.std::__1::pair.2778"* nonnull dereferenceable(16) %5, i8** nonnull dereferenceable(8) %6) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %28, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::ClassCollection"*
  %60 = select i1 %57, %"class.blink::ClassCollection"* null, %"class.blink::ClassCollection"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #11
  %63 = bitcast i8* %62 to %"class.blink::ClassCollection"*
  call void @_ZN5blink15ClassCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::ClassCollection"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.2779"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::ClassCollection"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::ClassCollection"* %80
}

declare void @_ZN5blink15ClassCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::ClassCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::RadioNodeList"* @_ZN5blink17NodeListsNodeData8AddCacheINS_13RadioNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::pair.2778", align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"struct.std::__1::pair.2778"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %4, %11, %26
  %29 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 0
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.2778", %"struct.std::__1::pair.2778"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %30, align 8
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i8* null, i8** %6, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.2777"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2775"* %32, %"struct.std::__1::pair.2778"* nonnull dereferenceable(16) %5, i8** nonnull dereferenceable(8) %6) #11
  %34 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.2777"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %28, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.314"* %58 to %"class.blink::RadioNodeList"*
  %60 = select i1 %57, %"class.blink::RadioNodeList"* null, %"class.blink::RadioNodeList"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #11
  %63 = bitcast i8* %62 to %"class.blink::RadioNodeList"*
  call void @_ZN5blink13RadioNodeListC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::RadioNodeList"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2777", %"struct.WTF::KeyValuePair.2777"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.2779"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::RadioNodeList"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::RadioNodeList"* %80
}

declare void @_ZN5blink13RadioNodeListC1ERNS_13ContainerNodeENS_14CollectionTypeERKN3WTF12AtomicStringE(%"class.blink::RadioNodeList"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink13ContainerNode14ChildrenChange10ForRemovalERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink13ContainerNode14ChildrenChange10ForRemovalERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink13ContainerNode14ChildrenChange12ForInsertionERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink13ContainerNode14ChildrenChange12ForInsertionERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink13ContainerNode14ChildrenChange12ForInsertionERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink13ContainerNode14ChildrenChange12ForInsertionERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE"}
!17 = !{!"branch_weights", i32 1073205, i32 2146410443}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink13ContainerNode14ChildrenChange10ForRemovalERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE: argument 0"}
!20 = distinct !{!20, !"_ZN5blink13ContainerNode14ChildrenChange10ForRemovalERNS_4NodeEPS2_S4_NS0_20ChildrenChangeSourceE"}
!21 = !{!"branch_weights", i32 4001, i32 1}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!30 = distinct !{!30, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!36 = distinct !{!36, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!37 = !{i32 24, i32 33}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_15TagCollectionNSEEEEEE10EmptyValueEv"}
