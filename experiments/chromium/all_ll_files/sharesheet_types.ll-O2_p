; ModuleID = '../../chrome/browser/sharesheet/sharesheet_types.cc'
source_filename = "../../chrome/browser/sharesheet/sharesheet_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sharesheet::TargetInfo" = type { i32, %"class.absl::optional", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.absl::optional.2", %"class.absl::optional.7" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::ImageSkia" }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.std::__1::basic_string.12" }
%"class.std::__1::basic_string.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.15 }
%union.anon.15 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.16 }
%struct.anon.16 = type { i8 }

@_ZN10sharesheet10TargetInfoC1ENS_10TargetTypeEN4absl8optionalIN3gfx9ImageSkiaEEERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEESF_RKNS3_ISD_EERKNS3_INS8_IcNS9_IcEENSB_IcEEEEEE = hidden unnamed_addr alias void (%"struct.sharesheet::TargetInfo"*, i32, %"class.absl::optional"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.absl::optional.2"*, %"class.absl::optional.7"*), void (%"struct.sharesheet::TargetInfo"*, i32, %"class.absl::optional"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.absl::optional.2"*, %"class.absl::optional.7"*)* @_ZN10sharesheet10TargetInfoC2ENS_10TargetTypeEN4absl8optionalIN3gfx9ImageSkiaEEERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEESF_RKNS3_ISD_EERKNS3_INS8_IcNS9_IcEENSB_IcEEEEEE
@_ZN10sharesheet10TargetInfoD1Ev = hidden unnamed_addr alias void (%"struct.sharesheet::TargetInfo"*), void (%"struct.sharesheet::TargetInfo"*)* @_ZN10sharesheet10TargetInfoD2Ev
@_ZN10sharesheet10TargetInfoC1EOS0_ = hidden unnamed_addr alias void (%"struct.sharesheet::TargetInfo"*, %"struct.sharesheet::TargetInfo"*), void (%"struct.sharesheet::TargetInfo"*, %"struct.sharesheet::TargetInfo"*)* @_ZN10sharesheet10TargetInfoC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10sharesheet10TargetInfoC2ENS_10TargetTypeEN4absl8optionalIN3gfx9ImageSkiaEEERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEESF_RKNS3_ISD_EERKNS3_INS8_IcNS9_IcEENSB_IcEEEEEE(%"struct.sharesheet::TargetInfo"*, i32, %"class.absl::optional"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.absl::optional.2"* nocapture readonly dereferenceable(32), %"class.absl::optional.7"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #8
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %15, %"class.gfx::ImageSkia"* dereferenceable(8) %14) #8
  store i8 1, i8* %9, align 8
  br label %16

16:                                               ; preds = %7, %13
  %17 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #8
  br label %200

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  %33 = trunc i64 %29 to i8
  %34 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 %33, i8* %35, align 1
  br label %53

36:                                               ; preds = %25
  %37 = icmp ugt i64 %29, 9223372036854775791
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #9
  unreachable

40:                                               ; preds = %36
  %41 = add nuw nsw i64 %29, 8
  %42 = and i64 %41, -8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @abort() #9
  unreachable

45:                                               ; preds = %40
  %46 = shl i64 %42, 1
  %47 = tail call i8* @_Znwm(i64 %46) #10
  %48 = bitcast i8* %47 to i16*
  %49 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  store i8* %47, i8** %49, align 8
  %50 = or i64 %42, -9223372036854775808
  %51 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %52, align 8
  br label %53

53:                                               ; preds = %45, %31
  %54 = phi i16* [ %32, %31 ], [ %48, %45 ]
  %55 = add nuw nsw i64 %29, 1
  %56 = add i64 %29, 1
  %57 = icmp ult i64 %56, 16
  br i1 %57, label %147, label %58

58:                                               ; preds = %53
  %59 = add i64 %29, 1
  %60 = getelementptr i16, i16* %54, i64 %59
  %61 = getelementptr i16, i16* %27, i64 %59
  %62 = icmp ult i16* %54, %61
  %63 = icmp ult i16* %27, %60
  %64 = and i1 %62, %63
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = and i64 %56, -16
  %67 = sub i64 %55, %66
  %68 = getelementptr i16, i16* %27, i64 %66
  %69 = getelementptr i16, i16* %54, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %126, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %123, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %124, %77 ]
  %80 = getelementptr i16, i16* %27, i64 %78
  %81 = getelementptr i16, i16* %54, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !3
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !3
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !6, !noalias !3
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !6, !noalias !3
  %90 = or i64 %78, 16
  %91 = getelementptr i16, i16* %27, i64 %90
  %92 = getelementptr i16, i16* %54, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !3
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !3
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !6, !noalias !3
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !6, !noalias !3
  %101 = or i64 %78, 32
  %102 = getelementptr i16, i16* %27, i64 %101
  %103 = getelementptr i16, i16* %54, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !3
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !3
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !6, !noalias !3
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !6, !noalias !3
  %112 = or i64 %78, 48
  %113 = getelementptr i16, i16* %27, i64 %112
  %114 = getelementptr i16, i16* %54, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !3
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !3
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !6, !noalias !3
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !6, !noalias !3
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !8

126:                                              ; preds = %77, %65
  %127 = phi i64 [ 0, %65 ], [ %123, %77 ]
  %128 = icmp eq i64 %73, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126, %129
  %130 = phi i64 [ %142, %129 ], [ %127, %126 ]
  %131 = phi i64 [ %143, %129 ], [ %73, %126 ]
  %132 = getelementptr i16, i16* %27, i64 %130
  %133 = getelementptr i16, i16* %54, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !3
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !3
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !6, !noalias !3
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !6, !noalias !3
  %142 = add i64 %130, 16
  %143 = add i64 %131, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %129, !llvm.loop !10

145:                                              ; preds = %129, %126
  %146 = icmp eq i64 %56, %66
  br i1 %146, label %200, label %147

147:                                              ; preds = %145, %58, %53
  %148 = phi i64 [ %55, %58 ], [ %55, %53 ], [ %67, %145 ]
  %149 = phi i16* [ %27, %58 ], [ %27, %53 ], [ %68, %145 ]
  %150 = phi i16* [ %54, %58 ], [ %54, %53 ], [ %69, %145 ]
  %151 = add i64 %148, -1
  %152 = and i64 %148, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %160, %154 ], [ %148, %147 ]
  %156 = phi i16* [ %162, %154 ], [ %149, %147 ]
  %157 = phi i16* [ %161, %154 ], [ %150, %147 ]
  %158 = phi i64 [ %163, %154 ], [ %152, %147 ]
  %159 = load i16, i16* %156, align 2
  store i16 %159, i16* %157, align 2
  %160 = add i64 %155, -1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = add i64 %158, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %154, !llvm.loop !12

165:                                              ; preds = %154, %147
  %166 = phi i64 [ %148, %147 ], [ %160, %154 ]
  %167 = phi i16* [ %149, %147 ], [ %162, %154 ]
  %168 = phi i16* [ %150, %147 ], [ %161, %154 ]
  %169 = icmp ult i64 %151, 7
  br i1 %169, label %200, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %196, %170 ], [ %166, %165 ]
  %172 = phi i16* [ %198, %170 ], [ %167, %165 ]
  %173 = phi i16* [ %197, %170 ], [ %168, %165 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %173, i64 2
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %173, i64 3
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %173, i64 4
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 5
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %173, i64 6
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %173, i64 7
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %171, -8
  %197 = getelementptr inbounds i16, i16* %173, i64 8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %200, label %170, !llvm.loop !13

200:                                              ; preds = %165, %170, %145, %22
  %201 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 3
  %202 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %202, i64 0, i32 1, i32 1
  %204 = load i8, i8* %203, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %209, label %206

206:                                              ; preds = %200
  %207 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %208 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 24, i1 false) #8
  br label %384

209:                                              ; preds = %200
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i16*, i16** %210, align 8
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = icmp ult i64 %213, 11
  br i1 %214, label %215, label %220

215:                                              ; preds = %209
  %216 = bitcast %"class.std::__1::basic_string"* %201 to i16*
  %217 = trunc i64 %213 to i8
  %218 = bitcast %"class.std::__1::basic_string"* %201 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %218, i64 0, i32 1, i32 1
  store i8 %217, i8* %219, align 1
  br label %237

220:                                              ; preds = %209
  %221 = icmp ugt i64 %213, 9223372036854775791
  br i1 %221, label %222, label %224

222:                                              ; preds = %220
  %223 = bitcast %"class.std::__1::basic_string"* %201 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %223) #9
  unreachable

224:                                              ; preds = %220
  %225 = add nuw nsw i64 %213, 8
  %226 = and i64 %225, -8
  %227 = icmp slt i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  tail call void @abort() #9
  unreachable

229:                                              ; preds = %224
  %230 = shl i64 %226, 1
  %231 = tail call i8* @_Znwm(i64 %230) #10
  %232 = bitcast i8* %231 to i16*
  %233 = bitcast %"class.std::__1::basic_string"* %201 to i8**
  store i8* %231, i8** %233, align 8
  %234 = or i64 %226, -9223372036854775808
  %235 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %213, i64* %236, align 8
  br label %237

237:                                              ; preds = %229, %215
  %238 = phi i16* [ %216, %215 ], [ %232, %229 ]
  %239 = add nuw nsw i64 %213, 1
  %240 = add i64 %213, 1
  %241 = icmp ult i64 %240, 16
  br i1 %241, label %331, label %242

242:                                              ; preds = %237
  %243 = add i64 %213, 1
  %244 = getelementptr i16, i16* %238, i64 %243
  %245 = getelementptr i16, i16* %211, i64 %243
  %246 = icmp ult i16* %238, %245
  %247 = icmp ult i16* %211, %244
  %248 = and i1 %246, %247
  br i1 %248, label %331, label %249

249:                                              ; preds = %242
  %250 = and i64 %240, -16
  %251 = sub i64 %239, %250
  %252 = getelementptr i16, i16* %211, i64 %250
  %253 = getelementptr i16, i16* %238, i64 %250
  %254 = add i64 %250, -16
  %255 = lshr exact i64 %254, 4
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp ult i64 %254, 48
  br i1 %258, label %310, label %259

259:                                              ; preds = %249
  %260 = sub nsw i64 %256, %257
  br label %261

261:                                              ; preds = %261, %259
  %262 = phi i64 [ 0, %259 ], [ %307, %261 ]
  %263 = phi i64 [ %260, %259 ], [ %308, %261 ]
  %264 = getelementptr i16, i16* %211, i64 %262
  %265 = getelementptr i16, i16* %238, i64 %262
  %266 = bitcast i16* %264 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !14
  %268 = getelementptr i16, i16* %264, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !14
  %271 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %271, align 2, !alias.scope !17, !noalias !14
  %272 = getelementptr i16, i16* %265, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %273, align 2, !alias.scope !17, !noalias !14
  %274 = or i64 %262, 16
  %275 = getelementptr i16, i16* %211, i64 %274
  %276 = getelementptr i16, i16* %238, i64 %274
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !14
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !14
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !17, !noalias !14
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !17, !noalias !14
  %285 = or i64 %262, 32
  %286 = getelementptr i16, i16* %211, i64 %285
  %287 = getelementptr i16, i16* %238, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !14
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !14
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !17, !noalias !14
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !17, !noalias !14
  %296 = or i64 %262, 48
  %297 = getelementptr i16, i16* %211, i64 %296
  %298 = getelementptr i16, i16* %238, i64 %296
  %299 = bitcast i16* %297 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !14
  %301 = getelementptr i16, i16* %297, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !14
  %304 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %304, align 2, !alias.scope !17, !noalias !14
  %305 = getelementptr i16, i16* %298, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %306, align 2, !alias.scope !17, !noalias !14
  %307 = add i64 %262, 64
  %308 = add i64 %263, -4
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %261, !llvm.loop !19

310:                                              ; preds = %261, %249
  %311 = phi i64 [ 0, %249 ], [ %307, %261 ]
  %312 = icmp eq i64 %257, 0
  br i1 %312, label %329, label %313

313:                                              ; preds = %310, %313
  %314 = phi i64 [ %326, %313 ], [ %311, %310 ]
  %315 = phi i64 [ %327, %313 ], [ %257, %310 ]
  %316 = getelementptr i16, i16* %211, i64 %314
  %317 = getelementptr i16, i16* %238, i64 %314
  %318 = bitcast i16* %316 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !14
  %320 = getelementptr i16, i16* %316, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !14
  %323 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %323, align 2, !alias.scope !17, !noalias !14
  %324 = getelementptr i16, i16* %317, i64 8
  %325 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %325, align 2, !alias.scope !17, !noalias !14
  %326 = add i64 %314, 16
  %327 = add i64 %315, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %313, !llvm.loop !20

329:                                              ; preds = %313, %310
  %330 = icmp eq i64 %240, %250
  br i1 %330, label %384, label %331

331:                                              ; preds = %329, %242, %237
  %332 = phi i64 [ %239, %242 ], [ %239, %237 ], [ %251, %329 ]
  %333 = phi i16* [ %211, %242 ], [ %211, %237 ], [ %252, %329 ]
  %334 = phi i16* [ %238, %242 ], [ %238, %237 ], [ %253, %329 ]
  %335 = add i64 %332, -1
  %336 = and i64 %332, 7
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %349, label %338

338:                                              ; preds = %331, %338
  %339 = phi i64 [ %344, %338 ], [ %332, %331 ]
  %340 = phi i16* [ %346, %338 ], [ %333, %331 ]
  %341 = phi i16* [ %345, %338 ], [ %334, %331 ]
  %342 = phi i64 [ %347, %338 ], [ %336, %331 ]
  %343 = load i16, i16* %340, align 2
  store i16 %343, i16* %341, align 2
  %344 = add i64 %339, -1
  %345 = getelementptr inbounds i16, i16* %341, i64 1
  %346 = getelementptr inbounds i16, i16* %340, i64 1
  %347 = add i64 %342, -1
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %338, !llvm.loop !21

349:                                              ; preds = %338, %331
  %350 = phi i64 [ %332, %331 ], [ %344, %338 ]
  %351 = phi i16* [ %333, %331 ], [ %346, %338 ]
  %352 = phi i16* [ %334, %331 ], [ %345, %338 ]
  %353 = icmp ult i64 %335, 7
  br i1 %353, label %384, label %354

354:                                              ; preds = %349, %354
  %355 = phi i64 [ %380, %354 ], [ %350, %349 ]
  %356 = phi i16* [ %382, %354 ], [ %351, %349 ]
  %357 = phi i16* [ %381, %354 ], [ %352, %349 ]
  %358 = load i16, i16* %356, align 2
  store i16 %358, i16* %357, align 2
  %359 = getelementptr inbounds i16, i16* %357, i64 1
  %360 = getelementptr inbounds i16, i16* %356, i64 1
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %357, i64 2
  %363 = getelementptr inbounds i16, i16* %356, i64 2
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %357, i64 3
  %366 = getelementptr inbounds i16, i16* %356, i64 3
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %357, i64 4
  %369 = getelementptr inbounds i16, i16* %356, i64 4
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = getelementptr inbounds i16, i16* %357, i64 5
  %372 = getelementptr inbounds i16, i16* %356, i64 5
  %373 = load i16, i16* %372, align 2
  store i16 %373, i16* %371, align 2
  %374 = getelementptr inbounds i16, i16* %357, i64 6
  %375 = getelementptr inbounds i16, i16* %356, i64 6
  %376 = load i16, i16* %375, align 2
  store i16 %376, i16* %374, align 2
  %377 = getelementptr inbounds i16, i16* %357, i64 7
  %378 = getelementptr inbounds i16, i16* %356, i64 7
  %379 = load i16, i16* %378, align 2
  store i16 %379, i16* %377, align 2
  %380 = add i64 %355, -8
  %381 = getelementptr inbounds i16, i16* %357, i64 8
  %382 = getelementptr inbounds i16, i16* %356, i64 8
  %383 = icmp eq i64 %380, 0
  br i1 %383, label %384, label %354, !llvm.loop !22

384:                                              ; preds = %349, %354, %329, %206
  %385 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %386 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %385, i8 0, i64 32, i1 false) #8
  %387 = load i8, i8* %386, align 8, !range !2
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %575, label %389

389:                                              ; preds = %384
  %390 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %391 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %392 = bitcast %"class.std::__1::basic_string"* %390 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %393 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %392, i64 0, i32 1, i32 1
  %394 = load i8, i8* %393, align 1
  %395 = icmp slt i8 %394, 0
  br i1 %395, label %399, label %396

396:                                              ; preds = %389
  %397 = bitcast %"class.std::__1::basic_string"* %391 to i8*
  %398 = bitcast %"class.std::__1::basic_string"* %390 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %397, i8* align 8 %398, i64 24, i1 false) #8
  br label %574

399:                                              ; preds = %389
  %400 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load i16*, i16** %400, align 8
  %402 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %403 = load i64, i64* %402, align 8
  %404 = icmp ult i64 %403, 11
  br i1 %404, label %405, label %410

405:                                              ; preds = %399
  %406 = bitcast %"class.std::__1::basic_string"* %391 to i16*
  %407 = trunc i64 %403 to i8
  %408 = bitcast %"class.std::__1::basic_string"* %391 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %409 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %408, i64 0, i32 1, i32 1
  store i8 %407, i8* %409, align 1
  br label %427

410:                                              ; preds = %399
  %411 = icmp ugt i64 %403, 9223372036854775791
  br i1 %411, label %412, label %414

412:                                              ; preds = %410
  %413 = bitcast %"class.std::__1::basic_string"* %391 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %413) #9
  unreachable

414:                                              ; preds = %410
  %415 = add nuw nsw i64 %403, 8
  %416 = and i64 %415, -8
  %417 = icmp slt i64 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %414
  tail call void @abort() #9
  unreachable

419:                                              ; preds = %414
  %420 = shl i64 %416, 1
  %421 = tail call i8* @_Znwm(i64 %420) #10
  %422 = bitcast i8* %421 to i16*
  %423 = bitcast %"class.std::__1::basic_string"* %391 to i8**
  store i8* %421, i8** %423, align 8
  %424 = or i64 %416, -9223372036854775808
  %425 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %424, i64* %425, align 8
  %426 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %403, i64* %426, align 8
  br label %427

427:                                              ; preds = %419, %405
  %428 = phi i16* [ %406, %405 ], [ %422, %419 ]
  %429 = add nuw nsw i64 %403, 1
  %430 = add i64 %403, 1
  %431 = icmp ult i64 %430, 16
  br i1 %431, label %521, label %432

432:                                              ; preds = %427
  %433 = add i64 %403, 1
  %434 = getelementptr i16, i16* %428, i64 %433
  %435 = getelementptr i16, i16* %401, i64 %433
  %436 = icmp ult i16* %428, %435
  %437 = icmp ult i16* %401, %434
  %438 = and i1 %436, %437
  br i1 %438, label %521, label %439

439:                                              ; preds = %432
  %440 = and i64 %430, -16
  %441 = sub i64 %429, %440
  %442 = getelementptr i16, i16* %401, i64 %440
  %443 = getelementptr i16, i16* %428, i64 %440
  %444 = add i64 %440, -16
  %445 = lshr exact i64 %444, 4
  %446 = add nuw nsw i64 %445, 1
  %447 = and i64 %446, 3
  %448 = icmp ult i64 %444, 48
  br i1 %448, label %500, label %449

449:                                              ; preds = %439
  %450 = sub nsw i64 %446, %447
  br label %451

451:                                              ; preds = %451, %449
  %452 = phi i64 [ 0, %449 ], [ %497, %451 ]
  %453 = phi i64 [ %450, %449 ], [ %498, %451 ]
  %454 = getelementptr i16, i16* %401, i64 %452
  %455 = getelementptr i16, i16* %428, i64 %452
  %456 = bitcast i16* %454 to <8 x i16>*
  %457 = load <8 x i16>, <8 x i16>* %456, align 2, !alias.scope !23
  %458 = getelementptr i16, i16* %454, i64 8
  %459 = bitcast i16* %458 to <8 x i16>*
  %460 = load <8 x i16>, <8 x i16>* %459, align 2, !alias.scope !23
  %461 = bitcast i16* %455 to <8 x i16>*
  store <8 x i16> %457, <8 x i16>* %461, align 2, !alias.scope !26, !noalias !23
  %462 = getelementptr i16, i16* %455, i64 8
  %463 = bitcast i16* %462 to <8 x i16>*
  store <8 x i16> %460, <8 x i16>* %463, align 2, !alias.scope !26, !noalias !23
  %464 = or i64 %452, 16
  %465 = getelementptr i16, i16* %401, i64 %464
  %466 = getelementptr i16, i16* %428, i64 %464
  %467 = bitcast i16* %465 to <8 x i16>*
  %468 = load <8 x i16>, <8 x i16>* %467, align 2, !alias.scope !23
  %469 = getelementptr i16, i16* %465, i64 8
  %470 = bitcast i16* %469 to <8 x i16>*
  %471 = load <8 x i16>, <8 x i16>* %470, align 2, !alias.scope !23
  %472 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %468, <8 x i16>* %472, align 2, !alias.scope !26, !noalias !23
  %473 = getelementptr i16, i16* %466, i64 8
  %474 = bitcast i16* %473 to <8 x i16>*
  store <8 x i16> %471, <8 x i16>* %474, align 2, !alias.scope !26, !noalias !23
  %475 = or i64 %452, 32
  %476 = getelementptr i16, i16* %401, i64 %475
  %477 = getelementptr i16, i16* %428, i64 %475
  %478 = bitcast i16* %476 to <8 x i16>*
  %479 = load <8 x i16>, <8 x i16>* %478, align 2, !alias.scope !23
  %480 = getelementptr i16, i16* %476, i64 8
  %481 = bitcast i16* %480 to <8 x i16>*
  %482 = load <8 x i16>, <8 x i16>* %481, align 2, !alias.scope !23
  %483 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %479, <8 x i16>* %483, align 2, !alias.scope !26, !noalias !23
  %484 = getelementptr i16, i16* %477, i64 8
  %485 = bitcast i16* %484 to <8 x i16>*
  store <8 x i16> %482, <8 x i16>* %485, align 2, !alias.scope !26, !noalias !23
  %486 = or i64 %452, 48
  %487 = getelementptr i16, i16* %401, i64 %486
  %488 = getelementptr i16, i16* %428, i64 %486
  %489 = bitcast i16* %487 to <8 x i16>*
  %490 = load <8 x i16>, <8 x i16>* %489, align 2, !alias.scope !23
  %491 = getelementptr i16, i16* %487, i64 8
  %492 = bitcast i16* %491 to <8 x i16>*
  %493 = load <8 x i16>, <8 x i16>* %492, align 2, !alias.scope !23
  %494 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %494, align 2, !alias.scope !26, !noalias !23
  %495 = getelementptr i16, i16* %488, i64 8
  %496 = bitcast i16* %495 to <8 x i16>*
  store <8 x i16> %493, <8 x i16>* %496, align 2, !alias.scope !26, !noalias !23
  %497 = add i64 %452, 64
  %498 = add i64 %453, -4
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %451, !llvm.loop !28

500:                                              ; preds = %451, %439
  %501 = phi i64 [ 0, %439 ], [ %497, %451 ]
  %502 = icmp eq i64 %447, 0
  br i1 %502, label %519, label %503

503:                                              ; preds = %500, %503
  %504 = phi i64 [ %516, %503 ], [ %501, %500 ]
  %505 = phi i64 [ %517, %503 ], [ %447, %500 ]
  %506 = getelementptr i16, i16* %401, i64 %504
  %507 = getelementptr i16, i16* %428, i64 %504
  %508 = bitcast i16* %506 to <8 x i16>*
  %509 = load <8 x i16>, <8 x i16>* %508, align 2, !alias.scope !23
  %510 = getelementptr i16, i16* %506, i64 8
  %511 = bitcast i16* %510 to <8 x i16>*
  %512 = load <8 x i16>, <8 x i16>* %511, align 2, !alias.scope !23
  %513 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %509, <8 x i16>* %513, align 2, !alias.scope !26, !noalias !23
  %514 = getelementptr i16, i16* %507, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  store <8 x i16> %512, <8 x i16>* %515, align 2, !alias.scope !26, !noalias !23
  %516 = add i64 %504, 16
  %517 = add i64 %505, -1
  %518 = icmp eq i64 %517, 0
  br i1 %518, label %519, label %503, !llvm.loop !29

519:                                              ; preds = %503, %500
  %520 = icmp eq i64 %430, %440
  br i1 %520, label %574, label %521

521:                                              ; preds = %519, %432, %427
  %522 = phi i64 [ %429, %432 ], [ %429, %427 ], [ %441, %519 ]
  %523 = phi i16* [ %401, %432 ], [ %401, %427 ], [ %442, %519 ]
  %524 = phi i16* [ %428, %432 ], [ %428, %427 ], [ %443, %519 ]
  %525 = add i64 %522, -1
  %526 = and i64 %522, 7
  %527 = icmp eq i64 %526, 0
  br i1 %527, label %539, label %528

528:                                              ; preds = %521, %528
  %529 = phi i64 [ %534, %528 ], [ %522, %521 ]
  %530 = phi i16* [ %536, %528 ], [ %523, %521 ]
  %531 = phi i16* [ %535, %528 ], [ %524, %521 ]
  %532 = phi i64 [ %537, %528 ], [ %526, %521 ]
  %533 = load i16, i16* %530, align 2
  store i16 %533, i16* %531, align 2
  %534 = add i64 %529, -1
  %535 = getelementptr inbounds i16, i16* %531, i64 1
  %536 = getelementptr inbounds i16, i16* %530, i64 1
  %537 = add i64 %532, -1
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %539, label %528, !llvm.loop !30

539:                                              ; preds = %528, %521
  %540 = phi i64 [ %522, %521 ], [ %534, %528 ]
  %541 = phi i16* [ %523, %521 ], [ %536, %528 ]
  %542 = phi i16* [ %524, %521 ], [ %535, %528 ]
  %543 = icmp ult i64 %525, 7
  br i1 %543, label %574, label %544

544:                                              ; preds = %539, %544
  %545 = phi i64 [ %570, %544 ], [ %540, %539 ]
  %546 = phi i16* [ %572, %544 ], [ %541, %539 ]
  %547 = phi i16* [ %571, %544 ], [ %542, %539 ]
  %548 = load i16, i16* %546, align 2
  store i16 %548, i16* %547, align 2
  %549 = getelementptr inbounds i16, i16* %547, i64 1
  %550 = getelementptr inbounds i16, i16* %546, i64 1
  %551 = load i16, i16* %550, align 2
  store i16 %551, i16* %549, align 2
  %552 = getelementptr inbounds i16, i16* %547, i64 2
  %553 = getelementptr inbounds i16, i16* %546, i64 2
  %554 = load i16, i16* %553, align 2
  store i16 %554, i16* %552, align 2
  %555 = getelementptr inbounds i16, i16* %547, i64 3
  %556 = getelementptr inbounds i16, i16* %546, i64 3
  %557 = load i16, i16* %556, align 2
  store i16 %557, i16* %555, align 2
  %558 = getelementptr inbounds i16, i16* %547, i64 4
  %559 = getelementptr inbounds i16, i16* %546, i64 4
  %560 = load i16, i16* %559, align 2
  store i16 %560, i16* %558, align 2
  %561 = getelementptr inbounds i16, i16* %547, i64 5
  %562 = getelementptr inbounds i16, i16* %546, i64 5
  %563 = load i16, i16* %562, align 2
  store i16 %563, i16* %561, align 2
  %564 = getelementptr inbounds i16, i16* %547, i64 6
  %565 = getelementptr inbounds i16, i16* %546, i64 6
  %566 = load i16, i16* %565, align 2
  store i16 %566, i16* %564, align 2
  %567 = getelementptr inbounds i16, i16* %547, i64 7
  %568 = getelementptr inbounds i16, i16* %546, i64 7
  %569 = load i16, i16* %568, align 2
  store i16 %569, i16* %567, align 2
  %570 = add i64 %545, -8
  %571 = getelementptr inbounds i16, i16* %547, i64 8
  %572 = getelementptr inbounds i16, i16* %546, i64 8
  %573 = icmp eq i64 %570, 0
  br i1 %573, label %574, label %544, !llvm.loop !31

574:                                              ; preds = %539, %544, %519, %396
  store i8 1, i8* %385, align 8
  br label %575

575:                                              ; preds = %384, %574
  %576 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %577 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %576, i8 0, i64 32, i1 false) #8
  %578 = load i8, i8* %577, align 8, !range !2
  %579 = icmp eq i8 %578, 0
  br i1 %579, label %596, label %580

580:                                              ; preds = %575
  %581 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %582 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %583 = bitcast %"class.std::__1::basic_string.12"* %581 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %584 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %583, i64 0, i32 1, i32 0
  %585 = load i8, i8* %584, align 1
  %586 = icmp slt i8 %585, 0
  br i1 %586, label %590, label %587

587:                                              ; preds = %580
  %588 = bitcast %"class.std::__1::basic_string.12"* %582 to i8*
  %589 = bitcast %"class.std::__1::basic_string.12"* %581 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %588, i8* align 8 %589, i64 24, i1 false) #8
  br label %595

590:                                              ; preds = %580
  %591 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %581, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  %593 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %594 = load i64, i64* %593, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.12"* %582, i8* %592, i64 %594) #8
  br label %595

595:                                              ; preds = %590, %587
  store i8 1, i8* %576, align 8
  br label %596

596:                                              ; preds = %575, %595
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10sharesheet10TargetInfoD2Ev(%"struct.sharesheet::TargetInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string.12"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %25, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 3
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %30 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %29, %35
  %39 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 2
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string"* %39 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %38, %44
  %48 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %52) #8
  store i8 0, i8* %48, align 8
  br label %53

53:                                               ; preds = %47, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10sharesheet10TargetInfoC2EOS0_(%"struct.sharesheet::TargetInfo"*, %"struct.sharesheet::TargetInfo"* dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #8
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %12, %"class.gfx::ImageSkia"* dereferenceable(8) %11) #8
  store i8 1, i8* %6, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #8
  %18 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 3
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8
  %22 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #8
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %22, align 8
  br label %31

31:                                               ; preds = %13, %26
  %32 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #8
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string.12"* %38 to i8*
  %40 = bitcast %"class.std::__1::basic_string.12"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %32, align 8
  br label %41

41:                                               ; preds = %31, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"struct.sharesheet::TargetInfo"* @_ZN10sharesheet10TargetInfoaSEOS0_(%"struct.sharesheet::TargetInfo"* returned, %"struct.sharesheet::TargetInfo"* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %14, label %18, label %16

16:                                               ; preds = %10
  %17 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %15, %"class.gfx::ImageSkia"* dereferenceable(8) %11) #8
  br label %25

18:                                               ; preds = %10
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %15, %"class.gfx::ImageSkia"* dereferenceable(8) %11) #8
  store i8 1, i8* %12, align 8
  br label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %24) #8
  store i8 0, i8* %20, align 8
  br label %25

25:                                               ; preds = %16, %18, %19, %23
  %26 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = bitcast %"class.std::__1::basic_string"* %26 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %25, %32
  %36 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #8
  %38 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string"* %27 to i16*
  store i16 0, i16* %40, align 2
  %41 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 3
  %43 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %35
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %35, %47
  %51 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false) #8
  %53 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 0, i8* %54, align 1
  %55 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  store i16 0, i16* %55, align 2
  %56 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4
  %57 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  %65 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %64, label %80, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = bitcast %"class.std::__1::basic_string"* %65 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %71, %66
  %75 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %76 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #8
  %77 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %77, i64 0, i32 1, i32 1
  store i8 0, i8* %78, align 1
  %79 = bitcast %"class.std::__1::basic_string"* %61 to i16*
  store i16 0, i16* %79, align 2
  br label %97

80:                                               ; preds = %60
  %81 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %62, align 8
  br label %97

83:                                               ; preds = %50
  %84 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %87
  %94 = bitcast %"class.std::__1::basic_string"* %88 to i8**
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #10
  br label %96

96:                                               ; preds = %93, %87
  store i8 0, i8* %84, align 8
  br label %97

97:                                               ; preds = %74, %80, %83, %96
  %98 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5
  %99 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %124, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  %107 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %106, label %121, label %108

108:                                              ; preds = %102
  %109 = bitcast %"class.std::__1::basic_string.12"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  tail call void @_ZdlPv(i8* %115) #10
  br label %116

116:                                              ; preds = %113, %108
  %117 = bitcast %"class.std::__1::basic_string.12"* %107 to i8*
  %118 = bitcast %"class.std::__1::basic_string.12"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 24, i1 false) #8
  %119 = bitcast %"class.std::__1::basic_string.12"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  store i8 0, i8* %120, align 1
  store i8 0, i8* %118, align 1
  br label %138

121:                                              ; preds = %102
  %122 = bitcast %"class.std::__1::basic_string.12"* %107 to i8*
  %123 = bitcast %"class.std::__1::basic_string.12"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %104, align 8
  br label %138

124:                                              ; preds = %97
  %125 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8, i8* %125, align 8, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %138, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"struct.sharesheet::TargetInfo", %"struct.sharesheet::TargetInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %130 = bitcast %"class.std::__1::basic_string.12"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.std::__1::basic_string.12", %"class.std::__1::basic_string.12"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  tail call void @_ZdlPv(i8* %136) #10
  br label %137

137:                                              ; preds = %134, %128
  store i8 0, i8* %125, align 8
  br label %138

138:                                              ; preds = %116, %121, %124, %137
  ret %"struct.sharesheet::TargetInfo"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.12"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #4

declare dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
