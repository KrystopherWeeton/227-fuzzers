; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkPipelineStateDataManager.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkPipelineStateDataManager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkPipelineStateDataManager = type <{ %class.GrUniformDataManager.base, [7 x i8], %class.sk_sp, i8, [7 x i8] }>
%class.GrUniformDataManager.base = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray, %class.SkAutoMalloc, i8 }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray = type { %"struct.GrUniformDataManager::Uniform"*, i64 }
%"struct.GrUniformDataManager::Uniform" = type { i32 }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.sk_sp = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.2, i8* }
%class.sk_sp.2 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.3, %"class.std::__1::unique_ptr.5", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.3 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.4, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.4 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.48", %"class.std::__1::shared_ptr.48", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.50", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.56" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.20", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.22" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.47"* }
%"class.std::__1::vector.47" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.48" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.48", %"class.std::__1::vector.199", i8, %"class.std::__1::vector.207", %"class.std::__1::forward_list", %class.SkTHashMap.220, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"class.std::__1::unique_ptr.201"*, %"class.std::__1::unique_ptr.201"*, %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.std::__1::unique_ptr.201"* }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"*, %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.std::__1::unique_ptr.209"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.220 = type { %class.SkTHashTable.221 }
%class.SkTHashTable.221 = type { i32, i32, %class.SkAutoTArray.222 }
%class.SkAutoTArray.222 = type { %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.522" }
%"struct.std::__1::pair.522" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.48", %"class.std::__1::shared_ptr.49" }
%"class.std::__1::shared_ptr.49" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.28", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.44", [4 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i64 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { i64*, i64*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %class.sk_sp.131, %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.171", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.190" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.67", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.66 }
%class.sk_sp.66 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.70, %class.SkTHashMap, %class.SkTHashMap.78, %class.SkTArray.87, %class.SkTArray.89, i32, i8, [3 x i8] }>
%class.SkTArray.70 = type { %"class.std::__1::unique_ptr.71"*, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.89, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.90 }
%class.sk_sp.90 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.504" }
%"struct.std::__1::pair.504" = type { i32, i32 }
%class.SkTHashMap.78 = type { %class.SkTHashTable.79 }
%class.SkTHashTable.79 = type { i32, i32, %class.SkAutoTArray.80 }
%class.SkAutoTArray.80 = type { %"class.std::__1::unique_ptr.81" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.505" }
%"struct.std::__1::pair.505" = type { i32, %class.SkTArray.506* }
%class.SkTArray.506 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.87 = type { %"class.std::__1::unique_ptr.88"*, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.506, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.89 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.103 }
%class.SkFibBlockSizes.103 = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.131 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.143, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.159, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.135 }
%class.SkTHashTable.135 = type { i32, i32, %class.SkAutoTArray.136 }
%class.SkAutoTArray.136 = type { %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.143 = type { %class.SkTHashTable.144 }
%class.SkTHashTable.144 = type { i32, i32, %class.SkAutoTArray.145 }
%class.SkAutoTArray.145 = type { %"class.std::__1::unique_ptr.146" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.152, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.152 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.153" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.158, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.158 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.197 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.197 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.198, void (i8*)*, i8* }
%class.SkNVRefCnt.198 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.159 = type { %class.SkTHashTable.160 }
%class.SkTHashTable.160 = type { i32, i32, %class.SkAutoTArray.161 }
%class.SkAutoTArray.161 = type { %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.3, %class.sk_sp.174, %class.sk_sp.174 }
%class.sk_sp.174 = type { %class.GrGpuBuffer* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.196 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.196 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [128 x i8] }
%class.GrUniformDataManager = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray, %class.SkAutoMalloc, i8, [7 x i8] }>
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.GrVkUniformHandler::VkUniformInfo" = type { %"struct.GrGLSLUniformHandler::UniformInfo", [2 x i32], %class.GrVkSampler* }
%"struct.GrGLSLUniformHandler::UniformInfo" = type { %class.GrShaderVar, i32, %class.GrFragmentProcessor*, %class.SkString }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.229, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.229 = type { %class.SkAlignedSTStorage.230, %class.SkTArray.231 }
%class.SkAlignedSTStorage.230 = type { [8 x i8] }
%class.SkTArray.231 = type { %"class.std::__1::unique_ptr.232"*, i64 }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.238, %class.sk_sp.382, %class.sk_sp.383, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.480, %class.SkSTArray.480, %class.SkTArray.483, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.490" }
%class.sk_sp.238 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337", %"class.GrVkInterface::VkPtr.338", %"class.GrVkInterface::VkPtr.339", %"class.GrVkInterface::VkPtr.339", %"class.GrVkInterface::VkPtr.340", %"class.GrVkInterface::VkPtr.341", %"class.GrVkInterface::VkPtr.342", %"class.GrVkInterface::VkPtr.343", %"class.GrVkInterface::VkPtr.344", %"class.GrVkInterface::VkPtr.345", %"class.GrVkInterface::VkPtr.346", %"class.GrVkInterface::VkPtr.347", %"class.GrVkInterface::VkPtr.348", %"class.GrVkInterface::VkPtr.349", %"class.GrVkInterface::VkPtr.350", %"class.GrVkInterface::VkPtr.351", %"class.GrVkInterface::VkPtr.352", %"class.GrVkInterface::VkPtr.353", %"class.GrVkInterface::VkPtr.353", %"class.GrVkInterface::VkPtr.354", %"class.GrVkInterface::VkPtr.355", %"class.GrVkInterface::VkPtr.356", %"class.GrVkInterface::VkPtr.357", %"class.GrVkInterface::VkPtr.356", %"class.GrVkInterface::VkPtr.358", %"class.GrVkInterface::VkPtr.359", %"class.GrVkInterface::VkPtr.360", %"class.GrVkInterface::VkPtr.361", %"class.GrVkInterface::VkPtr.362", %"class.GrVkInterface::VkPtr.363", %"class.GrVkInterface::VkPtr.364", %"class.GrVkInterface::VkPtr.365", %"class.GrVkInterface::VkPtr.366", %"class.GrVkInterface::VkPtr.367", %"class.GrVkInterface::VkPtr.368", %"class.GrVkInterface::VkPtr.369", %"class.GrVkInterface::VkPtr.370", %"class.GrVkInterface::VkPtr.371", %"class.GrVkInterface::VkPtr.372", %"class.GrVkInterface::VkPtr.373", %"class.GrVkInterface::VkPtr.374", %"class.GrVkInterface::VkPtr.375", %"class.GrVkInterface::VkPtr.376", %"class.GrVkInterface::VkPtr.377", %"class.GrVkInterface::VkPtr.378", %"class.GrVkInterface::VkPtr.379", %"class.GrVkInterface::VkPtr.380", %"class.GrVkInterface::VkPtr.381" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.239" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.240" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.241" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.242" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.243" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.245" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.246" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.247" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.248" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.249" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.250" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.251" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.252" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.253" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.254" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.255" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.256" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.257" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.258" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.259" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.260" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.261" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.262" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.263" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.264" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.265" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.266" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.267" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.268" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.269" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.270" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.271" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.272" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.273" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.274" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.275" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.276" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.277" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.278" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.280" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.281" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.282" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.283" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.285" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.286" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.287" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.289" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.290" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.291" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.292" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.294" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.296" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.297" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.298" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.299" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.301" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.303" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.305" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.307" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.309" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.310" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.311" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.313" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.315" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.318" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.320" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.321" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.323" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.324" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.325" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.331" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.335" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.336" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.338" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.339" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.340" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.341" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.342" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.343" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.344" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.345" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.346" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.347" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.348" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.349" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.350" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.351" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.352" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.353" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.354" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.355" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.357" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.356" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.358" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.359" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.360" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.361" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.362" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.363" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.364" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.365" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.366" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.367" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.368" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.369" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.370" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.371" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.372" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.373" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.374" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.375" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.376" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.377" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.378" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.379" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.380" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"class.GrVkInterface::VkPtr.381" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.382 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.383 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.391, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.4, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.384, %"class.std::__1::unique_ptr.385", i32, [4 x i8] }>
%class.SkTDArray.384 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.391 = type { %class.SkAlignedSTStorage.392, %class.SkTArray.393 }
%class.SkAlignedSTStorage.392 = type { [48 x i8] }
%class.SkTArray.393 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.394, %class.SkSTArray.396, %class.SkTArray.402, %class.SkSTArray.403, %class.SkMutex, %class.SkSTArray.403, %class.SkTDynamicHash.406, %class.SkTDynamicHash.415, %class.sk_sp.424, %class.SkSTArray.433, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.394 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.395, %class.GrVkRenderPass* }
%class.sk_sp.395 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type opaque
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.396 = type { %class.SkAlignedSTStorage.397, %class.SkTArray.398 }
%class.SkAlignedSTStorage.397 = type { [224 x i8] }
%class.SkTArray.398 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.399, i32, [4 x i8] }>
%class.SkSTArray.399 = type { %class.SkAlignedSTStorage.400, %class.SkTArray.401 }
%class.SkAlignedSTStorage.400 = type { [32 x i8] }
%class.SkTArray.401 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.402 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.403 = type { %class.SkAlignedSTStorage.404, %class.SkTArray.405 }
%class.SkAlignedSTStorage.404 = type { [32 x i8] }
%class.SkTArray.405 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.406 = type { %class.SkTHashTable.407 }
%class.SkTHashTable.407 = type { i32, i32, %class.SkAutoTArray.408 }
%class.SkAutoTArray.408 = type { %"class.std::__1::unique_ptr.409" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.415 = type { %class.SkTHashTable.416 }
%class.SkTHashTable.416 = type { i32, i32, %class.SkAutoTArray.417 }
%class.SkAutoTArray.417 = type { %"class.std::__1::unique_ptr.418" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.424 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.425, %class.SkTInternalLList }
%class.SkTHashTable.425 = type { i32, i32, %class.SkAutoTArray.426 }
%class.SkAutoTArray.426 = type { %"class.std::__1::unique_ptr.427" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.433 = type { %class.SkAlignedSTStorage.434, %class.SkTArray.435 }
%class.SkAlignedSTStorage.434 = type { [32 x i8] }
%class.SkTArray.435 = type { %"class.std::__1::unique_ptr.436"*, i64 }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.439, %class.SkSTArray.440, %class.SkSTArray.443 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.439 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.SkSTArray.440 = type { %class.SkAlignedSTStorage.441, %class.SkTArray.442 }
%class.SkAlignedSTStorage.441 = type { [16 x i8] }
%class.SkTArray.442 = type { i32*, i64 }
%class.SkSTArray.443 = type { %class.SkAlignedSTStorage.444, %class.SkTArray.445 }
%class.SkAlignedSTStorage.444 = type { [32 x i8] }
%class.SkTArray.445 = type { %class.GrVkSampler**, i64 }
%class.GrResourceHandle = type { i32 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.449", %class.GrGpu* }
%"class.std::__1::vector.449" = type { %"class.std::__1::__vector_base.450" }
%"class.std::__1::__vector_base.450" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.451" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp, i8*, i64 }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.477, %struct.VkFence_T*, %class.SkTArray.479 }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.456, %class.SkSTArray.460, %class.SkSTArray.463, %class.SkSTArray.467, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.471, %class.SkSTArray.474, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.456 = type { %class.SkAlignedSTStorage.457, %class.SkTArray.458 }
%class.SkAlignedSTStorage.457 = type { [256 x i8] }
%class.SkTArray.458 = type { %class.sk_sp.459*, i64 }
%class.sk_sp.459 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.460 = type { %class.SkAlignedSTStorage.461, %class.SkTArray.462 }
%class.SkAlignedSTStorage.461 = type { [256 x i8] }
%class.SkTArray.462 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.463 = type { %class.SkAlignedSTStorage.464, %class.SkTArray.465 }
%class.SkAlignedSTStorage.464 = type { [128 x i8] }
%class.SkTArray.465 = type { %class.sk_sp.466*, i64 }
%class.sk_sp.466 = type { %class.GrBuffer* }
%class.SkSTArray.467 = type { %class.SkAlignedSTStorage.468, %class.SkTArray.469 }
%class.SkAlignedSTStorage.468 = type { [128 x i8] }
%class.SkTArray.469 = type { %class.gr_sp.470*, i64 }
%class.gr_sp.470 = type { %class.GrSurface* }
%class.SkSTArray.471 = type { %class.SkAlignedSTStorage.472, %class.SkTArray.473 }
%class.SkAlignedSTStorage.472 = type { [56 x i8] }
%class.SkTArray.473 = type { %struct.VkBufferMemoryBarrier*, i64 }
%class.SkSTArray.474 = type { %class.SkAlignedSTStorage.475, %class.SkTArray.476 }
%class.SkAlignedSTStorage.475 = type { [144 x i8] }
%class.SkTArray.476 = type { %struct.VkImageMemoryBarrier*, i64 }
%class.SkTArray.477 = type { %"class.std::__1::unique_ptr.478"*, i64 }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%class.SkTArray.479 = type { %class.sk_sp.197*, i64 }
%class.SkSTArray.480 = type { %class.SkAlignedSTStorage.481, %class.SkTArray.482 }
%class.SkAlignedSTStorage.481 = type { [8 x i8] }
%class.SkTArray.482 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.483 = type { %"class.std::__1::unique_ptr.484"*, i64 }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%struct.VkSampler_T = type opaque
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.std::__1::pair" = type <{ %class.sk_sp, i8, [7 x i8] }>
%class.GrVkCommandBuffer = type <{ i32 (...)**, %class.SkSTArray.456, %class.SkSTArray.460, %class.SkSTArray.463, %class.SkSTArray.467, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.471, %class.SkSTArray.474, i8, [3 x i8], i32, i32, i8, [3 x i8] }>

$_ZN28GrVkPipelineStateDataManagerD2Ev = comdat any

$_ZN28GrVkPipelineStateDataManagerD0Ev = comdat any

@_ZTV28GrVkPipelineStateDataManager = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrVkPipelineStateDataManager*)* @_ZN28GrVkPipelineStateDataManagerD2Ev to i8*), i8* bitcast (void (%class.GrVkPipelineStateDataManager*)* @_ZN28GrVkPipelineStateDataManagerD0Ev to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32)* @_ZNK20GrUniformDataManager5set1iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEi to i8*), i8* bitcast (void (%class.GrVkPipelineStateDataManager*, i32, i32, i32*)* @_ZNK28GrVkPipelineStateDataManager6set1ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, float)* @_ZNK20GrUniformDataManager5set1fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEf to i8*), i8* bitcast (void (%class.GrVkPipelineStateDataManager*, i32, i32, float*)* @_ZNK28GrVkPipelineStateDataManager6set1fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, i32)* @_ZNK20GrUniformDataManager5set2iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEii to i8*), i8* bitcast (void (%class.GrVkPipelineStateDataManager*, i32, i32, i32*)* @_ZNK28GrVkPipelineStateDataManager6set2ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, float, float)* @_ZNK20GrUniformDataManager5set2fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEff to i8*), i8* bitcast (void (%class.GrVkPipelineStateDataManager*, i32, i32, float*)* @_ZNK28GrVkPipelineStateDataManager6set2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, i32, i32)* @_ZNK20GrUniformDataManager5set3iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiii to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, i32*)* @_ZNK20GrUniformDataManager6set3ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, float, float, float)* @_ZNK20GrUniformDataManager5set3fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEfff to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, float*)* @_ZNK20GrUniformDataManager6set3fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, i32, i32, i32)* @_ZNK20GrUniformDataManager5set4iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiiii to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, i32*)* @_ZNK20GrUniformDataManager6set4ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, float, float, float, float)* @_ZNK20GrUniformDataManager5set4fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEffff to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, float*)* @_ZNK20GrUniformDataManager6set4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, float*)* @_ZNK20GrUniformDataManager11setMatrix2fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, float*)* @_ZNK20GrUniformDataManager11setMatrix3fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, float*)* @_ZNK20GrUniformDataManager11setMatrix4fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEPKf to i8*), i8* bitcast (void (%class.GrVkPipelineStateDataManager*, i32, i32, float*)* @_ZNK28GrVkPipelineStateDataManager12setMatrix2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, float*)* @_ZNK20GrUniformDataManager12setMatrix3fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf to i8*), i8* bitcast (void (%class.GrUniformDataManager*, i32, i32, float*)* @_ZNK20GrUniformDataManager12setMatrix4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf to i8*)] }, align 8
@_ZTV20GrUniformDataManager = external unnamed_addr constant { [26 x i8*] }, align 8

@_ZN28GrVkPipelineStateDataManagerC1ERK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjb = hidden unnamed_addr alias void (%class.GrVkPipelineStateDataManager*, %class.GrTBlockList*, i32, i1), void (%class.GrVkPipelineStateDataManager*, %class.GrTBlockList*, i32, i1)* @_ZN28GrVkPipelineStateDataManagerC2ERK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28GrVkPipelineStateDataManagerC2ERK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjb(%class.GrVkPipelineStateDataManager*, %class.GrTBlockList* dereferenceable(128), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = bitcast %class.GrVkPipelineStateDataManager* %0 to %class.GrUniformDataManager*
  %7 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %1, i64 0, i32 0, i32 0, i64 44
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  tail call void @_ZN20GrUniformDataManagerC2Ejj(%class.GrUniformDataManager* %6, i32 %9, i32 %2) #5
  %10 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV28GrVkPipelineStateDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 2, i32 0
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %11, align 8
  %12 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 3
  store i8 %5, i8* %12, align 8
  %13 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %1, i64 0, i32 0, i32 0, i64 16
  %14 = bitcast i8* %13 to %"class.GrBlockAllocator::Block"**
  %15 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %14, align 8, !noalias !2
  %16 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %1, i64 0, i32 0, i32 0, i64 40
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8, !noalias !2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %4, %23
  %21 = phi %"class.GrBlockAllocator::Block"* [ %29, %23 ], [ %15, %4 ]
  %22 = icmp eq %"class.GrBlockAllocator::Block"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.GrBlockAllocator::Block"* %21 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !2
  %26 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %21, i64 0, i32 4
  %27 = load i32, i32* %26, align 8, !noalias !2
  %28 = icmp eq i32 %27, 0
  %29 = inttoptr i64 %25 to %"class.GrBlockAllocator::Block"*
  br i1 %28, label %20, label %34

30:                                               ; preds = %4
  %31 = bitcast i8* %13 to %"class.GrBlockAllocator::Block"*
  %32 = ptrtoint %"class.GrBlockAllocator::Block"* %15 to i64
  %33 = icmp eq i8* %13, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %23, %30
  %35 = phi i32 [ %18, %30 ], [ %27, %23 ]
  %36 = phi %"class.GrBlockAllocator::Block"* [ %31, %30 ], [ %21, %23 ]
  %37 = phi i64 [ %32, %30 ], [ %25, %23 ]
  %38 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 0
  %39 = zext i1 %3 to i64
  br label %41

40:                                               ; preds = %20, %58, %78, %68, %30
  ret void

41:                                               ; preds = %34, %78
  %42 = phi i64 [ 0, %34 ], [ %55, %78 ]
  %43 = phi i32 [ %35, %34 ], [ %82, %78 ]
  %44 = phi i32 [ 32, %34 ], [ %81, %78 ]
  %45 = phi %"class.GrBlockAllocator::Block"* [ %36, %34 ], [ %80, %78 ]
  %46 = phi i64 [ %37, %34 ], [ %79, %78 ]
  %47 = bitcast %"class.GrBlockAllocator::Block"* %45 to i8*
  %48 = sext i32 %44 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = bitcast i8* %49 to %"struct.GrVkUniformHandler::VkUniformInfo"*
  %51 = load %"struct.GrUniformDataManager::Uniform"*, %"struct.GrUniformDataManager::Uniform"** %38, align 8
  %52 = getelementptr inbounds %"struct.GrVkUniformHandler::VkUniformInfo", %"struct.GrVkUniformHandler::VkUniformInfo"* %50, i64 0, i32 1, i64 %39
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.GrUniformDataManager::Uniform", %"struct.GrUniformDataManager::Uniform"* %51, i64 %42, i32 0
  store i32 %53, i32* %54, align 4
  %55 = add nuw i64 %42, 1
  %56 = add i32 %44, 80
  %57 = icmp sgt i32 %56, %43
  br i1 %57, label %58, label %78

58:                                               ; preds = %41
  %59 = inttoptr i64 %46 to %"class.GrBlockAllocator::Block"*
  %60 = icmp eq i64 %46, 0
  br i1 %60, label %40, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %59, i64 0, i32 0
  %63 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %62, align 8
  %64 = ptrtoint %"class.GrBlockAllocator::Block"* %63 to i64
  %65 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %59, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %78

68:                                               ; preds = %61, %71
  %69 = phi %"class.GrBlockAllocator::Block"* [ %77, %71 ], [ %63, %61 ]
  %70 = icmp eq %"class.GrBlockAllocator::Block"* %69, null
  br i1 %70, label %40, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.GrBlockAllocator::Block"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %69, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  %77 = inttoptr i64 %73 to %"class.GrBlockAllocator::Block"*
  br i1 %76, label %68, label %78

78:                                               ; preds = %71, %61, %41
  %79 = phi i64 [ %46, %41 ], [ %64, %61 ], [ %73, %71 ]
  %80 = phi %"class.GrBlockAllocator::Block"* [ %45, %41 ], [ %59, %61 ], [ %69, %71 ]
  %81 = phi i32 [ %56, %41 ], [ 32, %61 ], [ 32, %71 ]
  %82 = phi i32 [ %43, %41 ], [ %66, %61 ], [ %75, %71 ]
  %83 = icmp eq %"class.GrBlockAllocator::Block"* %80, null
  br i1 %83, label %40, label %41
}

declare void @_ZN20GrUniformDataManagerC2Ejj(%class.GrUniformDataManager*, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28GrVkPipelineStateDataManager14uploadUniformsEP7GrVkGpuP18VkPipelineLayout_TP17GrVkCommandBuffer(%"struct.std::__1::pair"* noalias nocapture sret, %class.GrVkPipelineStateDataManager* nocapture, %class.GrVkGpu*, %struct.VkPipelineLayout_T*, %class.GrVkCommandBuffer*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %11, align 8
  br label %89

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !5
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 3, i32 0
  %18 = load %class.GrVkCaps*, %class.GrVkCaps** %17, align 8
  %19 = tail call i32 @_ZNK8GrVkCaps25getPushConstantStageFlagsEv(%class.GrVkCaps* %18) #5
  %20 = load i32, i32* %7, align 8
  %21 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZN17GrVkCommandBuffer13pushConstantsEPK7GrVkGpuP18VkPipelineLayout_TjjjPKv(%class.GrVkCommandBuffer* %4, %class.GrVkGpu* %2, %struct.VkPipelineLayout_T* %3, i32 %19, i32 0, i32 %20, i8* %22) #5
  %23 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 2, i32 0
  %24 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %23, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %23, align 8
  %25 = icmp eq %class.GrGpuBuffer* %24, null
  br i1 %25, label %80, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %24, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %80

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %27, i64 -1
  %33 = bitcast %class.GrIORef* %32 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %33, i32 0) #5
  br label %80

34:                                               ; preds = %12
  %35 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 0, i32 5
  %36 = load i8, i8* %35, align 8, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %80, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 0, i32 5
  %40 = load %class.GrDirectContext*, %class.GrDirectContext** %39, align 8
  %41 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %40, i64 0, i32 6, i32 0, i32 0, i32 0
  %42 = load %class.GrResourceProvider*, %class.GrResourceProvider** %41, align 8
  %43 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #5
  %44 = zext i32 %8 to i64
  %45 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp* nonnull sret %6, %class.GrResourceProvider* %42, i64 %44, i32 5, i32 0, i8* %46) #5
  %47 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 2
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %49 = bitcast %class.sk_sp* %6 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %48, align 8
  %51 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %47, i64 0, i32 0
  %52 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %51, align 8
  %53 = bitcast %class.sk_sp* %47 to i64*
  store i64 %50, i64* %53, align 8
  %54 = icmp eq %class.GrGpuBuffer* %52, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %38
  %56 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %52, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %56, i64 -1
  %62 = bitcast %class.GrIORef* %61 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %62, i32 0) #5
  br label %63

63:                                               ; preds = %38, %55, %60
  %64 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %48, align 8
  %65 = icmp eq %class.GrGpuBuffer* %64, null
  br i1 %65, label %74, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %64, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %67, i64 -1
  %73 = bitcast %class.GrIORef* %72 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %73, i32 0) #5
  br label %74

74:                                               ; preds = %63, %66, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #5
  %75 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %51, align 8
  %76 = icmp eq %class.GrGpuBuffer* %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %78, align 8
  br label %89

79:                                               ; preds = %74
  store i8 0, i8* %35, align 8
  br label %80

80:                                               ; preds = %31, %26, %16, %79, %34
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %1, i64 0, i32 2, i32 0
  %83 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %82, align 8, !noalias !6
  %84 = icmp eq %class.GrGpuBuffer* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %83, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 1 monotonic, !noalias !6
  br label %88

88:                                               ; preds = %80, %85
  store %class.GrGpuBuffer* %83, %class.GrGpuBuffer** %81, align 8, !alias.scope !6
  br label %89

89:                                               ; preds = %77, %88, %10
  %90 = phi i8 [ 0, %77 ], [ 1, %88 ], [ 1, %10 ]
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  store i8 %90, i8* %91, align 8
  ret void
}

declare void @_ZN17GrVkCommandBuffer13pushConstantsEPK7GrVkGpuP18VkPipelineLayout_TjjjPKv(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*) local_unnamed_addr #1

declare i32 @_ZNK8GrVkCaps25getPushConstantStageFlagsEv(%class.GrVkCaps*) local_unnamed_addr #1

declare void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp* sret, %class.GrResourceProvider*, i64, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28GrVkPipelineStateDataManager6set1ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrVkPipelineStateDataManager*, i32, i32, i32*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  %8 = bitcast %class.GrVkPipelineStateDataManager* %0 to %class.GrUniformDataManager*
  br i1 %7, label %18, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 0
  %11 = load %"struct.GrUniformDataManager::Uniform"*, %"struct.GrUniformDataManager::Uniform"** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"struct.GrUniformDataManager::Uniform", %"struct.GrUniformDataManager::Uniform"* %11, i64 %12
  %14 = tail call i8* @_ZNK20GrUniformDataManager24getBufferPtrAndMarkDirtyERKNS_7UniformE(%class.GrUniformDataManager* %8, %"struct.GrUniformDataManager::Uniform"* dereferenceable(4) %13) #5
  %15 = bitcast i32* %3 to i8*
  %16 = sext i32 %2 to i64
  %17 = shl nsw i64 %16, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 4 %15, i64 %17, i1 false)
  br label %19

18:                                               ; preds = %4
  tail call void @_ZNK20GrUniformDataManager6set1ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrUniformDataManager* %8, i32 %1, i32 %2, i32* %3) #5
  br label %19

19:                                               ; preds = %18, %9
  ret void
}

declare i8* @_ZNK20GrUniformDataManager24getBufferPtrAndMarkDirtyERKNS_7UniformE(%class.GrUniformDataManager*, %"struct.GrUniformDataManager::Uniform"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK20GrUniformDataManager6set1ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrUniformDataManager*, i32, i32, i32*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28GrVkPipelineStateDataManager6set1fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrVkPipelineStateDataManager*, i32, i32, float*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  %8 = bitcast %class.GrVkPipelineStateDataManager* %0 to %class.GrUniformDataManager*
  br i1 %7, label %18, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 0
  %11 = load %"struct.GrUniformDataManager::Uniform"*, %"struct.GrUniformDataManager::Uniform"** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"struct.GrUniformDataManager::Uniform", %"struct.GrUniformDataManager::Uniform"* %11, i64 %12
  %14 = tail call i8* @_ZNK20GrUniformDataManager24getBufferPtrAndMarkDirtyERKNS_7UniformE(%class.GrUniformDataManager* %8, %"struct.GrUniformDataManager::Uniform"* dereferenceable(4) %13) #5
  %15 = bitcast float* %3 to i8*
  %16 = sext i32 %2 to i64
  %17 = shl nsw i64 %16, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 4 %15, i64 %17, i1 false)
  br label %19

18:                                               ; preds = %4
  tail call void @_ZNK20GrUniformDataManager6set1fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager* %8, i32 %1, i32 %2, float* %3) #5
  br label %19

19:                                               ; preds = %18, %9
  ret void
}

declare void @_ZNK20GrUniformDataManager6set1fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28GrVkPipelineStateDataManager6set2ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrVkPipelineStateDataManager*, i32, i32, i32*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  %8 = bitcast %class.GrVkPipelineStateDataManager* %0 to %class.GrUniformDataManager*
  br i1 %7, label %19, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 0
  %11 = load %"struct.GrUniformDataManager::Uniform"*, %"struct.GrUniformDataManager::Uniform"** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"struct.GrUniformDataManager::Uniform", %"struct.GrUniformDataManager::Uniform"* %11, i64 %12
  %14 = tail call i8* @_ZNK20GrUniformDataManager24getBufferPtrAndMarkDirtyERKNS_7UniformE(%class.GrUniformDataManager* %8, %"struct.GrUniformDataManager::Uniform"* dereferenceable(4) %13) #5
  %15 = bitcast i32* %3 to i8*
  %16 = shl nsw i32 %2, 1
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 4 %15, i64 %18, i1 false)
  br label %20

19:                                               ; preds = %4
  tail call void @_ZNK20GrUniformDataManager6set2ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrUniformDataManager* %8, i32 %1, i32 %2, i32* %3) #5
  br label %20

20:                                               ; preds = %19, %9
  ret void
}

declare void @_ZNK20GrUniformDataManager6set2ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrUniformDataManager*, i32, i32, i32*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28GrVkPipelineStateDataManager6set2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrVkPipelineStateDataManager*, i32, i32, float*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  %8 = bitcast %class.GrVkPipelineStateDataManager* %0 to %class.GrUniformDataManager*
  br i1 %7, label %19, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 0
  %11 = load %"struct.GrUniformDataManager::Uniform"*, %"struct.GrUniformDataManager::Uniform"** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"struct.GrUniformDataManager::Uniform", %"struct.GrUniformDataManager::Uniform"* %11, i64 %12
  %14 = tail call i8* @_ZNK20GrUniformDataManager24getBufferPtrAndMarkDirtyERKNS_7UniformE(%class.GrUniformDataManager* %8, %"struct.GrUniformDataManager::Uniform"* dereferenceable(4) %13) #5
  %15 = bitcast float* %3 to i8*
  %16 = shl nsw i32 %2, 1
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 4 %15, i64 %18, i1 false)
  br label %20

19:                                               ; preds = %4
  tail call void @_ZNK20GrUniformDataManager6set2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager* %8, i32 %1, i32 %2, float* %3) #5
  br label %20

20:                                               ; preds = %19, %9
  ret void
}

declare void @_ZNK20GrUniformDataManager6set2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK28GrVkPipelineStateDataManager12setMatrix2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrVkPipelineStateDataManager*, i32, i32, float*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 0
  %10 = load %"struct.GrUniformDataManager::Uniform"*, %"struct.GrUniformDataManager::Uniform"** %9, align 8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.GrUniformDataManager::Uniform", %"struct.GrUniformDataManager::Uniform"* %10, i64 %11, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %13, i64 %17
  %19 = bitcast float* %3 to i8*
  %20 = shl nsw i32 %2, 2
  %21 = sext i32 %20 to i64
  %22 = shl nsw i64 %21, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 4 %19, i64 %22, i1 false)
  br label %25

23:                                               ; preds = %4
  %24 = bitcast %class.GrVkPipelineStateDataManager* %0 to %class.GrUniformDataManager*
  tail call void @_ZNK20GrUniformDataManager12setMatrix2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager* %24, i32 %1, i32 %2, float* %3) #5
  br label %25

25:                                               ; preds = %23, %8
  ret void
}

declare void @_ZNK20GrUniformDataManager12setMatrix2fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28GrVkPipelineStateDataManager11releaseDataEv(%class.GrVkPipelineStateDataManager* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 2, i32 0
  %3 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %2, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %2, align 8
  %4 = icmp eq %class.GrGpuBuffer* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %6, i64 -1
  %12 = bitcast %class.GrIORef* %11 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %12, i32 0) #5
  br label %13

13:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28GrVkPipelineStateDataManagerD2Ev(%class.GrVkPipelineStateDataManager*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV28GrVkPipelineStateDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %3, align 8
  %5 = icmp eq %class.GrGpuBuffer* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 -1
  %13 = bitcast %class.GrIORef* %12 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %13, i32 0) #5
  br label %14

14:                                               ; preds = %1, %6, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV20GrUniformDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %15 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8* null, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_Z7sk_freePv(i8* nonnull %16) #5
  br label %19

19:                                               ; preds = %18, %14
  %20 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3
  %26 = bitcast %class.SkTArray* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_Z7sk_freePv(i8* %27) #5
  br label %28

28:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28GrVkPipelineStateDataManagerD0Ev(%class.GrVkPipelineStateDataManager*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV28GrVkPipelineStateDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %3, align 8
  %5 = icmp eq %class.GrGpuBuffer* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 -1
  %13 = bitcast %class.GrIORef* %12 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %13, i32 0) #5
  br label %14

14:                                               ; preds = %11, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV20GrUniformDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %15 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8* null, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_Z7sk_freePv(i8* nonnull %16) #5
  br label %19

19:                                               ; preds = %18, %14
  %20 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %0, i64 0, i32 0, i32 3
  %26 = bitcast %class.SkTArray* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_Z7sk_freePv(i8* %27) #5
  br label %28

28:                                               ; preds = %19, %24
  %29 = bitcast %class.GrVkPipelineStateDataManager* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #6
  ret void
}

declare void @_ZNK20GrUniformDataManager5set1iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEi(%class.GrUniformDataManager*, i32, i32) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager5set1fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEf(%class.GrUniformDataManager*, i32, float) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager5set2iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEii(%class.GrUniformDataManager*, i32, i32, i32) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager5set2fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEff(%class.GrUniformDataManager*, i32, float, float) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager5set3iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiii(%class.GrUniformDataManager*, i32, i32, i32, i32) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager6set3ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrUniformDataManager*, i32, i32, i32*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager5set3fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEfff(%class.GrUniformDataManager*, i32, float, float, float) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager6set3fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager5set4iE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiiii(%class.GrUniformDataManager*, i32, i32, i32, i32, i32) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager6set4ivE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKi(%class.GrUniformDataManager*, i32, i32, i32*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager5set4fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEffff(%class.GrUniformDataManager*, i32, float, float, float, float) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager6set4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager11setMatrix2fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEPKf(%class.GrUniformDataManager*, i32, float*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager11setMatrix3fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEPKf(%class.GrUniformDataManager*, i32, float*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager11setMatrix4fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEPKf(%class.GrUniformDataManager*, i32, float*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager12setMatrix3fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager12setMatrix4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__19make_pairIR5sk_spI11GrGpuBufferEbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__19make_pairIR5sk_spI11GrGpuBufferEbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
