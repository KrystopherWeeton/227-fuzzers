; ModuleID = '../../third_party/pdfium/fxbarcode/datamatrix/BC_EdifactEncoder.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/datamatrix/BC_EdifactEncoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_EdifactEncoder = type { %class.CBC_Encoder }
%class.CBC_Encoder = type { i32 (...)** }
%class.CBC_EncoderContext = type { %"class.fxcrt::WideString", %"class.fxcrt::WideString", i64, i8, %"class.fxcrt::UnownedPtr", i8, i8, i64 }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::UnownedPtr" = type { %class.CBC_SymbolInfo* }
%class.CBC_SymbolInfo = type { i32 (...)**, %"struct.CBC_SymbolInfo::Data"* }
%"struct.CBC_SymbolInfo::Data" = type { i16, i16, i16, i8, i8, i8, i8 }

@_ZTV18CBC_EdifactEncoder = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_EdifactEncoder*)* @_ZN18CBC_EdifactEncoderD2Ev to i8*), i8* bitcast (void (%class.CBC_EdifactEncoder*)* @_ZN18CBC_EdifactEncoderD0Ev to i8*), i8* bitcast (i8 (%class.CBC_EdifactEncoder*)* @_ZN18CBC_EdifactEncoder15GetEncodingModeEv to i8*), i8* bitcast (i1 (%class.CBC_EdifactEncoder*, %class.CBC_EncoderContext*)* @_ZN18CBC_EdifactEncoder6EncodeEP18CBC_EncoderContext to i8*)] }, align 8

@_ZN18CBC_EdifactEncoderC1Ev = hidden unnamed_addr alias void (%class.CBC_EdifactEncoder*), void (%class.CBC_EdifactEncoder*)* @_ZN18CBC_EdifactEncoderC2Ev
@_ZN18CBC_EdifactEncoderD1Ev = hidden unnamed_addr alias void (%class.CBC_EdifactEncoder*), void (%class.CBC_EdifactEncoder*)* @_ZN18CBC_EdifactEncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_EdifactEncoderC2Ev(%class.CBC_EdifactEncoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_EdifactEncoder, %class.CBC_EdifactEncoder* %0, i64 0, i32 0
  tail call void @_ZN11CBC_EncoderC2Ev(%class.CBC_Encoder* %2) #6
  %3 = getelementptr inbounds %class.CBC_EdifactEncoder, %class.CBC_EdifactEncoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV18CBC_EdifactEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN11CBC_EncoderC2Ev(%class.CBC_Encoder*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11CBC_EncoderD2Ev(%class.CBC_Encoder*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_EdifactEncoderD2Ev(%class.CBC_EdifactEncoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_EdifactEncoder, %class.CBC_EdifactEncoder* %0, i64 0, i32 0
  tail call void @_ZN11CBC_EncoderD2Ev(%class.CBC_Encoder* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_EdifactEncoderD0Ev(%class.CBC_EdifactEncoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_EdifactEncoder, %class.CBC_EdifactEncoder* %0, i64 0, i32 0
  tail call void @_ZN11CBC_EncoderD2Ev(%class.CBC_Encoder* %2) #6
  %3 = bitcast %class.CBC_EdifactEncoder* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZN18CBC_EdifactEncoder15GetEncodingModeEv(%class.CBC_EdifactEncoder* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8 4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CBC_EdifactEncoder6EncodeEP18CBC_EncoderContext(%class.CBC_EdifactEncoder* nocapture readnone, %class.CBC_EncoderContext*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %7, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %4) #6
  %8 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 2
  %9 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  %10 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 0
  br label %12

12:                                               ; preds = %49, %2
  %13 = call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  br i1 %13, label %14, label %51

14:                                               ; preds = %12
  %15 = call signext i32 @_ZN18CBC_EncoderContext14getCurrentCharEv(%class.CBC_EncoderContext* %1) #6
  %16 = and i32 %15, -32
  %17 = icmp eq i32 %16, 32
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = add i32 %15, -64
  %20 = icmp ult i32 %19, 31
  br i1 %20, label %21, label %134

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %15, %14 ], [ %19, %18 ]
  %23 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %4, i32 signext %22) #6
  %24 = load i64, i64* %8, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %8, align 8
  %26 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %27 = icmp eq %"class.fxcrt::StringDataTemplate"* %26, null
  br i1 %27, label %48, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %26, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, 3
  br i1 %31, label %32, label %48

32:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %10, align 8
  call fastcc void @_ZN12_GLOBAL__N_124EncodeToEdifactCodewordsERKN5fxcrt10WideStringEi(%"class.fxcrt::WideString"* nonnull sret %5, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4)
  %33 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8
  %34 = icmp eq %"class.fxcrt::StringDataTemplate"* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  call void @_ZN18CBC_EncoderContext14writeCodewordsERKN5fxcrt10WideStringE(%class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #6
  %40 = call i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"* nonnull %4, i64 0, i64 4) #6
  %41 = load i64, i64* %8, align 8
  %42 = call signext i8 @_ZN20CBC_HighLevelEncoder13LookAheadTestERKN5fxcrt10WideStringEmNS_8EncodingE(%"class.fxcrt::WideString"* dereferenceable(8) %11, i64 %41, i8 signext 4) #6
  %43 = icmp eq i8 %42, 4
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @_ZN18CBC_EncoderContext19SignalEncoderChangeEN20CBC_HighLevelEncoder8EncodingE(%class.CBC_EncoderContext* %1, i8 signext 0) #6
  br label %45

45:                                               ; preds = %32, %44, %39, %35
  %46 = phi i32 [ 1, %35 ], [ 3, %44 ], [ 0, %39 ], [ 1, %32 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %21, %45, %28
  br label %49

49:                                               ; preds = %48, %45
  %50 = phi i32 [ 0, %48 ], [ %46, %45 ]
  switch i32 %50, label %134 [
    i32 0, label %12
    i32 3, label %51
  ]

51:                                               ; preds = %49, %12
  %52 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %4, i32 signext 31) #6
  %53 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %54 = icmp eq %"class.fxcrt::StringDataTemplate"* %53, null
  br i1 %54, label %134, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %53, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %134, label %59

59:                                               ; preds = %55
  %60 = icmp ugt i64 %57, 4
  br i1 %60, label %134, label %61

61:                                               ; preds = %59
  %62 = icmp eq i64 %57, 1
  br i1 %62, label %63, label %81

63:                                               ; preds = %61
  %64 = call zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEv(%class.CBC_EncoderContext* %1) #6
  br i1 %64, label %65, label %134

65:                                               ; preds = %63
  %66 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 4, i32 0
  %67 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %66, align 8
  %68 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %67, i64 0, i32 1
  %69 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %68, align 8
  %70 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %69, i64 0, i32 0
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i64
  %73 = call i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext* %1) #6
  %74 = sub i64 %72, %73
  %75 = trunc i64 %74 to i32
  %76 = call i64 @_ZN18CBC_EncoderContext22getRemainingCharactersEv(%class.CBC_EncoderContext* %1) #6
  %77 = trunc i64 %76 to i32
  %78 = icmp ne i32 %77, 0
  %79 = icmp sgt i32 %75, 2
  %80 = or i1 %79, %78
  br i1 %80, label %81, label %134

81:                                               ; preds = %65, %61
  %82 = trunc i64 %57 to i32
  %83 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #6
  %84 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %84, align 8
  call fastcc void @_ZN12_GLOBAL__N_124EncodeToEdifactCodewordsERKN5fxcrt10WideStringEi(%"class.fxcrt::WideString"* nonnull sret %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #6
  %85 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %84, align 8
  %86 = icmp eq %"class.fxcrt::StringDataTemplate"* %85, null
  br i1 %86, label %132, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %85, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %132, label %91

91:                                               ; preds = %87
  %92 = call zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* %1) #6
  %93 = xor i1 %92, true
  %94 = icmp slt i32 %82, 4
  %95 = and i1 %94, %93
  br i1 %94, label %96, label %130

96:                                               ; preds = %91
  %97 = call i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext* %1) #6
  %98 = shl i64 %57, 32
  %99 = add nsw i64 %98, -4294967296
  %100 = ashr exact i64 %99, 32
  %101 = add i64 %97, %100
  %102 = call zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEm(%class.CBC_EncoderContext* %1, i64 %101) #6
  br i1 %102, label %103, label %132

103:                                              ; preds = %96
  %104 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %1, i64 0, i32 4, i32 0
  %105 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %104, align 8
  %106 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %105, i64 0, i32 1
  %107 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %106, align 8
  %108 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %107, i64 0, i32 0
  %109 = load i16, i16* %108, align 2
  %110 = sext i16 %109 to i64
  %111 = call i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext* %1) #6
  %112 = sub i64 %110, %111
  %113 = trunc i64 %112 to i32
  %114 = icmp sgt i32 %113, 2
  br i1 %114, label %115, label %126

115:                                              ; preds = %103
  %116 = call i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext* %1) #6
  %117 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %84, align 8
  %118 = icmp eq %"class.fxcrt::StringDataTemplate"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %117, i64 0, i32 1
  %121 = load i64, i64* %120, align 8
  br label %122

122:                                              ; preds = %119, %115
  %123 = phi i64 [ %121, %119 ], [ 0, %115 ]
  %124 = add i64 %123, %116
  %125 = call zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEm(%class.CBC_EncoderContext* %1, i64 %124) #6
  br i1 %125, label %130, label %132

126:                                              ; preds = %103
  br i1 %95, label %127, label %130

127:                                              ; preds = %126
  call void @_ZN18CBC_EncoderContext15resetSymbolInfoEv(%class.CBC_EncoderContext* %1) #6
  %128 = load i64, i64* %8, align 8
  %129 = sub i64 %128, %100
  store i64 %129, i64* %8, align 8
  br label %131

130:                                              ; preds = %126, %122, %91
  call void @_ZN18CBC_EncoderContext14writeCodewordsERKN5fxcrt10WideStringE(%class.CBC_EncoderContext* %1, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %3) #6
  br label %131

131:                                              ; preds = %130, %127
  call void @_ZN18CBC_EncoderContext19SignalEncoderChangeEN20CBC_HighLevelEncoder8EncodingE(%class.CBC_EncoderContext* %1, i8 signext 0) #6
  br label %132

132:                                              ; preds = %131, %122, %96, %87, %81
  %133 = phi i1 [ false, %87 ], [ true, %131 ], [ false, %96 ], [ false, %122 ], [ false, %81 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #6
  br label %134

134:                                              ; preds = %18, %49, %132, %65, %63, %59, %55, %51
  %135 = phi i1 [ %133, %132 ], [ true, %65 ], [ true, %55 ], [ false, %59 ], [ false, %63 ], [ true, %51 ], [ false, %49 ], [ false, %18 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret i1 %135
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

declare zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare signext i32 @_ZN18CBC_EncoderContext14getCurrentCharEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_124EncodeToEdifactCodewordsERKN5fxcrt10WideStringEi(%"class.fxcrt::WideString"* noalias sret, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca [3 x i32], align 4
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %2, %7
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #6
  br label %62

13:                                               ; preds = %7
  %14 = icmp eq i64 %9, 0
  br i1 %14, label %15, label %16, !prof !2

15:                                               ; preds = %13
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !4
  unreachable

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 3, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %10, 1
  br i1 %19, label %20, label %42

20:                                               ; preds = %16
  %21 = icmp ugt i64 %9, 1
  br i1 %21, label %23, label %22, !prof !5

22:                                               ; preds = %20
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !4
  unreachable

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 3, i64 1
  %25 = load i32, i32* %24, align 4
  %26 = shl i32 %25, 12
  %27 = icmp sgt i32 %10, 2
  br i1 %27, label %28, label %42

28:                                               ; preds = %23
  %29 = icmp ugt i64 %9, 2
  br i1 %29, label %31, label %30, !prof !5

30:                                               ; preds = %28
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !4
  unreachable

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 3, i64 2
  %33 = load i32, i32* %32, align 4
  %34 = shl i32 %33, 6
  %35 = icmp sgt i32 %10, 3
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = icmp ugt i64 %9, 3
  br i1 %37, label %39, label %38, !prof !5

38:                                               ; preds = %36
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !4
  unreachable

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 3, i64 3
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %16, %23, %31, %39
  %43 = phi i64 [ 3, %39 ], [ %9, %31 ], [ %9, %23 ], [ %9, %16 ]
  %44 = phi i32 [ %34, %39 ], [ %34, %31 ], [ 0, %23 ], [ 0, %16 ]
  %45 = phi i32 [ %26, %39 ], [ %26, %31 ], [ %26, %23 ], [ 0, %16 ]
  %46 = phi i32 [ %41, %39 ], [ 0, %31 ], [ 0, %23 ], [ 0, %16 ]
  %47 = shl i32 %18, 18
  %48 = add i32 %44, %47
  %49 = add i32 %48, %45
  %50 = add i32 %49, %46
  %51 = bitcast [3 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %51) #6
  %52 = getelementptr inbounds [3 x i32], [3 x i32]* %3, i64 0, i64 0
  %53 = getelementptr inbounds [3 x i32], [3 x i32]* %3, i64 0, i64 1
  %54 = getelementptr inbounds [3 x i32], [3 x i32]* %3, i64 0, i64 2
  %55 = lshr i32 %50, 16
  %56 = and i32 %55, 255
  store i32 %56, i32* %52, align 4
  %57 = lshr i32 %50, 8
  %58 = and i32 %57, 255
  store i32 %58, i32* %53, align 4
  %59 = and i32 %50, 255
  store i32 %59, i32* %54, align 4
  %60 = shl i64 %43, 32
  %61 = ashr exact i64 %60, 32
  call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* %0, i32* nonnull %52, i64 %61) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %51) #6
  br label %62

62:                                               ; preds = %42, %12
  ret void
}

declare void @_ZN18CBC_EncoderContext14writeCodewordsERKN5fxcrt10WideStringE(%class.CBC_EncoderContext*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

declare i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"*, i64, i64) local_unnamed_addr #1

declare signext i8 @_ZN20CBC_HighLevelEncoder13LookAheadTestERKN5fxcrt10WideStringEmNS_8EncodingE(%"class.fxcrt::WideString"* dereferenceable(8), i64, i8 signext) local_unnamed_addr #1

declare void @_ZN18CBC_EncoderContext19SignalEncoderChangeEN20CBC_HighLevelEncoder8EncodingE(%class.CBC_EncoderContext*, i8 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"*, i32*, i64) unnamed_addr #1

declare zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare i64 @_ZN18CBC_EncoderContext22getRemainingCharactersEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

declare zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEm(%class.CBC_EncoderContext*, i64) local_unnamed_addr #1

declare void @_ZN18CBC_EncoderContext15resetSymbolInfoEv(%class.CBC_EncoderContext*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 -2143843179}
!4 = !{i32 -2143843158}
!5 = !{!"branch_weights", i32 2000, i32 1}
