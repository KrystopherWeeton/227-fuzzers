; ModuleID = '../../sandbox/policy/linux/bpf_cros_amd_gpu_policy_linux.cc'
source_filename = "../../sandbox/policy/linux/bpf_cros_amd_gpu_policy_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.sandbox::policy::CrosAmdGpuProcessPolicy" = type { %"class.sandbox::policy::GpuProcessPolicy" }
%"class.sandbox::policy::GpuProcessPolicy" = type { %"class.sandbox::policy::BPFBasePolicy" }
%"class.sandbox::policy::BPFBasePolicy" = type { %"class.sandbox::bpf_dsl::Policy", %"class.std::__1::unique_ptr" }
%"class.sandbox::bpf_dsl::Policy" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sandbox::BaselinePolicy"* }
%"class.sandbox::BaselinePolicy" = type { %"class.sandbox::bpf_dsl::Policy", i32, i32 }
%"class.sandbox::bpf_dsl::internal::ResultExprImpl" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.2" = type { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* }
%"class.sandbox::bpf_dsl::internal::BoolExprImpl" = type opaque
%"class.sandbox::bpf_dsl::Elser" = type { %"class.std::__1::shared_ptr.1" }
%"class.std::__1::shared_ptr.1" = type { %"class.sandbox::cons::Cell"*, %"class.std::__1::__shared_weak_count"* }
%"class.sandbox::cons::Cell" = type opaque

@_ZTVN7sandbox6policy23CrosAmdGpuProcessPolicyE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*)* @_ZN7sandbox6policy23CrosAmdGpuProcessPolicyD2Ev to i8*), i8* bitcast (void (%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*)* @_ZN7sandbox6policy23CrosAmdGpuProcessPolicyD0Ev to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*, i32)* @_ZNK7sandbox6policy23CrosAmdGpuProcessPolicy15EvaluateSyscallEi to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::BPFBasePolicy"*)* @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv to i8*)] }, align 8

@_ZN7sandbox6policy23CrosAmdGpuProcessPolicyC1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*), void (%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*)* @_ZN7sandbox6policy23CrosAmdGpuProcessPolicyC2Ev
@_ZN7sandbox6policy23CrosAmdGpuProcessPolicyD1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*), void (%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*)* @_ZN7sandbox6policy23CrosAmdGpuProcessPolicyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy23CrosAmdGpuProcessPolicyC2Ev(%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::CrosAmdGpuProcessPolicy", %"class.sandbox::policy::CrosAmdGpuProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy16GpuProcessPolicyC2Ev(%"class.sandbox::policy::GpuProcessPolicy"* %2) #5
  %3 = getelementptr inbounds %"class.sandbox::policy::CrosAmdGpuProcessPolicy", %"class.sandbox::policy::CrosAmdGpuProcessPolicy"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7sandbox6policy23CrosAmdGpuProcessPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN7sandbox6policy16GpuProcessPolicyC2Ev(%"class.sandbox::policy::GpuProcessPolicy"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7sandbox6policy16GpuProcessPolicyD2Ev(%"class.sandbox::policy::GpuProcessPolicy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy23CrosAmdGpuProcessPolicyD2Ev(%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::CrosAmdGpuProcessPolicy", %"class.sandbox::policy::CrosAmdGpuProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy16GpuProcessPolicyD2Ev(%"class.sandbox::policy::GpuProcessPolicy"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy23CrosAmdGpuProcessPolicyD0Ev(%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::CrosAmdGpuProcessPolicy", %"class.sandbox::policy::CrosAmdGpuProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy16GpuProcessPolicyD2Ev(%"class.sandbox::policy::GpuProcessPolicy"* %2) #5
  %3 = bitcast %"class.sandbox::policy::CrosAmdGpuProcessPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy23CrosAmdGpuProcessPolicy15EvaluateSyscallEi(%"class.sandbox::policy::CrosAmdGpuProcessPolicy"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::shared_ptr.2", align 8
  %4 = alloca %"class.sandbox::bpf_dsl::Elser", align 8
  %5 = alloca %"class.sandbox::bpf_dsl::Elser", align 8
  %6 = alloca %"class.std::__1::shared_ptr.2", align 8
  %7 = alloca %"class.std::__1::shared_ptr.2", align 8
  switch i32 %1, label %64 [
    i32 138, label %8
    i32 203, label %8
    i32 144, label %8
    i32 99, label %8
    i32 63, label %8
    i32 89, label %8
    i32 4, label %8
    i32 41, label %12
    i32 53, label %12
    i32 312, label %27
  ]

8:                                                ; preds = %2, %2, %2, %2, %2, %2, %2
  %9 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %10 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %9, 0
  %11 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %9, 1
  br label %69

12:                                               ; preds = %2, %2
  %13 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %14 = bitcast %"class.sandbox::bpf_dsl::Elser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #5
  %15 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 0, i64 4, i64 %13, i64 1) #5
  %16 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %15, 0
  %17 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %15, 1
  %18 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %19 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %18, 0
  %20 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %18, 1
  call void @_ZN7sandbox7bpf_dsl2IfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS2_IKNS3_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull sret %4, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %16, %"class.std::__1::__shared_weak_count"* %17, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %19, %"class.std::__1::__shared_weak_count"* %20) #5
  %21 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32 1) #5
  %22 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %21, 0
  %23 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %21, 1
  %24 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox7bpf_dsl5Elser4ElseENSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull %4, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %22, %"class.std::__1::__shared_weak_count"* %23) #5
  %25 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %24, 0
  %26 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %24, 1
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #5
  br label %69

27:                                               ; preds = %2
  %28 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %29 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %30 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %31 = getelementptr inbounds %"class.sandbox::policy::CrosAmdGpuProcessPolicy", %"class.sandbox::policy::CrosAmdGpuProcessPolicy"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.sandbox::BaselinePolicy"*, %"class.sandbox::BaselinePolicy"** %31, align 8
  %33 = getelementptr inbounds %"class.sandbox::BaselinePolicy", %"class.sandbox::BaselinePolicy"* %32, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = bitcast %"class.sandbox::bpf_dsl::Elser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #5
  %36 = zext i32 %34 to i64
  %37 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 0, i64 4, i64 %28, i64 %36) #5
  %38 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %37, 0
  %39 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %37, 1
  %40 = bitcast %"class.std::__1::shared_ptr.2"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #5
  %41 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 1, i64 4, i64 %29, i64 %36) #5
  %42 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %41, 0
  %43 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %41, 1
  %44 = bitcast %"class.std::__1::shared_ptr.2"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #5
  %45 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 2, i64 4, i64 %30, i64 0) #5
  %46 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %45, 0
  %47 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %45, 1
  %48 = bitcast %"class.std::__1::shared_ptr.2"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #5
  %49 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %42, %"class.std::__1::__shared_weak_count"* %43, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %46, %"class.std::__1::__shared_weak_count"* %47) #5
  %50 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %49, 0
  %51 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %49, 1
  %52 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %38, %"class.std::__1::__shared_weak_count"* %39, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %50, %"class.std::__1::__shared_weak_count"* %51) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48)
  %53 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %52, 0
  %54 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %52, 1
  %55 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %56 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %55, 0
  %57 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %55, 1
  call void @_ZN7sandbox7bpf_dsl2IfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS2_IKNS3_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull sret %5, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %53, %"class.std::__1::__shared_weak_count"* %54, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %56, %"class.std::__1::__shared_weak_count"* %57) #5
  %58 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32 1) #5
  %59 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %58, 0
  %60 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %58, 1
  %61 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox7bpf_dsl5Elser4ElseENSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull %5, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %59, %"class.std::__1::__shared_weak_count"* %60) #5
  %62 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %61, 0
  %63 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %61, 1
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* nonnull %5) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #5
  br label %69

64:                                               ; preds = %2
  %65 = getelementptr inbounds %"class.sandbox::policy::CrosAmdGpuProcessPolicy", %"class.sandbox::policy::CrosAmdGpuProcessPolicy"* %0, i64 0, i32 0
  %66 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy16GpuProcessPolicy15EvaluateSyscallEi(%"class.sandbox::policy::GpuProcessPolicy"* %65, i32 %1) #5
  %67 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %66, 0
  %68 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %66, 1
  br label %69

69:                                               ; preds = %64, %27, %12, %8
  %70 = phi %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* [ %67, %64 ], [ %62, %27 ], [ %25, %12 ], [ %10, %8 ]
  %71 = phi %"class.std::__1::__shared_weak_count"* [ %68, %64 ], [ %63, %27 ], [ %26, %12 ], [ %11, %8 ]
  %72 = insertvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %70, 0
  %73 = insertvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %72, %"class.std::__1::__shared_weak_count"* %71, 1
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %73
}

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7sandbox7bpf_dsl2IfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS2_IKNS3_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* sret, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"*, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox7bpf_dsl5Elser4ElseENSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"*, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"*) unnamed_addr #2

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy16GpuProcessPolicy15EvaluateSyscallEi(%"class.sandbox::policy::GpuProcessPolicy"*, i32) unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

declare i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32, i64, i64, i64) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"*, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
