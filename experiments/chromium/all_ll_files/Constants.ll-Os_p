; ModuleID = '../../third_party/swiftshader/src/Shader/Constants.cpp'
source_filename = "../../third_party/swiftshader/src/Shader/Constants.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sw::Constants" = type { [16 x i32], [16 x i32], [16 x i32], [17 x [4 x i16]], [8 x i8], [17 x %"struct.sw::float4"], [17 x %"struct.sw::float4"], [16 x i32], [16 x [8 x i8]], [16 x [8 x i8]], [16 x [4 x i16]], [16 x [4 x i16]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [2 x i32]], [16 x [2 x i32]], [16 x [2 x i32]], [16 x [2 x i32]], [16 x [2 x i64]], [16 x [2 x i64]], [16 x [2 x i64]], [16 x [2 x i64]], [4 x [4 x i16]], [4 x [4 x i32]], [8 x [4 x i16]], [256 x i16], [64 x i16], [32 x i16], [4096 x i16], [4096 x i16], [4 x [16 x %"struct.sw::float4"]], [4 x [16 x %"struct.sw::float4"]], [16 x %"struct.sw::float4"], [4 x i32], [4 x i32], [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [4 x i32], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [65536 x float] }
%"struct.sw::float4" = type { float, float, float, float }
%"class.sw::half" = type { i16 }

@_ZN2sw9constantsE = hidden global %"struct.sw::Constants" zeroinitializer, align 16
@_ZZN2sw9ConstantsC1EvE13transposeBit0 = internal unnamed_addr constant [16 x i32] [i32 0, i32 1, i32 16, i32 17, i32 256, i32 257, i32 272, i32 273, i32 4096, i32 4097, i32 4112, i32 4113, i32 4352, i32 4353, i32 4368, i32 4369], align 16
@_ZZN2sw9ConstantsC1EvE13transposeBit1 = internal unnamed_addr constant [16 x i32] [i32 0, i32 2, i32 32, i32 34, i32 512, i32 514, i32 544, i32 546, i32 8192, i32 8194, i32 8224, i32 8226, i32 8704, i32 8706, i32 8736, i32 8738], align 16
@_ZZN2sw9ConstantsC1EvE13transposeBit2 = internal unnamed_addr constant [16 x i32] [i32 0, i32 4, i32 64, i32 68, i32 1024, i32 1028, i32 1088, i32 1092, i32 16384, i32 16388, i32 16448, i32 16452, i32 17408, i32 17412, i32 17472, i32 17476], align 16
@_ZZN2sw9ConstantsC1EvE7cWeight = internal unnamed_addr constant [17 x [4 x i16]] [[4 x i16] [i16 -1, i16 -1, i16 -1, i16 -1], [4 x i16] [i16 -1, i16 -1, i16 -1, i16 -1], [4 x i16] [i16 -32768, i16 -32768, i16 -32768, i16 -32768], [4 x i16] [i16 21845, i16 21845, i16 21845, i16 21845], [4 x i16] [i16 16384, i16 16384, i16 16384, i16 16384], [4 x i16] [i16 13107, i16 13107, i16 13107, i16 13107], [4 x i16] [i16 10922, i16 10922, i16 10922, i16 10922], [4 x i16] [i16 9362, i16 9362, i16 9362, i16 9362], [4 x i16] [i16 8192, i16 8192, i16 8192, i16 8192], [4 x i16] [i16 7281, i16 7281, i16 7281, i16 7281], [4 x i16] [i16 6553, i16 6553, i16 6553, i16 6553], [4 x i16] [i16 5957, i16 5957, i16 5957, i16 5957], [4 x i16] [i16 5461, i16 5461, i16 5461, i16 5461], [4 x i16] [i16 5041, i16 5041, i16 5041, i16 5041], [4 x i16] [i16 4681, i16 4681, i16 4681, i16 4681], [4 x i16] [i16 4369, i16 4369, i16 4369, i16 4369], [4 x i16] [i16 4096, i16 4096, i16 4096, i16 4096]], align 16
@_ZZN2sw9ConstantsC1EvE8uvWeight = internal unnamed_addr constant [17 x %"struct.sw::float4"] [%"struct.sw::float4" { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, %"struct.sw::float4" { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, %"struct.sw::float4" { float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01 }, %"struct.sw::float4" { float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000 }, %"struct.sw::float4" { float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01 }, %"struct.sw::float4" { float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000 }, %"struct.sw::float4" { float 0x3FC5555560000000, float 0x3FC5555560000000, float 0x3FC5555560000000, float 0x3FC5555560000000 }, %"struct.sw::float4" { float 0x3FC24924A0000000, float 0x3FC24924A0000000, float 0x3FC24924A0000000, float 0x3FC24924A0000000 }, %"struct.sw::float4" { float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01 }, %"struct.sw::float4" { float 0x3FBC71C720000000, float 0x3FBC71C720000000, float 0x3FBC71C720000000, float 0x3FBC71C720000000 }, %"struct.sw::float4" { float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000 }, %"struct.sw::float4" { float 0x3FB745D180000000, float 0x3FB745D180000000, float 0x3FB745D180000000, float 0x3FB745D180000000 }, %"struct.sw::float4" { float 0x3FB5555560000000, float 0x3FB5555560000000, float 0x3FB5555560000000, float 0x3FB5555560000000 }, %"struct.sw::float4" { float 0x3FB3B13B20000000, float 0x3FB3B13B20000000, float 0x3FB3B13B20000000, float 0x3FB3B13B20000000 }, %"struct.sw::float4" { float 0x3FB24924A0000000, float 0x3FB24924A0000000, float 0x3FB24924A0000000, float 0x3FB24924A0000000 }, %"struct.sw::float4" { float 0x3FB1111120000000, float 0x3FB1111120000000, float 0x3FB1111120000000, float 0x3FB1111120000000 }, %"struct.sw::float4" { float 6.250000e-02, float 6.250000e-02, float 6.250000e-02, float 6.250000e-02 }], align 16
@_ZZN2sw9ConstantsC1EvE7uvStart = internal unnamed_addr constant [17 x %"struct.sw::float4"] [%"struct.sw::float4" { float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00 }, %"struct.sw::float4" { float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00 }, %"struct.sw::float4" { float -2.500000e-01, float -2.500000e-01, float -2.500000e-01, float -2.500000e-01 }, %"struct.sw::float4" { float 0xBFD5555560000000, float 0xBFD5555560000000, float 0xBFD5555560000000, float 0xBFD5555560000000 }, %"struct.sw::float4" { float -3.750000e-01, float -3.750000e-01, float -3.750000e-01, float -3.750000e-01 }, %"struct.sw::float4" { float 0xBFD99999A0000000, float 0xBFD99999A0000000, float 0xBFD99999A0000000, float 0xBFD99999A0000000 }, %"struct.sw::float4" { float 0xBFDAAAAAA0000000, float 0xBFDAAAAAA0000000, float 0xBFDAAAAAA0000000, float 0xBFDAAAAAA0000000 }, %"struct.sw::float4" { float 0xBFDB6DB6E0000000, float 0xBFDB6DB6E0000000, float 0xBFDB6DB6E0000000, float 0xBFDB6DB6E0000000 }, %"struct.sw::float4" { float -4.375000e-01, float -4.375000e-01, float -4.375000e-01, float -4.375000e-01 }, %"struct.sw::float4" { float 0xBFDC71C720000000, float 0xBFDC71C720000000, float 0xBFDC71C720000000, float 0xBFDC71C720000000 }, %"struct.sw::float4" { float 0xBFDCCCCCC0000000, float 0xBFDCCCCCC0000000, float 0xBFDCCCCCC0000000, float 0xBFDCCCCCC0000000 }, %"struct.sw::float4" { float 0xBFDD1745E0000000, float 0xBFDD1745E0000000, float 0xBFDD1745E0000000, float 0xBFDD1745E0000000 }, %"struct.sw::float4" { float 0xBFDD555560000000, float 0xBFDD555560000000, float 0xBFDD555560000000, float 0xBFDD555560000000 }, %"struct.sw::float4" { float 0xBFDD89D8A0000000, float 0xBFDD89D8A0000000, float 0xBFDD89D8A0000000, float 0xBFDD89D8A0000000 }, %"struct.sw::float4" { float 0xBFDDB6DB60000000, float 0xBFDDB6DB60000000, float 0xBFDDB6DB60000000, float 0xBFDDB6DB60000000 }, %"struct.sw::float4" { float 0xBFDDDDDDE0000000, float 0xBFDDDDDDE0000000, float 0xBFDDDDDDE0000000, float 0xBFDDDDDDE0000000 }, %"struct.sw::float4" { float -4.687500e-01, float -4.687500e-01, float -4.687500e-01, float -4.687500e-01 }], align 16
@_ZZN2sw9ConstantsC1EvE14occlusionCount = internal unnamed_addr constant [16 x i32] [i32 0, i32 1, i32 1, i32 2, i32 1, i32 2, i32 2, i32 3, i32 1, i32 2, i32 2, i32 3, i32 2, i32 3, i32 3, i32 4], align 16
@_ZZN2sw9ConstantsC1EvE1X = internal unnamed_addr constant [4 x float] [float 3.125000e-01, float -3.125000e-01, float -1.250000e-01, float 1.250000e-01], align 16
@_ZZN2sw9ConstantsC1EvE1Y = internal unnamed_addr constant [4 x float] [float 1.250000e-01, float -1.250000e-01, float 3.125000e-01, float -3.125000e-01], align 16
@_ZZN2sw9ConstantsC1EvE2Xf = internal unnamed_addr constant [4 x i32] [i32 -5, i32 5, i32 2, i32 -2], align 16
@_ZZN2sw9ConstantsC1EvE2Yf = internal unnamed_addr constant [4 x i32] [i32 -2, i32 2, i32 -5, i32 5], align 16
@_ZZN2sw9ConstantsC1EvE1X_0 = internal unnamed_addr constant [4 x %"struct.sw::float4"] [%"struct.sw::float4" { float -3.125000e-01, float -3.125000e-01, float -3.125000e-01, float -3.125000e-01 }, %"struct.sw::float4" { float 3.125000e-01, float 3.125000e-01, float 3.125000e-01, float 3.125000e-01 }, %"struct.sw::float4" { float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01 }, %"struct.sw::float4" { float -1.250000e-01, float -1.250000e-01, float -1.250000e-01, float -1.250000e-01 }], align 16
@_ZZN2sw9ConstantsC1EvE1Y_0 = internal unnamed_addr constant [4 x %"struct.sw::float4"] [%"struct.sw::float4" { float -1.250000e-01, float -1.250000e-01, float -1.250000e-01, float -1.250000e-01 }, %"struct.sw::float4" { float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01 }, %"struct.sw::float4" { float -3.125000e-01, float -3.125000e-01, float -3.125000e-01, float -3.125000e-01 }, %"struct.sw::float4" { float 3.125000e-01, float 3.125000e-01, float 3.125000e-01, float 3.125000e-01 }], align 16
@_ZZN2sw9ConstantsC1EvE4maxX = internal unnamed_addr constant [16 x i32] [i32 0, i32 1, i32 256, i32 257, i32 65536, i32 65537, i32 65792, i32 65793, i32 16777216, i32 16777217, i32 16777472, i32 16777473, i32 16842752, i32 16842753, i32 16843008, i32 16843009], align 16
@_ZZN2sw9ConstantsC1EvE4maxY = internal unnamed_addr constant [16 x i32] [i32 0, i32 2, i32 512, i32 514, i32 131072, i32 131074, i32 131584, i32 131586, i32 33554432, i32 33554434, i32 33554944, i32 33554946, i32 33685504, i32 33685506, i32 33686016, i32 33686018], align 16
@_ZZN2sw9ConstantsC1EvE4maxZ = internal unnamed_addr constant [16 x i32] [i32 0, i32 4, i32 1024, i32 1028, i32 262144, i32 262148, i32 263168, i32 263172, i32 67108864, i32 67108868, i32 67109888, i32 67109892, i32 67371008, i32 67371012, i32 67372032, i32 67372036], align 16
@_ZZN2sw9ConstantsC1EvE4minX = internal unnamed_addr constant [16 x i32] [i32 0, i32 8, i32 2048, i32 2056, i32 524288, i32 524296, i32 526336, i32 526344, i32 134217728, i32 134217736, i32 134219776, i32 134219784, i32 134742016, i32 134742024, i32 134744064, i32 134744072], align 16
@_ZZN2sw9ConstantsC1EvE4minY = internal unnamed_addr constant [16 x i32] [i32 0, i32 16, i32 4096, i32 4112, i32 1048576, i32 1048592, i32 1052672, i32 1052688, i32 268435456, i32 268435472, i32 268439552, i32 268439568, i32 269484032, i32 269484048, i32 269488128, i32 269488144], align 16
@_ZZN2sw9ConstantsC1EvE4minZ = internal unnamed_addr constant [16 x i32] [i32 0, i32 32, i32 8192, i32 8224, i32 2097152, i32 2097184, i32 2105344, i32 2105376, i32 536870912, i32 536870944, i32 536879104, i32 536879136, i32 538968064, i32 538968096, i32 538976256, i32 538976288], align 16
@_ZZN2sw9ConstantsC1EvE4fini = internal unnamed_addr constant [16 x i32] [i32 0, i32 128, i32 32768, i32 32896, i32 8388608, i32 8388736, i32 8421376, i32 8421504, i32 -2147483648, i32 -2147483520, i32 -2147450880, i32 -2147450752, i32 -2139095040, i32 -2139094912, i32 -2139062272, i32 -2139062144], align 16
@_ZZN2sw9ConstantsC1EvE6maxPos = internal unnamed_addr constant [4 x i32] [i32 2139095039, i32 2139095039, i32 2139095039, i32 2139095038], align 16
@_ZZN2sw9ConstantsC1EvE11unscaleByte = internal unnamed_addr constant %"struct.sw::float4" { float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000 }, align 16
@_ZZN2sw9ConstantsC1EvE12unscaleSByte = internal unnamed_addr constant %"struct.sw::float4" { float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000 }, align 16
@_ZZN2sw9ConstantsC1EvE12unscaleShort = internal unnamed_addr constant %"struct.sw::float4" { float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000 }, align 16
@_ZZN2sw9ConstantsC1EvE13unscaleUShort = internal unnamed_addr constant %"struct.sw::float4" { float 0x3EF0001000000000, float 0x3EF0001000000000, float 0x3EF0001000000000, float 0x3EF0001000000000 }, align 16
@_ZZN2sw9ConstantsC1EvE10unscaleInt = internal unnamed_addr constant %"struct.sw::float4" { float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000 }, align 16
@_ZZN2sw9ConstantsC1EvE11unscaleUInt = internal unnamed_addr constant %"struct.sw::float4" { float 0x3DF0000000000000, float 0x3DF0000000000000, float 0x3DF0000000000000, float 0x3DF0000000000000 }, align 16
@_ZZN2sw9ConstantsC1EvE12unscaleFixed = internal unnamed_addr constant %"struct.sw::float4" { float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000 }, align 16
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_Constants.cpp, i8* null }]

@_ZN2sw9ConstantsC1Ev = hidden unnamed_addr alias void (%"struct.sw::Constants"*), void (%"struct.sw::Constants"*)* @_ZN2sw9ConstantsC2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw9ConstantsC2Ev(%"struct.sw::Constants"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast %"struct.sw::Constants"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE13transposeBit0 to i8*), i64 64, i1 false)
  %4 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 1
  %5 = bitcast [16 x i32]* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %5, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE13transposeBit1 to i8*), i64 64, i1 false)
  %6 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 2
  %7 = bitcast [16 x i32]* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE13transposeBit2 to i8*), i64 64, i1 false)
  %8 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 3
  %9 = bitcast [17 x [4 x i16]]* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %9, i8* align 16 bitcast ([17 x [4 x i16]]* @_ZZN2sw9ConstantsC1EvE7cWeight to i8*), i64 136, i1 false)
  %10 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 5
  %11 = bitcast [17 x %"struct.sw::float4"]* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %11, i8* align 16 bitcast ([17 x %"struct.sw::float4"]* @_ZZN2sw9ConstantsC1EvE8uvWeight to i8*), i64 272, i1 false)
  %12 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 6
  %13 = bitcast [17 x %"struct.sw::float4"]* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %13, i8* align 16 bitcast ([17 x %"struct.sw::float4"]* @_ZZN2sw9ConstantsC1EvE7uvStart to i8*), i64 272, i1 false)
  %14 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 7
  %15 = bitcast [16 x i32]* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE14occlusionCount to i8*), i64 64, i1 false)
  br label %16

16:                                               ; preds = %16, %1
  %17 = phi i64 [ 0, %1 ], [ %146, %16 ]
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 1
  %20 = sub nsw i32 0, %19
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 0
  store i8 %21, i8* %22, align 8
  %23 = lshr i32 %18, 1
  %24 = and i32 %23, 1
  %25 = sub nsw i32 0, %24
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 1
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %18, 2
  %29 = and i32 %28, 1
  %30 = sub nsw i32 0, %29
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 2
  store i8 %31, i8* %32, align 2
  %33 = lshr i32 %18, 3
  %34 = and i32 %33, 1
  %35 = sub nsw i32 0, %34
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 3
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 4
  store i8 %21, i8* %38, align 4
  %39 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 5
  store i8 %26, i8* %39, align 1
  %40 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 6
  store i8 %31, i8* %40, align 2
  %41 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 8, i64 %17, i64 7
  store i8 %36, i8* %41, align 1
  %42 = xor i8 %21, -1
  %43 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 0
  store i8 %42, i8* %43, align 8
  %44 = xor i8 %26, -1
  %45 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 1
  store i8 %44, i8* %45, align 1
  %46 = xor i8 %31, -1
  %47 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 2
  store i8 %46, i8* %47, align 2
  %48 = xor i8 %36, -1
  %49 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 3
  store i8 %48, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 4
  store i8 %42, i8* %50, align 4
  %51 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 5
  store i8 %44, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 6
  store i8 %46, i8* %52, align 2
  %53 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 9, i64 %17, i64 7
  store i8 %48, i8* %53, align 1
  %54 = trunc i32 %20 to i16
  %55 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 10, i64 %17, i64 0
  store i16 %54, i16* %55, align 8
  %56 = trunc i32 %25 to i16
  %57 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 10, i64 %17, i64 1
  store i16 %56, i16* %57, align 2
  %58 = trunc i32 %30 to i16
  %59 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 10, i64 %17, i64 2
  store i16 %58, i16* %59, align 4
  %60 = trunc i32 %35 to i16
  %61 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 10, i64 %17, i64 3
  store i16 %60, i16* %61, align 2
  %62 = xor i16 %54, -1
  %63 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 11, i64 %17, i64 0
  store i16 %62, i16* %63, align 8
  %64 = xor i16 %56, -1
  %65 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 11, i64 %17, i64 1
  store i16 %64, i16* %65, align 2
  %66 = xor i16 %58, -1
  %67 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 11, i64 %17, i64 2
  store i16 %66, i16* %67, align 4
  %68 = xor i16 %60, -1
  %69 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 11, i64 %17, i64 3
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 12, i64 %17, i64 0
  store i32 %20, i32* %70, align 16
  %71 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 12, i64 %17, i64 1
  store i32 %25, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 12, i64 %17, i64 2
  store i32 %30, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 12, i64 %17, i64 3
  store i32 %35, i32* %73, align 4
  %74 = add nsw i32 %19, -1
  %75 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 13, i64 %17, i64 0
  store i32 %74, i32* %75, align 16
  %76 = add nsw i32 %24, -1
  %77 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 13, i64 %17, i64 1
  store i32 %76, i32* %77, align 4
  %78 = add nsw i32 %29, -1
  %79 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 13, i64 %17, i64 2
  store i32 %78, i32* %79, align 8
  %80 = add nsw i32 %34, -1
  %81 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 13, i64 %17, i64 3
  store i32 %80, i32* %81, align 4
  %82 = sext i32 %20 to i64
  %83 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 14, i64 %17
  store i64 %82, i64* %83, align 8
  %84 = sext i32 %25 to i64
  %85 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 15, i64 %17
  store i64 %84, i64* %85, align 8
  %86 = sext i32 %30 to i64
  %87 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 16, i64 %17
  store i64 %86, i64* %87, align 8
  %88 = sext i32 %35 to i64
  %89 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 17, i64 %17
  store i64 %88, i64* %89, align 8
  %90 = xor i64 %82, -1
  %91 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 18, i64 %17
  store i64 %90, i64* %91, align 8
  %92 = xor i64 %84, -1
  %93 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 19, i64 %17
  store i64 %92, i64* %93, align 8
  %94 = xor i64 %86, -1
  %95 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 20, i64 %17
  store i64 %94, i64* %95, align 8
  %96 = xor i64 %88, -1
  %97 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 21, i64 %17
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 22, i64 %17, i64 0
  %99 = insertelement <4 x i32> undef, i32 %20, i32 0
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> zeroinitializer
  %101 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %101, align 16
  %102 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 23, i64 %17, i64 0
  %103 = insertelement <4 x i32> undef, i32 %25, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %105, align 16
  %106 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 24, i64 %17, i64 0
  %107 = insertelement <4 x i32> undef, i32 %30, i32 0
  %108 = shufflevector <4 x i32> %107, <4 x i32> undef, <4 x i32> zeroinitializer
  %109 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %109, align 16
  %110 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 25, i64 %17, i64 0
  %111 = insertelement <4 x i32> undef, i32 %35, i32 0
  %112 = shufflevector <4 x i32> %111, <4 x i32> undef, <4 x i32> zeroinitializer
  %113 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %113, align 16
  %114 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 26, i64 %17, i64 0
  %115 = insertelement <4 x i32> undef, i32 %74, i32 0
  %116 = shufflevector <4 x i32> %115, <4 x i32> undef, <4 x i32> zeroinitializer
  %117 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %117, align 16
  %118 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 27, i64 %17, i64 0
  %119 = insertelement <4 x i32> undef, i32 %76, i32 0
  %120 = shufflevector <4 x i32> %119, <4 x i32> undef, <4 x i32> zeroinitializer
  %121 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %120, <4 x i32>* %121, align 16
  %122 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 28, i64 %17, i64 0
  %123 = insertelement <4 x i32> undef, i32 %78, i32 0
  %124 = shufflevector <4 x i32> %123, <4 x i32> undef, <4 x i32> zeroinitializer
  %125 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %125, align 16
  %126 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 29, i64 %17, i64 0
  %127 = insertelement <4 x i32> undef, i32 %80, i32 0
  %128 = shufflevector <4 x i32> %127, <4 x i32> undef, <4 x i32> zeroinitializer
  %129 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %129, align 16
  %130 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 30, i64 %17, i64 0
  store i32 %20, i32* %130, align 8
  %131 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 30, i64 %17, i64 1
  store i32 %25, i32* %131, align 4
  %132 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 31, i64 %17, i64 0
  store i32 %30, i32* %132, align 8
  %133 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 31, i64 %17, i64 1
  store i32 %35, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 32, i64 %17, i64 0
  store i32 %74, i32* %134, align 8
  %135 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 32, i64 %17, i64 1
  store i32 %76, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 33, i64 %17, i64 0
  store i32 %78, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 33, i64 %17, i64 1
  store i32 %80, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 34, i64 %17, i64 0
  store i64 %82, i64* %138, align 16
  %139 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 34, i64 %17, i64 1
  store i64 %84, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 35, i64 %17, i64 0
  store i64 %86, i64* %140, align 16
  %141 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 35, i64 %17, i64 1
  store i64 %88, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 36, i64 %17, i64 0
  store i64 %90, i64* %142, align 16
  %143 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 36, i64 %17, i64 1
  store i64 %92, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 37, i64 %17, i64 0
  store i64 %94, i64* %144, align 16
  %145 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 37, i64 %17, i64 1
  store i64 %96, i64* %145, align 8
  %146 = add nuw nsw i64 %17, 1
  %147 = icmp eq i64 %146, 16
  br i1 %147, label %148, label %16

148:                                              ; preds = %16
  %149 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 40, i64 0, i64 0
  %150 = bitcast i16* %149 to <32 x i16>*
  store <32 x i16> <i16 0, i16 0, i16 0, i16 0, i16 31, i16 31, i16 31, i16 31, i16 2016, i16 2016, i16 2016, i16 2016, i16 2047, i16 2047, i16 2047, i16 2047, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2017, i16 -2017, i16 -2017, i16 -2017, i16 -32, i16 -32, i16 -32, i16 -32, i16 -1, i16 -1, i16 -1, i16 -1>, <32 x i16>* %150, align 2
  br label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %170, %151 ], [ 0, %148 ]
  %153 = trunc i64 %152 to i32
  %154 = lshr i32 %153, 1
  %155 = insertelement <2 x i32> undef, i32 %153, i32 0
  %156 = insertelement <2 x i32> %155, i32 %154, i32 1
  %157 = and <2 x i32> %156, <i32 1, i32 1>
  %158 = sub nsw <2 x i32> zeroinitializer, %157
  %159 = shufflevector <2 x i32> %158, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %160 = extractelement <2 x i32> %158, i32 0
  %161 = trunc i32 %160 to i16
  %162 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 38, i64 %152, i64 0
  store i16 %161, i16* %162, align 8
  %163 = extractelement <2 x i32> %158, i32 1
  %164 = trunc i32 %163 to i16
  %165 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 38, i64 %152, i64 1
  store i16 %164, i16* %165, align 2
  %166 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 38, i64 %152, i64 2
  store i16 %161, i16* %166, align 4
  %167 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 38, i64 %152, i64 3
  store i16 %164, i16* %167, align 2
  %168 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 39, i64 %152, i64 0
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %159, <4 x i32>* %169, align 16
  %170 = add nuw nsw i64 %152, 1
  %171 = icmp eq i64 %170, 4
  br i1 %171, label %172, label %151

172:                                              ; preds = %151, %184
  %173 = phi i64 [ %190, %184 ], [ 0, %151 ]
  %174 = trunc i64 %173 to i32
  %175 = sitofp i32 %174 to float
  %176 = fdiv float %175, 2.550000e+02
  %177 = fcmp ugt float %176, 0x3FA4B5DCC0000000
  br i1 %177, label %180, label %178

178:                                              ; preds = %172
  %179 = fmul float %176, 0x3FB3D07220000000
  br label %184

180:                                              ; preds = %172
  %181 = fadd float %176, 0x3FAC28F5C0000000
  %182 = fmul float %181, 0x3FEE54EDC0000000
  %183 = tail call float @powf(float %182, float 0x4003333340000000) #4
  br label %184

184:                                              ; preds = %178, %180
  %185 = phi float [ %179, %178 ], [ %183, %180 ]
  %186 = fmul float %185, 6.553500e+04
  %187 = fadd float %186, 5.000000e-01
  %188 = fptoui float %187 to i16
  %189 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 41, i64 %173
  store i16 %188, i16* %189, align 2
  %190 = add nuw nsw i64 %173, 1
  %191 = icmp eq i64 %190, 256
  br i1 %191, label %192, label %172

192:                                              ; preds = %184, %204
  %193 = phi i64 [ %210, %204 ], [ 0, %184 ]
  %194 = trunc i64 %193 to i32
  %195 = sitofp i32 %194 to float
  %196 = fdiv float %195, 6.300000e+01
  %197 = fcmp ugt float %196, 0x3FA4B5DCC0000000
  br i1 %197, label %200, label %198

198:                                              ; preds = %192
  %199 = fmul float %196, 0x3FB3D07220000000
  br label %204

200:                                              ; preds = %192
  %201 = fadd float %196, 0x3FAC28F5C0000000
  %202 = fmul float %201, 0x3FEE54EDC0000000
  %203 = tail call float @powf(float %202, float 0x4003333340000000) #4
  br label %204

204:                                              ; preds = %198, %200
  %205 = phi float [ %199, %198 ], [ %203, %200 ]
  %206 = fmul float %205, 6.553500e+04
  %207 = fadd float %206, 5.000000e-01
  %208 = fptoui float %207 to i16
  %209 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 42, i64 %193
  store i16 %208, i16* %209, align 2
  %210 = add nuw nsw i64 %193, 1
  %211 = icmp eq i64 %210, 64
  br i1 %211, label %212, label %192

212:                                              ; preds = %204, %224
  %213 = phi i64 [ %230, %224 ], [ 0, %204 ]
  %214 = trunc i64 %213 to i32
  %215 = sitofp i32 %214 to float
  %216 = fdiv float %215, 3.100000e+01
  %217 = fcmp ugt float %216, 0x3FA4B5DCC0000000
  br i1 %217, label %220, label %218

218:                                              ; preds = %212
  %219 = fmul float %216, 0x3FB3D07220000000
  br label %224

220:                                              ; preds = %212
  %221 = fadd float %216, 0x3FAC28F5C0000000
  %222 = fmul float %221, 0x3FEE54EDC0000000
  %223 = tail call float @powf(float %222, float 0x4003333340000000) #4
  br label %224

224:                                              ; preds = %218, %220
  %225 = phi float [ %219, %218 ], [ %223, %220 ]
  %226 = fmul float %225, 6.553500e+04
  %227 = fadd float %226, 5.000000e-01
  %228 = fptoui float %227 to i16
  %229 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 43, i64 %213
  store i16 %228, i16* %229, align 2
  %230 = add nuw nsw i64 %213, 1
  %231 = icmp eq i64 %230, 32
  br i1 %231, label %232, label %212

232:                                              ; preds = %224, %261
  %233 = phi i64 [ %271, %261 ], [ 0, %224 ]
  %234 = trunc i64 %233 to i32
  %235 = sitofp i32 %234 to float
  %236 = fdiv float %235, 4.095000e+03
  %237 = fcmp ugt float %236, 0x3F69A5C380000000
  br i1 %237, label %240, label %238

238:                                              ; preds = %232
  %239 = fmul float %236, 0x4029D70A40000000
  br label %244

240:                                              ; preds = %232
  %241 = tail call float @powf(float %236, float 0x3FDAAAAAC0000000) #4
  %242 = fmul float %241, 0x3FF0E147A0000000
  %243 = fadd float %242, 0xBFAC28F5C0000000
  br label %244

244:                                              ; preds = %238, %240
  %245 = phi float [ %239, %238 ], [ %243, %240 ]
  %246 = fmul float %245, 6.553500e+04
  %247 = fadd float %246, 5.000000e-01
  %248 = fcmp olt float %247, 0.000000e+00
  %249 = select i1 %248, float 0.000000e+00, float %247
  %250 = fcmp ogt float %249, 6.553500e+04
  %251 = select i1 %250, float 6.553500e+04, float %249
  %252 = fptoui float %251 to i16
  %253 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 44, i64 %233
  store i16 %252, i16* %253, align 2
  %254 = fcmp ugt float %236, 0x3FA4B5DCC0000000
  br i1 %254, label %257, label %255

255:                                              ; preds = %244
  %256 = fmul float %236, 0x3FB3D07220000000
  br label %261

257:                                              ; preds = %244
  %258 = fadd float %236, 0x3FAC28F5C0000000
  %259 = fmul float %258, 0x3FEE54EDC0000000
  %260 = tail call float @powf(float %259, float 0x4003333340000000) #4
  br label %261

261:                                              ; preds = %255, %257
  %262 = phi float [ %256, %255 ], [ %260, %257 ]
  %263 = fmul float %262, 6.553500e+04
  %264 = fadd float %263, 5.000000e-01
  %265 = fcmp olt float %264, 0.000000e+00
  %266 = select i1 %265, float 0.000000e+00, float %264
  %267 = fcmp ogt float %266, 6.553500e+04
  %268 = select i1 %267, float 6.553500e+04, float %266
  %269 = fptoui float %268 to i16
  %270 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 45, i64 %233
  store i16 %269, i16* %270, align 2
  %271 = add nuw nsw i64 %233, 1
  %272 = icmp eq i64 %271, 4096
  br i1 %272, label %273, label %232

273:                                              ; preds = %261, %325
  %274 = phi i64 [ %326, %325 ], [ 0, %261 ]
  %275 = getelementptr inbounds [4 x float], [4 x float]* @_ZZN2sw9ConstantsC1EvE1X, i64 0, i64 %274
  %276 = getelementptr inbounds [4 x float], [4 x float]* @_ZZN2sw9ConstantsC1EvE1Y, i64 0, i64 %274
  %277 = bitcast float* %275 to i32*
  br label %319

278:                                              ; preds = %325
  %279 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 49
  %280 = bitcast [4 x i32]* %279 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %280, i8* align 16 bitcast ([4 x i32]* @_ZZN2sw9ConstantsC1EvE2Xf to i8*), i64 16, i1 false)
  %281 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 50
  %282 = bitcast [4 x i32]* %281 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %282, i8* align 16 bitcast ([4 x i32]* @_ZZN2sw9ConstantsC1EvE2Yf to i8*), i64 16, i1 false)
  %283 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 51
  %284 = bitcast [4 x %"struct.sw::float4"]* %283 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %284, i8* align 16 bitcast ([4 x %"struct.sw::float4"]* @_ZZN2sw9ConstantsC1EvE1X_0 to i8*), i64 64, i1 false)
  %285 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 52
  %286 = bitcast [4 x %"struct.sw::float4"]* %285 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %286, i8* align 16 bitcast ([4 x %"struct.sw::float4"]* @_ZZN2sw9ConstantsC1EvE1Y_0 to i8*), i64 64, i1 false)
  %287 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 53
  %288 = bitcast [16 x i32]* %287 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %288, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE4maxX to i8*), i64 64, i1 false)
  %289 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 54
  %290 = bitcast [16 x i32]* %289 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %290, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE4maxY to i8*), i64 64, i1 false)
  %291 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 55
  %292 = bitcast [16 x i32]* %291 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %292, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE4maxZ to i8*), i64 64, i1 false)
  %293 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 56
  %294 = bitcast [16 x i32]* %293 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %294, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE4minX to i8*), i64 64, i1 false)
  %295 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 57
  %296 = bitcast [16 x i32]* %295 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %296, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE4minY to i8*), i64 64, i1 false)
  %297 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 58
  %298 = bitcast [16 x i32]* %297 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %298, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE4minZ to i8*), i64 64, i1 false)
  %299 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 59
  %300 = bitcast [16 x i32]* %299 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %300, i8* align 16 bitcast ([16 x i32]* @_ZZN2sw9ConstantsC1EvE4fini to i8*), i64 64, i1 false)
  %301 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 60
  %302 = bitcast [4 x i32]* %301 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %302, i8* align 16 bitcast ([4 x i32]* @_ZZN2sw9ConstantsC1EvE6maxPos to i8*), i64 16, i1 false)
  %303 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 61
  %304 = bitcast %"struct.sw::float4"* %303 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %304, i8* align 16 bitcast (%"struct.sw::float4"* @_ZZN2sw9ConstantsC1EvE11unscaleByte to i8*), i64 16, i1 false)
  %305 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 62
  %306 = bitcast %"struct.sw::float4"* %305 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %306, i8* align 16 bitcast (%"struct.sw::float4"* @_ZZN2sw9ConstantsC1EvE12unscaleSByte to i8*), i64 16, i1 false)
  %307 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 63
  %308 = bitcast %"struct.sw::float4"* %307 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %308, i8* align 16 bitcast (%"struct.sw::float4"* @_ZZN2sw9ConstantsC1EvE12unscaleShort to i8*), i64 16, i1 false)
  %309 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 64
  %310 = bitcast %"struct.sw::float4"* %309 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %310, i8* align 16 bitcast (%"struct.sw::float4"* @_ZZN2sw9ConstantsC1EvE13unscaleUShort to i8*), i64 16, i1 false)
  %311 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 65
  %312 = bitcast %"struct.sw::float4"* %311 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %312, i8* align 16 bitcast (%"struct.sw::float4"* @_ZZN2sw9ConstantsC1EvE10unscaleInt to i8*), i64 16, i1 false)
  %313 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 66
  %314 = bitcast %"struct.sw::float4"* %313 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %314, i8* align 16 bitcast (%"struct.sw::float4"* @_ZZN2sw9ConstantsC1EvE11unscaleUInt to i8*), i64 16, i1 false)
  %315 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 67
  %316 = bitcast %"struct.sw::float4"* %315 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %316, i8* align 16 bitcast (%"struct.sw::float4"* @_ZZN2sw9ConstantsC1EvE12unscaleFixed to i8*), i64 16, i1 false)
  %317 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %317) #5
  store i32 0, i32* %2, align 4
  %318 = bitcast i32* %2 to %"class.sw::half"*
  br label %352

319:                                              ; preds = %328, %273
  %320 = phi i64 [ 0, %273 ], [ %329, %328 ]
  %321 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 46, i64 %274, i64 %320, i32 0
  %322 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 47, i64 %274, i64 %320, i32 0
  %323 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 48, i64 %320, i32 0
  %324 = trunc i64 %320 to i32
  br label %331

325:                                              ; preds = %328
  %326 = add nuw nsw i64 %274, 1
  %327 = icmp eq i64 %326, 4
  br i1 %327, label %278, label %273

328:                                              ; preds = %344
  %329 = add nuw nsw i64 %320, 1
  %330 = icmp eq i64 %329, 16
  br i1 %330, label %325, label %319

331:                                              ; preds = %344, %319
  %332 = phi i64 [ 0, %319 ], [ %349, %344 ]
  %333 = trunc i64 %332 to i32
  %334 = shl i32 1, %333
  %335 = and i32 %334, %324
  %336 = icmp ne i32 %335, 0
  br i1 %336, label %339, label %337

337:                                              ; preds = %331
  %338 = getelementptr inbounds float, float* %321, i64 %332
  store float 0.000000e+00, float* %338, align 4
  br label %344

339:                                              ; preds = %331
  %340 = load i32, i32* %277, align 4
  %341 = getelementptr inbounds float, float* %321, i64 %332
  %342 = bitcast float* %341 to i32*
  store i32 %340, i32* %342, align 4
  %343 = load float, float* %276, align 4
  br label %344

344:                                              ; preds = %337, %339
  %345 = phi float [ %343, %339 ], [ 0.000000e+00, %337 ]
  %346 = getelementptr inbounds float, float* %322, i64 %332
  store float %345, float* %346, align 4
  %347 = select i1 %336, float 1.000000e+00, float 0.000000e+00
  %348 = getelementptr inbounds float, float* %323, i64 %332
  store float %347, float* %348, align 4
  %349 = add nuw nsw i64 %332, 1
  %350 = icmp eq i64 %349, 4
  br i1 %350, label %328, label %331

351:                                              ; preds = %352
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %317) #5
  ret void

352:                                              ; preds = %278, %352
  %353 = call float @_ZNK2sw4halfcvfEv(%"class.sw::half"* nonnull %318) #4
  %354 = load i32, i32* %2, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds %"struct.sw::Constants", %"struct.sw::Constants"* %0, i64 0, i32 68, i64 %355
  store float %353, float* %356, align 4
  %357 = add nsw i32 %354, 1
  store i32 %357, i32* %2, align 4
  %358 = icmp slt i32 %357, 65536
  br i1 %358, label %352, label %351
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: optsize
declare float @_ZNK2sw4halfcvfEv(%"class.sw::half"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare float @powf(float, float) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_GLOBAL__sub_I_Constants.cpp() #0 section ".text.startup" {
  tail call void @_ZN2sw9ConstantsC2Ev(%"struct.sw::Constants"* nonnull @_ZN2sw9constantsE) #4
  ret void
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
