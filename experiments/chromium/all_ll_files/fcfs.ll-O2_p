; ModuleID = '../../third_party/fontconfig/src/src/fcfs.c'
source_filename = "../../third_party/fontconfig/src/src/fcfs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcRef = type { i32 }
%struct._FcSerialize = type { i64, %struct._FcCharSetFreezer*, i8*, [8191 x %struct._FcSerializeBucket*] }
%struct._FcCharSetFreezer = type opaque
%struct._FcSerializeBucket = type { %struct._FcSerializeBucket*, i8*, i64 }

@FcFontSetCreate = hidden alias %struct._FcFontSet* (), %struct._FcFontSet* ()* @IA__FcFontSetCreate
@FcFontSetDestroy = hidden alias void (%struct._FcFontSet*), void (%struct._FcFontSet*)* @IA__FcFontSetDestroy
@FcFontSetAdd = hidden alias i32 (%struct._FcFontSet*, %struct._FcPattern*), i32 (%struct._FcFontSet*, %struct._FcPattern*)* @IA__FcFontSetAdd

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct._FcFontSet* @IA__FcFontSetCreate() #0 {
  %1 = tail call noalias i8* @malloc(i64 16) #6
  %2 = icmp eq i8* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct._FcFontSet*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 16, i1 false)
  br label %5

5:                                                ; preds = %0, %3
  %6 = phi %struct._FcFontSet* [ %4, %3 ], [ null, %0 ]
  ret %struct._FcFontSet* %6
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcFontSetDestroy(%struct._FcFontSet* nocapture) #2 {
  %2 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 2
  %6 = load %struct._FcPattern**, %struct._FcPattern*** %5, align 8
  br i1 %4, label %7, label %17

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %12, %7 ], [ 0, %1 ]
  %9 = phi %struct._FcPattern** [ %16, %7 ], [ %6, %1 ]
  %10 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %9, i64 %8
  %11 = load %struct._FcPattern*, %struct._FcPattern** %10, align 8
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* %11) #6
  %12 = add nuw nsw i64 %8, 1
  %13 = load i32, i32* %2, align 8
  %14 = sext i32 %13 to i64
  %15 = icmp slt i64 %12, %14
  %16 = load %struct._FcPattern**, %struct._FcPattern*** %5, align 8
  br i1 %15, label %7, label %17

17:                                               ; preds = %7, %1
  %18 = phi %struct._FcPattern** [ %6, %1 ], [ %16, %7 ]
  %19 = icmp eq %struct._FcPattern** %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = bitcast %struct._FcPattern** %18 to i8*
  tail call void @free(i8* %21) #6
  br label %22

22:                                               ; preds = %17, %20
  %23 = bitcast %struct._FcFontSet* %0 to i8*
  tail call void @free(i8* %23) #6
  ret void
}

declare hidden void @IA__FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcFontSetAdd(%struct._FcFontSet* nocapture, %struct._FcPattern*) #2 {
  %3 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 2
  %10 = load %struct._FcPattern**, %struct._FcPattern*** %9, align 8
  br label %32

11:                                               ; preds = %2
  %12 = add nsw i32 %4, 32
  %13 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 2
  %14 = load %struct._FcPattern**, %struct._FcPattern*** %13, align 8
  %15 = icmp eq %struct._FcPattern** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = bitcast %struct._FcPattern** %14 to i8*
  %18 = sext i32 %12 to i64
  %19 = shl nsw i64 %18, 3
  %20 = tail call i8* @realloc(i8* nonnull %17, i64 %19) #6
  br label %25

21:                                               ; preds = %11
  %22 = sext i32 %12 to i64
  %23 = shl nsw i64 %22, 3
  %24 = tail call noalias i8* @malloc(i64 %23) #6
  br label %25

25:                                               ; preds = %21, %16
  %26 = phi i8* [ %20, %16 ], [ %24, %21 ]
  %27 = icmp eq i8* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %25
  store i32 %12, i32* %5, align 4
  %29 = bitcast %struct._FcPattern*** %13 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast i8* %26 to %struct._FcPattern**
  %31 = load i32, i32* %3, align 8
  br label %32

32:                                               ; preds = %8, %28
  %33 = phi i32 [ %4, %8 ], [ %31, %28 ]
  %34 = phi %struct._FcPattern** [ %10, %8 ], [ %30, %28 ]
  %35 = add nsw i32 %33, 1
  store i32 %35, i32* %3, align 8
  %36 = sext i32 %33 to i64
  %37 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %34, i64 %36
  store %struct._FcPattern* %1, %struct._FcPattern** %37, align 8
  br label %38

38:                                               ; preds = %25, %32
  %39 = phi i32 [ 1, %32 ], [ 0, %25 ]
  ret i32 %39
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcFontSetSerializeAlloc(%struct._FcSerialize*, %struct._FcFontSet*) local_unnamed_addr #2 {
  %3 = bitcast %struct._FcFontSet* %1 to i8*
  %4 = tail call i32 @FcSerializeAlloc(%struct._FcSerialize* %0, i8* %3, i32 16) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %1, i64 0, i32 2
  %8 = bitcast %struct._FcPattern*** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = shl i32 %11, 3
  %13 = tail call i32 @FcSerializeAlloc(%struct._FcSerialize* %0, i8* %9, i32 %12) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %30, label %15

15:                                               ; preds = %6
  %16 = load i32, i32* %10, align 8
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %22, label %30

18:                                               ; preds = %22
  %19 = load i32, i32* %10, align 8
  %20 = sext i32 %19 to i64
  %21 = icmp slt i64 %29, %20
  br i1 %21, label %22, label %30

22:                                               ; preds = %15, %18
  %23 = phi i64 [ %29, %18 ], [ 0, %15 ]
  %24 = load %struct._FcPattern**, %struct._FcPattern*** %7, align 8
  %25 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %24, i64 %23
  %26 = load %struct._FcPattern*, %struct._FcPattern** %25, align 8
  %27 = tail call i32 @FcPatternSerializeAlloc(%struct._FcSerialize* %0, %struct._FcPattern* %26) #6
  %28 = icmp eq i32 %27, 0
  %29 = add nuw nsw i64 %23, 1
  br i1 %28, label %30, label %18

30:                                               ; preds = %22, %18, %15, %6, %2
  %31 = phi i32 [ 0, %2 ], [ 0, %6 ], [ 1, %15 ], [ 0, %22 ], [ 1, %18 ]
  ret i32 %31
}

declare hidden i32 @FcSerializeAlloc(%struct._FcSerialize*, i8*, i32) local_unnamed_addr #3

declare hidden i32 @FcPatternSerializeAlloc(%struct._FcSerialize*, %struct._FcPattern*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcFontSet* @FcFontSetSerialize(%struct._FcSerialize*, %struct._FcFontSet*) local_unnamed_addr #2 {
  %3 = bitcast %struct._FcFontSet* %1 to i8*
  %4 = tail call i8* @FcSerializePtr(%struct._FcSerialize* %0, i8* %3) #6
  %5 = bitcast i8* %4 to %struct._FcFontSet*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %3, i64 16, i1 false)
  %8 = bitcast i8* %4 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 4
  %11 = bitcast i8* %10 to i32*
  store i32 %9, i32* %11, align 4
  %12 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %1, i64 0, i32 2
  %13 = bitcast %struct._FcPattern*** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i8* @FcSerializePtr(%struct._FcSerialize* %0, i8* %14) #6
  %16 = bitcast i8* %15 to %struct._FcPattern**
  %17 = icmp eq i8* %15, null
  br i1 %17, label %46, label %18

18:                                               ; preds = %7
  %19 = ptrtoint i8* %15 to i64
  %20 = ptrtoint i8* %4 to i64
  %21 = sub nsw i64 %19, %20
  %22 = or i64 %21, 1
  %23 = inttoptr i64 %22 to %struct._FcPattern**
  %24 = getelementptr inbounds i8, i8* %4, i64 8
  %25 = bitcast i8* %24 to %struct._FcPattern***
  store %struct._FcPattern** %23, %struct._FcPattern*** %25, align 8
  %26 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %1, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %46

29:                                               ; preds = %18, %36
  %30 = phi i64 [ %42, %36 ], [ 0, %18 ]
  %31 = load %struct._FcPattern**, %struct._FcPattern*** %12, align 8
  %32 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %31, i64 %30
  %33 = load %struct._FcPattern*, %struct._FcPattern** %32, align 8
  %34 = tail call %struct._FcPattern* @FcPatternSerialize(%struct._FcSerialize* %0, %struct._FcPattern* %33) #6
  %35 = icmp eq %struct._FcPattern* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %29
  %37 = ptrtoint %struct._FcPattern* %34 to i64
  %38 = sub nsw i64 %37, %20
  %39 = or i64 %38, 1
  %40 = inttoptr i64 %39 to %struct._FcPattern*
  %41 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %16, i64 %30
  store %struct._FcPattern* %40, %struct._FcPattern** %41, align 8
  %42 = add nuw nsw i64 %30, 1
  %43 = load i32, i32* %26, align 8
  %44 = sext i32 %43 to i64
  %45 = icmp slt i64 %42, %44
  br i1 %45, label %29, label %46

46:                                               ; preds = %29, %36, %18, %7, %2
  %47 = phi %struct._FcFontSet* [ null, %2 ], [ null, %7 ], [ %5, %18 ], [ null, %29 ], [ %5, %36 ]
  ret %struct._FcFontSet* %47
}

declare hidden i8* @FcSerializePtr(%struct._FcSerialize*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare hidden %struct._FcPattern* @FcPatternSerialize(%struct._FcSerialize*, %struct._FcPattern*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcFontSet* @FcFontSetDeserialize(%struct._FcFontSet*) local_unnamed_addr #2 {
  %2 = tail call noalias i8* @malloc(i64 16) #6
  %3 = icmp eq i8* %2, null
  br i1 %3, label %97, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct._FcFontSet*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false) #6
  %6 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %97

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 2
  %11 = ptrtoint %struct._FcFontSet* %0 to i64
  %12 = bitcast i8* %2 to i32*
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i8**
  br label %17

17:                                               ; preds = %9, %63
  %18 = phi i8* [ null, %9 ], [ %64, %63 ]
  %19 = phi %struct._FcPattern** [ null, %9 ], [ %65, %63 ]
  %20 = phi i8* [ null, %9 ], [ %66, %63 ]
  %21 = phi %struct._FcPattern** [ null, %9 ], [ %67, %63 ]
  %22 = phi i8* [ null, %9 ], [ %68, %63 ]
  %23 = phi %struct._FcPattern** [ null, %9 ], [ %69, %63 ]
  %24 = phi %struct._FcPattern** [ null, %9 ], [ %70, %63 ]
  %25 = phi i32 [ 0, %9 ], [ %71, %63 ]
  %26 = phi i32 [ 0, %9 ], [ %72, %63 ]
  %27 = phi i64 [ 0, %9 ], [ %75, %63 ]
  %28 = load %struct._FcPattern**, %struct._FcPattern*** %10, align 8
  %29 = ptrtoint %struct._FcPattern** %28 to i64
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %17
  %33 = and i64 %29, -2
  %34 = add nsw i64 %33, %11
  %35 = inttoptr i64 %34 to %struct._FcPattern**
  %36 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %35, i64 %27
  %37 = bitcast %struct._FcPattern** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, -2
  %40 = add nsw i64 %39, %11
  %41 = inttoptr i64 %40 to %struct._FcPattern*
  br label %45

42:                                               ; preds = %17
  %43 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %28, i64 %27
  %44 = load %struct._FcPattern*, %struct._FcPattern** %43, align 8
  br label %45

45:                                               ; preds = %42, %32
  %46 = phi %struct._FcPattern* [ %41, %32 ], [ %44, %42 ]
  %47 = tail call %struct._FcPattern* @IA__FcPatternDuplicate(%struct._FcPattern* %46) #6
  %48 = icmp eq i32 %26, %25
  br i1 %48, label %49, label %63

49:                                               ; preds = %45
  %50 = add nsw i32 %25, 32
  %51 = icmp eq %struct._FcPattern** %23, null
  %52 = sext i32 %50 to i64
  %53 = shl nsw i64 %52, 3
  br i1 %51, label %56, label %54

54:                                               ; preds = %49
  %55 = tail call i8* @realloc(i8* nonnull %22, i64 %53) #6
  br label %58

56:                                               ; preds = %49
  %57 = tail call noalias i8* @malloc(i64 %53) #6
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i8* [ %55, %54 ], [ %57, %56 ]
  %60 = icmp eq i8* %59, null
  br i1 %60, label %79, label %61

61:                                               ; preds = %58
  store i32 %50, i32* %14, align 4
  store i8* %59, i8** %16, align 8
  %62 = bitcast i8* %59 to %struct._FcPattern**
  br label %63

63:                                               ; preds = %45, %61
  %64 = phi i8* [ %59, %61 ], [ %18, %45 ]
  %65 = phi %struct._FcPattern** [ %62, %61 ], [ %19, %45 ]
  %66 = phi i8* [ %59, %61 ], [ %20, %45 ]
  %67 = phi %struct._FcPattern** [ %62, %61 ], [ %21, %45 ]
  %68 = phi i8* [ %59, %61 ], [ %22, %45 ]
  %69 = phi %struct._FcPattern** [ %62, %61 ], [ %23, %45 ]
  %70 = phi %struct._FcPattern** [ %62, %61 ], [ %24, %45 ]
  %71 = phi i32 [ %50, %61 ], [ %25, %45 ]
  %72 = add nuw nsw i32 %26, 1
  store i32 %72, i32* %12, align 8
  %73 = zext i32 %26 to i64
  %74 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %70, i64 %73
  store %struct._FcPattern* %47, %struct._FcPattern** %74, align 8
  %75 = add nuw nsw i64 %27, 1
  %76 = load i32, i32* %6, align 8
  %77 = sext i32 %76 to i64
  %78 = icmp slt i64 %75, %77
  br i1 %78, label %17, label %97

79:                                               ; preds = %58
  %80 = icmp sgt i32 %25, 0
  br i1 %80, label %81, label %91

81:                                               ; preds = %79
  %82 = sext i32 %25 to i64
  %83 = load %struct._FcPattern*, %struct._FcPattern** %21, align 8
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* %83) #6
  %84 = icmp sgt i32 %25, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81, %85
  %86 = phi i64 [ %89, %85 ], [ 1, %81 ]
  %87 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %19, i64 %86
  %88 = load %struct._FcPattern*, %struct._FcPattern** %87, align 8
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* %88) #6
  %89 = add nuw nsw i64 %86, 1
  %90 = icmp slt i64 %89, %82
  br i1 %90, label %85, label %91, !llvm.loop !2

91:                                               ; preds = %81, %85, %79
  %92 = phi i8* [ %20, %79 ], [ %18, %85 ], [ %18, %81 ]
  %93 = phi %struct._FcPattern** [ %21, %79 ], [ %19, %85 ], [ %19, %81 ]
  %94 = icmp eq %struct._FcPattern** %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  tail call void @free(i8* %92) #6
  br label %96

96:                                               ; preds = %91, %95
  tail call void @free(i8* %2) #6
  br label %97

97:                                               ; preds = %63, %4, %1, %96
  %98 = phi %struct._FcFontSet* [ null, %96 ], [ null, %1 ], [ %5, %4 ], [ %5, %63 ]
  ret %struct._FcFontSet* %98
}

declare hidden %struct._FcPattern* @IA__FcPatternDuplicate(%struct._FcPattern*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
