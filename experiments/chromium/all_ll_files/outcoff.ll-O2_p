; ModuleID = '../../third_party/nasm/output/outcoff.c'
source_filename = "../../third_party/nasm/output/outcoff.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.SAA = type { i64, i64, i64, i64, i64, i64, i8**, i64, i64, i8**, i64, i64, i8** }
%struct.coff_Section = type { %struct.SAA*, i32, i32, i32, %struct.coff_Reloc*, %struct.coff_Reloc**, i32, i32, i32, i8*, i32, i32, i32, i64 }
%struct.coff_Reloc = type { %struct.coff_Reloc*, i32, i32, i32, i16 }
%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.ofmt = type { i8*, i8*, i8*, i32, i32, %struct.dfmt**, %struct.dfmt*, i8*, void ()*, void ()*, void (%struct.out_data*)*, void (i32, i8*, i32, i64, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, i32 (i8*, i32*)*, i32 (i8*, i32, i32, i32*, i8*)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.RAA = type opaque
%struct.tagString = type { %struct.tagString*, i32, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.coff_DebugInfo = type { i32, i32, i64, %struct.coff_Section* }

@win32 = common hidden local_unnamed_addr global i8 0, align 1
@win64 = common hidden local_unnamed_addr global i8 0, align 1
@.str = private unnamed_addr constant [6 x i8] c".text\00", align 1
@def_seg = internal unnamed_addr global i32 0, align 4
@strslen = internal unnamed_addr global i32 0, align 4
@coff_strs = common hidden local_unnamed_addr global %struct.SAA* null, align 8
@coff_nsects = common hidden local_unnamed_addr global i32 0, align 4
@sectlen = internal unnamed_addr global i32 0, align 4
@coff_sects = common hidden local_unnamed_addr global %struct.coff_Section** null, align 8
@.str.1 = private unnamed_addr constant [40 x i8] c"COFF (i386) (DJGPP, some Unix variants)\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"coff\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c".o\00", align 1
@null_debug_arr = external constant [2 x %struct.dfmt*], align 16
@null_debug_form = external constant %struct.dfmt, align 8
@coff_stdmac = external constant [0 x i8], align 1
@coff_pragma_list = internal constant [2 x %struct.pragma_facility] [%struct.pragma_facility { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.pragma*)* null }, %struct.pragma_facility zeroinitializer], align 16
@of_coff = hidden constant %struct.ofmt { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32 32, %struct.dfmt** getelementptr inbounds ([2 x %struct.dfmt*], [2 x %struct.dfmt*]* @null_debug_arr, i32 0, i32 0), %struct.dfmt* @null_debug_form, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @coff_stdmac, i32 0, i32 0), void ()* @coff_std_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @coff_out, void (i8*, i32, i64, i32, i8*)* @coff_deflabel, i32 (i8*, i32*)* @coff_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @coff_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @coff_directives, void ()* @coff_cleanup, %struct.pragma_facility* getelementptr inbounds ([2 x %struct.pragma_facility], [2 x %struct.pragma_facility]* @coff_pragma_list, i32 0, i32 0) }, align 8
@.str.4 = private unnamed_addr constant [41 x i8] c"Microsoft extended COFF for Win32 (i386)\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"win32\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c".obj\00", align 1
@win32_debug_arr = internal constant [2 x %struct.dfmt*] [%struct.dfmt* @df_cv8, %struct.dfmt* null], align 16
@df_cv8 = external constant %struct.dfmt, align 8
@coff_win_pragma_list = internal constant [3 x %struct.pragma_facility] [%struct.pragma_facility { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i32 (%struct.pragma*)* null }, %struct.pragma_facility { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.pragma*)* null }, %struct.pragma_facility zeroinitializer], align 16
@of_win32 = hidden local_unnamed_addr constant %struct.ofmt { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 32, %struct.dfmt** getelementptr inbounds ([2 x %struct.dfmt*], [2 x %struct.dfmt*]* @win32_debug_arr, i32 0, i32 0), %struct.dfmt* @df_cv8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @coff_stdmac, i32 0, i32 0), void ()* @coff_win32_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @coff_out, void (i8*, i32, i64, i32, i8*)* @coff_deflabel, i32 (i8*, i32*)* @coff_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @coff_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @coff_directives, void ()* @coff_cleanup, %struct.pragma_facility* getelementptr inbounds ([3 x %struct.pragma_facility], [3 x %struct.pragma_facility]* @coff_win_pragma_list, i32 0, i32 0) }, align 8
@.str.7 = private unnamed_addr constant [43 x i8] c"Microsoft extended COFF for Win64 (x86-64)\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"win64\00", align 1
@win64_debug_arr = internal constant [2 x %struct.dfmt*] [%struct.dfmt* @df_cv8, %struct.dfmt* null], align 16
@of_win64 = hidden local_unnamed_addr constant %struct.ofmt { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 64, %struct.dfmt** getelementptr inbounds ([2 x %struct.dfmt*], [2 x %struct.dfmt*]* @win64_debug_arr, i32 0, i32 0), %struct.dfmt* @df_cv8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @coff_stdmac, i32 0, i32 0), void ()* @coff_win64_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @coff_out, void (i8*, i32, i64, i32, i8*)* @coff_deflabel, i32 (i8*, i32*)* @coff_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @coff_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @coff_directives, void ()* @coff_cleanup, %struct.pragma_facility* getelementptr inbounds ([3 x %struct.pragma_facility], [3 x %struct.pragma_facility]* @coff_win_pragma_list, i32 0, i32 0) }, align 8
@coff_syms = common hidden local_unnamed_addr global %struct.SAA* null, align 8
@coff_nsyms = common hidden local_unnamed_addr global i32 0, align 4
@bsym = internal unnamed_addr global %struct.RAA* null, align 8
@symval = internal unnamed_addr global %struct.RAA* null, align 8
@.str.9 = private unnamed_addr constant [41 x i8] c"WRT not supported by COFF output formats\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"strange segment conditions in COFF driver\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c".pdata\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c".xdata\00", align 1
@imagebase_sect = internal unnamed_addr global i32 0, align 4
@.str.13 = private unnamed_addr constant [58 x i8] c"attempt to initialize memory in BSS section `%s': ignored\00", align 1
@dfmt = external local_unnamed_addr global %struct.dfmt*, align 8
@.str.14 = private unnamed_addr constant [62 x i8] c"uninitialised space declared in non-BSS section `%s': zeroing\00", align 1
@.str.15 = private unnamed_addr constant [52 x i8] c"COFF format does not support non-32-bit relocations\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"COFF format does not support WRT types\00", align 1
@.str.17 = private unnamed_addr constant [53 x i8] c"COFF format does not support segment base references\00", align 1
@.str.18 = private unnamed_addr constant [61 x i8] c"operand size mismatch: 'wrt ..imagebase' is a 32-bit operand\00", align 1
@.str.19 = private unnamed_addr constant [48 x i8] c"COFF format does not support 16-bit relocations\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"intra-segment OUT_REL4ADR\00", align 1
@.str.21 = private unnamed_addr constant [80 x i8] c"Win32 COFF does not correctly support relative references to absolute addresses\00", align 1
@.str.22 = private unnamed_addr constant [54 x i8] c"COFF format does not support any special symbol types\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"..imagebase\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"unrecognized special symbol `%s'\00", align 1
@.str.25 = private unnamed_addr constant [56 x i8] c"COFF section names limited to 8 characters:  truncating\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"rdata\00", align 1
@.str.30 = private unnamed_addr constant [55 x i8] c"standard COFF does not support read-only data sections\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"bss\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.33 = private unnamed_addr constant [54 x i8] c"standard COFF does not support informational sections\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"align=\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"0123456789\00", align 1
@.str.36 = private unnamed_addr constant [35 x i8] c"argument to `align' is not numeric\00", align 1
@.str.37 = private unnamed_addr constant [42 x i8] c"argument to `align' is not a power of two\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"maximum alignment in COFF is %d bytes\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c".data\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c".rdata\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c".bss\00", align 1
@.str.42 = private unnamed_addr constant [60 x i8] c"section attributes changed on redeclaration of section `%s'\00", align 1
@.str.43 = private unnamed_addr constant [40 x i8] c"../../third_party/nasm/output/outcoff.c\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"padding <= sizeof buffer\00", align 1
@nasm_ctype_tab = external local_unnamed_addr global [256 x i16], align 16
@_passn = external local_unnamed_addr global i64, align 8
@.str.45 = private unnamed_addr constant [40 x i8] c"`export' directive requires export name\00", align 1
@.str.46 = private unnamed_addr constant [35 x i8] c"unrecognized export qualifier `%s'\00", align 1
@coff_directives.sxseg = internal unnamed_addr global i32 -1, align 4
@.str.47 = private unnamed_addr constant [8 x i8] c".sxdata\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"`safeseh' directive requires valid symbol\00", align 1
@_pass_type = external local_unnamed_addr global i32, align 4
@Exports = internal unnamed_addr global %struct.tagString* null, align 8
@.str.49 = private unnamed_addr constant [9 x i8] c".drectve\00", align 1
@directive_sec = internal unnamed_addr global %struct.coff_Section* null, align 8
@.str.50 = private unnamed_addr constant [9 x i8] c"@feat.00\00", align 1
@initsym = internal unnamed_addr global i32 0, align 4
@ofile = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.51 = private unnamed_addr constant [9 x i8] c"-export:\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c" \00", align 1
@ofmt = external local_unnamed_addr global %struct.ofmt*, align 8
@.str.53 = private unnamed_addr constant [43 x i8] c"Too many relocations (%d) for section `%s'\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c".file\00", align 1
@inname = external local_unnamed_addr global i8*, align 8
@.str.56 = private unnamed_addr constant [4 x i8] c"win\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @coff_make_section(i8*, i32) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @nasm_zalloc(i64 88) #11
  %4 = load i8, i8* @win32, align 1, !range !2
  %5 = load i8, i8* @win64, align 1, !range !2
  %6 = or i8 %5, %4
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %7, i32 128, i32 -1070595968
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = tail call %struct.SAA* @saa_init(i64 1) #12
  %12 = bitcast i8* %3 to %struct.SAA**
  store %struct.SAA* %11, %struct.SAA** %12, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds i8, i8* %3, i64 24
  %15 = getelementptr inbounds i8, i8* %3, i64 32
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = load i32, i32* @def_seg, align 4
  br label %23

21:                                               ; preds = %13
  %22 = tail call i32 @seg_alloc() #12
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i32 [ %22, %21 ], [ %20, %19 ]
  %25 = getelementptr inbounds i8, i8* %3, i64 16
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %3, i64 64
  %28 = bitcast i8* %27 to i32*
  store i32 -1, i32* %28, align 8
  %29 = tail call i64 @strlen(i8* %0) #13
  %30 = icmp ugt i64 %29, 8
  br i1 %30, label %31, label %44

31:                                               ; preds = %23
  %32 = load i8, i8* @win32, align 1, !range !2
  %33 = load i8, i8* @win64, align 1
  %34 = or i8 %33, %32
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = load i32, i32* @strslen, align 4
  %38 = add i32 %37, 4
  store i32 %38, i32* %28, align 8
  %39 = load %struct.SAA*, %struct.SAA** @coff_strs, align 8
  %40 = add i64 %29, 1
  tail call void @saa_wbytes(%struct.SAA* %39, i8* %0, i64 %40) #12
  %41 = load i32, i32* @strslen, align 4
  %42 = trunc i64 %40 to i32
  %43 = add i32 %41, %42
  store i32 %43, i32* @strslen, align 4
  br label %44

44:                                               ; preds = %31, %36, %23
  %45 = phi i64 [ %29, %36 ], [ %29, %23 ], [ 8, %31 ]
  %46 = add i64 %45, 1
  %47 = tail call noalias i8* @nasm_malloc(i64 %46) #11
  %48 = getelementptr inbounds i8, i8* %3, i64 56
  %49 = bitcast i8* %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = tail call i8* @strncpy(i8* %47, i8* %0, i64 %45) #12
  %51 = load i8*, i8** %49, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %45
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds i8, i8* %3, i64 40
  %54 = bitcast i8* %53 to i32*
  store i32 %1, i32* %54, align 8
  %55 = load i32, i32* @coff_nsects, align 4
  %56 = load i32, i32* @sectlen, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %44
  %59 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  br label %68

60:                                               ; preds = %44
  %61 = add nsw i32 %56, 32
  store i32 %61, i32* @sectlen, align 4
  %62 = load i8*, i8** bitcast (%struct.coff_Section*** @coff_sects to i8**), align 8
  %63 = sext i32 %61 to i64
  %64 = shl nsw i64 %63, 3
  %65 = tail call i8* @nasm_realloc(i8* %62, i64 %64) #14
  store i8* %65, i8** bitcast (%struct.coff_Section*** @coff_sects to i8**), align 8
  %66 = bitcast i8* %65 to %struct.coff_Section**
  %67 = load i32, i32* @coff_nsects, align 4
  br label %68

68:                                               ; preds = %58, %60
  %69 = phi i32 [ %55, %58 ], [ %67, %60 ]
  %70 = phi %struct.coff_Section** [ %59, %58 ], [ %66, %60 ]
  %71 = add nsw i32 %69, 1
  store i32 %71, i32* @coff_nsects, align 4
  %72 = sext i32 %69 to i64
  %73 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %70, i64 %72
  %74 = bitcast %struct.coff_Section** %73 to i8**
  store i8* %3, i8** %74, align 8
  %75 = load i32, i32* @coff_nsects, align 4
  %76 = add nsw i32 %75, -1
  ret i32 %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_zalloc(i64) local_unnamed_addr #2

declare %struct.SAA* @saa_init(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare i32 @seg_alloc() local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @saa_wbytes(%struct.SAA*, i8*, i64) local_unnamed_addr #3

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #6

; Function Attrs: allocsize(1)
declare i8* @nasm_realloc(i8*, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @coff_std_init() #0 {
  store i8 0, i8* @win64, align 1
  store i8 0, i8* @win32, align 1
  store %struct.coff_Section** null, %struct.coff_Section*** @coff_sects, align 8
  store i32 0, i32* @sectlen, align 4
  store i32 0, i32* @coff_nsects, align 4
  %1 = tail call %struct.SAA* @saa_init(i64 32) #12
  store %struct.SAA* %1, %struct.SAA** @coff_syms, align 8
  store i32 0, i32* @coff_nsyms, align 4
  store %struct.RAA* null, %struct.RAA** @bsym, align 8
  store %struct.RAA* null, %struct.RAA** @symval, align 8
  %2 = tail call %struct.SAA* @saa_init(i64 1) #12
  store %struct.SAA* %2, %struct.SAA** @coff_strs, align 8
  store i32 0, i32* @strslen, align 4
  %3 = tail call i32 @seg_alloc() #12
  store i32 %3, i32* @def_seg, align 4
  ret void
}

declare void @null_reset() #3

declare void @nasm_do_legacy_output(%struct.out_data*) #3

; Function Attrs: nounwind ssp uwtable
define internal void @coff_out(i32, i8*, i32, i64, i32, i32) #0 {
  %7 = sub i64 0, %3
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.coff_DebugInfo, align 8
  %11 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = icmp eq i32 %5, -1
  store i64 -6148914691236517206, i64* %8, align 8
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = load i8, i8* @win64, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0)) #12
  br label %17

17:                                               ; preds = %13, %6, %16
  %18 = phi i32 [ %5, %13 ], [ -1, %16 ], [ -1, %6 ]
  %19 = load i32, i32* @coff_nsects, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %17
  %22 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %23 = sext i32 %19 to i64
  br label %26

24:                                               ; preds = %26
  %25 = icmp slt i64 %33, %23
  br i1 %25, label %26, label %36

26:                                               ; preds = %21, %24
  %27 = phi i64 [ 0, %21 ], [ %33, %24 ]
  %28 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %22, i64 %27
  %29 = load %struct.coff_Section*, %struct.coff_Section** %28, align 8
  %30 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, %0
  %33 = add nuw nsw i64 %27, 1
  br i1 %32, label %34, label %24

34:                                               ; preds = %26
  %35 = icmp eq %struct.coff_Section* %29, null
  br i1 %35, label %36, label %48

36:                                               ; preds = %24, %17, %34
  %37 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #12
  store i32 -1431655766, i32* %9, align 4
  %38 = call i32 @coff_section_names(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull %9)
  %39 = icmp eq i32 %38, %0
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

41:                                               ; preds = %36
  %42 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %43 = load i32, i32* @coff_nsects, align 4
  %44 = add nsw i32 %43, -1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %42, i64 %45
  %47 = load %struct.coff_Section*, %struct.coff_Section** %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #12
  br label %48

48:                                               ; preds = %34, %41
  %49 = phi %struct.coff_Section* [ %29, %34 ], [ %47, %41 ]
  %50 = load i8, i8* @win64, align 1, !range !2
  %51 = icmp ne i8 %50, 0
  %52 = icmp eq i32 %18, -1
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %64

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 9
  %56 = load i8*, i8** %55, align 8
  %57 = tail call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #13
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = tail call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #13
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %59, %54
  %63 = load i32, i32* @imagebase_sect, align 4
  br label %64

64:                                               ; preds = %59, %62, %48
  %65 = phi i32 [ -1, %59 ], [ %63, %62 ], [ %18, %48 ]
  %66 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 0
  %67 = load %struct.SAA*, %struct.SAA** %66, align 8
  %68 = icmp eq %struct.SAA* %67, null
  %69 = icmp ne i32 %2, 1
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %79

71:                                               ; preds = %64
  %72 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 9
  %73 = load i8*, i8** %72, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.13, i64 0, i64 0), i8* %73) #12
  %74 = tail call i64 @realsize(i32 %2, i64 %3) #12
  %75 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = trunc i64 %74 to i32
  %78 = add i32 %76, %77
  store i32 %78, i32* %75, align 8
  br label %246

79:                                               ; preds = %64
  store i64 0, i64* %8, align 8
  %80 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %81 = icmp eq %struct.dfmt* %80, null
  br i1 %81, label %107, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %80, i64 0, i32 7
  %84 = load void (i32, i8*)*, void (i32, i8*)** %83, align 8
  %85 = icmp eq void (i32, i8*)* %84, null
  br i1 %85, label %107, label %86

86:                                               ; preds = %82
  %87 = bitcast %struct.coff_DebugInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #12
  %88 = getelementptr inbounds %struct.coff_DebugInfo, %struct.coff_DebugInfo* %10, i64 0, i32 0
  %89 = getelementptr inbounds %struct.coff_DebugInfo, %struct.coff_DebugInfo* %10, i64 0, i32 1
  %90 = getelementptr inbounds %struct.coff_DebugInfo, %struct.coff_DebugInfo* %10, i64 0, i32 2
  %91 = getelementptr inbounds %struct.coff_DebugInfo, %struct.coff_DebugInfo* %10, i64 0, i32 3
  %92 = getelementptr inbounds %struct.coff_DebugInfo, %struct.coff_DebugInfo* %10, i64 0, i32 2
  store i64 -6148914691236517206, i64* %92, align 8
  store i32 %0, i32* %88, align 8
  store i32 %4, i32* %89, align 4
  store %struct.coff_Section* %49, %struct.coff_Section** %91, align 8
  %93 = icmp eq i32 %2, 3
  br i1 %93, label %94, label %99

94:                                               ; preds = %86
  %95 = trunc i64 %3 to i32
  %96 = icmp slt i32 %95, 0
  %97 = select i1 %96, i64 %7, i64 %3
  %98 = and i64 %97, 4294967295
  br label %104

99:                                               ; preds = %86
  %100 = tail call i64 @realsize(i32 %2, i64 %3) #12
  %101 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %102 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %101, i64 0, i32 7
  %103 = load void (i32, i8*)*, void (i32, i8*)** %102, align 8
  br label %104

104:                                              ; preds = %99, %94
  %105 = phi void (i32, i8*)* [ %103, %99 ], [ %84, %94 ]
  %106 = phi i64 [ %100, %99 ], [ %98, %94 ]
  store i64 %106, i64* %90, align 8
  call void %105(i32 %2, i8* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #12
  br label %107

107:                                              ; preds = %82, %79, %104
  switch i32 %2, label %246 [
    i32 1, label %108
    i32 0, label %125
    i32 3, label %132
    i32 7, label %197
    i32 8, label %198
  ]

108:                                              ; preds = %107
  %109 = load %struct.SAA*, %struct.SAA** %66, align 8
  %110 = icmp eq %struct.SAA* %109, null
  br i1 %110, label %120, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 9
  %113 = load i8*, i8** %112, align 8
  call void (i32, i8*, ...) @nasm_warn(i32 2097152, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.14, i64 0, i64 0), i8* %113) #12
  %114 = trunc i64 %3 to i32
  %115 = load %struct.SAA*, %struct.SAA** %66, align 8
  %116 = and i64 %3, 4294967295
  call void @saa_wbytes(%struct.SAA* %115, i8* null, i64 %116) #12
  %117 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %114
  store i32 %119, i32* %117, align 8
  br label %246

120:                                              ; preds = %108
  %121 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = trunc i64 %3 to i32
  %124 = add i32 %122, %123
  store i32 %124, i32* %121, align 8
  br label %246

125:                                              ; preds = %107
  %126 = trunc i64 %3 to i32
  %127 = load %struct.SAA*, %struct.SAA** %66, align 8
  %128 = and i64 %3, 4294967295
  call void @saa_wbytes(%struct.SAA* %127, i8* %1, i64 %128) #12
  %129 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %130, %126
  store i32 %131, i32* %129, align 8
  br label %246

132:                                              ; preds = %107
  %133 = trunc i64 %3 to i32
  %134 = icmp slt i32 %133, 0
  %135 = sub nsw i32 0, %133
  %136 = select i1 %134, i32 %135, i32 %133
  %137 = load i8, i8* @win64, align 1, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %168

139:                                              ; preds = %132
  %140 = icmp eq i32 %136, 4
  %141 = and i32 %65, %4
  %142 = icmp eq i32 %141, -1
  %143 = or i1 %140, %142
  br i1 %143, label %145, label %144

144:                                              ; preds = %139
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15, i64 0, i64 0)) #12
  br label %246

145:                                              ; preds = %139
  br i1 %142, label %156, label %146

146:                                              ; preds = %145
  %147 = icmp eq i32 %65, -1
  br i1 %147, label %149, label %148

148:                                              ; preds = %146
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0)) #12
  br label %156

149:                                              ; preds = %146
  %150 = and i32 %4, 1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %153, label %152

152:                                              ; preds = %149
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0)) #12
  br label %156

153:                                              ; preds = %149
  %154 = call fastcc i32 @coff_add_reloc(%struct.coff_Section* %49, i32 %4, i16 signext 6)
  %155 = sext i32 %154 to i64
  br label %156

156:                                              ; preds = %145, %148, %153, %152
  %157 = phi i64 [ 0, %148 ], [ 0, %152 ], [ %155, %153 ], [ 0, %145 ]
  %158 = bitcast i64* %8 to i32*
  %159 = bitcast i8* %1 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = add nsw i64 %160, %157
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %158, align 8
  %163 = load %struct.SAA*, %struct.SAA** %66, align 8
  %164 = zext i32 %136 to i64
  call void @saa_wbytes(%struct.SAA* %163, i8* nonnull %11, i64 %164) #12
  %165 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = add i32 %166, %136
  store i32 %167, i32* %165, align 8
  br label %246

168:                                              ; preds = %132
  %169 = icmp eq i32 %136, 8
  %170 = load i32, i32* @imagebase_sect, align 4
  %171 = icmp eq i32 %65, %170
  br i1 %169, label %172, label %184

172:                                              ; preds = %168
  br i1 %171, label %173, label %174

173:                                              ; preds = %172
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.18, i64 0, i64 0)) #12
  br label %174

174:                                              ; preds = %173, %172
  %175 = call fastcc i32 @coff_add_reloc(%struct.coff_Section* %49, i32 %4, i16 signext 1)
  %176 = bitcast i8* %1 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = sext i32 %175 to i64
  %179 = add nsw i64 %177, %178
  store i64 %179, i64* %8, align 8
  %180 = load %struct.SAA*, %struct.SAA** %66, align 8
  call void @saa_wbytes(%struct.SAA* %180, i8* nonnull %11, i64 8) #12
  %181 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = add i32 %182, 8
  store i32 %183, i32* %181, align 8
  br label %246

184:                                              ; preds = %168
  %185 = select i1 %171, i16 3, i16 2
  %186 = call fastcc i32 @coff_add_reloc(%struct.coff_Section* %49, i32 %4, i16 signext %185)
  %187 = bitcast i64* %8 to i32*
  %188 = bitcast i8* %1 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = trunc i64 %189 to i32
  %191 = add i32 %186, %190
  store i32 %191, i32* %187, align 8
  %192 = load %struct.SAA*, %struct.SAA** %66, align 8
  %193 = zext i32 %136 to i64
  call void @saa_wbytes(%struct.SAA* %192, i8* nonnull %11, i64 %193) #12
  %194 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = add i32 %195, %136
  store i32 %196, i32* %194, align 8
  br label %246

197:                                              ; preds = %107
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19, i64 0, i64 0)) #12
  br label %246

198:                                              ; preds = %107
  %199 = icmp eq i32 %4, %0
  %200 = load i8, i8* @win64, align 1
  %201 = icmp eq i8 %200, 0
  %202 = and i1 %199, %201
  br i1 %202, label %203, label %204

203:                                              ; preds = %198
  call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0)) #15
  unreachable

204:                                              ; preds = %198
  %205 = icmp ne i32 %4, -1
  %206 = load i8, i8* @win32, align 1
  %207 = icmp eq i8 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %210, label %209

209:                                              ; preds = %204
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.21, i64 0, i64 0)) #12
  br label %246

210:                                              ; preds = %204
  %211 = icmp eq i32 %4, -1
  %212 = and i32 %4, 1
  %213 = icmp eq i32 %212, 0
  %214 = or i1 %211, %213
  br i1 %214, label %216, label %215

215:                                              ; preds = %210
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0)) #12
  br label %220

216:                                              ; preds = %210
  %217 = select i1 %201, i16 20, i16 4
  %218 = call fastcc i32 @coff_add_reloc(%struct.coff_Section* %49, i32 %4, i16 signext %217)
  %219 = sext i32 %218 to i64
  br label %220

220:                                              ; preds = %216, %215
  %221 = phi i64 [ 0, %215 ], [ %219, %216 ]
  %222 = load i8, i8* @win32, align 1, !range !2
  %223 = load i8, i8* @win64, align 1, !range !2
  %224 = or i8 %223, %222
  %225 = icmp eq i8 %224, 0
  %226 = bitcast i64* %8 to i32*
  %227 = bitcast i8* %1 to i64*
  %228 = load i64, i64* %227, align 8
  br i1 %225, label %232, label %229

229:                                              ; preds = %220
  %230 = sub i64 4, %3
  %231 = add i64 %230, %228
  br label %238

232:                                              ; preds = %220
  %233 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = zext i32 %234 to i64
  %236 = sub i64 %228, %3
  %237 = sub i64 %236, %235
  br label %238

238:                                              ; preds = %232, %229
  %239 = phi i64 [ %231, %229 ], [ %237, %232 ]
  %240 = add i64 %239, %221
  %241 = trunc i64 %240 to i32
  store i32 %241, i32* %226, align 8
  %242 = load %struct.SAA*, %struct.SAA** %66, align 8
  call void @saa_wbytes(%struct.SAA* %242, i8* nonnull %11, i64 4) #12
  %243 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %49, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = add i32 %244, 4
  store i32 %245, i32* %243, align 8
  br label %246

246:                                              ; preds = %120, %111, %209, %238, %197, %125, %174, %184, %144, %156, %107, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @coff_deflabel(i8*, i32, i64, i32, i8* readnone) #0 {
  %6 = load i32, i32* @strslen, align 4
  %7 = add i32 %6, 4
  %8 = icmp eq i8* %4, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.22, i64 0, i64 0)) #12
  br label %10

10:                                               ; preds = %5, %9
  %11 = load i8, i8* %0, align 1
  %12 = icmp eq i8 %11, 46
  br i1 %12, label %13, label %25

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %0, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 46
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %0, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 64
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %107, label %24

24:                                               ; preds = %21
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0), i8* %0) #12
  br label %107

25:                                               ; preds = %17, %13, %10
  %26 = tail call i64 @strlen(i8* %0) #13
  %27 = icmp ugt i64 %26, 8
  br i1 %27, label %28, label %34

28:                                               ; preds = %25
  %29 = add i64 %26, 1
  %30 = load %struct.SAA*, %struct.SAA** @coff_strs, align 8
  tail call void @saa_wbytes(%struct.SAA* %30, i8* %0, i64 %29) #12
  %31 = load i32, i32* @strslen, align 4
  %32 = trunc i64 %29 to i32
  %33 = add i32 %31, %32
  store i32 %33, i32* @strslen, align 4
  br label %34

34:                                               ; preds = %25, %28
  %35 = phi i32 [ %7, %28 ], [ -1, %25 ]
  %36 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  %37 = tail call i8* @saa_wstruct(%struct.SAA* %36) #12
  %38 = getelementptr inbounds i8, i8* %37, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %35, i32* %39, align 4
  %40 = tail call i64 @strlen(i8* %0) #13
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds i8, i8* %37, i64 28
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 4
  %44 = icmp eq i32 %35, -1
  br i1 %44, label %45, label %47

45:                                               ; preds = %34
  %46 = tail call i8* @strcpy(i8* %37, i8* %0) #12
  br label %47

47:                                               ; preds = %45, %34
  %48 = icmp ne i32 %3, 0
  %49 = getelementptr inbounds i8, i8* %37, i64 24
  %50 = zext i1 %48 to i8
  store i8 %50, i8* %49, align 4
  %51 = getelementptr inbounds i8, i8* %37, i64 26
  %52 = bitcast i8* %51 to i16*
  store i16 0, i16* %52, align 2
  %53 = icmp eq i32 %1, -1
  %54 = getelementptr inbounds i8, i8* %37, i64 20
  %55 = bitcast i8* %54 to i32*
  br i1 %53, label %56, label %57

56:                                               ; preds = %47
  store i32 -1, i32* %55, align 4
  br label %75

57:                                               ; preds = %47
  store i32 0, i32* %55, align 4
  %58 = load i32, i32* @coff_nsects, align 4
  %59 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %60 = sext i32 %58 to i64
  br label %61

61:                                               ; preds = %64, %57
  %62 = phi i64 [ %70, %64 ], [ 0, %57 ]
  %63 = icmp slt i64 %62, %60
  br i1 %63, label %64, label %74

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %59, i64 %62
  %66 = load %struct.coff_Section*, %struct.coff_Section** %65, align 8
  %67 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %66, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, %1
  %70 = add nuw nsw i64 %62, 1
  br i1 %69, label %71, label %61

71:                                               ; preds = %64
  %72 = trunc i64 %70 to i32
  store i32 %72, i32* %55, align 4
  %73 = icmp eq i32 %72, 0
  br label %75

74:                                               ; preds = %61
  store i8 1, i8* %49, align 4
  br label %75

75:                                               ; preds = %71, %74, %56
  %76 = phi i1 [ %73, %71 ], [ true, %74 ], [ false, %56 ]
  %77 = icmp eq i32 %3, 2
  %78 = trunc i64 %2 to i32
  %79 = select i1 %76, i32 0, i32 %78
  %80 = trunc i64 %2 to i32
  %81 = select i1 %77, i32 %80, i32 %79
  %82 = getelementptr inbounds i8, i8* %37, i64 16
  %83 = bitcast i8* %82 to i32*
  store i32 %81, i32* %83, align 4
  br i1 %76, label %84, label %90

84:                                               ; preds = %75
  %85 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %86 = sext i32 %1 to i64
  %87 = load i32, i32* @coff_nsyms, align 4
  %88 = zext i32 %87 to i64
  %89 = tail call %struct.RAA* @raa_write(%struct.RAA* %85, i64 %86, i64 %88) #12
  store %struct.RAA* %89, %struct.RAA** @bsym, align 8
  br label %90

90:                                               ; preds = %84, %75
  br i1 %53, label %104, label %91

91:                                               ; preds = %90
  %92 = load %struct.RAA*, %struct.RAA** @symval, align 8
  %93 = sext i32 %1 to i64
  %94 = load i32, i32* %55, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %101

96:                                               ; preds = %91
  %97 = getelementptr inbounds i8, i8* %37, i64 16
  %98 = bitcast i8* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  br label %101

101:                                              ; preds = %91, %96
  %102 = phi i64 [ %100, %96 ], [ 0, %91 ]
  %103 = tail call %struct.RAA* @raa_write(%struct.RAA* %92, i64 %93, i64 %102) #12
  store %struct.RAA* %103, %struct.RAA** @symval, align 8
  br label %104

104:                                              ; preds = %90, %101
  %105 = load i32, i32* @coff_nsyms, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* @coff_nsyms, align 4
  br label %107

107:                                              ; preds = %24, %21, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @coff_section_names(i8*, i32* nocapture) #0 {
  %3 = alloca [8095 x i8], align 16
  %4 = icmp eq i8* %0, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = load i8, i8* @win64, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %7, i32 32, i32 64
  store i32 %8, i32* %1, align 4
  br label %300

9:                                                ; preds = %2, %13
  %10 = phi i8* [ %19, %13 ], [ %0, %2 ]
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = zext i8 %11 to i64
  %15 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 2
  %18 = icmp eq i16 %17, 0
  %19 = getelementptr inbounds i8, i8* %10, i64 1
  br i1 %18, label %9, label %20

20:                                               ; preds = %13
  store i8 0, i8* %10, align 1
  br label %21

21:                                               ; preds = %9, %20
  %22 = phi i8* [ %19, %20 ], [ %10, %9 ]
  %23 = tail call i64 @strlen(i8* nonnull %0) #13
  %24 = icmp ugt i64 %23, 8
  %25 = load i8, i8* @win32, align 1
  %26 = load i8, i8* @win64, align 1
  %27 = or i8 %26, %25
  %28 = icmp eq i8 %27, 0
  %29 = and i1 %24, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.25, i64 0, i64 0)) #12
  %31 = getelementptr inbounds i8, i8* %0, i64 8
  store i8 0, i8* %31, align 1
  br label %32

32:                                               ; preds = %30, %21
  %33 = load i8, i8* %22, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %32, %43
  %36 = phi i8 [ %45, %43 ], [ %33, %32 ]
  %37 = phi i8* [ %44, %43 ], [ %22, %32 ]
  %38 = zext i8 %36 to i64
  %39 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 2
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %35

47:                                               ; preds = %35, %163
  %48 = phi i8 [ %166, %163 ], [ %36, %35 ]
  %49 = phi i32 [ %165, %163 ], [ 0, %35 ]
  %50 = phi i32 [ %164, %163 ], [ 0, %35 ]
  %51 = phi i8* [ %88, %163 ], [ %37, %35 ]
  br label %60

52:                                               ; preds = %43, %163, %32
  %53 = phi i32 [ 0, %32 ], [ %164, %163 ], [ 0, %43 ]
  %54 = phi i32 [ 0, %32 ], [ %165, %163 ], [ 0, %43 ]
  %55 = load i32, i32* @coff_nsects, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %183

57:                                               ; preds = %52
  %58 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %59 = sext i32 %55 to i64
  br label %168

60:                                               ; preds = %47, %69
  %61 = phi i8* [ %68, %69 ], [ %51, %47 ]
  %62 = phi i8 [ %70, %69 ], [ %48, %47 ]
  %63 = zext i8 %62 to i64
  %64 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = and i16 %65, 2
  %67 = icmp eq i16 %66, 0
  %68 = getelementptr inbounds i8, i8* %61, i64 1
  br i1 %67, label %69, label %72

69:                                               ; preds = %60
  %70 = load i8, i8* %68, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %87, label %60

72:                                               ; preds = %60
  store i8 0, i8* %61, align 1
  %73 = load i8, i8* %68, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %72, %83
  %76 = phi i8 [ %85, %83 ], [ %73, %72 ]
  %77 = phi i8* [ %84, %83 ], [ %68, %72 ]
  %78 = zext i8 %76 to i64
  %79 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = and i16 %80, 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds i8, i8* %77, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %75

87:                                               ; preds = %69, %83, %75, %72
  %88 = phi i8* [ %68, %72 ], [ %77, %75 ], [ %84, %83 ], [ %68, %69 ]
  %89 = tail call i32 @strcasecmp(i8* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)) #13
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %87
  %92 = tail call i32 @strcasecmp(i8* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0)) #13
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %100

94:                                               ; preds = %91, %87
  %95 = load i8, i8* @win32, align 1, !range !2
  %96 = load i8, i8* @win64, align 1, !range !2
  %97 = or i8 %96, %95
  %98 = icmp eq i8 %97, 0
  %99 = select i1 %98, i32 32, i32 1615855648
  br label %163

100:                                              ; preds = %91
  %101 = tail call i32 @strcasecmp(i8* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #13
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %109

103:                                              ; preds = %100
  %104 = load i8, i8* @win32, align 1, !range !2
  %105 = load i8, i8* @win64, align 1, !range !2
  %106 = or i8 %105, %104
  %107 = icmp eq i8 %106, 0
  %108 = select i1 %107, i32 64, i32 -1070596032
  br label %163

109:                                              ; preds = %100
  %110 = tail call i32 @strcasecmp(i8* %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0)) #13
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %118

112:                                              ; preds = %109
  %113 = load i8, i8* @win32, align 1, !range !2
  %114 = load i8, i8* @win64, align 1, !range !2
  %115 = or i8 %114, %113
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %163

117:                                              ; preds = %112
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.30, i64 0, i64 0)) #12
  br label %163

118:                                              ; preds = %109
  %119 = tail call i32 @strcasecmp(i8* %51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)) #13
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %118
  %122 = load i8, i8* @win32, align 1, !range !2
  %123 = load i8, i8* @win64, align 1, !range !2
  %124 = or i8 %123, %122
  %125 = icmp eq i8 %124, 0
  %126 = select i1 %125, i32 128, i32 -1070595968
  br label %163

127:                                              ; preds = %118
  %128 = tail call i32 @strcasecmp(i8* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0)) #13
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %136

130:                                              ; preds = %127
  %131 = load i8, i8* @win32, align 1, !range !2
  %132 = load i8, i8* @win64, align 1, !range !2
  %133 = or i8 %132, %131
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %163

135:                                              ; preds = %130
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0)) #12
  br label %163

136:                                              ; preds = %127
  %137 = tail call i32 @strncasecmp(i8* %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i64 6) #13
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %163

139:                                              ; preds = %136
  %140 = getelementptr inbounds i8, i8* %51, i64 6
  %141 = tail call i64 @strspn(i8* %140, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0)) #13
  %142 = add i64 %141, 6
  %143 = getelementptr inbounds i8, i8* %51, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %139
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.36, i64 0, i64 0)) #12
  br label %163

147:                                              ; preds = %139
  %148 = tail call i64 @strtol(i8* nocapture %140, i8** null, i32 10) #12
  %149 = trunc i64 %148 to i32
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %163, label %151

151:                                              ; preds = %147
  %152 = tail call i32 @llvm.ctpop.i32(i32 %149), !range !3
  %153 = icmp ult i32 %152, 2
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.37, i64 0, i64 0)) #12
  br label %163

155:                                              ; preds = %151
  %156 = icmp ugt i32 %149, 8192
  br i1 %156, label %157, label %158

157:                                              ; preds = %155
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i64 0, i64 0), i32 8192) #12
  br label %163

158:                                              ; preds = %155
  %159 = tail call i32 @llvm.ctlz.i32(i32 %149, i1 true) #12, !range !3
  %160 = shl nuw nsw i32 %159, 20
  %161 = xor i32 %160, 32505856
  %162 = add nuw nsw i32 %161, 1048576
  br label %163

163:                                              ; preds = %158, %157, %154, %147, %130, %112, %136, %103, %121, %146, %135, %117, %94
  %164 = phi i32 [ %50, %136 ], [ %50, %146 ], [ 64, %135 ], [ %126, %121 ], [ 64, %117 ], [ %108, %103 ], [ %99, %94 ], [ 1077936192, %112 ], [ 1051136, %130 ], [ %50, %147 ], [ %50, %154 ], [ %50, %157 ], [ %50, %158 ]
  %165 = phi i32 [ %49, %136 ], [ %49, %146 ], [ %49, %135 ], [ %49, %121 ], [ %49, %117 ], [ %49, %103 ], [ %49, %94 ], [ %49, %112 ], [ %49, %130 ], [ 0, %147 ], [ %49, %154 ], [ %49, %157 ], [ %162, %158 ]
  %166 = load i8, i8* %88, align 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %52, label %47

168:                                              ; preds = %57, %177
  %169 = phi i64 [ 0, %57 ], [ %178, %177 ]
  %170 = phi i32 [ 0, %57 ], [ %179, %177 ]
  %171 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %58, i64 %169
  %172 = load %struct.coff_Section*, %struct.coff_Section** %171, align 8
  %173 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %172, i64 0, i32 9
  %174 = load i8*, i8** %173, align 8
  %175 = tail call i32 @strcmp(i8* nonnull %0, i8* %174) #13
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %168
  %178 = add nuw nsw i64 %169, 1
  %179 = add nuw nsw i32 %170, 1
  %180 = icmp slt i64 %178, %59
  br i1 %180, label %168, label %183

181:                                              ; preds = %168
  %182 = trunc i64 %169 to i32
  br label %183

183:                                              ; preds = %177, %181, %52
  %184 = phi i32 [ 0, %52 ], [ %182, %181 ], [ %179, %177 ]
  %185 = icmp eq i32 %184, %55
  %186 = icmp ne i32 %53, 0
  br i1 %185, label %187, label %225

187:                                              ; preds = %183
  br i1 %186, label %217, label %188

188:                                              ; preds = %187
  %189 = load i8, i8* @win32, align 1, !range !2
  %190 = load i8, i8* @win64, align 1, !range !2
  %191 = icmp eq i8 %190, 0
  %192 = or i8 %190, %189
  %193 = icmp ne i8 %192, 0
  %194 = select i1 %193, i32 1615855648, i32 32
  %195 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0)) #13
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %188
  %198 = select i1 %193, i32 -1070596032, i32 64
  br label %217

199:                                              ; preds = %188
  %200 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0)) #13
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %199
  %203 = select i1 %193, i32 1077936192, i32 64
  br label %217

204:                                              ; preds = %199
  %205 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0)) #13
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %204
  %208 = select i1 %193, i32 -1070595968, i32 128
  br label %217

209:                                              ; preds = %204
  br i1 %191, label %217, label %210

210:                                              ; preds = %209
  %211 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #13
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %210
  %214 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #13
  %215 = icmp eq i32 %214, 0
  %216 = select i1 %215, i32 1077936192, i32 %194
  br label %217

217:                                              ; preds = %213, %210, %209, %197, %207, %202, %187
  %218 = phi i32 [ %53, %187 ], [ %194, %209 ], [ %208, %207 ], [ %203, %202 ], [ %198, %197 ], [ 1076887616, %210 ], [ %216, %213 ]
  %219 = tail call i32 @coff_make_section(i8* nonnull %0, i32 %218)
  %220 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %221 = sext i32 %219 to i64
  %222 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %220, i64 %221
  %223 = load %struct.coff_Section*, %struct.coff_Section** %222, align 8
  %224 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %223, i64 0, i32 7
  store i32 %54, i32* %224, align 4
  br label %290

225:                                              ; preds = %183
  br i1 %186, label %226, label %242

226:                                              ; preds = %225
  %227 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %228 = zext i32 %184 to i64
  %229 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %227, i64 %228
  %230 = load %struct.coff_Section*, %struct.coff_Section** %229, align 8
  %231 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %230, i64 0, i32 6
  %232 = load i32, i32* %231, align 8
  %233 = xor i32 %232, %53
  %234 = and i32 %233, -15728641
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %242, label %236

236:                                              ; preds = %226
  %237 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %230, i64 0, i32 13
  %238 = load i64, i64* %237, align 8
  %239 = load i64, i64* @_passn, align 8
  %240 = icmp eq i64 %238, %239
  br i1 %240, label %241, label %242

241:                                              ; preds = %236
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.42, i64 0, i64 0), i8* nonnull %0) #12
  br label %242

242:                                              ; preds = %226, %236, %241, %225
  %243 = icmp eq i32 %54, 0
  %244 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  br i1 %243, label %290, label %245

245:                                              ; preds = %242
  %246 = zext i32 %184 to i64
  %247 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %244, i64 %246
  %248 = load %struct.coff_Section*, %struct.coff_Section** %247, align 8
  %249 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %248, i64 0, i32 7
  %250 = load i32, i32* %249, align 4
  %251 = lshr i32 %54, 20
  %252 = and i32 %251, 15
  %253 = shl i32 1, %252
  %254 = lshr i32 %253, 1
  %255 = icmp ugt i32 %54, %250
  br i1 %255, label %256, label %258

256:                                              ; preds = %245
  store i32 %54, i32* %249, align 4
  %257 = load %struct.coff_Section*, %struct.coff_Section** %247, align 8
  br label %258

258:                                              ; preds = %256, %245
  %259 = phi %struct.coff_Section* [ %257, %256 ], [ %248, %245 ]
  %260 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %259, i64 0, i32 1
  %261 = load i32, i32* %260, align 8
  %262 = add nsw i32 %254, -1
  %263 = and i32 %261, %262
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %290, label %265

265:                                              ; preds = %258
  %266 = sub i32 %254, %261
  %267 = and i32 %266, %262
  %268 = getelementptr inbounds [8095 x i8], [8095 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8095, i8* nonnull %268) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %268, i8 -86, i64 8095, i1 false)
  %269 = zext i32 %267 to i64
  %270 = icmp ugt i32 %267, 8095
  br i1 %270, label %271, label %272, !prof !4

271:                                              ; preds = %265
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.43, i64 0, i64 0), i32 442, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0)) #15
  unreachable

272:                                              ; preds = %265
  %273 = load %struct.coff_Section*, %struct.coff_Section** %247, align 8
  %274 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %273, i64 0, i32 6
  %275 = load i32, i32* %274, align 8
  %276 = and i32 %275, 32
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %279, label %278

278:                                              ; preds = %272
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %268, i8 -52, i64 %269, i1 false)
  br label %280

279:                                              ; preds = %272
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %268, i8 0, i64 %269, i1 false)
  br label %280

280:                                              ; preds = %279, %278
  %281 = load %struct.coff_Section*, %struct.coff_Section** %247, align 8
  %282 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %281, i64 0, i32 0
  %283 = load %struct.SAA*, %struct.SAA** %282, align 8
  call void @saa_wbytes(%struct.SAA* %283, i8* nonnull %268, i64 %269) #12
  %284 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %285 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %284, i64 %246
  %286 = load %struct.coff_Section*, %struct.coff_Section** %285, align 8
  %287 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %286, i64 0, i32 1
  %288 = load i32, i32* %287, align 8
  %289 = add i32 %288, %267
  store i32 %289, i32* %287, align 8
  call void @llvm.lifetime.end.p0i8(i64 8095, i8* nonnull %268) #12
  br label %290

290:                                              ; preds = %242, %280, %258, %217
  %291 = phi %struct.coff_Section** [ %220, %217 ], [ %244, %258 ], [ %284, %280 ], [ %244, %242 ]
  %292 = phi i32 [ %219, %217 ], [ %184, %258 ], [ %184, %280 ], [ %184, %242 ]
  %293 = load i64, i64* @_passn, align 8
  %294 = sext i32 %292 to i64
  %295 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %291, i64 %294
  %296 = load %struct.coff_Section*, %struct.coff_Section** %295, align 8
  %297 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %296, i64 0, i32 13
  store i64 %293, i64* %297, align 8
  %298 = load %struct.coff_Section*, %struct.coff_Section** %295, align 8
  %299 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %298, i64 0, i32 3
  br label %300

300:                                              ; preds = %290, %5
  %301 = phi i32* [ %299, %290 ], [ @def_seg, %5 ]
  %302 = load i32, i32* %301, align 4
  ret i32 %302
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @coff_sectalign(i32, i32) #8 {
  %3 = load i32, i32* @coff_nsects, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %37

5:                                                ; preds = %2
  %6 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %7 = sext i32 %3 to i64
  br label %10

8:                                                ; preds = %10
  %9 = icmp slt i64 %17, %7
  br i1 %9, label %10, label %37

10:                                               ; preds = %5, %8
  %11 = phi i64 [ 0, %5 ], [ %17, %8 ]
  %12 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %6, i64 %11
  %13 = load %struct.coff_Section*, %struct.coff_Section** %12, align 8
  %14 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, %0
  %17 = add nuw nsw i64 %11, 1
  br i1 %16, label %18, label %8

18:                                               ; preds = %10
  %19 = icmp ne %struct.coff_Section* %13, null
  %20 = tail call i32 @llvm.ctpop.i32(i32 %1), !range !3
  %21 = icmp eq i32 %20, 1
  %22 = and i1 %21, %19
  br i1 %22, label %23, label %37

23:                                               ; preds = %18
  %24 = icmp ult i32 %1, 8192
  %25 = select i1 %24, i32 %1, i32 8192
  %26 = tail call i32 @llvm.ctpop.i32(i32 %25) #12, !range !3
  %27 = icmp ugt i32 %26, 1
  br i1 %27, label %37, label %28, !prof !4

28:                                               ; preds = %23
  %29 = tail call i32 @llvm.ctlz.i32(i32 %25, i1 true) #12, !range !3
  %30 = shl nuw nsw i32 %29, 20
  %31 = xor i32 %30, 32505856
  %32 = add nuw nsw i32 %31, 1048576
  %33 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %13, i64 0, i32 8
  %34 = load i32, i32* %33, align 8
  %35 = icmp ugt i32 %32, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  store i32 %32, i32* %33, align 8
  br label %37

37:                                               ; preds = %8, %2, %23, %28, %36, %18
  ret void
}

declare i32 @null_segbase(i32) #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @coff_directives(i32, i8*) #0 {
  %3 = alloca i32, align 4
  switch i32 %0, label %213 [
    i32 20, label %4
    i32 28, label %114
  ]

4:                                                ; preds = %2
  %5 = load i32, i32* @_pass_type, align 4
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %7, label %213

7:                                                ; preds = %4
  %8 = load i8, i8* %1, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %7, %18
  %11 = phi i8 [ %20, %18 ], [ %8, %7 ]
  %12 = phi i8* [ %19, %18 ], [ %1, %7 ]
  %13 = zext i8 %11 to i64
  %14 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = and i16 %15, 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds i8, i8* %12, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %10

22:                                               ; preds = %10, %18, %7
  %23 = phi i8 [ 0, %7 ], [ 0, %18 ], [ %11, %10 ]
  %24 = phi i8* [ %1, %7 ], [ %19, %18 ], [ %12, %10 ]
  %25 = zext i8 %23 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = and i16 %27, 2
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %22
  store i8 0, i8* %24, align 1
  br label %31

31:                                               ; preds = %36, %30
  %32 = phi i8* [ %24, %30 ], [ %33, %36 ]
  %33 = getelementptr inbounds i8, i8* %32, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = zext i8 %34 to i64
  %38 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = and i16 %39, 2
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %42, label %31

42:                                               ; preds = %31, %36
  %43 = load i8, i8* %1, align 1
  br label %44

44:                                               ; preds = %42, %22
  %45 = phi i8 [ %23, %22 ], [ %34, %42 ]
  %46 = phi i8 [ %8, %22 ], [ %43, %42 ]
  %47 = phi i8* [ %24, %22 ], [ %33, %42 ]
  %48 = icmp eq i8 %46, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.45, i64 0, i64 0)) #12
  br label %213

50:                                               ; preds = %44
  %51 = icmp eq i8 %45, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %50
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.46, i64 0, i64 0), i8* %47) #12
  br label %213

53:                                               ; preds = %50
  %54 = load %struct.tagString*, %struct.tagString** @Exports, align 8
  %55 = tail call noalias i8* @nasm_malloc(i64 24) #11
  %56 = tail call i64 @strlen(i8* %1) #13
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds i8, i8* %55, i64 8
  %59 = bitcast i8* %58 to i32*
  store i32 %57, i32* %59, align 8
  %60 = bitcast i8* %55 to %struct.tagString**
  store %struct.tagString* null, %struct.tagString** %60, align 8
  %61 = shl i64 %56, 32
  %62 = add i64 %61, 4294967296
  %63 = ashr exact i64 %62, 32
  %64 = tail call noalias i8* @nasm_malloc(i64 %63) #11
  %65 = getelementptr inbounds i8, i8* %55, i64 16
  %66 = bitcast i8* %65 to i8**
  store i8* %64, i8** %66, align 8
  %67 = tail call i8* @strcpy(i8* %64, i8* %1) #12
  %68 = icmp eq %struct.tagString* %54, null
  br i1 %68, label %69, label %102

69:                                               ; preds = %53
  %70 = load i32, i32* @coff_nsects, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %90

72:                                               ; preds = %69
  %73 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %74 = sext i32 %70 to i64
  br label %75

75:                                               ; preds = %84, %72
  %76 = phi i64 [ 0, %72 ], [ %85, %84 ]
  %77 = phi i32 [ 0, %72 ], [ %86, %84 ]
  %78 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %73, i64 %76
  %79 = load %struct.coff_Section*, %struct.coff_Section** %78, align 8
  %80 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %79, i64 0, i32 9
  %81 = load i8*, i8** %80, align 8
  %82 = tail call i32 @strcmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), i8* %81) #13
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %75
  %85 = add nuw nsw i64 %76, 1
  %86 = add nuw nsw i32 %77, 1
  %87 = icmp eq i64 %85, %74
  br i1 %87, label %90, label %75

88:                                               ; preds = %75
  %89 = trunc i64 %76 to i32
  br label %90

90:                                               ; preds = %84, %88, %69
  %91 = phi i32 [ 0, %69 ], [ %89, %88 ], [ %86, %84 ]
  %92 = icmp eq i32 %91, %70
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = tail call i32 @coff_make_section(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), i32 1051136) #12
  br label %95

95:                                               ; preds = %93, %90
  %96 = phi i32 [ %94, %93 ], [ %91, %90 ]
  %97 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %98 = sext i32 %96 to i64
  %99 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %97, i64 %98
  %100 = bitcast %struct.coff_Section** %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* bitcast (%struct.coff_Section** @directive_sec to i64*), align 8
  store i8* %55, i8** bitcast (%struct.tagString** @Exports to i8**), align 8
  br label %213

102:                                              ; preds = %53, %107
  %103 = phi %struct.tagString* [ %105, %107 ], [ %54, %53 ]
  %104 = getelementptr inbounds %struct.tagString, %struct.tagString* %103, i64 0, i32 0
  %105 = load %struct.tagString*, %struct.tagString** %104, align 8
  %106 = icmp eq %struct.tagString* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.tagString, %struct.tagString* %103, i64 0, i32 2
  %109 = load i8*, i8** %108, align 8
  %110 = tail call i32 @strcmp(i8* %109, i8* %1) #13
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %213, label %102

112:                                              ; preds = %102
  %113 = bitcast %struct.tagString* %103 to i8**
  store i8* %55, i8** %113, align 8
  br label %213

114:                                              ; preds = %2
  %115 = load i8, i8* @win32, align 1, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %213, label %117

117:                                              ; preds = %114
  %118 = load i32, i32* @coff_directives.sxseg, align 4
  %119 = icmp eq i32 %118, -1
  br i1 %119, label %120, label %148

120:                                              ; preds = %117
  %121 = load i32, i32* @coff_nsects, align 4
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %141

123:                                              ; preds = %120
  %124 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %125 = sext i32 %121 to i64
  br label %126

126:                                              ; preds = %123, %135
  %127 = phi i64 [ 0, %123 ], [ %136, %135 ]
  %128 = phi i32 [ 0, %123 ], [ %137, %135 ]
  %129 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %124, i64 %127
  %130 = load %struct.coff_Section*, %struct.coff_Section** %129, align 8
  %131 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %130, i64 0, i32 9
  %132 = load i8*, i8** %131, align 8
  %133 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i8* %132) #13
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %126
  %136 = add nuw nsw i64 %127, 1
  %137 = add nuw nsw i32 %128, 1
  %138 = icmp slt i64 %136, %125
  br i1 %138, label %126, label %141

139:                                              ; preds = %126
  %140 = trunc i64 %127 to i32
  br label %141

141:                                              ; preds = %135, %139, %120
  %142 = phi i32 [ 0, %120 ], [ %140, %139 ], [ %137, %135 ]
  %143 = icmp eq i32 %142, %121
  br i1 %143, label %144, label %146

144:                                              ; preds = %141
  %145 = tail call i32 @coff_make_section(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i32 512)
  br label %146

146:                                              ; preds = %141, %144
  %147 = phi i32 [ %145, %144 ], [ %142, %141 ]
  store i32 %147, i32* @coff_directives.sxseg, align 4
  br label %148

148:                                              ; preds = %146, %117
  %149 = load i32, i32* @_pass_type, align 4
  %150 = icmp ugt i32 %149, 4
  br i1 %150, label %151, label %213

151:                                              ; preds = %148
  %152 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  tail call void @saa_rewind(%struct.SAA* %152) #12
  %153 = load i32, i32* @coff_nsyms, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %212, label %155

155:                                              ; preds = %151, %204
  %156 = phi i32 [ %205, %204 ], [ 0, %151 ]
  %157 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  %158 = tail call i8* @saa_rstruct(%struct.SAA* %157) #12
  %159 = getelementptr inbounds i8, i8* %158, i64 12
  %160 = bitcast i8* %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = icmp sgt i32 %161, 3
  br i1 %162, label %163, label %180

163:                                              ; preds = %155
  %164 = getelementptr inbounds i8, i8* %158, i64 28
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = add nsw i32 %166, 1
  %168 = sext i32 %167 to i64
  %169 = tail call noalias i8* @nasm_malloc(i64 %168) #11
  %170 = load %struct.SAA*, %struct.SAA** @coff_strs, align 8
  %171 = load i32, i32* %160, align 4
  %172 = add nsw i32 %171, -4
  %173 = sext i32 %172 to i64
  %174 = load i32, i32* %165, align 4
  %175 = sext i32 %174 to i64
  tail call void @saa_fread(%struct.SAA* %170, i64 %173, i8* %169, i64 %175) #12
  %176 = load i32, i32* %165, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %169, i64 %177
  store i8 0, i8* %178, align 1
  %179 = tail call i32 @strcmp(i8* %1, i8* %169) #13
  tail call void @nasm_free(i8* %169) #12
  br label %182

180:                                              ; preds = %155
  %181 = tail call i32 @strcmp(i8* %1, i8* %158) #13
  br label %182

182:                                              ; preds = %180, %163
  %183 = phi i32 [ %179, %163 ], [ %181, %180 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %204

185:                                              ; preds = %182
  %186 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186) #12
  %187 = add i32 %156, 3
  %188 = load i32, i32* @coff_nsects, align 4
  %189 = shl i32 %188, 1
  %190 = add i32 %187, %189
  store i32 %190, i32* %3, align 4
  %191 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %192 = load i32, i32* @coff_directives.sxseg, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %191, i64 %193
  %195 = load %struct.coff_Section*, %struct.coff_Section** %194, align 8
  %196 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %195, i64 0, i32 0
  %197 = load %struct.SAA*, %struct.SAA** %196, align 8
  call void @saa_wbytes(%struct.SAA* %197, i8* nonnull %186, i64 4) #12
  %198 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = add i32 %199, 4
  store i32 %200, i32* %198, align 8
  %201 = getelementptr inbounds i8, i8* %158, i64 26
  %202 = bitcast i8* %201 to i16*
  store i16 32, i16* %202, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186) #12
  %203 = load i32, i32* @coff_nsyms, align 4
  br label %208

204:                                              ; preds = %182
  %205 = add nuw i32 %156, 1
  %206 = load i32, i32* @coff_nsyms, align 4
  %207 = icmp ult i32 %205, %206
  br i1 %207, label %155, label %208

208:                                              ; preds = %204, %185
  %209 = phi i32 [ %203, %185 ], [ %206, %204 ]
  %210 = phi i32 [ %156, %185 ], [ %205, %204 ]
  %211 = icmp eq i32 %210, %209
  br i1 %211, label %212, label %213

212:                                              ; preds = %151, %208
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i64 0, i64 0)) #12
  br label %213

213:                                              ; preds = %107, %112, %95, %2, %114, %212, %208, %148, %49, %52, %4
  %214 = phi i32 [ 2, %52 ], [ 2, %49 ], [ 1, %4 ], [ 0, %114 ], [ 2, %212 ], [ 1, %208 ], [ 1, %148 ], [ 0, %2 ], [ 1, %95 ], [ 1, %112 ], [ 1, %107 ]
  ret i32 %214
}

; Function Attrs: nounwind ssp uwtable
define internal void @coff_cleanup() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca [18 x i8], align 16
  %4 = alloca i64, align 8
  %5 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %6 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %5, i64 0, i32 8
  %7 = load void ()*, void ()** %6, align 8
  tail call void %7() #12
  %8 = load %struct.tagString*, %struct.tagString** @Exports, align 8
  %9 = icmp eq %struct.tagString* %8, null
  br i1 %9, label %41, label %10

10:                                               ; preds = %0, %10
  %11 = phi %struct.tagString* [ %13, %10 ], [ %8, %0 ]
  %12 = getelementptr inbounds %struct.tagString, %struct.tagString* %11, i64 0, i32 0
  %13 = load %struct.tagString*, %struct.tagString** %12, align 8
  %14 = load %struct.coff_Section*, %struct.coff_Section** @directive_sec, align 8
  %15 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %14, i64 0, i32 0
  %16 = load %struct.SAA*, %struct.SAA** %15, align 8
  tail call void @saa_wbytes(%struct.SAA* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i64 8) #12
  %17 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 8
  store i32 %19, i32* %17, align 8
  %20 = load %struct.coff_Section*, %struct.coff_Section** @directive_sec, align 8
  %21 = getelementptr inbounds %struct.tagString, %struct.tagString* %11, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.tagString, %struct.tagString* %11, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %20, i64 0, i32 0
  %26 = load %struct.SAA*, %struct.SAA** %25, align 8
  %27 = zext i32 %24 to i64
  tail call void @saa_wbytes(%struct.SAA* %26, i8* %22, i64 %27) #12
  %28 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, %24
  store i32 %30, i32* %28, align 8
  %31 = load %struct.coff_Section*, %struct.coff_Section** @directive_sec, align 8
  %32 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %31, i64 0, i32 0
  %33 = load %struct.SAA*, %struct.SAA** %32, align 8
  tail call void @saa_wbytes(%struct.SAA* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0), i64 1) #12
  %34 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %35, 1
  store i32 %36, i32* %34, align 8
  %37 = load i8*, i8** %21, align 8
  tail call void @nasm_free(i8* %37) #12
  %38 = bitcast %struct.tagString* %11 to i8*
  tail call void @nasm_free(i8* nonnull %38) #12
  %39 = icmp eq %struct.tagString* %13, null
  br i1 %39, label %40, label %10

40:                                               ; preds = %10
  store %struct.tagString* null, %struct.tagString** @Exports, align 8
  br label %41

41:                                               ; preds = %40, %0
  %42 = load i8, i8* @win32, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %70, label %44

44:                                               ; preds = %41
  %45 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  tail call void @saa_rewind(%struct.SAA* %45) #12
  %46 = load i32, i32* @coff_nsyms, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %69, label %48

48:                                               ; preds = %44, %61
  %49 = phi i32 [ %62, %61 ], [ 0, %44 ]
  %50 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  %51 = tail call i8* @saa_rstruct(%struct.SAA* %50) #12
  %52 = getelementptr inbounds i8, i8* %51, i64 12
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %61

56:                                               ; preds = %48
  %57 = tail call i32 @strcmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i8* %51) #13
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = load i32, i32* @coff_nsyms, align 4
  br label %65

61:                                               ; preds = %56, %48
  %62 = add nuw i32 %49, 1
  %63 = load i32, i32* @coff_nsyms, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %48, label %65

65:                                               ; preds = %61, %59
  %66 = phi i32 [ %60, %59 ], [ %63, %61 ]
  %67 = phi i32 [ %49, %59 ], [ %62, %61 ]
  %68 = icmp eq i32 %67, %66
  br i1 %68, label %69, label %70

69:                                               ; preds = %65, %44
  tail call void @coff_deflabel(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i32 -1, i64 1, i32 0, i8* null) #12
  br label %70

70:                                               ; preds = %69, %65, %41
  %71 = load i32, i32* @coff_nsects, align 4
  %72 = mul nsw i32 %71, 40
  %73 = add nsw i32 %72, 20
  store i32 3, i32* @initsym, align 4
  %74 = icmp sgt i32 %71, 0
  br i1 %74, label %75, label %139

75:                                               ; preds = %70
  %76 = zext i32 %71 to i64
  %77 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  br label %78

78:                                               ; preds = %134, %75
  %79 = phi i32 [ 3, %75 ], [ %136, %134 ]
  %80 = phi i64 [ 0, %75 ], [ %137, %134 ]
  %81 = phi i32 [ %73, %75 ], [ %135, %134 ]
  %82 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %77, i64 %80
  %83 = load %struct.coff_Section*, %struct.coff_Section** %82, align 8
  %84 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %83, i64 0, i32 7
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %83, i64 0, i32 6
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 15728640
  %90 = select i1 %86, i32 %89, i32 %85
  %91 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %83, i64 0, i32 8
  %92 = load i32, i32* %91, align 8
  %93 = icmp ult i32 %90, %92
  %94 = select i1 %93, i32 %92, i32 %90
  %95 = and i32 %88, -15728641
  %96 = or i32 %94, %95
  store i32 %96, i32* %87, align 8
  %97 = load %struct.coff_Section*, %struct.coff_Section** %82, align 8
  %98 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %97, i64 0, i32 0
  %99 = load %struct.SAA*, %struct.SAA** %98, align 8
  %100 = icmp eq %struct.SAA* %99, null
  br i1 %100, label %130, label %101

101:                                              ; preds = %78
  %102 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %97, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, 65535
  br i1 %104, label %117, label %105

105:                                              ; preds = %101
  %106 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %107 = icmp eq %struct.ofmt* %106, @of_coff
  br i1 %107, label %108, label %111

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %97, i64 0, i32 9
  %110 = load i8*, i8** %109, align 8
  tail call void (i8*, ...) @nasm_fatal(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.53, i64 0, i64 0), i32 %103, i8* %110) #15
  unreachable

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %97, i64 0, i32 6
  %113 = load i32, i32* %112, align 8
  %114 = or i32 %113, 16777216
  store i32 %114, i32* %112, align 8
  %115 = add nuw nsw i32 %103, 1
  store i32 %115, i32* %102, align 4
  %116 = load %struct.coff_Section*, %struct.coff_Section** %82, align 8
  br label %117

117:                                              ; preds = %111, %101
  %118 = phi %struct.coff_Section* [ %97, %101 ], [ %116, %111 ]
  %119 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %118, i64 0, i32 11
  store i32 %81, i32* %119, align 4
  %120 = load %struct.coff_Section*, %struct.coff_Section** %82, align 8
  %121 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %120, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %81
  %124 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %120, i64 0, i32 12
  store i32 %123, i32* %124, align 8
  %125 = load %struct.coff_Section*, %struct.coff_Section** %82, align 8
  %126 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %125, i64 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = mul nsw i32 %127, 10
  %129 = add nsw i32 %128, %123
  br label %134

130:                                              ; preds = %78
  %131 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %97, i64 0, i32 12
  store i32 0, i32* %131, align 8
  %132 = load %struct.coff_Section*, %struct.coff_Section** %82, align 8
  %133 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %132, i64 0, i32 11
  store i32 0, i32* %133, align 4
  br label %134

134:                                              ; preds = %130, %117
  %135 = phi i32 [ %129, %117 ], [ %81, %130 ]
  %136 = add nuw nsw i32 %79, 2
  store i32 %136, i32* @initsym, align 4
  %137 = add nuw nsw i64 %80, 1
  %138 = icmp eq i64 %137, %76
  br i1 %138, label %139, label %78

139:                                              ; preds = %134, %70
  %140 = phi i32 [ %73, %70 ], [ %135, %134 ]
  %141 = load i8, i8* @win64, align 1, !range !2
  %142 = icmp eq i8 %141, 0
  %143 = select i1 %142, i16 332, i16 -31132
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %143, %struct._IO_FILE* %144) #12
  %145 = load i32, i32* @coff_nsects, align 4
  %146 = trunc i32 %145 to i16
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %146, %struct._IO_FILE* %147) #12
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 0, %struct._IO_FILE* %148) #12
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %140, %struct._IO_FILE* %149) #12
  %150 = load i32, i32* @coff_nsyms, align 4
  %151 = load i32, i32* @initsym, align 4
  %152 = add i32 %151, %150
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %152, %struct._IO_FILE* %153) #12
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext 0, %struct._IO_FILE* %154) #12
  %155 = load i8, i8* @win32, align 1, !range !2
  %156 = load i8, i8* @win64, align 1, !range !2
  %157 = or i8 %156, %155
  %158 = icmp eq i8 %157, 0
  %159 = select i1 %158, i16 260, i16 0
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %159, %struct._IO_FILE* %160) #12
  %161 = load i32, i32* @coff_nsects, align 4
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %163, label %303

163:                                              ; preds = %139
  %164 = bitcast i64* %4 to [8 x i8]*
  %165 = bitcast i64* %4 to i8*
  %166 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 7
  %167 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 6
  %168 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 5
  %169 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 4
  %170 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 3
  %171 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 2
  %172 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 1
  br label %175

173:                                              ; preds = %225
  %174 = icmp sgt i32 %241, 0
  br i1 %174, label %244, label %303

175:                                              ; preds = %225, %163
  %176 = phi i64 [ 0, %163 ], [ %240, %225 ]
  %177 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %178 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %177, i64 %176
  %179 = load %struct.coff_Section*, %struct.coff_Section** %178, align 8
  %180 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %179, i64 0, i32 9
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %179, i64 0, i32 10
  %183 = load i32, i32* %182, align 8
  %184 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %179, i64 0, i32 1
  %185 = load i32, i32* %184, align 8
  %186 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %179, i64 0, i32 11
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %179, i64 0, i32 12
  %189 = load i32, i32* %188, align 8
  %190 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %179, i64 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %179, i64 0, i32 6
  %193 = load i32, i32* %192, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #12
  %194 = icmp eq i32 %183, -1
  store i64 -6148914691236517206, i64* %4, align 8
  br i1 %194, label %195, label %197

195:                                              ; preds = %175
  %196 = call i8* @strncpy(i8* nonnull %165, i8* %181, i64 8) #12
  br label %225

197:                                              ; preds = %175
  %198 = srem i32 %183, 100000000
  store i8 47, i8* %165, align 8
  %199 = sdiv i32 %198, 1000000
  %200 = trunc i32 %199 to i8
  %201 = add i8 %200, 48
  store i8 %201, i8* %172, align 1
  %202 = srem i32 %198, 1000000
  %203 = sdiv i32 %202, 100000
  %204 = trunc i32 %203 to i8
  %205 = add nsw i8 %204, 48
  store i8 %205, i8* %171, align 2
  %206 = srem i32 %202, 100000
  %207 = sdiv i32 %206, 10000
  %208 = trunc i32 %207 to i8
  %209 = add nsw i8 %208, 48
  store i8 %209, i8* %170, align 1
  %210 = srem i32 %206, 10000
  %211 = sdiv i32 %210, 1000
  %212 = trunc i32 %211 to i8
  %213 = add nsw i8 %212, 48
  store i8 %213, i8* %169, align 4
  %214 = srem i32 %210, 1000
  %215 = sdiv i32 %214, 100
  %216 = trunc i32 %215 to i8
  %217 = add nsw i8 %216, 48
  store i8 %217, i8* %168, align 1
  %218 = srem i32 %214, 100
  %219 = sdiv i32 %218, 10
  %220 = trunc i32 %219 to i8
  %221 = add nsw i8 %220, 48
  store i8 %221, i8* %167, align 2
  %222 = srem i32 %218, 10
  %223 = trunc i32 %222 to i8
  %224 = add nsw i8 %223, 48
  store i8 %224, i8* %166, align 1
  br label %225

225:                                              ; preds = %197, %195
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %165, i64 8, %struct._IO_FILE* %226) #12
  %227 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 0, %struct._IO_FILE* %227) #12
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 0, %struct._IO_FILE* %228) #12
  %229 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %185, %struct._IO_FILE* %229) #12
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %187, %struct._IO_FILE* %230) #12
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %189, %struct._IO_FILE* %231) #12
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 0, %struct._IO_FILE* %232) #12
  %233 = and i32 %193, 16777216
  %234 = icmp eq i32 %233, 0
  %235 = trunc i32 %191 to i16
  %236 = select i1 %234, i16 %235, i16 -1
  %237 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %236, %struct._IO_FILE* %237) #12
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext 0, %struct._IO_FILE* %238) #12
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %193, %struct._IO_FILE* %239) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #12
  %240 = add nuw nsw i64 %176, 1
  %241 = load i32, i32* @coff_nsects, align 4
  %242 = sext i32 %241 to i64
  %243 = icmp slt i64 %240, %242
  br i1 %243, label %175, label %173

244:                                              ; preds = %173, %298
  %245 = phi i64 [ %299, %298 ], [ 0, %173 ]
  %246 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %247 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %246, i64 %245
  %248 = load %struct.coff_Section*, %struct.coff_Section** %247, align 8
  %249 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %248, i64 0, i32 0
  %250 = load %struct.SAA*, %struct.SAA** %249, align 8
  %251 = icmp eq %struct.SAA* %250, null
  br i1 %251, label %298, label %252

252:                                              ; preds = %244
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @saa_fpwrite(%struct.SAA* nonnull %250, %struct._IO_FILE* %253) #12
  %254 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %255 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %254, i64 %245
  %256 = load %struct.coff_Section*, %struct.coff_Section** %255, align 8
  %257 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %256, i64 0, i32 6
  %258 = load i32, i32* %257, align 8
  %259 = and i32 %258, 16777216
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %267, label %261

261:                                              ; preds = %252
  %262 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %256, i64 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %263, %struct._IO_FILE* %264) #12
  %265 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 0, %struct._IO_FILE* %265) #12
  %266 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext 0, %struct._IO_FILE* %266) #12
  br label %267

267:                                              ; preds = %261, %252
  %268 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %256, i64 0, i32 4
  %269 = load %struct.coff_Reloc*, %struct.coff_Reloc** %268, align 8
  %270 = icmp eq %struct.coff_Reloc* %269, null
  br i1 %270, label %298, label %271

271:                                              ; preds = %267, %288
  %272 = phi %struct.coff_Reloc* [ %296, %288 ], [ %269, %267 ]
  %273 = getelementptr inbounds %struct.coff_Reloc, %struct.coff_Reloc* %272, i64 0, i32 1
  %274 = load i32, i32* %273, align 8
  %275 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %274, %struct._IO_FILE* %275) #12
  %276 = getelementptr inbounds %struct.coff_Reloc, %struct.coff_Reloc* %272, i64 0, i32 2
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %struct.coff_Reloc, %struct.coff_Reloc* %272, i64 0, i32 3
  %279 = load i32, i32* %278, align 8
  switch i32 %279, label %285 [
    i32 2, label %280
    i32 1, label %282
  ]

280:                                              ; preds = %271
  %281 = load i32, i32* @initsym, align 4
  br label %288

282:                                              ; preds = %271
  %283 = load i32, i32* @initsym, align 4
  %284 = add nsw i32 %283, -1
  br label %288

285:                                              ; preds = %271
  %286 = icmp eq i32 %279, 0
  %287 = select i1 %286, i32 2, i32 0
  br label %288

288:                                              ; preds = %285, %282, %280
  %289 = phi i32 [ %281, %280 ], [ %284, %282 ], [ %287, %285 ]
  %290 = add nsw i32 %289, %277
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %290, %struct._IO_FILE* %291) #12
  %292 = getelementptr inbounds %struct.coff_Reloc, %struct.coff_Reloc* %272, i64 0, i32 4
  %293 = load i16, i16* %292, align 4
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %293, %struct._IO_FILE* %294) #12
  %295 = getelementptr inbounds %struct.coff_Reloc, %struct.coff_Reloc* %272, i64 0, i32 0
  %296 = load %struct.coff_Reloc*, %struct.coff_Reloc** %295, align 8
  %297 = icmp eq %struct.coff_Reloc* %296, null
  br i1 %297, label %298, label %271

298:                                              ; preds = %288, %267, %244
  %299 = add nuw nsw i64 %245, 1
  %300 = load i32, i32* @coff_nsects, align 4
  %301 = sext i32 %300 to i64
  %302 = icmp slt i64 %299, %301
  br i1 %302, label %244, label %303

303:                                              ; preds = %298, %173, %139
  %304 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %304) #12
  %305 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %304, i8 -86, i64 18, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #12
  store i64 -6148914691236517206, i64* %2, align 8
  %306 = call i8* @strncpy(i8* nonnull %305, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), i64 8) #12
  %307 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %305, i64 8, %struct._IO_FILE* %307) #12
  %308 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 0, %struct._IO_FILE* %308) #12
  %309 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext -2, %struct._IO_FILE* %309) #12
  %310 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext 0, %struct._IO_FILE* %310) #12
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %312 = call i32 @fputc(i32 103, %struct._IO_FILE* %311) #12
  %313 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %314 = call i32 @fputc(i32 1, %struct._IO_FILE* %313) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #12
  %315 = load i8*, i8** @inname, align 8
  %316 = call i8* @strncpy(i8* nonnull %304, i8* %315, i64 18) #12
  %317 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %304, i64 18, %struct._IO_FILE* %317) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %304, i8 0, i64 18, i1 false) #12
  %318 = load i32, i32* @coff_nsects, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %346, label %320

320:                                              ; preds = %303, %320
  %321 = phi i64 [ %327, %320 ], [ 0, %303 ]
  %322 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %323 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %322, i64 %321
  %324 = load %struct.coff_Section*, %struct.coff_Section** %323, align 8
  %325 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %324, i64 0, i32 9
  %326 = load i8*, i8** %325, align 8
  %327 = add nuw nsw i64 %321, 1
  %328 = trunc i64 %327 to i32
  call fastcc void @coff_symbol(i8* %326, i32 0, i32 0, i32 %328, i32 0, i32 3, i32 1) #12
  %329 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %330 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %329, i64 %321
  %331 = load %struct.coff_Section*, %struct.coff_Section** %330, align 8
  %332 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %331, i64 0, i32 1
  %333 = load i32, i32* %332, align 8
  %334 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %333, %struct._IO_FILE* %334) #12
  %335 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %336 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %335, i64 %321
  %337 = load %struct.coff_Section*, %struct.coff_Section** %336, align 8
  %338 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %337, i64 0, i32 2
  %339 = load i32, i32* %338, align 4
  %340 = trunc i32 %339 to i16
  %341 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %340, %struct._IO_FILE* %341) #12
  %342 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %304, i64 12, %struct._IO_FILE* %342) #12
  %343 = load i32, i32* @coff_nsects, align 4
  %344 = zext i32 %343 to i64
  %345 = icmp ult i64 %327, %344
  br i1 %345, label %320, label %346

346:                                              ; preds = %320, %303
  %347 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #12
  store i64 8391732706607784238, i64* %1, align 8
  %348 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %347, i64 8, %struct._IO_FILE* %348) #12
  %349 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 0, %struct._IO_FILE* %349) #12
  %350 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext -1, %struct._IO_FILE* %350) #12
  %351 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext 0, %struct._IO_FILE* %351) #12
  %352 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %353 = call i32 @fputc(i32 3, %struct._IO_FILE* %352) #12
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %355 = call i32 @fputc(i32 0, %struct._IO_FILE* %354) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #12
  %356 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  call void @saa_rewind(%struct.SAA* %356) #12
  %357 = load i32, i32* @coff_nsyms, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %385, label %359

359:                                              ; preds = %346, %359
  %360 = phi i32 [ %382, %359 ], [ 0, %346 ]
  %361 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  %362 = call i8* @saa_rstruct(%struct.SAA* %361) #12
  %363 = getelementptr inbounds i8, i8* %362, i64 12
  %364 = bitcast i8* %363 to i32*
  %365 = load i32, i32* %364, align 4
  %366 = icmp eq i32 %365, -1
  %367 = select i1 %366, i8* %362, i8* null
  %368 = getelementptr inbounds i8, i8* %362, i64 16
  %369 = bitcast i8* %368 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds i8, i8* %362, i64 20
  %372 = bitcast i8* %371 to i32*
  %373 = load i32, i32* %372, align 4
  %374 = getelementptr inbounds i8, i8* %362, i64 26
  %375 = bitcast i8* %374 to i16*
  %376 = load i16, i16* %375, align 2
  %377 = sext i16 %376 to i32
  %378 = getelementptr inbounds i8, i8* %362, i64 24
  %379 = load i8, i8* %378, align 4, !range !2
  %380 = icmp eq i8 %379, 0
  %381 = select i1 %380, i32 3, i32 2
  call fastcc void @coff_symbol(i8* %367, i32 %365, i32 %370, i32 %373, i32 %377, i32 %381, i32 0) #12
  %382 = add nuw i32 %360, 1
  %383 = load i32, i32* @coff_nsyms, align 4
  %384 = icmp ult i32 %382, %383
  br i1 %384, label %359, label %385

385:                                              ; preds = %359, %346
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %304) #12
  %386 = load i32, i32* @strslen, align 4
  %387 = add i32 %386, 4
  %388 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %387, %struct._IO_FILE* %388) #12
  %389 = load %struct.SAA*, %struct.SAA** @coff_strs, align 8
  %390 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @saa_fpwrite(%struct.SAA* %389, %struct._IO_FILE* %390) #12
  %391 = load i32, i32* @coff_nsects, align 4
  %392 = icmp sgt i32 %391, 0
  %393 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  br i1 %392, label %394, label %437

394:                                              ; preds = %385, %424
  %395 = phi i64 [ %432, %424 ], [ 0, %385 ]
  %396 = phi %struct.coff_Section** [ %436, %424 ], [ %393, %385 ]
  %397 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %396, i64 %395
  %398 = load %struct.coff_Section*, %struct.coff_Section** %397, align 8
  %399 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %398, i64 0, i32 0
  %400 = load %struct.SAA*, %struct.SAA** %399, align 8
  %401 = icmp eq %struct.SAA* %400, null
  br i1 %401, label %406, label %402

402:                                              ; preds = %394
  call void @saa_free(%struct.SAA* nonnull %400) #12
  %403 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %404 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %403, i64 %395
  %405 = load %struct.coff_Section*, %struct.coff_Section** %404, align 8
  br label %406

406:                                              ; preds = %394, %402
  %407 = phi %struct.coff_Section* [ %398, %394 ], [ %405, %402 ]
  %408 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %407, i64 0, i32 4
  %409 = load %struct.coff_Reloc*, %struct.coff_Reloc** %408, align 8
  %410 = icmp eq %struct.coff_Reloc* %409, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %406, %411
  %412 = phi %struct.coff_Reloc* [ %422, %411 ], [ %409, %406 ]
  %413 = phi %struct.coff_Reloc** [ %421, %411 ], [ %408, %406 ]
  %414 = bitcast %struct.coff_Reloc* %412 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = bitcast %struct.coff_Reloc** %413 to i64*
  store i64 %415, i64* %416, align 8
  %417 = bitcast %struct.coff_Reloc* %412 to i8*
  call void @nasm_free(i8* nonnull %417) #12
  %418 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %419 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %418, i64 %395
  %420 = load %struct.coff_Section*, %struct.coff_Section** %419, align 8
  %421 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %420, i64 0, i32 4
  %422 = load %struct.coff_Reloc*, %struct.coff_Reloc** %421, align 8
  %423 = icmp eq %struct.coff_Reloc* %422, null
  br i1 %423, label %424, label %411

424:                                              ; preds = %411, %406
  %425 = phi %struct.coff_Section* [ %407, %406 ], [ %420, %411 ]
  %426 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %425, i64 0, i32 9
  %427 = load i8*, i8** %426, align 8
  call void @nasm_free(i8* %427) #12
  %428 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %429 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %428, i64 %395
  %430 = bitcast %struct.coff_Section** %429 to i8**
  %431 = load i8*, i8** %430, align 8
  call void @nasm_free(i8* %431) #12
  %432 = add nuw nsw i64 %395, 1
  %433 = load i32, i32* @coff_nsects, align 4
  %434 = sext i32 %433 to i64
  %435 = icmp slt i64 %432, %434
  %436 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  br i1 %435, label %394, label %437

437:                                              ; preds = %424, %385
  %438 = phi %struct.coff_Section** [ %393, %385 ], [ %436, %424 ]
  %439 = bitcast %struct.coff_Section** %438 to i8*
  call void @nasm_free(i8* %439) #12
  %440 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  call void @saa_free(%struct.SAA* %440) #12
  %441 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  call void @raa_free(%struct.RAA* %441) #12
  %442 = load %struct.RAA*, %struct.RAA** @symval, align 8
  call void @raa_free(%struct.RAA* %442) #12
  %443 = load %struct.SAA*, %struct.SAA** @coff_strs, align 8
  call void @saa_free(%struct.SAA* %443) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @coff_win32_init() #0 {
  store i8 1, i8* @win32, align 1
  store i8 0, i8* @win64, align 1
  store %struct.coff_Section** null, %struct.coff_Section*** @coff_sects, align 8
  store i32 0, i32* @sectlen, align 4
  store i32 0, i32* @coff_nsects, align 4
  %1 = tail call %struct.SAA* @saa_init(i64 32) #12
  store %struct.SAA* %1, %struct.SAA** @coff_syms, align 8
  store i32 0, i32* @coff_nsyms, align 4
  store %struct.RAA* null, %struct.RAA** @bsym, align 8
  store %struct.RAA* null, %struct.RAA** @symval, align 8
  %2 = tail call %struct.SAA* @saa_init(i64 1) #12
  store %struct.SAA* %2, %struct.SAA** @coff_strs, align 8
  store i32 0, i32* @strslen, align 4
  %3 = tail call i32 @seg_alloc() #12
  store i32 %3, i32* @def_seg, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @coff_win64_init() #0 {
  store i8 0, i8* @win32, align 1
  store i8 1, i8* @win64, align 1
  store %struct.coff_Section** null, %struct.coff_Section*** @coff_sects, align 8
  store i32 0, i32* @sectlen, align 4
  store i32 0, i32* @coff_nsects, align 4
  %1 = tail call %struct.SAA* @saa_init(i64 32) #12
  store %struct.SAA* %1, %struct.SAA** @coff_syms, align 8
  store i32 0, i32* @coff_nsyms, align 4
  store %struct.RAA* null, %struct.RAA** @bsym, align 8
  store %struct.RAA* null, %struct.RAA** @symval, align 8
  %2 = tail call %struct.SAA* @saa_init(i64 1) #12
  store %struct.SAA* %2, %struct.SAA** @coff_strs, align 8
  store i32 0, i32* @strslen, align 4
  %3 = tail call i32 @seg_alloc() #12
  store i32 %3, i32* @def_seg, align 4
  %4 = tail call i32 @seg_alloc() #12
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* @imagebase_sect, align 4
  tail call void @backend_label(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i32 %5, i64 0) #12
  ret void
}

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #3

; Function Attrs: cold noreturn
declare void @nasm_panic(i8*, ...) local_unnamed_addr #9

declare void @nasm_warn(i32, i8*, ...) local_unnamed_addr #3

declare i64 @realsize(i32, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @coff_add_reloc(%struct.coff_Section* nocapture, i32, i16 signext) unnamed_addr #0 {
  %4 = tail call noalias i8* @nasm_malloc(i64 24) #11
  %5 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %0, i64 0, i32 5
  %6 = bitcast %struct.coff_Reloc*** %5 to i8***
  %7 = load i8**, i8*** %6, align 8
  store i8* %4, i8** %7, align 8
  %8 = bitcast i8* %4 to %struct.coff_Reloc**
  %9 = bitcast %struct.coff_Reloc*** %5 to i8**
  store i8* %4, i8** %9, align 8
  store %struct.coff_Reloc* null, %struct.coff_Reloc** %8, align 8
  %10 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %11, i32* %13, align 8
  %14 = icmp eq i32 %1, -1
  br i1 %14, label %15, label %20

15:                                               ; preds = %3
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %4, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 8
  br label %43

20:                                               ; preds = %3
  %21 = getelementptr inbounds i8, i8* %4, i64 16
  %22 = bitcast i8* %21 to i32*
  store i32 2, i32* %22, align 8
  %23 = load i32, i32* @coff_nsects, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %20
  %26 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %27 = sext i32 %23 to i64
  br label %28

28:                                               ; preds = %25, %40
  %29 = phi i64 [ 0, %25 ], [ %41, %40 ]
  %30 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %26, i64 %29
  %31 = load %struct.coff_Section*, %struct.coff_Section** %30, align 8
  %32 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %31, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %1
  br i1 %34, label %35, label %40

35:                                               ; preds = %28
  %36 = trunc i64 %29 to i32
  %37 = shl nuw nsw i32 %36, 1
  %38 = getelementptr inbounds i8, i8* %4, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 4
  store i32 0, i32* %22, align 8
  br label %43

40:                                               ; preds = %28
  %41 = add nuw nsw i64 %29, 1
  %42 = icmp slt i64 %41, %27
  br i1 %42, label %28, label %49

43:                                               ; preds = %35, %15
  %44 = getelementptr inbounds i8, i8* %4, i64 20
  %45 = bitcast i8* %44 to i16*
  store i16 %2, i16* %45, align 4
  %46 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %0, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 4
  br label %73

49:                                               ; preds = %40, %20
  %50 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %51 = sext i32 %1 to i64
  %52 = tail call i64 @raa_read(%struct.RAA* %50, i64 %51) #12
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds i8, i8* %4, i64 12
  %55 = bitcast i8* %54 to i32*
  store i32 %53, i32* %55, align 4
  %56 = load i32, i32* %22, align 8
  %57 = icmp eq i32 %56, 2
  %58 = getelementptr inbounds i8, i8* %4, i64 20
  %59 = bitcast i8* %58 to i16*
  store i16 %2, i16* %59, align 4
  %60 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %0, i64 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %60, align 4
  br i1 %57, label %63, label %73

63:                                               ; preds = %49
  %64 = load i8, i8* @win32, align 1, !range !2
  %65 = load i8, i8* @win64, align 1, !range !2
  %66 = or i8 %65, %64
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = load %struct.RAA*, %struct.RAA** @symval, align 8
  %70 = sext i32 %1 to i64
  %71 = tail call i64 @raa_read(%struct.RAA* %69, i64 %70) #12
  %72 = trunc i64 %71 to i32
  br label %73

73:                                               ; preds = %43, %49, %63, %68
  %74 = phi i32 [ %72, %68 ], [ 0, %63 ], [ 0, %49 ], [ 0, %43 ]
  ret i32 %74
}

declare i64 @raa_read(%struct.RAA*, i64) local_unnamed_addr #3

declare i8* @saa_wstruct(%struct.SAA*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #6

declare %struct.RAA* @raa_write(%struct.RAA*, i64, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i64 @strspn(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: cold noreturn
declare void @nasm_assert_failed(i8*, i32, i8*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

declare void @saa_rewind(%struct.SAA*) local_unnamed_addr #3

declare i8* @saa_rstruct(%struct.SAA*) local_unnamed_addr #3

declare void @saa_fread(%struct.SAA*, i64, i8*, i64) local_unnamed_addr #3

declare void @nasm_free(i8*) local_unnamed_addr #3

declare void @saa_free(%struct.SAA*) local_unnamed_addr #3

declare void @raa_free(%struct.RAA*) local_unnamed_addr #3

declare void @fwriteint16_t(i16 zeroext, %struct._IO_FILE*) local_unnamed_addr #3

declare void @fwriteint32_t(i32, %struct._IO_FILE*) local_unnamed_addr #3

declare void @saa_fpwrite(%struct.SAA*, %struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: cold noreturn
declare void @nasm_fatal(i8*, ...) local_unnamed_addr #9

declare void @nasm_write(i8*, i64, %struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @coff_symbol(i8* readonly, i32, i32, i32, i32, i32, i32) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = icmp eq i8* %0, null
  store i64 -6148914691236517206, i64* %8, align 8
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = call i8* @strncpy(i8* nonnull %9, i8* nonnull %0, i64 8) #12
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %9, i64 8, %struct._IO_FILE* %13) #12
  br label %17

14:                                               ; preds = %7
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 0, %struct._IO_FILE* %15) #12
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %1, %struct._IO_FILE* %16) #12
  br label %17

17:                                               ; preds = %14, %11
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %2, %struct._IO_FILE* %18) #12
  %19 = trunc i32 %3 to i16
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %19, %struct._IO_FILE* %20) #12
  %21 = trunc i32 %4 to i16
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %21, %struct._IO_FILE* %22) #12
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %24 = call i32 @fputc(i32 %5, %struct._IO_FILE* %23)
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %26 = call i32 @fputc(i32 %6, %struct._IO_FILE* %25)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #6

declare void @backend_label(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind allocsize(0) }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { nounwind allocsize(1) }
attributes #15 = { cold noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
!4 = !{!"branch_weights", i32 1, i32 2000}
