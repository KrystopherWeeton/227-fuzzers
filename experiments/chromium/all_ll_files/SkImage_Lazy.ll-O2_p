; ModuleID = '../../third_party/skia/src/image/SkImage_Lazy.cpp'
source_filename = "../../third_party/skia/src/image/SkImage_Lazy.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkIPoint = type { i32, i32 }
%"struct.SkImage_Lazy::Validator" = type <{ %class.sk_sp, %struct.SkImageInfo, %class.sk_sp.1, i32, [4 x i8] }>
%class.sk_sp = type { %class.SharedGenerator* }
%class.SharedGenerator = type { %class.SkNVRefCnt, %"class.std::__1::unique_ptr", %class.SkMutex }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkImageGenerator* }
%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkImage_Lazy = type { %class.SkImage_Base.base, %class.sk_sp, %class.SkMutex, %class.sk_sp.13, %"class.SkIDChangeListener::List" }
%class.SkImage_Base.base = type { %class.SkImage.base, %"struct.std::__1::atomic.9" }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", %class.sk_sp.210, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.240" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.15", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.192" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.14 }
%class.sk_sp.14 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.25, %class.SkTArray.34, %class.SkTArray.36, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.18"*, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.36, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.37 }
%class.sk_sp.37 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.25 = type { %class.SkTHashTable.26 }
%class.SkTHashTable.26 = type { i32, i32, %class.SkAutoTArray.27 }
%class.SkAutoTArray.27 = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.287" }
%"struct.std::__1::pair.287" = type { i32, %class.SkTArray.288* }
%class.SkTArray.288 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.34 = type { %"class.std::__1::unique_ptr.35"*, i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.288, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.36 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.50 }
%class.SkFibBlockSizes.50 = type { i32 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.57, %class.SkTArray.66, %class.GrOpsTask*, %class.SkSTArray.157, %class.SkSTArray.160, %"class.std::__1::unique_ptr.162", %class.sk_sp.178, %class.GrTokenTracker, i8, i8, %class.SkTArray.179, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.57 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.58", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.61, i8, [7 x i8] }>
%class.sk_sp.61 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.62, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.62 = type { i32 }
%class.SkTArray.66 = type { %class.sk_sp.67*, i64 }
%class.sk_sp.67 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.124, i32, i32, %class.SkSTArray.131, %class.SkSTArray.131, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.68 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.68 = type { %class.sk_sp.69*, i64 }
%class.sk_sp.69 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.70, %class.sk_sp.71, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.119" }
%class.SkNVRefCnt.70 = type { %"struct.std::__1::atomic" }
%class.sk_sp.71 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.74 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.72, i8* }
%class.sk_sp.72 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.73, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.73 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.74 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.75, void (i8*)*, i8* }
%class.SkNVRefCnt.75 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.76, i32, [4 x i8] }
%union.anon.76 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.71, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.116, %class.sk_sp.118, %class.sk_sp.118 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.86, %class.SkTMultiMap, %class.SkTDynamicHash.96, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.107, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.78 }
%class.SkTHashTable.78 = type { i32, i32, %class.SkAutoTArray.79 }
%class.SkAutoTArray.79 = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.86 }
%class.SkTDArray.86 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.87, i32, [4 x i8] }>
%class.SkTDynamicHash.87 = type { %class.SkTHashTable.88 }
%class.SkTHashTable.88 = type { i32, i32, %class.SkAutoTArray.89 }
%class.SkAutoTArray.89 = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.96 = type { %class.SkTHashTable.97 }
%class.SkTHashTable.97 = type { i32, i32, %class.SkAutoTArray.98 }
%class.SkAutoTArray.98 = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.105, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.105 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.106, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.106 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.107 = type { %class.SkTHashTable.108 }
%class.SkTHashTable.108 = type { i32, i32, %class.SkAutoTArray.109 }
%class.SkAutoTArray.109 = type { %"class.std::__1::unique_ptr.110" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.116 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.117, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.117 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.118 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i64 }
%class.SkTArray.124 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.125", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.131 = type { %class.SkAlignedSTStorage.132, %class.SkTArray.133 }
%class.SkAlignedSTStorage.132 = type { [8 x i8] }
%class.SkTArray.133 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.134, %class.sk_sp.154, %class.SkTArray.156, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.134 = type { %class.SkAlignedSTStorage.135, %class.SkTArray.136 }
%class.SkAlignedSTStorage.135 = type { [2000 x i8] }
%class.SkTArray.136 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.137", %class.GrOp* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.137", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.69, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.145" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.143 }
%union.anon.143 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.144, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.144 = type { i32 }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.148, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.148 = type { %class.SkAlignedSTStorage.149, %class.SkTArray.150 }
%class.SkAlignedSTStorage.149 = type { [8 x i8] }
%class.SkTArray.150 = type { %"class.std::__1::unique_ptr.145"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.154 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.155, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.155 = type { %"struct.std::__1::atomic" }
%class.SkTArray.156 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.157 = type { %class.SkAlignedSTStorage.158, %class.SkTArray.159 }
%class.SkAlignedSTStorage.158 = type { [32 x i8] }
%class.SkTArray.159 = type { i32*, i64 }
%class.SkSTArray.160 = type { %class.SkAlignedSTStorage.161, %class.SkTArray.66 }
%class.SkAlignedSTStorage.161 = type { [32 x i8] }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.165, %"class.std::__1::unique_ptr.169", %class.GrPathRenderer* }
%class.SkSTArray.165 = type { %class.SkAlignedSTStorage.166, %class.SkTArray.167 }
%class.SkAlignedSTStorage.166 = type { [64 x i8] }
%class.SkTArray.167 = type { %class.sk_sp.168*, i64 }
%class.sk_sp.168 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.178 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.179 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.180, i32, %class.GrRenderTask** }
%class.SkTHashMap.180 = type { %class.SkTHashTable.181 }
%class.SkTHashTable.181 = type { i32, i32, %class.SkAutoTArray.182 }
%class.SkAutoTArray.182 = type { %"class.std::__1::unique_ptr.183" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %class.GrProxyProvider* }
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.210 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %class.GrResourceProvider* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.226, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.226 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.227, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.sk_sp.227 = type { %class.GrGpuBuffer* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkBitmap = type { %class.sk_sp.246, %class.SkPixmap, %class.sk_sp.247 }
%class.sk_sp.246 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.247 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.1, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.248, i8*, i64, i32, i32, i8, i8 }>
%union.anon.248 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%struct.SkBitmapCacheDesc = type { i32, %struct.SkIRect }
%"class.SkBitmapCache::Rec" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.254", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.254" = type { i32 }
%class.sk_sp.277 = type { %class.SkIDChangeListener* }
%class.anon.275 = type { %class.GrUniqueKey*, %class.GrRecordingContext**, %class.SkImage_Lazy*, %class.GrProxyProvider** }
%class.sk_sp.276 = type { %class.GrTextureProxy* }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkMatrix = type { [9 x float], i32 }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.255", %class.sk_sp.72, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.255" = type { [4 x %class.SkPixmap] }
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%class.sk_sp.256 = type { %class.SkCachedData* }
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon.248, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.1, %class.sk_sp.262, i32, i32 }
%class.sk_sp.262 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.GrYUVATextureProxies = type { %"struct.std::__1::array.270", %class.SkYUVAInfo, i32, i8, %"struct.std::__1::array.271" }
%"struct.std::__1::array.270" = type { [4 x %class.sk_sp.69] }
%"struct.std::__1::array.271" = type { [4 x %"struct.SkYUVAInfo::YUVALocation"] }
%"struct.SkYUVAInfo::YUVALocation" = type { i32, i32 }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.266, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.266 = type { %class.GrOpsTask* }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array.273", %"struct.std::__1::array.274", i32, [4 x i8] }>
%"struct.std::__1::array.273" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.274" = type { [4 x i64] }
%class.SkResourceCache = type { %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"*, %"class.SkResourceCache::Hash"*, %class.SkDiscardableMemory* (i64)*, i64, i64, i64, i32, [4 x i8], %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" }
%"struct.SkResourceCache::Rec" = type { i32 (...)**, %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"* }
%"class.SkResourceCache::Hash" = type opaque
%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.272, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.272 = type { %"struct.SkResourceCache::PurgeSharedIDMessage"*, i64 }
%"struct.SkResourceCache::PurgeSharedIDMessage" = type { i64 }
%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type opaque
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.279, %class.sk_sp.281 }
%union.anon.279 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.280, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.280 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.281 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque

$_ZN12SkImage_LazyD2Ev = comdat any

$_ZN12SkImage_LazyD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkImage_Base12onPeekPixelsEP8SkPixmap = comdat any

$_ZNK12SkImage_Base12onPeekBitmapEv = comdat any

$_ZNK12SkImage_Lazy12onHasMipmapsEv = comdat any

$_ZNK12SkImage_Base10onPeekMipsEv = comdat any

$_ZNK12SkImage_Base7contextEv = comdat any

$_ZN12SkImage_Base7onFlushEP15GrDirectContextRK11GrFlushInfo = comdat any

$_ZNK12SkImage_Base6isYUVAEv = comdat any

$_ZN12SkImage_Base26generatingSurfaceIsDeletedEv = comdat any

$_ZNK12SkImage_Base14onPinAsTextureEP18GrRecordingContext = comdat any

$_ZNK12SkImage_Base16onUnpinAsTextureEP18GrRecordingContext = comdat any

$_ZNK12SkImage_Base17isPinnedOnContextEP18GrRecordingContext = comdat any

$_ZNK12SkImage_Lazy17onIsLazyGeneratedEv = comdat any

$_ZNK12SkImage_Base17onIsTextureBackedEv = comdat any

$_ZNK12SkImage_Base13onTextureSizeEv = comdat any

$_ZNK12SkImage_Base24notifyAddedToRasterCacheEv = comdat any

$_ZNK12SkImage_Base17onMakeWithMipmapsE5sk_spI8SkMipmapE = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_ = comdat any

@_ZTV12SkImage_Lazy = hidden unnamed_addr constant { [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImage_Lazy*)* @_ZN12SkImage_LazyD2Ev to i8*), i8* bitcast (void (%class.SkImage_Lazy*)* @_ZN12SkImage_LazyD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.SkPixmap*)* @_ZNK12SkImage_Base12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBitmap* (%class.SkImage_Base*)* @_ZNK12SkImage_Base12onPeekBitmapEv to i8*), i8* bitcast (i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)* @_ZNK12SkImage_Lazy12onReadPixelsEP15GrDirectContextRK11SkImageInfoPvmiiN7SkImage11CachingHintE to i8*), i8* bitcast (i1 (%class.SkImage_Lazy*)* @_ZNK12SkImage_Lazy12onHasMipmapsEv to i8*), i8* bitcast (%class.SkMipmap* (%class.SkImage_Base*)* @_ZNK12SkImage_Base10onPeekMipsEv to i8*), i8* bitcast (void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, {}*, i8*)* @_ZN12SkImage_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_ to i8*), i8* bitcast (void (%class.SkImage_Base*, i32, %class.sk_sp.1*, %struct.SkIRect*, %struct.SkISize*, i1, i32, {}*, i8*)* @_ZN12SkImage_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_ to i8*), i8* bitcast (%class.GrImageContext* (%class.SkImage_Base*)* @_ZNK12SkImage_Base7contextEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)* @_ZN12SkImage_Base7onFlushEP15GrDirectContextRK11GrFlushInfo to i8*), i8* bitcast (i1 (%class.SkImage_Base*)* @_ZNK12SkImage_Base6isYUVAEv to i8*), i8* bitcast (void (%class.SkImage_Base*)* @_ZN12SkImage_Base26generatingSurfaceIsDeletedEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrRecordingContext*)* @_ZNK12SkImage_Base14onPinAsTextureEP18GrRecordingContext to i8*), i8* bitcast (void (%class.SkImage_Base*, %class.GrRecordingContext*)* @_ZNK12SkImage_Base16onUnpinAsTextureEP18GrRecordingContext to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrRecordingContext*)* @_ZNK12SkImage_Base17isPinnedOnContextEP18GrRecordingContext to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)* @_ZNK12SkImage_Base19onGetBackendTextureEbP15GrSurfaceOrigin to i8*), i8* bitcast (i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)* @_ZNK12SkImage_Lazy11getROPixelsEP15GrDirectContextP8SkBitmapN7SkImage11CachingHintE to i8*), i8* bitcast (void (%class.sk_sp.13*, %class.SkImage_Lazy*, %struct.SkIRect*, %class.GrDirectContext*)* @_ZNK12SkImage_Lazy12onMakeSubsetERK7SkIRectP15GrDirectContext to i8*), i8* bitcast (void (%class.sk_sp.72*, %class.SkImage_Lazy*)* @_ZNK12SkImage_Lazy12onRefEncodedEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)* @_ZNK12SkImage_Base16onAsLegacyBitmapEP15GrDirectContextP8SkBitmap to i8*), i8* bitcast (i1 (%class.SkImage_Lazy*)* @_ZNK12SkImage_Lazy17onIsLazyGeneratedEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*)* @_ZNK12SkImage_Base17onIsTextureBackedEv to i8*), i8* bitcast (i64 (%class.SkImage_Base*)* @_ZNK12SkImage_Base13onTextureSizeEv to i8*), i8* bitcast (void (%class.SkImage_Base*)* @_ZNK12SkImage_Base24notifyAddedToRasterCacheEv to i8*), i8* bitcast (i1 (%class.SkImage_Lazy*, %class.GrRecordingContext*)* @_ZNK12SkImage_Lazy9onIsValidEP18GrRecordingContext to i8*), i8* bitcast (void (%class.sk_sp.13*, %class.SkImage_Lazy*, i32, %class.sk_sp.1*, %class.GrDirectContext*)* @_ZNK12SkImage_Lazy28onMakeColorTypeAndColorSpaceE11SkColorType5sk_spI12SkColorSpaceEP15GrDirectContext to i8*), i8* bitcast (void (%class.sk_sp.13*, %class.SkImage_Lazy*, %class.sk_sp.1*)* @_ZNK12SkImage_Lazy23onReinterpretColorSpaceE5sk_spI12SkColorSpaceE to i8*), i8* bitcast (void (%class.sk_sp.13*, %class.SkImage_Base*, %class.sk_sp.247*)* @_ZNK12SkImage_Base17onMakeWithMipmapsE5sk_spI8SkMipmapE to i8*), i8* bitcast (void (%"class.std::__1::tuple"*, %class.SkImage_Lazy*, %class.GrRecordingContext*, i1, i32)* @_ZNK12SkImage_Lazy8onAsViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkImage_Lazy*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)* @_ZNK12SkImage_Lazy21onAsFragmentProcessorEP18GrRecordingContext17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSB_ to i8*)] }, align 8
@.ref.tmp = private constant %struct.SkIPoint zeroinitializer, align 4
@.str = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted = private unnamed_addr constant [13 x i64] [i64 0, i64 3, i64 3, i64 2, i64 2, i64 1, i64 1, i64 4, i64 4, i64 3, i64 3, i64 1, i64 1], align 8
@switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted.2 = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN12SkImage_Lazy9ValidatorC1E5sk_spI15SharedGeneratorEPK11SkColorTypeS1_I12SkColorSpaceE = hidden unnamed_addr alias void (%"struct.SkImage_Lazy::Validator"*, %class.sk_sp*, i32*, %class.sk_sp.1*), void (%"struct.SkImage_Lazy::Validator"*, %class.sk_sp*, i32*, %class.sk_sp.1*)* @_ZN12SkImage_Lazy9ValidatorC2E5sk_spI15SharedGeneratorEPK11SkColorTypeS1_I12SkColorSpaceE
@_ZN12SkImage_LazyC1EPNS_9ValidatorE = hidden unnamed_addr alias void (%class.SkImage_Lazy*, %"struct.SkImage_Lazy::Validator"*), void (%class.SkImage_Lazy*, %"struct.SkImage_Lazy::Validator"*)* @_ZN12SkImage_LazyC2EPNS_9ValidatorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkImage_Lazy9ValidatorC2E5sk_spI15SharedGeneratorEPK11SkColorTypeS1_I12SkColorSpaceE(%"struct.SkImage_Lazy::Validator"*, %class.sk_sp* nocapture, i32* readonly, %class.sk_sp.1* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SharedGenerator* null, %class.SharedGenerator** %5, align 8
  %8 = bitcast %"struct.SkImage_Lazy::Validator"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %0, i64 0, i32 0, i32 0
  %11 = icmp eq i64 %7, 0
  %12 = bitcast %struct.SkImageInfo* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  br i1 %11, label %149, label %13

13:                                               ; preds = %4
  %14 = inttoptr i64 %7 to %class.SharedGenerator*
  %15 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %class.SkImageGenerator*, %class.SkImageGenerator** %15, align 8
  %17 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %16, i64 0, i32 1
  %18 = icmp eq %struct.SkImageInfo* %9, %17
  br i1 %18, label %38, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  %22 = icmp eq %class.SkColorSpace* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %21, %class.SkColorSpace** %24, align 8
  br label %38

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %30 = bitcast %class.SkColorSpace* %29 to i8*
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %21, %class.SkColorSpace** %31, align 8
  %32 = icmp eq %class.SkColorSpace* %29, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @_ZdlPv(i8* %30) #8
  br label %38

38:                                               ; preds = %23, %13, %25, %33, %37
  %39 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %0, i64 0, i32 1, i32 0, i32 1
  %40 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %16, i64 0, i32 1, i32 0, i32 1
  %41 = bitcast i32* %40 to i64*
  %42 = bitcast i32* %39 to i64*
  %43 = load i64, i64* %41, align 8
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %0, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %16, i64 0, i32 1, i32 1
  %46 = bitcast %struct.SkISize* %45 to i64*
  %47 = bitcast %struct.SkISize* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %49, 1
  %51 = trunc i64 %43 to i32
  %52 = and i64 %43, -4294967296
  br i1 %50, label %57, label %53

53:                                               ; preds = %38
  %54 = lshr i64 %48, 32
  %55 = trunc i64 %54 to i32
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %57, label %79

57:                                               ; preds = %38, %53
  %58 = load %class.SharedGenerator*, %class.SharedGenerator** %10, align 8
  store %class.SharedGenerator* null, %class.SharedGenerator** %10, align 8
  %59 = icmp eq %class.SharedGenerator* %58, null
  br i1 %59, label %149, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %58, i64 0, i32 0
  %62 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %149

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %61, i64 4
  %67 = bitcast %class.SkNVRefCnt* %66 to %class.SkSemaphore*
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %67) #9
  %68 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %61, i64 2
  %69 = bitcast %class.SkNVRefCnt* %68 to %class.SkImageGenerator**
  %70 = load %class.SkImageGenerator*, %class.SkImageGenerator** %69, align 8
  store %class.SkImageGenerator* null, %class.SkImageGenerator** %69, align 8
  %71 = icmp eq %class.SkImageGenerator* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %65
  %73 = bitcast %class.SkImageGenerator* %70 to void (%class.SkImageGenerator*)***
  %74 = load void (%class.SkImageGenerator*)**, void (%class.SkImageGenerator*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %74, i64 1
  %76 = load void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %75, align 8
  tail call void %76(%class.SkImageGenerator* nonnull %70) #9
  br label %77

77:                                               ; preds = %72, %65
  %78 = bitcast %class.SharedGenerator* %58 to i8*
  tail call void @_ZdlPv(i8* %78) #8
  br label %149

79:                                               ; preds = %53
  %80 = load %class.SharedGenerator*, %class.SharedGenerator** %10, align 8
  %81 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %80, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %class.SkImageGenerator*, %class.SkImageGenerator** %81, align 8
  %83 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %82, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %0, i64 0, i32 3
  store i32 %84, i32* %85, align 8
  %86 = icmp eq i32* %2, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %79
  %88 = load i32, i32* %2, align 4
  %89 = icmp eq i32 %88, %51
  br i1 %89, label %90, label %94

90:                                               ; preds = %87, %79
  %91 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  %92 = load %class.SkColorSpace*, %class.SkColorSpace** %91, align 8
  %93 = icmp eq %class.SkColorSpace* %92, null
  br i1 %93, label %149, label %123

94:                                               ; preds = %87
  %95 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %96 = load %class.SkColorSpace*, %class.SkColorSpace** %95, align 8
  %97 = icmp eq %class.SkColorSpace* %96, null
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = ptrtoint %class.SkColorSpace* %96 to i64
  %100 = zext i32 %88 to i64
  %101 = or i64 %52, %100
  %102 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 %99, i64* %102, align 8
  br label %118

103:                                              ; preds = %94
  %104 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 1 monotonic, !noalias !2
  %106 = load %class.SkColorSpace*, %class.SkColorSpace** %95, align 8
  %107 = bitcast %class.SkColorSpace* %106 to i8*
  %108 = ptrtoint %class.SkColorSpace* %96 to i64
  %109 = zext i32 %88 to i64
  %110 = or i64 %52, %109
  %111 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 %108, i64* %111, align 8
  %112 = icmp eq %class.SkColorSpace* %106, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %118

117:                                              ; preds = %113
  tail call void @_ZdlPv(i8* %107) #8
  br label %118

118:                                              ; preds = %103, %113, %117, %98
  %119 = phi i64 [ %101, %98 ], [ %110, %117 ], [ %110, %113 ], [ %110, %103 ]
  store i64 %119, i64* %42, align 8
  store i64 %48, i64* %47, align 8
  %120 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  %121 = load %class.SkColorSpace*, %class.SkColorSpace** %120, align 8
  %122 = icmp eq %class.SkColorSpace* %121, null
  br i1 %122, label %147, label %123

123:                                              ; preds = %90, %118
  %124 = phi %class.SkColorSpace* [ %121, %118 ], [ %92, %90 ]
  %125 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 1 monotonic
  %127 = ptrtoint %class.SkColorSpace* %124 to i64
  %128 = load i64, i64* %47, align 8, !noalias !9
  %129 = load i32, i32* %39, align 8, !noalias !12
  %130 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %0, i64 0, i32 1, i32 0, i32 2
  %131 = load i32, i32* %130, align 4, !noalias !12
  %132 = zext i32 %129 to i64
  %133 = zext i32 %131 to i64
  %134 = shl nuw i64 %133, 32
  %135 = or i64 %134, %132
  %136 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %137 = load %class.SkColorSpace*, %class.SkColorSpace** %136, align 8
  %138 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 %127, i64* %138, align 8
  %139 = icmp eq %class.SkColorSpace* %137, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %123
  %141 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 -1 acq_rel
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = bitcast %class.SkColorSpace* %137 to i8*
  tail call void @_ZdlPv(i8* %145) #8
  br label %146

146:                                              ; preds = %123, %140, %144
  store i64 %135, i64* %42, align 8
  store i64 %128, i64* %47, align 8
  br label %147

147:                                              ; preds = %118, %146
  %148 = tail call i32 @_ZN8SkNextID7ImageIDEv() #9
  store i32 %148, i32* %85, align 8
  br label %149

149:                                              ; preds = %90, %4, %77, %60, %57, %147
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN8SkNextID7ImageIDEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkImage_LazyC2EPNS_9ValidatorE(%class.SkImage_Lazy*, %"struct.SkImage_Lazy::Validator"*) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage_Base*
  %4 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN12SkImage_BaseC2ERK11SkImageInfoj(%class.SkImage_Base* %3, %struct.SkImageInfo* dereferenceable(24) %4, i32 %6) #9
  %7 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTV12SkImage_Lazy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %1, i64 0, i32 0, i32 0
  %10 = bitcast %"struct.SkImage_Lazy::Validator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SharedGenerator* null, %class.SharedGenerator** %9, align 8
  %12 = bitcast %class.sk_sp* %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 2, i32 0, i32 2
  %16 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 4
  %17 = bitcast %"struct.SkSemaphore::OSSemaphore"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %16) #9
  ret void
}

declare void @_ZN12SkImage_BaseC2ERK11SkImageInfoj(%class.SkImage_Base*, %struct.SkImageInfo* dereferenceable(24), i32) unnamed_addr #2

declare void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkImage_Lazy11getROPixelsEP15GrDirectContextP8SkBitmapN7SkImage11CachingHintE(%class.SkImage_Lazy*, %class.GrDirectContext* nocapture readnone, %class.SkBitmap*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkBitmapCacheDesc, align 4
  %6 = alloca %class.SkPixmap, align 8
  %7 = bitcast %struct.SkBitmapCacheDesc* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #9
  %8 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage*
  %9 = bitcast %struct.SkBitmapCacheDesc* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -86, i64 20, i1 false)
  call void @_ZN17SkBitmapCacheDesc4MakeEPK7SkImage(%struct.SkBitmapCacheDesc* nonnull sret %5, %class.SkImage* %8) #9
  %10 = call zeroext i1 @_ZN13SkBitmapCache4FindERK17SkBitmapCacheDescP8SkBitmap(%struct.SkBitmapCacheDesc* nonnull dereferenceable(20) %5, %class.SkBitmap* %2) #9
  br i1 %10, label %107, label %11

11:                                               ; preds = %4
  %12 = icmp eq i32 %3, 0
  br i1 %12, label %13, label %70

13:                                               ; preds = %11
  %14 = bitcast %class.SkPixmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 40, i1 false) #9
  %15 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 0, i32 0, i32 2
  %16 = call %"class.SkBitmapCache::Rec"* @_ZN13SkBitmapCache5AllocERK17SkBitmapCacheDescRK11SkImageInfoP8SkPixmap(%struct.SkBitmapCacheDesc* nonnull dereferenceable(20) %5, %struct.SkImageInfo* dereferenceable(24) %15, %class.SkPixmap* nonnull %6) #9
  %17 = icmp eq %"class.SkBitmapCache::Rec"* %16, null
  br i1 %17, label %59, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 1, i32 0
  %20 = load %class.SharedGenerator*, %class.SharedGenerator** %19, align 8
  %21 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %20, i64 0, i32 2
  %22 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acquire
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %21, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %26) #9
  br label %27

27:                                               ; preds = %25, %18
  %28 = load %class.SharedGenerator*, %class.SharedGenerator** %19, align 8
  %29 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %class.SkImageGenerator*, %class.SkImageGenerator** %29, align 8
  %31 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZN16SkImageGenerator9getPixelsERK11SkImageInfoPvm(%class.SkImageGenerator* %30, %struct.SkImageInfo* dereferenceable(24) %31, i8* %33, i64 %35) #9
  %37 = atomicrmw add i32* %22, i32 1 release
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %27
  %40 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %21, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %40, i32 1) #9
  br i1 %36, label %42, label %58

41:                                               ; preds = %27
  br i1 %36, label %42, label %58

42:                                               ; preds = %39, %41
  call void @_ZN13SkBitmapCache3AddENSt3__110unique_ptrINS_3RecENS_10RecDeleterEEEP8SkBitmap(%"class.SkBitmapCache::Rec"* nonnull %16, %class.SkBitmap* %2) #9
  %43 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage_Base*
  %44 = bitcast %class.SkImage_Lazy* %0 to void (%class.SkImage_Base*)***
  %45 = load void (%class.SkImage_Base*)**, void (%class.SkImage_Base*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkImage_Base*)*, void (%class.SkImage_Base*)** %45, i64 25
  %47 = load void (%class.SkImage_Base*)*, void (%class.SkImage_Base*)** %46, align 8
  call void %47(%class.SkImage_Base* %43) #9
  %48 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %49 = load %class.SkColorSpace*, %class.SkColorSpace** %48, align 8
  %50 = icmp eq %class.SkColorSpace* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = bitcast %class.SkColorSpace* %49 to i8*
  call void @_ZdlPv(i8* %56) #8
  br label %57

57:                                               ; preds = %42, %51, %55
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  br label %107

58:                                               ; preds = %39, %41
  call void @_ZN13SkBitmapCache16PrivateDeleteRecEPNS_3RecE(%"class.SkBitmapCache::Rec"* nonnull %16) #9
  br label %59

59:                                               ; preds = %13, %58
  %60 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load %class.SkColorSpace*, %class.SkColorSpace** %60, align 8
  %62 = icmp eq %class.SkColorSpace* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = bitcast %class.SkColorSpace* %61 to i8*
  call void @_ZdlPv(i8* %68) #8
  br label %69

69:                                               ; preds = %59, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  br label %107

70:                                               ; preds = %11
  %71 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 0, i32 0, i32 2
  %72 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %71, i64 0, i32 0
  %76 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %75) #9
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %77, %74
  %79 = icmp ult i64 %78, 2147483648
  %80 = select i1 %79, i64 %78, i64 0
  %81 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %2, %struct.SkImageInfo* dereferenceable(24) %71, i64 %80) #9
  br i1 %81, label %82, label %107

82:                                               ; preds = %70
  %83 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 1, i32 0
  %84 = load %class.SharedGenerator*, %class.SharedGenerator** %83, align 8
  %85 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %84, i64 0, i32 2
  %86 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw sub i32* %86, i32 1 acquire
  %88 = icmp slt i32 %87, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %85, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %90) #9
  br label %91

91:                                               ; preds = %89, %82
  %92 = load %class.SharedGenerator*, %class.SharedGenerator** %83, align 8
  %93 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %92, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %class.SkImageGenerator*, %class.SkImageGenerator** %93, align 8
  %95 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2
  %96 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = call zeroext i1 @_ZN16SkImageGenerator9getPixelsERK11SkImageInfoPvm(%class.SkImageGenerator* %94, %struct.SkImageInfo* dereferenceable(24) %95, i8* %97, i64 %99) #9
  %101 = atomicrmw add i32* %86, i32 1 release
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %91
  %104 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %85, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %104, i32 1) #9
  br i1 %100, label %106, label %107

105:                                              ; preds = %91
  br i1 %100, label %106, label %107

106:                                              ; preds = %103, %105
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %2) #9
  br label %107

107:                                              ; preds = %103, %105, %70, %106, %57, %4, %69
  %108 = phi i1 [ false, %69 ], [ false, %105 ], [ true, %4 ], [ false, %103 ], [ true, %57 ], [ true, %106 ], [ false, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #9
  ret i1 %108
}

declare void @_ZN17SkBitmapCacheDesc4MakeEPK7SkImage(%struct.SkBitmapCacheDesc* sret, %class.SkImage*) local_unnamed_addr #2

declare zeroext i1 @_ZN13SkBitmapCache4FindERK17SkBitmapCacheDescP8SkBitmap(%struct.SkBitmapCacheDesc* dereferenceable(20), %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.SkBitmapCache::Rec"* @_ZN13SkBitmapCache5AllocERK17SkBitmapCacheDescRK11SkImageInfoP8SkPixmap(%struct.SkBitmapCacheDesc* dereferenceable(20), %struct.SkImageInfo* dereferenceable(24), %class.SkPixmap*) local_unnamed_addr #2

declare void @_ZN13SkBitmapCache3AddENSt3__110unique_ptrINS_3RecENS_10RecDeleterEEEP8SkBitmap(%"class.SkBitmapCache::Rec"*, %class.SkBitmap*) local_unnamed_addr #2

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkImage_Lazy12onReadPixelsEP15GrDirectContextRK11SkImageInfoPvmiiN7SkImage11CachingHintE(%class.SkImage_Lazy*, %class.GrDirectContext*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca %class.SkBitmap, align 8
  %10 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %9) #9
  %11 = bitcast %class.SkImage_Lazy* %0 to i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %12 = load i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %12, i64 18
  %14 = load i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %13, align 8
  %15 = call zeroext i1 %14(%class.SkImage_Lazy* %0, %class.GrDirectContext* %1, %class.SkBitmap* nonnull %9, i32 %7) #9
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap* nonnull %9, %struct.SkImageInfo* dereferenceable(24) %2, i8* %3, i64 %4, i32 %5, i32 %6) #9
  br label %18

18:                                               ; preds = %8, %16
  %19 = phi i1 [ %17, %16 ], [ false, %8 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  ret i1 %19
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy12onRefEncodedEv(%class.sk_sp.72* noalias sret, %class.SkImage_Lazy*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 1, i32 0
  %4 = load %class.SharedGenerator*, %class.SharedGenerator** %3, align 8
  %5 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %class.SkImageGenerator*, %class.SkImageGenerator** %5, align 8
  %7 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %31

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %4, i64 0, i32 2
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #9
  br label %19

19:                                               ; preds = %12, %17
  %20 = load %class.SharedGenerator*, %class.SharedGenerator** %3, align 8
  %21 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %class.SkImageGenerator*, %class.SkImageGenerator** %21, align 8
  %23 = bitcast %class.SkImageGenerator* %22 to void (%class.sk_sp.72*, %class.SkImageGenerator*)***
  %24 = load void (%class.sk_sp.72*, %class.SkImageGenerator*)**, void (%class.sk_sp.72*, %class.SkImageGenerator*)*** %23, align 8, !noalias !15
  %25 = getelementptr inbounds void (%class.sk_sp.72*, %class.SkImageGenerator*)*, void (%class.sk_sp.72*, %class.SkImageGenerator*)** %24, i64 2
  %26 = load void (%class.sk_sp.72*, %class.SkImageGenerator*)*, void (%class.sk_sp.72*, %class.SkImageGenerator*)** %25, align 8, !noalias !15
  tail call void %26(%class.sk_sp.72* sret %0, %class.SkImageGenerator* %22) #9
  %27 = atomicrmw add i32* %14, i32 1 release
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %30, i32 1) #9
  br label %33

31:                                               ; preds = %2
  %32 = getelementptr inbounds %class.sk_sp.72, %class.sk_sp.72* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %32, align 8
  br label %33

33:                                               ; preds = %29, %19, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkImage_Lazy9onIsValidEP18GrRecordingContext(%class.SkImage_Lazy*, %class.GrRecordingContext*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 1, i32 0
  %4 = load %class.SharedGenerator*, %class.SharedGenerator** %3, align 8
  %5 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %4, i64 0, i32 2
  %6 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acquire
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %10) #9
  br label %11

11:                                               ; preds = %2, %9
  %12 = load %class.SharedGenerator*, %class.SharedGenerator** %3, align 8
  %13 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.SkImageGenerator*, %class.SkImageGenerator** %13, align 8
  %15 = bitcast %class.SkImageGenerator* %14 to i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)***
  %16 = load i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)**, i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)*, i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)** %16, i64 4
  %18 = load i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)*, i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.SkImageGenerator* %14, %class.GrRecordingContext* %1) #9
  %20 = atomicrmw add i32* %6, i32 1 release
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %5, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %23, i32 1) #9
  br label %24

24:                                               ; preds = %11, %22
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy12onMakeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.13* noalias sret, %class.SkImage_Lazy*, %struct.SkIRect* dereferenceable(16), %class.GrDirectContext*) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.13, align 8
  %6 = bitcast %class.sk_sp.13* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %5, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %7, align 8
  %8 = icmp eq %class.GrDirectContext* %3, null
  %9 = bitcast %class.SkImage_Lazy* %1 to %class.SkImage*
  br i1 %8, label %11, label %10

10:                                               ; preds = %4
  call void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.13* nonnull sret %5, %class.SkImage* %9, %class.GrDirectContext* nonnull %3, i1 zeroext false, i1 zeroext true) #9
  br label %12

11:                                               ; preds = %4
  call void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.13* nonnull sret %5, %class.SkImage* %9, i32 1) #9
  br label %12

12:                                               ; preds = %11, %10
  %13 = load %class.SkImage*, %class.SkImage** %7, align 8
  %14 = icmp eq %class.SkImage* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %16, align 8
  br label %30

17:                                               ; preds = %12
  call void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.13* sret %0, %class.SkImage* nonnull %13, %struct.SkIRect* dereferenceable(16) %2, %class.GrDirectContext* %3) #9
  %18 = load %class.SkImage*, %class.SkImage** %7, align 8
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.SkImage, %class.SkImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImage* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImage* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #9
  br label %30

30:                                               ; preds = %15, %17, %20, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

declare void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.13* sret, %class.SkImage*, %class.GrDirectContext*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.13* sret, %class.SkImage*, i32) local_unnamed_addr #2

declare void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.13* sret, %class.SkImage*, %struct.SkIRect* dereferenceable(16), %class.GrDirectContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy28onMakeColorTypeAndColorSpaceE11SkColorType5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp.13* noalias nocapture sret, %class.SkImage_Lazy*, i32, %class.sk_sp.1* nocapture readonly, %class.GrDirectContext* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"struct.SkImage_Lazy::Validator", align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp.1, align 8
  store i32 %2, i32* %6, align 4
  %10 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 2
  %11 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acquire
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %15) #9
  br label %16

16:                                               ; preds = %5, %14
  %17 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 3, i32 0
  %18 = load %class.SkImage*, %class.SkImage** %17, align 8
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = load i32, i32* %6, align 4
  %22 = tail call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* nonnull %18) #9
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %27 = load %class.SkImage*, %class.SkImage** %17, align 8
  %28 = tail call %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage* %27) #9
  %29 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %26, %class.SkColorSpace* %28) #9
  br i1 %29, label %30, label %38

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %0, i64 0, i32 0
  %32 = load %class.SkImage*, %class.SkImage** %17, align 8
  %33 = icmp eq %class.SkImage* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImage, %class.SkImage* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %30, %34
  store %class.SkImage* %32, %class.SkImage** %31, align 8
  br label %165

38:                                               ; preds = %16, %24, %20
  %39 = bitcast %"struct.SkImage_Lazy::Validator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 48, i1 false)
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %41 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 1, i32 0
  %42 = load %class.SharedGenerator*, %class.SharedGenerator** %41, align 8
  %43 = icmp eq %class.SharedGenerator* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %38, %44
  store %class.SharedGenerator* %42, %class.SharedGenerator** %40, align 8
  %48 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %9, i64 0, i32 0
  %49 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  %50 = load %class.SkColorSpace*, %class.SkColorSpace** %49, align 8
  %51 = icmp eq %class.SkColorSpace* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  store %class.SkColorSpace* null, %class.SkColorSpace** %48, align 8
  call void @_ZN12SkImage_Lazy9ValidatorC2E5sk_spI15SharedGeneratorEPK11SkColorTypeS1_I12SkColorSpaceE(%"struct.SkImage_Lazy::Validator"* nonnull %7, %class.sk_sp* nonnull %8, i32* nonnull %6, %class.sk_sp.1* nonnull %9)
  br label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic
  store %class.SkColorSpace* %50, %class.SkColorSpace** %48, align 8
  call void @_ZN12SkImage_Lazy9ValidatorC2E5sk_spI15SharedGeneratorEPK11SkColorTypeS1_I12SkColorSpaceE(%"struct.SkImage_Lazy::Validator"* nonnull %7, %class.sk_sp* nonnull %8, i32* nonnull %6, %class.sk_sp.1* nonnull %9)
  %56 = atomicrmw add i32* %54, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = bitcast %class.SkColorSpace* %50 to i8*
  call void @_ZdlPv(i8* %59) #8
  br label %60

60:                                               ; preds = %52, %53, %58
  %61 = load %class.SharedGenerator*, %class.SharedGenerator** %40, align 8
  %62 = icmp eq %class.SharedGenerator* %61, null
  br i1 %62, label %82, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %61, i64 0, i32 0
  %65 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %82

68:                                               ; preds = %63
  %69 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %64, i64 4
  %70 = bitcast %class.SkNVRefCnt* %69 to %class.SkSemaphore*
  call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %70) #9
  %71 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %64, i64 2
  %72 = bitcast %class.SkNVRefCnt* %71 to %class.SkImageGenerator**
  %73 = load %class.SkImageGenerator*, %class.SkImageGenerator** %72, align 8
  store %class.SkImageGenerator* null, %class.SkImageGenerator** %72, align 8
  %74 = icmp eq %class.SkImageGenerator* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = bitcast %class.SkImageGenerator* %73 to void (%class.SkImageGenerator*)***
  %77 = load void (%class.SkImageGenerator*)**, void (%class.SkImageGenerator*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %77, i64 1
  %79 = load void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %78, align 8
  call void %79(%class.SkImageGenerator* nonnull %73) #9
  br label %80

80:                                               ; preds = %75, %68
  %81 = bitcast %class.SharedGenerator* %61 to i8*
  call void @_ZdlPv(i8* %81) #8
  br label %82

82:                                               ; preds = %60, %63, %80
  %83 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %7, i64 0, i32 0, i32 0
  %84 = load %class.SharedGenerator*, %class.SharedGenerator** %83, align 8
  %85 = icmp eq %class.SharedGenerator* %84, null
  br i1 %85, label %120, label %86

86:                                               ; preds = %82
  %87 = call i8* @_Znwm(i64 112) #8
  %88 = bitcast i8* %87 to %class.SkImage_Base*
  %89 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %7, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %7, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  call void @_ZN12SkImage_BaseC2ERK11SkImageInfoj(%class.SkImage_Base* nonnull %88, %struct.SkImageInfo* dereferenceable(24) %89, i32 %91) #9
  %92 = bitcast i8* %87 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTV12SkImage_Lazy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds i8, i8* %87, i64 48
  %94 = bitcast %"struct.SkImage_Lazy::Validator"* %7 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.SharedGenerator* null, %class.SharedGenerator** %83, align 8
  %96 = bitcast i8* %93 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %87, i64 56
  %98 = bitcast i8* %97 to i32*
  store i32 1, i32* %98, align 4
  %99 = getelementptr inbounds i8, i8* %87, i64 60
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %87, i64 64
  %101 = getelementptr inbounds i8, i8* %87, i64 80
  %102 = bitcast i8* %101 to %"class.SkIDChangeListener::List"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #9
  call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %102) #9
  %103 = ptrtoint i8* %87 to i64
  %104 = getelementptr inbounds i8, i8* %87, i64 8
  %105 = bitcast i8* %104 to i32*
  %106 = atomicrmw add i32* %105, i32 1 monotonic
  %107 = load %class.SkImage*, %class.SkImage** %17, align 8
  %108 = bitcast %class.SkImage** %17 to i8**
  store i8* %87, i8** %108, align 8
  %109 = icmp eq %class.SkImage* %107, null
  br i1 %109, label %120, label %110

110:                                              ; preds = %86
  %111 = getelementptr inbounds %class.SkImage, %class.SkImage* %107, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = bitcast %class.SkImage* %107 to %class.SkRefCntBase*
  %116 = bitcast %class.SkImage* %107 to void (%class.SkRefCntBase*)***
  %117 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %116, align 8
  %118 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, i64 2
  %119 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, align 8
  call void %119(%class.SkRefCntBase* nonnull %115) #9
  br label %120

120:                                              ; preds = %82, %86, %110, %114
  %121 = phi i64 [ %103, %86 ], [ %103, %114 ], [ %103, %110 ], [ 0, %82 ]
  %122 = bitcast %class.sk_sp.13* %0 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %7, i64 0, i32 2, i32 0
  %124 = load %class.SkColorSpace*, %class.SkColorSpace** %123, align 8
  %125 = icmp eq %class.SkColorSpace* %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = bitcast %class.SkColorSpace* %124 to i8*
  call void @_ZdlPv(i8* %131) #8
  br label %132

132:                                              ; preds = %130, %126, %120
  %133 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %134 = load %class.SkColorSpace*, %class.SkColorSpace** %133, align 8
  %135 = icmp eq %class.SkColorSpace* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast %class.SkColorSpace* %134 to i8*
  call void @_ZdlPv(i8* %141) #8
  br label %142

142:                                              ; preds = %140, %136, %132
  %143 = load %class.SharedGenerator*, %class.SharedGenerator** %83, align 8
  %144 = icmp eq %class.SharedGenerator* %143, null
  br i1 %144, label %164, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %143, i64 0, i32 0
  %147 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %164

150:                                              ; preds = %145
  %151 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %146, i64 4
  %152 = bitcast %class.SkNVRefCnt* %151 to %class.SkSemaphore*
  call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %152) #9
  %153 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %146, i64 2
  %154 = bitcast %class.SkNVRefCnt* %153 to %class.SkImageGenerator**
  %155 = load %class.SkImageGenerator*, %class.SkImageGenerator** %154, align 8
  store %class.SkImageGenerator* null, %class.SkImageGenerator** %154, align 8
  %156 = icmp eq %class.SkImageGenerator* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %150
  %158 = bitcast %class.SkImageGenerator* %155 to void (%class.SkImageGenerator*)***
  %159 = load void (%class.SkImageGenerator*)**, void (%class.SkImageGenerator*)*** %158, align 8
  %160 = getelementptr inbounds void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %159, i64 1
  %161 = load void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %160, align 8
  call void %161(%class.SkImageGenerator* nonnull %155) #9
  br label %162

162:                                              ; preds = %157, %150
  %163 = bitcast %class.SharedGenerator* %143 to i8*
  call void @_ZdlPv(i8* %163) #8
  br label %164

164:                                              ; preds = %142, %145, %162
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #9
  br label %165

165:                                              ; preds = %164, %37
  %166 = atomicrmw add i32* %11, i32 1 release
  %167 = icmp slt i32 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %10, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %169, i32 1) #9
  br label %170

170:                                              ; preds = %165, %168
  ret void
}

declare i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage*) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #2

declare %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy23onReinterpretColorSpaceE5sk_spI12SkColorSpaceE(%class.sk_sp.13* noalias sret, %class.SkImage_Lazy*, %class.sk_sp.1* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = alloca %class.SkPixmap, align 8
  %7 = alloca %class.sk_sp.1, align 8
  %8 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %4) #9
  %9 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = bitcast %class.SkImage_Lazy* %1 to %class.SkImage*
  %11 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  %12 = bitcast %class.sk_sp.1* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %11, align 8
  %14 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 1
  %15 = bitcast %struct.SkISize* %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !18
  %17 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %18 = load i32, i32* %17, align 8, !noalias !21
  %19 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %20 = load i32, i32* %19, align 4, !noalias !21
  %21 = zext i32 %18 to i64
  %22 = zext i32 %20 to i64
  %23 = shl nuw i64 %22, 32
  %24 = or i64 %23, %21
  %25 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %13, i64* %25, align 8, !alias.scope !24
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %27 = bitcast i32* %26 to i64*
  store i64 %24, i64* %27, align 8, !alias.scope !24
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  store i64 %16, i64* %29, align 8, !alias.scope !24
  %30 = shl i64 %16, 32
  %31 = ashr exact i64 %30, 32
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0
  %33 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %32) #9
  %34 = sext i32 %33 to i64
  %35 = mul nsw i64 %31, %34
  %36 = icmp ult i64 %35, 2147483648
  %37 = select i1 %36, i64 %35, i64 0
  %38 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %4, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i64 %37) #9
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %3
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = bitcast %class.SkColorSpace* %40 to i8*
  call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %46, %42, %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  br i1 %38, label %49, label %121

49:                                               ; preds = %48
  %50 = bitcast %class.SkPixmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #9
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1
  %52 = bitcast %class.SkPixmap* %51 to i8*
  %53 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2
  %54 = bitcast %struct.SkImageInfo* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 8 %52, i64 16, i1 false) #9
  %55 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %57 = load %class.SkColorSpace*, %class.SkColorSpace** %56, align 8
  %58 = icmp eq %class.SkColorSpace* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic
  br label %62

62:                                               ; preds = %49, %59
  store %class.SkColorSpace* %57, %class.SkColorSpace** %55, align 8
  %63 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 1
  %64 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 0, i32 1
  %65 = bitcast i32* %64 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8
  %67 = bitcast i32* %63 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 8
  call void @_ZNK7SkImage13refColorSpaceEv(%class.sk_sp.1* nonnull sret %7, %class.SkImage* %10) #9
  call void @_ZN8SkPixmap13setColorSpaceE5sk_spI12SkColorSpaceE(%class.SkPixmap* nonnull %6, %class.sk_sp.1* nonnull %7) #9
  %68 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %7, i64 0, i32 0
  %69 = load %class.SkColorSpace*, %class.SkColorSpace** %68, align 8
  %70 = icmp eq %class.SkColorSpace* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = bitcast %class.SkColorSpace* %69 to i8*
  call void @_ZdlPv(i8* %76) #8
  br label %77

77:                                               ; preds = %62, %71, %75
  %78 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 1, i32 0
  %79 = load %class.SharedGenerator*, %class.SharedGenerator** %78, align 8
  %80 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %79, i64 0, i32 2
  %81 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw sub i32* %81, i32 1 acquire
  %83 = icmp slt i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %77
  %85 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %80, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %85) #9
  br label %86

86:                                               ; preds = %77, %84
  %87 = load %class.SharedGenerator*, %class.SharedGenerator** %78, align 8
  %88 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %87, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %class.SkImageGenerator*, %class.SkImageGenerator** %88, align 8
  %90 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2
  %91 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = call zeroext i1 @_ZN16SkImageGenerator9getPixelsERK11SkImageInfoPvm(%class.SkImageGenerator* %89, %struct.SkImageInfo* dereferenceable(24) %90, i8* %92, i64 %94) #9
  %96 = atomicrmw add i32* %81, i32 1 release
  %97 = icmp slt i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %86
  %99 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %80, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %99, i32 1) #9
  br label %100

100:                                              ; preds = %86, %98
  br i1 %95, label %101, label %111

101:                                              ; preds = %100
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %4) #9
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.13* sret %0, %class.SkBitmap* nonnull %4) #9
  %102 = load %class.SkColorSpace*, %class.SkColorSpace** %55, align 8
  %103 = icmp eq %class.SkColorSpace* %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = bitcast %class.SkColorSpace* %102 to i8*
  call void @_ZdlPv(i8* %109) #8
  br label %110

110:                                              ; preds = %101, %104, %108
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #9
  br label %123

111:                                              ; preds = %100
  %112 = load %class.SkColorSpace*, %class.SkColorSpace** %55, align 8
  %113 = icmp eq %class.SkColorSpace* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = bitcast %class.SkColorSpace* %112 to i8*
  call void @_ZdlPv(i8* %119) #8
  br label %120

120:                                              ; preds = %111, %114, %118
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #9
  br label %121

121:                                              ; preds = %120, %48
  %122 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %122, align 8
  br label %123

123:                                              ; preds = %110, %121
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #9
  ret void
}

declare void @_ZN8SkPixmap13setColorSpaceE5sk_spI12SkColorSpaceE(%class.SkPixmap*, %class.sk_sp.1*) local_unnamed_addr #2

declare void @_ZNK7SkImage13refColorSpaceEv(%class.sk_sp.1* sret, %class.SkImage*) local_unnamed_addr #2

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.13* sret, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.13* noalias nocapture sret, %class.SkImageGenerator*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkImage_Lazy::Validator", align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp.1, align 8
  %6 = bitcast %"struct.SkImage_Lazy::Validator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = icmp eq %class.SkImageGenerator* %1, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %class.SkImageGenerator* %1 to i64
  %10 = tail call i8* @_Znwm(i64 32) #8, !noalias !27
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4, !noalias !27
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8, !noalias !27
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4, !noalias !27
  %16 = getelementptr inbounds i8, i8* %10, i64 20
  store i8 0, i8* %16, align 1, !noalias !27
  %17 = getelementptr inbounds i8, i8* %10, i64 24
  %18 = bitcast i8* %17 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %18, align 8, !noalias !27
  %19 = bitcast %class.sk_sp* %4 to i8**
  store i8* %10, i8** %19, align 8, !alias.scope !27
  br label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SharedGenerator* null, %class.SharedGenerator** %21, align 8, !alias.scope !27
  br label %22

22:                                               ; preds = %20, %8
  %23 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %5, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %23, align 8
  call void @_ZN12SkImage_Lazy9ValidatorC2E5sk_spI15SharedGeneratorEPK11SkColorTypeS1_I12SkColorSpaceE(%"struct.SkImage_Lazy::Validator"* nonnull %3, %class.sk_sp* nonnull %4, i32* null, %class.sk_sp.1* nonnull %5)
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %25 = load %class.SharedGenerator*, %class.SharedGenerator** %24, align 8
  %26 = icmp eq %class.SharedGenerator* %25, null
  br i1 %26, label %46, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %25, i64 0, i32 0
  %29 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %28, i64 4
  %34 = bitcast %class.SkNVRefCnt* %33 to %class.SkSemaphore*
  call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %34) #9
  %35 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %28, i64 2
  %36 = bitcast %class.SkNVRefCnt* %35 to %class.SkImageGenerator**
  %37 = load %class.SkImageGenerator*, %class.SkImageGenerator** %36, align 8
  store %class.SkImageGenerator* null, %class.SkImageGenerator** %36, align 8
  %38 = icmp eq %class.SkImageGenerator* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = bitcast %class.SkImageGenerator* %37 to void (%class.SkImageGenerator*)***
  %41 = load void (%class.SkImageGenerator*)**, void (%class.SkImageGenerator*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %41, i64 1
  %43 = load void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %42, align 8
  call void %43(%class.SkImageGenerator* nonnull %37) #9
  br label %44

44:                                               ; preds = %39, %32
  %45 = bitcast %class.SharedGenerator* %25 to i8*
  call void @_ZdlPv(i8* %45) #8
  br label %46

46:                                               ; preds = %22, %27, %44
  %47 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %3, i64 0, i32 0, i32 0
  %48 = load %class.SharedGenerator*, %class.SharedGenerator** %47, align 8
  %49 = icmp eq %class.SharedGenerator* %48, null
  br i1 %49, label %68, label %50

50:                                               ; preds = %46
  %51 = call i8* @_Znwm(i64 112) #8, !noalias !30
  %52 = bitcast i8* %51 to %class.SkImage_Base*
  %53 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %3, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %3, i64 0, i32 3
  %55 = load i32, i32* %54, align 8, !noalias !30
  call void @_ZN12SkImage_BaseC2ERK11SkImageInfoj(%class.SkImage_Base* nonnull %52, %struct.SkImageInfo* dereferenceable(24) %53, i32 %55) #9, !noalias !30
  %56 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTV12SkImage_Lazy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8, !noalias !30
  %57 = getelementptr inbounds i8, i8* %51, i64 48
  %58 = bitcast %"struct.SkImage_Lazy::Validator"* %3 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !30
  store %class.SharedGenerator* null, %class.SharedGenerator** %47, align 8, !noalias !30
  %60 = bitcast i8* %57 to i64*
  store i64 %59, i64* %60, align 8, !noalias !30
  %61 = getelementptr inbounds i8, i8* %51, i64 56
  %62 = bitcast i8* %61 to i32*
  store i32 1, i32* %62, align 4, !noalias !30
  %63 = getelementptr inbounds i8, i8* %51, i64 60
  store i8 0, i8* %63, align 1, !noalias !30
  %64 = getelementptr inbounds i8, i8* %51, i64 64
  %65 = getelementptr inbounds i8, i8* %51, i64 80
  %66 = bitcast i8* %65 to %"class.SkIDChangeListener::List"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #9, !noalias !30
  call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %66) #9, !noalias !30
  %67 = ptrtoint i8* %51 to i64
  br label %68

68:                                               ; preds = %46, %50
  %69 = phi i64 [ %67, %50 ], [ 0, %46 ]
  %70 = bitcast %class.sk_sp.13* %0 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %3, i64 0, i32 2, i32 0
  %72 = load %class.SkColorSpace*, %class.SkColorSpace** %71, align 8
  %73 = icmp eq %class.SkColorSpace* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = bitcast %class.SkColorSpace* %72 to i8*
  call void @_ZdlPv(i8* %79) #8
  br label %80

80:                                               ; preds = %78, %74, %68
  %81 = getelementptr inbounds %"struct.SkImage_Lazy::Validator", %"struct.SkImage_Lazy::Validator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %class.SkColorSpace*, %class.SkColorSpace** %81, align 8
  %83 = icmp eq %class.SkColorSpace* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = bitcast %class.SkColorSpace* %82 to i8*
  call void @_ZdlPv(i8* %89) #8
  br label %90

90:                                               ; preds = %88, %84, %80
  %91 = load %class.SharedGenerator*, %class.SharedGenerator** %47, align 8
  %92 = icmp eq %class.SharedGenerator* %91, null
  br i1 %92, label %112, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %91, i64 0, i32 0
  %95 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %112

98:                                               ; preds = %93
  %99 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %94, i64 4
  %100 = bitcast %class.SkNVRefCnt* %99 to %class.SkSemaphore*
  call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %100) #9
  %101 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %94, i64 2
  %102 = bitcast %class.SkNVRefCnt* %101 to %class.SkImageGenerator**
  %103 = load %class.SkImageGenerator*, %class.SkImageGenerator** %102, align 8
  store %class.SkImageGenerator* null, %class.SkImageGenerator** %102, align 8
  %104 = icmp eq %class.SkImageGenerator* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %98
  %106 = bitcast %class.SkImageGenerator* %103 to void (%class.SkImageGenerator*)***
  %107 = load void (%class.SkImageGenerator*)**, void (%class.SkImageGenerator*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %107, i64 1
  %109 = load void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %108, align 8
  call void %109(%class.SkImageGenerator* nonnull %103) #9
  br label %110

110:                                              ; preds = %105, %98
  %111 = bitcast %class.SharedGenerator* %91 to i8*
  call void @_ZdlPv(i8* %111) #8
  br label %112

112:                                              ; preds = %110, %93, %90
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy8onAsViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* noalias nocapture sret, %class.SkImage_Lazy*, %class.GrRecordingContext*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %6 = alloca %class.GrBackendFormat, align 8
  %7 = alloca %class.GrSurfaceProxyView, align 8
  %8 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0
  %9 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %8) #9
  %10 = bitcast %class.SkImage_Lazy* %1 to %class.SkImage*
  %11 = tail call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %10) #9
  %12 = icmp ult i32 %11, 21
  br i1 %12, label %14, label %13

13:                                               ; preds = %5
  tail call void @llvm.trap() #9
  unreachable

14:                                               ; preds = %5
  %15 = sext i32 %11 to i64
  %16 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted.2, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = bitcast %class.GrBackendFormat* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 72, i1 false) #9
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %6, %class.GrCaps* %9, i32 %17, i1 zeroext false) #9
  %19 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %6, i64 0, i32 1
  %20 = load i8, i8* %19, align 4, !range !33
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i32 4, i32 %17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #9
  %23 = bitcast %class.GrSurfaceProxyView* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  call void @_ZNK12SkImage_Lazy20lockTextureProxyViewEP18GrRecordingContext19GrImageTexGenPolicy11GrMipmapped(%class.GrSurfaceProxyView* nonnull sret %7, %class.SkImage_Lazy* %1, %class.GrRecordingContext* %2, i32 %4, i1 zeroext %3)
  %24 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %25 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %24, align 8
  %27 = bitcast %"class.std::__1::tuple"* %0 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %32 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  %33 = load i16, i16* %32, align 4
  store i16 %33, i16* %31, align 4
  %34 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %22, i32* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12SkImage_Lazy27colorTypeOfLockTextureProxyEPK6GrCaps(%class.SkImage_Lazy*, %class.GrCaps*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GrBackendFormat, align 8
  %4 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage*
  %5 = tail call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %4) #9
  %6 = icmp ult i32 %5, 21
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @llvm.trap() #9
  unreachable

8:                                                ; preds = %2
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted.2, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %class.GrBackendFormat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 72, i1 false)
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %3, %class.GrCaps* %1, i32 %11, i1 zeroext false) #9
  %13 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %3, i64 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !33
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 4, i32 %11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #9
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy20lockTextureProxyViewEP18GrRecordingContext19GrImageTexGenPolicy11GrMipmapped(%class.GrSurfaceProxyView* noalias sret, %class.SkImage_Lazy*, %class.GrRecordingContext*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.277, align 8
  %7 = alloca %class.sk_sp.277, align 8
  %8 = alloca %class.GrBackendFormat, align 8
  %9 = alloca %class.GrRecordingContext*, align 8
  %10 = alloca %class.GrUniqueKey, align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca %class.GrProxyProvider*, align 8
  %13 = alloca %class.anon.275, align 8
  %14 = alloca %class.sk_sp.276, align 8
  %15 = alloca %class.GrSwizzle, align 2
  %16 = alloca %class.GrSurfaceProxyView, align 8
  %17 = alloca %class.GrSurfaceProxyView, align 8
  %18 = alloca %class.SkBitmap, align 8
  %19 = alloca %"class.std::__1::tuple", align 8
  store %class.GrRecordingContext* %2, %class.GrRecordingContext** %9, align 8
  %20 = bitcast %class.GrUniqueKey* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #9
  %21 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %22 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %24, i32** %23, align 8
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 1, i32 0
  %27 = bitcast %class.SkData** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #9
  %28 = icmp eq i32 %3, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %5
  %30 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0
  %31 = bitcast %class.GrRecordingContext** %9 to %class.GrContext_Base**
  br label %49

32:                                               ; preds = %5
  %33 = bitcast { i64, i64 }* %11 to %struct.SkIRect*
  %34 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #9
  %37 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = shl nuw i64 %41, 32
  %43 = zext i32 %38 to i64
  %44 = or i64 %42, %43
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  store i64 %44, i64* %46, align 8
  call void @_Z20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRect(%class.GrUniqueKey* nonnull %10, i32 %35, %struct.SkIRect* nonnull dereferenceable(16) %33) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #9
  %47 = bitcast %class.GrRecordingContext** %9 to %class.GrContext_Base**
  %48 = load %class.GrContext_Base*, %class.GrContext_Base** %47, align 8
  br label %49

49:                                               ; preds = %29, %32
  %50 = phi %class.GrContext_Base** [ %31, %29 ], [ %47, %32 ]
  %51 = phi %class.GrContext_Base* [ %30, %29 ], [ %48, %32 ]
  %52 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %51) #9
  %53 = bitcast %class.GrProxyProvider** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  %54 = load %class.GrRecordingContext*, %class.GrRecordingContext** %9, align 8
  %55 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %54, i64 0, i32 5, i32 0, i32 0, i32 0
  %56 = bitcast %class.GrProxyProvider** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %class.GrProxyProvider** %12 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %class.anon.275* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #9
  %60 = getelementptr inbounds %class.anon.275, %class.anon.275* %13, i64 0, i32 0
  %61 = getelementptr inbounds %class.anon.275, %class.anon.275* %13, i64 0, i32 1
  %62 = getelementptr inbounds %class.anon.275, %class.anon.275* %13, i64 0, i32 2
  %63 = getelementptr inbounds %class.anon.275, %class.anon.275* %13, i64 0, i32 3
  store %class.GrUniqueKey* %10, %class.GrUniqueKey** %60, align 8
  store %class.GrRecordingContext** %9, %class.GrRecordingContext*** %61, align 8
  store %class.SkImage_Lazy* %1, %class.SkImage_Lazy** %62, align 8
  store %class.GrProxyProvider** %12, %class.GrProxyProvider*** %63, align 8
  %64 = bitcast %class.SkImage_Lazy* %1 to %class.SkImage*
  %65 = call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %64) #9
  %66 = icmp ult i32 %65, 21
  br i1 %66, label %68, label %67

67:                                               ; preds = %49
  call void @llvm.trap() #9
  unreachable

68:                                               ; preds = %49
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted.2, i64 0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = bitcast %class.GrBackendFormat* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %72) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 72, i1 false) #9
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %8, %class.GrCaps* %52, i32 %71, i1 zeroext false) #9
  %73 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %8, i64 0, i32 1
  %74 = load i8, i8* %73, align 4, !range !33
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, i32 4, i32 %71
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %72) #9
  %77 = load i32*, i32** %23, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 65535
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %281, label %82

82:                                               ; preds = %68
  %83 = bitcast %class.sk_sp.276* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #9
  %84 = getelementptr inbounds %class.sk_sp.276, %class.sk_sp.276* %14, i64 0, i32 0
  store %class.GrTextureProxy* inttoptr (i64 -6148914691236517206 to %class.GrTextureProxy*), %class.GrTextureProxy** %84, align 8
  %85 = load %class.GrProxyProvider*, %class.GrProxyProvider** %12, align 8
  call void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.276* nonnull sret %14, %class.GrProxyProvider* %85, %class.GrUniqueKey* nonnull dereferenceable(56) %10, i32 1) #9
  %86 = load %class.GrTextureProxy*, %class.GrTextureProxy** %84, align 8
  %87 = icmp eq %class.GrTextureProxy* %86, null
  br i1 %87, label %280, label %88

88:                                               ; preds = %82
  %89 = bitcast %class.GrSwizzle* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %89) #9
  %90 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %15, i64 0, i32 0
  store i16 -21846, i16* %90, align 2
  %91 = bitcast %class.GrTextureProxy* %86 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr i8, i8* %92, i64 -24
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.GrTextureProxy* %86 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 %95
  %98 = getelementptr inbounds i8, i8* %97, i64 32
  %99 = bitcast i8* %98 to %class.GrBackendFormat*
  call void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* nonnull sret %15, %class.GrCaps* %52, %class.GrBackendFormat* dereferenceable(72) %99, i32 %76) #9
  %100 = load %class.GrTextureProxy*, %class.GrTextureProxy** %84, align 8
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %84, align 8
  %101 = icmp eq %class.GrTextureProxy* %100, null
  br i1 %101, label %111, label %102

102:                                              ; preds = %88
  %103 = bitcast %class.GrTextureProxy* %100 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr i8, i8* %104, i64 -24
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.GrTextureProxy* %100 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 %107
  %110 = bitcast i8* %109 to %class.GrSurfaceProxy*
  br label %111

111:                                              ; preds = %102, %88
  %112 = phi %class.GrSurfaceProxy* [ %110, %102 ], [ null, %88 ]
  %113 = ptrtoint %class.GrSurfaceProxy* %112 to i64
  %114 = load i16, i16* %90, align 2
  br i1 %4, label %115, label %126

115:                                              ; preds = %111
  %116 = icmp eq %class.GrSurfaceProxy* %112, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %115
  %118 = bitcast %class.GrSurfaceProxy* %112 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %119 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %118, align 8
  %120 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %119, i64 3
  %121 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %120, align 8
  %122 = call %class.GrTextureProxy* %121(%class.GrSurfaceProxy* nonnull %112) #9
  br label %123

123:                                              ; preds = %115, %117
  %124 = phi %class.GrTextureProxy* [ %122, %117 ], [ null, %115 ]
  %125 = call zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy* %124) #9
  br i1 %125, label %126, label %130

126:                                              ; preds = %123, %111
  %127 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %113, i64* %127, align 8
  %128 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  store i32 0, i32* %128, align 8
  %129 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  store i16 %114, i16* %129, align 2
  br label %257

130:                                              ; preds = %123
  %131 = bitcast %class.GrSurfaceProxyView* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #9
  %132 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 0, i32 0
  %133 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 1
  %134 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 16, i1 false)
  %135 = load %class.GrRecordingContext*, %class.GrRecordingContext** %9, align 8
  %136 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 0, i32 0
  br i1 %116, label %140, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %112, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 1 monotonic
  br label %140

140:                                              ; preds = %130, %137
  store %class.GrSurfaceProxy* %112, %class.GrSurfaceProxy** %136, align 8
  %141 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 1
  store i32 0, i32* %141, align 8
  %142 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 2, i32 0
  store i16 %114, i16* %142, align 4
  call void @_Z22GrCopyBaseMipMapToViewP18GrRecordingContext18GrSurfaceProxyView10SkBudgeted(%class.GrSurfaceProxyView* nonnull sret %16, %class.GrRecordingContext* %135, %class.GrSurfaceProxyView* nonnull %17, i1 zeroext true) #9
  %143 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %136, align 8
  %144 = icmp eq %class.GrSurfaceProxy* %143, null
  br i1 %144, label %157, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %143, i64 0, i32 1
  %147 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %157

150:                                              ; preds = %145
  %151 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %146, i64 -2
  %152 = bitcast %class.SkNVRefCnt.70* %151 to %class.GrSurfaceProxy*
  %153 = bitcast %class.SkNVRefCnt.70* %151 to void (%class.GrSurfaceProxy*)***
  %154 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %153, align 8
  %155 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %154, i64 1
  %156 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %155, align 8
  call void %156(%class.GrSurfaceProxy* nonnull %152) #9
  br label %157

157:                                              ; preds = %140, %145, %150
  %158 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %132, align 8
  %159 = icmp eq %class.GrSurfaceProxy* %158, null
  br i1 %159, label %160, label %164

160:                                              ; preds = %157
  %161 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %113, i64* %161, align 8
  %162 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  store i32 0, i32* %162, align 8
  %163 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  store i16 %114, i16* %163, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #9
  br label %257

164:                                              ; preds = %157
  %165 = load %class.GrProxyProvider*, %class.GrProxyProvider** %12, align 8
  br i1 %116, label %172, label %166

166:                                              ; preds = %164
  %167 = bitcast %class.GrSurfaceProxy* %112 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %168 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %167, align 8
  %169 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %168, i64 3
  %170 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %169, align 8
  %171 = call %class.GrTextureProxy* %170(%class.GrSurfaceProxy* nonnull %112) #9
  br label %172

172:                                              ; preds = %164, %166
  %173 = phi %class.GrTextureProxy* [ %171, %166 ], [ null, %164 ]
  call void @_ZN15GrProxyProvider24removeUniqueKeyFromProxyEP14GrTextureProxy(%class.GrProxyProvider* %165, %class.GrTextureProxy* %173) #9
  %174 = bitcast %class.anon.275* %13 to %class.GrResourceKey**
  %175 = load %class.GrResourceKey*, %class.GrResourceKey** %174, align 8
  %176 = getelementptr inbounds %class.GrResourceKey, %class.GrResourceKey* %175, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 1
  %179 = load i32, i32* %178, align 4
  %180 = and i32 %179, 65535
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %237, label %182

182:                                              ; preds = %172
  %183 = bitcast %class.GrResourceKey* %175 to %class.GrUniqueKey*
  %184 = load %class.SkImage_Lazy*, %class.SkImage_Lazy** %62, align 8
  %185 = bitcast %class.sk_sp.277* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #9
  %186 = getelementptr inbounds %class.sk_sp.277, %class.sk_sp.277* %7, i64 0, i32 0
  store %class.SkIDChangeListener* inttoptr (i64 -6148914691236517206 to %class.SkIDChangeListener*), %class.SkIDChangeListener** %186, align 8
  %187 = bitcast %class.GrRecordingContext*** %61 to %class.GrContext_Base***
  %188 = load %class.GrContext_Base**, %class.GrContext_Base*** %187, align 8
  %189 = load %class.GrContext_Base*, %class.GrContext_Base** %188, align 8
  %190 = call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %189) #9
  call void @_Z35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyj(%class.sk_sp.277* nonnull sret %7, %class.GrUniqueKey* %183, i32 %190) #9
  %191 = bitcast %class.sk_sp.277* %7 to i64*
  %192 = load i64, i64* %191, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %186, align 8
  %193 = bitcast %class.sk_sp.277* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #9
  %194 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %184, i64 0, i32 4
  %195 = bitcast %class.sk_sp.277* %6 to i64*
  store i64 %192, i64* %195, align 8
  call void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"* %194, %class.sk_sp.277* nonnull %6) #9
  %196 = getelementptr inbounds %class.sk_sp.277, %class.sk_sp.277* %6, i64 0, i32 0
  %197 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %196, align 8
  %198 = icmp eq %class.SkIDChangeListener* %197, null
  br i1 %198, label %209, label %199

199:                                              ; preds = %182
  %200 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %197, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = atomicrmw add i32* %200, i32 -1 acq_rel
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %203, label %209

203:                                              ; preds = %199
  %204 = bitcast %class.SkIDChangeListener* %197 to %class.SkRefCntBase*
  %205 = bitcast %class.SkIDChangeListener* %197 to void (%class.SkRefCntBase*)***
  %206 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %205, align 8
  %207 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %206, i64 2
  %208 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %207, align 8
  call void %208(%class.SkRefCntBase* nonnull %204) #9
  br label %209

209:                                              ; preds = %203, %199, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #9
  %210 = load %class.GrProxyProvider**, %class.GrProxyProvider*** %63, align 8
  %211 = load %class.GrProxyProvider*, %class.GrProxyProvider** %210, align 8
  %212 = load %class.GrUniqueKey*, %class.GrUniqueKey** %60, align 8
  %213 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %132, align 8
  %214 = icmp eq %class.GrSurfaceProxy* %213, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %209
  %216 = bitcast %class.GrSurfaceProxy* %213 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %217 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %216, align 8
  %218 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %217, i64 3
  %219 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %218, align 8
  %220 = call %class.GrTextureProxy* %219(%class.GrSurfaceProxy* nonnull %213) #9
  br label %221

221:                                              ; preds = %215, %209
  %222 = phi %class.GrTextureProxy* [ %220, %215 ], [ null, %209 ]
  %223 = call zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider* %211, %class.GrUniqueKey* dereferenceable(56) %212, %class.GrTextureProxy* %222) #9
  %224 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %186, align 8
  %225 = icmp eq %class.SkIDChangeListener* %224, null
  br i1 %225, label %236, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %224, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = atomicrmw add i32* %227, i32 -1 acq_rel
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %230, label %236

230:                                              ; preds = %226
  %231 = bitcast %class.SkIDChangeListener* %224 to %class.SkRefCntBase*
  %232 = bitcast %class.SkIDChangeListener* %224 to void (%class.SkRefCntBase*)***
  %233 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %232, align 8
  %234 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %233, i64 2
  %235 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %234, align 8
  call void %235(%class.SkRefCntBase* nonnull %231) #9
  br label %236

236:                                              ; preds = %230, %226, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #9
  br label %237

237:                                              ; preds = %236, %172
  %238 = bitcast %class.GrSurfaceProxyView* %16 to i64*
  %239 = load i64, i64* %238, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %132, align 8
  %240 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %242 = load i32, i32* %133, align 8
  store i32 %242, i32* %241, align 8
  %243 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %244 = load i16, i16* %134, align 4
  store i16 %244, i16* %243, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #9
  br i1 %116, label %257, label %245

245:                                              ; preds = %237
  %246 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %112, i64 0, i32 1
  %247 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 -1 acq_rel
  %249 = icmp eq i32 %248, 1
  br i1 %249, label %250, label %257

250:                                              ; preds = %245
  %251 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %246, i64 -2
  %252 = bitcast %class.SkNVRefCnt.70* %251 to %class.GrSurfaceProxy*
  %253 = bitcast %class.SkNVRefCnt.70* %251 to void (%class.GrSurfaceProxy*)***
  %254 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %253, align 8
  %255 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %254, i64 1
  %256 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %255, align 8
  call void %256(%class.GrSurfaceProxy* nonnull %252) #9
  br label %257

257:                                              ; preds = %160, %126, %237, %245, %250
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %89) #9
  %258 = load %class.GrTextureProxy*, %class.GrTextureProxy** %84, align 8
  %259 = icmp eq %class.GrTextureProxy* %258, null
  br i1 %259, label %279, label %260

260:                                              ; preds = %257
  %261 = bitcast %class.GrTextureProxy* %258 to i8**
  %262 = load i8*, i8** %261, align 8
  %263 = getelementptr i8, i8* %262, i64 -24
  %264 = bitcast i8* %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, 8
  %267 = bitcast %class.GrTextureProxy* %258 to i8*
  %268 = getelementptr inbounds i8, i8* %267, i64 %266
  %269 = bitcast i8* %268 to i32*
  %270 = atomicrmw add i32* %269, i32 -1 acq_rel
  %271 = icmp eq i32 %270, 1
  br i1 %271, label %272, label %279

272:                                              ; preds = %260
  %273 = getelementptr inbounds i8, i8* %267, i64 %265
  %274 = bitcast i8* %273 to %class.GrSurfaceProxy*
  %275 = bitcast i8* %273 to void (%class.GrSurfaceProxy*)***
  %276 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %275, align 8
  %277 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %276, i64 1
  %278 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %277, align 8
  call void %278(%class.GrSurfaceProxy* nonnull %274) #9
  br label %279

279:                                              ; preds = %257, %260, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #9
  br label %348

280:                                              ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #9
  br label %281

281:                                              ; preds = %68, %280
  %282 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 1, i32 0
  %283 = load %class.SharedGenerator*, %class.SharedGenerator** %282, align 8
  %284 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %283, i64 0, i32 2
  %285 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = atomicrmw sub i32* %285, i32 1 acquire
  %287 = icmp slt i32 %286, 1
  br i1 %287, label %288, label %290

288:                                              ; preds = %281
  %289 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %284, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %289) #9
  br label %290

290:                                              ; preds = %281, %288
  %291 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 0, i32 0
  %292 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %293 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %294 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 -86, i64 16, i1 false)
  %295 = load %class.SharedGenerator*, %class.SharedGenerator** %282, align 8
  %296 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %295, i64 0, i32 1, i32 0, i32 0, i32 0
  %297 = load %class.SkImageGenerator*, %class.SkImageGenerator** %296, align 8
  %298 = load %class.GrRecordingContext*, %class.GrRecordingContext** %9, align 8
  %299 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2
  call void @_ZN16SkImageGenerator15generateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy(%class.GrSurfaceProxyView* sret %0, %class.SkImageGenerator* %297, %class.GrRecordingContext* %298, %struct.SkImageInfo* dereferenceable(24) %299, %struct.SkIPoint* nonnull dereferenceable(8) @.ref.tmp, i1 zeroext %4, i32 %3) #9
  %300 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %291, align 8
  %301 = icmp eq %class.GrSurfaceProxy* %300, null
  br i1 %301, label %303, label %302

302:                                              ; preds = %290
  call fastcc void @"_ZZNK12SkImage_Lazy20lockTextureProxyViewEP18GrRecordingContext19GrImageTexGenPolicy11GrMipmappedENK3$_2clERK18GrSurfaceProxyView"(%class.anon.275* nonnull %13, %class.GrSurfaceProxyView* dereferenceable(16) %0)
  br label %303

303:                                              ; preds = %290, %302
  %304 = phi i1 [ false, %302 ], [ true, %290 ]
  %305 = atomicrmw add i32* %285, i32 1 release
  %306 = icmp slt i32 %305, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %303
  %308 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %284, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %308, i32 1) #9
  br label %309

309:                                              ; preds = %303, %307
  br i1 %304, label %310, label %348

310:                                              ; preds = %309
  br i1 %4, label %323, label %311

311:                                              ; preds = %310
  %312 = load %class.GrContext_Base*, %class.GrContext_Base** %50, align 8
  %313 = call dereferenceable(240) %struct.GrContextOptions* @_ZNK14GrContext_Base7optionsEv(%class.GrContext_Base* %312) #9
  %314 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %313, i64 0, i32 9
  %315 = load i8, i8* %314, align 4, !range !33
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %317, label %323

317:                                              ; preds = %311
  %318 = icmp ne i32 %3, 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 -86, i64 16, i1 false)
  %319 = load %class.GrRecordingContext*, %class.GrRecordingContext** %9, align 8
  call void @_ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted(%class.GrSurfaceProxyView* sret %0, %class.SkImage_Lazy* %1, %class.GrRecordingContext* %319, i1 zeroext %318)
  %320 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %291, align 8
  %321 = icmp eq %class.GrSurfaceProxy* %320, null
  br i1 %321, label %323, label %322

322:                                              ; preds = %317
  call fastcc void @"_ZZNK12SkImage_Lazy20lockTextureProxyViewEP18GrRecordingContext19GrImageTexGenPolicy11GrMipmappedENK3$_2clERK18GrSurfaceProxyView"(%class.anon.275* nonnull %13, %class.GrSurfaceProxyView* dereferenceable(16) %0)
  br label %348

323:                                              ; preds = %317, %310, %311
  %324 = xor i1 %28, true
  %325 = zext i1 %324 to i32
  %326 = bitcast %class.SkBitmap* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %326) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %18) #9
  %327 = bitcast %class.SkImage_Lazy* %1 to i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %328 = load i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %327, align 8
  %329 = getelementptr inbounds i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %328, i64 18
  %330 = load i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Lazy*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %329, align 8
  %331 = call zeroext i1 %330(%class.SkImage_Lazy* %1, %class.GrDirectContext* null, %class.SkBitmap* nonnull %18, i32 %325) #9
  br i1 %331, label %332, label %346

332:                                              ; preds = %323
  %333 = icmp ne i32 %3, 1
  %334 = bitcast %"class.std::__1::tuple"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #9
  %335 = load %class.GrRecordingContext*, %class.GrRecordingContext** %9, align 8
  call void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* nonnull sret %19, %class.GrRecordingContext* %335, %class.SkBitmap* nonnull dereferenceable(56) %18, i1 zeroext %4, i32 1, i1 zeroext %333) #9
  %336 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = bitcast %"class.std::__1::tuple"* %19 to i64*
  %338 = load i64, i64* %337, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %336, align 8
  %339 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %341 = load i32, i32* %340, align 8
  store i32 %341, i32* %292, align 8
  %342 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %343 = load i16, i16* %342, align 4
  store i16 %343, i16* %293, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #9
  %344 = icmp eq i64 %338, 0
  br i1 %344, label %346, label %345

345:                                              ; preds = %332
  call fastcc void @"_ZZNK12SkImage_Lazy20lockTextureProxyViewEP18GrRecordingContext19GrImageTexGenPolicy11GrMipmappedENK3$_2clERK18GrSurfaceProxyView"(%class.anon.275* nonnull %13, %class.GrSurfaceProxyView* dereferenceable(16) %0)
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %326) #9
  br label %348

346:                                              ; preds = %332, %323
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %326) #9
  %347 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %347, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  br label %348

348:                                              ; preds = %345, %322, %346, %279, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  %349 = load %class.SkData*, %class.SkData** %26, align 8
  %350 = icmp eq %class.SkData* %349, null
  br i1 %350, label %357, label %351

351:                                              ; preds = %348
  %352 = getelementptr inbounds %class.SkData, %class.SkData* %349, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = atomicrmw add i32* %352, i32 -1 acq_rel
  %354 = icmp eq i32 %353, 1
  br i1 %354, label %355, label %357

355:                                              ; preds = %351
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %349) #9
  %356 = bitcast %class.SkData* %349 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %356) #9
  br label %357

357:                                              ; preds = %355, %351, %348
  %358 = load i32*, i32** %23, align 8
  %359 = icmp eq i32* %358, %24
  br i1 %359, label %362, label %360

360:                                              ; preds = %357
  %361 = bitcast i32* %358 to i8*
  call void @_Z7sk_freePv(i8* %361) #9
  br label %362

362:                                              ; preds = %357, %360
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK12SkImage_Lazy21onAsFragmentProcessorEP18GrRecordingContext17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSB_(%class.SkImage_Lazy*, %class.GrRecordingContext*, %struct.SkSamplingOptions* nocapture readonly byval(%struct.SkSamplingOptions) align 8, i32*, %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkRect*) unnamed_addr #0 align 2 {
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  %13 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage_Base*
  call void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* nonnull sret %9, %class.SkImage_Base* %14, %class.GrRecordingContext* %1, i1 zeroext %12, i32 0) #9
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::tuple"* %9 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %15, align 8
  %18 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %24 = load i16, i16* %23, align 4
  store i16 %24, i16* %22, align 4
  %25 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage*
  %26 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %25) #9
  %27 = call %class.GrFragmentProcessor* @_ZN12SkImage_Base29MakeFragmentProcessorFromViewEP18GrRecordingContext18GrSurfaceProxyView11SkAlphaType17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSD_(%class.GrRecordingContext* %1, %class.GrSurfaceProxyView* nonnull %8, i32 %26, %struct.SkSamplingOptions* nonnull byval(%struct.SkSamplingOptions) align 8 %2, i32* %3, %class.SkMatrix* dereferenceable(40) %4, %struct.SkRect* %5, %struct.SkRect* %6) #9
  %28 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %29 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %28, align 8
  %30 = icmp eq %class.GrSurfaceProxy* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %7
  %32 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %29, i64 0, i32 1
  %33 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %32, i64 -2
  %38 = bitcast %class.SkNVRefCnt.70* %37 to %class.GrSurfaceProxy*
  %39 = bitcast %class.SkNVRefCnt.70* %37 to void (%class.GrSurfaceProxy*)***
  %40 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %40, i64 1
  %42 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %41, align 8
  call void %42(%class.GrSurfaceProxy* nonnull %38) #9
  br label %43

43:                                               ; preds = %7, %31, %36
  %44 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %15, align 8
  %45 = icmp eq %class.GrSurfaceProxy* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %44, i64 0, i32 1
  %48 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %47, i64 -2
  %53 = bitcast %class.SkNVRefCnt.70* %52 to %class.GrSurfaceProxy*
  %54 = bitcast %class.SkNVRefCnt.70* %52 to void (%class.GrSurfaceProxy*)***
  %55 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %55, i64 1
  %57 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %56, align 8
  call void %57(%class.GrSurfaceProxy* nonnull %53) #9
  br label %58

58:                                               ; preds = %43, %46, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  ret %class.GrFragmentProcessor* %27
}

declare %class.GrFragmentProcessor* @_ZN12SkImage_Base29MakeFragmentProcessorFromViewEP18GrRecordingContext18GrSurfaceProxyView11SkAlphaType17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSD_(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, %struct.SkSamplingOptions* byval(%struct.SkSamplingOptions) align 8, i32*, %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkRect*) local_unnamed_addr #2

declare void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* sret, %class.SkImage_Base*, %class.GrRecordingContext*, i1 zeroext, i32) local_unnamed_addr #2

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted(%class.GrSurfaceProxyView* noalias sret, %class.SkImage_Lazy*, %class.GrRecordingContext*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.1, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"class.SkYUVAPixmapInfo::SupportedDataTypes", align 8
  %8 = alloca %class.SkYUVAPixmaps, align 8
  %9 = alloca %class.sk_sp.256, align 8
  %10 = alloca [4 x %class.GrSurfaceProxyView], align 16
  %11 = alloca [4 x i32], align 16
  %12 = alloca %class.SkBitmap, align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %class.GrImageInfo, align 8
  %15 = alloca %class.GrImageInfo, align 8
  %16 = alloca %class.GrYUVATextureProxies, align 8
  %17 = bitcast %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.SkYUVAPixmapInfo::SupportedDataTypes", %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %18, align 8
  %19 = bitcast %class.GrRecordingContext* %2 to %class.GrImageContext*
  call void @_ZN16SkYUVAPixmapInfo18SupportedDataTypesC1ERK14GrImageContext(%"class.SkYUVAPixmapInfo::SupportedDataTypes"* nonnull %7, %class.GrImageContext* dereferenceable(32) %19) #9
  %20 = bitcast %class.SkYUVAPixmaps* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %20) #9
  %21 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 3
  %22 = bitcast i32* %21 to i64*
  store i64 -6148914691236517206, i64* %22, align 8
  %23 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 2, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 184, i1 false) #9
  %24 = bitcast i32* %23 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %24, align 8
  %25 = bitcast %class.sk_sp.256* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %class.sk_sp.256, %class.sk_sp.256* %9, i64 0, i32 0
  store %class.SkCachedData* inttoptr (i64 -6148914691236517206 to %class.SkCachedData*), %class.SkCachedData** %26, align 8
  call void @_ZNK12SkImage_Lazy9getPlanesERKN16SkYUVAPixmapInfo18SupportedDataTypesEP13SkYUVAPixmaps(%class.sk_sp.256* nonnull sret %9, %class.SkImage_Lazy* %1, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* nonnull dereferenceable(8) %7, %class.SkYUVAPixmaps* nonnull %8)
  %27 = load %class.SkCachedData*, %class.SkCachedData** %26, align 8
  %28 = icmp eq %class.SkCachedData* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %4
  %30 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %31 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  br label %388

32:                                               ; preds = %4
  %33 = bitcast [4 x %class.GrSurfaceProxyView]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %33) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 64, i1 false)
  %34 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 0
  %35 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 0, i32 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %35, align 16
  %36 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 0, i32 1
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 0, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  %38 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 1, i32 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %38, align 16
  %39 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 1, i32 1
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 1, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  %41 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 2, i32 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %41, align 16
  %42 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 2, i32 1
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 2, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  %44 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 3, i32 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %44, align 16
  %45 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 3, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 3, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  %47 = bitcast [4 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %49 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 2
  %50 = bitcast %class.SkYUVAInfo* %49 to i64*
  %51 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 2, i32 1
  %52 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %53 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1
  %54 = bitcast %class.SkBitmap* %12 to i8*
  %55 = bitcast %"class.std::__1::tuple"* %13 to i8*
  %56 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::tuple"* %13 to i64*
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %60 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 0, i32 1, i32 2, i32 0, i32 1
  %61 = bitcast [4 x i32]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 -86, i64 16, i1 false)
  br label %62

62:                                               ; preds = %150, %32
  %63 = phi i64 [ %155, %150 ], [ 0, %32 ]
  %64 = load i64, i64* %50, align 8
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %64, 32
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %65, 0
  %69 = icmp sgt i32 %67, 0
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %62
  %72 = load i32, i32* %51, align 8
  %73 = icmp ult i32 %72, 13
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  call void @llvm.trap() #9
  unreachable

75:                                               ; preds = %71
  %76 = sext i32 %72 to i64
  %77 = getelementptr inbounds [13 x i64], [13 x i64]* @switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted, i64 0, i64 %76
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %75, %62
  %80 = phi i64 [ 0, %62 ], [ %78, %75 ]
  %81 = icmp ult i64 %63, %80
  br i1 %81, label %82, label %156

82:                                               ; preds = %79
  %83 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 %63, i32 2, i32 1
  %84 = bitcast %struct.SkISize* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %89 = load i32, i32* %52, align 4
  %90 = load i32, i32* %53, align 4
  %91 = icmp ne i32 %89, %86
  %92 = icmp ne i32 %90, %88
  %93 = or i1 %91, %92
  %94 = zext i1 %93 to i32
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %54) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %12) #9
  %95 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 %63, i32 2
  %96 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 %63, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 %63, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = load %class.SkCachedData*, %class.SkCachedData** %26, align 8
  call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %100, i1 zeroext false) #9
  %101 = bitcast %class.SkCachedData* %100 to i8*
  %102 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %12, %struct.SkImageInfo* dereferenceable(24) %95, i8* %97, i64 %99, void (i8*, i8*)* nonnull @"_ZZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgetedEN3$_18__invokeEPvS4_", i8* %101) #9
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %12) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #9
  call void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* nonnull sret %13, %class.GrRecordingContext* %2, %class.SkBitmap* nonnull dereferenceable(56) %12, i1 zeroext false, i32 %94, i1 zeroext true) #9
  %103 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 %63
  %104 = load i64, i64* %57, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %56, align 8
  %105 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %103, i64 0, i32 0, i32 0
  %106 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %105, align 16
  %107 = bitcast %class.GrSurfaceProxyView* %103 to i64*
  store i64 %104, i64* %107, align 16
  %108 = icmp eq %class.GrSurfaceProxy* %106, null
  br i1 %108, label %121, label %109

109:                                              ; preds = %82
  %110 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %106, i64 0, i32 1
  %111 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %121

114:                                              ; preds = %109
  %115 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %110, i64 -2
  %116 = bitcast %class.SkNVRefCnt.70* %115 to %class.GrSurfaceProxy*
  %117 = bitcast %class.SkNVRefCnt.70* %115 to void (%class.GrSurfaceProxy*)***
  %118 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %118, i64 1
  %120 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %119, align 8
  call void %120(%class.GrSurfaceProxy* nonnull %116) #9
  br label %121

121:                                              ; preds = %82, %109, %114
  %122 = load i32, i32* %58, align 8
  %123 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 %63, i32 1
  store i32 %122, i32* %123, align 8
  %124 = load i16, i16* %59, align 4
  %125 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 %63, i32 2, i32 0
  store i16 %124, i16* %125, align 4
  %126 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %56, align 8
  %127 = icmp eq %class.GrSurfaceProxy* %126, null
  br i1 %127, label %140, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %126, i64 0, i32 1
  %130 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %140

133:                                              ; preds = %128
  %134 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %129, i64 -2
  %135 = bitcast %class.SkNVRefCnt.70* %134 to %class.GrSurfaceProxy*
  %136 = bitcast %class.SkNVRefCnt.70* %134 to void (%class.GrSurfaceProxy*)***
  %137 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %136, align 8
  %138 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %137, i64 1
  %139 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %138, align 8
  call void %139(%class.GrSurfaceProxy* nonnull %135) #9
  br label %140

140:                                              ; preds = %121, %128, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #9
  %141 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %105, align 16
  %142 = icmp eq %class.GrSurfaceProxy* %141, null
  br i1 %142, label %143, label %146

143:                                              ; preds = %140
  %144 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %145 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #9
  br label %364

146:                                              ; preds = %140
  %147 = load i32, i32* %60, align 8
  %148 = icmp ult i32 %147, 21
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  call void @llvm.trap() #9
  unreachable

150:                                              ; preds = %146
  %151 = sext i32 %147 to i64
  %152 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted.2, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %63
  store i32 %153, i32* %154, align 4
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #9
  %155 = add nuw nsw i64 %63, 1
  br label %62

156:                                              ; preds = %79
  %157 = bitcast %class.GrImageInfo* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #9
  %158 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 0, i32 1, i32 0
  %160 = bitcast %class.SkImage_Lazy* %1 to %class.SkImage*
  %161 = bitcast %class.GrImageInfo* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 32, i1 false)
  %162 = call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %160) #9
  %163 = icmp ult i32 %162, 21
  br i1 %163, label %165, label %164

164:                                              ; preds = %156
  call void @llvm.trap() #9
  unreachable

165:                                              ; preds = %156
  %166 = sext i32 %162 to i64
  %167 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgeted.2, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = load i32, i32* %52, align 4
  %170 = load i32, i32* %53, align 4
  %171 = zext i32 %170 to i64
  %172 = shl nuw i64 %171, 32
  %173 = zext i32 %169 to i64
  %174 = or i64 %172, %173
  %175 = bitcast %class.sk_sp.1* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175)
  %176 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 0
  %177 = bitcast %class.sk_sp.1* %5 to i64*
  store i64 0, i64* %177, align 8
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %176, i32 %168, i32 2, %class.sk_sp.1* nonnull %5) #9
  %178 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %5, i64 0, i32 0
  %179 = load %class.SkColorSpace*, %class.SkColorSpace** %178, align 8
  %180 = icmp eq %class.SkColorSpace* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %165
  %182 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw add i32* %182, i32 -1 acq_rel
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %185, label %187

185:                                              ; preds = %181
  %186 = bitcast %class.SkColorSpace* %179 to i8*
  call void @_ZdlPv(i8* %186) #8
  br label %187

187:                                              ; preds = %185, %181, %165
  %188 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 1
  %189 = bitcast %struct.SkISize* %188 to i64*
  store i64 %174, i64* %189, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175)
  %190 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %190, %class.GrColorInfo* nonnull dereferenceable(24) %176) #9
  %191 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 1
  %192 = bitcast %struct.SkISize* %191 to i64*
  %193 = load i64, i64* %189, align 8
  store i64 %193, i64* %192, align 8
  %194 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %2, %class.GrImageInfo* nonnull %15, i32 1, i32 1, i1 zeroext false, i1 zeroext false, i32 0, i1 zeroext %3) #9
  %195 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 0, i32 1, i32 0
  %196 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %195, align 8
  %197 = icmp eq %class.GrColorSpaceXform* %196, null
  br i1 %197, label %208, label %198

198:                                              ; preds = %187
  %199 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %196, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = atomicrmw add i32* %199, i32 -1 acq_rel
  %201 = icmp eq i32 %200, 1
  br i1 %201, label %202, label %208

202:                                              ; preds = %198
  %203 = bitcast %class.GrColorSpaceXform* %196 to %class.SkRefCntBase*
  %204 = bitcast %class.GrColorSpaceXform* %196 to void (%class.SkRefCntBase*)***
  %205 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %204, align 8
  %206 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %205, i64 2
  %207 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %206, align 8
  call void %207(%class.SkRefCntBase* nonnull %203) #9
  br label %208

208:                                              ; preds = %202, %198, %187
  %209 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 0, i32 0, i32 0
  %210 = load %class.SkColorSpace*, %class.SkColorSpace** %209, align 8
  %211 = icmp eq %class.SkColorSpace* %210, null
  br i1 %211, label %218, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = atomicrmw add i32* %213, i32 -1 acq_rel
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = bitcast %class.SkColorSpace* %210 to i8*
  call void @_ZdlPv(i8* %217) #8
  br label %218

218:                                              ; preds = %208, %212, %216
  %219 = icmp eq %class.GrSurfaceFillContext* %194, null
  br i1 %219, label %220, label %223

220:                                              ; preds = %218
  %221 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %222 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %222, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %221, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #9
  br label %341

223:                                              ; preds = %218
  %224 = bitcast %class.GrYUVATextureProxies* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %224) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 -86, i64 104, i1 false)
  call void @_ZN20GrYUVATextureProxiesC1ERK10SkYUVAInfoP18GrSurfaceProxyViewP11GrColorType(%class.GrYUVATextureProxies* nonnull %16, %class.SkYUVAInfo* dereferenceable(32) %49, %class.GrSurfaceProxyView* nonnull %34, i32* nonnull %48) #9
  %225 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0
  %226 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %225) #9
  %227 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %228 = call %class.GrFragmentProcessor* @_ZN16GrYUVtoRGBEffect4MakeERK20GrYUVATextureProxies14GrSamplerStateRK6GrCapsRK8SkMatrixPK6SkRectSC_(%class.GrYUVATextureProxies* nonnull dereferenceable(104) %16, i64 0, i32 0, %class.GrCaps* dereferenceable(232) %226, %class.SkMatrix* dereferenceable(40) %227, %struct.SkRect* null, %struct.SkRect* null) #9
  %229 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 1, i32 0
  %230 = load %class.SharedGenerator*, %class.SharedGenerator** %229, align 8
  %231 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %230, i64 0, i32 2
  %232 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = atomicrmw sub i32* %232, i32 1 acquire
  %234 = icmp slt i32 %233, 1
  br i1 %234, label %235, label %237

235:                                              ; preds = %223
  %236 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %231, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %236) #9
  br label %237

237:                                              ; preds = %223, %235
  %238 = load %class.SharedGenerator*, %class.SharedGenerator** %229, align 8
  %239 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %238, i64 0, i32 1, i32 0, i32 0, i32 0
  %240 = load %class.SkImageGenerator*, %class.SkImageGenerator** %239, align 8
  %241 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %240, i64 0, i32 1, i32 0, i32 0, i32 0
  %242 = load %class.SkColorSpace*, %class.SkColorSpace** %241, align 8
  %243 = atomicrmw add i32* %232, i32 1 release
  %244 = icmp slt i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %237
  %246 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %231, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %246, i32 1) #9
  br label %247

247:                                              ; preds = %237, %245
  %248 = call %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage* %160) #9
  %249 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %228, %class.SkColorSpace* %242, i32 1, %class.SkColorSpace* %248, i32 1) #9
  %250 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %251 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %251) #9
  %252 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %194, i64 0, i32 1, i32 0, i32 0
  %253 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %252, align 8
  %254 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %253, i64 0, i32 6
  %255 = bitcast %struct.SkISize* %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %257, align 8
  %258 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %256, i64* %258, align 8
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %194, %struct.SkIRect* nonnull dereferenceable(16) %250, %class.GrFragmentProcessor* %249) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %251) #9
  %259 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 0, i32 0
  %260 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %194, i64 0, i32 0, i32 2, i32 0, i32 0
  %261 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %260, align 8, !noalias !34
  %262 = icmp eq %class.GrSurfaceProxy* %261, null
  br i1 %262, label %266, label %263

263:                                              ; preds = %247
  %264 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %261, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = atomicrmw add i32* %264, i32 1 monotonic, !noalias !34
  br label %266

266:                                              ; preds = %263, %247
  store %class.GrSurfaceProxy* %261, %class.GrSurfaceProxy** %259, align 8, !alias.scope !34
  %267 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %268 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %194, i64 0, i32 0, i32 2, i32 1
  %269 = load i32, i32* %268, align 8, !noalias !34
  store i32 %269, i32* %267, align 8, !alias.scope !34
  %270 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %271 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %194, i64 0, i32 0, i32 2, i32 2, i32 0
  %272 = load i16, i16* %271, align 2, !noalias !34
  store i16 %272, i16* %270, align 2, !alias.scope !34
  %273 = getelementptr inbounds %class.GrYUVATextureProxies, %class.GrYUVATextureProxies* %16, i64 0, i32 0, i32 0, i64 3, i32 0
  %274 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %273, align 8
  %275 = icmp eq %class.GrSurfaceProxy* %274, null
  br i1 %275, label %288, label %276

276:                                              ; preds = %266
  %277 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %274, i64 0, i32 1
  %278 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = atomicrmw add i32* %278, i32 -1 acq_rel
  %280 = icmp eq i32 %279, 1
  br i1 %280, label %281, label %288

281:                                              ; preds = %276
  %282 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %277, i64 -2
  %283 = bitcast %class.SkNVRefCnt.70* %282 to %class.GrSurfaceProxy*
  %284 = bitcast %class.SkNVRefCnt.70* %282 to void (%class.GrSurfaceProxy*)***
  %285 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %284, align 8
  %286 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %285, i64 1
  %287 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %286, align 8
  call void %287(%class.GrSurfaceProxy* nonnull %283) #9
  br label %288

288:                                              ; preds = %281, %276, %266
  %289 = getelementptr inbounds %class.GrYUVATextureProxies, %class.GrYUVATextureProxies* %16, i64 0, i32 0, i32 0, i64 2, i32 0
  %290 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %289, align 8
  %291 = icmp eq %class.GrSurfaceProxy* %290, null
  br i1 %291, label %304, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %290, i64 0, i32 1
  %294 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %293, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = atomicrmw add i32* %294, i32 -1 acq_rel
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %297, label %304

297:                                              ; preds = %292
  %298 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %293, i64 -2
  %299 = bitcast %class.SkNVRefCnt.70* %298 to %class.GrSurfaceProxy*
  %300 = bitcast %class.SkNVRefCnt.70* %298 to void (%class.GrSurfaceProxy*)***
  %301 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %300, align 8
  %302 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %301, i64 1
  %303 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %302, align 8
  call void %303(%class.GrSurfaceProxy* nonnull %299) #9
  br label %304

304:                                              ; preds = %297, %292, %288
  %305 = getelementptr inbounds %class.GrYUVATextureProxies, %class.GrYUVATextureProxies* %16, i64 0, i32 0, i32 0, i64 1, i32 0
  %306 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %305, align 8
  %307 = icmp eq %class.GrSurfaceProxy* %306, null
  br i1 %307, label %320, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %306, i64 0, i32 1
  %310 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = atomicrmw add i32* %310, i32 -1 acq_rel
  %312 = icmp eq i32 %311, 1
  br i1 %312, label %313, label %320

313:                                              ; preds = %308
  %314 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %309, i64 -2
  %315 = bitcast %class.SkNVRefCnt.70* %314 to %class.GrSurfaceProxy*
  %316 = bitcast %class.SkNVRefCnt.70* %314 to void (%class.GrSurfaceProxy*)***
  %317 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %316, align 8
  %318 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %317, i64 1
  %319 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %318, align 8
  call void %319(%class.GrSurfaceProxy* nonnull %315) #9
  br label %320

320:                                              ; preds = %313, %308, %304
  %321 = getelementptr inbounds %class.GrYUVATextureProxies, %class.GrYUVATextureProxies* %16, i64 0, i32 0, i32 0, i64 0, i32 0
  %322 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %321, align 8
  %323 = icmp eq %class.GrSurfaceProxy* %322, null
  br i1 %323, label %336, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %322, i64 0, i32 1
  %326 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %325, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = atomicrmw add i32* %326, i32 -1 acq_rel
  %328 = icmp eq i32 %327, 1
  br i1 %328, label %329, label %336

329:                                              ; preds = %324
  %330 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %325, i64 -2
  %331 = bitcast %class.SkNVRefCnt.70* %330 to %class.GrSurfaceProxy*
  %332 = bitcast %class.SkNVRefCnt.70* %330 to void (%class.GrSurfaceProxy*)***
  %333 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %332, align 8
  %334 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %333, i64 1
  %335 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %334, align 8
  call void %335(%class.GrSurfaceProxy* nonnull %331) #9
  br label %336

336:                                              ; preds = %320, %324, %329
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %224) #9
  %337 = bitcast %class.GrSurfaceFillContext* %194 to void (%class.GrSurfaceFillContext*)***
  %338 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %337, align 8
  %339 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %338, i64 1
  %340 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %339, align 8
  call void %340(%class.GrSurfaceFillContext* nonnull %194) #9
  br label %341

341:                                              ; preds = %220, %336
  %342 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %159, align 8
  %343 = icmp eq %class.GrColorSpaceXform* %342, null
  br i1 %343, label %354, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %342, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = atomicrmw add i32* %345, i32 -1 acq_rel
  %347 = icmp eq i32 %346, 1
  br i1 %347, label %348, label %354

348:                                              ; preds = %344
  %349 = bitcast %class.GrColorSpaceXform* %342 to %class.SkRefCntBase*
  %350 = bitcast %class.GrColorSpaceXform* %342 to void (%class.SkRefCntBase*)***
  %351 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %350, align 8
  %352 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %351, i64 2
  %353 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %352, align 8
  call void %353(%class.SkRefCntBase* nonnull %349) #9
  br label %354

354:                                              ; preds = %348, %344, %341
  %355 = load %class.SkColorSpace*, %class.SkColorSpace** %158, align 8
  %356 = icmp eq %class.SkColorSpace* %355, null
  br i1 %356, label %363, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %355, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = atomicrmw add i32* %358, i32 -1 acq_rel
  %360 = icmp eq i32 %359, 1
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  %362 = bitcast %class.SkColorSpace* %355 to i8*
  call void @_ZdlPv(i8* %362) #8
  br label %363

363:                                              ; preds = %354, %357, %361
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #9
  br label %364

364:                                              ; preds = %143, %363
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  %365 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 3, i32 0, i32 0
  %366 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %365, align 16
  %367 = icmp eq %class.GrSurfaceProxy* %366, null
  br i1 %367, label %380, label %368

368:                                              ; preds = %364
  %369 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %366, i64 0, i32 1
  %370 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %369, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = atomicrmw add i32* %370, i32 -1 acq_rel
  %372 = icmp eq i32 %371, 1
  br i1 %372, label %373, label %380

373:                                              ; preds = %368
  %374 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %369, i64 -2
  %375 = bitcast %class.SkNVRefCnt.70* %374 to %class.GrSurfaceProxy*
  %376 = bitcast %class.SkNVRefCnt.70* %374 to void (%class.GrSurfaceProxy*)***
  %377 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %376, align 8
  %378 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %377, i64 1
  %379 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %378, align 8
  call void %379(%class.GrSurfaceProxy* nonnull %375) #9
  br label %380

380:                                              ; preds = %364, %368, %373
  %381 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 2, i32 0, i32 0
  %382 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %381, align 16
  %383 = icmp eq %class.GrSurfaceProxy* %382, null
  br i1 %383, label %451, label %439

384:                                              ; preds = %467, %471, %476
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %33) #9
  %385 = load %class.SkCachedData*, %class.SkCachedData** %26, align 8
  %386 = icmp eq %class.SkCachedData* %385, null
  br i1 %386, label %388, label %387

387:                                              ; preds = %384
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %385, i1 zeroext false) #9
  br label %388

388:                                              ; preds = %29, %384, %387
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %389 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 1, i32 0
  %390 = load %class.SkData*, %class.SkData** %389, align 8
  %391 = icmp eq %class.SkData* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %class.SkData, %class.SkData* %390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = atomicrmw add i32* %393, i32 -1 acq_rel
  %395 = icmp eq i32 %394, 1
  br i1 %395, label %396, label %398

396:                                              ; preds = %392
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %390) #9
  %397 = bitcast %class.SkData* %390 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %397) #9
  br label %398

398:                                              ; preds = %388, %392, %396
  %399 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %400 = load %class.SkColorSpace*, %class.SkColorSpace** %399, align 8
  %401 = icmp eq %class.SkColorSpace* %400, null
  br i1 %401, label %408, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %400, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = atomicrmw add i32* %403, i32 -1 acq_rel
  %405 = icmp eq i32 %404, 1
  br i1 %405, label %406, label %408

406:                                              ; preds = %402
  %407 = bitcast %class.SkColorSpace* %400 to i8*
  call void @_ZdlPv(i8* %407) #8
  br label %408

408:                                              ; preds = %406, %402, %398
  %409 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %410 = load %class.SkColorSpace*, %class.SkColorSpace** %409, align 8
  %411 = icmp eq %class.SkColorSpace* %410, null
  br i1 %411, label %418, label %412

412:                                              ; preds = %408
  %413 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %410, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = atomicrmw add i32* %413, i32 -1 acq_rel
  %415 = icmp eq i32 %414, 1
  br i1 %415, label %416, label %418

416:                                              ; preds = %412
  %417 = bitcast %class.SkColorSpace* %410 to i8*
  call void @_ZdlPv(i8* %417) #8
  br label %418

418:                                              ; preds = %416, %412, %408
  %419 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %420 = load %class.SkColorSpace*, %class.SkColorSpace** %419, align 8
  %421 = icmp eq %class.SkColorSpace* %420, null
  br i1 %421, label %428, label %422

422:                                              ; preds = %418
  %423 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %420, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = atomicrmw add i32* %423, i32 -1 acq_rel
  %425 = icmp eq i32 %424, 1
  br i1 %425, label %426, label %428

426:                                              ; preds = %422
  %427 = bitcast %class.SkColorSpace* %420 to i8*
  call void @_ZdlPv(i8* %427) #8
  br label %428

428:                                              ; preds = %426, %422, %418
  %429 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %8, i64 0, i32 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %430 = load %class.SkColorSpace*, %class.SkColorSpace** %429, align 8
  %431 = icmp eq %class.SkColorSpace* %430, null
  br i1 %431, label %438, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %430, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = atomicrmw add i32* %433, i32 -1 acq_rel
  %435 = icmp eq i32 %434, 1
  br i1 %435, label %436, label %438

436:                                              ; preds = %432
  %437 = bitcast %class.SkColorSpace* %430 to i8*
  call void @_ZdlPv(i8* %437) #8
  br label %438

438:                                              ; preds = %428, %432, %436
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  ret void

439:                                              ; preds = %380
  %440 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %382, i64 0, i32 1
  %441 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %440, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = atomicrmw add i32* %441, i32 -1 acq_rel
  %443 = icmp eq i32 %442, 1
  br i1 %443, label %444, label %451

444:                                              ; preds = %439
  %445 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %440, i64 -2
  %446 = bitcast %class.SkNVRefCnt.70* %445 to %class.GrSurfaceProxy*
  %447 = bitcast %class.SkNVRefCnt.70* %445 to void (%class.GrSurfaceProxy*)***
  %448 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %447, align 8
  %449 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %448, i64 1
  %450 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %449, align 8
  call void %450(%class.GrSurfaceProxy* nonnull %446) #9
  br label %451

451:                                              ; preds = %444, %439, %380
  %452 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 1, i32 0, i32 0
  %453 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %452, align 16
  %454 = icmp eq %class.GrSurfaceProxy* %453, null
  br i1 %454, label %467, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %453, i64 0, i32 1
  %457 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %456, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = atomicrmw add i32* %457, i32 -1 acq_rel
  %459 = icmp eq i32 %458, 1
  br i1 %459, label %460, label %467

460:                                              ; preds = %455
  %461 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %456, i64 -2
  %462 = bitcast %class.SkNVRefCnt.70* %461 to %class.GrSurfaceProxy*
  %463 = bitcast %class.SkNVRefCnt.70* %461 to void (%class.GrSurfaceProxy*)***
  %464 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %463, align 8
  %465 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %464, i64 1
  %466 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %465, align 8
  call void %466(%class.GrSurfaceProxy* nonnull %462) #9
  br label %467

467:                                              ; preds = %460, %455, %451
  %468 = getelementptr inbounds [4 x %class.GrSurfaceProxyView], [4 x %class.GrSurfaceProxyView]* %10, i64 0, i64 0, i32 0, i32 0
  %469 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %468, align 16
  %470 = icmp eq %class.GrSurfaceProxy* %469, null
  br i1 %470, label %384, label %471

471:                                              ; preds = %467
  %472 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %469, i64 0, i32 1
  %473 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %472, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = atomicrmw add i32* %473, i32 -1 acq_rel
  %475 = icmp eq i32 %474, 1
  br i1 %475, label %476, label %384

476:                                              ; preds = %471
  %477 = getelementptr inbounds %class.SkNVRefCnt.70, %class.SkNVRefCnt.70* %472, i64 -2
  %478 = bitcast %class.SkNVRefCnt.70* %477 to %class.GrSurfaceProxy*
  %479 = bitcast %class.SkNVRefCnt.70* %477 to void (%class.GrSurfaceProxy*)***
  %480 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %479, align 8
  %481 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %480, i64 1
  %482 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %481, align 8
  call void %482(%class.GrSurfaceProxy* nonnull %478) #9
  br label %384
}

declare void @_ZN16SkYUVAPixmapInfo18SupportedDataTypesC1ERK14GrImageContext(%"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.GrImageContext* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy9getPlanesERKN16SkYUVAPixmapInfo18SupportedDataTypesEP13SkYUVAPixmaps(%class.sk_sp.256* noalias nocapture sret, %class.SkImage_Lazy*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmaps*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkYUVAPixmapInfo, align 8
  %6 = alloca %class.SkYUVAPixmaps, align 8
  %7 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 1, i32 0
  %8 = load %class.SharedGenerator*, %class.SharedGenerator** %7, align 8
  %9 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %8, i64 0, i32 2
  %10 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acquire
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %14) #9
  br label %15

15:                                               ; preds = %4, %13
  %16 = load %class.SharedGenerator*, %class.SharedGenerator** %7, align 8
  %17 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %class.SkImageGenerator*, %class.SkImageGenerator** %17, align 8
  %19 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = tail call %class.SkCachedData* @_ZN16SkYUVPlanesCache10FindAndRefEjP13SkYUVAPixmapsP15SkResourceCache(i32 %20, %class.SkYUVAPixmaps* %3, %class.SkResourceCache* null) #9
  %22 = ptrtoint %class.SkCachedData* %21 to i64
  %23 = icmp eq %class.SkCachedData* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %15
  %25 = bitcast %class.sk_sp.256* %0 to i64*
  store i64 %22, i64* %25, align 8
  br label %191

26:                                               ; preds = %15
  %27 = bitcast %class.SkYUVAPixmapInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 168, i1 false)
  %28 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #9
  store i32 10, i32* %28, align 8
  %29 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 0, i32 4
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 0, i32 5
  %31 = bitcast i32* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 140, i1 false)
  %32 = load %class.SharedGenerator*, %class.SharedGenerator** %7, align 8
  %33 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %class.SkImageGenerator*, %class.SkImageGenerator** %33, align 8
  %35 = call zeroext i1 @_ZNK16SkImageGenerator13queryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkImageGenerator* %34, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8) %2, %class.SkYUVAPixmapInfo* nonnull %5) #9
  br i1 %35, label %36, label %49

36:                                               ; preds = %26
  %37 = bitcast %class.SkYUVAPixmapInfo* %5 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = lshr i64 %38, 32
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %43, %39
  %47 = icmp ne i32 %45, %41
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %36, %26
  %50 = getelementptr inbounds %class.sk_sp.256, %class.sk_sp.256* %0, i64 0, i32 0
  store %class.SkCachedData* null, %class.SkCachedData** %50, align 8
  br label %146

51:                                               ; preds = %36
  %52 = call i64 @_ZNK16SkYUVAPixmapInfo17computeTotalBytesEPm(%class.SkYUVAPixmapInfo* nonnull %5, i64* null) #9
  %53 = call %class.SkCachedData* @_ZN15SkResourceCache13NewCachedDataEm(i64 %52) #9
  %54 = ptrtoint %class.SkCachedData* %53 to i64
  %55 = bitcast %class.SkYUVAPixmaps* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %55) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 208, i1 false)
  %56 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %53, i64 0, i32 3
  %57 = load i8*, i8** %56, align 8
  call void @_ZN13SkYUVAPixmaps18FromExternalMemoryERK16SkYUVAPixmapInfoPv(%class.SkYUVAPixmaps* nonnull sret %6, %class.SkYUVAPixmapInfo* nonnull dereferenceable(168) %5, i8* %57) #9
  %58 = load %class.SharedGenerator*, %class.SharedGenerator** %7, align 8
  %59 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %class.SkImageGenerator*, %class.SkImageGenerator** %59, align 8
  %61 = call zeroext i1 @_ZN16SkImageGenerator13getYUVAPlanesERK13SkYUVAPixmaps(%class.SkImageGenerator* %60, %class.SkYUVAPixmaps* nonnull dereferenceable(208) %6) #9
  br i1 %61, label %64, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %class.sk_sp.256, %class.sk_sp.256* %0, i64 0, i32 0
  store %class.SkCachedData* null, %class.SkCachedData** %63, align 8
  br label %94

64:                                               ; preds = %51
  %65 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0
  %66 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 0
  %67 = call dereferenceable(160) %"struct.std::__1::array.255"* @_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_(%"struct.std::__1::array.255"* %65, %"struct.std::__1::array.255"* nonnull dereferenceable(160) %66) #9
  %68 = icmp eq %class.SkYUVAPixmaps* %6, %3
  br i1 %68, label %86, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 1, i32 0
  %71 = load %class.SkData*, %class.SkData** %70, align 8
  %72 = icmp eq %class.SkData* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.SkData, %class.SkData* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  br label %76

76:                                               ; preds = %73, %69
  %77 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 1, i32 0
  %78 = load %class.SkData*, %class.SkData** %77, align 8
  store %class.SkData* %71, %class.SkData** %77, align 8
  %79 = icmp eq %class.SkData* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %class.SkData, %class.SkData* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %78) #9
  %85 = bitcast %class.SkData* %78 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %85) #9
  br label %86

86:                                               ; preds = %64, %76, %80, %84
  %87 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 2
  %88 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 2
  %89 = bitcast %class.SkYUVAInfo* %87 to i8*
  %90 = bitcast %class.SkYUVAInfo* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 36, i1 false) #9
  %91 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %1, i64 0, i32 0, i32 0, i32 3
  %92 = load i32, i32* %91, align 8
  call void @_ZN16SkYUVPlanesCache3AddEjP12SkCachedDataRK13SkYUVAPixmapsP15SkResourceCache(i32 %92, %class.SkCachedData* %53, %class.SkYUVAPixmaps* dereferenceable(208) %3, %class.SkResourceCache* null) #9
  %93 = bitcast %class.sk_sp.256* %0 to i64*
  store i64 %54, i64* %93, align 8
  br label %94

94:                                               ; preds = %86, %62
  %95 = phi i64 [ 0, %86 ], [ %54, %62 ]
  %96 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 1, i32 0
  %97 = load %class.SkData*, %class.SkData** %96, align 8
  %98 = icmp eq %class.SkData* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %class.SkData, %class.SkData* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %97) #9
  %104 = bitcast %class.SkData* %97 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %104) #9
  br label %105

105:                                              ; preds = %94, %99, %103
  %106 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %107 = load %class.SkColorSpace*, %class.SkColorSpace** %106, align 8
  %108 = icmp eq %class.SkColorSpace* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = bitcast %class.SkColorSpace* %107 to i8*
  call void @_ZdlPv(i8* %114) #8
  br label %115

115:                                              ; preds = %113, %109, %105
  %116 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %117 = load %class.SkColorSpace*, %class.SkColorSpace** %116, align 8
  %118 = icmp eq %class.SkColorSpace* %117, null
  br i1 %118, label %125, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = bitcast %class.SkColorSpace* %117 to i8*
  call void @_ZdlPv(i8* %124) #8
  br label %125

125:                                              ; preds = %123, %119, %115
  %126 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %127 = load %class.SkColorSpace*, %class.SkColorSpace** %126, align 8
  %128 = icmp eq %class.SkColorSpace* %127, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = bitcast %class.SkColorSpace* %127 to i8*
  call void @_ZdlPv(i8* %134) #8
  br label %135

135:                                              ; preds = %133, %129, %125
  %136 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %6, i64 0, i32 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %137 = load %class.SkColorSpace*, %class.SkColorSpace** %136, align 8
  %138 = icmp eq %class.SkColorSpace* %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  %144 = bitcast %class.SkColorSpace* %137 to i8*
  call void @_ZdlPv(i8* %144) #8
  br label %145

145:                                              ; preds = %135, %139, %143
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %55) #9
  br label %146

146:                                              ; preds = %145, %49
  %147 = phi i64 [ %22, %49 ], [ %95, %145 ]
  %148 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %149 = load %class.SkColorSpace*, %class.SkColorSpace** %148, align 8
  %150 = icmp eq %class.SkColorSpace* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 -1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = bitcast %class.SkColorSpace* %149 to i8*
  call void @_ZdlPv(i8* %156) #8
  br label %157

157:                                              ; preds = %155, %151, %146
  %158 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %159 = load %class.SkColorSpace*, %class.SkColorSpace** %158, align 8
  %160 = icmp eq %class.SkColorSpace* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = atomicrmw add i32* %162, i32 -1 acq_rel
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  %166 = bitcast %class.SkColorSpace* %159 to i8*
  call void @_ZdlPv(i8* %166) #8
  br label %167

167:                                              ; preds = %165, %161, %157
  %168 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %169 = load %class.SkColorSpace*, %class.SkColorSpace** %168, align 8
  %170 = icmp eq %class.SkColorSpace* %169, null
  br i1 %170, label %177, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 -1 acq_rel
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %177

175:                                              ; preds = %171
  %176 = bitcast %class.SkColorSpace* %169 to i8*
  call void @_ZdlPv(i8* %176) #8
  br label %177

177:                                              ; preds = %175, %171, %167
  %178 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %179 = load %class.SkColorSpace*, %class.SkColorSpace** %178, align 8
  %180 = icmp eq %class.SkColorSpace* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw add i32* %182, i32 -1 acq_rel
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %185, label %187

185:                                              ; preds = %181
  %186 = bitcast %class.SkColorSpace* %179 to i8*
  call void @_ZdlPv(i8* %186) #8
  br label %187

187:                                              ; preds = %185, %181, %177
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %27) #9
  %188 = icmp eq i64 %147, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = inttoptr i64 %147 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %190, i1 zeroext false) #9
  br label %191

191:                                              ; preds = %24, %187, %189
  %192 = atomicrmw add i32* %10, i32 1 release
  %193 = icmp slt i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %191
  %195 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %9, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %195, i32 1) #9
  br label %196

196:                                              ; preds = %191, %194
  ret void
}

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

declare void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN20GrYUVATextureProxiesC1ERK10SkYUVAInfoP18GrSurfaceProxyViewP11GrColorType(%class.GrYUVATextureProxies*, %class.SkYUVAInfo* dereferenceable(32), %class.GrSurfaceProxyView*, i32*) unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN16GrYUVtoRGBEffect4MakeERK20GrYUVATextureProxies14GrSamplerStateRK6GrCapsRK8SkMatrixPK6SkRectSC_(%class.GrYUVATextureProxies* dereferenceable(104), i64, i32, %class.GrCaps* dereferenceable(232), %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkRect*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #2

declare %class.SkCachedData* @_ZN16SkYUVPlanesCache10FindAndRefEjP13SkYUVAPixmapsP15SkResourceCache(i32, %class.SkYUVAPixmaps*, %class.SkResourceCache*) local_unnamed_addr #2

declare zeroext i1 @_ZNK16SkImageGenerator13queryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) local_unnamed_addr #2

declare %class.SkCachedData* @_ZN15SkResourceCache13NewCachedDataEm(i64) local_unnamed_addr #2

declare i64 @_ZNK16SkYUVAPixmapInfo17computeTotalBytesEPm(%class.SkYUVAPixmapInfo*, i64*) local_unnamed_addr #2

declare void @_ZN13SkYUVAPixmaps18FromExternalMemoryERK16SkYUVAPixmapInfoPv(%class.SkYUVAPixmaps* sret, %class.SkYUVAPixmapInfo* dereferenceable(168), i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN16SkImageGenerator13getYUVAPlanesERK13SkYUVAPixmaps(%class.SkImageGenerator*, %class.SkYUVAPixmaps* dereferenceable(208)) local_unnamed_addr #2

declare void @_ZN16SkYUVPlanesCache3AddEjP12SkCachedDataRK13SkYUVAPixmapsP15SkResourceCache(i32, %class.SkCachedData*, %class.SkYUVAPixmaps* dereferenceable(208), %class.SkResourceCache*) local_unnamed_addr #2

declare void @_Z20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRect(%class.GrUniqueKey*, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.276* sret, %class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), i32) local_unnamed_addr #2

declare void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* sret, %class.GrCaps*, %class.GrBackendFormat* dereferenceable(72), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy*) local_unnamed_addr #2

declare void @_Z22GrCopyBaseMipMapToViewP18GrRecordingContext18GrSurfaceProxyView10SkBudgeted(%class.GrSurfaceProxyView* sret, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN15GrProxyProvider24removeUniqueKeyFromProxyEP14GrTextureProxy(%class.GrProxyProvider*, %class.GrTextureProxy*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK12SkImage_Lazy20lockTextureProxyViewEP18GrRecordingContext19GrImageTexGenPolicy11GrMipmappedENK3$_2clERK18GrSurfaceProxyView"(%class.anon.275* nocapture readonly, %class.GrSurfaceProxyView* nocapture readonly dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = alloca %class.sk_sp.277, align 8
  %4 = alloca %class.sk_sp.277, align 8
  %5 = getelementptr inbounds %class.anon.275, %class.anon.275* %0, i64 0, i32 0
  %6 = bitcast %class.anon.275* %0 to %class.GrResourceKey**
  %7 = load %class.GrResourceKey*, %class.GrResourceKey** %6, align 8
  %8 = getelementptr inbounds %class.GrResourceKey, %class.GrResourceKey* %7, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 65535
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %73, label %14

14:                                               ; preds = %2
  %15 = bitcast %class.GrResourceKey* %7 to %class.GrUniqueKey*
  %16 = getelementptr inbounds %class.anon.275, %class.anon.275* %0, i64 0, i32 2
  %17 = load %class.SkImage_Lazy*, %class.SkImage_Lazy** %16, align 8
  %18 = bitcast %class.sk_sp.277* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %class.sk_sp.277, %class.sk_sp.277* %4, i64 0, i32 0
  store %class.SkIDChangeListener* inttoptr (i64 -6148914691236517206 to %class.SkIDChangeListener*), %class.SkIDChangeListener** %19, align 8
  %20 = getelementptr inbounds %class.anon.275, %class.anon.275* %0, i64 0, i32 1
  %21 = bitcast %class.GrRecordingContext*** %20 to %class.GrContext_Base***
  %22 = load %class.GrContext_Base**, %class.GrContext_Base*** %21, align 8
  %23 = load %class.GrContext_Base*, %class.GrContext_Base** %22, align 8
  %24 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %23) #9
  call void @_Z35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyj(%class.sk_sp.277* nonnull sret %4, %class.GrUniqueKey* %15, i32 %24) #9
  %25 = bitcast %class.sk_sp.277* %4 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %19, align 8
  %27 = bitcast %class.sk_sp.277* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %17, i64 0, i32 4
  %29 = bitcast %class.sk_sp.277* %3 to i64*
  store i64 %26, i64* %29, align 8
  call void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"* %28, %class.sk_sp.277* nonnull %3) #9
  %30 = getelementptr inbounds %class.sk_sp.277, %class.sk_sp.277* %3, i64 0, i32 0
  %31 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %30, align 8
  %32 = icmp eq %class.SkIDChangeListener* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %14
  %34 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkIDChangeListener* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.SkIDChangeListener* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #9
  br label %43

43:                                               ; preds = %37, %33, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %44 = getelementptr inbounds %class.anon.275, %class.anon.275* %0, i64 0, i32 3
  %45 = load %class.GrProxyProvider**, %class.GrProxyProvider*** %44, align 8
  %46 = load %class.GrProxyProvider*, %class.GrProxyProvider** %45, align 8
  %47 = load %class.GrUniqueKey*, %class.GrUniqueKey** %5, align 8
  %48 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %49 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %48, align 8
  %50 = icmp eq %class.GrSurfaceProxy* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %43
  %52 = bitcast %class.GrSurfaceProxy* %49 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %53 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %52, align 8
  %54 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %53, i64 3
  %55 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %54, align 8
  %56 = call %class.GrTextureProxy* %55(%class.GrSurfaceProxy* nonnull %49) #9
  br label %57

57:                                               ; preds = %43, %51
  %58 = phi %class.GrTextureProxy* [ %56, %51 ], [ null, %43 ]
  %59 = call zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider* %46, %class.GrUniqueKey* dereferenceable(56) %47, %class.GrTextureProxy* %58) #9
  %60 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %19, align 8
  %61 = icmp eq %class.SkIDChangeListener* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkIDChangeListener* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkIDChangeListener* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #9
  br label %72

72:                                               ; preds = %57, %62, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %73

73:                                               ; preds = %2, %72
  ret void
}

declare void @_ZN16SkImageGenerator15generateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy(%class.GrSurfaceProxyView* sret, %class.SkImageGenerator*, %class.GrRecordingContext*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIPoint* dereferenceable(8), i1 zeroext, i32) local_unnamed_addr #2

declare void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* sret, %class.GrCaps*, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Lazy19addUniqueIDListenerE5sk_spI18SkIDChangeListenerE(%class.SkImage_Lazy*, %class.sk_sp.277* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.277, align 8
  %4 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.sk_sp.277, %class.sk_sp.277* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp.277* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %5, align 8
  %8 = bitcast %class.sk_sp.277* %3 to i64*
  store i64 %7, i64* %8, align 8
  call void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"* %4, %class.sk_sp.277* nonnull %3) #9
  %9 = getelementptr inbounds %class.sk_sp.277, %class.sk_sp.277* %3, i64 0, i32 0
  %10 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %9, align 8
  %11 = icmp eq %class.SkIDChangeListener* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkIDChangeListener* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkIDChangeListener* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  call void %21(%class.SkRefCntBase* nonnull %17) #9
  br label %22

22:                                               ; preds = %2, %12, %16
  ret void
}

declare void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"*, %class.sk_sp.277*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkImage_LazyD2Ev(%class.SkImage_Lazy*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTV12SkImage_Lazy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 4
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %3) #9
  %4 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 3, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = bitcast %class.SkImage* %5 to %class.SkRefCntBase*
  %13 = bitcast %class.SkImage* %5 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 2
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #9
  br label %17

17:                                               ; preds = %1, %7, %11
  %18 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 2, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %18) #9
  %19 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 1, i32 0
  %20 = load %class.SharedGenerator*, %class.SharedGenerator** %19, align 8
  %21 = icmp eq %class.SharedGenerator* %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %20, i64 0, i32 0
  %24 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %41

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %23, i64 4
  %29 = bitcast %class.SkNVRefCnt* %28 to %class.SkSemaphore*
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %29) #9
  %30 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %23, i64 2
  %31 = bitcast %class.SkNVRefCnt* %30 to %class.SkImageGenerator**
  %32 = load %class.SkImageGenerator*, %class.SkImageGenerator** %31, align 8
  store %class.SkImageGenerator* null, %class.SkImageGenerator** %31, align 8
  %33 = icmp eq %class.SkImageGenerator* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = bitcast %class.SkImageGenerator* %32 to void (%class.SkImageGenerator*)***
  %36 = load void (%class.SkImageGenerator*)**, void (%class.SkImageGenerator*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %36, i64 1
  %38 = load void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %37, align 8
  tail call void %38(%class.SkImageGenerator* nonnull %32) #9
  br label %39

39:                                               ; preds = %34, %27
  %40 = bitcast %class.SharedGenerator* %20 to i8*
  tail call void @_ZdlPv(i8* %40) #8
  br label %41

41:                                               ; preds = %17, %22, %39
  %42 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage_Base*
  tail call void @_ZN12SkImage_BaseD2Ev(%class.SkImage_Base* %42) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkImage_LazyD0Ev(%class.SkImage_Lazy*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTV12SkImage_Lazy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 4
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %3) #9
  %4 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 3, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = bitcast %class.SkImage* %5 to %class.SkRefCntBase*
  %13 = bitcast %class.SkImage* %5 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 2
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #9
  br label %17

17:                                               ; preds = %11, %7, %1
  %18 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 2, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %18) #9
  %19 = getelementptr inbounds %class.SkImage_Lazy, %class.SkImage_Lazy* %0, i64 0, i32 1, i32 0
  %20 = load %class.SharedGenerator*, %class.SharedGenerator** %19, align 8
  %21 = icmp eq %class.SharedGenerator* %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %20, i64 0, i32 0
  %24 = getelementptr inbounds %class.SharedGenerator, %class.SharedGenerator* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %41

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %23, i64 4
  %29 = bitcast %class.SkNVRefCnt* %28 to %class.SkSemaphore*
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %29) #9
  %30 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %23, i64 2
  %31 = bitcast %class.SkNVRefCnt* %30 to %class.SkImageGenerator**
  %32 = load %class.SkImageGenerator*, %class.SkImageGenerator** %31, align 8
  store %class.SkImageGenerator* null, %class.SkImageGenerator** %31, align 8
  %33 = icmp eq %class.SkImageGenerator* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = bitcast %class.SkImageGenerator* %32 to void (%class.SkImageGenerator*)***
  %36 = load void (%class.SkImageGenerator*)**, void (%class.SkImageGenerator*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %36, i64 1
  %38 = load void (%class.SkImageGenerator*)*, void (%class.SkImageGenerator*)** %37, align 8
  tail call void %38(%class.SkImageGenerator* nonnull %32) #9
  br label %39

39:                                               ; preds = %34, %27
  %40 = bitcast %class.SharedGenerator* %20 to i8*
  tail call void @_ZdlPv(i8* %40) #8
  br label %41

41:                                               ; preds = %17, %22, %39
  %42 = bitcast %class.SkImage_Lazy* %0 to %class.SkImage_Base*
  tail call void @_ZN12SkImage_BaseD2Ev(%class.SkImage_Base* %42) #9
  %43 = bitcast %class.SkImage_Lazy* %0 to i8*
  tail call void @_ZdlPv(i8* %43) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base12onPeekPixelsEP8SkPixmap(%class.SkImage_Base*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBitmap* @_ZNK12SkImage_Base12onPeekBitmapEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret %class.SkBitmap* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Lazy12onHasMipmapsEv(%class.SkImage_Lazy*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkMipmap* @_ZNK12SkImage_Base10onPeekMipsEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret %class.SkMipmap* null
}

declare void @_ZN12SkImage_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkImage_Base*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, {}*, i8*) unnamed_addr #2

declare void @_ZN12SkImage_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.SkImage_Base*, i32, %class.sk_sp.1*, %struct.SkIRect* dereferenceable(16), %struct.SkISize* dereferenceable(8), i1 zeroext, i32, {}*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrImageContext* @_ZNK12SkImage_Base7contextEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret %class.GrImageContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkImage_Base7onFlushEP15GrDirectContextRK11GrFlushInfo(%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base6isYUVAEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkImage_Base26generatingSurfaceIsDeletedEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base14onPinAsTextureEP18GrRecordingContext(%class.SkImage_Base*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkImage_Base16onUnpinAsTextureEP18GrRecordingContext(%class.SkImage_Base*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base17isPinnedOnContextEP18GrRecordingContext(%class.SkImage_Base*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK12SkImage_Base19onGetBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* sret, %class.SkImage_Base*, i1 zeroext, i32*) unnamed_addr #2

declare zeroext i1 @_ZNK12SkImage_Base16onAsLegacyBitmapEP15GrDirectContextP8SkBitmap(%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Lazy17onIsLazyGeneratedEv(%class.SkImage_Lazy*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base17onIsTextureBackedEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK12SkImage_Base13onTextureSizeEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkImage_Base24notifyAddedToRasterCacheEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkImage_Base17onMakeWithMipmapsE5sk_spI8SkMipmapE(%class.sk_sp.13* noalias sret, %class.SkImage_Base*, %class.sk_sp.247*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %4, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZN16SkImageGenerator9getPixelsERK11SkImageInfoPvm(%class.SkImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #9
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZNK12SkImage_Lazy26textureProxyViewFromPlanesEP18GrRecordingContext10SkBudgetedEN3$_18__invokeEPvS4_"(i8* nocapture readnone, i8*) #5 align 2 {
  %3 = bitcast i8* %1 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %3, i1 zeroext false) #9
  ret void
}

declare void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.1*) unnamed_addr #2

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #2

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.std::__1::array.255"* @_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_(%"struct.std::__1::array.255"*, %"struct.std::__1::array.255"* dereferenceable(160)) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::array.255"* %0, %1
  %4 = bitcast %"struct.std::__1::array.255"* %0 to i8*
  %5 = bitcast %"struct.std::__1::array.255"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #9
  br i1 %3, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %9 = icmp eq %class.SkColorSpace* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %6
  %14 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  store %class.SkColorSpace* %8, %class.SkColorSpace** %14, align 8
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %class.SkColorSpace* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #8
  br label %23

23:                                               ; preds = %2, %13, %17, %21
  %24 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 0, i32 2, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast i32* %25 to i64*
  %27 = bitcast i32* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 0, i32 2, i32 1
  %30 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 0, i32 2, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  %32 = bitcast %struct.SkISize* %29 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 1
  %36 = bitcast %class.SkPixmap* %34 to i8*
  %37 = bitcast %class.SkPixmap* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #9
  br i1 %3, label %55, label %38

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic
  br label %45

45:                                               ; preds = %42, %38
  %46 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %47 = load %class.SkColorSpace*, %class.SkColorSpace** %46, align 8
  store %class.SkColorSpace* %40, %class.SkColorSpace** %46, align 8
  %48 = icmp eq %class.SkColorSpace* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = bitcast %class.SkColorSpace* %47 to i8*
  tail call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %53, %49, %45, %23
  %56 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 1, i32 2, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 1, i32 2, i32 0, i32 1
  %58 = bitcast i32* %57 to i64*
  %59 = bitcast i32* %56 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 1, i32 2, i32 1
  %62 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 1, i32 2, i32 1
  %63 = bitcast %struct.SkISize* %62 to i64*
  %64 = bitcast %struct.SkISize* %61 to i64*
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 2
  %67 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 2
  %68 = bitcast %class.SkPixmap* %66 to i8*
  %69 = bitcast %class.SkPixmap* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #9
  br i1 %3, label %87, label %70

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %72 = load %class.SkColorSpace*, %class.SkColorSpace** %71, align 8
  %73 = icmp eq %class.SkColorSpace* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic
  br label %77

77:                                               ; preds = %74, %70
  %78 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %79 = load %class.SkColorSpace*, %class.SkColorSpace** %78, align 8
  store %class.SkColorSpace* %72, %class.SkColorSpace** %78, align 8
  %80 = icmp eq %class.SkColorSpace* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = bitcast %class.SkColorSpace* %79 to i8*
  tail call void @_ZdlPv(i8* %86) #8
  br label %87

87:                                               ; preds = %85, %81, %77, %55
  %88 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 2, i32 2, i32 0, i32 1
  %89 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 2, i32 2, i32 0, i32 1
  %90 = bitcast i32* %89 to i64*
  %91 = bitcast i32* %88 to i64*
  %92 = load i64, i64* %90, align 8
  store i64 %92, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 2, i32 2, i32 1
  %94 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 2, i32 2, i32 1
  %95 = bitcast %struct.SkISize* %94 to i64*
  %96 = bitcast %struct.SkISize* %93 to i64*
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 3
  %99 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 3
  %100 = bitcast %class.SkPixmap* %98 to i8*
  %101 = bitcast %class.SkPixmap* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #9
  br i1 %3, label %119, label %102

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 1 monotonic
  br label %109

109:                                              ; preds = %106, %102
  %110 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %111 = load %class.SkColorSpace*, %class.SkColorSpace** %110, align 8
  store %class.SkColorSpace* %104, %class.SkColorSpace** %110, align 8
  %112 = icmp eq %class.SkColorSpace* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = bitcast %class.SkColorSpace* %111 to i8*
  tail call void @_ZdlPv(i8* %118) #8
  br label %119

119:                                              ; preds = %117, %113, %109, %87
  %120 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 3, i32 2, i32 0, i32 1
  %121 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 3, i32 2, i32 0, i32 1
  %122 = bitcast i32* %121 to i64*
  %123 = bitcast i32* %120 to i64*
  %124 = load i64, i64* %122, align 8
  store i64 %124, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %0, i64 0, i32 0, i64 3, i32 2, i32 1
  %126 = getelementptr inbounds %"struct.std::__1::array.255", %"struct.std::__1::array.255"* %1, i64 0, i32 0, i64 3, i32 2, i32 1
  %127 = bitcast %struct.SkISize* %126 to i64*
  %128 = bitcast %struct.SkISize* %125 to i64*
  %129 = load i64, i64* %127, align 8
  store i64 %129, i64* %128, align 8
  ret %"struct.std::__1::array.255"* %0
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_Z35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyj(%class.sk_sp.277* sret, %class.GrUniqueKey*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), %class.GrTextureProxy*) local_unnamed_addr #2

declare i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base*) local_unnamed_addr #2

declare dereferenceable(240) %struct.GrContextOptions* @_ZNK14GrContext_Base7optionsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12SkImage_BaseD2Ev(%class.SkImage_Base*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #3

declare void @_ZN13SkBitmapCache16PrivateDeleteRecEPNS_3RecE(%"class.SkBitmapCache::Rec"*) local_unnamed_addr #2

declare void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5, !7}
!3 = distinct !{!3, !4, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!5 = distinct !{!5, !6, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!6 = distinct !{!6, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!7 = distinct !{!7, !8, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!8 = distinct !{!8, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!11 = distinct !{!11, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!14 = distinct !{!14, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN16SkImageGenerator14refEncodedDataEv: argument 0"}
!17 = distinct !{!17, !"_ZN16SkImageGenerator14refEncodedDataEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!20 = distinct !{!20, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!23 = distinct !{!23, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!24 = !{!25, !19}
!25 = distinct !{!25, !26, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!26 = distinct !{!26, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN15SharedGenerator4MakeENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE: argument 0"}
!29 = distinct !{!29, !"_ZN15SharedGenerator4MakeENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_Z10sk_make_spI12SkImage_LazyJPNS0_9ValidatorEEE5sk_spIT_EDpOT0_: argument 0"}
!32 = distinct !{!32, !"_Z10sk_make_spI12SkImage_LazyJPNS0_9ValidatorEEE5sk_spIT_EDpOT0_"}
!33 = !{i8 0, i8 2}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!36 = distinct !{!36, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
