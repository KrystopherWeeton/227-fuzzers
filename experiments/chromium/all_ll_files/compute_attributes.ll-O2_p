; ModuleID = '../../ui/accessibility/platform/compute_attributes.cc'
source_filename = "../../ui/accessibility/platform/compute_attributes.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::AXPlatformNodeDelegate" = type { i32 (...)** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.9", %"class.std::__1::vector.17", %"class.std::__1::vector.25", %"class.std::__1::vector.33", %"class.std::__1::vector.41", %"class.std::__1::vector.49", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair.3"*, %"struct.std::__1::pair.3"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair.3" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair.3"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair.11" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair.11"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair.19" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair.19"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair.35"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair.43" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair.43"* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i32*, i32*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui16ComputeAttributeEPKNS_22AXPlatformNodeDelegateEN2ax5mojom12IntAttributeE(%"class.ui::AXPlatformNodeDelegate"*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  switch i32 %1, label %16 [
    i32 44, label %4
    i32 43, label %10
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i32 (%"class.ui::AXPlatformNodeDelegate"*)***
  %6 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)**, i32 (%"class.ui::AXPlatformNodeDelegate"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %6, i64 87
  %8 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %7, align 8
  %9 = tail call i32 %8(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  br label %189

10:                                               ; preds = %2
  %11 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i32 (%"class.ui::AXPlatformNodeDelegate"*)***
  %12 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)**, i32 (%"class.ui::AXPlatformNodeDelegate"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %12, i64 88
  %14 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %13, align 8
  %15 = tail call i32 %14(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  br label %189

16:                                               ; preds = %2
  %17 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i1 (%"class.ui::AXPlatformNodeDelegate"*)***
  %18 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)**, i1 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %18, i64 71
  %20 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  br i1 %21, label %22, label %70

22:                                               ; preds = %16
  switch i32 %1, label %65 [
    i32 11, label %23
    i32 14, label %30
    i32 23, label %37
    i32 25, label %44
    i32 24, label %51
    i32 26, label %58
  ]

23:                                               ; preds = %22
  %24 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %25 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %25, i64 77
  %27 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %26, align 8
  %28 = tail call i64 %27(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %29 = and i64 %28, -256
  br label %65

30:                                               ; preds = %22
  %31 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %32 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %31, align 8
  %33 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %32, i64 78
  %34 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %33, align 8
  %35 = tail call i64 %34(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %36 = and i64 %35, -256
  br label %65

37:                                               ; preds = %22
  %38 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %39 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %39, i64 73
  %41 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %40, align 8
  %42 = tail call i64 %41(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %43 = and i64 %42, -256
  br label %65

44:                                               ; preds = %22
  %45 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %46 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %46, i64 74
  %48 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %47, align 8
  %49 = tail call i64 %48(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %50 = and i64 %49, -256
  br label %65

51:                                               ; preds = %22
  %52 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %53 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %52, align 8
  %54 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %53, i64 75
  %55 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %54, align 8
  %56 = tail call i64 %55(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %57 = and i64 %56, -256
  br label %65

58:                                               ; preds = %22
  %59 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %60 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %59, align 8
  %61 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %60, i64 76
  %62 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %61, align 8
  %63 = tail call i64 %62(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %64 = and i64 %63, -256
  br label %65

65:                                               ; preds = %22, %23, %30, %37, %44, %51, %58
  %66 = phi i64 [ %64, %58 ], [ %57, %51 ], [ %50, %44 ], [ %43, %37 ], [ %36, %30 ], [ %29, %23 ], [ 0, %22 ]
  %67 = phi i64 [ %63, %58 ], [ %56, %51 ], [ %49, %44 ], [ %42, %37 ], [ %35, %30 ], [ %28, %23 ], [ 0, %22 ]
  %68 = and i64 %67, 255
  %69 = or i64 %68, %66
  br label %167

70:                                               ; preds = %16
  %71 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)**, i1 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %72 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %71, i64 69
  %73 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  br i1 %74, label %75, label %89

75:                                               ; preds = %70
  %76 = icmp eq i32 %1, 19
  br i1 %76, label %77, label %85

77:                                               ; preds = %75
  %78 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %79 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %78, align 8
  %80 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %79, i64 70
  %81 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %80, align 8
  %82 = tail call i64 %81(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %83 = and i64 %82, -256
  %84 = and i64 %82, 255
  br label %85

85:                                               ; preds = %75, %77
  %86 = phi i64 [ %83, %77 ], [ 0, %75 ]
  %87 = phi i64 [ %84, %77 ], [ 0, %75 ]
  %88 = or i64 %87, %86
  br label %167

89:                                               ; preds = %70
  %90 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)**, i1 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %91 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %90, i64 57
  %92 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %91, align 8
  %93 = tail call zeroext i1 %92(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  br i1 %93, label %94, label %128

94:                                               ; preds = %89
  switch i32 %1, label %123 [
    i32 17, label %95
    i32 16, label %102
    i32 10, label %109
    i32 13, label %116
  ]

95:                                               ; preds = %94
  %96 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %97 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %96, align 8
  %98 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %97, i64 58
  %99 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %98, align 8
  %100 = tail call i64 %99(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %101 = and i64 %100, -256
  br label %123

102:                                              ; preds = %94
  %103 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %104 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %103, align 8
  %105 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %104, i64 59
  %106 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %105, align 8
  %107 = tail call i64 %106(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %108 = and i64 %107, -256
  br label %123

109:                                              ; preds = %94
  %110 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %111 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %110, align 8
  %112 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %111, i64 60
  %113 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %112, align 8
  %114 = tail call i64 %113(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %115 = and i64 %114, -256
  br label %123

116:                                              ; preds = %94
  %117 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %118 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %117, align 8
  %119 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %118, i64 61
  %120 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %119, align 8
  %121 = tail call i64 %120(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %122 = and i64 %121, -256
  br label %123

123:                                              ; preds = %94, %95, %102, %109, %116
  %124 = phi i64 [ %122, %116 ], [ %115, %109 ], [ %108, %102 ], [ %101, %95 ], [ 0, %94 ]
  %125 = phi i64 [ %121, %116 ], [ %114, %109 ], [ %107, %102 ], [ %100, %95 ], [ 0, %94 ]
  %126 = and i64 %125, 255
  %127 = or i64 %126, %124
  br label %167

128:                                              ; preds = %89
  %129 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)**, i1 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %130 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %129, i64 83
  %131 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %130, align 8
  %132 = tail call zeroext i1 %131(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  br i1 %132, label %133, label %153

133:                                              ; preds = %128
  switch i32 %1, label %148 [
    i32 40, label %134
    i32 39, label %141
  ]

134:                                              ; preds = %133
  %135 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %136 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %135, align 8
  %137 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %136, i64 85
  %138 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %137, align 8
  %139 = tail call i64 %138(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %140 = and i64 %139, -256
  br label %148

141:                                              ; preds = %133
  %142 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %143 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %142, align 8
  %144 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %143, i64 86
  %145 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %144, align 8
  %146 = tail call i64 %145(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %147 = and i64 %146, -256
  br label %148

148:                                              ; preds = %133, %134, %141
  %149 = phi i64 [ %147, %141 ], [ %140, %134 ], [ 0, %133 ]
  %150 = phi i64 [ %146, %141 ], [ %139, %134 ], [ 0, %133 ]
  %151 = and i64 %150, 255
  %152 = or i64 %151, %149
  br label %167

153:                                              ; preds = %128
  %154 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)**, i1 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %155 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %154, i64 84
  %156 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %155, align 8
  %157 = tail call zeroext i1 %156(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %158 = icmp eq i32 %1, 39
  %159 = and i1 %157, %158
  br i1 %159, label %160, label %172

160:                                              ; preds = %153
  %161 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to i64 (%"class.ui::AXPlatformNodeDelegate"*)***
  %162 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)**, i64 (%"class.ui::AXPlatformNodeDelegate"*)*** %161, align 8
  %163 = getelementptr inbounds i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %162, i64 86
  %164 = load i64 (%"class.ui::AXPlatformNodeDelegate"*)*, i64 (%"class.ui::AXPlatformNodeDelegate"*)** %163, align 8
  %165 = tail call i64 %164(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %166 = and i64 %165, 255
  br label %167

167:                                              ; preds = %160, %85, %148, %123, %65
  %168 = phi i64 [ %66, %65 ], [ %86, %85 ], [ %124, %123 ], [ %149, %148 ], [ %165, %160 ]
  %169 = phi i64 [ %69, %65 ], [ %88, %85 ], [ %127, %123 ], [ %152, %148 ], [ %166, %160 ]
  %170 = trunc i64 %169 to i8
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %182

172:                                              ; preds = %167, %153
  %173 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #3
  store i32 -1431655766, i32* %3, align 4
  %174 = bitcast %"class.ui::AXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)***
  %175 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*** %174, align 8
  %176 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %175, i64 2
  %177 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %176, align 8
  %178 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %177(%"class.ui::AXPlatformNodeDelegate"* %0) #3
  %179 = call zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"* %178, i32 %1, i32* nonnull %3) #3
  %180 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173) #3
  %181 = zext i1 %179 to i64
  br label %189

182:                                              ; preds = %167
  %183 = lshr i64 %168, 32
  %184 = and i64 %168, -256
  %185 = and i64 %169, 255
  %186 = or i64 %185, %184
  %187 = trunc i64 %183 to i32
  %188 = and i64 %168, 4294967040
  br label %189

189:                                              ; preds = %182, %172, %10, %4
  %190 = phi i64 [ %186, %182 ], [ %181, %172 ], [ 1, %10 ], [ 1, %4 ]
  %191 = phi i32 [ %187, %182 ], [ %180, %172 ], [ %15, %10 ], [ %9, %4 ]
  %192 = phi i64 [ %188, %182 ], [ 0, %172 ], [ 0, %10 ], [ 0, %4 ]
  %193 = zext i32 %191 to i64
  %194 = shl nuw i64 %193, 32
  %195 = and i64 %190, 255
  %196 = or i64 %192, %195
  %197 = or i64 %196, %194
  ret i64 %197
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"*, i32, i32*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
