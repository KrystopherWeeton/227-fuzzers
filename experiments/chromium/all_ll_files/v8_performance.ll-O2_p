; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_performance.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_performance.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.211 }
%class.scoped_refptr.211 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.212" }
%"struct.std::__1::atomic.212" = type { %"struct.std::__1::__atomic_base.213" }
%"struct.std::__1::__atomic_base.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__cxx_atomic_impl.215" }
%"struct.std::__1::__cxx_atomic_impl.215" = type { %"struct.std::__1::__cxx_atomic_base_impl.216" }
%"struct.std::__1::__cxx_atomic_base_impl.216" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.319" }
%"struct.std::__1::atomic.319" = type { %"struct.std::__1::__atomic_base.320" }
%"struct.std::__1::__atomic_base.320" = type { %"struct.std::__1::__atomic_base.321" }
%"struct.std::__1::__atomic_base.321" = type { %"struct.std::__1::__cxx_atomic_impl.322" }
%"struct.std::__1::__cxx_atomic_impl.322" = type { %"struct.std::__1::__cxx_atomic_base_impl.323" }
%"struct.std::__1::__cxx_atomic_base_impl.323" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::V8PrivateProperty::SymbolKey" = type { i8 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.184, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.184 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.186" }
%"class.blink::Persistent.186" = type { %"class.blink::PersistentBase.187" }
%"class.blink::PersistentBase.187" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.236", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.245", %"class.blink::Member.247", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.256", %"class.blink::Member.262", %"class.blink::Member.264", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.188" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.188" = type { %"class.WTF::HashMap.191" }
%"class.WTF::HashMap.191" = type { %"class.WTF::HashTable.192" }
%"class.WTF::HashTable.192" = type <{ %"struct.WTF::KeyValuePair.194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.194" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.200" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.197" }
%"class.WTF::HashTable.197" = type <{ %"class.blink::WeakMember.199"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.199" = type opaque
%"class.blink::Supplementable.200" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.201" }
%"class.blink::HeapHashMap.201" = type { %"class.WTF::HashMap.204" }
%"class.WTF::HashMap.204" = type { %"class.WTF::HashTable.205" }
%"class.WTF::HashTable.205" = type <{ %"struct.WTF::KeyValuePair.207"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.207" = type { i8*, %"class.blink::Member.266" }
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.268" }
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.208, %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.224", %"class.blink::Member.230", i32, [4 x i8], %"class.WTF::HashSet.232", i32, i32 }
%class.scoped_refptr.208 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.209", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.217 }
%"class.WTF::RefCounted.209" = type { %"class.base::RefCounted.210" }
%"class.base::RefCounted.210" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.217 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.232" = type { %"class.WTF::HashTable.233" }
%"class.WTF::HashTable.233" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.240" }
%"class.WTF::Vector.240" = type { %"class.WTF::VectorBuffer.241" }
%"class.WTF::VectorBuffer.241" = type { %"class.WTF::VectorBufferBase.242" }
%"class.WTF::VectorBufferBase.242" = type { %"class.blink::Member.243"*, i32, i32 }
%"class.blink::Member.243" = type opaque
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.249", i32, i32 }
%"class.blink::HeapHashMap.249" = type { %"class.WTF::HashMap.252" }
%"class.WTF::HashMap.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ %"struct.WTF::KeyValuePair.255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.255" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Performance" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::HeapVector.291", %"class.blink::HeapDeque", i32, i8, %"class.blink::HeapVector.291", i32, %"class.blink::HeapVector.291", i32, %"class.blink::HeapVector.291", %"class.blink::HeapVector.291", %"class.blink::HeapVector.291", %"class.blink::HeapVector.291", %"class.blink::Member.297", %"class.blink::Member.304", %"class.blink::Member.297", %"class.blink::Member.297", %"class.blink::Member.306", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"*, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %class.scoped_refptr.318, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.333" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.284" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.272" }
%"class.blink::HeapVector.272" = type { %"class.WTF::Vector.275" }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277", [32 x i8] }
%"class.WTF::VectorBufferBase.277" = type { %"struct.std::__1::pair.278"*, i32, i32 }
%"struct.std::__1::pair.278" = type { %"class.WTF::AtomicString", %"class.blink::Member.279" }
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::HeapVector.281"* }
%"class.blink::HeapVector.281" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.WTF::Vector.287"* }
%"class.WTF::Vector.287" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.302" }
%"class.WTF::Deque.302" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.blink::Member.297"*, i32, i32 }
%"class.blink::HeapVector.291" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::UserTiming"* }
%"class.blink::UserTiming" = type opaque
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::PerformanceEntry"* }
%"class.blink::PerformanceEntry" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32, [4 x i8] }>
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::PerformanceEventTiming"* }
%"class.blink::PerformanceEventTiming" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.310", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.310" = type { %"class.WTF::HashTable.311" }
%"class.WTF::HashTable.311" = type <{ %"struct.WTF::KeyValuePair.313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.313" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.314", i32, i32 }
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%class.scoped_refptr.318 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.319" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.331", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.318, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.325", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.325" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.326" }
%"struct.std::__1::atomic.326" = type { %"struct.std::__1::__atomic_base.327" }
%"struct.std::__1::__atomic_base.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__cxx_atomic_impl.329" }
%"struct.std::__1::__cxx_atomic_impl.329" = type { %"struct.std::__1::__cxx_atomic_base_impl.330" }
%"struct.std::__1::__cxx_atomic_base_impl.330" = type { i8 }
%"class.blink::WeakMember.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::Performance"* }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::BackgroundTracingHelper"* }
%"class.blink::BackgroundTracingHelper" = type opaque
%"class.v8::Number" = type { i8 }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.338" }
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, %union.anon.342 }
%union.anon.342 = type { i64 }
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::JSEventHandler" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.344", i32, [4 x i8] }>
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.348", %"class.blink::Member.348" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ScriptState"* }
%"class.v8::Value" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.357" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.357" = type { %"class.v8::TracedReference.358" }
%"class.v8::TracedReference.358" = type { %"class.v8::BasicTracedReference.359" }
%"class.v8::BasicTracedReference.359" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.352", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.352" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.353" }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { i8* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::HeapVector.362" = type { %"class.WTF::Vector.365" }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.blink::Member.368"*, i32, i32 }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PerformanceMarkOptions" = type { %"class.blink::IDLDictionaryBase", i8, %"class.blink::ScriptValue", double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.357", %class.scoped_refptr.384 }
%class.scoped_refptr.384 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::PerformanceMark" = type { %"class.blink::PerformanceEntry.base", %class.scoped_refptr.385, %"class.blink::HeapHashMap.452", %"class.base::TimeTicks" }
%"class.blink::PerformanceEntry.base" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32 }>
%class.scoped_refptr.385 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.387", i64, %"class.WTF::Vector.391", %"class.WTF::Vector.396", %"class.WTF::Vector.402", %"class.WTF::Vector.420", %class.scoped_refptr.208, %"class.WTF::HashMap.426", %"class.WTF::Vector.431", %"class.WTF::Vector.391", %"class.WTF::Vector.436", %"class.WTF::HashMap.441", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.386" }
%"class.base::RefCountedThreadSafe.386" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { i8* }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398", [8 x i8] }
%"class.WTF::VectorBufferBase.398" = type { %class.scoped_refptr.399*, i32, i32 }
%class.scoped_refptr.399 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.412" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.423", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.423" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.374 }
%union.anon.374 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::HashMap.426" = type { %"class.WTF::HashTable.427" }
%"class.WTF::HashTable.427" = type <{ %"struct.WTF::KeyValuePair.430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.430" = type opaque
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393", [16 x i8] }
%"class.WTF::VectorBufferBase.393" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.436" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438" }
%"class.WTF::VectorBufferBase.438" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"struct.WTF::KeyValuePair.445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.445" = type { i8**, %"class.std::__1::unique_ptr.446" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashMap.452" = type { %"class.WTF::HashMap.455" }
%"class.WTF::HashMap.455" = type { %"class.WTF::HashTable.456" }
%"class.WTF::HashTable.456" = type <{ %"struct.WTF::KeyValuePair.458"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.458" = type opaque
%"class.blink::PerformanceMeasureOptions" = type { %"class.blink::IDLDictionaryBase", i8, %"class.blink::ScriptValue", double, %"class.blink::StringOrDouble", %"class.blink::StringOrDouble" }
%"class.blink::StringOrDouble" = type { i32, double, %"class.WTF::String" }
%"class.blink::V8UnionPerformanceMeasureOptionsOrString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.476", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::PerformanceMeasureOptions"* }
%"class.blink::PerformanceMeasure" = type { %"class.blink::PerformanceEntry.base", %class.scoped_refptr.385, %"class.blink::HeapHashMap.452" }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::Private" = type { i8 }
%"class.blink::EventCounts" = type { %"class.blink::ScriptWrappable", %"class.blink::Maplike", %"class.WTF::HashMap.480" }
%"class.blink::Maplike" = type { %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::HashMap.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"struct.WTF::KeyValuePair.484"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.484" = type opaque
%"class.blink::PerformanceTiming" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", i8, [7 x i8] }>
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.485" }
%"class.blink::WeakMember.485" = type { %"class.blink::MemberBase.231" }
%"class.blink::PerformanceNavigation" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::MemoryInfo" = type { %"class.blink::ScriptWrappable", %"struct.blink::HeapInfo" }
%"struct.blink::HeapInfo" = type { i64, i64, i64 }
%"class.blink::ExceptionToRejectPromiseScope" = type { %"class.v8::FunctionCallbackInfo"*, %"class.blink::ExceptionState"* }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.348", %"class.blink::ScriptValue" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.504", %"class.WTF::HashMap.504", %"class.WTF::HashMap.509", %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.561", %"class.blink::Persistent.186", i8, i8, i8, %"class.WTF::Vector.575", %"class.std::__1::unique_ptr.582", %"class.blink::Persistent.588", %"class.blink::Persistent.592", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.486", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.498", i32, i32 }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"struct.WTF::KeyValuePair.508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.508" = type opaque
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type opaque
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.522", %class.scoped_refptr.211 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.517", i8* }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.522" = type { %"class.v8::PersistentValueMapBase.523" }
%"class.v8::PersistentValueMapBase.523" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.524", i8* }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.528"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.528" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.529", %"class.WTF::String", %"class.std::__1::unique_ptr.531" }
%"class.WTF::RefCounted.529" = type { %"class.base::RefCounted.530" }
%"class.base::RefCounted.530" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.545", %"class.WTF::Vector.551", i8, i32 }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.WTF::Vector.537"* }
%"class.WTF::Vector.537" = type { %"class.WTF::VectorBuffer.538" }
%"class.WTF::VectorBuffer.538" = type { %"class.WTF::VectorBufferBase.539" }
%"class.WTF::VectorBufferBase.539" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.551" = type { %"class.WTF::VectorBuffer.552" }
%"class.WTF::VectorBuffer.552" = type { %"class.WTF::VectorBufferBase.539", [32 x i8] }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.564", %"class.WTF::HashMap.567" }
%"class.blink::ScopedPersistent.564" = type { %"class.v8::Persistent.565" }
%"class.v8::Persistent.565" = type { %"class.v8::PersistentBase.566" }
%"class.v8::PersistentBase.566" = type { %"class.v8::Private"* }
%"class.WTF::HashMap.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"struct.WTF::KeyValuePair.571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.571" = type opaque
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.578 }
%class.scoped_refptr.578 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.579", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.579" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.588" = type { %"class.blink::PersistentBase.589" }
%"class.blink::PersistentBase.589" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.592" = type { %"class.blink::PersistentBase.593" }
%"class.blink::PersistentBase.593" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.596", i64 }
%"class.blink::HeapVector.596" = type { %"class.WTF::Vector.599" }
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { %"struct.std::__1::pair.602"*, i32, i32 }
%"struct.std::__1::pair.602" = type { %"class.blink::UntracedMember", %"class.blink::Member.604" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::ProfilerInitOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i32, double }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Array" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN5blink29ExceptionToRejectPromiseScopeD2Ev = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [12 x i8] c"Performance\00", align 1
@_ZN5blink13V8EventTarget18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink13V8Performance18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink13V8Performance24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8EventTarget18wrapper_type_info_E, i8 8 }, align 8
@_ZN5blink11Performance18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8Performance18wrapper_type_info_E, align 8
@_ZZN5blink13V8Performance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance30TimeOriginAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance46OnresourcetimingbufferfullAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance46OnresourcetimingbufferfullAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [11 x i8] c"timeOrigin\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"onresourcetimingbufferfull\00", align 1
@_ZZN5blink13V8Performance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [11 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance27ClearMarksOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance30ClearMeasuresOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance37ClearResourceTimingsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance27GetEntriesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance33GetEntriesByNameOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance33GetEntriesByTypeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance21MarkOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance24MeasureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance20NowOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 2 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance44SetResourceTimingBufferSizeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance23ToJSONOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.3 = private unnamed_addr constant [11 x i8] c"clearMarks\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"clearMeasures\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"clearResourceTimings\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"getEntries\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"getEntriesByName\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"getEntriesByType\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"mark\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"measure\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"setResourceTimingBufferSize\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"toJSON\00", align 1
@_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance31EventCountsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.14 = private unnamed_addr constant [12 x i8] c"eventCounts\00", align 1
@_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable_0 = internal constant [3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance26TimingAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance30NavigationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance26MemoryAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.15 = private unnamed_addr constant [7 x i8] c"timing\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"navigation\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kOperationTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance47MeasureUserAgentSpecificMemoryOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 -24, i8 0 }], align 16
@.str.18 = private unnamed_addr constant [31 x i8] c"measureUserAgentSpecificMemory\00", align 1
@_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kOperationTable_0 = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_114v8_performance24ProfileOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 -24, i8 0 }], align 16
@.str.19 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@_ZN5blink16event_type_names25kResourcetimingbufferfullE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.20 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/bindings/core/v8/to_v8_traits.h\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"script_wrappable\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink40V8UnionPerformanceMeasureOptionsOrStringE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.25 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase24is_event_timing_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blink12_GLOBAL__N_114v8_performance31EventCountsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEEE30kPrivatePropertySaveSameObject = internal constant %"class.blink::V8PrivateProperty::SymbolKey" zeroinitializer, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_measure_memory_enabled_E = external local_unnamed_addr global i8, align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"Illegal invocation\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8Performance24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #7
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #7
  %9 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8EventTarget18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #7
  %10 = bitcast %"class.v8::Template"* %9 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8Performance18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* %10) #7
  %11 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %12 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %13 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #7
  %16 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 2, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink13V8Performance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #7
  %18 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 11, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([11 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8Performance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %19, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64) #0 align 2 {
  %8 = alloca %"class.base::span", align 8
  %9 = alloca %"class.base::span", align 8
  %10 = alloca %"class.base::span.181", align 8
  %11 = alloca %"class.base::span.181", align 8
  %12 = trunc i64 %6 to i8
  %13 = lshr i64 %6, 32
  %14 = trunc i64 %13 to i32
  %15 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0)
  %16 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %15) #7
  %17 = bitcast %"class.blink::ExecutionContext"* %16 to i1 (%"class.blink::ExecutionContext"*)***
  %18 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %18, i64 1
  %20 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ExecutionContext"* %16) #7
  %22 = icmp ne i8 %12, 0
  %23 = and i1 %22, %21
  %24 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase24is_event_timing_enabled_E, align 1
  %25 = icmp ne i8 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %7
  %28 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #7
  %29 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %30 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %28, %"class.v8::FunctionTemplate"* %29) #7
  %31 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  store i64 1, i64* %31, align 8
  %32 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %32, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %28, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %30, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %8) #7
  br label %33

33:                                               ; preds = %27, %7
  %34 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %34, i64 1
  %36 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::ExecutionContext"* %16) #7
  %38 = and i1 %22, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #7
  %41 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %42 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %40, %"class.v8::FunctionTemplate"* %41) #7
  %43 = getelementptr inbounds %"class.base::span", %"class.base::span"* %9, i64 0, i32 0, i32 0
  store i64 3, i64* %43, align 8
  %44 = getelementptr inbounds %"class.base::span", %"class.base::span"* %9, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable_0 to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %44, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %40, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %42, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %9) #7
  br label %45

45:                                               ; preds = %39, %33
  %46 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %46, i64 42
  %48 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::ExecutionContext"* %16) #7
  br i1 %49, label %50, label %76

50:                                               ; preds = %45
  %51 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %51, i64 1
  %53 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::ExecutionContext"* %16) #7
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %56, i64 8
  %58 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::ExecutionContext"* %16) #7
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %61, i64 7
  %63 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::ExecutionContext"* %16) #7
  br i1 %64, label %65, label %76

65:                                               ; preds = %60, %55, %50
  %66 = icmp eq i8 %12, 0
  br i1 %66, label %85, label %67

67:                                               ; preds = %65
  %68 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_measure_memory_enabled_E, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %67
  %71 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #7
  %72 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %73 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %71, %"class.v8::FunctionTemplate"* %72) #7
  %74 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %10, i64 0, i32 0, i32 0
  store i64 1, i64* %74, align 8
  %75 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %10, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %75, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %71, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %73, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %10) #7
  br label %78

76:                                               ; preds = %60, %45
  %77 = icmp eq i8 %12, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %67, %76, %70
  %79 = icmp eq %"class.blink::ExecutionContext"* %16, null
  %80 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %16, i64 0, i32 4
  %81 = select i1 %79, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %80
  %82 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase29ExperimentalJSProfilerEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %81) #7
  %83 = icmp eq i32 %14, 21
  %84 = or i1 %83, %82
  br i1 %84, label %87, label %93

85:                                               ; preds = %65, %76
  %86 = icmp eq i32 %14, 21
  br i1 %86, label %87, label %93

87:                                               ; preds = %85, %78
  %88 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #7
  %89 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %90 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %88, %"class.v8::FunctionTemplate"* %89) #7
  %91 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %11, i64 0, i32 0, i32 0
  store i64 1, i64* %91, align 8
  %92 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %11, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8Performance33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kOperationTable_0 to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %92, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %88, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %90, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %11) #7
  br label %93

93:                                               ; preds = %78, %87, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8Performance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #7
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink13V8Performance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #7
  %12 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([11 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8Performance30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #7
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance30TimeOriginAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Performance"*
  %25 = tail call double @_ZNK5blink11Performance10timeOriginEv(%"class.blink::Performance"* %24) #7
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %31, double %25) #7
  %33 = icmp eq %"class.v8::Number"* %32, null
  %34 = bitcast %"class.v8::Number"* %32 to i64*
  %35 = getelementptr inbounds i64, i64* %27, i64 2
  %36 = select i1 %33, i64* %35, i64* %34, !prof !3
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance46OnresourcetimingbufferfullAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::EventTarget"*
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names25kResourcetimingbufferfullE, align 8
  %26 = tail call %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %25) #7
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %28, i64 3
  %32 = icmp eq %"class.blink::EventListener"* %26, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %22
  %34 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::EventListener"*)***
  %35 = load i1 (%"class.blink::EventListener"*)**, i1 (%"class.blink::EventListener"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %35, i64 10
  %37 = load i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::EventListener"* nonnull %26) #7
  br i1 %38, label %39, label %53

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSBasedEventListener"*
  %41 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::JSBasedEventListener"*)***
  %42 = load i1 (%"class.blink::JSBasedEventListener"*)**, i1 (%"class.blink::JSBasedEventListener"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %42, i64 16
  %44 = load i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::JSBasedEventListener"* nonnull %40) #7
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSEventHandler"*
  %48 = bitcast %"class.blink::EventListener"* %26 to %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)***
  %49 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %49, i64 12
  %51 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %50, align 8
  %52 = tail call %"class.v8::Value"* %51(%"class.blink::JSEventHandler"* nonnull %47, %"class.blink::EventTarget"* dereferenceable(16) %24) #7
  br label %56

53:                                               ; preds = %39, %33, %22
  %54 = add i64 %30, 176
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi %"class.v8::Value"* [ %55, %53 ], [ %52, %46 ]
  %58 = icmp eq %"class.v8::Value"* %57, null
  %59 = bitcast %"class.v8::Value"* %57 to i64*
  %60 = getelementptr inbounds i64, i64* %28, i64 2
  %61 = select i1 %58, i64* %60, i64* %59, !prof !3
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance46OnresourcetimingbufferfullAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 160
  %11 = inttoptr i64 %10 to %"class.v8::Value"*
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %14 = bitcast i64** %13 to %"class.v8::Value"**
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %14, align 8
  br label %16

16:                                               ; preds = %5, %12
  %17 = phi %"class.v8::Value"* [ %11, %5 ], [ %15, %12 ]
  %18 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %17, i32 0) #7
  %19 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %16, %16, %16
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %16
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #7
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::EventTarget"*
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names25kResourcetimingbufferfullE, align 8
  %44 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %42, %"class.WTF::AtomicString"* dereferenceable(8) %43, %"class.blink::EventListener"* %19) #7
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance27ClearMarksOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %10) #7
  %12 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %11) #7
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  %14 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 3
  %15 = icmp eq %"class.blink::UseCounter"* %14, null
  %16 = or i1 %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.blink::UseCounter"* %14 to void (%"class.blink::UseCounter"*, i32)***
  %19 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, i64 3
  %21 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %20, align 8
  tail call void %21(%"class.blink::UseCounter"* nonnull %14, i32 2430) #7
  br label %22

22:                                               ; preds = %1, %17
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = sext i32 %24 to i64
  br label %27

27:                                               ; preds = %60, %22
  %28 = phi i64 [ %29, %60 ], [ %26, %22 ]
  %29 = add nsw i64 %28, -1
  %30 = icmp sgt i64 %28, 0
  br i1 %30, label %31, label %72

31:                                               ; preds = %27
  %32 = icmp sgt i64 %28, %26
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = load i64*, i64** %6, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 160
  %38 = inttoptr i64 %37 to %"class.v8::Value"*
  br label %43

39:                                               ; preds = %31
  %40 = load i64*, i64** %25, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 %29
  %42 = bitcast i64* %41 to %"class.v8::Value"*
  br label %43

43:                                               ; preds = %39, %33
  %44 = phi %"class.v8::Value"* [ %38, %33 ], [ %42, %39 ]
  %45 = bitcast %"class.v8::Value"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 1
  br i1 %48, label %49, label %68

49:                                               ; preds = %43
  %50 = add i64 %46, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %46, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 67
  br i1 %59, label %60, label %66

60:                                               ; preds = %49
  %61 = add i64 %46, 23
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, -2
  %65 = icmp eq i32 %64, 10
  br i1 %65, label %27, label %70

66:                                               ; preds = %49
  %67 = trunc i64 %28 to i32
  br label %72

68:                                               ; preds = %43
  %69 = trunc i64 %28 to i32
  br label %72

70:                                               ; preds = %60
  %71 = trunc i64 %28 to i32
  br label %72

72:                                               ; preds = %27, %66, %68, %70
  %73 = phi i32 [ %67, %66 ], [ %69, %68 ], [ %71, %70 ], [ 0, %27 ]
  %74 = load i64*, i64** %25, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 -1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i64 %76, -4294967296
  %81 = zext i32 %79 to i64
  %82 = or i64 %80, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load i16, i16* %84, align 2
  switch i16 %85, label %90 [
    i16 1057, label %86
    i16 1056, label %86
    i16 1040, label %86
  ]

86:                                               ; preds = %72, %72, %72
  %87 = add i64 %76, 19
  %88 = inttoptr i64 %87 to i8**
  %89 = load i8*, i8** %88, align 1
  br label %93

90:                                               ; preds = %72
  %91 = bitcast i64* %75 to %"class.v8::Object"*
  %92 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %91, i32 1) #7
  br label %93

93:                                               ; preds = %86, %90
  %94 = phi i8* [ %89, %86 ], [ %92, %90 ]
  %95 = bitcast i8* %94 to %"class.blink::Performance"*
  %96 = icmp slt i32 %73, 1
  br i1 %96, label %97, label %116

97:                                               ; preds = %93
  %98 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  call void @_ZN5blink11Performance10clearMarksERKN3WTF12AtomicStringE(%"class.blink::Performance"* %95, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #7
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #7
  br label %115

115:                                              ; preds = %97, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #7
  br label %298

116:                                              ; preds = %93
  %117 = load i32, i32* %23, align 8
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = load i64*, i64** %6, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, 160
  %124 = inttoptr i64 %123 to %"class.v8::Value"*
  br label %128

125:                                              ; preds = %116
  %126 = bitcast i64** %25 to %"class.v8::Value"**
  %127 = load %"class.v8::Value"*, %"class.v8::Value"** %126, align 8
  br label %128

128:                                              ; preds = %119, %125
  %129 = phi %"class.v8::Value"* [ %124, %119 ], [ %127, %125 ]
  %130 = bitcast %"class.v8::Value"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 3
  %133 = icmp eq i64 %132, 1
  br i1 %133, label %134, label %158, !prof !4

134:                                              ; preds = %128
  %135 = add i64 %131, -1
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = and i64 %131, -4294967296
  %139 = zext i32 %137 to i64
  %140 = or i64 %138, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i16*
  %143 = load i16, i16* %142, align 2
  %144 = icmp ult i16 %143, 64
  br i1 %144, label %145, label %158, !prof !5

145:                                              ; preds = %134
  br i1 %118, label %152, label %146

146:                                              ; preds = %145
  %147 = load i64*, i64** %6, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %155

152:                                              ; preds = %145
  %153 = bitcast i64** %25 to %"class.v8::Value"**
  %154 = load %"class.v8::Value"*, %"class.v8::Value"** %153, align 8
  br label %155

155:                                              ; preds = %146, %152
  %156 = phi %"class.v8::Value"* [ %151, %146 ], [ %154, %152 ]
  %157 = ptrtoint %"class.v8::Value"* %156 to i64
  br label %222

158:                                              ; preds = %128, %134
  %159 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %159) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 56, i1 false)
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %162, align 2
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %164 = bitcast i8** %163 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %169 = bitcast %"class.WTF::StringImpl"** %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 16, i1 false) #7
  %170 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %170) #7
  br i1 %118, label %177, label %171

171:                                              ; preds = %158
  %172 = load i64*, i64** %6, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 1
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, 160
  %176 = inttoptr i64 %175 to %"class.v8::Value"*
  br label %180

177:                                              ; preds = %158
  %178 = bitcast i64** %25 to %"class.v8::Value"**
  %179 = load %"class.v8::Value"*, %"class.v8::Value"** %178, align 8
  br label %180

180:                                              ; preds = %171, %177
  %181 = phi %"class.v8::Value"* [ %176, %171 ], [ %179, %177 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %181, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #7
  %182 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %184, i64 0, i32 0, i32 0
  %186 = bitcast %"class.WTF::String"* %184 to i64*
  %187 = load i64, i64* %186, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %185, align 8
  %188 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1
  %189 = bitcast %"class.std::__1::unique_ptr.353"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %170) #7
  %191 = load i32, i32* %167, align 8
  %192 = icmp eq i32 %191, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %193 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %194 = load i64*, i64** %193, align 8
  %195 = icmp eq i64* %194, null
  br i1 %195, label %205, label %196

196:                                              ; preds = %180
  %197 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %166, align 8
  %198 = bitcast %"class.v8::Isolate"* %197 to %"class.v8::internal::Isolate"*
  %199 = load i64, i64* %194, align 8
  %200 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %198, i64 %199) #7
  %201 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %197) #7
  br i1 %201, label %205, label %202

202:                                              ; preds = %196
  %203 = bitcast i64* %200 to %"class.v8::Value"*
  %204 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %197, %"class.v8::Value"* %203) #7
  br label %205

205:                                              ; preds = %202, %196, %180
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %221, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  br i1 %212, label %215, label %217

215:                                              ; preds = %208
  %216 = add i32 %214, -1
  store i32 %216, i32* %213, align 4
  br label %217

217:                                              ; preds = %215, %208
  %218 = phi i32 [ %216, %215 ], [ %214, %208 ]
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %217
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %206) #7
  br label %221

221:                                              ; preds = %205, %217, %220
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %159) #7
  br i1 %192, label %222, label %276

222:                                              ; preds = %221, %155
  %223 = phi i64 [ 0, %155 ], [ %190, %221 ]
  %224 = phi i64 [ 0, %155 ], [ %187, %221 ]
  %225 = phi i64 [ %157, %155 ], [ %183, %221 ]
  %226 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #7
  %227 = icmp eq i64 %225, 0
  br i1 %227, label %231, label %228, !prof !3

228:                                              ; preds = %222
  %229 = inttoptr i64 %225 to %"class.v8::String"*
  %230 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %229, i32 0) #7
  br label %257

231:                                              ; preds = %222
  %232 = inttoptr i64 %224 to %"class.WTF::StringImpl"*
  %233 = icmp eq i64 %224, 0
  br i1 %233, label %257, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 acquire, align 4
  %237 = and i32 %236, 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %255, label %239

239:                                              ; preds = %234
  %240 = load atomic i32, i32* %235 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %257

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i33
  %247 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %246, i33 1) #7
  %248 = extractvalue { i33, i1 } %247, 1
  %249 = extractvalue { i33, i1 } %247, 0
  %250 = icmp slt i33 %249, 0
  %251 = or i1 %248, %250
  br i1 %251, label %252, label %253, !prof !3

252:                                              ; preds = %243
  call void @llvm.trap() #7
  unreachable

253:                                              ; preds = %243
  %254 = trunc i33 %249 to i32
  store i32 %254, i32* %244, align 4
  br label %257

255:                                              ; preds = %234
  %256 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %232) #7
  br label %257

257:                                              ; preds = %228, %231, %239, %253, %255
  %258 = phi %"class.WTF::StringImpl"* [ %230, %228 ], [ %256, %255 ], [ %232, %239 ], [ %232, %253 ], [ null, %231 ]
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %259, align 8
  call void @_ZN5blink11Performance10clearMarksERKN3WTF12AtomicStringE(%"class.blink::Performance"* %95, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #7
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #7
  br label %275

275:                                              ; preds = %257, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #7
  br label %276

276:                                              ; preds = %221, %275
  %277 = phi i64 [ %223, %275 ], [ %190, %221 ]
  %278 = phi i64 [ %224, %275 ], [ %187, %221 ]
  %279 = icmp eq i64 %277, 0
  br i1 %279, label %282, label %280

280:                                              ; preds = %276
  %281 = inttoptr i64 %277 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %281) #7
  br label %282

282:                                              ; preds = %280, %276
  %283 = inttoptr i64 %278 to %"class.WTF::StringImpl"*
  %284 = icmp eq i64 %278, 0
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #7
  br label %298

298:                                              ; preds = %297, %294, %282, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance30ClearMeasuresOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %10) #7
  %12 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %11) #7
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  %14 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 3
  %15 = icmp eq %"class.blink::UseCounter"* %14, null
  %16 = or i1 %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.blink::UseCounter"* %14 to void (%"class.blink::UseCounter"*, i32)***
  %19 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, i64 3
  %21 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %20, align 8
  tail call void %21(%"class.blink::UseCounter"* nonnull %14, i32 2430) #7
  br label %22

22:                                               ; preds = %1, %17
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = sext i32 %24 to i64
  br label %27

27:                                               ; preds = %60, %22
  %28 = phi i64 [ %29, %60 ], [ %26, %22 ]
  %29 = add nsw i64 %28, -1
  %30 = icmp sgt i64 %28, 0
  br i1 %30, label %31, label %72

31:                                               ; preds = %27
  %32 = icmp sgt i64 %28, %26
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = load i64*, i64** %6, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 160
  %38 = inttoptr i64 %37 to %"class.v8::Value"*
  br label %43

39:                                               ; preds = %31
  %40 = load i64*, i64** %25, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 %29
  %42 = bitcast i64* %41 to %"class.v8::Value"*
  br label %43

43:                                               ; preds = %39, %33
  %44 = phi %"class.v8::Value"* [ %38, %33 ], [ %42, %39 ]
  %45 = bitcast %"class.v8::Value"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 1
  br i1 %48, label %49, label %68

49:                                               ; preds = %43
  %50 = add i64 %46, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %46, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 67
  br i1 %59, label %60, label %66

60:                                               ; preds = %49
  %61 = add i64 %46, 23
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, -2
  %65 = icmp eq i32 %64, 10
  br i1 %65, label %27, label %70

66:                                               ; preds = %49
  %67 = trunc i64 %28 to i32
  br label %72

68:                                               ; preds = %43
  %69 = trunc i64 %28 to i32
  br label %72

70:                                               ; preds = %60
  %71 = trunc i64 %28 to i32
  br label %72

72:                                               ; preds = %27, %66, %68, %70
  %73 = phi i32 [ %67, %66 ], [ %69, %68 ], [ %71, %70 ], [ 0, %27 ]
  %74 = load i64*, i64** %25, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 -1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i64 %76, -4294967296
  %81 = zext i32 %79 to i64
  %82 = or i64 %80, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load i16, i16* %84, align 2
  switch i16 %85, label %90 [
    i16 1057, label %86
    i16 1056, label %86
    i16 1040, label %86
  ]

86:                                               ; preds = %72, %72, %72
  %87 = add i64 %76, 19
  %88 = inttoptr i64 %87 to i8**
  %89 = load i8*, i8** %88, align 1
  br label %93

90:                                               ; preds = %72
  %91 = bitcast i64* %75 to %"class.v8::Object"*
  %92 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %91, i32 1) #7
  br label %93

93:                                               ; preds = %86, %90
  %94 = phi i8* [ %89, %86 ], [ %92, %90 ]
  %95 = bitcast i8* %94 to %"class.blink::Performance"*
  %96 = icmp slt i32 %73, 1
  br i1 %96, label %97, label %116

97:                                               ; preds = %93
  %98 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  call void @_ZN5blink11Performance13clearMeasuresERKN3WTF12AtomicStringE(%"class.blink::Performance"* %95, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #7
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #7
  br label %115

115:                                              ; preds = %97, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #7
  br label %298

116:                                              ; preds = %93
  %117 = load i32, i32* %23, align 8
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = load i64*, i64** %6, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, 160
  %124 = inttoptr i64 %123 to %"class.v8::Value"*
  br label %128

125:                                              ; preds = %116
  %126 = bitcast i64** %25 to %"class.v8::Value"**
  %127 = load %"class.v8::Value"*, %"class.v8::Value"** %126, align 8
  br label %128

128:                                              ; preds = %119, %125
  %129 = phi %"class.v8::Value"* [ %124, %119 ], [ %127, %125 ]
  %130 = bitcast %"class.v8::Value"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 3
  %133 = icmp eq i64 %132, 1
  br i1 %133, label %134, label %158, !prof !4

134:                                              ; preds = %128
  %135 = add i64 %131, -1
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = and i64 %131, -4294967296
  %139 = zext i32 %137 to i64
  %140 = or i64 %138, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i16*
  %143 = load i16, i16* %142, align 2
  %144 = icmp ult i16 %143, 64
  br i1 %144, label %145, label %158, !prof !5

145:                                              ; preds = %134
  br i1 %118, label %152, label %146

146:                                              ; preds = %145
  %147 = load i64*, i64** %6, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %155

152:                                              ; preds = %145
  %153 = bitcast i64** %25 to %"class.v8::Value"**
  %154 = load %"class.v8::Value"*, %"class.v8::Value"** %153, align 8
  br label %155

155:                                              ; preds = %146, %152
  %156 = phi %"class.v8::Value"* [ %151, %146 ], [ %154, %152 ]
  %157 = ptrtoint %"class.v8::Value"* %156 to i64
  br label %222

158:                                              ; preds = %128, %134
  %159 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %159) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 56, i1 false)
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %162, align 2
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %164 = bitcast i8** %163 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %169 = bitcast %"class.WTF::StringImpl"** %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 16, i1 false) #7
  %170 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %170) #7
  br i1 %118, label %177, label %171

171:                                              ; preds = %158
  %172 = load i64*, i64** %6, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 1
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, 160
  %176 = inttoptr i64 %175 to %"class.v8::Value"*
  br label %180

177:                                              ; preds = %158
  %178 = bitcast i64** %25 to %"class.v8::Value"**
  %179 = load %"class.v8::Value"*, %"class.v8::Value"** %178, align 8
  br label %180

180:                                              ; preds = %171, %177
  %181 = phi %"class.v8::Value"* [ %176, %171 ], [ %179, %177 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %181, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #7
  %182 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %184, i64 0, i32 0, i32 0
  %186 = bitcast %"class.WTF::String"* %184 to i64*
  %187 = load i64, i64* %186, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %185, align 8
  %188 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1
  %189 = bitcast %"class.std::__1::unique_ptr.353"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %170) #7
  %191 = load i32, i32* %167, align 8
  %192 = icmp eq i32 %191, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %193 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %194 = load i64*, i64** %193, align 8
  %195 = icmp eq i64* %194, null
  br i1 %195, label %205, label %196

196:                                              ; preds = %180
  %197 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %166, align 8
  %198 = bitcast %"class.v8::Isolate"* %197 to %"class.v8::internal::Isolate"*
  %199 = load i64, i64* %194, align 8
  %200 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %198, i64 %199) #7
  %201 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %197) #7
  br i1 %201, label %205, label %202

202:                                              ; preds = %196
  %203 = bitcast i64* %200 to %"class.v8::Value"*
  %204 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %197, %"class.v8::Value"* %203) #7
  br label %205

205:                                              ; preds = %202, %196, %180
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %221, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  br i1 %212, label %215, label %217

215:                                              ; preds = %208
  %216 = add i32 %214, -1
  store i32 %216, i32* %213, align 4
  br label %217

217:                                              ; preds = %215, %208
  %218 = phi i32 [ %216, %215 ], [ %214, %208 ]
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %217
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %206) #7
  br label %221

221:                                              ; preds = %205, %217, %220
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %159) #7
  br i1 %192, label %222, label %276

222:                                              ; preds = %221, %155
  %223 = phi i64 [ 0, %155 ], [ %190, %221 ]
  %224 = phi i64 [ 0, %155 ], [ %187, %221 ]
  %225 = phi i64 [ %157, %155 ], [ %183, %221 ]
  %226 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #7
  %227 = icmp eq i64 %225, 0
  br i1 %227, label %231, label %228, !prof !3

228:                                              ; preds = %222
  %229 = inttoptr i64 %225 to %"class.v8::String"*
  %230 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %229, i32 0) #7
  br label %257

231:                                              ; preds = %222
  %232 = inttoptr i64 %224 to %"class.WTF::StringImpl"*
  %233 = icmp eq i64 %224, 0
  br i1 %233, label %257, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 acquire, align 4
  %237 = and i32 %236, 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %255, label %239

239:                                              ; preds = %234
  %240 = load atomic i32, i32* %235 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %257

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i33
  %247 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %246, i33 1) #7
  %248 = extractvalue { i33, i1 } %247, 1
  %249 = extractvalue { i33, i1 } %247, 0
  %250 = icmp slt i33 %249, 0
  %251 = or i1 %248, %250
  br i1 %251, label %252, label %253, !prof !3

252:                                              ; preds = %243
  call void @llvm.trap() #7
  unreachable

253:                                              ; preds = %243
  %254 = trunc i33 %249 to i32
  store i32 %254, i32* %244, align 4
  br label %257

255:                                              ; preds = %234
  %256 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %232) #7
  br label %257

257:                                              ; preds = %228, %231, %239, %253, %255
  %258 = phi %"class.WTF::StringImpl"* [ %230, %228 ], [ %256, %255 ], [ %232, %239 ], [ %232, %253 ], [ null, %231 ]
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %259, align 8
  call void @_ZN5blink11Performance13clearMeasuresERKN3WTF12AtomicStringE(%"class.blink::Performance"* %95, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #7
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #7
  br label %275

275:                                              ; preds = %257, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #7
  br label %276

276:                                              ; preds = %221, %275
  %277 = phi i64 [ %223, %275 ], [ %190, %221 ]
  %278 = phi i64 [ %224, %275 ], [ %187, %221 ]
  %279 = icmp eq i64 %277, 0
  br i1 %279, label %282, label %280

280:                                              ; preds = %276
  %281 = inttoptr i64 %277 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %281) #7
  br label %282

282:                                              ; preds = %280, %276
  %283 = inttoptr i64 %278 to %"class.WTF::StringImpl"*
  %284 = icmp eq i64 %278, 0
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #7
  br label %298

298:                                              ; preds = %297, %294, %282, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance37ClearResourceTimingsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Performance"*
  tail call void @_ZN5blink11Performance20clearResourceTimingsEv(%"class.blink::Performance"* %24) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance27GetEntriesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::HeapVector.291", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #7
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #7
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 2429) #7
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  %24 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %23) #7
  %25 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %24)
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i64 %26, -4294967296
  %31 = zext i32 %29 to i64
  %32 = or i64 %30, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load i16, i16* %34, align 2
  switch i16 %35, label %40 [
    i16 1057, label %36
    i16 1056, label %36
    i16 1040, label %36
  ]

36:                                               ; preds = %19, %19, %19
  %37 = add i64 %26, 19
  %38 = inttoptr i64 %37 to i8**
  %39 = load i8*, i8** %38, align 1
  br label %42

40:                                               ; preds = %19
  %41 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #7
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi i8* [ %39, %36 ], [ %41, %40 ]
  %44 = bitcast i8* %43 to %"class.blink::Performance"*
  %45 = bitcast %"class.blink::HeapVector.291"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #7
  call void @_ZN5blink11Performance10getEntriesEv(%"class.blink::HeapVector.291"* nonnull sret %2, %"class.blink::Performance"* %44) #7
  %46 = bitcast %"class.blink::HeapVector.291"* %2 to %"class.blink::HeapVector.362"*
  %47 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %25, %"class.blink::HeapVector.362"* nonnull dereferenceable(16) %46) #7
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %42
  %50 = load i64*, i64** %3, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 3
  %52 = bitcast %"class.v8::Value"* %47 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %51, align 8
  br label %54

54:                                               ; preds = %42, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance33GetEntriesByNameOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::HeapVector.291", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %7 = alloca %"class.blink::HeapVector.291", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %11 = alloca %"class.blink::HeapVector.291", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 1
  %17 = bitcast i64* %16 to %"class.v8::Isolate"**
  %18 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %19 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %18) #7
  %20 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %19) #7
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 0, i32 3
  %23 = icmp eq %"class.blink::UseCounter"* %22, null
  %24 = or i1 %21, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %1
  %26 = bitcast %"class.blink::UseCounter"* %22 to void (%"class.blink::UseCounter"*, i32)***
  %27 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %27, i64 3
  %29 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %28, align 8
  tail call void %29(%"class.blink::UseCounter"* nonnull %22, i32 2429) #7
  br label %30

30:                                               ; preds = %1, %25
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %34, label %94, !prof !3

34:                                               ; preds = %30
  %35 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false)
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %18, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #7
  %46 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  %47 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %32) #7
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #7
  br label %64

64:                                               ; preds = %34, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %70 = bitcast %"class.v8::Isolate"* %69 to %"class.v8::internal::Isolate"*
  %71 = load i64, i64* %66, align 8
  %72 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %70, i64 %71) #7
  %73 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %69) #7
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = bitcast i64* %72 to %"class.v8::Value"*
  %76 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %69, %"class.v8::Value"* %75) #7
  br label %77

77:                                               ; preds = %74, %68, %64
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #7
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #7
  br label %653

94:                                               ; preds = %30
  %95 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 -1
  %98 = bitcast i64* %97 to %"class.v8::Object"*
  %99 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %98) #7
  %100 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %99)
  %101 = bitcast %"class.blink::HeapVector.291"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #7
  %102 = getelementptr inbounds %"class.blink::HeapVector.291", %"class.blink::HeapVector.291"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.blink::HeapVector.291", %"class.blink::HeapVector.291"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 16, i1 false) #7
  %104 = load i32, i32* %31, align 8
  %105 = sext i32 %104 to i64
  br label %106

106:                                              ; preds = %139, %94
  %107 = phi i64 [ %108, %139 ], [ %105, %94 ]
  %108 = add nsw i64 %107, -1
  %109 = icmp sgt i64 %107, 0
  br i1 %109, label %110, label %151

110:                                              ; preds = %106
  %111 = icmp sgt i64 %107, %105
  br i1 %111, label %112, label %118

112:                                              ; preds = %110
  %113 = load i64*, i64** %14, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 1
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 160
  %117 = inttoptr i64 %116 to %"class.v8::Value"*
  br label %122

118:                                              ; preds = %110
  %119 = load i64*, i64** %95, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 %108
  %121 = bitcast i64* %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %118, %112
  %123 = phi %"class.v8::Value"* [ %117, %112 ], [ %121, %118 ]
  %124 = bitcast %"class.v8::Value"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 3
  %127 = icmp eq i64 %126, 1
  br i1 %127, label %128, label %147

128:                                              ; preds = %122
  %129 = add i64 %125, -1
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = and i64 %125, -4294967296
  %133 = zext i32 %131 to i64
  %134 = or i64 %132, %133
  %135 = add i64 %134, 7
  %136 = inttoptr i64 %135 to i16*
  %137 = load i16, i16* %136, align 2
  %138 = icmp eq i16 %137, 67
  br i1 %138, label %139, label %145

139:                                              ; preds = %128
  %140 = add i64 %125, 23
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, -2
  %144 = icmp eq i32 %143, 10
  br i1 %144, label %106, label %149

145:                                              ; preds = %128
  %146 = trunc i64 %107 to i32
  br label %151

147:                                              ; preds = %122
  %148 = trunc i64 %107 to i32
  br label %151

149:                                              ; preds = %139
  %150 = trunc i64 %107 to i32
  br label %151

151:                                              ; preds = %106, %145, %147, %149
  %152 = phi i32 [ %146, %145 ], [ %148, %147 ], [ %150, %149 ], [ 0, %106 ]
  %153 = load i64, i64* %97, align 8
  %154 = add i64 %153, -1
  %155 = inttoptr i64 %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = and i64 %153, -4294967296
  %158 = zext i32 %156 to i64
  %159 = or i64 %157, %158
  %160 = add i64 %159, 7
  %161 = inttoptr i64 %160 to i16*
  %162 = load i16, i16* %161, align 2
  switch i16 %162, label %167 [
    i16 1057, label %163
    i16 1056, label %163
    i16 1040, label %163
  ]

163:                                              ; preds = %151, %151, %151
  %164 = add i64 %153, 19
  %165 = inttoptr i64 %164 to i8**
  %166 = load i8*, i8** %165, align 1
  br label %170

167:                                              ; preds = %151
  %168 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %98, i32 1) #7
  %169 = load i32, i32* %31, align 8
  br label %170

170:                                              ; preds = %163, %167
  %171 = phi i32 [ %104, %163 ], [ %169, %167 ]
  %172 = phi i8* [ %166, %163 ], [ %168, %167 ]
  %173 = bitcast i8* %172 to %"class.blink::Performance"*
  %174 = icmp sgt i32 %171, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %170
  %176 = load i64*, i64** %14, align 8
  %177 = getelementptr inbounds i64, i64* %176, i64 1
  %178 = load i64, i64* %177, align 8
  %179 = add i64 %178, 160
  %180 = inttoptr i64 %179 to %"class.v8::Value"*
  br label %184

181:                                              ; preds = %170
  %182 = bitcast i64** %95 to %"class.v8::Value"**
  %183 = load %"class.v8::Value"*, %"class.v8::Value"** %182, align 8
  br label %184

184:                                              ; preds = %175, %181
  %185 = phi %"class.v8::Value"* [ %180, %175 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::Value"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 3
  %189 = icmp eq i64 %188, 1
  br i1 %189, label %190, label %214, !prof !4

190:                                              ; preds = %184
  %191 = add i64 %187, -1
  %192 = inttoptr i64 %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = and i64 %187, -4294967296
  %195 = zext i32 %193 to i64
  %196 = or i64 %194, %195
  %197 = add i64 %196, 7
  %198 = inttoptr i64 %197 to i16*
  %199 = load i16, i16* %198, align 2
  %200 = icmp ult i16 %199, 64
  br i1 %200, label %201, label %214, !prof !5

201:                                              ; preds = %190
  br i1 %174, label %208, label %202

202:                                              ; preds = %201
  %203 = load i64*, i64** %14, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 1
  %205 = load i64, i64* %204, align 8
  %206 = add i64 %205, 160
  %207 = inttoptr i64 %206 to %"class.v8::Value"*
  br label %211

208:                                              ; preds = %201
  %209 = bitcast i64** %95 to %"class.v8::Value"**
  %210 = load %"class.v8::Value"*, %"class.v8::Value"** %209, align 8
  br label %211

211:                                              ; preds = %202, %208
  %212 = phi %"class.v8::Value"* [ %207, %202 ], [ %210, %208 ]
  %213 = ptrtoint %"class.v8::Value"* %212 to i64
  br label %278

214:                                              ; preds = %184, %190
  %215 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %215) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 -86, i64 56, i1 false)
  %216 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %216, align 8
  %217 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %217, align 8
  %218 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %218, align 2
  %219 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %220 = bitcast i8** %219 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %220, align 8
  %221 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %221, align 8
  %222 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %18, %"class.v8::Isolate"** %222, align 8
  %223 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %223, align 8
  %224 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %225 = bitcast %"class.WTF::StringImpl"** %224 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 16, i1 false) #7
  %226 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %226) #7
  br i1 %174, label %233, label %227

227:                                              ; preds = %214
  %228 = load i64*, i64** %14, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 1
  %230 = load i64, i64* %229, align 8
  %231 = add i64 %230, 160
  %232 = inttoptr i64 %231 to %"class.v8::Value"*
  br label %236

233:                                              ; preds = %214
  %234 = bitcast i64** %95 to %"class.v8::Value"**
  %235 = load %"class.v8::Value"*, %"class.v8::Value"** %234, align 8
  br label %236

236:                                              ; preds = %227, %233
  %237 = phi %"class.v8::Value"* [ %232, %227 ], [ %235, %233 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %6, %"class.v8::Isolate"* %18, %"class.v8::Value"* %237, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #7
  %238 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 1
  %241 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %240, i64 0, i32 0, i32 0
  %242 = bitcast %"class.WTF::String"* %240 to i64*
  %243 = load i64, i64* %242, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %241, align 8
  %244 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 2, i32 1
  %245 = bitcast %"class.std::__1::unique_ptr.353"* %244 to i64*
  %246 = load i64, i64* %245, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %226) #7
  %247 = load i32, i32* %223, align 8
  %248 = icmp eq i32 %247, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %216, align 8
  %249 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %250 = load i64*, i64** %249, align 8
  %251 = icmp eq i64* %250, null
  br i1 %251, label %261, label %252

252:                                              ; preds = %236
  %253 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %222, align 8
  %254 = bitcast %"class.v8::Isolate"* %253 to %"class.v8::internal::Isolate"*
  %255 = load i64, i64* %250, align 8
  %256 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %254, i64 %255) #7
  %257 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %253) #7
  br i1 %257, label %261, label %258

258:                                              ; preds = %252
  %259 = bitcast i64* %256 to %"class.v8::Value"*
  %260 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %253, %"class.v8::Value"* %259) #7
  br label %261

261:                                              ; preds = %258, %252, %236
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #7
  br label %277

277:                                              ; preds = %261, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %215) #7
  br i1 %248, label %278, label %619

278:                                              ; preds = %277, %211
  %279 = phi i64 [ 0, %211 ], [ %246, %277 ]
  %280 = phi i64 [ 0, %211 ], [ %243, %277 ]
  %281 = phi i64 [ %213, %211 ], [ %239, %277 ]
  %282 = icmp slt i32 %152, 2
  br i1 %282, label %283, label %359

283:                                              ; preds = %278
  %284 = bitcast %"class.blink::HeapVector.291"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %284) #7
  %285 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %285) #7
  %286 = icmp eq i64 %281, 0
  br i1 %286, label %290, label %287, !prof !3

287:                                              ; preds = %283
  %288 = inttoptr i64 %281 to %"class.v8::String"*
  %289 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %288, i32 0) #7
  br label %316

290:                                              ; preds = %283
  %291 = inttoptr i64 %280 to %"class.WTF::StringImpl"*
  %292 = icmp eq i64 %280, 0
  br i1 %292, label %316, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 acquire, align 4
  %296 = and i32 %295, 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %293
  %299 = load atomic i32, i32* %294 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %316

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = zext i32 %304 to i33
  %306 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %305, i33 1) #7
  %307 = extractvalue { i33, i1 } %306, 1
  %308 = extractvalue { i33, i1 } %306, 0
  %309 = icmp slt i33 %308, 0
  %310 = or i1 %307, %309
  br i1 %310, label %311, label %312, !prof !3

311:                                              ; preds = %302
  call void @llvm.trap() #7
  unreachable

312:                                              ; preds = %302
  %313 = trunc i33 %308 to i32
  store i32 %313, i32* %303, align 4
  br label %316

314:                                              ; preds = %293
  %315 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %291) #7
  br label %316

316:                                              ; preds = %287, %290, %298, %312, %314
  %317 = phi %"class.WTF::StringImpl"* [ %289, %287 ], [ %315, %314 ], [ %291, %298 ], [ %291, %312 ], [ null, %290 ]
  %318 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %317, %"class.WTF::StringImpl"** %318, align 8
  %319 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  call void @_ZN5blink11Performance16getEntriesByNameERKN3WTF12AtomicStringES4_(%"class.blink::HeapVector.291"* nonnull sret %7, %"class.blink::Performance"* %173, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, %"class.WTF::AtomicString"* dereferenceable(8) %319) #7
  %320 = bitcast %"class.blink::HeapVector.291"* %7 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.blink::HeapVector.291"* %4 to i64*
  %323 = load i64, i64* %322, align 8
  store atomic i64 %323, i64* %320 monotonic, align 8
  store atomic i64 %321, i64* %322 monotonic, align 8
  %324 = getelementptr inbounds %"class.blink::HeapVector.291", %"class.blink::HeapVector.291"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %325 = load i32, i32* %102, align 8
  %326 = load i32, i32* %324, align 8
  store i32 %326, i32* %102, align 8
  store i32 %325, i32* %324, align 8
  %327 = getelementptr inbounds %"class.blink::HeapVector.291", %"class.blink::HeapVector.291"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %328 = load i32, i32* %103, align 4
  %329 = load i32, i32* %327, align 4
  store i32 %329, i32* %103, align 4
  store i32 %328, i32* %327, align 4
  %330 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %316
  %333 = inttoptr i64 %321 to i8*
  %334 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %333) #7
  br label %335

335:                                              ; preds = %332, %316
  %336 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %342, label %338

338:                                              ; preds = %335
  %339 = bitcast %"class.blink::HeapVector.291"* %7 to i8**
  %340 = load i8*, i8** %339, align 8
  %341 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %340) #7
  br label %342

342:                                              ; preds = %335, %338
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #7
  br label %358

358:                                              ; preds = %342, %354, %357
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %285) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %284) #7
  br label %619

359:                                              ; preds = %278
  %360 = load i32, i32* %31, align 8
  %361 = icmp sgt i32 %360, 1
  br i1 %361, label %368, label %362

362:                                              ; preds = %359
  %363 = load i64*, i64** %14, align 8
  %364 = getelementptr inbounds i64, i64* %363, i64 1
  %365 = load i64, i64* %364, align 8
  %366 = add i64 %365, 160
  %367 = inttoptr i64 %366 to %"class.v8::Value"*
  br label %372

368:                                              ; preds = %359
  %369 = load i64*, i64** %95, align 8
  %370 = getelementptr inbounds i64, i64* %369, i64 1
  %371 = bitcast i64* %370 to %"class.v8::Value"*
  br label %372

372:                                              ; preds = %362, %368
  %373 = phi %"class.v8::Value"* [ %367, %362 ], [ %371, %368 ]
  %374 = bitcast %"class.v8::Value"* %373 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = and i64 %375, 3
  %377 = icmp eq i64 %376, 1
  br i1 %377, label %378, label %403, !prof !4

378:                                              ; preds = %372
  %379 = add i64 %375, -1
  %380 = inttoptr i64 %379 to i32*
  %381 = load i32, i32* %380, align 4
  %382 = and i64 %375, -4294967296
  %383 = zext i32 %381 to i64
  %384 = or i64 %382, %383
  %385 = add i64 %384, 7
  %386 = inttoptr i64 %385 to i16*
  %387 = load i16, i16* %386, align 2
  %388 = icmp ult i16 %387, 64
  br i1 %388, label %389, label %403, !prof !5

389:                                              ; preds = %378
  br i1 %361, label %396, label %390

390:                                              ; preds = %389
  %391 = load i64*, i64** %14, align 8
  %392 = getelementptr inbounds i64, i64* %391, i64 1
  %393 = load i64, i64* %392, align 8
  %394 = add i64 %393, 160
  %395 = inttoptr i64 %394 to %"class.v8::Value"*
  br label %400

396:                                              ; preds = %389
  %397 = load i64*, i64** %95, align 8
  %398 = getelementptr inbounds i64, i64* %397, i64 1
  %399 = bitcast i64* %398 to %"class.v8::Value"*
  br label %400

400:                                              ; preds = %390, %396
  %401 = phi %"class.v8::Value"* [ %395, %390 ], [ %399, %396 ]
  %402 = ptrtoint %"class.v8::Value"* %401 to i64
  br label %468

403:                                              ; preds = %372, %378
  %404 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %404) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %404, i8 -86, i64 56, i1 false)
  %405 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %405, align 8
  %406 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %406, align 8
  %407 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %407, align 2
  %408 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %409 = bitcast i8** %408 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %409, align 8
  %410 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %410, align 8
  %411 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %18, %"class.v8::Isolate"** %411, align 8
  %412 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %412, align 8
  %413 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %414 = bitcast %"class.WTF::StringImpl"** %413 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %414, i8 0, i64 16, i1 false) #7
  %415 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %415) #7
  br i1 %361, label %422, label %416

416:                                              ; preds = %403
  %417 = load i64*, i64** %14, align 8
  %418 = getelementptr inbounds i64, i64* %417, i64 1
  %419 = load i64, i64* %418, align 8
  %420 = add i64 %419, 160
  %421 = inttoptr i64 %420 to %"class.v8::Value"*
  br label %426

422:                                              ; preds = %403
  %423 = load i64*, i64** %95, align 8
  %424 = getelementptr inbounds i64, i64* %423, i64 1
  %425 = bitcast i64* %424 to %"class.v8::Value"*
  br label %426

426:                                              ; preds = %416, %422
  %427 = phi %"class.v8::Value"* [ %421, %416 ], [ %425, %422 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %10, %"class.v8::Isolate"* %18, %"class.v8::Value"* %427, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #7
  %428 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10, i64 0, i32 1
  %431 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %430, i64 0, i32 0, i32 0
  %432 = bitcast %"class.WTF::String"* %430 to i64*
  %433 = load i64, i64* %432, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %431, align 8
  %434 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10, i64 0, i32 2, i32 1
  %435 = bitcast %"class.std::__1::unique_ptr.353"* %434 to i64*
  %436 = load i64, i64* %435, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %415) #7
  %437 = load i32, i32* %412, align 8
  %438 = icmp eq i32 %437, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %405, align 8
  %439 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %440 = load i64*, i64** %439, align 8
  %441 = icmp eq i64* %440, null
  br i1 %441, label %451, label %442

442:                                              ; preds = %426
  %443 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %411, align 8
  %444 = bitcast %"class.v8::Isolate"* %443 to %"class.v8::internal::Isolate"*
  %445 = load i64, i64* %440, align 8
  %446 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %444, i64 %445) #7
  %447 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %443) #7
  br i1 %447, label %451, label %448

448:                                              ; preds = %442
  %449 = bitcast i64* %446 to %"class.v8::Value"*
  %450 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %443, %"class.v8::Value"* %449) #7
  br label %451

451:                                              ; preds = %448, %442, %426
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %413, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %467, label %454

454:                                              ; preds = %451
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #7
  br label %467

467:                                              ; preds = %451, %463, %466
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %404) #7
  br i1 %438, label %468, label %596

468:                                              ; preds = %467, %400
  %469 = phi i64 [ %402, %400 ], [ %429, %467 ]
  %470 = phi i64 [ 0, %400 ], [ %433, %467 ]
  %471 = phi i64 [ 0, %400 ], [ %436, %467 ]
  %472 = bitcast %"class.blink::HeapVector.291"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %472) #7
  %473 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %473) #7
  %474 = icmp eq i64 %281, 0
  br i1 %474, label %478, label %475, !prof !3

475:                                              ; preds = %468
  %476 = inttoptr i64 %281 to %"class.v8::String"*
  %477 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %476, i32 0) #7
  br label %504

478:                                              ; preds = %468
  %479 = inttoptr i64 %280 to %"class.WTF::StringImpl"*
  %480 = icmp eq i64 %280, 0
  br i1 %480, label %504, label %481

481:                                              ; preds = %478
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %479, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %483 = load atomic i32, i32* %482 acquire, align 4
  %484 = and i32 %483, 4
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %502, label %486

486:                                              ; preds = %481
  %487 = load atomic i32, i32* %482 monotonic, align 4
  %488 = and i32 %487, 2
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %504

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %479, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = zext i32 %492 to i33
  %494 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %493, i33 1) #7
  %495 = extractvalue { i33, i1 } %494, 1
  %496 = extractvalue { i33, i1 } %494, 0
  %497 = icmp slt i33 %496, 0
  %498 = or i1 %495, %497
  br i1 %498, label %499, label %500, !prof !3

499:                                              ; preds = %490
  call void @llvm.trap() #7
  unreachable

500:                                              ; preds = %490
  %501 = trunc i33 %496 to i32
  store i32 %501, i32* %491, align 4
  br label %504

502:                                              ; preds = %481
  %503 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %479) #7
  br label %504

504:                                              ; preds = %475, %478, %486, %500, %502
  %505 = phi %"class.WTF::StringImpl"* [ %477, %475 ], [ %503, %502 ], [ %479, %486 ], [ %479, %500 ], [ null, %478 ]
  %506 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %505, %"class.WTF::StringImpl"** %506, align 8
  %507 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %507) #7
  %508 = icmp eq i64 %469, 0
  br i1 %508, label %512, label %509, !prof !3

509:                                              ; preds = %504
  %510 = inttoptr i64 %469 to %"class.v8::String"*
  %511 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %510, i32 0) #7
  br label %538

512:                                              ; preds = %504
  %513 = inttoptr i64 %470 to %"class.WTF::StringImpl"*
  %514 = icmp eq i64 %470, 0
  br i1 %514, label %538, label %515

515:                                              ; preds = %512
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 acquire, align 4
  %518 = and i32 %517, 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %536, label %520

520:                                              ; preds = %515
  %521 = load atomic i32, i32* %516 monotonic, align 4
  %522 = and i32 %521, 2
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %538

524:                                              ; preds = %520
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  %527 = zext i32 %526 to i33
  %528 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %527, i33 1) #7
  %529 = extractvalue { i33, i1 } %528, 1
  %530 = extractvalue { i33, i1 } %528, 0
  %531 = icmp slt i33 %530, 0
  %532 = or i1 %529, %531
  br i1 %532, label %533, label %534, !prof !3

533:                                              ; preds = %524
  call void @llvm.trap() #7
  unreachable

534:                                              ; preds = %524
  %535 = trunc i33 %530 to i32
  store i32 %535, i32* %525, align 4
  br label %538

536:                                              ; preds = %515
  %537 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %513) #7
  br label %538

538:                                              ; preds = %509, %512, %520, %534, %536
  %539 = phi %"class.WTF::StringImpl"* [ %511, %509 ], [ %537, %536 ], [ %513, %520 ], [ %513, %534 ], [ null, %512 ]
  %540 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %539, %"class.WTF::StringImpl"** %540, align 8
  call void @_ZN5blink11Performance16getEntriesByNameERKN3WTF12AtomicStringES4_(%"class.blink::HeapVector.291"* nonnull sret %11, %"class.blink::Performance"* %173, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13) #7
  %541 = bitcast %"class.blink::HeapVector.291"* %11 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.blink::HeapVector.291"* %4 to i64*
  %544 = load i64, i64* %543, align 8
  store atomic i64 %544, i64* %541 monotonic, align 8
  store atomic i64 %542, i64* %543 monotonic, align 8
  %545 = getelementptr inbounds %"class.blink::HeapVector.291", %"class.blink::HeapVector.291"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %546 = load i32, i32* %102, align 8
  %547 = load i32, i32* %545, align 8
  store i32 %547, i32* %102, align 8
  store i32 %546, i32* %545, align 8
  %548 = getelementptr inbounds %"class.blink::HeapVector.291", %"class.blink::HeapVector.291"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %549 = load i32, i32* %103, align 4
  %550 = load i32, i32* %548, align 4
  store i32 %550, i32* %103, align 4
  store i32 %549, i32* %548, align 4
  %551 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %556, label %553

553:                                              ; preds = %538
  %554 = inttoptr i64 %542 to i8*
  %555 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %554) #7
  br label %556

556:                                              ; preds = %553, %538
  %557 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %563, label %559

559:                                              ; preds = %556
  %560 = bitcast %"class.blink::HeapVector.291"* %11 to i8**
  %561 = load i8*, i8** %560, align 8
  %562 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %561) #7
  br label %563

563:                                              ; preds = %556, %559
  %564 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %540, align 8
  %565 = icmp eq %"class.WTF::StringImpl"* %564, null
  br i1 %565, label %579, label %566

566:                                              ; preds = %563
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %564, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = load atomic i32, i32* %567 monotonic, align 4
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %564, i64 0, i32 0
  %572 = load i32, i32* %571, align 4
  br i1 %570, label %573, label %575

573:                                              ; preds = %566
  %574 = add i32 %572, -1
  store i32 %574, i32* %571, align 4
  br label %575

575:                                              ; preds = %573, %566
  %576 = phi i32 [ %574, %573 ], [ %572, %566 ]
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %579

578:                                              ; preds = %575
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %564) #7
  br label %579

579:                                              ; preds = %563, %575, %578
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %507) #7
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %506, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %595, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  br i1 %586, label %589, label %591

589:                                              ; preds = %582
  %590 = add i32 %588, -1
  store i32 %590, i32* %587, align 4
  br label %591

591:                                              ; preds = %589, %582
  %592 = phi i32 [ %590, %589 ], [ %588, %582 ]
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %595

594:                                              ; preds = %591
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %580) #7
  br label %595

595:                                              ; preds = %579, %591, %594
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %473) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %472) #7
  br label %596

596:                                              ; preds = %467, %595
  %597 = phi i64 [ %470, %595 ], [ %433, %467 ]
  %598 = phi i64 [ %471, %595 ], [ %436, %467 ]
  %599 = phi i32 [ 0, %595 ], [ 1, %467 ]
  %600 = icmp eq i64 %598, 0
  br i1 %600, label %603, label %601

601:                                              ; preds = %596
  %602 = inttoptr i64 %598 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %602) #7
  br label %603

603:                                              ; preds = %601, %596
  %604 = inttoptr i64 %597 to %"class.WTF::StringImpl"*
  %605 = icmp eq i64 %597, 0
  br i1 %605, label %619, label %606

606:                                              ; preds = %603
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = load atomic i32, i32* %607 monotonic, align 4
  %609 = and i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 0
  %612 = load i32, i32* %611, align 4
  br i1 %610, label %613, label %615

613:                                              ; preds = %606
  %614 = add i32 %612, -1
  store i32 %614, i32* %611, align 4
  br label %615

615:                                              ; preds = %613, %606
  %616 = phi i32 [ %614, %613 ], [ %612, %606 ]
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %619

618:                                              ; preds = %615
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %604) #7
  br label %619

619:                                              ; preds = %618, %615, %603, %277, %358
  %620 = phi i64 [ %279, %358 ], [ %246, %277 ], [ %279, %603 ], [ %279, %615 ], [ %279, %618 ]
  %621 = phi i64 [ %280, %358 ], [ %243, %277 ], [ %280, %603 ], [ %280, %615 ], [ %280, %618 ]
  %622 = phi i32 [ 6, %358 ], [ 1, %277 ], [ %599, %603 ], [ %599, %615 ], [ %599, %618 ]
  %623 = icmp eq i64 %620, 0
  br i1 %623, label %626, label %624

624:                                              ; preds = %619
  %625 = inttoptr i64 %620 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %625) #7
  br label %626

626:                                              ; preds = %624, %619
  %627 = inttoptr i64 %621 to %"class.WTF::StringImpl"*
  %628 = icmp eq i64 %621, 0
  br i1 %628, label %642, label %629

629:                                              ; preds = %626
  %630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %631 = load atomic i32, i32* %630 monotonic, align 4
  %632 = and i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 0
  %635 = load i32, i32* %634, align 4
  br i1 %633, label %636, label %638

636:                                              ; preds = %629
  %637 = add i32 %635, -1
  store i32 %637, i32* %634, align 4
  br label %638

638:                                              ; preds = %636, %629
  %639 = phi i32 [ %637, %636 ], [ %635, %629 ]
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %641, label %642

641:                                              ; preds = %638
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %627) #7
  br label %642

642:                                              ; preds = %626, %638, %641
  switch i32 %622, label %652 [
    i32 0, label %643
    i32 6, label %643
  ]

643:                                              ; preds = %642, %642
  %644 = bitcast %"class.blink::HeapVector.291"* %4 to %"class.blink::HeapVector.362"*
  %645 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %100, %"class.blink::HeapVector.362"* nonnull dereferenceable(16) %644) #7
  %646 = icmp eq %"class.v8::Value"* %645, null
  br i1 %646, label %652, label %647

647:                                              ; preds = %643
  %648 = load i64*, i64** %14, align 8
  %649 = getelementptr inbounds i64, i64* %648, i64 3
  %650 = bitcast %"class.v8::Value"* %645 to i64*
  %651 = load i64, i64* %650, align 8
  store i64 %651, i64* %649, align 8
  br label %652

652:                                              ; preds = %643, %647, %642
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #7
  br label %653

653:                                              ; preds = %652, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance33GetEntriesByTypeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.blink::HeapVector.291", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #7
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #7
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2429) #7
  br label %24

24:                                               ; preds = %1, %19
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %88, !prof !3

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #7
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %26) #7
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #7
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %64 = bitcast %"class.v8::Isolate"* %63 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %60, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #7
  %67 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %63) #7
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = bitcast i64* %66 to %"class.v8::Value"*
  %70 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %63, %"class.v8::Value"* %69) #7
  br label %71

71:                                               ; preds = %68, %62, %58
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #7
  br label %87

87:                                               ; preds = %71, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #7
  br label %305

88:                                               ; preds = %24
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 -1
  %92 = bitcast i64* %91 to %"class.v8::Object"*
  %93 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %92) #7
  %94 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %93)
  %95 = load i64, i64* %91, align 8
  %96 = add i64 %95, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  switch i16 %104, label %109 [
    i16 1057, label %105
    i16 1056, label %105
    i16 1040, label %105
  ]

105:                                              ; preds = %88, %88, %88
  %106 = add i64 %95, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %111

109:                                              ; preds = %88
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %92, i32 1) #7
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi i8* [ %108, %105 ], [ %110, %109 ]
  %113 = bitcast i8* %112 to %"class.blink::Performance"*
  %114 = load i32, i32* %25, align 8
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %122, label %116

116:                                              ; preds = %111
  %117 = load i64*, i64** %8, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %125

122:                                              ; preds = %111
  %123 = bitcast i64** %89 to %"class.v8::Value"**
  %124 = load %"class.v8::Value"*, %"class.v8::Value"** %123, align 8
  br label %125

125:                                              ; preds = %116, %122
  %126 = phi %"class.v8::Value"* [ %121, %116 ], [ %124, %122 ]
  %127 = bitcast %"class.v8::Value"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 3
  %130 = icmp eq i64 %129, 1
  br i1 %130, label %131, label %155, !prof !4

131:                                              ; preds = %125
  %132 = add i64 %128, -1
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = and i64 %128, -4294967296
  %136 = zext i32 %134 to i64
  %137 = or i64 %135, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load i16, i16* %139, align 2
  %141 = icmp ult i16 %140, 64
  br i1 %141, label %142, label %155, !prof !5

142:                                              ; preds = %131
  br i1 %115, label %149, label %143

143:                                              ; preds = %142
  %144 = load i64*, i64** %8, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 160
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  br label %152

149:                                              ; preds = %142
  %150 = bitcast i64** %89 to %"class.v8::Value"**
  %151 = load %"class.v8::Value"*, %"class.v8::Value"** %150, align 8
  br label %152

152:                                              ; preds = %143, %149
  %153 = phi %"class.v8::Value"* [ %148, %143 ], [ %151, %149 ]
  %154 = ptrtoint %"class.v8::Value"* %153 to i64
  br label %219

155:                                              ; preds = %125, %131
  %156 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %156) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -86, i64 56, i1 false)
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %157, align 8
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %158, align 8
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %159, align 2
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %161 = bitcast i8** %160 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %166 = bitcast %"class.WTF::StringImpl"** %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 16, i1 false) #7
  %167 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %167) #7
  br i1 %115, label %174, label %168

168:                                              ; preds = %155
  %169 = load i64*, i64** %8, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 1
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %171, 160
  %173 = inttoptr i64 %172 to %"class.v8::Value"*
  br label %177

174:                                              ; preds = %155
  %175 = bitcast i64** %89 to %"class.v8::Value"**
  %176 = load %"class.v8::Value"*, %"class.v8::Value"** %175, align 8
  br label %177

177:                                              ; preds = %168, %174
  %178 = phi %"class.v8::Value"* [ %173, %168 ], [ %176, %174 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %178, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #7
  %179 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %181, i64 0, i32 0, i32 0
  %183 = bitcast %"class.WTF::String"* %181 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %182, align 8
  %185 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %186 = bitcast %"class.std::__1::unique_ptr.353"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %167) #7
  %188 = load i32, i32* %164, align 8
  %189 = icmp eq i32 %188, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %157, align 8
  %190 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = icmp eq i64* %191, null
  br i1 %192, label %202, label %193

193:                                              ; preds = %177
  %194 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %163, align 8
  %195 = bitcast %"class.v8::Isolate"* %194 to %"class.v8::internal::Isolate"*
  %196 = load i64, i64* %191, align 8
  %197 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %195, i64 %196) #7
  %198 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %194) #7
  br i1 %198, label %202, label %199

199:                                              ; preds = %193
  %200 = bitcast i64* %197 to %"class.v8::Value"*
  %201 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %194, %"class.v8::Value"* %200) #7
  br label %202

202:                                              ; preds = %199, %193, %177
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #7
  br label %218

218:                                              ; preds = %202, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %156) #7
  br i1 %189, label %219, label %283

219:                                              ; preds = %218, %152
  %220 = phi i64 [ 0, %152 ], [ %187, %218 ]
  %221 = phi i64 [ 0, %152 ], [ %184, %218 ]
  %222 = phi i64 [ %154, %152 ], [ %180, %218 ]
  %223 = bitcast %"class.blink::HeapVector.291"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %223) #7
  %224 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #7
  %225 = icmp eq i64 %222, 0
  br i1 %225, label %229, label %226, !prof !3

226:                                              ; preds = %219
  %227 = inttoptr i64 %222 to %"class.v8::String"*
  %228 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %227, i32 0) #7
  br label %255

229:                                              ; preds = %219
  %230 = inttoptr i64 %221 to %"class.WTF::StringImpl"*
  %231 = icmp eq i64 %221, 0
  br i1 %231, label %255, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 acquire, align 4
  %235 = and i32 %234, 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %253, label %237

237:                                              ; preds = %232
  %238 = load atomic i32, i32* %233 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %255

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = zext i32 %243 to i33
  %245 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %244, i33 1) #7
  %246 = extractvalue { i33, i1 } %245, 1
  %247 = extractvalue { i33, i1 } %245, 0
  %248 = icmp slt i33 %247, 0
  %249 = or i1 %246, %248
  br i1 %249, label %250, label %251, !prof !3

250:                                              ; preds = %241
  call void @llvm.trap() #7
  unreachable

251:                                              ; preds = %241
  %252 = trunc i33 %247 to i32
  store i32 %252, i32* %242, align 4
  br label %255

253:                                              ; preds = %232
  %254 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %230) #7
  br label %255

255:                                              ; preds = %226, %229, %237, %251, %253
  %256 = phi %"class.WTF::StringImpl"* [ %228, %226 ], [ %254, %253 ], [ %230, %237 ], [ %230, %251 ], [ null, %229 ]
  %257 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %256, %"class.WTF::StringImpl"** %257, align 8
  call void @_ZN5blink11Performance16getEntriesByTypeERKN3WTF12AtomicStringE(%"class.blink::HeapVector.291"* nonnull sret %6, %"class.blink::Performance"* %113, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #7
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #7
  br label %273

273:                                              ; preds = %255, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #7
  %274 = bitcast %"class.blink::HeapVector.291"* %6 to %"class.blink::HeapVector.362"*
  %275 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %94, %"class.blink::HeapVector.362"* nonnull dereferenceable(16) %274) #7
  %276 = icmp eq %"class.v8::Value"* %275, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %273
  %278 = load i64*, i64** %8, align 8
  %279 = getelementptr inbounds i64, i64* %278, i64 3
  %280 = bitcast %"class.v8::Value"* %275 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %279, align 8
  br label %282

282:                                              ; preds = %273, %277
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %223) #7
  br label %283

283:                                              ; preds = %218, %282
  %284 = phi i64 [ %220, %282 ], [ %187, %218 ]
  %285 = phi i64 [ %221, %282 ], [ %184, %218 ]
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = inttoptr i64 %284 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %288) #7
  br label %289

289:                                              ; preds = %287, %283
  %290 = inttoptr i64 %285 to %"class.WTF::StringImpl"*
  %291 = icmp eq i64 %285, 0
  br i1 %291, label %305, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #7
  br label %305

305:                                              ; preds = %304, %301, %289, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance21MarkOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %10) #7
  %12 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %11) #7
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  %14 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 3
  %15 = icmp eq %"class.blink::UseCounter"* %14, null
  %16 = or i1 %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.blink::UseCounter"* %14 to void (%"class.blink::UseCounter"*, i32)***
  %19 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, i64 3
  %21 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %20, align 8
  tail call void %21(%"class.blink::UseCounter"* nonnull %14, i32 2430) #7
  br label %22

22:                                               ; preds = %1, %17
  %23 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 56, i1 false)
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %26, align 2
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %28 = bitcast i8** %27 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %33 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #7
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %37, label %57, !prof !3

37:                                               ; preds = %22
  %38 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %39 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %35) #7
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #7
  br label %56

56:                                               ; preds = %37, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %272

57:                                               ; preds = %22
  %58 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 -1
  %61 = bitcast i64* %60 to %"class.v8::Object"*
  %62 = load i64, i64* %60, align 8
  %63 = add i64 %62, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = and i64 %62, -4294967296
  %67 = zext i32 %65 to i64
  %68 = or i64 %66, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load i16, i16* %70, align 2
  switch i16 %71, label %76 [
    i16 1057, label %72
    i16 1056, label %72
    i16 1040, label %72
  ]

72:                                               ; preds = %57, %57, %57
  %73 = add i64 %62, 19
  %74 = inttoptr i64 %73 to i8**
  %75 = load i8*, i8** %74, align 1
  br label %78

76:                                               ; preds = %57
  %77 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %61, i32 1) #7
  br label %78

78:                                               ; preds = %72, %76
  %79 = phi i8* [ %75, %72 ], [ %77, %76 ]
  %80 = bitcast i8* %79 to %"class.blink::Performance"*
  %81 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %61) #7
  %82 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %81)
  %83 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %83) #7
  %84 = load i32, i32* %34, align 8
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %78
  %87 = load i64*, i64** %6, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 1
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 160
  %91 = inttoptr i64 %90 to %"class.v8::Value"*
  br label %95

92:                                               ; preds = %78
  %93 = bitcast i64** %58 to %"class.v8::Value"**
  %94 = load %"class.v8::Value"*, %"class.v8::Value"** %93, align 8
  br label %95

95:                                               ; preds = %86, %92
  %96 = phi %"class.v8::Value"* [ %91, %86 ], [ %94, %92 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %96, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %97 = load i32, i32* %31, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %249

99:                                               ; preds = %95
  %100 = load i32, i32* %34, align 8
  %101 = icmp sgt i32 %100, 1
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = load i64*, i64** %6, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 1
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 160
  %107 = inttoptr i64 %106 to %"class.v8::Value"*
  br label %112

108:                                              ; preds = %99
  %109 = load i64*, i64** %58, align 8
  %110 = getelementptr inbounds i64, i64* %109, i64 1
  %111 = bitcast i64* %110 to %"class.v8::Value"*
  br label %112

112:                                              ; preds = %102, %108
  %113 = phi %"class.v8::Value"* [ %107, %102 ], [ %111, %108 ]
  %114 = bitcast %"class.v8::Value"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 3
  %117 = icmp eq i64 %116, 1
  br i1 %117, label %118, label %142

118:                                              ; preds = %112
  %119 = add i64 %115, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = and i64 %115, -4294967296
  %123 = zext i32 %121 to i64
  %124 = or i64 %122, %123
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i16*
  %127 = load i16, i16* %126, align 2
  %128 = icmp eq i16 %127, 67
  br i1 %128, label %129, label %142

129:                                              ; preds = %118
  %130 = add i64 %115, 23
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, -2
  %134 = icmp eq i32 %133, 10
  br i1 %134, label %135, label %142

135:                                              ; preds = %129
  %136 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #7
  %137 = bitcast i8* %136 to %"class.blink::PerformanceMarkOptions"*
  call void @_ZN5blink22PerformanceMarkOptionsC1Ev(%"class.blink::PerformanceMarkOptions"* %137) #7
  %138 = getelementptr inbounds i8, i8* %136, i64 -4
  %139 = bitcast i8* %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = or i16 %140, 1
  store atomic i16 %141, i16* %139 release, align 2
  br label %158

142:                                              ; preds = %118, %112, %129
  br i1 %101, label %149, label %143

143:                                              ; preds = %142
  %144 = load i64*, i64** %6, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 160
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  br label %153

149:                                              ; preds = %142
  %150 = load i64*, i64** %58, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = bitcast i64* %151 to %"class.v8::Value"*
  br label %153

153:                                              ; preds = %143, %149
  %154 = phi %"class.v8::Value"* [ %148, %143 ], [ %152, %149 ]
  %155 = call %"class.blink::PerformanceMarkOptions"* @_ZN5blink17NativeValueTraitsINS_22PerformanceMarkOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %154, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %156 = load i32, i32* %31, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %249

158:                                              ; preds = %153, %135
  %159 = phi %"class.blink::PerformanceMarkOptions"* [ %137, %135 ], [ %155, %153 ]
  %160 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #7
  %161 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %162 = load %"class.v8::String"*, %"class.v8::String"** %161, align 8
  %163 = icmp eq %"class.v8::String"* %162, null
  br i1 %163, label %166, label %164, !prof !3

164:                                              ; preds = %158
  %165 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %162, i32 0) #7
  br label %193

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %193, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 acquire, align 4
  %173 = and i32 %172, 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %191, label %175

175:                                              ; preds = %170
  %176 = load atomic i32, i32* %171 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %193

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #7
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !3

188:                                              ; preds = %179
  call void @llvm.trap() #7
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %193

191:                                              ; preds = %170
  %192 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %168) #7
  br label %193

193:                                              ; preds = %164, %166, %175, %189, %191
  %194 = phi %"class.WTF::StringImpl"* [ %165, %164 ], [ %192, %191 ], [ %168, %175 ], [ %168, %189 ], [ null, %166 ]
  %195 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %195, align 8
  %196 = call %"class.blink::PerformanceMark"* @_ZN5blink11Performance4markEPNS_11ScriptStateERKN3WTF12AtomicStringEPNS_22PerformanceMarkOptionsERNS_14ExceptionStateE(%"class.blink::Performance"* %80, %"class.blink::ScriptState"* %82, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::PerformanceMarkOptions"* %159, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #7
  br label %212

212:                                              ; preds = %193, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #7
  %213 = load i32, i32* %31, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %249

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.blink::PerformanceMark", %"class.blink::PerformanceMark"* %196, i64 0, i32 0, i32 0
  %217 = icmp eq %"class.blink::PerformanceMark"* %196, null
  %218 = load i64*, i64** %6, align 8
  %219 = getelementptr inbounds i64, i64* %218, i64 3
  br i1 %217, label %220, label %226, !prof !3

220:                                              ; preds = %215
  %221 = getelementptr inbounds i64, i64* %218, i64 1
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, 176
  %224 = inttoptr i64 %223 to i64*
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %219, align 8
  br label %249

226:                                              ; preds = %215
  %227 = bitcast i8* %79 to %"class.blink::ScriptWrappable"*
  %228 = load i64*, i64** %58, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 -1
  %230 = bitcast i64* %229 to %"class.v8::Object"*
  %231 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %219, %"class.blink::ScriptWrappable"* nonnull %216, %"class.v8::Object"* %230, %"class.blink::ScriptWrappable"* %227) #7
  br i1 %231, label %249, label %232

232:                                              ; preds = %226
  %233 = load i64*, i64** %58, align 8
  %234 = getelementptr inbounds i64, i64* %233, i64 -1
  %235 = bitcast i64* %234 to %"class.v8::Object"*
  %236 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %235) #7
  %237 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %236) #7
  %238 = bitcast %"class.blink::PerformanceMark"* %196 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %239 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %238, align 8
  %240 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %239, i64 7
  %241 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %240, align 8
  %242 = call %"class.v8::Value"* %241(%"class.blink::ScriptWrappable"* nonnull %216, %"class.blink::ScriptState"* %237) #7
  %243 = icmp eq %"class.v8::Value"* %242, null
  br i1 %243, label %249, label %244

244:                                              ; preds = %232
  %245 = load i64*, i64** %6, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 3
  %247 = bitcast %"class.v8::Value"* %242 to i64*
  %248 = load i64, i64* %247, align 8
  store i64 %248, i64* %246, align 8
  br label %249

249:                                              ; preds = %212, %153, %95, %244, %232, %226, %220
  %250 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8
  store i8* null, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %254, label %253

253:                                              ; preds = %249
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %251) #7
  br label %254

254:                                              ; preds = %253, %249
  %255 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %255, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %256, null
  br i1 %257, label %271, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  br i1 %262, label %265, label %267

265:                                              ; preds = %258
  %266 = add i32 %264, -1
  store i32 %266, i32* %263, align 4
  br label %267

267:                                              ; preds = %265, %258
  %268 = phi i32 [ %266, %265 ], [ %264, %258 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %256) #7
  br label %271

271:                                              ; preds = %254, %267, %270
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %83) #7
  br label %272

272:                                              ; preds = %271, %56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %274 = load i64*, i64** %273, align 8
  %275 = icmp eq i64* %274, null
  br i1 %275, label %285, label %276

276:                                              ; preds = %272
  %277 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %278 = bitcast %"class.v8::Isolate"* %277 to %"class.v8::internal::Isolate"*
  %279 = load i64, i64* %274, align 8
  %280 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %278, i64 %279) #7
  %281 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %277) #7
  br i1 %281, label %285, label %282

282:                                              ; preds = %276
  %283 = bitcast i64* %280 to %"class.v8::Value"*
  %284 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %277, %"class.v8::Value"* %283) #7
  br label %285

285:                                              ; preds = %282, %276, %272
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #7
  br label %301

301:                                              ; preds = %285, %297, %300
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance24MeasureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 1
  %12 = bitcast i64* %11 to %"class.v8::Isolate"**
  %13 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %14 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %13) #7
  %15 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %14) #7
  %16 = icmp eq %"class.blink::ExecutionContext"* %15, null
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %15, i64 0, i32 3
  %18 = icmp eq %"class.blink::UseCounter"* %17, null
  %19 = or i1 %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.blink::UseCounter"* %17 to void (%"class.blink::UseCounter"*, i32)***
  %22 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, i64 3
  %24 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %23, align 8
  tail call void %24(%"class.blink::UseCounter"* nonnull %17, i32 2430) #7
  br label %25

25:                                               ; preds = %1, %20
  %26 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %26) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 56, i1 false)
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %29, align 2
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %31 = bitcast i8** %30 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %13, %"class.v8::Isolate"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %36 = bitcast %"class.WTF::StringImpl"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #7
  %37 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %40, label %60, !prof !3

40:                                               ; preds = %25
  %41 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #7
  %42 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %38) #7
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #7
  br label %59

59:                                               ; preds = %40, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #7
  br label %487

60:                                               ; preds = %25
  %61 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 -1
  %64 = bitcast i64* %63 to %"class.v8::Object"*
  %65 = load i64, i64* %63, align 8
  %66 = add i64 %65, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i64 %65, -4294967296
  %70 = zext i32 %68 to i64
  %71 = or i64 %69, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load i16, i16* %73, align 2
  switch i16 %74, label %79 [
    i16 1057, label %75
    i16 1056, label %75
    i16 1040, label %75
  ]

75:                                               ; preds = %60, %60, %60
  %76 = add i64 %65, 19
  %77 = inttoptr i64 %76 to i8**
  %78 = load i8*, i8** %77, align 1
  br label %82

79:                                               ; preds = %60
  %80 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #7
  %81 = load i32, i32* %37, align 8
  br label %82

82:                                               ; preds = %75, %79
  %83 = phi i32 [ %38, %75 ], [ %81, %79 ]
  %84 = phi i8* [ %78, %75 ], [ %80, %79 ]
  %85 = bitcast i8* %84 to %"class.blink::Performance"*
  %86 = sext i32 %83 to i64
  br label %87

87:                                               ; preds = %120, %82
  %88 = phi i64 [ %89, %120 ], [ %86, %82 ]
  %89 = add nsw i64 %88, -1
  %90 = icmp sgt i64 %88, 0
  br i1 %90, label %91, label %132

91:                                               ; preds = %87
  %92 = icmp sgt i64 %88, %86
  br i1 %92, label %93, label %99

93:                                               ; preds = %91
  %94 = load i64*, i64** %9, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %91
  %100 = load i64*, i64** %61, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 %89
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %99, %93
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = bitcast %"class.v8::Value"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 3
  %108 = icmp eq i64 %107, 1
  br i1 %108, label %109, label %128

109:                                              ; preds = %103
  %110 = add i64 %106, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = and i64 %106, -4294967296
  %114 = zext i32 %112 to i64
  %115 = or i64 %113, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 67
  br i1 %119, label %120, label %126

120:                                              ; preds = %109
  %121 = add i64 %106, 23
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, -2
  %125 = icmp eq i32 %124, 10
  br i1 %125, label %87, label %130

126:                                              ; preds = %109
  %127 = trunc i64 %88 to i32
  br label %132

128:                                              ; preds = %103
  %129 = trunc i64 %88 to i32
  br label %132

130:                                              ; preds = %120
  %131 = trunc i64 %88 to i32
  br label %132

132:                                              ; preds = %87, %126, %128, %130
  %133 = phi i32 [ %127, %126 ], [ %129, %128 ], [ %131, %130 ], [ 0, %87 ]
  %134 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %64) #7
  %135 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %134)
  %136 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %136) #7
  %137 = load i32, i32* %37, align 8
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132
  %140 = load i64*, i64** %9, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 160
  %144 = inttoptr i64 %143 to %"class.v8::Value"*
  br label %148

145:                                              ; preds = %132
  %146 = bitcast i64** %61 to %"class.v8::Value"**
  %147 = load %"class.v8::Value"*, %"class.v8::Value"** %146, align 8
  br label %148

148:                                              ; preds = %139, %145
  %149 = phi %"class.v8::Value"* [ %144, %139 ], [ %147, %145 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %13, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %150 = load i32, i32* %34, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %425

152:                                              ; preds = %148
  %153 = load i32, i32* %37, align 8
  %154 = icmp sgt i32 %153, 1
  br i1 %154, label %161, label %155

155:                                              ; preds = %152
  %156 = load i64*, i64** %9, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 1
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 160
  %160 = inttoptr i64 %159 to %"class.v8::Value"*
  br label %165

161:                                              ; preds = %152
  %162 = load i64*, i64** %61, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 1
  %164 = bitcast i64* %163 to %"class.v8::Value"*
  br label %165

165:                                              ; preds = %155, %161
  %166 = phi %"class.v8::Value"* [ %160, %155 ], [ %164, %161 ]
  %167 = bitcast %"class.v8::Value"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = and i64 %168, 3
  %170 = icmp eq i64 %169, 1
  br i1 %170, label %171, label %209

171:                                              ; preds = %165
  %172 = add i64 %168, -1
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = and i64 %168, -4294967296
  %176 = zext i32 %174 to i64
  %177 = or i64 %175, %176
  %178 = add i64 %177, 7
  %179 = inttoptr i64 %178 to i16*
  %180 = load i16, i16* %179, align 2
  %181 = icmp eq i16 %180, 67
  br i1 %181, label %182, label %209

182:                                              ; preds = %171
  %183 = add i64 %168, 23
  %184 = inttoptr i64 %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = and i32 %185, -2
  %187 = icmp eq i32 %186, 10
  br i1 %187, label %188, label %209

188:                                              ; preds = %182
  %189 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #7
  %190 = bitcast i8* %189 to %"class.blink::PerformanceMeasureOptions"*
  call void @_ZN5blink25PerformanceMeasureOptionsC1Ev(%"class.blink::PerformanceMeasureOptions"* %190) #7
  %191 = getelementptr inbounds i8, i8* %189, i64 -4
  %192 = bitcast i8* %191 to i16*
  %193 = load atomic i16, i16* %192 monotonic, align 2
  %194 = or i16 %193, 1
  store atomic i16 %194, i16* %192 release, align 2
  %195 = ptrtoint i8* %189 to i64
  %196 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #7
  %197 = bitcast i8* %196 to %"class.blink::V8UnionPerformanceMeasureOptionsOrString"*
  %198 = bitcast i8* %196 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink40V8UnionPerformanceMeasureOptionsOrStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %198, align 8
  %199 = getelementptr inbounds i8, i8* %196, i64 8
  %200 = bitcast i8* %199 to i32*
  store i32 0, i32* %200, align 8
  %201 = getelementptr inbounds i8, i8* %196, i64 16
  %202 = bitcast i8* %201 to i64*
  store i64 %195, i64* %202, align 8
  %203 = getelementptr inbounds i8, i8* %196, i64 24
  %204 = bitcast i8* %203 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %204, align 8
  %205 = getelementptr inbounds i8, i8* %196, i64 -4
  %206 = bitcast i8* %205 to i16*
  %207 = load atomic i16, i16* %206 monotonic, align 2
  %208 = or i16 %207, 1
  store atomic i16 %208, i16* %206 release, align 2
  br label %225

209:                                              ; preds = %171, %165, %182
  br i1 %154, label %216, label %210

210:                                              ; preds = %209
  %211 = load i64*, i64** %9, align 8
  %212 = getelementptr inbounds i64, i64* %211, i64 1
  %213 = load i64, i64* %212, align 8
  %214 = add i64 %213, 160
  %215 = inttoptr i64 %214 to %"class.v8::Value"*
  br label %220

216:                                              ; preds = %209
  %217 = load i64*, i64** %61, align 8
  %218 = getelementptr inbounds i64, i64* %217, i64 1
  %219 = bitcast i64* %218 to %"class.v8::Value"*
  br label %220

220:                                              ; preds = %210, %216
  %221 = phi %"class.v8::Value"* [ %215, %210 ], [ %219, %216 ]
  %222 = call %"class.blink::V8UnionPerformanceMeasureOptionsOrString"* @_ZN5blink40V8UnionPerformanceMeasureOptionsOrString6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %13, %"class.v8::Value"* %221, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %223 = load i32, i32* %34, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %425

225:                                              ; preds = %220, %188
  %226 = phi %"class.blink::V8UnionPerformanceMeasureOptionsOrString"* [ %197, %188 ], [ %222, %220 ]
  %227 = icmp slt i32 %133, 3
  br i1 %227, label %228, label %282

228:                                              ; preds = %225
  %229 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #7
  %230 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %231 = load %"class.v8::String"*, %"class.v8::String"** %230, align 8
  %232 = icmp eq %"class.v8::String"* %231, null
  br i1 %232, label %235, label %233, !prof !3

233:                                              ; preds = %228
  %234 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %231, i32 0) #7
  br label %262

235:                                              ; preds = %228
  %236 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %262, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 acquire, align 4
  %242 = and i32 %241, 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %260, label %244

244:                                              ; preds = %239
  %245 = load atomic i32, i32* %240 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %262

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i33
  %252 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %251, i33 1) #7
  %253 = extractvalue { i33, i1 } %252, 1
  %254 = extractvalue { i33, i1 } %252, 0
  %255 = icmp slt i33 %254, 0
  %256 = or i1 %253, %255
  br i1 %256, label %257, label %258, !prof !3

257:                                              ; preds = %248
  call void @llvm.trap() #7
  unreachable

258:                                              ; preds = %248
  %259 = trunc i33 %254 to i32
  store i32 %259, i32* %249, align 4
  br label %262

260:                                              ; preds = %239
  %261 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %237) #7
  br label %262

262:                                              ; preds = %233, %235, %244, %258, %260
  %263 = phi %"class.WTF::StringImpl"* [ %234, %233 ], [ %261, %260 ], [ %237, %244 ], [ %237, %258 ], [ null, %235 ]
  %264 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %263, %"class.WTF::StringImpl"** %264, align 8
  %265 = call %"class.blink::PerformanceMeasure"* @_ZN5blink11Performance7measureEPNS_11ScriptStateERKN3WTF12AtomicStringEPKNS_40V8UnionPerformanceMeasureOptionsOrStringERNS_14ExceptionStateE(%"class.blink::Performance"* %85, %"class.blink::ScriptState"* %135, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::V8UnionPerformanceMeasureOptionsOrString"* %226, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  br i1 %272, label %275, label %277

275:                                              ; preds = %268
  %276 = add i32 %274, -1
  store i32 %276, i32* %273, align 4
  br label %277

277:                                              ; preds = %275, %268
  %278 = phi i32 [ %276, %275 ], [ %274, %268 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %277
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #7
  br label %281

281:                                              ; preds = %262, %277, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #7
  br label %425

282:                                              ; preds = %225
  %283 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %283) #7
  %284 = load i32, i32* %37, align 8
  %285 = icmp sgt i32 %284, 2
  br i1 %285, label %292, label %286

286:                                              ; preds = %282
  %287 = load i64*, i64** %9, align 8
  %288 = getelementptr inbounds i64, i64* %287, i64 1
  %289 = load i64, i64* %288, align 8
  %290 = add i64 %289, 160
  %291 = inttoptr i64 %290 to %"class.v8::Value"*
  br label %296

292:                                              ; preds = %282
  %293 = load i64*, i64** %61, align 8
  %294 = getelementptr inbounds i64, i64* %293, i64 2
  %295 = bitcast i64* %294 to %"class.v8::Value"*
  br label %296

296:                                              ; preds = %286, %292
  %297 = phi %"class.v8::Value"* [ %291, %286 ], [ %295, %292 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %6, %"class.v8::Isolate"* %13, %"class.v8::Value"* %297, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %298 = load i32, i32* %34, align 8
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %400

300:                                              ; preds = %296
  %301 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #7
  %302 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %303 = load %"class.v8::String"*, %"class.v8::String"** %302, align 8
  %304 = icmp eq %"class.v8::String"* %303, null
  br i1 %304, label %307, label %305, !prof !3

305:                                              ; preds = %300
  %306 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %303, i32 0) #7
  br label %334

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %334, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 acquire, align 4
  %314 = and i32 %313, 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %311
  %317 = load atomic i32, i32* %312 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %334

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = zext i32 %322 to i33
  %324 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %323, i33 1) #7
  %325 = extractvalue { i33, i1 } %324, 1
  %326 = extractvalue { i33, i1 } %324, 0
  %327 = icmp slt i33 %326, 0
  %328 = or i1 %325, %327
  br i1 %328, label %329, label %330, !prof !3

329:                                              ; preds = %320
  call void @llvm.trap() #7
  unreachable

330:                                              ; preds = %320
  %331 = trunc i33 %326 to i32
  store i32 %331, i32* %321, align 4
  br label %334

332:                                              ; preds = %311
  %333 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %309) #7
  br label %334

334:                                              ; preds = %305, %307, %316, %330, %332
  %335 = phi %"class.WTF::StringImpl"* [ %306, %305 ], [ %333, %332 ], [ %309, %316 ], [ %309, %330 ], [ null, %307 ]
  %336 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %335, %"class.WTF::StringImpl"** %336, align 8
  %337 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #7
  %338 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 0, i32 0
  %339 = load %"class.v8::String"*, %"class.v8::String"** %338, align 8
  %340 = icmp eq %"class.v8::String"* %339, null
  br i1 %340, label %343, label %341, !prof !3

341:                                              ; preds = %334
  %342 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %339, i32 0) #7
  br label %364

343:                                              ; preds = %334
  %344 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 1, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %364, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %364

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  %355 = zext i32 %354 to i33
  %356 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %355, i33 1) #7
  %357 = extractvalue { i33, i1 } %356, 1
  %358 = extractvalue { i33, i1 } %356, 0
  %359 = icmp slt i33 %358, 0
  %360 = or i1 %357, %359
  br i1 %360, label %361, label %362, !prof !3

361:                                              ; preds = %352
  call void @llvm.trap() #7
  unreachable

362:                                              ; preds = %352
  %363 = trunc i33 %358 to i32
  store i32 %363, i32* %353, align 4
  br label %364

364:                                              ; preds = %341, %343, %347, %362
  %365 = phi %"class.WTF::StringImpl"* [ %342, %341 ], [ null, %343 ], [ %345, %347 ], [ %345, %362 ]
  %366 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %365, %"class.WTF::StringImpl"** %366, align 8
  %367 = call %"class.blink::PerformanceMeasure"* @_ZN5blink11Performance7measureEPNS_11ScriptStateERKN3WTF12AtomicStringEPKNS_40V8UnionPerformanceMeasureOptionsOrStringERKNS3_6StringERNS_14ExceptionStateE(%"class.blink::Performance"* %85, %"class.blink::ScriptState"* %135, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.blink::V8UnionPerformanceMeasureOptionsOrString"* %226, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %368, null
  br i1 %369, label %383, label %370

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  br i1 %374, label %377, label %379

377:                                              ; preds = %370
  %378 = add i32 %376, -1
  store i32 %378, i32* %375, align 4
  br label %379

379:                                              ; preds = %377, %370
  %380 = phi i32 [ %378, %377 ], [ %376, %370 ]
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %368) #7
  br label %383

383:                                              ; preds = %364, %379, %382
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #7
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %384, null
  br i1 %385, label %399, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  br i1 %390, label %393, label %395

393:                                              ; preds = %386
  %394 = add i32 %392, -1
  store i32 %394, i32* %391, align 4
  br label %395

395:                                              ; preds = %393, %386
  %396 = phi i32 [ %394, %393 ], [ %392, %386 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %384) #7
  br label %399

399:                                              ; preds = %383, %395, %398
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #7
  br label %400

400:                                              ; preds = %296, %399
  %401 = phi %"class.blink::PerformanceMeasure"* [ %367, %399 ], [ inttoptr (i64 -6148914691236517206 to %"class.blink::PerformanceMeasure"*), %296 ]
  %402 = phi i32 [ 0, %399 ], [ 1, %296 ]
  %403 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %404 = load i8*, i8** %403, align 8
  store i8* null, i8** %403, align 8
  %405 = icmp eq i8* %404, null
  br i1 %405, label %407, label %406

406:                                              ; preds = %400
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %404) #7
  br label %407

407:                                              ; preds = %406, %400
  %408 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 1, i32 0, i32 0
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %409, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %409) #7
  br label %424

424:                                              ; preds = %407, %420, %423
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %283) #7
  br label %425

425:                                              ; preds = %220, %148, %281, %424
  %426 = phi %"class.blink::PerformanceMeasure"* [ inttoptr (i64 -6148914691236517206 to %"class.blink::PerformanceMeasure"*), %148 ], [ %265, %281 ], [ %401, %424 ], [ inttoptr (i64 -6148914691236517206 to %"class.blink::PerformanceMeasure"*), %220 ]
  %427 = phi i32 [ 1, %148 ], [ 6, %281 ], [ %402, %424 ], [ 1, %220 ]
  %428 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %429 = load i8*, i8** %428, align 8
  store i8* null, i8** %428, align 8
  %430 = icmp eq i8* %429, null
  br i1 %430, label %432, label %431

431:                                              ; preds = %425
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %429) #7
  br label %432

432:                                              ; preds = %431, %425
  %433 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %434 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %433, align 8
  %435 = icmp eq %"class.WTF::StringImpl"* %434, null
  br i1 %435, label %449, label %436

436:                                              ; preds = %432
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = and i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 0
  %442 = load i32, i32* %441, align 4
  br i1 %440, label %443, label %445

443:                                              ; preds = %436
  %444 = add i32 %442, -1
  store i32 %444, i32* %441, align 4
  br label %445

445:                                              ; preds = %443, %436
  %446 = phi i32 [ %444, %443 ], [ %442, %436 ]
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %449

448:                                              ; preds = %445
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %434) #7
  br label %449

449:                                              ; preds = %432, %445, %448
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %136) #7
  switch i32 %427, label %487 [
    i32 0, label %450
    i32 6, label %450
  ]

450:                                              ; preds = %449, %449
  %451 = load i32, i32* %34, align 8
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %487

453:                                              ; preds = %450
  %454 = getelementptr inbounds %"class.blink::PerformanceMeasure", %"class.blink::PerformanceMeasure"* %426, i64 0, i32 0, i32 0
  %455 = icmp eq %"class.blink::PerformanceMeasure"* %426, null
  %456 = load i64*, i64** %9, align 8
  %457 = getelementptr inbounds i64, i64* %456, i64 3
  br i1 %455, label %458, label %464, !prof !3

458:                                              ; preds = %453
  %459 = getelementptr inbounds i64, i64* %456, i64 1
  %460 = load i64, i64* %459, align 8
  %461 = add i64 %460, 176
  %462 = inttoptr i64 %461 to i64*
  %463 = load i64, i64* %462, align 8
  store i64 %463, i64* %457, align 8
  br label %487

464:                                              ; preds = %453
  %465 = bitcast i8* %84 to %"class.blink::ScriptWrappable"*
  %466 = load i64*, i64** %61, align 8
  %467 = getelementptr inbounds i64, i64* %466, i64 -1
  %468 = bitcast i64* %467 to %"class.v8::Object"*
  %469 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %457, %"class.blink::ScriptWrappable"* nonnull %454, %"class.v8::Object"* %468, %"class.blink::ScriptWrappable"* %465) #7
  br i1 %469, label %487, label %470

470:                                              ; preds = %464
  %471 = load i64*, i64** %61, align 8
  %472 = getelementptr inbounds i64, i64* %471, i64 -1
  %473 = bitcast i64* %472 to %"class.v8::Object"*
  %474 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %473) #7
  %475 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %474) #7
  %476 = bitcast %"class.blink::PerformanceMeasure"* %426 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %477 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %476, align 8
  %478 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %477, i64 7
  %479 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %478, align 8
  %480 = call %"class.v8::Value"* %479(%"class.blink::ScriptWrappable"* nonnull %454, %"class.blink::ScriptState"* %475) #7
  %481 = icmp eq %"class.v8::Value"* %480, null
  br i1 %481, label %487, label %482

482:                                              ; preds = %470
  %483 = load i64*, i64** %9, align 8
  %484 = getelementptr inbounds i64, i64* %483, i64 3
  %485 = bitcast %"class.v8::Value"* %480 to i64*
  %486 = load i64, i64* %485, align 8
  store i64 %486, i64* %484, align 8
  br label %487

487:                                              ; preds = %450, %449, %458, %464, %470, %482, %59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %488 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %489 = load i64*, i64** %488, align 8
  %490 = icmp eq i64* %489, null
  br i1 %490, label %500, label %491

491:                                              ; preds = %487
  %492 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %493 = bitcast %"class.v8::Isolate"* %492 to %"class.v8::internal::Isolate"*
  %494 = load i64, i64* %489, align 8
  %495 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %493, i64 %494) #7
  %496 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %492) #7
  br i1 %496, label %500, label %497

497:                                              ; preds = %491
  %498 = bitcast i64* %495 to %"class.v8::Value"*
  %499 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %492, %"class.v8::Value"* %498) #7
  br label %500

500:                                              ; preds = %497, %491, %487
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #7
  br label %516

516:                                              ; preds = %500, %512, %515
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %26) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance20NowOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #7
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Performance"*
  %25 = tail call double @_ZNK5blink11Performance3nowEv(%"class.blink::Performance"* %24) #7
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %31, double %25) #7
  %33 = icmp eq %"class.v8::Number"* %32, null
  %34 = bitcast %"class.v8::Number"* %32 to i64*
  %35 = getelementptr inbounds i64, i64* %27, i64 2
  %36 = select i1 %33, i64* %35, i64* %34, !prof !3
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance44SetResourceTimingBufferSizeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #7
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !3

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #7
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %95

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::Performance"**
  %60 = load %"class.blink::Performance"*, %"class.blink::Performance"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #7
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::Performance"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::Performance"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::Performance"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %79) #7
  br i1 %80, label %81, label %84, !prof !5

81:                                               ; preds = %77
  %82 = bitcast %"class.v8::Value"* %79 to %"class.v8::Uint32"*
  %83 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %82) #7
  br label %93

84:                                               ; preds = %77
  %85 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %79) #7
  br i1 %85, label %86, label %89, !prof !5

86:                                               ; preds = %84
  %87 = bitcast %"class.v8::Value"* %79 to %"class.v8::Int32"*
  %88 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %87) #7
  br label %93

89:                                               ; preds = %84
  %90 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %91 = load i32, i32* %17, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %86, %81, %89
  %94 = phi i32 [ %90, %89 ], [ %88, %86 ], [ %83, %81 ]
  call void @_ZN5blink11Performance27setResourceTimingBufferSizeEj(%"class.blink::Performance"* %78, i32 %94) #7
  br label %95

95:                                               ; preds = %89, %93, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #7
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #7
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #7
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #7
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance23ToJSONOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ScriptValue", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = bitcast i64* %5 to %"class.v8::Object"*
  %7 = load i64, i64* %5, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %23

21:                                               ; preds = %1
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #7
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi i8* [ %20, %17 ], [ %22, %21 ]
  %25 = bitcast i8* %24 to %"class.blink::Performance"*
  %26 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %6) #7
  %27 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %26)
  %28 = bitcast %"class.blink::ScriptValue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #7
  call void @_ZNK5blink11Performance16toJSONForBindingEPNS_11ScriptStateE(%"class.blink::ScriptValue"* nonnull sret %2, %"class.blink::Performance"* %25, %"class.blink::ScriptState"* %27) #7
  %29 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %2) #7
  %30 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %29) #7
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  br i1 %30, label %41, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds i64, i64* %32, i64 1
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 160
  %37 = icmp eq i64 %36, 0
  %38 = inttoptr i64 %36 to i64*
  %39 = getelementptr inbounds i64, i64* %32, i64 2
  %40 = select i1 %37, i64* %39, i64* %38, !prof !3
  br label %46

41:                                               ; preds = %23
  %42 = icmp eq %"class.v8::Value"* %29, null
  %43 = bitcast %"class.v8::Value"* %29 to i64*
  %44 = getelementptr inbounds i64, i64* %32, i64 2
  %45 = select i1 %42, i64* %44, i64* %43, !prof !3
  br label %46

46:                                               ; preds = %33, %41
  %47 = phi i64* [ %45, %41 ], [ %40, %33 ]
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i64, i64* %32, i64 3
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %51 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %50, align 8
  %52 = icmp eq %"class.blink::DOMWrapperWorld"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %51, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #7
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %51) #7
  %59 = bitcast %"class.blink::DOMWrapperWorld"* %51 to i8*
  call void @free(i8* %59) #7
  br label %60

60:                                               ; preds = %46, %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #7
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.25, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.25, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance31EventCountsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 -1
  %10 = bitcast i64* %9 to %"class.v8::Object"*
  %11 = tail call { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"* %6, %"class.blink::V8PrivateProperty::SymbolKey"* nonnull dereferenceable(1) @_ZZN5blink12_GLOBAL__N_114v8_performance31EventCountsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEEE30kPrivatePropertySaveSameObject) #7
  %12 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %11, 0
  %13 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %11, 1
  %14 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %13) #7
  %15 = tail call %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"* %10, %"class.v8::Context"* %14, %"class.v8::Private"* %12) #7
  %16 = icmp eq %"class.v8::Value"* %15, null
  br i1 %16, label %128, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.v8::Value"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %39

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %39

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, -2
  %38 = icmp eq i32 %37, 10
  br i1 %38, label %42, label %39

39:                                               ; preds = %22, %17, %33
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 3
  store i64 %19, i64* %41, align 8
  br label %128

42:                                               ; preds = %33
  %43 = load i64, i64* %9, align 8
  %44 = add i64 %43, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i64 %43, -4294967296
  %48 = zext i32 %46 to i64
  %49 = or i64 %47, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load i16, i16* %51, align 2
  switch i16 %52, label %57 [
    i16 1057, label %53
    i16 1056, label %53
    i16 1040, label %53
  ]

53:                                               ; preds = %42, %42, %42
  %54 = add i64 %43, 19
  %55 = inttoptr i64 %54 to i8**
  %56 = load i8*, i8** %55, align 1
  br label %59

57:                                               ; preds = %42
  %58 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %10, i32 1) #7
  br label %59

59:                                               ; preds = %53, %57
  %60 = phi i8* [ %56, %53 ], [ %58, %57 ]
  %61 = bitcast i8* %60 to %"class.blink::Performance"*
  %62 = bitcast i8* %60 to %"class.blink::EventCounts"* (%"class.blink::Performance"*)***
  %63 = load %"class.blink::EventCounts"* (%"class.blink::Performance"*)**, %"class.blink::EventCounts"* (%"class.blink::Performance"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::EventCounts"* (%"class.blink::Performance"*)*, %"class.blink::EventCounts"* (%"class.blink::Performance"*)** %63, i64 31
  %65 = load %"class.blink::EventCounts"* (%"class.blink::Performance"*)*, %"class.blink::EventCounts"* (%"class.blink::Performance"*)** %64, align 8
  %66 = tail call %"class.blink::EventCounts"* %65(%"class.blink::Performance"* %61) #7
  %67 = getelementptr inbounds %"class.blink::EventCounts", %"class.blink::EventCounts"* %66, i64 0, i32 0
  %68 = icmp eq %"class.blink::EventCounts"* %66, null
  %69 = load i64*, i64** %2, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 3
  br i1 %68, label %71, label %77, !prof !3

71:                                               ; preds = %59
  %72 = getelementptr inbounds i64, i64* %69, i64 1
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 176
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %70, align 8
  br label %100

77:                                               ; preds = %59
  %78 = bitcast i8* %60 to %"class.blink::ScriptWrappable"*
  %79 = load i64*, i64** %7, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 -1
  %81 = bitcast i64* %80 to %"class.v8::Object"*
  %82 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %70, %"class.blink::ScriptWrappable"* nonnull %67, %"class.v8::Object"* %81, %"class.blink::ScriptWrappable"* %78) #7
  br i1 %82, label %100, label %83

83:                                               ; preds = %77
  %84 = load i64*, i64** %7, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 -1
  %86 = bitcast i64* %85 to %"class.v8::Object"*
  %87 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %86) #7
  %88 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %87) #7
  %89 = bitcast %"class.blink::EventCounts"* %66 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %90 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %90, i64 7
  %92 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %91, align 8
  %93 = tail call %"class.v8::Value"* %92(%"class.blink::ScriptWrappable"* nonnull %67, %"class.blink::ScriptState"* %88) #7
  %94 = icmp eq %"class.v8::Value"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %83
  %96 = load i64*, i64** %2, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 3
  %98 = bitcast %"class.v8::Value"* %93 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %97, align 8
  br label %100

100:                                              ; preds = %71, %77, %83, %95
  %101 = load i64*, i64** %2, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 3
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds i64, i64* %101, i64 1
  %105 = bitcast i64* %104 to %"class.v8::Isolate"**
  %106 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %105, align 8
  %107 = ptrtoint %"class.v8::Isolate"* %106 to i64
  %108 = add i64 %107, 168
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %103, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %100
  %113 = add i64 %107, 160
  %114 = inttoptr i64 %113 to %"class.v8::Value"*
  br label %121

115:                                              ; preds = %100
  %116 = icmp eq i64* %102, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %115
  %118 = bitcast %"class.v8::Isolate"* %106 to %"class.v8::internal::Isolate"*
  %119 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %118, i64 %103) #7
  %120 = bitcast i64* %119 to %"class.v8::Value"*
  br label %121

121:                                              ; preds = %112, %115, %117
  %122 = phi %"class.v8::Value"* [ %114, %112 ], [ %120, %117 ], [ null, %115 ]
  %123 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %13) #7
  %124 = tail call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* %10, %"class.v8::Context"* %123, %"class.v8::Private"* %12, %"class.v8::Value"* %122) #7
  %125 = trunc i16 %124 to i8
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %121
  tail call void @_ZN2v82V817FromJustIsNothingEv() #7
  br label %128

128:                                              ; preds = %1, %127, %121, %39
  ret void
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance26TimingAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #7
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 882) #7
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #7
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::Performance"*
  %42 = bitcast i8* %40 to %"class.blink::PerformanceTiming"* (%"class.blink::Performance"*)***
  %43 = load %"class.blink::PerformanceTiming"* (%"class.blink::Performance"*)**, %"class.blink::PerformanceTiming"* (%"class.blink::Performance"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::PerformanceTiming"* (%"class.blink::Performance"*)*, %"class.blink::PerformanceTiming"* (%"class.blink::Performance"*)** %43, i64 27
  %45 = load %"class.blink::PerformanceTiming"* (%"class.blink::Performance"*)*, %"class.blink::PerformanceTiming"* (%"class.blink::Performance"*)** %44, align 8
  %46 = tail call %"class.blink::PerformanceTiming"* %45(%"class.blink::Performance"* %41) #7
  %47 = getelementptr inbounds %"class.blink::PerformanceTiming", %"class.blink::PerformanceTiming"* %46, i64 0, i32 0
  %48 = icmp eq %"class.blink::PerformanceTiming"* %46, null
  %49 = load i64*, i64** %2, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 3
  br i1 %48, label %51, label %57, !prof !3

51:                                               ; preds = %39
  %52 = getelementptr inbounds i64, i64* %49, i64 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 176
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %50, align 8
  br label %80

57:                                               ; preds = %39
  %58 = bitcast i8* %40 to %"class.blink::ScriptWrappable"*
  %59 = load i64*, i64** %19, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 -1
  %61 = bitcast i64* %60 to %"class.v8::Object"*
  %62 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %50, %"class.blink::ScriptWrappable"* nonnull %47, %"class.v8::Object"* %61, %"class.blink::ScriptWrappable"* %58) #7
  br i1 %62, label %80, label %63

63:                                               ; preds = %57
  %64 = load i64*, i64** %19, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 -1
  %66 = bitcast i64* %65 to %"class.v8::Object"*
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %66) #7
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67) #7
  %69 = bitcast %"class.blink::PerformanceTiming"* %46 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %70 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %70, i64 7
  %72 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %71, align 8
  %73 = tail call %"class.v8::Value"* %72(%"class.blink::ScriptWrappable"* nonnull %47, %"class.blink::ScriptState"* %68) #7
  %74 = icmp eq %"class.v8::Value"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %63
  %76 = load i64*, i64** %2, align 8
  %77 = getelementptr inbounds i64, i64* %76, i64 3
  %78 = bitcast %"class.v8::Value"* %73 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %77, align 8
  br label %80

80:                                               ; preds = %51, %57, %63, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance30NavigationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #7
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 883) #7
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #7
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::Performance"*
  %42 = bitcast i8* %40 to %"class.blink::PerformanceNavigation"* (%"class.blink::Performance"*)***
  %43 = load %"class.blink::PerformanceNavigation"* (%"class.blink::Performance"*)**, %"class.blink::PerformanceNavigation"* (%"class.blink::Performance"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::PerformanceNavigation"* (%"class.blink::Performance"*)*, %"class.blink::PerformanceNavigation"* (%"class.blink::Performance"*)** %43, i64 28
  %45 = load %"class.blink::PerformanceNavigation"* (%"class.blink::Performance"*)*, %"class.blink::PerformanceNavigation"* (%"class.blink::Performance"*)** %44, align 8
  %46 = tail call %"class.blink::PerformanceNavigation"* %45(%"class.blink::Performance"* %41) #7
  %47 = getelementptr inbounds %"class.blink::PerformanceNavigation", %"class.blink::PerformanceNavigation"* %46, i64 0, i32 0
  %48 = icmp eq %"class.blink::PerformanceNavigation"* %46, null
  %49 = load i64*, i64** %2, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 3
  br i1 %48, label %51, label %57, !prof !3

51:                                               ; preds = %39
  %52 = getelementptr inbounds i64, i64* %49, i64 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 176
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %50, align 8
  br label %80

57:                                               ; preds = %39
  %58 = bitcast i8* %40 to %"class.blink::ScriptWrappable"*
  %59 = load i64*, i64** %19, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 -1
  %61 = bitcast i64* %60 to %"class.v8::Object"*
  %62 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %50, %"class.blink::ScriptWrappable"* nonnull %47, %"class.v8::Object"* %61, %"class.blink::ScriptWrappable"* %58) #7
  br i1 %62, label %80, label %63

63:                                               ; preds = %57
  %64 = load i64*, i64** %19, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 -1
  %66 = bitcast i64* %65 to %"class.v8::Object"*
  %67 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %66) #7
  %68 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67) #7
  %69 = bitcast %"class.blink::PerformanceNavigation"* %46 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %70 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %70, i64 7
  %72 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %71, align 8
  %73 = tail call %"class.v8::Value"* %72(%"class.blink::ScriptWrappable"* nonnull %47, %"class.blink::ScriptState"* %68) #7
  %74 = icmp eq %"class.v8::Value"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %63
  %76 = load i64*, i64** %2, align 8
  %77 = getelementptr inbounds i64, i64* %76, i64 3
  %78 = bitcast %"class.v8::Value"* %73 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %77, align 8
  br label %80

80:                                               ; preds = %51, %57, %63, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance26MemoryAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #7
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 884) #7
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = bitcast i64* %21 to %"class.v8::Object"*
  %23 = load i64, i64* %21, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %18, %18, %18
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %39

37:                                               ; preds = %18
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #7
  br label %39

39:                                               ; preds = %33, %37
  %40 = phi i8* [ %36, %33 ], [ %38, %37 ]
  %41 = bitcast i8* %40 to %"class.blink::Performance"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %22) #7
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = bitcast i8* %40 to %"class.blink::MemoryInfo"* (%"class.blink::Performance"*, %"class.blink::ScriptState"*)***
  %45 = load %"class.blink::MemoryInfo"* (%"class.blink::Performance"*, %"class.blink::ScriptState"*)**, %"class.blink::MemoryInfo"* (%"class.blink::Performance"*, %"class.blink::ScriptState"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.blink::MemoryInfo"* (%"class.blink::Performance"*, %"class.blink::ScriptState"*)*, %"class.blink::MemoryInfo"* (%"class.blink::Performance"*, %"class.blink::ScriptState"*)** %45, i64 29
  %47 = load %"class.blink::MemoryInfo"* (%"class.blink::Performance"*, %"class.blink::ScriptState"*)*, %"class.blink::MemoryInfo"* (%"class.blink::Performance"*, %"class.blink::ScriptState"*)** %46, align 8
  %48 = tail call %"class.blink::MemoryInfo"* %47(%"class.blink::Performance"* %41, %"class.blink::ScriptState"* %43) #7
  %49 = getelementptr inbounds %"class.blink::MemoryInfo", %"class.blink::MemoryInfo"* %48, i64 0, i32 0
  %50 = icmp eq %"class.blink::MemoryInfo"* %48, null
  %51 = load i64*, i64** %2, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 3
  br i1 %50, label %53, label %59, !prof !3

53:                                               ; preds = %39
  %54 = getelementptr inbounds i64, i64* %51, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 176
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %52, align 8
  br label %82

59:                                               ; preds = %39
  %60 = bitcast i8* %40 to %"class.blink::ScriptWrappable"*
  %61 = load i64*, i64** %19, align 8
  %62 = getelementptr inbounds i64, i64* %61, i64 -1
  %63 = bitcast i64* %62 to %"class.v8::Object"*
  %64 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %52, %"class.blink::ScriptWrappable"* nonnull %49, %"class.v8::Object"* %63, %"class.blink::ScriptWrappable"* %60) #7
  br i1 %64, label %82, label %65

65:                                               ; preds = %59
  %66 = load i64*, i64** %19, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 -1
  %68 = bitcast i64* %67 to %"class.v8::Object"*
  %69 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %68) #7
  %70 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %69) #7
  %71 = bitcast %"class.blink::MemoryInfo"* %48 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %72 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %71, align 8
  %73 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %72, i64 7
  %74 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %73, align 8
  %75 = tail call %"class.v8::Value"* %74(%"class.blink::ScriptWrappable"* nonnull %49, %"class.blink::ScriptState"* %70) #7
  %76 = icmp eq %"class.v8::Value"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %65
  %78 = load i64*, i64** %2, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 3
  %80 = bitcast %"class.v8::Value"* %75 to i64*
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %53, %59, %65, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance47MeasureUserAgentSpecificMemoryOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %4 = alloca %"class.blink::ScriptPromise", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 -1
  %13 = bitcast i64* %12 to %"class.v8::Object"*
  %14 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %19 = bitcast i8** %18 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0)>, <2 x i8*>* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %24 = bitcast %"class.WTF::StringImpl"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #7
  %25 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %26, align 8
  store %"class.blink::ExceptionState"* %2, %"class.blink::ExceptionState"** %27, align 8
  %28 = bitcast i64* %12 to %"class.v8::Value"*
  %29 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to %"class.blink::V8PerIsolateData"**
  %32 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %31, align 8
  %33 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %32, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8Performance18wrapper_type_info_E, %"class.v8::Value"* %28) #7
  br i1 %33, label %35, label %34

34:                                               ; preds = %1
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0)) #7
  br label %98

35:                                               ; preds = %1
  %36 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #7
  %37 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %36) #7
  %38 = icmp eq %"class.blink::ExecutionContext"* %37, null
  %39 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %37, i64 0, i32 3
  %40 = icmp eq %"class.blink::UseCounter"* %39, null
  %41 = or i1 %38, %40
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::UseCounter"* %39 to void (%"class.blink::UseCounter"*, i32)***
  %44 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %44, i64 3
  %46 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %45, align 8
  call void %46(%"class.blink::UseCounter"* nonnull %39, i32 3139) #7
  br label %47

47:                                               ; preds = %35, %42
  %48 = load i64, i64* %12, align 8
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i64 %48, -4294967296
  %53 = zext i32 %51 to i64
  %54 = or i64 %52, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load i16, i16* %56, align 2
  switch i16 %57, label %62 [
    i16 1057, label %58
    i16 1056, label %58
    i16 1040, label %58
  ]

58:                                               ; preds = %47, %47, %47
  %59 = add i64 %48, 19
  %60 = inttoptr i64 %59 to i8**
  %61 = load i8*, i8** %60, align 1
  br label %64

62:                                               ; preds = %47
  %63 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %13, i32 1) #7
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi i8* [ %61, %58 ], [ %63, %62 ]
  %66 = bitcast i8* %65 to %"class.blink::Performance"*
  %67 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %13) #7
  %68 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = bitcast %"class.blink::ScriptPromise"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #7
  %70 = bitcast i8* %65 to void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)***
  %71 = load void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)** %71, i64 30
  %73 = load void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)** %72, align 8
  call void %73(%"class.blink::ScriptPromise"* nonnull sret %4, %"class.blink::Performance"* %66, %"class.blink::ScriptState"* %68, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %74 = load i32, i32* %22, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %86

76:                                               ; preds = %64
  %77 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %4, i64 0, i32 1
  %78 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %77) #7
  %79 = load i64*, i64** %5, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 3
  %81 = icmp eq %"class.v8::Value"* %78, null
  %82 = bitcast %"class.v8::Value"* %78 to i64*
  %83 = getelementptr inbounds i64, i64* %79, i64 2
  %84 = select i1 %81, i64* %83, i64* %82, !prof !3
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %80, align 8
  br label %86

86:                                               ; preds = %64, %76
  %87 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %4, i64 0, i32 1, i32 1, i32 1, i32 0
  %88 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %87, align 8
  %89 = icmp eq %"class.blink::DOMWrapperWorld"* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %88, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #7
  %92 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %88) #7
  %96 = bitcast %"class.blink::DOMWrapperWorld"* %88 to i8*
  call void @free(i8* %96) #7
  br label %97

97:                                               ; preds = %86, %90, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #7
  br label %98

98:                                               ; preds = %97, %34
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %99 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = icmp eq i64* %100, null
  br i1 %101, label %111, label %102

102:                                              ; preds = %98
  %103 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %104 = bitcast %"class.v8::Isolate"* %103 to %"class.v8::internal::Isolate"*
  %105 = load i64, i64* %100, align 8
  %106 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %104, i64 %105) #7
  %107 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %103) #7
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = bitcast i64* %106 to %"class.v8::Value"*
  %110 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %103, %"class.v8::Value"* %109) #7
  br label %111

111:                                              ; preds = %108, %102, %98
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #7
  br label %127

127:                                              ; preds = %111, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #7
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase29ExperimentalJSProfilerEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_114v8_performance24ProfileOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::ScriptPromise", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 -1
  %14 = bitcast i64* %13 to %"class.v8::Object"*
  %15 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %20 = bitcast i8** %19 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0)>, <2 x i8*>* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringImpl"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #7
  %26 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %27, align 8
  store %"class.blink::ExceptionState"* %2, %"class.blink::ExceptionState"** %28, align 8
  %29 = bitcast i64* %13 to %"class.v8::Value"*
  %30 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %31 = add i64 %30, 8
  %32 = inttoptr i64 %31 to %"class.blink::V8PerIsolateData"**
  %33 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %32, align 8
  %34 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %33, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8Performance18wrapper_type_info_E, %"class.v8::Value"* %29) #7
  br i1 %34, label %36, label %35

35:                                               ; preds = %1
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0)) #7
  br label %136

36:                                               ; preds = %1
  %37 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %10) #7
  %38 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %37) #7
  %39 = icmp eq %"class.blink::ExecutionContext"* %38, null
  %40 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %38, i64 0, i32 3
  %41 = icmp eq %"class.blink::UseCounter"* %40, null
  %42 = or i1 %39, %41
  br i1 %42, label %48, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::UseCounter"* %40 to void (%"class.blink::UseCounter"*, i32)***
  %45 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %45, i64 3
  %47 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %46, align 8
  call void %47(%"class.blink::UseCounter"* nonnull %40, i32 3008) #7
  br label %48

48:                                               ; preds = %36, %43
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp slt i32 %50, 1
  br i1 %51, label %52, label %72, !prof !3

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  %54 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %50) #7
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #7
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #7
  br label %71

71:                                               ; preds = %52, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #7
  br label %136

72:                                               ; preds = %48
  %73 = load i64, i64* %13, align 8
  %74 = add i64 %73, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = and i64 %73, -4294967296
  %78 = zext i32 %76 to i64
  %79 = or i64 %77, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load i16, i16* %81, align 2
  switch i16 %82, label %87 [
    i16 1057, label %83
    i16 1056, label %83
    i16 1040, label %83
  ]

83:                                               ; preds = %72, %72, %72
  %84 = add i64 %73, 19
  %85 = inttoptr i64 %84 to i8**
  %86 = load i8*, i8** %85, align 1
  br label %89

87:                                               ; preds = %72
  %88 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %14, i32 1) #7
  br label %89

89:                                               ; preds = %83, %87
  %90 = phi i8* [ %86, %83 ], [ %88, %87 ]
  %91 = bitcast i8* %90 to %"class.blink::Performance"*
  %92 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %14) #7
  %93 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %92)
  %94 = load i32, i32* %49, align 8
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %89
  %97 = load i64*, i64** %6, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %105

102:                                              ; preds = %89
  %103 = bitcast i64** %11 to %"class.v8::Value"**
  %104 = load %"class.v8::Value"*, %"class.v8::Value"** %103, align 8
  br label %105

105:                                              ; preds = %96, %102
  %106 = phi %"class.v8::Value"* [ %101, %96 ], [ %104, %102 ]
  %107 = call %"class.blink::ProfilerInitOptions"* @_ZN5blink17NativeValueTraitsINS_19ProfilerInitOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %106, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %108 = load i32, i32* %23, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %136

110:                                              ; preds = %105
  %111 = bitcast %"class.blink::ScriptPromise"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111) #7
  call void @_ZN5blink11Performance7profileEPNS_11ScriptStateEPKNS_19ProfilerInitOptionsERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %5, %"class.blink::Performance"* %91, %"class.blink::ScriptState"* %93, %"class.blink::ProfilerInitOptions"* %107, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #7
  %112 = load i32, i32* %23, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1
  %116 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %115) #7
  %117 = load i64*, i64** %6, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 3
  %119 = icmp eq %"class.v8::Value"* %116, null
  %120 = bitcast %"class.v8::Value"* %116 to i64*
  %121 = getelementptr inbounds i64, i64* %117, i64 2
  %122 = select i1 %119, i64* %121, i64* %120, !prof !3
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %118, align 8
  br label %124

124:                                              ; preds = %110, %114
  %125 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1, i32 1, i32 1, i32 0
  %126 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %125, align 8
  %127 = icmp eq %"class.blink::DOMWrapperWorld"* %126, null
  br i1 %127, label %135, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %126, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %129) #7
  %130 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %126) #7
  %134 = bitcast %"class.blink::DOMWrapperWorld"* %126 to i8*
  call void @free(i8* %134) #7
  br label %135

135:                                              ; preds = %124, %128, %133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #7
  br label %136

136:                                              ; preds = %105, %71, %135, %35
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %137 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %138 = load i64*, i64** %137, align 8
  %139 = icmp eq i64* %138, null
  br i1 %139, label %149, label %140

140:                                              ; preds = %136
  %141 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %142 = bitcast %"class.v8::Isolate"* %141 to %"class.v8::internal::Isolate"*
  %143 = load i64, i64* %138, align 8
  %144 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %142, i64 %143) #7
  %145 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %141) #7
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = bitcast i64* %144 to %"class.v8::Value"*
  %148 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %141, %"class.v8::Value"* %147) #7
  br label %149

149:                                              ; preds = %146, %140, %136
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #7
  br label %165

165:                                              ; preds = %149, %161, %164
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #7
  ret void
}

declare double @_ZNK5blink11Performance10timeOriginEv(%"class.blink::Performance"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #2

declare %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink11Performance10clearMarksERKN3WTF12AtomicStringE(%"class.blink::Performance"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.353"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #7
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #7
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #7
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.353"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #7
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #7
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #7
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.353"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #7
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN5blink11Performance13clearMeasuresERKN3WTF12AtomicStringE(%"class.blink::Performance"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11Performance20clearResourceTimingsEv(%"class.blink::Performance"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN5blink11Performance10getEntriesEv(%"class.blink::HeapVector.291"* sret, %"class.blink::Performance"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.blink::HeapVector.362"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #7
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #7
  %17 = getelementptr inbounds %"class.blink::HeapVector.362", %"class.blink::HeapVector.362"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !5

20:                                               ; preds = %15
  tail call void @llvm.trap() #7
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #7
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #7
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #7
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.blink::HeapVector.362", %"class.blink::HeapVector.362"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.368"*, %"class.blink::Member.368"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %75, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.logging::CheckError"* %3 to i8*
  %42 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %43

43:                                               ; preds = %40, %71
  %44 = phi i32 [ 0, %40 ], [ %72, %71 ]
  %45 = phi %"class.blink::Member.368"* [ %35, %40 ], [ %73, %71 ]
  %46 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %46, align 8
  %48 = icmp eq %"class.blink::ScriptWrappable"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.20, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0)) #7
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #7
  br label %51

51:                                               ; preds = %49, %43
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %53 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* %47, %"class.v8::Isolate"* %52) #7
  %54 = bitcast %"class.v8::Object"* %53 to %"class.v8::Value"*
  %55 = icmp eq %"class.v8::Object"* %53, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::ScriptWrappable"* %47 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %58 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %58, i64 7
  %60 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, align 8
  %61 = call %"class.v8::Value"* %60(%"class.blink::ScriptWrappable"* %47, %"class.blink::ScriptState"* %0) #7
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi %"class.v8::Value"* [ %61, %56 ], [ %54, %51 ]
  %64 = icmp eq %"class.v8::Value"* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %33, i32 %44, %"class.v8::Value"* nonnull %63) #7
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %77, label %71, !prof !6

71:                                               ; preds = %65
  %72 = add i32 %44, 1
  %73 = getelementptr inbounds %"class.blink::Member.368", %"class.blink::Member.368"* %45, i64 1
  %74 = icmp eq %"class.blink::Member.368"* %73, %38
  br i1 %74, label %75, label %43

75:                                               ; preds = %71, %32
  %76 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %77

77:                                               ; preds = %62, %65, %75
  %78 = phi %"class.v8::Value"* [ %76, %75 ], [ null, %65 ], [ null, %62 ]
  ret %"class.v8::Value"* %78
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #7
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #7
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #7
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #7
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #7
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink11Performance16getEntriesByNameERKN3WTF12AtomicStringES4_(%"class.blink::HeapVector.291"* sret, %"class.blink::Performance"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink11Performance16getEntriesByTypeERKN3WTF12AtomicStringE(%"class.blink::HeapVector.291"* sret, %"class.blink::Performance"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::PerformanceMark"* @_ZN5blink11Performance4markEPNS_11ScriptStateERKN3WTF12AtomicStringEPNS_22PerformanceMarkOptionsERNS_14ExceptionStateE(%"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::PerformanceMarkOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22PerformanceMarkOptionsC1Ev(%"class.blink::PerformanceMarkOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.212"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.212"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.212"*) local_unnamed_addr #2

declare %"class.blink::PerformanceMarkOptions"* @_ZN5blink17NativeValueTraitsINS_22PerformanceMarkOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #7
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #7
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !3
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #7
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.blink::PerformanceMeasure"* @_ZN5blink11Performance7measureEPNS_11ScriptStateERKN3WTF12AtomicStringEPKNS_40V8UnionPerformanceMeasureOptionsOrStringERNS_14ExceptionStateE(%"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::V8UnionPerformanceMeasureOptionsOrString"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::PerformanceMeasure"* @_ZN5blink11Performance7measureEPNS_11ScriptStateERKN3WTF12AtomicStringEPKNS_40V8UnionPerformanceMeasureOptionsOrStringERKNS3_6StringERNS_14ExceptionStateE(%"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::V8UnionPerformanceMeasureOptionsOrString"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.212"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.212"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink25PerformanceMeasureOptionsC1Ev(%"class.blink::PerformanceMeasureOptions"*) unnamed_addr #2

declare %"class.blink::V8UnionPerformanceMeasureOptionsOrString"* @_ZN5blink40V8UnionPerformanceMeasureOptionsOrString6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare double @_ZNK5blink11Performance3nowEv(%"class.blink::Performance"*) local_unnamed_addr #2

declare void @_ZN5blink11Performance27setResourceTimingBufferSizeEj(%"class.blink::Performance"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZNK5blink11Performance16toJSONForBindingEPNS_11ScriptStateE(%"class.blink::ScriptValue"* sret, %"class.blink::Performance"*, %"class.blink::ScriptState"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"*, %"class.blink::V8PrivateProperty::SymbolKey"* dereferenceable(1)) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ScriptPromise", align 8
  %3 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 1
  %4 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 0
  %10 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %10, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 1
  %14 = bitcast i64* %13 to %"class.v8::Isolate"**
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %15) #7
  %17 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %16) #7
  %18 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %19 = bitcast %"class.blink::ScriptPromise"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  %20 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  call void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %2, %"class.blink::ScriptState"* %17, %"class.blink::ExceptionState"* dereferenceable(72) %20) #7
  %21 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1
  %22 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %21) #7
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %18, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 3
  %26 = icmp eq %"class.v8::Value"* %22, null
  %27 = bitcast %"class.v8::Value"* %22 to i64*
  %28 = getelementptr inbounds i64, i64* %24, i64 2
  %29 = select i1 %26, i64* %28, i64* %27, !prof !3
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %25, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1, i32 1, i32 1, i32 0
  %32 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %31, align 8
  %33 = icmp eq %"class.blink::DOMWrapperWorld"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #7
  %36 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %32) #7
  %40 = bitcast %"class.blink::DOMWrapperWorld"* %32 to i8*
  call void @free(i8* %40) #7
  br label %41

41:                                               ; preds = %8, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  br label %42

42:                                               ; preds = %1, %41
  ret void
}

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink11Performance7profileEPNS_11ScriptStateEPKNS_19ProfilerInitOptionsERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ProfilerInitOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ProfilerInitOptions"* @_ZN5blink17NativeValueTraitsINS_19ProfilerInitOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!"branch_weights", i32 2002, i32 2000}
