; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_dependence.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_dependence.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::opt::LoopDependenceAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.910", %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.std::__1::basic_ostream"*, %"class.std::__1::list" }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.941" }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.912", %"class.std::__1::unordered_set.919", i8, [7 x i8] }>
%"class.std::__1::vector.912" = type { %"class.std::__1::__vector_base.913" }
%"class.std::__1::__vector_base.913" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::unordered_set.919" = type { %"class.std::__1::__hash_table.920" }
%"class.std::__1::__hash_table.920" = type <{ %"class.std::__1::unique_ptr.921", %"class.std::__1::__compressed_pair.931", %"class.std::__1::__compressed_pair.936", %"class.std::__1::__compressed_pair.938", [4 x i8] }>
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923", %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.924"** }
%"struct.std::__1::__hash_node_base.924" = type { %"struct.std::__1::__hash_node_base.924"* }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.std::__1::__bucket_list_deallocator.926" }
%"class.std::__1::__bucket_list_deallocator.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.924" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.946" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::DistanceVector" = type { %"class.std::__1::vector.950" }
%"class.std::__1::vector.950" = type { %"class.std::__1::__vector_base.951" }
%"class.std::__1::__vector_base.951" = type { %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"*, %"class.std::__1::__compressed_pair.952" }
%"class.spvtools::opt::DistanceEntry" = type { i32, i32, i64, i8, i8, i64, i64 }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.spvtools::opt::DistanceEntry"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.962" = type { %"class.std::__1::__vector_base.963" }
%"class.std::__1::__vector_base.963" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.std::__1::set.971"*, %"class.std::__1::set.971"*, %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::set.971" = type { %"class.std::__1::__tree.972" }
%"class.std::__1::__tree.972" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.std::__1::set.971"* }
%"struct.std::__1::pair.983" = type { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* }
%"class.std::__1::set.984" = type { %"class.std::__1::__tree.985" }
%"class.std::__1::__tree.985" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.986", %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.993" = type { %"class.std::__1::__vector_base.994" }
%"class.std::__1::__vector_base.994" = type { %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"*, %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::pair.983"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.1083" = type { %"class.std::__1::__tree_node_base.base", %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.1002" = type { %"class.std::__1::__vector_base.1003" }
%"class.std::__1::__vector_base.1003" = type { %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"**, %"class.std::__1::__compressed_pair.1004" }
%"class.spvtools::opt::SERecurrentNode" = type { %"class.spvtools::opt::SENode.base", %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::Loop"* }
%"class.spvtools::opt::SENode.base" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32 }>
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"class.spvtools::opt::SERecurrentNode"** }
%"class.std::__1::vector.1019" = type { %"class.std::__1::__vector_base.1020" }
%"class.std::__1::__vector_base.1020" = type { %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"**, %"class.std::__1::__compressed_pair.1021" }
%"class.spvtools::opt::SEConstantNode" = type { %"class.spvtools::opt::SENode.base", i64 }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.spvtools::opt::SEConstantNode"** }
%"class.std::__1::vector.1031" = type { %"class.std::__1::__vector_base.1032" }
%"class.std::__1::__vector_base.1032" = type { %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"**, %"class.std::__1::__compressed_pair.1033" }
%"class.spvtools::opt::Constraint" = type { i32 (...)**, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.spvtools::opt::Constraint"** }
%"class.std::__1::vector.1039" = type { i64*, i64, %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.1044" = type { %"class.std::__1::__vector_base.1045" }
%"class.std::__1::__vector_base.1045" = type { %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"*, %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.spvtools::opt::DistanceVector"* }
%"class.std::__1::vector.1054" = type { %"class.std::__1::__vector_base.1055" }
%"class.std::__1::__vector_base.1055" = type { %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"*, %"class.std::__1::__compressed_pair.1057" }
%"struct.std::__1::pair.1056" = type { %"class.spvtools::opt::Constraint"*, i64 }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.std::__1::pair.1056"* }
%"class.spvtools::opt::DependenceEmpty" = type { %"class.spvtools::opt::Constraint" }
%"class.spvtools::opt::DependenceDistance" = type { %"class.spvtools::opt::Constraint", %"class.spvtools::opt::SENode"* }
%"class.spvtools::opt::DependencePoint" = type { %"class.spvtools::opt::Constraint", %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"**, %"class.std::__1::__compressed_pair.1012" }
%"class.spvtools::opt::SEValueUnknown" = type { %"class.spvtools::opt::SENode.base", i32 }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.spvtools::opt::SEValueUnknown"** }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.spvtools::opt::SEAddNode" = type { %"class.spvtools::opt::SENode.base", [4 x i8] }
%"class.spvtools::opt::DependenceNone" = type { %"class.spvtools::opt::Constraint" }
%"class.spvtools::opt::DependenceLine" = type { %"class.spvtools::opt::Constraint", %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* }

$_ZN8spvtools3opt6SENode21CollectRecurrentNodesEv = comdat any

$_ZN8spvtools3opt6SENode24CollectValueUnknownNodesEv = comdat any

$_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_ = comdat any

$_ZNSt3__13setINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE6insertINS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEEEvT_SJ_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt14DistanceVectorENS_9allocatorIS3_EEEC2EmRKS3_ = comdat any

$_ZNSt3__16vectorIPN8spvtools3opt15SERecurrentNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZNSt3__16vectorIPN8spvtools3opt14SEValueUnknownENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZNSt3__16vectorIPN8spvtools3opt14SEConstantNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZNSt3__16__treeIPKN8spvtools3opt4LoopENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16vectorINS_3setINS_4pairIPN8spvtools3opt11InstructionES6_EENS_4lessIS7_EENS_9allocatorIS7_EEEENSA_ISC_EEE21__push_back_slow_pathISC_EEvOT_ = comdat any

$_ZNSt3__13setINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE6insertIPKS6_EEvT_SF_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNK8spvtools3opt15DependenceEmpty7GetTypeEv = comdat any

$_ZN8spvtools3opt15DependenceEmptyD0Ev = comdat any

$_ZN8spvtools3opt10Constraint16AsDependenceLineEv = comdat any

$_ZNK8spvtools3opt10Constraint16AsDependenceLineEv = comdat any

$_ZN8spvtools3opt10Constraint20AsDependenceDistanceEv = comdat any

$_ZNK8spvtools3opt10Constraint20AsDependenceDistanceEv = comdat any

$_ZN8spvtools3opt10Constraint17AsDependencePointEv = comdat any

$_ZNK8spvtools3opt10Constraint17AsDependencePointEv = comdat any

$_ZN8spvtools3opt10Constraint16AsDependenceNoneEv = comdat any

$_ZNK8spvtools3opt10Constraint16AsDependenceNoneEv = comdat any

$_ZN8spvtools3opt15DependenceEmpty17AsDependenceEmptyEv = comdat any

$_ZNK8spvtools3opt15DependenceEmpty17AsDependenceEmptyEv = comdat any

$_ZN8spvtools3opt10Constraint17AsDependenceEmptyEv = comdat any

$_ZNK8spvtools3opt10Constraint17AsDependenceEmptyEv = comdat any

$_ZNK8spvtools3opt15DependencePoint7GetTypeEv = comdat any

$_ZN8spvtools3opt15DependencePointD0Ev = comdat any

$_ZN8spvtools3opt15DependencePoint17AsDependencePointEv = comdat any

$_ZNK8spvtools3opt15DependencePoint17AsDependencePointEv = comdat any

$_ZNK8spvtools3opt14DependenceNone7GetTypeEv = comdat any

$_ZN8spvtools3opt10ConstraintD2Ev = comdat any

$_ZN8spvtools3opt14DependenceNoneD0Ev = comdat any

$_ZN8spvtools3opt14DependenceNone16AsDependenceNoneEv = comdat any

$_ZNK8spvtools3opt14DependenceNone16AsDependenceNoneEv = comdat any

$_ZNK8spvtools3opt18DependenceDistance7GetTypeEv = comdat any

$_ZN8spvtools3opt18DependenceDistanceD0Ev = comdat any

$_ZN8spvtools3opt18DependenceDistance20AsDependenceDistanceEv = comdat any

$_ZNK8spvtools3opt18DependenceDistance20AsDependenceDistanceEv = comdat any

$_ZNK8spvtools3opt14DependenceLine7GetTypeEv = comdat any

$_ZN8spvtools3opt14DependenceLineD0Ev = comdat any

$_ZN8spvtools3opt14DependenceLine16AsDependenceLineEv = comdat any

$_ZNK8spvtools3opt14DependenceLine16AsDependenceLineEv = comdat any

$_ZTVN8spvtools3opt15DependenceEmptyE = comdat any

$_ZTVN8spvtools3opt15DependencePointE = comdat any

$_ZTVN8spvtools3opt14DependenceNoneE = comdat any

$_ZTVN8spvtools3opt18DependenceDistanceE = comdat any

$_ZTVN8spvtools3opt14DependenceLineE = comdat any

@.str = private unnamed_addr constant [46 x i8] c"Proved independence through different arrays.\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"GetDependence found an unsupported loop form. Assuming <=> for loop.\00", align 1
@.str.2 = private unnamed_addr constant [112 x i8] c"GetDependence found source_node || destination_node as CanNotCompute. Abandoning evaluation for this subscript.\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Found a ZIV subscript pair\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"Proved independence with ZIVTest.\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"Found a SIV subscript pair.\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"Proved independence with SIVTest.\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Found a MIV subscript pair.\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"Proved independence with the GCD test.\00", align 1
@.str.9 = private unnamed_addr constant [112 x i8] c"Couldn't prove independence.\0AAll possible direction information has been collected in the input DistanceVector.\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Performing ZIVTest\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"ZIVTest found EQ dependence.\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"ZIVTest found independence.\00", align 1
@.str.13 = private unnamed_addr constant [67 x i8] c"SIVTest could not find a DistanceEntry for subscript_pair. Exiting\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"Found source has no induction variable.\00", align 1
@.str.15 = private unnamed_addr constant [48 x i8] c"Proved independence with WeakZeroSourceSIVTest.\00", align 1
@.str.16 = private unnamed_addr constant [45 x i8] c"Found destination has no induction variable.\00", align 1
@.str.17 = private unnamed_addr constant [53 x i8] c"Proved independence with WeakZeroDestinationSIVTest.\00", align 1
@.str.18 = private unnamed_addr constant [56 x i8] c"Found source and destination have 1 induction variable.\00", align 1
@.str.19 = private unnamed_addr constant [48 x i8] c"Found source and destination share coefficient.\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"Proved independence with StrongSIVTest\00", align 1
@.str.21 = private unnamed_addr constant [53 x i8] c"Found source coefficient = -destination coefficient.\00", align 1
@.str.22 = private unnamed_addr constant [45 x i8] c"Proved independence with WeakCrossingSIVTest\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"Performing StrongSIVTest.\00", align 1
@.str.24 = private unnamed_addr constant [67 x i8] c"StrongSIVTest found symbolics. Will attempt SymbolicStrongSIVTest.\00", align 1
@.str.25 = private unnamed_addr constant [90 x i8] c"StrongSIVTest could not simplify source and destination to SERecurrentNodes so will exit.\00", align 1
@.str.26 = private unnamed_addr constant [97 x i8] c"StrongSIVTest could not collect the constant terms of either source or destination so will exit.\00", align 1
@.str.27 = private unnamed_addr constant [95 x i8] c"StrongSIVTest found delta value and coefficient value as constants with values:\0A\09delta value: \00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"\0A\09coefficient value: \00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.30 = private unnamed_addr constant [73 x i8] c"StrongSIVTest proved independence through distance not being an integer.\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"StrongSIV test found distance as \00", align 1
@.str.32 = private unnamed_addr constant [55 x i8] c"StrongSIVTest could not produce a distance. Must exit.\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"StrongSIVTest found bounds.\00", align 1
@.str.34 = private unnamed_addr constant [72 x i8] c"StrongSIVTest found upper_bound - lower_bound as a constant with value \00", align 1
@.str.35 = private unnamed_addr constant [77 x i8] c"StrongSIVTest proved independence through distance escaping the loop bounds.\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"StrongSIVTest was unable to gather lower and upper bounds.\00", align 1
@.str.37 = private unnamed_addr constant [77 x i8] c"StrongSIVTest could not prove independence. Gathering direction information.\00", align 1
@.str.39 = private unnamed_addr constant [34 x i8] c"Performing SymbolicStrongSIVTest.\00", align 1
@.str.40 = private unnamed_addr constant [63 x i8] c"SymbolicStrongSIVTest proved independence through loop bounds.\00", align 1
@.str.41 = private unnamed_addr constant [74 x i8] c"SymbolicStrongSIVTest was unable to determine any dependence information.\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"Performing WeakZeroSourceSIVTest.\00", align 1
@.str.43 = private unnamed_addr constant [66 x i8] c"WeakZeroSourceSIVTest folding delta and coefficient to constants.\00", align 1
@.str.44 = private unnamed_addr constant [81 x i8] c"WeakZeroSourceSIVTest proved independence through distance not being an integer.\00", align 1
@.str.45 = private unnamed_addr constant [83 x i8] c"WeakZeroSourceSIVTest calculated distance with the following values\0A\09delta value: \00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"\0A\09distance: \00", align 1
@.str.47 = private unnamed_addr constant [77 x i8] c"WeakZeroSourceSIVTest was unable to fold delta and coefficient to constants.\00", align 1
@.str.48 = private unnamed_addr constant [55 x i8] c"WeakZeroSourceSIVTest found bounds as SEConstantNodes.\00", align 1
@.str.49 = private unnamed_addr constant [85 x i8] c"WeakZeroSourceSIVTest proved independence through distance escaping the loop bounds.\00", align 1
@.str.50 = private unnamed_addr constant [49 x i8] c"Bound values were as follow\0A\09lower bound value: \00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"\0A\09upper bound value: \00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"\0A\09distance value: \00", align 1
@.str.53 = private unnamed_addr constant [83 x i8] c"WeakZeroSourceSIVTest was unable to find lower and upper bound as SEConstantNodes.\00", align 1
@.str.54 = private unnamed_addr constant [47 x i8] c"WeakZeroSourceSIVTest built first_trip_SENode.\00", align 1
@.str.55 = private unnamed_addr constant [84 x i8] c"WeakZeroSourceSIVTest has found first_trip_SENode as an SEConstantNode with value: \00", align 1
@.str.56 = private unnamed_addr constant [78 x i8] c"WeakZeroSourceSIVTest has found peeling first iteration will break dependency\00", align 1
@.str.57 = private unnamed_addr constant [60 x i8] c"WeakZeroSourceSIVTest was unable to build first_trip_SENode\00", align 1
@.str.58 = private unnamed_addr constant [47 x i8] c"WeakZeroSourceSIVTest built final_trip_SENode.\00", align 1
@.str.59 = private unnamed_addr constant [84 x i8] c"WeakZeroSourceSIVTest has found final_trip_SENode as an SEConstantNode with value: \00", align 1
@.str.60 = private unnamed_addr constant [78 x i8] c"WeakZeroSourceSIVTest has found peeling final iteration will break dependency\00", align 1
@.str.61 = private unnamed_addr constant [60 x i8] c"WeakZeroSourceSIVTest was unable to build final_trip_SENode\00", align 1
@.str.62 = private unnamed_addr constant [74 x i8] c"WeakZeroSourceSIVTest was unable to determine any dependence information.\00", align 1
@.str.63 = private unnamed_addr constant [39 x i8] c"Performing WeakZeroDestinationSIVTest.\00", align 1
@.str.64 = private unnamed_addr constant [71 x i8] c"WeakZeroDestinationSIVTest folding delta and coefficient to constants.\00", align 1
@.str.65 = private unnamed_addr constant [86 x i8] c"WeakZeroDestinationSIVTest proved independence through distance not being an integer.\00", align 1
@.str.66 = private unnamed_addr constant [88 x i8] c"WeakZeroDestinationSIVTest calculated distance with the following values\0A\09delta value: \00", align 1
@.str.67 = private unnamed_addr constant [82 x i8] c"WeakZeroDestinationSIVTest was unable to fold delta and coefficient to constants.\00", align 1
@.str.68 = private unnamed_addr constant [60 x i8] c"WeakZeroDestinationSIVTest found bounds as SEConstantNodes.\00", align 1
@.str.69 = private unnamed_addr constant [90 x i8] c"WeakZeroDestinationSIVTest proved independence through distance escaping the loop bounds.\00", align 1
@.str.70 = private unnamed_addr constant [50 x i8] c"Bound values were as follows\0A\09lower bound value: \00", align 1
@.str.71 = private unnamed_addr constant [88 x i8] c"WeakZeroDestinationSIVTest was unable to find lower and upper bound as SEConstantNodes.\00", align 1
@.str.72 = private unnamed_addr constant [52 x i8] c"WeakZeroDestinationSIVTest built first_trip_SENode.\00", align 1
@.str.73 = private unnamed_addr constant [89 x i8] c"WeakZeroDestinationSIVTest has found first_trip_SENode as an SEConstantNode with value: \00", align 1
@.str.74 = private unnamed_addr constant [83 x i8] c"WeakZeroDestinationSIVTest has found peeling first iteration will break dependency\00", align 1
@.str.75 = private unnamed_addr constant [65 x i8] c"WeakZeroDestinationSIVTest was unable to build first_trip_SENode\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"WeakZeroDestinationSIVTest built final_trip_SENode.\00", align 1
@.str.77 = private unnamed_addr constant [89 x i8] c"WeakZeroDestinationSIVTest has found final_trip_SENode as an SEConstantNode with value: \00", align 1
@.str.78 = private unnamed_addr constant [83 x i8] c"WeakZeroDestinationSIVTest has found peeling final iteration will break dependency\00", align 1
@.str.79 = private unnamed_addr constant [65 x i8] c"WeakZeroDestinationSIVTest was unable to build final_trip_SENode\00", align 1
@.str.80 = private unnamed_addr constant [79 x i8] c"WeakZeroDestinationSIVTest was unable to determine any dependence information.\00", align 1
@.str.81 = private unnamed_addr constant [32 x i8] c"Performing WeakCrossingSIVTest.\00", align 1
@.str.82 = private unnamed_addr constant [76 x i8] c"WeakCrossingSIVTest found source or destination != SERecurrentNode. Exiting\00", align 1
@.str.83 = private unnamed_addr constant [71 x i8] c"WeakCrossingSIVTest folding offset_delta and coefficient to constants.\00", align 1
@.str.84 = private unnamed_addr constant [83 x i8] c"WeakCrossingSIVTest proved independence through distance escaping the loop bounds.\00", align 1
@.str.85 = private unnamed_addr constant [41 x i8] c"WeakCrossingSIVTest found EQ dependence.\00", align 1
@.str.86 = private unnamed_addr constant [82 x i8] c"WeakCrossingSIVTest was unable to fold offset_delta and coefficient to constants.\00", align 1
@.str.87 = private unnamed_addr constant [72 x i8] c"WeakCrossingSIVTest was unable to determine any dependence information.\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVN8spvtools3opt15DependenceEmptyE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.spvtools::opt::DependenceEmpty"*)* @_ZNK8spvtools3opt15DependenceEmpty7GetTypeEv to i8*), i8* bitcast (void (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10ConstraintD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::DependenceEmpty"*)* @_ZN8spvtools3opt15DependenceEmptyD0Ev to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::DependenceEmpty"*)* @_ZN8spvtools3opt15DependenceEmpty17AsDependenceEmptyEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::DependenceEmpty"*)* @_ZNK8spvtools3opt15DependenceEmpty17AsDependenceEmptyEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt15DependencePointE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.spvtools::opt::DependencePoint"*)* @_ZNK8spvtools3opt15DependencePoint7GetTypeEv to i8*), i8* bitcast (void (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10ConstraintD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::DependencePoint"*)* @_ZN8spvtools3opt15DependencePointD0Ev to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::DependencePoint"*)* @_ZN8spvtools3opt15DependencePoint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::DependencePoint"*)* @_ZNK8spvtools3opt15DependencePoint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt14DependenceNoneE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.spvtools::opt::DependenceNone"*)* @_ZNK8spvtools3opt14DependenceNone7GetTypeEv to i8*), i8* bitcast (void (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10ConstraintD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::DependenceNone"*)* @_ZN8spvtools3opt14DependenceNoneD0Ev to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::DependenceNone"*)* @_ZN8spvtools3opt14DependenceNone16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::DependenceNone"*)* @_ZNK8spvtools3opt14DependenceNone16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt18DependenceDistanceE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.spvtools::opt::DependenceDistance"*)* @_ZNK8spvtools3opt18DependenceDistance7GetTypeEv to i8*), i8* bitcast (void (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10ConstraintD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::DependenceDistance"*)* @_ZN8spvtools3opt18DependenceDistanceD0Ev to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::DependenceDistance"*)* @_ZN8spvtools3opt18DependenceDistance20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::DependenceDistance"*)* @_ZNK8spvtools3opt18DependenceDistance20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt14DependenceLineE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.spvtools::opt::DependenceLine"*)* @_ZNK8spvtools3opt14DependenceLine7GetTypeEv to i8*), i8* bitcast (void (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10ConstraintD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::DependenceLine"*)* @_ZN8spvtools3opt14DependenceLineD0Ev to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::DependenceLine"*)* @_ZN8spvtools3opt14DependenceLine16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::DependenceLine"*)* @_ZNK8spvtools3opt14DependenceLine16AsDependenceLineEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint20AsDependenceDistanceEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependencePointEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint16AsDependenceNoneEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZN8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*), i8* bitcast (%"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)* @_ZNK8spvtools3opt10Constraint17AsDependenceEmptyEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13GetDependenceEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DistanceVector"*) local_unnamed_addr #0 align 2 {
  %5 = alloca [22 x i8], align 2
  %6 = alloca [22 x i8], align 2
  %7 = alloca [22 x i8], align 2
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector.962", align 8
  %10 = alloca %"class.std::__1::vector.962", align 8
  %11 = alloca %"class.std::__1::vector.969", align 8
  %12 = alloca %"struct.std::__1::pair.983", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::set.984", align 8
  %22 = alloca %"class.std::__1::set.971", align 8
  %23 = alloca %"class.std::__1::vector.993", align 8
  %24 = alloca %"class.std::__1::set.984", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZN8spvtools3opt22LoopDependenceAnalysis38MarkUnsusedDistanceEntriesAsIrrelevantEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::DistanceVector"* %3) #10
  %26 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt22LoopDependenceAnalysis20GetOperandDefinitionEPKNS0_11InstructionEi(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %1, i32 0) #10
  %27 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt22LoopDependenceAnalysis20GetOperandDefinitionEPKNS0_11InstructionEi(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %2, i32 0) #10
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 65
  %31 = zext i1 %30 to i32
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 65
  %35 = zext i1 %34 to i32
  %36 = add nuw nsw i32 %35, %31
  switch i32 %36, label %84 [
    i32 0, label %37
    i32 1, label %59
  ]

37:                                               ; preds = %4
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %26, %27
  br i1 %38, label %39, label %663

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %40, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %3, i64 0, i32 0, i32 0, i32 1
  %43 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %42, align 8
  %44 = icmp eq %"class.spvtools::opt::DistanceEntry"* %41, %43
  br i1 %44, label %663, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds [22 x i8], [22 x i8]* %5, i64 0, i64 0
  %47 = getelementptr inbounds [22 x i8], [22 x i8]* %5, i64 0, i64 6
  br label %48

48:                                               ; preds = %45, %48
  %49 = phi %"class.spvtools::opt::DistanceEntry"* [ %41, %45 ], [ %57, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %46)
  call void @llvm.memset.p0i8.i64(i8* align 2 %47, i8 0, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %49, i64 0, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %49, i64 0, i32 1
  store i32 7, i32* %51, align 4
  %52 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %49, i64 0, i32 2
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %49, i64 0, i32 3
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %49, i64 0, i32 4
  store i8 0, i8* %54, align 1
  %55 = bitcast %"class.spvtools::opt::DistanceEntry"* %49 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %56, i8* nonnull align 2 %46, i64 22, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %46)
  %57 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %49, i64 1
  %58 = icmp eq %"class.spvtools::opt::DistanceEntry"* %57, %43
  br i1 %58, label %663, label %48

59:                                               ; preds = %4
  %60 = select i1 %30, %"class.spvtools::opt::Instruction"* %26, %"class.spvtools::opt::Instruction"* %27
  %61 = select i1 %30, %"class.spvtools::opt::Instruction"* %27, %"class.spvtools::opt::Instruction"* %26
  %62 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt22LoopDependenceAnalysis20GetOperandDefinitionEPKNS0_11InstructionEi(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %60, i32 0) #10
  %63 = icmp eq %"class.spvtools::opt::Instruction"* %61, %62
  br i1 %63, label %64, label %663

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %3, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %3, i64 0, i32 0, i32 0, i32 1
  %68 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::DistanceEntry"* %66, %68
  br i1 %69, label %663, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i64 0, i64 0
  %72 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i64 0, i64 6
  br label %73

73:                                               ; preds = %70, %73
  %74 = phi %"class.spvtools::opt::DistanceEntry"* [ %66, %70 ], [ %82, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %71)
  call void @llvm.memset.p0i8.i64(i8* align 2 %72, i8 0, i64 16, i1 false)
  %75 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %74, i64 0, i32 0
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %74, i64 0, i32 1
  store i32 7, i32* %76, align 4
  %77 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %74, i64 0, i32 2
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %74, i64 0, i32 3
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %74, i64 0, i32 4
  store i8 0, i8* %79, align 1
  %80 = bitcast %"class.spvtools::opt::DistanceEntry"* %74 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %81, i8* nonnull align 2 %71, i64 22, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %71)
  %82 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %74, i64 1
  %83 = icmp eq %"class.spvtools::opt::DistanceEntry"* %82, %68
  br i1 %83, label %663, label %73

84:                                               ; preds = %4
  %85 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt22LoopDependenceAnalysis20GetOperandDefinitionEPKNS0_11InstructionEi(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %26, i32 0) #10
  %86 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt22LoopDependenceAnalysis20GetOperandDefinitionEPKNS0_11InstructionEi(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %27, i32 0) #10
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 65
  br i1 %89, label %94, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %86, i64 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 65
  br i1 %93, label %94, label %114

94:                                               ; preds = %90, %84
  %95 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %3, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %3, i64 0, i32 0, i32 0, i32 1
  %98 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %97, align 8
  %99 = icmp eq %"class.spvtools::opt::DistanceEntry"* %96, %98
  br i1 %99, label %663, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds [22 x i8], [22 x i8]* %7, i64 0, i64 0
  %102 = getelementptr inbounds [22 x i8], [22 x i8]* %7, i64 0, i64 6
  br label %103

103:                                              ; preds = %100, %103
  %104 = phi %"class.spvtools::opt::DistanceEntry"* [ %96, %100 ], [ %112, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %101)
  call void @llvm.memset.p0i8.i64(i8* align 2 %102, i8 0, i64 16, i1 false)
  %105 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %104, i64 0, i32 0
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %104, i64 0, i32 1
  store i32 7, i32* %106, align 4
  %107 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %104, i64 0, i32 2
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %104, i64 0, i32 3
  store i8 0, i8* %108, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %104, i64 0, i32 4
  store i8 0, i8* %109, align 1
  %110 = bitcast %"class.spvtools::opt::DistanceEntry"* %104 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %111, i8* nonnull align 2 %101, i64 22, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %101)
  %112 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %104, i64 1
  %113 = icmp eq %"class.spvtools::opt::DistanceEntry"* %112, %98
  br i1 %113, label %663, label %103

114:                                              ; preds = %90
  %115 = icmp eq %"class.spvtools::opt::Instruction"* %85, %86
  br i1 %115, label %128, label %116

116:                                              ; preds = %114
  %117 = tail call i8* @_Znwm(i64 48) #11
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %117, i8** %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = bitcast i64* %119 to <2 x i64>*
  store <2 x i64> <i64 45, i64 -9223372036854775760>, <2 x i64>* %120, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %117, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45, i1 false) #10
  %121 = getelementptr inbounds i8, i8* %117, i64 45
  store i8 0, i8* %121, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %8) #10
  %122 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %663

126:                                              ; preds = %116
  %127 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %127) #11
  br label %663

128:                                              ; preds = %114
  %129 = bitcast %"class.std::__1::vector.962"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #10
  %130 = getelementptr inbounds %"class.std::__1::vector.962", %"class.std::__1::vector.962"* %9, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.std::__1::vector.962", %"class.std::__1::vector.962"* %9, i64 0, i32 0, i32 1
  %132 = bitcast %"class.std::__1::vector.962"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis13GetSubscriptsEPKNS0_11InstructionE(%"class.std::__1::vector.962"* nonnull sret %9, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %1) #10
  %133 = bitcast %"class.std::__1::vector.962"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #10
  %134 = getelementptr inbounds %"class.std::__1::vector.962", %"class.std::__1::vector.962"* %10, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::vector.962", %"class.std::__1::vector.962"* %10, i64 0, i32 0, i32 1
  %136 = bitcast %"class.std::__1::vector.962"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis13GetSubscriptsEPKNS0_11InstructionE(%"class.std::__1::vector.962"* nonnull sret %10, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Instruction"* %2) #10
  %137 = bitcast %"class.std::__1::vector.969"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #10
  %138 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %11, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %11, i64 0, i32 0, i32 1
  %140 = bitcast %"class.std::__1::vector.969"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis19PartitionSubscriptsERKNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEESA_(%"class.std::__1::vector.969"* nonnull sret %11, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::vector.962"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.962"* nonnull dereferenceable(24) %10)
  %141 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %138, align 8
  %142 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %139, align 8
  %143 = icmp eq %"class.std::__1::set.971"* %141, %142
  br i1 %143, label %200, label %144

144:                                              ; preds = %128, %196
  %145 = phi %"class.std::__1::set.971"* [ %159, %196 ], [ %142, %128 ]
  %146 = phi %"class.std::__1::set.971"* [ %198, %196 ], [ %141, %128 ]
  br label %147

147:                                              ; preds = %154, %144
  %148 = phi %"class.std::__1::set.971"* [ %146, %144 ], [ %155, %154 ]
  %149 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %148, i64 0, i32 0, i32 2, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = icmp eq i64 %150, 1
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %148, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %157

154:                                              ; preds = %147
  %155 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %148, i64 1
  %156 = icmp eq %"class.std::__1::set.971"* %155, %145
  br i1 %156, label %200, label %147

157:                                              ; preds = %152, %161
  %158 = phi %"class.std::__1::set.971"* [ %159, %161 ], [ %145, %152 ]
  %159 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %158, i64 -1
  %160 = icmp eq %"class.std::__1::set.971"* %148, %159
  br i1 %160, label %200, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %158, i64 -1, i32 0, i32 2, i32 0, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %163, 1
  br i1 %164, label %165, label %157

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %158, i64 -1, i32 0, i32 2, i32 0, i32 0
  %167 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %159, i64 0, i32 0, i32 0
  %168 = bitcast %"class.std::__1::set.971"* %148 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.std::__1::set.971"* %159 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %168, align 8
  store i64 %169, i64* %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %148, i64 0, i32 0, i32 1, i32 0, i32 0
  %173 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %158, i64 -1, i32 0, i32 1, i32 0, i32 0
  %174 = bitcast %"class.std::__1::__tree_end_node"* %172 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.std::__1::__tree_end_node"* %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %174, align 8
  store i64 %175, i64* %176, align 8
  %178 = load i64, i64* %153, align 8
  %179 = load i64, i64* %166, align 8
  store i64 %179, i64* %153, align 8
  store i64 %178, i64* %166, align 8
  %180 = load i64, i64* %153, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %165
  %183 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %148, i64 0, i32 0, i32 0
  br label %188

184:                                              ; preds = %165
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %172, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 2
  br label %188

188:                                              ; preds = %184, %182
  %189 = phi %"class.std::__1::__tree_end_node"** [ %187, %184 ], [ %183, %182 ]
  store %"class.std::__1::__tree_end_node"* %172, %"class.std::__1::__tree_end_node"** %189, align 8
  %190 = load i64, i64* %166, align 8
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %173, i64 0, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %194, i64 0, i32 2
  br label %196

196:                                              ; preds = %188, %192
  %197 = phi %"class.std::__1::__tree_end_node"** [ %195, %192 ], [ %167, %188 ]
  store %"class.std::__1::__tree_end_node"* %173, %"class.std::__1::__tree_end_node"** %197, align 8
  %198 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %148, i64 1
  %199 = icmp eq %"class.std::__1::set.971"* %198, %159
  br i1 %199, label %200, label %144

200:                                              ; preds = %196, %154, %157, %128
  %201 = phi %"class.std::__1::set.971"* [ %141, %128 ], [ %148, %157 ], [ %145, %154 ], [ %159, %196 ]
  %202 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %138, align 8
  %203 = icmp ult %"class.std::__1::set.971"* %202, %201
  br i1 %203, label %204, label %234

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %206 = bitcast %"struct.std::__1::pair.983"* %12 to i8*
  %207 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %12, i64 0, i32 0
  %208 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %12, i64 0, i32 1
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %211 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = bitcast i64* %210 to <2 x i64>*
  %230 = bitcast i64* %214 to <2 x i64>*
  %231 = bitcast i64* %218 to <2 x i64>*
  %232 = bitcast i64* %222 to <2 x i64>*
  %233 = bitcast i64* %226 to <2 x i64>*
  br label %259

234:                                              ; preds = %428, %200
  %235 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %139, align 8
  %236 = icmp ult %"class.std::__1::set.971"* %201, %235
  br i1 %236, label %237, label %615

237:                                              ; preds = %234
  %238 = bitcast %"class.std::__1::set.971"* %22 to i8*
  %239 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %22, i64 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %241 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %22, i64 0, i32 0, i32 1
  %242 = bitcast %"class.std::__1::__compressed_pair.84"* %241 to i8*
  %243 = bitcast %"class.std::__1::vector.993"* %23 to i8*
  %244 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %23, i64 0, i32 0, i32 0
  %245 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %23, i64 0, i32 0, i32 1
  %246 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %247 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %248 = bitcast %"struct.std::__1::pair.983"** %245 to i64*
  %249 = bitcast %"class.std::__1::vector.993"* %23 to i64*
  %250 = bitcast %"struct.std::__1::pair.983"** %246 to i64*
  %251 = bitcast %"class.std::__1::set.984"* %24 to i8*
  %252 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %24, i64 0, i32 0, i32 0
  %253 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %254 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %24, i64 0, i32 0
  %255 = bitcast %"class.std::__1::__tree_end_node"* %253 to %"class.std::__1::__tree_node.1083"**
  %256 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %22, i64 0, i32 0
  %257 = bitcast %"class.std::__1::__tree_end_node"* %240 to %"class.std::__1::__tree_node"**
  %258 = bitcast %"class.std::__1::set.984"* %24 to i8*
  br label %435

259:                                              ; preds = %204, %428
  %260 = phi %"class.std::__1::set.971"* [ %202, %204 ], [ %429, %428 ]
  %261 = bitcast %"class.std::__1::set.971"* %260 to %"class.std::__1::__tree_node"**
  %262 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %261, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 1, i32 0
  %264 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %263, align 8
  %265 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 1, i32 1
  %266 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %265, align 8
  %267 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %205, %"class.spvtools::opt::Instruction"* %264) #10
  %268 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %205, %"class.spvtools::opt::SENode"* %267) #10
  %269 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %205, %"class.spvtools::opt::Instruction"* %266) #10
  %270 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %205, %"class.spvtools::opt::SENode"* %269) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #10
  store %"class.spvtools::opt::SENode"* %268, %"class.spvtools::opt::SENode"** %207, align 8
  store %"class.spvtools::opt::SENode"* %270, %"class.spvtools::opt::SENode"** %208, align 8
  %271 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetLoopForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12) #10
  %272 = icmp eq %"class.spvtools::opt::Loop"* %271, null
  br i1 %272, label %287, label %273

273:                                              ; preds = %259
  %274 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis15IsSupportedLoopEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* nonnull %271) #10
  br i1 %274, label %287, label %275

275:                                              ; preds = %273
  %276 = call i8* @_Znwm(i64 80) #11
  store i8* %276, i8** %209, align 8
  store <2 x i64> <i64 68, i64 -9223372036854775728>, <2 x i64>* %229, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %276, i8* align 1 getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i64 68, i1 false) #10
  %277 = getelementptr inbounds i8, i8* %276, i64 68
  store i8 0, i8* %277, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %13) #10
  %278 = load i8, i8* %212, align 1
  %279 = icmp slt i8 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %275
  %281 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %281) #11
  br label %282

282:                                              ; preds = %275, %280
  %283 = call %"class.spvtools::opt::DistanceEntry"* @_ZN8spvtools3opt22LoopDependenceAnalysis32GetDistanceEntryForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12, %"class.spvtools::opt::DistanceVector"* %3) #10
  %284 = icmp eq %"class.spvtools::opt::DistanceEntry"* %283, null
  br i1 %284, label %428, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %283, i64 0, i32 1
  store i32 7, i32* %286, align 4
  br label %428

287:                                              ; preds = %259, %273
  %288 = bitcast %"class.spvtools::opt::SENode"* %268 to i32 (%"class.spvtools::opt::SENode"*)***
  %289 = load i32 (%"class.spvtools::opt::SENode"*)**, i32 (%"class.spvtools::opt::SENode"*)*** %288, align 8
  %290 = load i32 (%"class.spvtools::opt::SENode"*)*, i32 (%"class.spvtools::opt::SENode"*)** %289, align 8
  %291 = call i32 %290(%"class.spvtools::opt::SENode"* %268) #10
  %292 = icmp eq i32 %291, 6
  br i1 %292, label %299, label %293

293:                                              ; preds = %287
  %294 = bitcast %"class.spvtools::opt::SENode"* %270 to i32 (%"class.spvtools::opt::SENode"*)***
  %295 = load i32 (%"class.spvtools::opt::SENode"*)**, i32 (%"class.spvtools::opt::SENode"*)*** %294, align 8
  %296 = load i32 (%"class.spvtools::opt::SENode"*)*, i32 (%"class.spvtools::opt::SENode"*)** %295, align 8
  %297 = call i32 %296(%"class.spvtools::opt::SENode"* %270) #10
  %298 = icmp eq i32 %297, 6
  br i1 %298, label %299, label %311

299:                                              ; preds = %293, %287
  %300 = call i8* @_Znwm(i64 112) #11
  store i8* %300, i8** %225, align 8
  store <2 x i64> <i64 111, i64 -9223372036854775696>, <2 x i64>* %233, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %300, i8* align 1 getelementptr inbounds ([112 x i8], [112 x i8]* @.str.2, i64 0, i64 0), i64 111, i1 false) #10
  %301 = getelementptr inbounds i8, i8* %300, i64 111
  store i8 0, i8* %301, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %14) #10
  %302 = load i8, i8* %228, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %306

304:                                              ; preds = %299
  %305 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %305) #11
  br label %306

306:                                              ; preds = %299, %304
  %307 = call %"class.spvtools::opt::DistanceEntry"* @_ZN8spvtools3opt22LoopDependenceAnalysis32GetDistanceEntryForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12, %"class.spvtools::opt::DistanceVector"* %3) #10
  %308 = icmp eq %"class.spvtools::opt::DistanceEntry"* %307, null
  br i1 %308, label %428, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %307, i64 0, i32 1
  store i32 7, i32* %310, align 4
  br label %428

311:                                              ; preds = %293
  %312 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsZIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12) #10
  br i1 %312, label %313, label %334

313:                                              ; preds = %311
  %314 = call i8* @_Znwm(i64 32) #11
  store i8* %314, i8** %213, align 8
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %230, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %314, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 26, i1 false) #10
  %315 = getelementptr inbounds i8, i8* %314, i64 26
  store i8 0, i8* %315, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %15) #10
  %316 = load i8, i8* %216, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %313
  %319 = load i8*, i8** %213, align 8
  call void @_ZdlPv(i8* %319) #11
  br label %320

320:                                              ; preds = %313, %318
  %321 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis7ZIVTestERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12)
  br i1 %321, label %322, label %334

322:                                              ; preds = %320
  %323 = call i8* @_Znwm(i64 48) #11
  %324 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %323, i8** %324, align 8
  %325 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %326 = bitcast i64* %325 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %326, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %323, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i64 33, i1 false) #10
  %327 = getelementptr inbounds i8, i8* %323, i64 33
  store i8 0, i8* %327, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %16) #10
  %328 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = icmp slt i8 %330, 0
  br i1 %331, label %332, label %431

332:                                              ; preds = %322
  %333 = load i8*, i8** %324, align 8
  call void @_ZdlPv(i8* %333) #11
  br label %431

334:                                              ; preds = %320, %311
  %335 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsSIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12) #10
  br i1 %335, label %336, label %357

336:                                              ; preds = %334
  %337 = call i8* @_Znwm(i64 32) #11
  store i8* %337, i8** %217, align 8
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %231, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %337, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i64 27, i1 false) #10
  %338 = getelementptr inbounds i8, i8* %337, i64 27
  store i8 0, i8* %338, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %17) #10
  %339 = load i8, i8* %220, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %343

341:                                              ; preds = %336
  %342 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %342) #11
  br label %343

343:                                              ; preds = %336, %341
  %344 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis7SIVTestERKNSt3__14pairIPNS0_6SENodeES5_EEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12, %"class.spvtools::opt::DistanceVector"* %3)
  br i1 %344, label %345, label %357

345:                                              ; preds = %343
  %346 = call i8* @_Znwm(i64 48) #11
  %347 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %346, i8** %347, align 8
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %349 = bitcast i64* %348 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %349, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %346, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i64 33, i1 false) #10
  %350 = getelementptr inbounds i8, i8* %346, i64 33
  store i8 0, i8* %350, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %18) #10
  %351 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %352 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %351, i64 0, i32 1, i32 0
  %353 = load i8, i8* %352, align 1
  %354 = icmp slt i8 %353, 0
  br i1 %354, label %355, label %431

355:                                              ; preds = %345
  %356 = load i8*, i8** %347, align 8
  call void @_ZdlPv(i8* %356) #11
  br label %431

357:                                              ; preds = %343, %334
  %358 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsMIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12) #10
  br i1 %358, label %359, label %428

359:                                              ; preds = %357
  %360 = call i8* @_Znwm(i64 32) #11
  store i8* %360, i8** %221, align 8
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %232, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %360, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i64 27, i1 false) #10
  %361 = getelementptr inbounds i8, i8* %360, i64 27
  store i8 0, i8* %361, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %19) #10
  %362 = load i8, i8* %224, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %366

364:                                              ; preds = %359
  %365 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %365) #11
  br label %366

366:                                              ; preds = %359, %364
  %367 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis10GCDMIVTestERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* undef, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %12)
  br i1 %367, label %368, label %428

368:                                              ; preds = %366
  %369 = call i8* @_Znwm(i64 48) #11
  %370 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %369, i8** %370, align 8
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %372 = bitcast i64* %371 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %372, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %369, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i64 38, i1 false) #10
  %373 = getelementptr inbounds i8, i8* %369, i64 38
  store i8 0, i8* %373, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %20) #10
  %374 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %375 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %374, i64 0, i32 1, i32 0
  %376 = load i8, i8* %375, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %368
  %379 = load i8*, i8** %370, align 8
  call void @_ZdlPv(i8* %379) #11
  br label %380

380:                                              ; preds = %368, %378
  %381 = bitcast %"class.std::__1::set.984"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %381) #10
  %382 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %21, i64 0, i32 0, i32 0
  %383 = bitcast %"class.std::__1::set.984"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %383, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis12CollectLoopsEPNS0_6SENodeES3_(%"class.std::__1::set.984"* nonnull sret %21, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %268, %"class.spvtools::opt::SENode"* %270) #10
  %384 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %382, align 8
  %385 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %386 = icmp eq %"class.std::__1::__tree_end_node"* %384, %385
  br i1 %386, label %387, label %391

387:                                              ; preds = %425, %380
  %388 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %21, i64 0, i32 0
  %389 = bitcast %"class.std::__1::__tree_end_node"* %385 to %"class.std::__1::__tree_node.1083"**
  %390 = load %"class.std::__1::__tree_node.1083"*, %"class.std::__1::__tree_node.1083"** %389, align 8
  call void @_ZNSt3__16__treeIPKN8spvtools3opt4LoopENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.985"* nonnull %388, %"class.std::__1::__tree_node.1083"* %390) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %381) #10
  br label %431

391:                                              ; preds = %380, %425
  %392 = phi %"class.std::__1::__tree_end_node"* [ %426, %425 ], [ %384, %380 ]
  %393 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %392, i64 4
  %394 = bitcast %"class.std::__1::__tree_end_node"* %393 to %"class.spvtools::opt::Loop"**
  %395 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %394, align 8
  %396 = call %"class.spvtools::opt::DistanceEntry"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetDistanceEntryForLoopEPKNS0_4LoopEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %395, %"class.spvtools::opt::DistanceVector"* %3) #10
  %397 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %396, i64 0, i32 1
  store i32 0, i32* %397, align 4
  %398 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %392, i64 1, i32 0
  %399 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %398, align 8
  %400 = icmp eq %"class.std::__1::__tree_node_base"* %399, null
  br i1 %400, label %401, label %409

401:                                              ; preds = %391
  %402 = bitcast %"class.std::__1::__tree_end_node"* %392 to %"class.std::__1::__tree_node_base"*
  %403 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %392, i64 2
  %404 = bitcast %"class.std::__1::__tree_end_node"* %403 to %"class.std::__1::__tree_end_node"**
  %405 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %404, align 8
  %406 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %405, i64 0, i32 0
  %407 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %406, align 8
  %408 = icmp eq %"class.std::__1::__tree_node_base"* %407, %402
  br i1 %408, label %425, label %416

409:                                              ; preds = %391, %409
  %410 = phi %"class.std::__1::__tree_node_base"* [ %412, %409 ], [ %399, %391 ]
  %411 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %410, i64 0, i32 0, i32 0
  %412 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %411, align 8
  %413 = icmp eq %"class.std::__1::__tree_node_base"* %412, null
  br i1 %413, label %414, label %409

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %410, i64 0, i32 0
  br label %425

416:                                              ; preds = %401, %416
  %417 = phi %"class.std::__1::__tree_end_node"** [ %420, %416 ], [ %404, %401 ]
  %418 = bitcast %"class.std::__1::__tree_end_node"** %417 to %"class.std::__1::__tree_node_base"**
  %419 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %418, align 8
  %420 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %419, i64 0, i32 2
  %421 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %420, align 8
  %422 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %421, i64 0, i32 0
  %423 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %422, align 8
  %424 = icmp eq %"class.std::__1::__tree_node_base"* %423, %419
  br i1 %424, label %425, label %416

425:                                              ; preds = %416, %401, %414
  %426 = phi %"class.std::__1::__tree_end_node"* [ %415, %414 ], [ %405, %401 ], [ %421, %416 ]
  %427 = icmp eq %"class.std::__1::__tree_end_node"* %426, %385
  br i1 %427, label %387, label %391

428:                                              ; preds = %282, %285, %306, %309, %366, %357
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #10
  %429 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %260, i64 1
  %430 = icmp ult %"class.std::__1::set.971"* %429, %201
  br i1 %430, label %259, label %234

431:                                              ; preds = %387, %322, %332, %345, %355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #10
  br label %627

432:                                              ; preds = %563
  %433 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %139, align 8
  %434 = icmp ult %"class.std::__1::set.971"* %565, %433
  br i1 %434, label %435, label %615

435:                                              ; preds = %237, %432
  %436 = phi %"class.std::__1::set.971"* [ %201, %237 ], [ %565, %432 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %240, %"class.std::__1::__tree_end_node"** %239, align 8
  %437 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %436, i64 0, i32 0, i32 0
  %438 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %437, align 8
  %439 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %436, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__13setINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE6insertINS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEEEvT_SJ_(%"class.std::__1::set.971"* nonnull %22, %"class.std::__1::__tree_end_node"* %438, %"class.std::__1::__tree_end_node"* %439) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %243, i8 0, i64 24, i1 false) #10
  %440 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %239, align 8
  %441 = icmp eq %"class.std::__1::__tree_end_node"* %440, %240
  br i1 %441, label %556, label %446

442:                                              ; preds = %549
  %443 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %244, align 8
  %444 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %245, align 8
  %445 = icmp eq %"struct.std::__1::pair.983"* %443, %444
  br i1 %445, label %556, label %566

446:                                              ; preds = %435, %552
  %447 = phi i64 [ %555, %552 ], [ 0, %435 ]
  %448 = phi %"struct.std::__1::pair.983"* [ %554, %552 ], [ null, %435 ]
  %449 = phi %"struct.std::__1::pair.983"* [ %553, %552 ], [ null, %435 ]
  %450 = phi %"class.std::__1::__tree_end_node"* [ %550, %552 ], [ %440, %435 ]
  %451 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %450, i64 4
  %452 = bitcast %"class.std::__1::__tree_end_node"* %451 to %"class.spvtools::opt::Instruction"**
  %453 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %452, align 8
  %454 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %450, i64 5
  %455 = bitcast %"class.std::__1::__tree_end_node"* %454 to %"class.spvtools::opt::Instruction"**
  %456 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %455, align 8
  %457 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %247, %"class.spvtools::opt::Instruction"* %453) #10
  %458 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %247, %"class.spvtools::opt::SENode"* %457) #10
  %459 = ptrtoint %"class.spvtools::opt::SENode"* %458 to i64
  %460 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %247, %"class.spvtools::opt::Instruction"* %456) #10
  %461 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %247, %"class.spvtools::opt::SENode"* %460) #10
  %462 = ptrtoint %"class.spvtools::opt::SENode"* %461 to i64
  %463 = icmp ult %"struct.std::__1::pair.983"* %449, %448
  %464 = ptrtoint %"struct.std::__1::pair.983"* %448 to i64
  br i1 %463, label %465, label %471

465:                                              ; preds = %446
  %466 = bitcast %"struct.std::__1::pair.983"* %449 to i64*
  store i64 %459, i64* %466, align 8
  %467 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %449, i64 0, i32 1
  %468 = bitcast %"class.spvtools::opt::SENode"** %467 to i64*
  store i64 %462, i64* %468, align 8
  %469 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %449, i64 1
  %470 = ptrtoint %"struct.std::__1::pair.983"* %469 to i64
  store i64 %470, i64* %248, align 8
  br label %521

471:                                              ; preds = %446
  %472 = ptrtoint %"struct.std::__1::pair.983"* %449 to i64
  %473 = load i64, i64* %249, align 8
  %474 = sub i64 %472, %473
  %475 = ashr exact i64 %474, 4
  %476 = add nsw i64 %475, 1
  %477 = icmp ugt i64 %476, 1152921504606846975
  br i1 %477, label %478, label %480

478:                                              ; preds = %471
  %479 = bitcast %"class.std::__1::vector.993"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %479) #12
  unreachable

480:                                              ; preds = %471
  %481 = sub i64 %464, %473
  %482 = ashr exact i64 %481, 4
  %483 = icmp ult i64 %482, 576460752303423487
  br i1 %483, label %484, label %492

484:                                              ; preds = %480
  %485 = ashr exact i64 %481, 3
  %486 = icmp ult i64 %485, %476
  %487 = select i1 %486, i64 %476, i64 %485
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %497, label %489

489:                                              ; preds = %484
  %490 = icmp ugt i64 %487, 1152921504606846975
  br i1 %490, label %491, label %492

491:                                              ; preds = %489
  call void @abort() #12
  unreachable

492:                                              ; preds = %489, %480
  %493 = phi i64 [ %487, %489 ], [ 1152921504606846975, %480 ]
  %494 = shl i64 %493, 4
  %495 = call i8* @_Znwm(i64 %494) #11
  %496 = bitcast i8* %495 to %"struct.std::__1::pair.983"*
  br label %497

497:                                              ; preds = %492, %484
  %498 = phi i64 [ %493, %492 ], [ 0, %484 ]
  %499 = phi %"struct.std::__1::pair.983"* [ %496, %492 ], [ null, %484 ]
  %500 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %499, i64 %475
  %501 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %499, i64 %498
  %502 = ptrtoint %"struct.std::__1::pair.983"* %501 to i64
  %503 = bitcast %"struct.std::__1::pair.983"* %500 to i64*
  store i64 %459, i64* %503, align 8
  %504 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %499, i64 %475, i32 1
  %505 = bitcast %"class.spvtools::opt::SENode"** %504 to i64*
  store i64 %462, i64* %505, align 8
  %506 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %500, i64 1
  %507 = ptrtoint %"struct.std::__1::pair.983"* %506 to i64
  %508 = sub i64 %447, %473
  %509 = ashr exact i64 %508, 4
  %510 = sub nsw i64 0, %509
  %511 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %500, i64 %510
  %512 = ptrtoint %"struct.std::__1::pair.983"* %511 to i64
  %513 = icmp sgt i64 %508, 0
  br i1 %513, label %514, label %517

514:                                              ; preds = %497
  %515 = bitcast %"struct.std::__1::pair.983"* %511 to i8*
  %516 = inttoptr i64 %473 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %515, i8* align 8 %516, i64 %508, i1 false) #10
  br label %517

517:                                              ; preds = %514, %497
  store i64 %512, i64* %249, align 8
  store i64 %507, i64* %248, align 8
  store i64 %502, i64* %250, align 8
  %518 = icmp eq i64 %473, 0
  br i1 %518, label %521, label %519

519:                                              ; preds = %517
  %520 = inttoptr i64 %473 to i8*
  call void @_ZdlPv(i8* %520) #11
  br label %521

521:                                              ; preds = %465, %517, %519
  %522 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %450, i64 1, i32 0
  %523 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %522, align 8
  %524 = icmp eq %"class.std::__1::__tree_node_base"* %523, null
  br i1 %524, label %525, label %533

525:                                              ; preds = %521
  %526 = bitcast %"class.std::__1::__tree_end_node"* %450 to %"class.std::__1::__tree_node_base"*
  %527 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %450, i64 2
  %528 = bitcast %"class.std::__1::__tree_end_node"* %527 to %"class.std::__1::__tree_end_node"**
  %529 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %528, align 8
  %530 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %529, i64 0, i32 0
  %531 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %530, align 8
  %532 = icmp eq %"class.std::__1::__tree_node_base"* %531, %526
  br i1 %532, label %549, label %540

533:                                              ; preds = %521, %533
  %534 = phi %"class.std::__1::__tree_node_base"* [ %536, %533 ], [ %523, %521 ]
  %535 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %534, i64 0, i32 0, i32 0
  %536 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %535, align 8
  %537 = icmp eq %"class.std::__1::__tree_node_base"* %536, null
  br i1 %537, label %538, label %533

538:                                              ; preds = %533
  %539 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %534, i64 0, i32 0
  br label %549

540:                                              ; preds = %525, %540
  %541 = phi %"class.std::__1::__tree_end_node"** [ %544, %540 ], [ %528, %525 ]
  %542 = bitcast %"class.std::__1::__tree_end_node"** %541 to %"class.std::__1::__tree_node_base"**
  %543 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %542, align 8
  %544 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %543, i64 0, i32 2
  %545 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %544, align 8
  %546 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %545, i64 0, i32 0
  %547 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %546, align 8
  %548 = icmp eq %"class.std::__1::__tree_node_base"* %547, %543
  br i1 %548, label %549, label %540

549:                                              ; preds = %540, %525, %538
  %550 = phi %"class.std::__1::__tree_end_node"* [ %539, %538 ], [ %529, %525 ], [ %545, %540 ]
  %551 = icmp eq %"class.std::__1::__tree_end_node"* %550, %240
  br i1 %551, label %442, label %552

552:                                              ; preds = %549
  %553 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %245, align 8
  %554 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %246, align 8
  %555 = ptrtoint %"struct.std::__1::pair.983"* %553 to i64
  br label %446

556:                                              ; preds = %611, %435, %442
  %557 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis9DeltaTestERKNSt3__16vectorINS2_4pairIPNS0_6SENodeES6_EENS2_9allocatorIS7_EEEEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::vector.993"* nonnull dereferenceable(24) %23, %"class.spvtools::opt::DistanceVector"* %3)
  %558 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %244, align 8
  %559 = icmp eq %"struct.std::__1::pair.983"* %558, null
  br i1 %559, label %563, label %560

560:                                              ; preds = %556
  %561 = ptrtoint %"struct.std::__1::pair.983"* %558 to i64
  store i64 %561, i64* %248, align 8
  %562 = bitcast %"struct.std::__1::pair.983"* %558 to i8*
  call void @_ZdlPv(i8* %562) #11
  br label %563

563:                                              ; preds = %556, %560
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #10
  %564 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %257, align 8
  call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* nonnull %256, %"class.std::__1::__tree_node"* %564) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #10
  %565 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %436, i64 1
  br i1 %557, label %627, label %432

566:                                              ; preds = %442, %611
  %567 = phi %"struct.std::__1::pair.983"* [ %613, %611 ], [ %443, %442 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %251) #10
  %568 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %567, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 -86, i64 24, i1 false)
  %569 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %568, align 8
  %570 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %567, i64 0, i32 1
  %571 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %570, align 8
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis12CollectLoopsEPNS0_6SENodeES3_(%"class.std::__1::set.984"* nonnull sret %24, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %569, %"class.spvtools::opt::SENode"* %571) #10
  %572 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %252, align 8
  %573 = icmp eq %"class.std::__1::__tree_end_node"* %572, %253
  br i1 %573, label %611, label %574

574:                                              ; preds = %566, %608
  %575 = phi %"class.std::__1::__tree_end_node"* [ %609, %608 ], [ %572, %566 ]
  %576 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %575, i64 4
  %577 = bitcast %"class.std::__1::__tree_end_node"* %576 to %"class.spvtools::opt::Loop"**
  %578 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %577, align 8
  %579 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis15IsSupportedLoopEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %578) #10
  br i1 %579, label %580, label %611

580:                                              ; preds = %574
  %581 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %575, i64 1, i32 0
  %582 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %581, align 8
  %583 = icmp eq %"class.std::__1::__tree_node_base"* %582, null
  br i1 %583, label %584, label %592

584:                                              ; preds = %580
  %585 = bitcast %"class.std::__1::__tree_end_node"* %575 to %"class.std::__1::__tree_node_base"*
  %586 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %575, i64 2
  %587 = bitcast %"class.std::__1::__tree_end_node"* %586 to %"class.std::__1::__tree_end_node"**
  %588 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %587, align 8
  %589 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %588, i64 0, i32 0
  %590 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %589, align 8
  %591 = icmp eq %"class.std::__1::__tree_node_base"* %590, %585
  br i1 %591, label %608, label %599

592:                                              ; preds = %580, %592
  %593 = phi %"class.std::__1::__tree_node_base"* [ %595, %592 ], [ %582, %580 ]
  %594 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %593, i64 0, i32 0, i32 0
  %595 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %594, align 8
  %596 = icmp eq %"class.std::__1::__tree_node_base"* %595, null
  br i1 %596, label %597, label %592

597:                                              ; preds = %592
  %598 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %593, i64 0, i32 0
  br label %608

599:                                              ; preds = %584, %599
  %600 = phi %"class.std::__1::__tree_end_node"** [ %603, %599 ], [ %587, %584 ]
  %601 = bitcast %"class.std::__1::__tree_end_node"** %600 to %"class.std::__1::__tree_node_base"**
  %602 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %601, align 8
  %603 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %602, i64 0, i32 2
  %604 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %603, align 8
  %605 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %604, i64 0, i32 0
  %606 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %605, align 8
  %607 = icmp eq %"class.std::__1::__tree_node_base"* %606, %602
  br i1 %607, label %608, label %599

608:                                              ; preds = %599, %597, %584
  %609 = phi %"class.std::__1::__tree_end_node"* [ %598, %597 ], [ %588, %584 ], [ %604, %599 ]
  %610 = icmp eq %"class.std::__1::__tree_end_node"* %609, %253
  br i1 %610, label %611, label %574

611:                                              ; preds = %574, %608, %566
  %612 = load %"class.std::__1::__tree_node.1083"*, %"class.std::__1::__tree_node.1083"** %255, align 8
  call void @_ZNSt3__16__treeIPKN8spvtools3opt4LoopENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.985"* nonnull %254, %"class.std::__1::__tree_node.1083"* %612) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %251) #10
  %613 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %567, i64 1
  %614 = icmp eq %"struct.std::__1::pair.983"* %613, %444
  br i1 %614, label %556, label %566

615:                                              ; preds = %432, %234
  %616 = call i8* @_Znwm(i64 112) #11
  %617 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %616, i8** %617, align 8
  %618 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %619 = bitcast i64* %618 to <2 x i64>*
  store <2 x i64> <i64 111, i64 -9223372036854775696>, <2 x i64>* %619, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %616, i8* align 1 getelementptr inbounds ([112 x i8], [112 x i8]* @.str.9, i64 0, i64 0), i64 111, i1 false) #10
  %620 = getelementptr inbounds i8, i8* %616, i64 111
  store i8 0, i8* %620, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %25) #10
  %621 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %622 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %621, i64 0, i32 1, i32 0
  %623 = load i8, i8* %622, align 1
  %624 = icmp slt i8 %623, 0
  br i1 %624, label %625, label %627

625:                                              ; preds = %615
  %626 = load i8*, i8** %617, align 8
  call void @_ZdlPv(i8* %626) #11
  br label %627

627:                                              ; preds = %563, %625, %615, %431
  %628 = phi i1 [ true, %431 ], [ false, %615 ], [ false, %625 ], [ true, %563 ]
  %629 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %138, align 8
  %630 = icmp eq %"class.std::__1::set.971"* %629, null
  br i1 %630, label %648, label %631

631:                                              ; preds = %627
  %632 = bitcast %"class.std::__1::set.971"* %629 to i8*
  %633 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %139, align 8
  %634 = icmp eq %"class.std::__1::set.971"* %633, %629
  br i1 %634, label %646, label %635

635:                                              ; preds = %631, %635
  %636 = phi %"class.std::__1::set.971"* [ %637, %635 ], [ %633, %631 ]
  %637 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %636, i64 -1
  %638 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %637, i64 0, i32 0
  %639 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %636, i64 -1, i32 0, i32 1, i32 0, i32 0
  %640 = bitcast %"class.std::__1::__tree_end_node"* %639 to %"class.std::__1::__tree_node"**
  %641 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %640, align 8
  call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* %638, %"class.std::__1::__tree_node"* %641) #10
  %642 = icmp eq %"class.std::__1::set.971"* %637, %629
  br i1 %642, label %643, label %635

643:                                              ; preds = %635
  %644 = bitcast %"class.std::__1::vector.969"* %11 to i8**
  %645 = load i8*, i8** %644, align 8
  br label %646

646:                                              ; preds = %643, %631
  %647 = phi i8* [ %645, %643 ], [ %632, %631 ]
  store %"class.std::__1::set.971"* %629, %"class.std::__1::set.971"** %139, align 8
  call void @_ZdlPv(i8* %647) #11
  br label %648

648:                                              ; preds = %627, %646
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #10
  %649 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %134, align 8
  %650 = icmp eq %"class.spvtools::opt::Instruction"** %649, null
  br i1 %650, label %655, label %651

651:                                              ; preds = %648
  %652 = ptrtoint %"class.spvtools::opt::Instruction"** %649 to i64
  %653 = bitcast %"class.spvtools::opt::Instruction"*** %135 to i64*
  store i64 %652, i64* %653, align 8
  %654 = bitcast %"class.spvtools::opt::Instruction"** %649 to i8*
  call void @_ZdlPv(i8* %654) #11
  br label %655

655:                                              ; preds = %648, %651
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #10
  %656 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %130, align 8
  %657 = icmp eq %"class.spvtools::opt::Instruction"** %656, null
  br i1 %657, label %662, label %658

658:                                              ; preds = %655
  %659 = ptrtoint %"class.spvtools::opt::Instruction"** %656 to i64
  %660 = bitcast %"class.spvtools::opt::Instruction"*** %131 to i64*
  store i64 %659, i64* %660, align 8
  %661 = bitcast %"class.spvtools::opt::Instruction"** %656 to i8*
  call void @_ZdlPv(i8* %661) #11
  br label %662

662:                                              ; preds = %655, %658
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #10
  br label %663

663:                                              ; preds = %73, %48, %103, %64, %39, %94, %126, %116, %662, %59, %37
  %664 = phi i1 [ true, %37 ], [ true, %59 ], [ %628, %662 ], [ true, %116 ], [ true, %126 ], [ false, %94 ], [ false, %39 ], [ false, %64 ], [ false, %103 ], [ false, %48 ], [ false, %73 ]
  ret i1 %664
}

declare void @_ZN8spvtools3opt22LoopDependenceAnalysis38MarkUnsusedDistanceEntriesAsIrrelevantEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DistanceVector"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt22LoopDependenceAnalysis20GetOperandDefinitionEPKNS0_11InstructionEi(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt22LoopDependenceAnalysis13GetSubscriptsEPKNS0_11InstructionE(%"class.std::__1::vector.962"* sret, %"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt22LoopDependenceAnalysis19PartitionSubscriptsERKNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEESA_(%"class.std::__1::vector.969"* noalias sret, %"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.std::__1::vector.962"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.962"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.1002", align 8
  %6 = alloca %"class.std::__1::vector.1002", align 8
  %7 = alloca %"class.std::__1::set.984", align 8
  %8 = alloca %"class.std::__1::set.971", align 8
  %9 = alloca [1 x %"struct.std::__1::pair"], align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector.969"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds %"class.std::__1::vector.962", %"class.std::__1::vector.962"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %"class.spvtools::opt::Instruction"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.962"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %45, label %22

22:                                               ; preds = %4
  %23 = inttoptr i64 %18 to %"class.spvtools::opt::Instruction"**
  %24 = bitcast %"class.std::__1::set.971"* %8 to i8*
  %25 = bitcast [1 x %"struct.std::__1::pair"]* %9 to i8*
  %26 = getelementptr inbounds [1 x %"struct.std::__1::pair"], [1 x %"struct.std::__1::pair"]* %9, i64 0, i64 0
  %27 = getelementptr inbounds %"class.std::__1::vector.962", %"class.std::__1::vector.962"* %2, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.962", %"class.std::__1::vector.962"* %3, i64 0, i32 0, i32 0
  %29 = bitcast [1 x %"struct.std::__1::pair"]* %9 to i64*
  %30 = getelementptr inbounds [1 x %"struct.std::__1::pair"], [1 x %"struct.std::__1::pair"]* %9, i64 0, i64 0, i32 1
  %31 = bitcast %"class.spvtools::opt::Instruction"** %30 to i64*
  %32 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %8, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_node_base"** %32 to i8*
  %36 = getelementptr inbounds [1 x %"struct.std::__1::pair"], [1 x %"struct.std::__1::pair"]* %9, i64 0, i64 1
  %37 = bitcast %"class.std::__1::set.971"* %8 to i64*
  %38 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %8, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::__compressed_pair.84"* %38 to i64*
  %40 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_end_node"* %33 to i8*
  %42 = bitcast %"class.std::__1::set.971"** %11 to i64*
  %43 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %8, i64 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node"**
  br label %75

45:                                               ; preds = %107, %4
  %46 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %1, i64 0, i32 1, i32 0, i32 0
  %47 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %1, i64 0, i32 1, i32 0, i32 1
  %49 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %48, align 8
  %50 = icmp eq %"class.spvtools::opt::Loop"** %47, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %10, align 8
  %53 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %11, align 8
  br label %113

54:                                               ; preds = %45
  %55 = bitcast %"class.std::__1::set.971"** %11 to i64*
  %56 = bitcast %"class.std::__1::vector.969"* %0 to i64*
  %57 = bitcast %"class.std::__1::vector.1002"* %5 to i8*
  %58 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %5, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %5, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %1, i64 0, i32 2
  %61 = bitcast %"class.std::__1::vector.1002"* %6 to i8*
  %62 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %6, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %6, i64 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::set.984"* %7 to i8*
  %65 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %7, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::set.984", %"class.std::__1::set.984"* %7, i64 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_node.1083"**
  %69 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %63 to i64*
  %70 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %59 to i64*
  %71 = load i64, i64* %55, align 8
  %72 = load i64, i64* %56, align 8
  %73 = inttoptr i64 %72 to %"class.std::__1::set.971"*
  %74 = inttoptr i64 %71 to %"class.std::__1::set.971"*
  br label %190

75:                                               ; preds = %111, %22
  %76 = phi %"class.spvtools::opt::Instruction"** [ %23, %22 ], [ %112, %111 ]
  %77 = phi i64 [ 0, %22 ], [ %109, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %76, i64 %77
  %79 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %28, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %79, i64 %77
  %81 = bitcast %"class.spvtools::opt::Instruction"** %78 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %29, align 8
  %83 = bitcast %"class.spvtools::opt::Instruction"** %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %31, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %34, align 8
  call void @_ZNSt3__13setINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE6insertIPKS6_EEvT_SF_(%"class.std::__1::set.971"* nonnull %8, %"struct.std::__1::pair"* nonnull %26, %"struct.std::__1::pair"* %36) #10
  %85 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %11, align 8
  %86 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %12, align 8
  %87 = icmp ult %"class.std::__1::set.971"* %85, %86
  br i1 %87, label %88, label %106

88:                                               ; preds = %75
  %89 = load i64, i64* %37, align 8
  %90 = bitcast %"class.std::__1::set.971"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %85, i64 0, i32 0, i32 1
  %92 = bitcast %"class.std::__1::__compressed_pair.84"* %91 to i64*
  %93 = load i64, i64* %39, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %85, i64 0, i32 0, i32 2, i32 0, i32 0
  %95 = load i64, i64* %40, align 8
  store i64 %95, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %85, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %96, label %98, label %100

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %85, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %97, %"class.std::__1::__tree_end_node"** %99, align 8
  br label %103

100:                                              ; preds = %88
  %101 = inttoptr i64 %93 to %"class.std::__1::__tree_node_base"*
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %97, %"class.std::__1::__tree_end_node"** %102, align 8
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %34, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #10
  br label %103

103:                                              ; preds = %100, %98
  %104 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %85, i64 1
  %105 = ptrtoint %"class.std::__1::set.971"* %104 to i64
  store i64 %105, i64* %42, align 8
  br label %107

106:                                              ; preds = %75
  call void @_ZNSt3__16vectorINS_3setINS_4pairIPN8spvtools3opt11InstructionES6_EENS_4lessIS7_EENS_9allocatorIS7_EEEENSA_ISC_EEE21__push_back_slow_pathISC_EEvOT_(%"class.std::__1::vector.969"* %0, %"class.std::__1::set.971"* nonnull dereferenceable(24) %8) #10
  br label %107

107:                                              ; preds = %103, %106
  %108 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* nonnull %43, %"class.std::__1::__tree_node"* %108) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %109 = add nuw i64 %77, 1
  %110 = icmp ult i64 %109, %20
  br i1 %110, label %111, label %45

111:                                              ; preds = %107
  %112 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %27, align 8
  br label %75

113:                                              ; preds = %203, %51
  %114 = phi %"class.std::__1::set.971"* [ %53, %51 ], [ %204, %203 ]
  %115 = phi %"class.std::__1::set.971"* [ %53, %51 ], [ %205, %203 ]
  %116 = phi %"class.std::__1::set.971"* [ %52, %51 ], [ %206, %203 ]
  %117 = icmp eq %"class.std::__1::set.971"* %116, %115
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = ptrtoint %"class.std::__1::set.971"* %115 to i64
  br label %175

120:                                              ; preds = %113, %125
  %121 = phi %"class.std::__1::set.971"* [ %126, %125 ], [ %116, %113 ]
  %122 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %121, i64 0, i32 0, i32 2, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %121, i64 1
  %127 = icmp eq %"class.std::__1::set.971"* %126, %115
  br i1 %127, label %128, label %120

128:                                              ; preds = %125
  %129 = ptrtoint %"class.std::__1::set.971"* %115 to i64
  br label %175

130:                                              ; preds = %120
  %131 = ptrtoint %"class.std::__1::set.971"* %121 to i64
  %132 = icmp eq %"class.std::__1::set.971"* %121, %115
  br i1 %132, label %175, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %121, i64 1
  %135 = icmp eq %"class.std::__1::set.971"* %134, %115
  br i1 %135, label %175, label %136

136:                                              ; preds = %133, %169
  %137 = phi %"class.std::__1::set.971"* [ %171, %169 ], [ %134, %133 ]
  %138 = phi %"class.std::__1::set.971"* [ %137, %169 ], [ %121, %133 ]
  %139 = phi i64 [ %170, %169 ], [ %131, %133 ]
  %140 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %138, i64 1, i32 0, i32 2, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %169, label %143

143:                                              ; preds = %136
  %144 = inttoptr i64 %139 to %"class.std::__1::set.971"*
  %145 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %144, i64 0, i32 0
  %146 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %144, i64 0, i32 0, i32 1, i32 0, i32 0
  %147 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"class.std::__1::__tree_node"**
  %148 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %147, align 8
  call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* %145, %"class.std::__1::__tree_node"* %148) #10
  %149 = bitcast %"class.std::__1::set.971"* %137 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = inttoptr i64 %139 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %138, i64 1, i32 0, i32 1, i32 0, i32 0
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i64*
  %154 = bitcast %"class.std::__1::__tree_end_node"* %146 to i64*
  %155 = load i64, i64* %153, align 8
  store i64 %155, i64* %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %144, i64 0, i32 0, i32 2, i32 0, i32 0
  %157 = load i64, i64* %140, align 8
  store i64 %157, i64* %156, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %144, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %146, %"class.std::__1::__tree_end_node"** %160, align 8
  br label %166

161:                                              ; preds = %143
  %162 = inttoptr i64 %155 to %"class.std::__1::__tree_node_base"*
  %163 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %162, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %146, %"class.std::__1::__tree_end_node"** %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %137, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %152, %"class.std::__1::__tree_end_node"** %164, align 8
  %165 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #10
  br label %166

166:                                              ; preds = %161, %159
  %167 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %144, i64 1
  %168 = ptrtoint %"class.std::__1::set.971"* %167 to i64
  br label %169

169:                                              ; preds = %166, %136
  %170 = phi i64 [ %139, %136 ], [ %168, %166 ]
  %171 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %137, i64 1
  %172 = icmp eq %"class.std::__1::set.971"* %171, %115
  br i1 %172, label %173, label %136

173:                                              ; preds = %169
  %174 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %11, align 8
  br label %175

175:                                              ; preds = %118, %173, %128, %130, %133
  %176 = phi %"class.std::__1::set.971"* [ %114, %130 ], [ %114, %128 ], [ %114, %133 ], [ %174, %173 ], [ %114, %118 ]
  %177 = phi i64 [ %131, %130 ], [ %129, %128 ], [ %131, %133 ], [ %170, %173 ], [ %119, %118 ]
  %178 = inttoptr i64 %177 to %"class.std::__1::set.971"*
  %179 = icmp eq %"class.std::__1::set.971"* %176, %178
  br i1 %179, label %189, label %180

180:                                              ; preds = %175, %180
  %181 = phi %"class.std::__1::set.971"* [ %182, %180 ], [ %176, %175 ]
  %182 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %181, i64 -1
  %183 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %182, i64 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %181, i64 -1, i32 0, i32 1, i32 0, i32 0
  %185 = bitcast %"class.std::__1::__tree_end_node"* %184 to %"class.std::__1::__tree_node"**
  %186 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %185, align 8
  call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* %183, %"class.std::__1::__tree_node"* %186) #10
  %187 = icmp eq %"class.std::__1::set.971"* %182, %178
  br i1 %187, label %188, label %180

188:                                              ; preds = %180
  store %"class.std::__1::set.971"* %178, %"class.std::__1::set.971"** %11, align 8
  br label %189

189:                                              ; preds = %175, %188
  ret void

190:                                              ; preds = %54, %203
  %191 = phi %"class.std::__1::set.971"* [ %74, %54 ], [ %204, %203 ]
  %192 = phi %"class.std::__1::set.971"* [ %74, %54 ], [ %205, %203 ]
  %193 = phi %"class.std::__1::set.971"* [ %73, %54 ], [ %206, %203 ]
  %194 = phi %"class.std::__1::set.971"* [ %73, %54 ], [ %207, %203 ]
  %195 = phi i64 [ %72, %54 ], [ %208, %203 ]
  %196 = phi i64 [ %71, %54 ], [ %209, %203 ]
  %197 = phi %"class.spvtools::opt::Loop"** [ %47, %54 ], [ %210, %203 ]
  %198 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %197, align 8
  %199 = icmp eq i64 %196, %195
  br i1 %199, label %203, label %212

200:                                              ; preds = %335
  %201 = inttoptr i64 %339 to %"class.std::__1::set.971"*
  %202 = inttoptr i64 %338 to %"class.std::__1::set.971"*
  br label %203

203:                                              ; preds = %200, %190
  %204 = phi %"class.std::__1::set.971"* [ %191, %190 ], [ %202, %200 ]
  %205 = phi %"class.std::__1::set.971"* [ %192, %190 ], [ %202, %200 ]
  %206 = phi %"class.std::__1::set.971"* [ %193, %190 ], [ %201, %200 ]
  %207 = phi %"class.std::__1::set.971"* [ %194, %190 ], [ %201, %200 ]
  %208 = phi i64 [ %195, %190 ], [ %339, %200 ]
  %209 = phi i64 [ %195, %190 ], [ %338, %200 ]
  %210 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %197, i64 1
  %211 = icmp eq %"class.spvtools::opt::Loop"** %210, %49
  br i1 %211, label %113, label %190

212:                                              ; preds = %190, %335
  %213 = phi %"class.std::__1::set.971"* [ %343, %335 ], [ %194, %190 ]
  %214 = phi i64 [ %336, %335 ], [ -1, %190 ]
  %215 = phi i64 [ %337, %335 ], [ 0, %190 ]
  %216 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %213, i64 %215
  %217 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %213, i64 %215, i32 0, i32 1, i32 0, i32 0
  %220 = icmp eq %"class.std::__1::__tree_end_node"* %218, %219
  br i1 %220, label %321, label %221

221:                                              ; preds = %212, %318
  %222 = phi %"class.std::__1::__tree_end_node"* [ %319, %318 ], [ %218, %212 ]
  %223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #10
  %224 = bitcast %"class.std::__1::__tree_end_node"* %223 to %"class.spvtools::opt::Instruction"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false) #10
  %225 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %224, align 8
  %226 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %60, %"class.spvtools::opt::Instruction"* %225) #10
  call void @_ZN8spvtools3opt6SENode21CollectRecurrentNodesEv(%"class.std::__1::vector.1002"* nonnull sret %5, %"class.spvtools::opt::SENode"* %226) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 5
  %228 = bitcast %"class.std::__1::__tree_end_node"* %227 to %"class.spvtools::opt::Instruction"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false) #10
  %229 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %228, align 8
  %230 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %60, %"class.spvtools::opt::Instruction"* %229) #10
  call void @_ZN8spvtools3opt6SENode21CollectRecurrentNodesEv(%"class.std::__1::vector.1002"* nonnull sret %6, %"class.spvtools::opt::SENode"* %230) #10
  %231 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %59, align 8
  %232 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %62, align 8
  %233 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %63, align 8
  %234 = call %"class.spvtools::opt::SERecurrentNode"** @_ZNSt3__16vectorIPN8spvtools3opt15SERecurrentNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1002"* nonnull %5, %"class.spvtools::opt::SERecurrentNode"** %231, %"class.spvtools::opt::SERecurrentNode"** %232, %"class.spvtools::opt::SERecurrentNode"** %233) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis12CollectLoopsERKNSt3__16vectorIPNS0_15SERecurrentNodeENS2_9allocatorIS5_EEEE(%"class.std::__1::set.984"* nonnull sret %7, %"class.spvtools::opt::LoopDependenceAnalysis"* %1, %"class.std::__1::vector.1002"* nonnull dereferenceable(24) %5) #10
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %236 = icmp eq %"class.std::__1::__tree_end_node"* %235, %66
  br i1 %236, label %274, label %237

237:                                              ; preds = %221, %271
  %238 = phi %"class.std::__1::__tree_end_node"* [ %272, %271 ], [ %235, %221 ]
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 4
  %240 = bitcast %"class.std::__1::__tree_end_node"* %239 to %"class.spvtools::opt::Loop"**
  %241 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %240, align 8
  %242 = icmp eq %"class.spvtools::opt::Loop"* %241, %198
  br i1 %242, label %274, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 1, i32 0
  %245 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %246 = icmp eq %"class.std::__1::__tree_node_base"* %245, null
  br i1 %246, label %247, label %255

247:                                              ; preds = %243
  %248 = bitcast %"class.std::__1::__tree_end_node"* %238 to %"class.std::__1::__tree_node_base"*
  %249 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 2
  %250 = bitcast %"class.std::__1::__tree_end_node"* %249 to %"class.std::__1::__tree_end_node"**
  %251 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %250, align 8
  %252 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %251, i64 0, i32 0
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node_base"* %253, %248
  br i1 %254, label %271, label %262

255:                                              ; preds = %243, %255
  %256 = phi %"class.std::__1::__tree_node_base"* [ %258, %255 ], [ %245, %243 ]
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %256, i64 0, i32 0, i32 0
  %258 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %257, align 8
  %259 = icmp eq %"class.std::__1::__tree_node_base"* %258, null
  br i1 %259, label %260, label %255

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %256, i64 0, i32 0
  br label %271

262:                                              ; preds = %247, %262
  %263 = phi %"class.std::__1::__tree_end_node"** [ %266, %262 ], [ %250, %247 ]
  %264 = bitcast %"class.std::__1::__tree_end_node"** %263 to %"class.std::__1::__tree_node_base"**
  %265 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %265, i64 0, i32 2
  %267 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %266, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %267, i64 0, i32 0
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %268, align 8
  %270 = icmp eq %"class.std::__1::__tree_node_base"* %269, %265
  br i1 %270, label %271, label %262

271:                                              ; preds = %262, %260, %247
  %272 = phi %"class.std::__1::__tree_end_node"* [ %261, %260 ], [ %251, %247 ], [ %267, %262 ]
  %273 = icmp eq %"class.std::__1::__tree_end_node"* %272, %66
  br i1 %273, label %274, label %237

274:                                              ; preds = %271, %237, %221
  %275 = phi %"class.std::__1::__tree_end_node"* [ %66, %221 ], [ %238, %237 ], [ %66, %271 ]
  %276 = icmp eq %"class.std::__1::__tree_end_node"* %275, %66
  %277 = load %"class.std::__1::__tree_node.1083"*, %"class.std::__1::__tree_node.1083"** %68, align 8
  call void @_ZNSt3__16__treeIPKN8spvtools3opt4LoopENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.985"* nonnull %67, %"class.std::__1::__tree_node.1083"* %277) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #10
  %278 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %62, align 8
  %279 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %274
  %281 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %278 to i64
  store i64 %281, i64* %69, align 8
  %282 = bitcast %"class.spvtools::opt::SERecurrentNode"** %278 to i8*
  call void @_ZdlPv(i8* %282) #11
  br label %283

283:                                              ; preds = %280, %274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  %284 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %58, align 8
  %285 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %284, null
  br i1 %285, label %289, label %286

286:                                              ; preds = %283
  %287 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %284 to i64
  store i64 %287, i64* %70, align 8
  %288 = bitcast %"class.spvtools::opt::SERecurrentNode"** %284 to i8*
  call void @_ZdlPv(i8* %288) #11
  br label %289

289:                                              ; preds = %286, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #10
  br i1 %276, label %290, label %321

290:                                              ; preds = %289
  %291 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 1, i32 0
  %292 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %291, align 8
  %293 = icmp eq %"class.std::__1::__tree_node_base"* %292, null
  br i1 %293, label %294, label %302

294:                                              ; preds = %290
  %295 = bitcast %"class.std::__1::__tree_end_node"* %222 to %"class.std::__1::__tree_node_base"*
  %296 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 2
  %297 = bitcast %"class.std::__1::__tree_end_node"* %296 to %"class.std::__1::__tree_end_node"**
  %298 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %297, align 8
  %299 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %298, i64 0, i32 0
  %300 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %300, %295
  br i1 %301, label %318, label %309

302:                                              ; preds = %290, %302
  %303 = phi %"class.std::__1::__tree_node_base"* [ %305, %302 ], [ %292, %290 ]
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %303, i64 0, i32 0, i32 0
  %305 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %304, align 8
  %306 = icmp eq %"class.std::__1::__tree_node_base"* %305, null
  br i1 %306, label %307, label %302

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %303, i64 0, i32 0
  br label %318

309:                                              ; preds = %294, %309
  %310 = phi %"class.std::__1::__tree_end_node"** [ %313, %309 ], [ %297, %294 ]
  %311 = bitcast %"class.std::__1::__tree_end_node"** %310 to %"class.std::__1::__tree_node_base"**
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %312, i64 0, i32 2
  %314 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %313, align 8
  %315 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %314, i64 0, i32 0
  %316 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %317 = icmp eq %"class.std::__1::__tree_node_base"* %316, %312
  br i1 %317, label %318, label %309

318:                                              ; preds = %309, %307, %294
  %319 = phi %"class.std::__1::__tree_end_node"* [ %308, %307 ], [ %298, %294 ], [ %314, %309 ]
  %320 = icmp eq %"class.std::__1::__tree_end_node"* %319, %219
  br i1 %320, label %335, label %221

321:                                              ; preds = %289, %212
  %322 = phi %"class.std::__1::__tree_end_node"* [ %218, %212 ], [ %222, %289 ]
  %323 = icmp eq %"class.std::__1::__tree_end_node"* %322, %219
  br i1 %323, label %335, label %324

324:                                              ; preds = %321
  %325 = icmp eq i64 %214, -1
  br i1 %325, label %335, label %326

326:                                              ; preds = %324
  %327 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %10, align 8
  %328 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %327, i64 %214
  %329 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %217, align 8
  call void @_ZNSt3__13setINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE6insertINS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEEEvT_SJ_(%"class.std::__1::set.971"* %328, %"class.std::__1::__tree_end_node"* %329, %"class.std::__1::__tree_end_node"* %219)
  %330 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %216, i64 0, i32 0
  %331 = bitcast %"class.std::__1::__tree_end_node"* %219 to %"class.std::__1::__tree_node"**
  %332 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %331, align 8
  call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* %330, %"class.std::__1::__tree_node"* %332) #10
  %333 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %213, i64 %215, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %333, align 8
  store %"class.std::__1::__tree_end_node"* %219, %"class.std::__1::__tree_end_node"** %217, align 8
  %334 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %219, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %334, align 8
  br label %335

335:                                              ; preds = %318, %321, %324, %326
  %336 = phi i64 [ %214, %326 ], [ %214, %321 ], [ %215, %324 ], [ %214, %318 ]
  %337 = add nuw i64 %215, 1
  %338 = load i64, i64* %55, align 8
  %339 = load i64, i64* %56, align 8
  %340 = sub i64 %338, %339
  %341 = sdiv exact i64 %340, 24
  %342 = icmp ult i64 %337, %341
  %343 = inttoptr i64 %339 to %"class.std::__1::set.971"*
  br i1 %342, label %212, label %200
}

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

declare %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetLoopForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis15IsSupportedLoopEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare %"class.spvtools::opt::DistanceEntry"* @_ZN8spvtools3opt22LoopDependenceAnalysis32GetDistanceEntryForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* dereferenceable(16), %"class.spvtools::opt::DistanceVector"*) local_unnamed_addr #1

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsZIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis7ZIVTestERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1, i64 0, i32 0
  %7 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1, i64 0, i32 1
  %9 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 18, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18, i1 false) #10
  %13 = getelementptr inbounds i8, i8* %12, i64 18
  store i8 0, i8* %13, align 2
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %3) #10
  %14 = load i8, i8* %11, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %2, %16
  %20 = icmp eq %"class.spvtools::opt::SENode"* %7, %9
  %21 = call i8* @_Znwm(i64 32) #11
  br i1 %20, label %22, label %33

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %25, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i64 28, i1 false) #10
  %26 = getelementptr inbounds i8, i8* %21, i64 28
  store i8 0, i8* %26, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %4) #10
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %22
  %32 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %32) #11
  br label %44

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %36, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0), i64 27, i1 false) #10
  %37 = getelementptr inbounds i8, i8* %21, i64 27
  store i8 0, i8* %37, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %5) #10
  %38 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %42, %33, %31, %22
  %45 = phi i1 [ false, %22 ], [ false, %31 ], [ true, %33 ], [ true, %42 ]
  ret i1 %45
}

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsSIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis7SIVTestERKNSt3__14pairIPNS0_6SENodeES5_EEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* dereferenceable(16), %"class.spvtools::opt::DistanceVector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector.1002", align 8
  %10 = alloca %"class.std::__1::vector.1002", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = tail call %"class.spvtools::opt::DistanceEntry"* @_ZN8spvtools3opt22LoopDependenceAnalysis32GetDistanceEntryForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %1, %"class.spvtools::opt::DistanceVector"* %2) #10
  %17 = icmp eq %"class.spvtools::opt::DistanceEntry"* %16, null
  br i1 %17, label %18, label %30

18:                                               ; preds = %3
  %19 = tail call i8* @_Znwm(i64 80) #11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 66, i64 -9223372036854775728>, <2 x i64>* %22, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 getelementptr inbounds ([67 x i8], [67 x i8]* @.str.13, i64 0, i64 0), i64 66, i1 false) #10
  %23 = getelementptr inbounds i8, i8* %19, i64 66
  store i8 0, i8* %23, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %4) #10
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %18, %3
  %31 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1, i64 0, i32 0
  %32 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1, i64 0, i32 1
  %34 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %33, align 8
  %35 = call i64 @_ZN8spvtools3opt22LoopDependenceAnalysis23CountInductionVariablesEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %32) #10
  %36 = call i64 @_ZN8spvtools3opt22LoopDependenceAnalysis23CountInductionVariablesEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %34) #10
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %78

38:                                               ; preds = %30
  %39 = call i8* @_Znwm(i64 48) #11
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %42, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i64 39, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %39, i64 39
  store i8 0, i8* %43, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %5) #10
  %44 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %38
  %49 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %38, %48
  %51 = bitcast %"class.spvtools::opt::SENode"* %34 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %52 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %52, i64 6
  %54 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %53, align 8
  %55 = call %"class.spvtools::opt::SERecurrentNode"* %54(%"class.spvtools::opt::SENode"* %34) #10
  %56 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %51, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %56, i64 6
  %58 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %57, align 8
  %59 = call %"class.spvtools::opt::SERecurrentNode"* %58(%"class.spvtools::opt::SENode"* %34) #10
  %60 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %59, i64 0, i32 1
  %61 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %60, align 8
  %62 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis21WeakZeroSourceSIVTestEPNS0_6SENodeEPNS0_15SERecurrentNodeES3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %32, %"class.spvtools::opt::SERecurrentNode"* %55, %"class.spvtools::opt::SENode"* %61, %"class.spvtools::opt::DistanceEntry"* %16)
  br i1 %62, label %63, label %78

63:                                               ; preds = %50
  %64 = call i8* @_Znwm(i64 48) #11
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %64, i8** %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast i64* %66 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %67, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str.15, i64 0, i64 0), i64 47, i1 false) #10
  %68 = getelementptr inbounds i8, i8* %64, i64 47
  store i8 0, i8* %68, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %6) #10
  %69 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %63
  %74 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %63, %73
  %76 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 0
  store i32 1, i32* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 1
  store i32 0, i32* %77, align 4
  br label %252

78:                                               ; preds = %50, %30
  %79 = icmp eq i64 %36, 0
  br i1 %79, label %80, label %120

80:                                               ; preds = %78
  %81 = call i8* @_Znwm(i64 48) #11
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %81, i8** %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %84, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.16, i64 0, i64 0), i64 44, i1 false) #10
  %85 = getelementptr inbounds i8, i8* %81, i64 44
  store i8 0, i8* %85, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %7) #10
  %86 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %80
  %91 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %80, %90
  %93 = bitcast %"class.spvtools::opt::SENode"* %32 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %94 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %94, i64 6
  %96 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %95, align 8
  %97 = call %"class.spvtools::opt::SERecurrentNode"* %96(%"class.spvtools::opt::SENode"* %32) #10
  %98 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %93, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %98, i64 6
  %100 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %99, align 8
  %101 = call %"class.spvtools::opt::SERecurrentNode"* %100(%"class.spvtools::opt::SENode"* %32) #10
  %102 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %101, i64 0, i32 1
  %103 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %102, align 8
  %104 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis26WeakZeroDestinationSIVTestEPNS0_15SERecurrentNodeEPNS0_6SENodeES5_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SERecurrentNode"* %97, %"class.spvtools::opt::SENode"* %34, %"class.spvtools::opt::SENode"* %103, %"class.spvtools::opt::DistanceEntry"* %16)
  br i1 %104, label %105, label %120

105:                                              ; preds = %92
  %106 = call i8* @_Znwm(i64 64) #11
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %106, i8** %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = bitcast i64* %108 to <2 x i64>*
  store <2 x i64> <i64 52, i64 -9223372036854775744>, <2 x i64>* %109, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %106, i8* align 1 getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0), i64 52, i1 false) #10
  %110 = getelementptr inbounds i8, i8* %106, i64 52
  store i8 0, i8* %110, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %8) #10
  %111 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %105
  %116 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %116) #11
  br label %117

117:                                              ; preds = %105, %115
  %118 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 0
  store i32 1, i32* %118, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 1
  store i32 0, i32* %119, align 4
  br label %252

120:                                              ; preds = %92, %78
  %121 = bitcast %"class.std::__1::vector.1002"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #10
  %122 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %9, i64 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %9, i64 0, i32 0, i32 1
  %124 = bitcast %"class.std::__1::vector.1002"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt6SENode21CollectRecurrentNodesEv(%"class.std::__1::vector.1002"* nonnull sret %9, %"class.spvtools::opt::SENode"* %32)
  %125 = bitcast %"class.std::__1::vector.1002"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #10
  %126 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %10, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %10, i64 0, i32 0, i32 1
  %128 = bitcast %"class.std::__1::vector.1002"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt6SENode21CollectRecurrentNodesEv(%"class.std::__1::vector.1002"* nonnull sret %10, %"class.spvtools::opt::SENode"* %34)
  %129 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %123 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.std::__1::vector.1002"* %9 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %130, %132
  %134 = icmp eq i64 %133, 8
  br i1 %134, label %135, label %234

135:                                              ; preds = %120
  %136 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %127 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.std::__1::vector.1002"* %10 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %137, %139
  %141 = icmp eq i64 %140, 8
  %142 = inttoptr i64 %139 to %"class.spvtools::opt::SERecurrentNode"**
  br i1 %141, label %143, label %237

143:                                              ; preds = %135
  %144 = call i8* @_Znwm(i64 64) #11
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %144, i8** %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> <i64 55, i64 -9223372036854775744>, <2 x i64>* %147, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %144, i8* align 1 getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18, i64 0, i64 0), i64 55, i1 false) #10
  %148 = getelementptr inbounds i8, i8* %144, i64 55
  store i8 0, i8* %148, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %11) #10
  %149 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %143
  %154 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %154) #11
  br label %155

155:                                              ; preds = %143, %153
  %156 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %122, align 8
  %157 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %156, align 8
  %158 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %126, align 8
  %159 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %158, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %157, i64 0, i32 1
  %161 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %160, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %159, i64 0, i32 1
  %163 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %162, align 8
  %164 = icmp eq %"class.spvtools::opt::SENode"* %161, %163
  br i1 %164, label %165, label %198

165:                                              ; preds = %155
  %166 = call i8* @_Znwm(i64 48) #11
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %166, i8** %167, align 8
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = bitcast i64* %168 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %169, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %166, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19, i64 0, i64 0), i64 47, i1 false) #10
  %170 = getelementptr inbounds i8, i8* %166, i64 47
  store i8 0, i8* %170, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %12) #10
  %171 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %165
  %176 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %176) #11
  br label %177

177:                                              ; preds = %165, %175
  %178 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %160, align 8
  %179 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13StrongSIVTestEPNS0_6SENodeES3_S3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %32, %"class.spvtools::opt::SENode"* %34, %"class.spvtools::opt::SENode"* %178, %"class.spvtools::opt::DistanceEntry"* %16)
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %160, align 8
  %182 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %162, align 8
  br label %198

183:                                              ; preds = %177
  %184 = call i8* @_Znwm(i64 48) #11
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %184, i8** %185, align 8
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %187 = bitcast i64* %186 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %187, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %184, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0), i64 38, i1 false) #10
  %188 = getelementptr inbounds i8, i8* %184, i64 38
  store i8 0, i8* %188, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %13) #10
  %189 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %183
  %194 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %194) #11
  br label %195

195:                                              ; preds = %183, %193
  %196 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 0
  store i32 1, i32* %196, align 8
  %197 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 1
  store i32 0, i32* %197, align 4
  br label %234

198:                                              ; preds = %180, %155
  %199 = phi %"class.spvtools::opt::SENode"* [ %182, %180 ], [ %163, %155 ]
  %200 = phi %"class.spvtools::opt::SENode"* [ %181, %180 ], [ %161, %155 ]
  %201 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %202 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %201, %"class.spvtools::opt::SENode"* %199) #10
  %203 = icmp eq %"class.spvtools::opt::SENode"* %200, %202
  br i1 %203, label %204, label %234

204:                                              ; preds = %198
  %205 = call i8* @_Znwm(i64 64) #11
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %205, i8** %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> <i64 52, i64 -9223372036854775744>, <2 x i64>* %208, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %205, i8* align 1 getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21, i64 0, i64 0), i64 52, i1 false) #10
  %209 = getelementptr inbounds i8, i8* %205, i64 52
  store i8 0, i8* %209, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %14) #10
  %210 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %204
  %215 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %215) #11
  br label %216

216:                                              ; preds = %204, %214
  %217 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %160, align 8
  %218 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis19WeakCrossingSIVTestEPNS0_6SENodeES3_S3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %32, %"class.spvtools::opt::SENode"* %34, %"class.spvtools::opt::SENode"* %217, %"class.spvtools::opt::DistanceEntry"* %16)
  br i1 %218, label %219, label %234

219:                                              ; preds = %216
  %220 = call i8* @_Znwm(i64 48) #11
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %220, i8** %221, align 8
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = bitcast i64* %222 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %223, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %220, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.22, i64 0, i64 0), i64 44, i1 false) #10
  %224 = getelementptr inbounds i8, i8* %220, i64 44
  store i8 0, i8* %224, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %15) #10
  %225 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %219
  %230 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %230) #11
  br label %231

231:                                              ; preds = %219, %229
  %232 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 0
  store i32 1, i32* %232, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %16, i64 0, i32 1
  store i32 0, i32* %233, align 4
  br label %234

234:                                              ; preds = %195, %231, %216, %198, %120
  %235 = phi i1 [ false, %120 ], [ false, %198 ], [ false, %216 ], [ true, %231 ], [ true, %195 ]
  %236 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %126, align 8
  br label %237

237:                                              ; preds = %234, %135
  %238 = phi %"class.spvtools::opt::SERecurrentNode"** [ %236, %234 ], [ %142, %135 ]
  %239 = phi i1 [ %235, %234 ], [ false, %135 ]
  %240 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %238, null
  br i1 %240, label %245, label %241

241:                                              ; preds = %237
  %242 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %238 to i64
  %243 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %127 to i64*
  store i64 %242, i64* %243, align 8
  %244 = bitcast %"class.spvtools::opt::SERecurrentNode"** %238 to i8*
  call void @_ZdlPv(i8* %244) #11
  br label %245

245:                                              ; preds = %237, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #10
  %246 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %122, align 8
  %247 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %246, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %245
  %249 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %246 to i64
  store i64 %249, i64* %129, align 8
  %250 = bitcast %"class.spvtools::opt::SERecurrentNode"** %246 to i8*
  call void @_ZdlPv(i8* %250) #11
  br label %251

251:                                              ; preds = %245, %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #10
  br label %252

252:                                              ; preds = %251, %117, %75
  %253 = phi i1 [ true, %75 ], [ true, %117 ], [ %239, %251 ]
  ret i1 %253
}

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsMIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis10GCDMIVTestERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* nocapture readnone, %"struct.std::__1::pair.983"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.1002", align 8
  %4 = alloca %"class.std::__1::vector.1002", align 8
  %5 = alloca %"class.std::__1::vector.1019", align 8
  %6 = alloca %"class.std::__1::vector.1019", align 8
  %7 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1, i64 0, i32 0
  %8 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1, i64 0, i32 1
  %10 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %9, align 8
  %11 = tail call fastcc zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_125IsInCorrectFormForGCDTestEPNS0_6SENodeE(%"class.spvtools::opt::SENode"* %8)
  br i1 %11, label %12, label %357

12:                                               ; preds = %2
  %13 = tail call fastcc zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_125IsInCorrectFormForGCDTestEPNS0_6SENodeE(%"class.spvtools::opt::SENode"* %10)
  br i1 %13, label %14, label %357

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.1002"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %3, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::vector.1002"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_125GetAllTopLevelRecurrencesEPNS0_6SENodeE(%"class.std::__1::vector.1002"* nonnull sret %3, %"class.spvtools::opt::SENode"* %8)
  %19 = bitcast %"class.std::__1::vector.1002"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %4, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::vector.1002"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_125GetAllTopLevelRecurrencesEPNS0_6SENodeE(%"class.std::__1::vector.1002"* nonnull sret %4, %"class.spvtools::opt::SENode"* %10)
  %23 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %16, align 8
  %24 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %17, align 8
  %25 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %23, %24
  br i1 %25, label %48, label %28

26:                                               ; preds = %39
  %27 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %47, %24
  br i1 %27, label %48, label %28

28:                                               ; preds = %14, %26
  %29 = phi %"class.spvtools::opt::SERecurrentNode"** [ %47, %26 ], [ %23, %14 ]
  %30 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %30, i64 0, i32 2
  %32 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %31, align 8
  %33 = bitcast %"class.spvtools::opt::SENode"* %32 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %34 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %34, i64 4
  %36 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %35, align 8
  %37 = call %"class.spvtools::opt::SEConstantNode"* %36(%"class.spvtools::opt::SENode"* %32) #10
  %38 = icmp eq %"class.spvtools::opt::SEConstantNode"* %37, null
  br i1 %38, label %341, label %39

39:                                               ; preds = %28
  %40 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %31, align 8
  %41 = bitcast %"class.spvtools::opt::SENode"* %40 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %42 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %42, i64 4
  %44 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %43, align 8
  %45 = call %"class.spvtools::opt::SEConstantNode"* %44(%"class.spvtools::opt::SENode"* %40) #10
  %46 = icmp eq %"class.spvtools::opt::SEConstantNode"* %45, null
  %47 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %29, i64 1
  br i1 %46, label %341, label %26

48:                                               ; preds = %26, %14
  %49 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %20, align 8
  %50 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %21, align 8
  %51 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %49, %50
  br i1 %51, label %74, label %54

52:                                               ; preds = %65
  %53 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %73, %50
  br i1 %53, label %74, label %54

54:                                               ; preds = %48, %52
  %55 = phi %"class.spvtools::opt::SERecurrentNode"** [ %73, %52 ], [ %49, %48 ]
  %56 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %56, i64 0, i32 2
  %58 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %57, align 8
  %59 = bitcast %"class.spvtools::opt::SENode"* %58 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %60 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %60, i64 4
  %62 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %61, align 8
  %63 = call %"class.spvtools::opt::SEConstantNode"* %62(%"class.spvtools::opt::SENode"* %58) #10
  %64 = icmp eq %"class.spvtools::opt::SEConstantNode"* %63, null
  br i1 %64, label %341, label %65

65:                                               ; preds = %54
  %66 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %57, align 8
  %67 = bitcast %"class.spvtools::opt::SENode"* %66 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %68 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %68, i64 4
  %70 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %69, align 8
  %71 = call %"class.spvtools::opt::SEConstantNode"* %70(%"class.spvtools::opt::SENode"* %66) #10
  %72 = icmp eq %"class.spvtools::opt::SEConstantNode"* %71, null
  %73 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %55, i64 1
  br i1 %72, label %341, label %52

74:                                               ; preds = %52, %48
  %75 = bitcast %"class.std::__1::vector.1019"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %5, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %5, i64 0, i32 0, i32 1
  %78 = bitcast %"class.std::__1::vector.1019"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_123GetAllTopLevelConstantsEPNS0_6SENodeE(%"class.std::__1::vector.1019"* nonnull sret %5, %"class.spvtools::opt::SENode"* %8)
  %79 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %16, align 8
  %80 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %17, align 8
  %81 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %79, %80
  br i1 %81, label %82, label %112

82:                                               ; preds = %112, %74
  %83 = phi i64 [ 0, %74 ], [ %125, %112 ]
  %84 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %76, align 8
  %85 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %77, align 8
  %86 = icmp eq %"class.spvtools::opt::SEConstantNode"** %84, %85
  br i1 %86, label %172, label %87

87:                                               ; preds = %82
  %88 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %84 to i64
  %89 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %85, i64 -1
  %90 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %89 to i64
  %91 = sub i64 %90, %88
  %92 = lshr i64 %91, 3
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 7
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %87, %96
  %97 = phi i64 [ %103, %96 ], [ %83, %87 ]
  %98 = phi %"class.spvtools::opt::SEConstantNode"** [ %104, %96 ], [ %84, %87 ]
  %99 = phi i64 [ %105, %96 ], [ %94, %87 ]
  %100 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %98, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %100, i64 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = add nsw i64 %102, %97
  %104 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %98, i64 1
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %96, !llvm.loop !2

107:                                              ; preds = %96, %87
  %108 = phi i64 [ undef, %87 ], [ %103, %96 ]
  %109 = phi i64 [ %83, %87 ], [ %103, %96 ]
  %110 = phi %"class.spvtools::opt::SEConstantNode"** [ %84, %87 ], [ %104, %96 ]
  %111 = icmp ult i64 %91, 56
  br i1 %111, label %172, label %128

112:                                              ; preds = %74, %112
  %113 = phi i64 [ %125, %112 ], [ 0, %74 ]
  %114 = phi %"class.spvtools::opt::SERecurrentNode"** [ %126, %112 ], [ %79, %74 ]
  %115 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %114, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %115, i64 0, i32 2
  %117 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %116, align 8
  %118 = bitcast %"class.spvtools::opt::SENode"* %117 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %119 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %119, i64 4
  %121 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %120, align 8
  %122 = call %"class.spvtools::opt::SEConstantNode"* %121(%"class.spvtools::opt::SENode"* %117) #10
  %123 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %122, i64 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = add nsw i64 %124, %113
  %126 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %114, i64 1
  %127 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %126, %80
  br i1 %127, label %82, label %112

128:                                              ; preds = %107, %128
  %129 = phi i64 [ %169, %128 ], [ %109, %107 ]
  %130 = phi %"class.spvtools::opt::SEConstantNode"** [ %170, %128 ], [ %110, %107 ]
  %131 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, align 8
  %132 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %131, i64 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %133, %129
  %135 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 1
  %136 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %135, align 8
  %137 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %136, i64 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = add nsw i64 %138, %134
  %140 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 2
  %141 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %141, i64 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = add nsw i64 %143, %139
  %145 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 3
  %146 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %146, i64 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %148, %144
  %150 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 4
  %151 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %151, i64 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = add nsw i64 %153, %149
  %155 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 5
  %156 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %155, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %156, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = add nsw i64 %158, %154
  %160 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 6
  %161 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %160, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %161, i64 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = add nsw i64 %163, %159
  %165 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 7
  %166 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %166, i64 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = add nsw i64 %168, %164
  %170 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %130, i64 8
  %171 = icmp eq %"class.spvtools::opt::SEConstantNode"** %170, %85
  br i1 %171, label %172, label %128

172:                                              ; preds = %107, %128, %82
  %173 = phi i64 [ %83, %82 ], [ %108, %107 ], [ %169, %128 ]
  %174 = bitcast %"class.std::__1::vector.1019"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #10
  %175 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %6, i64 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %6, i64 0, i32 0, i32 1
  %177 = bitcast %"class.std::__1::vector.1019"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_123GetAllTopLevelConstantsEPNS0_6SENodeE(%"class.std::__1::vector.1019"* nonnull sret %6, %"class.spvtools::opt::SENode"* %10)
  %178 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %20, align 8
  %179 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %21, align 8
  %180 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %178, %179
  br i1 %180, label %181, label %211

181:                                              ; preds = %211, %172
  %182 = phi i64 [ 0, %172 ], [ %224, %211 ]
  %183 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %175, align 8
  %184 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %176, align 8
  %185 = icmp eq %"class.spvtools::opt::SEConstantNode"** %183, %184
  br i1 %185, label %271, label %186

186:                                              ; preds = %181
  %187 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %183 to i64
  %188 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %184, i64 -1
  %189 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %188 to i64
  %190 = sub i64 %189, %187
  %191 = lshr i64 %190, 3
  %192 = add nuw nsw i64 %191, 1
  %193 = and i64 %192, 7
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %206, label %195

195:                                              ; preds = %186, %195
  %196 = phi i64 [ %202, %195 ], [ %182, %186 ]
  %197 = phi %"class.spvtools::opt::SEConstantNode"** [ %203, %195 ], [ %183, %186 ]
  %198 = phi i64 [ %204, %195 ], [ %193, %186 ]
  %199 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %197, align 8
  %200 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %199, i64 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = add nsw i64 %201, %196
  %203 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %197, i64 1
  %204 = add i64 %198, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %195, !llvm.loop !4

206:                                              ; preds = %195, %186
  %207 = phi i64 [ undef, %186 ], [ %202, %195 ]
  %208 = phi i64 [ %182, %186 ], [ %202, %195 ]
  %209 = phi %"class.spvtools::opt::SEConstantNode"** [ %183, %186 ], [ %203, %195 ]
  %210 = icmp ult i64 %190, 56
  br i1 %210, label %271, label %227

211:                                              ; preds = %172, %211
  %212 = phi i64 [ %224, %211 ], [ 0, %172 ]
  %213 = phi %"class.spvtools::opt::SERecurrentNode"** [ %225, %211 ], [ %178, %172 ]
  %214 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %213, align 8
  %215 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %214, i64 0, i32 2
  %216 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %215, align 8
  %217 = bitcast %"class.spvtools::opt::SENode"* %216 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %218 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %217, align 8
  %219 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %218, i64 4
  %220 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %219, align 8
  %221 = call %"class.spvtools::opt::SEConstantNode"* %220(%"class.spvtools::opt::SENode"* %216) #10
  %222 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %221, i64 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = add nsw i64 %223, %212
  %225 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %213, i64 1
  %226 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %225, %179
  br i1 %226, label %181, label %211

227:                                              ; preds = %206, %227
  %228 = phi i64 [ %268, %227 ], [ %208, %206 ]
  %229 = phi %"class.spvtools::opt::SEConstantNode"** [ %269, %227 ], [ %209, %206 ]
  %230 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, align 8
  %231 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %230, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = add nsw i64 %232, %228
  %234 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 1
  %235 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %234, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %235, i64 0, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = add nsw i64 %237, %233
  %239 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 2
  %240 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %239, align 8
  %241 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %240, i64 0, i32 1
  %242 = load i64, i64* %241, align 8
  %243 = add nsw i64 %242, %238
  %244 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 3
  %245 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %244, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %245, i64 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = add nsw i64 %247, %243
  %249 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 4
  %250 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %249, align 8
  %251 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %250, i64 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = add nsw i64 %252, %248
  %254 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 5
  %255 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %254, align 8
  %256 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %255, i64 0, i32 1
  %257 = load i64, i64* %256, align 8
  %258 = add nsw i64 %257, %253
  %259 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 6
  %260 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %259, align 8
  %261 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %260, i64 0, i32 1
  %262 = load i64, i64* %261, align 8
  %263 = add nsw i64 %262, %258
  %264 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 7
  %265 = load %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %265, i64 0, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = add nsw i64 %267, %263
  %269 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %229, i64 8
  %270 = icmp eq %"class.spvtools::opt::SEConstantNode"** %269, %184
  br i1 %270, label %271, label %227

271:                                              ; preds = %206, %227, %181
  %272 = phi i64 [ %182, %181 ], [ %207, %206 ], [ %268, %227 ]
  %273 = sub nsw i64 %173, %272
  %274 = sub nsw i64 0, %273
  %275 = icmp slt i64 %273, 0
  %276 = select i1 %275, i64 %274, i64 %273
  %277 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %16, align 8
  %278 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %17, align 8
  %279 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %277, %278
  br i1 %279, label %299, label %280

280:                                              ; preds = %271, %280
  %281 = phi i64 [ %296, %280 ], [ 0, %271 ]
  %282 = phi %"class.spvtools::opt::SERecurrentNode"** [ %297, %280 ], [ %277, %271 ]
  %283 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %282, align 8
  %284 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %283, i64 0, i32 1
  %285 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %284, align 8
  %286 = bitcast %"class.spvtools::opt::SENode"* %285 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %287 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %286, align 8
  %288 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %287, i64 4
  %289 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %288, align 8
  %290 = call %"class.spvtools::opt::SEConstantNode"* %289(%"class.spvtools::opt::SENode"* %285) #10
  %291 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %290, i64 0, i32 1
  %292 = load i64, i64* %291, align 8
  %293 = sub nsw i64 0, %292
  %294 = icmp slt i64 %292, 0
  %295 = select i1 %294, i64 %293, i64 %292
  %296 = call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %281, i64 %295) #10
  %297 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %282, i64 1
  %298 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %297, %278
  br i1 %298, label %299, label %280

299:                                              ; preds = %280, %271
  %300 = phi i64 [ 0, %271 ], [ %296, %280 ]
  %301 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %20, align 8
  %302 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %21, align 8
  %303 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %301, %302
  br i1 %303, label %323, label %304

304:                                              ; preds = %299, %304
  %305 = phi i64 [ %320, %304 ], [ %300, %299 ]
  %306 = phi %"class.spvtools::opt::SERecurrentNode"** [ %321, %304 ], [ %301, %299 ]
  %307 = load %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %306, align 8
  %308 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %307, i64 0, i32 1
  %309 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %308, align 8
  %310 = bitcast %"class.spvtools::opt::SENode"* %309 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %311 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %310, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %311, i64 4
  %313 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %312, align 8
  %314 = call %"class.spvtools::opt::SEConstantNode"* %313(%"class.spvtools::opt::SENode"* %309) #10
  %315 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %314, i64 0, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = sub nsw i64 0, %316
  %318 = icmp slt i64 %316, 0
  %319 = select i1 %318, i64 %317, i64 %316
  %320 = call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %305, i64 %319) #10
  %321 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %306, i64 1
  %322 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %321, %302
  br i1 %322, label %323, label %304

323:                                              ; preds = %304, %299
  %324 = phi i64 [ %300, %299 ], [ %320, %304 ]
  %325 = srem i64 %276, %324
  %326 = icmp ne i64 %325, 0
  %327 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %175, align 8
  %328 = icmp eq %"class.spvtools::opt::SEConstantNode"** %327, null
  br i1 %328, label %333, label %329

329:                                              ; preds = %323
  %330 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %327 to i64
  %331 = bitcast %"class.spvtools::opt::SEConstantNode"*** %176 to i64*
  store i64 %330, i64* %331, align 8
  %332 = bitcast %"class.spvtools::opt::SEConstantNode"** %327 to i8*
  call void @_ZdlPv(i8* %332) #11
  br label %333

333:                                              ; preds = %323, %329
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #10
  %334 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %76, align 8
  %335 = icmp eq %"class.spvtools::opt::SEConstantNode"** %334, null
  br i1 %335, label %340, label %336

336:                                              ; preds = %333
  %337 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %334 to i64
  %338 = bitcast %"class.spvtools::opt::SEConstantNode"*** %77 to i64*
  store i64 %337, i64* %338, align 8
  %339 = bitcast %"class.spvtools::opt::SEConstantNode"** %334 to i8*
  call void @_ZdlPv(i8* %339) #11
  br label %340

340:                                              ; preds = %333, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %341

341:                                              ; preds = %39, %28, %65, %54, %340
  %342 = phi i1 [ %326, %340 ], [ false, %54 ], [ false, %65 ], [ false, %28 ], [ false, %39 ]
  %343 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %20, align 8
  %344 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %343, null
  br i1 %344, label %349, label %345

345:                                              ; preds = %341
  %346 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %343 to i64
  %347 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %21 to i64*
  store i64 %346, i64* %347, align 8
  %348 = bitcast %"class.spvtools::opt::SERecurrentNode"** %343 to i8*
  call void @_ZdlPv(i8* %348) #11
  br label %349

349:                                              ; preds = %341, %345
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  %350 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %16, align 8
  %351 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %350, null
  br i1 %351, label %356, label %352

352:                                              ; preds = %349
  %353 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %350 to i64
  %354 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %17 to i64*
  store i64 %353, i64* %354, align 8
  %355 = bitcast %"class.spvtools::opt::SERecurrentNode"** %350 to i8*
  call void @_ZdlPv(i8* %355) #11
  br label %356

356:                                              ; preds = %349, %352
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  br label %357

357:                                              ; preds = %2, %12, %356
  %358 = phi i1 [ %342, %356 ], [ false, %12 ], [ false, %2 ]
  ret i1 %358
}

declare void @_ZN8spvtools3opt22LoopDependenceAnalysis12CollectLoopsEPNS0_6SENodeES3_(%"class.std::__1::set.984"* sret, %"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

declare %"class.spvtools::opt::DistanceEntry"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetDistanceEntryForLoopEPKNS0_4LoopEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::DistanceVector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis9DeltaTestERKNSt3__16vectorINS2_4pairIPNS0_6SENodeES6_EENS2_9allocatorIS7_EEEEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.std::__1::vector.993"* nocapture readonly dereferenceable(24), %"class.spvtools::opt::DistanceVector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca [22 x i8], align 2
  %5 = alloca %"class.std::__1::vector.1031", align 16
  %6 = alloca %"class.std::__1::vector.1039", align 8
  %7 = alloca %"class.std::__1::vector.993", align 8
  %8 = alloca %"class.std::__1::vector.993", align 8
  %9 = alloca %"class.std::__1::vector.1039", align 8
  %10 = alloca %"class.std::__1::vector.1044", align 8
  %11 = alloca %"class.spvtools::opt::DistanceVector", align 8
  %12 = alloca %"class.std::__1::vector.1054", align 8
  %13 = alloca %"class.std::__1::vector.1031", align 16
  %14 = alloca %"class.std::__1::vector.993", align 8
  %15 = alloca %"class.std::__1::vector.993", align 8
  %16 = alloca %"class.std::__1::vector.993", align 8
  %17 = alloca %"class.std::__1::vector.1039", align 8
  %18 = bitcast %"class.std::__1::vector.1031"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %5, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"class.spvtools::opt::Loop"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.910"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 24, i1 false) #10
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %3
  %32 = icmp ugt i64 %29, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.1031"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %34) #12
  unreachable

35:                                               ; preds = %31
  %36 = tail call i8* @_Znwm(i64 %28) #11
  %37 = bitcast i8* %36 to %"class.spvtools::opt::Constraint"**
  %38 = bitcast %"class.std::__1::vector.1031"* %5 to i8**
  store i8* %36, i8** %38, align 16
  %39 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %37, i64 %29
  store %"class.spvtools::opt::Constraint"** %39, %"class.spvtools::opt::Constraint"*** %21, align 16
  %40 = bitcast %"class.spvtools::opt::Constraint"*** %20 to i64*
  %41 = ptrtoint i8* %36 to i64
  %42 = add nsw i64 %29, -1
  %43 = getelementptr %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %37, i64 %42
  %44 = ptrtoint %"class.spvtools::opt::Constraint"** %43 to i64
  %45 = sub i64 8, %41
  %46 = add i64 %45, %44
  %47 = and i64 %46, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 %47, i1 false) #10
  %48 = ptrtoint %"class.spvtools::opt::Constraint"** %39 to i64
  store i64 %48, i64* %40, align 8
  br label %49

49:                                               ; preds = %3, %35
  %50 = phi %"class.spvtools::opt::Constraint"** [ null, %3 ], [ %39, %35 ]
  %51 = phi %"class.spvtools::opt::Constraint"** [ null, %3 ], [ %37, %35 ]
  %52 = bitcast %"class.std::__1::vector.1039"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #10
  br i1 %30, label %78, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %6, i64 0, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %6, i64 0, i32 1
  %57 = add nsw i64 %29, -1
  %58 = lshr i64 %57, 6
  %59 = add nuw nsw i64 %58, 1
  %60 = shl nuw nsw i64 %59, 3
  %61 = tail call i8* @_Znwm(i64 %60) #11
  %62 = bitcast %"class.std::__1::vector.1039"* %6 to i8**
  store i8* %61, i8** %62, align 8
  store i64 %59, i64* %55, align 8
  store i64 %29, i64* %56, align 8
  %63 = icmp ult i64 %29, 65
  %64 = bitcast i8* %61 to i64*
  %65 = getelementptr inbounds i64, i64* %64, i64 %58
  %66 = select i1 %63, i64* %64, i64* %65
  store i64 0, i64* %66, align 8
  %67 = lshr i64 %29, 6
  %68 = shl nuw nsw i64 %67, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 %68, i1 false) #10
  %69 = and i64 %29, 63
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %54
  %72 = getelementptr inbounds i64, i64* %64, i64 %67
  %73 = sub nuw nsw i64 64, %69
  %74 = lshr i64 -1, %73
  %75 = xor i64 %74, -1
  %76 = load i64, i64* %72, align 8
  %77 = and i64 %76, %75
  store i64 %77, i64* %72, align 8
  br label %78

78:                                               ; preds = %49, %54, %71
  %79 = icmp eq %"class.spvtools::opt::Constraint"** %51, %50
  br i1 %79, label %108, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %82 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %81, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %81, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.std::__1::list"* %81 to i8**
  %85 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  br label %86

86:                                               ; preds = %86, %80
  %87 = phi %"class.spvtools::opt::Constraint"** [ %51, %80 ], [ %106, %86 ]
  %88 = tail call i8* @_Znwm(i64 16) #11
  %89 = bitcast i8* %88 to i32 (...)***
  %90 = getelementptr inbounds i8, i8* %88, i64 8
  %91 = bitcast i8* %90 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %91, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt14DependenceNoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %92 = ptrtoint i8* %88 to i64
  %93 = tail call i8* @_Znwm(i64 24) #11, !noalias !5
  %94 = bitcast i8* %93 to %"struct.std::__1::__list_node_base"**
  %95 = getelementptr inbounds i8, i8* %93, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 %92, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 8
  %98 = bitcast i8* %97 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %82, %"struct.std::__1::__list_node_base"** %98, align 8
  %99 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %83, align 8
  store %"struct.std::__1::__list_node_base"* %99, %"struct.std::__1::__list_node_base"** %94, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %99, i64 0, i32 1
  %101 = bitcast %"struct.std::__1::__list_node_base"** %100 to i8**
  store i8* %93, i8** %101, align 8
  store i8* %93, i8** %84, align 8
  %102 = load i64, i64* %85, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %85, align 8
  %104 = load i64, i64* %96, align 8
  %105 = bitcast %"class.spvtools::opt::Constraint"** %87 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %87, i64 1
  %107 = icmp eq %"class.spvtools::opt::Constraint"** %106, %50
  br i1 %107, label %108, label %86

108:                                              ; preds = %86, %78
  %109 = bitcast %"class.std::__1::vector.993"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #10
  %110 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %7, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %7, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 24, i1 false) #10
  %113 = bitcast %"class.std::__1::vector.993"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #10
  %114 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %8, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %8, i64 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 24, i1 false) #10
  %117 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %1, i64 0, i32 0, i32 0
  %118 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %1, i64 0, i32 0, i32 1
  %120 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %119, align 8
  %121 = icmp eq %"struct.std::__1::pair.983"* %118, %120
  br i1 %121, label %122, label %129

122:                                              ; preds = %108
  %123 = bitcast %"struct.std::__1::pair.983"** %111 to i64*
  %124 = bitcast %"class.std::__1::vector.993"* %7 to i64*
  %125 = bitcast %"struct.std::__1::pair.983"** %115 to i64*
  %126 = bitcast %"class.std::__1::vector.993"* %8 to i64*
  %127 = bitcast %"struct.std::__1::pair.983"** %112 to i64*
  %128 = bitcast %"struct.std::__1::pair.983"** %116 to i64*
  br label %136

129:                                              ; preds = %108
  %130 = bitcast %"struct.std::__1::pair.983"** %115 to i64*
  %131 = bitcast %"class.std::__1::vector.993"* %8 to i64*
  %132 = bitcast %"struct.std::__1::pair.983"** %116 to i64*
  %133 = bitcast %"struct.std::__1::pair.983"** %111 to i64*
  %134 = bitcast %"class.std::__1::vector.993"* %7 to i64*
  %135 = bitcast %"struct.std::__1::pair.983"** %112 to i64*
  br label %218

136:                                              ; preds = %341, %122
  %137 = phi i64* [ %128, %122 ], [ %132, %341 ]
  %138 = phi i64* [ %127, %122 ], [ %135, %341 ]
  %139 = phi i64* [ %126, %122 ], [ %131, %341 ]
  %140 = phi i64* [ %125, %122 ], [ %130, %341 ]
  %141 = phi i64* [ %124, %122 ], [ %134, %341 ]
  %142 = phi i64* [ %123, %122 ], [ %133, %341 ]
  %143 = phi i64 [ 0, %122 ], [ %346, %341 ]
  %144 = phi i64 [ 0, %122 ], [ %344, %341 ]
  %145 = phi %"struct.std::__1::pair.983"* [ null, %122 ], [ %342, %341 ]
  %146 = phi %"struct.std::__1::pair.983"* [ null, %122 ], [ %343, %341 ]
  %147 = bitcast %"class.std::__1::vector.1039"* %9 to i8*
  %148 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %9, i64 0, i32 0
  %149 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %9, i64 0, i32 1
  %150 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %9, i64 0, i32 2, i32 0, i32 0
  %151 = bitcast %"class.std::__1::vector.1039"* %9 to i8**
  %152 = bitcast %"class.std::__1::vector.1044"* %10 to i8*
  %153 = getelementptr inbounds %"class.std::__1::vector.1044", %"class.std::__1::vector.1044"* %10, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.std::__1::vector.1044", %"class.std::__1::vector.1044"* %10, i64 0, i32 0, i32 1
  %155 = bitcast %"class.spvtools::opt::DistanceVector"* %11 to i8*
  %156 = getelementptr inbounds [22 x i8], [22 x i8]* %4, i64 0, i64 0
  %157 = getelementptr inbounds [22 x i8], [22 x i8]* %4, i64 0, i64 6
  %158 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %11, i64 0, i32 0, i32 0, i32 1
  %159 = bitcast %"class.spvtools::opt::DistanceEntry"** %158 to i8**
  %160 = bitcast %"class.spvtools::opt::DistanceVector"* %11 to i8**
  %161 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %162 = bitcast %"class.spvtools::opt::DistanceEntry"** %158 to i64*
  %163 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %11, i64 0, i32 0, i32 0, i32 0
  %164 = bitcast %"class.std::__1::vector.1039"* %9 to i64*
  %165 = bitcast %"class.std::__1::vector.1054"* %12 to i8*
  %166 = getelementptr inbounds %"class.std::__1::vector.1054", %"class.std::__1::vector.1054"* %12, i64 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.std::__1::vector.1054", %"class.std::__1::vector.1054"* %12, i64 0, i32 0, i32 1
  %168 = getelementptr inbounds %"class.std::__1::vector.1054", %"class.std::__1::vector.1054"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %169 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %22, i64 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %171 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %172 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %171, i64 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %171, i64 0, i32 0, i32 0, i32 0
  %174 = bitcast %"class.std::__1::list"* %171 to i8**
  %175 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %176 = bitcast %"struct.std::__1::pair.1056"** %167 to i64*
  %177 = bitcast %"class.std::__1::vector.1054"* %12 to i64*
  %178 = bitcast %"struct.std::__1::pair.1056"** %168 to i64*
  %179 = bitcast %"class.std::__1::vector.1031"* %13 to i8*
  %180 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %13, i64 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %13, i64 0, i32 0, i32 1
  %182 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %183 = bitcast %"class.spvtools::opt::Constraint"*** %20 to i64*
  %184 = bitcast %"class.std::__1::vector.1031"* %5 to i64*
  %185 = bitcast %"class.spvtools::opt::Constraint"*** %181 to i8**
  %186 = bitcast %"class.std::__1::vector.1031"* %13 to i8**
  %187 = bitcast %"class.spvtools::opt::Constraint"*** %181 to i64*
  %188 = bitcast %"class.std::__1::vector.993"* %14 to i8*
  %189 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %14, i64 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %14, i64 0, i32 0, i32 1
  %191 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %192 = bitcast %"class.std::__1::vector.993"* %15 to i8*
  %193 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %15, i64 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %15, i64 0, i32 0, i32 1
  %195 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %196 = bitcast %"class.std::__1::vector.993"* %16 to i8*
  %197 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %16, i64 0, i32 0, i32 0
  %198 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %16, i64 0, i32 0, i32 1
  %199 = getelementptr inbounds %"class.std::__1::vector.993", %"class.std::__1::vector.993"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %200 = bitcast %"class.std::__1::vector.993"* %16 to i8**
  %201 = bitcast %"struct.std::__1::pair.983"** %198 to i64*
  %202 = bitcast %"struct.std::__1::pair.983"** %194 to i64*
  %203 = bitcast %"class.std::__1::vector.993"* %15 to i64*
  %204 = bitcast %"struct.std::__1::pair.983"** %195 to i64*
  %205 = bitcast %"struct.std::__1::pair.983"** %190 to i64*
  %206 = bitcast %"class.std::__1::vector.993"* %14 to i64*
  %207 = bitcast %"struct.std::__1::pair.983"** %191 to i64*
  %208 = bitcast %"class.spvtools::opt::Constraint"*** %21 to i64*
  %209 = bitcast %"class.spvtools::opt::Constraint"*** %182 to i64*
  %210 = bitcast %"class.std::__1::vector.1044"* %10 to i8**
  %211 = bitcast %"class.std::__1::vector.1044"* %10 to i8*
  %212 = icmp eq %"struct.std::__1::pair.983"* %146, %145
  br i1 %212, label %356, label %213

213:                                              ; preds = %136
  %214 = bitcast %"class.std::__1::vector.1031"* %13 to <2 x i64>*
  %215 = bitcast %"class.std::__1::vector.1031"* %5 to <2 x i64>*
  %216 = bitcast %"class.std::__1::vector.1031"* %5 to <2 x i64>*
  %217 = bitcast %"class.std::__1::vector.1031"* %13 to <2 x i64>*
  br label %363

218:                                              ; preds = %129, %341
  %219 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %342, %341 ]
  %220 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %343, %341 ]
  %221 = phi i64 [ 0, %129 ], [ %344, %341 ]
  %222 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %345, %341 ]
  %223 = phi i64 [ 0, %129 ], [ %346, %341 ]
  %224 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %347, %341 ]
  %225 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %348, %341 ]
  %226 = phi i64 [ 0, %129 ], [ %349, %341 ]
  %227 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %350, %341 ]
  %228 = phi i64 [ 0, %129 ], [ %351, %341 ]
  %229 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %352, %341 ]
  %230 = phi %"struct.std::__1::pair.983"* [ null, %129 ], [ %353, %341 ]
  %231 = phi %"struct.std::__1::pair.983"* [ %118, %129 ], [ %354, %341 ]
  %232 = tail call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsSIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %231) #10
  br i1 %232, label %233, label %287

233:                                              ; preds = %218
  %234 = icmp eq %"struct.std::__1::pair.983"* %225, %224
  br i1 %234, label %240, label %235

235:                                              ; preds = %233
  %236 = bitcast %"struct.std::__1::pair.983"* %225 to i8*
  %237 = bitcast %"struct.std::__1::pair.983"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #10
  %238 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %225, i64 1
  %239 = ptrtoint %"struct.std::__1::pair.983"* %238 to i64
  store i64 %239, i64* %133, align 8
  br label %341

240:                                              ; preds = %233
  %241 = ptrtoint %"struct.std::__1::pair.983"* %224 to i64
  %242 = sub i64 %241, %223
  %243 = ashr exact i64 %242, 4
  %244 = add nsw i64 %243, 1
  %245 = icmp ugt i64 %244, 1152921504606846975
  br i1 %245, label %246, label %248

246:                                              ; preds = %240
  %247 = bitcast %"class.std::__1::vector.993"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %247) #12
  unreachable

248:                                              ; preds = %240
  %249 = icmp ult i64 %243, 576460752303423487
  br i1 %249, label %250, label %258

250:                                              ; preds = %248
  %251 = ashr exact i64 %242, 3
  %252 = icmp ult i64 %251, %244
  %253 = select i1 %252, i64 %244, i64 %251
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %263, label %255

255:                                              ; preds = %250
  %256 = icmp ugt i64 %253, 1152921504606846975
  br i1 %256, label %257, label %258

257:                                              ; preds = %255
  tail call void @abort() #12
  unreachable

258:                                              ; preds = %255, %248
  %259 = phi i64 [ %253, %255 ], [ 1152921504606846975, %248 ]
  %260 = shl i64 %259, 4
  %261 = tail call i8* @_Znwm(i64 %260) #11
  %262 = bitcast i8* %261 to %"struct.std::__1::pair.983"*
  br label %263

263:                                              ; preds = %258, %250
  %264 = phi i64 [ %259, %258 ], [ 0, %250 ]
  %265 = phi %"struct.std::__1::pair.983"* [ %262, %258 ], [ null, %250 ]
  %266 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %265, i64 %243
  %267 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %265, i64 %264
  %268 = ptrtoint %"struct.std::__1::pair.983"* %267 to i64
  %269 = bitcast %"struct.std::__1::pair.983"* %266 to i8*
  %270 = bitcast %"struct.std::__1::pair.983"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %270, i64 16, i1 false) #10
  %271 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %266, i64 1
  %272 = ptrtoint %"struct.std::__1::pair.983"* %271 to i64
  %273 = ptrtoint %"struct.std::__1::pair.983"* %222 to i64
  %274 = sub i64 %221, %273
  %275 = ashr exact i64 %274, 4
  %276 = sub nsw i64 0, %275
  %277 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %266, i64 %276
  %278 = ptrtoint %"struct.std::__1::pair.983"* %277 to i64
  %279 = icmp sgt i64 %274, 0
  br i1 %279, label %280, label %283

280:                                              ; preds = %263
  %281 = bitcast %"struct.std::__1::pair.983"* %277 to i8*
  %282 = bitcast %"struct.std::__1::pair.983"* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 %274, i1 false) #10
  br label %283

283:                                              ; preds = %280, %263
  store i64 %278, i64* %134, align 8
  store i64 %272, i64* %133, align 8
  store i64 %268, i64* %135, align 8
  %284 = icmp eq %"struct.std::__1::pair.983"* %222, null
  br i1 %284, label %341, label %285

285:                                              ; preds = %283
  %286 = bitcast %"struct.std::__1::pair.983"* %222 to i8*
  tail call void @_ZdlPv(i8* %286) #11
  br label %341

287:                                              ; preds = %218
  %288 = icmp eq %"struct.std::__1::pair.983"* %230, %229
  br i1 %288, label %294, label %289

289:                                              ; preds = %287
  %290 = bitcast %"struct.std::__1::pair.983"* %230 to i8*
  %291 = bitcast %"struct.std::__1::pair.983"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %291, i64 16, i1 false) #10
  %292 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %230, i64 1
  %293 = ptrtoint %"struct.std::__1::pair.983"* %292 to i64
  store i64 %293, i64* %130, align 8
  br label %341

294:                                              ; preds = %287
  %295 = ptrtoint %"struct.std::__1::pair.983"* %229 to i64
  %296 = sub i64 %295, %228
  %297 = ashr exact i64 %296, 4
  %298 = add nsw i64 %297, 1
  %299 = icmp ugt i64 %298, 1152921504606846975
  br i1 %299, label %300, label %302

300:                                              ; preds = %294
  %301 = bitcast %"class.std::__1::vector.993"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %301) #12
  unreachable

302:                                              ; preds = %294
  %303 = icmp ult i64 %297, 576460752303423487
  br i1 %303, label %304, label %312

304:                                              ; preds = %302
  %305 = ashr exact i64 %296, 3
  %306 = icmp ult i64 %305, %298
  %307 = select i1 %306, i64 %298, i64 %305
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %317, label %309

309:                                              ; preds = %304
  %310 = icmp ugt i64 %307, 1152921504606846975
  br i1 %310, label %311, label %312

311:                                              ; preds = %309
  tail call void @abort() #12
  unreachable

312:                                              ; preds = %309, %302
  %313 = phi i64 [ %307, %309 ], [ 1152921504606846975, %302 ]
  %314 = shl i64 %313, 4
  %315 = tail call i8* @_Znwm(i64 %314) #11
  %316 = bitcast i8* %315 to %"struct.std::__1::pair.983"*
  br label %317

317:                                              ; preds = %312, %304
  %318 = phi i64 [ %313, %312 ], [ 0, %304 ]
  %319 = phi %"struct.std::__1::pair.983"* [ %316, %312 ], [ null, %304 ]
  %320 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %319, i64 %297
  %321 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %319, i64 %318
  %322 = ptrtoint %"struct.std::__1::pair.983"* %321 to i64
  %323 = bitcast %"struct.std::__1::pair.983"* %320 to i8*
  %324 = bitcast %"struct.std::__1::pair.983"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %323, i8* align 8 %324, i64 16, i1 false) #10
  %325 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %320, i64 1
  %326 = ptrtoint %"struct.std::__1::pair.983"* %325 to i64
  %327 = ptrtoint %"struct.std::__1::pair.983"* %227 to i64
  %328 = sub i64 %226, %327
  %329 = ashr exact i64 %328, 4
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %320, i64 %330
  %332 = ptrtoint %"struct.std::__1::pair.983"* %331 to i64
  %333 = icmp sgt i64 %328, 0
  br i1 %333, label %334, label %337

334:                                              ; preds = %317
  %335 = bitcast %"struct.std::__1::pair.983"* %331 to i8*
  %336 = bitcast %"struct.std::__1::pair.983"* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %335, i8* align 8 %336, i64 %328, i1 false) #10
  br label %337

337:                                              ; preds = %334, %317
  store i64 %332, i64* %131, align 8
  store i64 %326, i64* %130, align 8
  store i64 %322, i64* %132, align 8
  %338 = icmp eq %"struct.std::__1::pair.983"* %227, null
  br i1 %338, label %341, label %339

339:                                              ; preds = %337
  %340 = bitcast %"struct.std::__1::pair.983"* %227 to i8*
  tail call void @_ZdlPv(i8* %340) #11
  br label %341

341:                                              ; preds = %339, %337, %289, %285, %283, %235
  %342 = phi %"struct.std::__1::pair.983"* [ %219, %339 ], [ %219, %337 ], [ %219, %289 ], [ %271, %285 ], [ %271, %283 ], [ %238, %235 ]
  %343 = phi %"struct.std::__1::pair.983"* [ %220, %339 ], [ %220, %337 ], [ %220, %289 ], [ %277, %285 ], [ %277, %283 ], [ %220, %235 ]
  %344 = phi i64 [ %221, %339 ], [ %221, %337 ], [ %221, %289 ], [ %272, %285 ], [ %272, %283 ], [ %239, %235 ]
  %345 = phi %"struct.std::__1::pair.983"* [ %222, %339 ], [ %222, %337 ], [ %222, %289 ], [ %277, %285 ], [ %277, %283 ], [ %222, %235 ]
  %346 = phi i64 [ %223, %339 ], [ %223, %337 ], [ %223, %289 ], [ %278, %285 ], [ %278, %283 ], [ %223, %235 ]
  %347 = phi %"struct.std::__1::pair.983"* [ %224, %339 ], [ %224, %337 ], [ %224, %289 ], [ %267, %285 ], [ %267, %283 ], [ %224, %235 ]
  %348 = phi %"struct.std::__1::pair.983"* [ %225, %339 ], [ %225, %337 ], [ %225, %289 ], [ %271, %285 ], [ %271, %283 ], [ %238, %235 ]
  %349 = phi i64 [ %326, %339 ], [ %326, %337 ], [ %293, %289 ], [ %226, %285 ], [ %226, %283 ], [ %226, %235 ]
  %350 = phi %"struct.std::__1::pair.983"* [ %331, %339 ], [ %331, %337 ], [ %227, %289 ], [ %227, %285 ], [ %227, %283 ], [ %227, %235 ]
  %351 = phi i64 [ %332, %339 ], [ %332, %337 ], [ %228, %289 ], [ %228, %285 ], [ %228, %283 ], [ %228, %235 ]
  %352 = phi %"struct.std::__1::pair.983"* [ %321, %339 ], [ %321, %337 ], [ %229, %289 ], [ %229, %285 ], [ %229, %283 ], [ %229, %235 ]
  %353 = phi %"struct.std::__1::pair.983"* [ %325, %339 ], [ %325, %337 ], [ %292, %289 ], [ %230, %285 ], [ %230, %283 ], [ %230, %235 ]
  %354 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %231, i64 1
  %355 = icmp eq %"struct.std::__1::pair.983"* %354, %120
  br i1 %355, label %136, label %218

356:                                              ; preds = %1120, %136
  %357 = load i64, i64* %24, align 8
  %358 = load i64, i64* %26, align 8
  %359 = icmp eq i64 %357, %358
  br i1 %359, label %1126, label %360

360:                                              ; preds = %356
  %361 = load i64*, i64** %53, align 8
  %362 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %2, i64 0, i32 0, i32 0, i32 0
  br label %1231

363:                                              ; preds = %213, %1120
  %364 = phi i64 [ %1123, %1120 ], [ %144, %213 ]
  %365 = phi i64 [ %1124, %1120 ], [ %143, %213 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #10
  %366 = sub i64 %364, %365
  %367 = ashr exact i64 %366, 4
  %368 = icmp eq i64 %366, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 0, i64 24, i1 false) #10
  br i1 %368, label %394, label %369

369:                                              ; preds = %363
  %370 = icmp slt i64 %366, 0
  br i1 %370, label %371, label %373

371:                                              ; preds = %369
  %372 = bitcast %"class.std::__1::vector.1039"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %372) #12
  unreachable

373:                                              ; preds = %369
  %374 = add nsw i64 %367, -1
  %375 = lshr i64 %374, 6
  %376 = add nuw nsw i64 %375, 1
  %377 = shl nuw nsw i64 %376, 3
  %378 = call i8* @_Znwm(i64 %377) #11
  store i8* %378, i8** %151, align 8
  store i64 %376, i64* %150, align 8
  store i64 %367, i64* %149, align 8
  %379 = icmp ult i64 %367, 65
  %380 = bitcast i8* %378 to i64*
  %381 = getelementptr inbounds i64, i64* %380, i64 %375
  %382 = select i1 %379, i64* %380, i64* %381
  store i64 0, i64* %382, align 8
  %383 = lshr i64 %367, 6
  %384 = shl nuw nsw i64 %383, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %378, i8 0, i64 %384, i1 false) #10
  %385 = and i64 %367, 63
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %394, label %387

387:                                              ; preds = %373
  %388 = getelementptr inbounds i64, i64* %380, i64 %383
  %389 = sub nuw nsw i64 64, %385
  %390 = lshr i64 -1, %389
  %391 = xor i64 %390, -1
  %392 = load i64, i64* %388, align 8
  %393 = and i64 %392, %391
  store i64 %393, i64* %388, align 8
  br label %394

394:                                              ; preds = %363, %373, %387
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #10
  %395 = load i64, i64* %24, align 8
  %396 = load i64, i64* %26, align 8
  %397 = sub i64 %395, %396
  %398 = ashr exact i64 %397, 3
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %156)
  call void @llvm.memset.p0i8.i64(i8* align 2 %157, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 24, i1 false) #10
  %399 = icmp eq i64 %397, 0
  br i1 %399, label %422, label %400

400:                                              ; preds = %394
  %401 = icmp ugt i64 %398, 461168601842738790
  br i1 %401, label %402, label %404

402:                                              ; preds = %400
  %403 = bitcast %"class.spvtools::opt::DistanceVector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %403) #12
  unreachable

404:                                              ; preds = %400
  %405 = mul i64 %398, 40
  %406 = call i8* @_Znwm(i64 %405) #11
  %407 = bitcast i8* %406 to %"class.spvtools::opt::DistanceEntry"*
  store i8* %406, i8** %159, align 8
  store i8* %406, i8** %160, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %407, i64 %398
  store %"class.spvtools::opt::DistanceEntry"* %408, %"class.spvtools::opt::DistanceEntry"** %161, align 8
  br label %409

409:                                              ; preds = %409, %404
  %410 = phi %"class.spvtools::opt::DistanceEntry"* [ %407, %404 ], [ %418, %409 ]
  %411 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %410, i64 0, i32 0
  store i32 0, i32* %411, align 8
  %412 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %410, i64 0, i32 1
  store i32 7, i32* %412, align 4
  %413 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %410, i64 0, i32 2
  store i64 0, i64* %413, align 8
  %414 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %410, i64 0, i32 3
  store i8 0, i8* %414, align 8
  %415 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %410, i64 0, i32 4
  store i8 0, i8* %415, align 1
  %416 = bitcast %"class.spvtools::opt::DistanceEntry"* %410 to i8*
  %417 = getelementptr inbounds i8, i8* %416, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %417, i8* nonnull align 2 %156, i64 22, i1 false) #10
  %418 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %410, i64 1
  %419 = icmp eq %"class.spvtools::opt::DistanceEntry"* %418, %408
  br i1 %419, label %420, label %409

420:                                              ; preds = %409
  %421 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %408 to i64
  store i64 %421, i64* %162, align 8
  br label %422

422:                                              ; preds = %394, %420
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %156)
  call void @_ZNSt3__16vectorIN8spvtools3opt14DistanceVectorENS_9allocatorIS3_EEEC2EmRKS3_(%"class.std::__1::vector.1044"* nonnull %10, i64 %367, %"class.spvtools::opt::DistanceVector"* nonnull dereferenceable(24) %11)
  %423 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %163, align 8
  %424 = icmp eq %"class.spvtools::opt::DistanceEntry"* %423, null
  br i1 %424, label %428, label %425

425:                                              ; preds = %422
  %426 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %423 to i64
  store i64 %426, i64* %162, align 8
  %427 = bitcast %"class.spvtools::opt::DistanceEntry"* %423 to i8*
  call void @_ZdlPv(i8* %427) #11
  br label %428

428:                                              ; preds = %422, %425
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #10
  %429 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %110, align 8
  %430 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %111, align 8
  %431 = load i64, i64* %164, align 8, !noalias !8
  %432 = icmp eq %"struct.std::__1::pair.983"* %429, %430
  %433 = inttoptr i64 %431 to i64*
  br i1 %432, label %465, label %434

434:                                              ; preds = %428
  %435 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %153, align 8
  br label %436

436:                                              ; preds = %434, %452
  %437 = phi i64 [ %460, %452 ], [ %431, %434 ]
  %438 = phi i32 [ %461, %452 ], [ 0, %434 ]
  %439 = phi %"struct.std::__1::pair.983"* [ %454, %452 ], [ %429, %434 ]
  %440 = phi %"class.spvtools::opt::DistanceVector"* [ %455, %452 ], [ %435, %434 ]
  %441 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis7SIVTestERKNSt3__14pairIPNS0_6SENodeES5_EEPNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %439, %"class.spvtools::opt::DistanceVector"* %440) #10, !noalias !15
  %442 = inttoptr i64 %437 to i64*
  %443 = zext i32 %438 to i64
  %444 = shl i64 1, %443
  br i1 %441, label %445, label %448

445:                                              ; preds = %436
  %446 = load i64, i64* %442, align 8, !noalias !15
  %447 = or i64 %446, %444
  br label %452

448:                                              ; preds = %436
  %449 = xor i64 %444, -1
  %450 = load i64, i64* %442, align 8, !noalias !15
  %451 = and i64 %450, %449
  br label %452

452:                                              ; preds = %448, %445
  %453 = phi i64 [ %451, %448 ], [ %447, %445 ]
  store i64 %453, i64* %442, align 8, !noalias !15
  %454 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %439, i64 1
  %455 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %440, i64 1
  %456 = icmp eq i32 %438, 63
  %457 = getelementptr inbounds i64, i64* %442, i64 1
  %458 = ptrtoint i64* %457 to i64
  %459 = add i32 %438, 1
  %460 = select i1 %456, i64 %458, i64 %437
  %461 = select i1 %456, i32 0, i32 %459
  %462 = icmp eq %"struct.std::__1::pair.983"* %454, %430
  br i1 %462, label %463, label %436

463:                                              ; preds = %452
  %464 = load i64*, i64** %148, align 8, !noalias !18
  br label %465

465:                                              ; preds = %463, %428
  %466 = phi i64* [ %464, %463 ], [ %433, %428 ]
  %467 = load i64, i64* %149, align 8, !noalias !19
  %468 = lshr i64 %467, 6
  %469 = getelementptr inbounds i64, i64* %466, i64 %468
  %470 = trunc i64 %467 to i32
  %471 = and i32 %470, 63
  %472 = icmp eq i64 %468, 0
  %473 = icmp eq i32 %471, 0
  %474 = and i1 %473, %472
  br i1 %474, label %494, label %475

475:                                              ; preds = %465, %475
  %476 = phi i1 [ %484, %475 ], [ false, %465 ]
  %477 = phi i64* [ %489, %475 ], [ %466, %465 ]
  %478 = phi i32 [ %488, %475 ], [ 0, %465 ]
  %479 = zext i32 %478 to i64
  %480 = shl i64 1, %479
  %481 = load i64, i64* %477, align 8
  %482 = and i64 %481, %480
  %483 = icmp ne i64 %482, 0
  %484 = or i1 %476, %483
  %485 = icmp eq i32 %478, 63
  %486 = getelementptr inbounds i64, i64* %477, i64 1
  %487 = add i32 %478, 1
  %488 = select i1 %485, i32 0, i32 %487
  %489 = select i1 %485, i64* %486, i64* %477
  %490 = icmp eq i64* %489, %469
  %491 = icmp eq i32 %488, %471
  %492 = and i1 %491, %490
  br i1 %492, label %493, label %475

493:                                              ; preds = %475
  br i1 %484, label %1088, label %494

494:                                              ; preds = %465, %493
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 24, i1 false) #10
  %495 = load i64, i64* %142, align 8
  %496 = load i64, i64* %141, align 8
  %497 = icmp eq i64 %495, %496
  br i1 %497, label %500, label %498

498:                                              ; preds = %494
  %499 = load i64*, i64** %53, align 8
  br label %530

500:                                              ; preds = %780, %494
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %179, i8 0, i64 24, i1 false) #10
  %501 = load i64, i64* %183, align 8
  %502 = load i64, i64* %184, align 16
  %503 = sub i64 %501, %502
  %504 = ashr exact i64 %503, 3
  %505 = icmp eq i64 %503, 0
  br i1 %505, label %524, label %506

506:                                              ; preds = %500
  %507 = icmp ugt i64 %504, 2305843009213693951
  br i1 %507, label %508, label %510

508:                                              ; preds = %506
  %509 = bitcast %"class.std::__1::vector.1031"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %509) #12
  unreachable

510:                                              ; preds = %506
  %511 = call i8* @_Znwm(i64 %503) #11
  %512 = bitcast i8* %511 to %"class.spvtools::opt::Constraint"**
  store i8* %511, i8** %185, align 8
  store i8* %511, i8** %186, align 16
  %513 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %512, i64 %504
  store %"class.spvtools::opt::Constraint"** %513, %"class.spvtools::opt::Constraint"*** %182, align 16
  %514 = ptrtoint i8* %511 to i64
  %515 = icmp sgt i64 %503, 0
  br i1 %515, label %516, label %521

516:                                              ; preds = %510
  %517 = lshr exact i64 %503, 3
  %518 = inttoptr i64 %502 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %511, i8* align 8 %518, i64 %503, i1 false) #10
  %519 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %512, i64 %517
  %520 = ptrtoint %"class.spvtools::opt::Constraint"** %519 to i64
  br label %521

521:                                              ; preds = %516, %510
  %522 = phi i64 [ %520, %516 ], [ %514, %510 ]
  store i64 %522, i64* %187, align 8
  %523 = inttoptr i64 %522 to %"class.spvtools::opt::Constraint"**
  br label %524

524:                                              ; preds = %500, %521
  %525 = phi %"class.spvtools::opt::Constraint"** [ null, %500 ], [ %523, %521 ]
  %526 = phi %"class.spvtools::opt::Constraint"** [ null, %500 ], [ %512, %521 ]
  %527 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %166, align 8
  %528 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %167, align 8
  %529 = icmp eq %"struct.std::__1::pair.1056"* %527, %528
  br i1 %529, label %789, label %812

530:                                              ; preds = %498, %780
  %531 = phi i64 [ %496, %498 ], [ %783, %780 ]
  %532 = phi i64 [ 0, %498 ], [ %781, %780 ]
  %533 = inttoptr i64 %531 to %"struct.std::__1::pair.983"*
  %534 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %533, i64 %532
  %535 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetLoopForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %534) #10
  %536 = ptrtoint %"class.spvtools::opt::Loop"* %535 to i64
  %537 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %169, align 8
  %538 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %23, align 8
  %539 = icmp eq %"class.spvtools::opt::Loop"** %537, %538
  br i1 %539, label %547, label %540

540:                                              ; preds = %530, %544
  %541 = phi %"class.spvtools::opt::Loop"** [ %545, %544 ], [ %537, %530 ]
  %542 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %541, align 8
  %543 = icmp eq %"class.spvtools::opt::Loop"* %542, %535
  br i1 %543, label %547, label %544

544:                                              ; preds = %540
  %545 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %541, i64 1
  %546 = icmp eq %"class.spvtools::opt::Loop"** %545, %538
  br i1 %546, label %547, label %540

547:                                              ; preds = %540, %544, %530
  %548 = phi %"class.spvtools::opt::Loop"** [ %537, %530 ], [ %541, %540 ], [ %538, %544 ]
  %549 = ptrtoint %"class.spvtools::opt::Loop"** %537 to i64
  %550 = ptrtoint %"class.spvtools::opt::Loop"** %548 to i64
  %551 = sub i64 %550, %549
  %552 = ashr exact i64 %551, 3
  %553 = lshr i64 %552, 6
  %554 = getelementptr inbounds i64, i64* %499, i64 %553
  %555 = and i64 %552, 63
  %556 = shl i64 1, %555
  %557 = load i64, i64* %554, align 8
  %558 = or i64 %556, %557
  store i64 %558, i64* %554, align 8
  %559 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %153, align 8
  %560 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %559, i64 %532, i32 0, i32 0, i32 0
  %561 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %560, align 8
  %562 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %561, i64 %552, i32 0
  %563 = load i32, i32* %562, align 8
  %564 = icmp eq i32 %563, 2
  br i1 %564, label %565, label %643

565:                                              ; preds = %547
  %566 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %561, i64 %552, i32 2
  %567 = load i64, i64* %566, align 8
  %568 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, i64 %567) #10
  %569 = ptrtoint %"class.spvtools::opt::SENode"* %568 to i64
  %570 = call i8* @_Znwm(i64 24) #11
  %571 = bitcast i8* %570 to i32 (...)***
  %572 = getelementptr inbounds i8, i8* %570, i64 8
  %573 = bitcast i8* %572 to i64*
  store i64 %536, i64* %573, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt18DependenceDistanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %571, align 8
  %574 = getelementptr inbounds i8, i8* %570, i64 16
  %575 = bitcast i8* %574 to i64*
  store i64 %569, i64* %575, align 8
  %576 = ptrtoint i8* %570 to i64
  %577 = call i8* @_Znwm(i64 24) #11, !noalias !24
  %578 = bitcast i8* %577 to %"struct.std::__1::__list_node_base"**
  %579 = getelementptr inbounds i8, i8* %577, i64 16
  %580 = bitcast i8* %579 to i64*
  store i64 %576, i64* %580, align 8
  %581 = getelementptr inbounds i8, i8* %577, i64 8
  %582 = bitcast i8* %581 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %172, %"struct.std::__1::__list_node_base"** %582, align 8
  %583 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  store %"struct.std::__1::__list_node_base"* %583, %"struct.std::__1::__list_node_base"** %578, align 8
  %584 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %583, i64 0, i32 1
  %585 = bitcast %"struct.std::__1::__list_node_base"** %584 to i8**
  store i8* %577, i8** %585, align 8
  store i8* %577, i8** %174, align 8
  %586 = load i64, i64* %175, align 8
  %587 = add i64 %586, 1
  store i64 %587, i64* %175, align 8
  %588 = load i64, i64* %580, align 8
  %589 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %167, align 8
  %590 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %168, align 8
  %591 = icmp ult %"struct.std::__1::pair.1056"* %589, %590
  %592 = ptrtoint %"struct.std::__1::pair.1056"* %590 to i64
  br i1 %591, label %593, label %598

593:                                              ; preds = %565
  %594 = bitcast %"struct.std::__1::pair.1056"* %589 to i64*
  store i64 %588, i64* %594, align 8
  %595 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %589, i64 0, i32 1
  store i64 %552, i64* %595, align 8
  %596 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %589, i64 1
  %597 = ptrtoint %"struct.std::__1::pair.1056"* %596 to i64
  store i64 %597, i64* %176, align 8
  br label %780

598:                                              ; preds = %565
  %599 = ptrtoint %"struct.std::__1::pair.1056"* %589 to i64
  %600 = load i64, i64* %177, align 8
  %601 = sub i64 %599, %600
  %602 = ashr exact i64 %601, 4
  %603 = add nsw i64 %602, 1
  %604 = icmp ugt i64 %603, 1152921504606846975
  br i1 %604, label %605, label %607

605:                                              ; preds = %598
  %606 = bitcast %"class.std::__1::vector.1054"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %606) #12
  unreachable

607:                                              ; preds = %598
  %608 = sub i64 %592, %600
  %609 = ashr exact i64 %608, 4
  %610 = icmp ult i64 %609, 576460752303423487
  br i1 %610, label %611, label %619

611:                                              ; preds = %607
  %612 = ashr exact i64 %608, 3
  %613 = icmp ult i64 %612, %603
  %614 = select i1 %613, i64 %603, i64 %612
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %624, label %616

616:                                              ; preds = %611
  %617 = icmp ugt i64 %614, 1152921504606846975
  br i1 %617, label %618, label %619

618:                                              ; preds = %616
  call void @abort() #12
  unreachable

619:                                              ; preds = %616, %607
  %620 = phi i64 [ %614, %616 ], [ 1152921504606846975, %607 ]
  %621 = shl i64 %620, 4
  %622 = call i8* @_Znwm(i64 %621) #11
  %623 = bitcast i8* %622 to %"struct.std::__1::pair.1056"*
  br label %624

624:                                              ; preds = %619, %611
  %625 = phi i64 [ %620, %619 ], [ 0, %611 ]
  %626 = phi i8* [ %622, %619 ], [ null, %611 ]
  %627 = phi %"struct.std::__1::pair.1056"* [ %623, %619 ], [ null, %611 ]
  %628 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %627, i64 %602
  %629 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %627, i64 %625
  %630 = ptrtoint %"struct.std::__1::pair.1056"* %629 to i64
  %631 = bitcast %"struct.std::__1::pair.1056"* %628 to i64*
  store i64 %588, i64* %631, align 8
  %632 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %627, i64 %602, i32 1
  store i64 %552, i64* %632, align 8
  %633 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %628, i64 1
  %634 = ptrtoint %"struct.std::__1::pair.1056"* %633 to i64
  %635 = ptrtoint %"struct.std::__1::pair.1056"* %627 to i64
  %636 = icmp sgt i64 %601, 0
  br i1 %636, label %637, label %639

637:                                              ; preds = %624
  %638 = inttoptr i64 %600 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %626, i8* align 8 %638, i64 %601, i1 false) #10
  br label %639

639:                                              ; preds = %637, %624
  store i64 %635, i64* %177, align 8
  store i64 %634, i64* %176, align 8
  store i64 %630, i64* %178, align 8
  %640 = icmp eq i64 %600, 0
  br i1 %640, label %780, label %641

641:                                              ; preds = %639
  %642 = inttoptr i64 %600 to i8*
  call void @_ZdlPv(i8* %642) #11
  br label %780

643:                                              ; preds = %547
  %644 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %110, align 8
  %645 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %644, i64 %532, i32 0
  %646 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %645, align 8
  %647 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %644, i64 %532, i32 1
  %648 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %647, align 8
  %649 = call i64 @_ZN8spvtools3opt22LoopDependenceAnalysis23CountInductionVariablesEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %646) #10
  %650 = call i64 @_ZN8spvtools3opt22LoopDependenceAnalysis23CountInductionVariablesEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %648) #10
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %667, label %652

652:                                              ; preds = %643
  %653 = bitcast %"class.spvtools::opt::SENode"* %648 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %654 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %653, align 8
  %655 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %654, i64 6
  %656 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %655, align 8
  %657 = call %"class.spvtools::opt::SERecurrentNode"* %656(%"class.spvtools::opt::SENode"* %648) #10
  %658 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %657, i64 0, i32 1
  %659 = bitcast %"class.spvtools::opt::SENode"** %658 to i64*
  %660 = load i64, i64* %659, align 8
  %661 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %653, align 8
  %662 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %661, i64 6
  %663 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %662, align 8
  %664 = call %"class.spvtools::opt::SERecurrentNode"* %663(%"class.spvtools::opt::SENode"* %648) #10
  %665 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %664, i64 0, i32 2
  %666 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %665, align 8
  br label %670

667:                                              ; preds = %643
  %668 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, i64 0) #10
  %669 = ptrtoint %"class.spvtools::opt::SENode"* %668 to i64
  br label %670

670:                                              ; preds = %667, %652
  %671 = phi %"class.spvtools::opt::SENode"* [ %648, %667 ], [ %666, %652 ]
  %672 = phi i64 [ %669, %667 ], [ %660, %652 ]
  %673 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, %"class.spvtools::opt::SENode"* %671) #10
  %674 = icmp eq i64 %649, 0
  br i1 %674, label %690, label %675

675:                                              ; preds = %670
  %676 = bitcast %"class.spvtools::opt::SENode"* %646 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %677 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %676, align 8
  %678 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %677, i64 6
  %679 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %678, align 8
  %680 = call %"class.spvtools::opt::SERecurrentNode"* %679(%"class.spvtools::opt::SENode"* %646) #10
  %681 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %680, i64 0, i32 1
  %682 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %681, align 8
  %683 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, %"class.spvtools::opt::SENode"* %682) #10
  %684 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %676, align 8
  %685 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %684, i64 6
  %686 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %685, align 8
  %687 = call %"class.spvtools::opt::SERecurrentNode"* %686(%"class.spvtools::opt::SENode"* %646) #10
  %688 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %687, i64 0, i32 2
  %689 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %688, align 8
  br label %692

690:                                              ; preds = %670
  %691 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, i64 0) #10
  br label %692

692:                                              ; preds = %690, %675
  %693 = phi %"class.spvtools::opt::SENode"* [ %646, %690 ], [ %689, %675 ]
  %694 = phi %"class.spvtools::opt::SENode"* [ %691, %690 ], [ %683, %675 ]
  %695 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, %"class.spvtools::opt::SENode"* %673, %"class.spvtools::opt::SENode"* %693) #10
  %696 = inttoptr i64 %672 to %"class.spvtools::opt::SENode"*
  %697 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, %"class.spvtools::opt::SENode"* %696) #10
  %698 = ptrtoint %"class.spvtools::opt::SENode"* %697 to i64
  %699 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, %"class.spvtools::opt::SENode"* %694) #10
  %700 = ptrtoint %"class.spvtools::opt::SENode"* %699 to i64
  %701 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %170, %"class.spvtools::opt::SENode"* %695) #10
  %702 = ptrtoint %"class.spvtools::opt::SENode"* %701 to i64
  %703 = call i8* @_Znwm(i64 40) #11
  %704 = bitcast i8* %703 to i32 (...)***
  %705 = getelementptr inbounds i8, i8* %703, i64 8
  %706 = bitcast i8* %705 to i64*
  store i64 %536, i64* %706, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt14DependenceLineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %704, align 8
  %707 = getelementptr inbounds i8, i8* %703, i64 16
  %708 = bitcast i8* %707 to i64*
  store i64 %698, i64* %708, align 8
  %709 = getelementptr inbounds i8, i8* %703, i64 24
  %710 = bitcast i8* %709 to i64*
  store i64 %700, i64* %710, align 8
  %711 = getelementptr inbounds i8, i8* %703, i64 32
  %712 = bitcast i8* %711 to i64*
  store i64 %702, i64* %712, align 8
  %713 = ptrtoint i8* %703 to i64
  %714 = call i8* @_Znwm(i64 24) #11, !noalias !27
  %715 = bitcast i8* %714 to %"struct.std::__1::__list_node_base"**
  %716 = getelementptr inbounds i8, i8* %714, i64 16
  %717 = bitcast i8* %716 to i64*
  store i64 %713, i64* %717, align 8
  %718 = getelementptr inbounds i8, i8* %714, i64 8
  %719 = bitcast i8* %718 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %172, %"struct.std::__1::__list_node_base"** %719, align 8
  %720 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  store %"struct.std::__1::__list_node_base"* %720, %"struct.std::__1::__list_node_base"** %715, align 8
  %721 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %720, i64 0, i32 1
  %722 = bitcast %"struct.std::__1::__list_node_base"** %721 to i8**
  store i8* %714, i8** %722, align 8
  store i8* %714, i8** %174, align 8
  %723 = load i64, i64* %175, align 8
  %724 = add i64 %723, 1
  store i64 %724, i64* %175, align 8
  %725 = load i64, i64* %717, align 8
  %726 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %167, align 8
  %727 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %168, align 8
  %728 = icmp ult %"struct.std::__1::pair.1056"* %726, %727
  %729 = ptrtoint %"struct.std::__1::pair.1056"* %727 to i64
  br i1 %728, label %730, label %735

730:                                              ; preds = %692
  %731 = bitcast %"struct.std::__1::pair.1056"* %726 to i64*
  store i64 %725, i64* %731, align 8
  %732 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %726, i64 0, i32 1
  store i64 %552, i64* %732, align 8
  %733 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %726, i64 1
  %734 = ptrtoint %"struct.std::__1::pair.1056"* %733 to i64
  store i64 %734, i64* %176, align 8
  br label %780

735:                                              ; preds = %692
  %736 = ptrtoint %"struct.std::__1::pair.1056"* %726 to i64
  %737 = load i64, i64* %177, align 8
  %738 = sub i64 %736, %737
  %739 = ashr exact i64 %738, 4
  %740 = add nsw i64 %739, 1
  %741 = icmp ugt i64 %740, 1152921504606846975
  br i1 %741, label %742, label %744

742:                                              ; preds = %735
  %743 = bitcast %"class.std::__1::vector.1054"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %743) #12
  unreachable

744:                                              ; preds = %735
  %745 = sub i64 %729, %737
  %746 = ashr exact i64 %745, 4
  %747 = icmp ult i64 %746, 576460752303423487
  br i1 %747, label %748, label %756

748:                                              ; preds = %744
  %749 = ashr exact i64 %745, 3
  %750 = icmp ult i64 %749, %740
  %751 = select i1 %750, i64 %740, i64 %749
  %752 = icmp eq i64 %751, 0
  br i1 %752, label %761, label %753

753:                                              ; preds = %748
  %754 = icmp ugt i64 %751, 1152921504606846975
  br i1 %754, label %755, label %756

755:                                              ; preds = %753
  call void @abort() #12
  unreachable

756:                                              ; preds = %753, %744
  %757 = phi i64 [ %751, %753 ], [ 1152921504606846975, %744 ]
  %758 = shl i64 %757, 4
  %759 = call i8* @_Znwm(i64 %758) #11
  %760 = bitcast i8* %759 to %"struct.std::__1::pair.1056"*
  br label %761

761:                                              ; preds = %756, %748
  %762 = phi i64 [ %757, %756 ], [ 0, %748 ]
  %763 = phi i8* [ %759, %756 ], [ null, %748 ]
  %764 = phi %"struct.std::__1::pair.1056"* [ %760, %756 ], [ null, %748 ]
  %765 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %764, i64 %739
  %766 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %764, i64 %762
  %767 = ptrtoint %"struct.std::__1::pair.1056"* %766 to i64
  %768 = bitcast %"struct.std::__1::pair.1056"* %765 to i64*
  store i64 %725, i64* %768, align 8
  %769 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %764, i64 %739, i32 1
  store i64 %552, i64* %769, align 8
  %770 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %765, i64 1
  %771 = ptrtoint %"struct.std::__1::pair.1056"* %770 to i64
  %772 = ptrtoint %"struct.std::__1::pair.1056"* %764 to i64
  %773 = icmp sgt i64 %738, 0
  br i1 %773, label %774, label %776

774:                                              ; preds = %761
  %775 = inttoptr i64 %737 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %763, i8* align 8 %775, i64 %738, i1 false) #10
  br label %776

776:                                              ; preds = %774, %761
  store i64 %772, i64* %177, align 8
  store i64 %771, i64* %176, align 8
  store i64 %767, i64* %178, align 8
  %777 = icmp eq i64 %737, 0
  br i1 %777, label %780, label %778

778:                                              ; preds = %776
  %779 = inttoptr i64 %737 to i8*
  call void @_ZdlPv(i8* %779) #11
  br label %780

780:                                              ; preds = %778, %776, %730, %641, %639, %593
  %781 = add nuw i64 %532, 1
  %782 = load i64, i64* %142, align 8
  %783 = load i64, i64* %141, align 8
  %784 = sub i64 %782, %783
  %785 = ashr exact i64 %784, 4
  %786 = icmp ult i64 %781, %785
  br i1 %786, label %530, label %500

787:                                              ; preds = %812
  %788 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %181, align 8
  br label %789

789:                                              ; preds = %787, %524
  %790 = phi %"class.spvtools::opt::Constraint"** [ %788, %787 ], [ %525, %524 ]
  %791 = phi %"class.spvtools::opt::Constraint"** [ %831, %787 ], [ %526, %524 ]
  %792 = icmp eq %"class.spvtools::opt::Constraint"** %791, %790
  br i1 %792, label %808, label %793

793:                                              ; preds = %789, %802
  %794 = phi %"class.spvtools::opt::Constraint"** [ %803, %802 ], [ %791, %789 ]
  %795 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %794, align 8
  %796 = bitcast %"class.spvtools::opt::Constraint"* %795 to %"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)***
  %797 = load %"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)*** %796, align 8
  %798 = getelementptr inbounds %"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)** %797, i64 11
  %799 = load %"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceEmpty"* (%"class.spvtools::opt::Constraint"*)** %798, align 8
  %800 = call %"class.spvtools::opt::DependenceEmpty"* %799(%"class.spvtools::opt::Constraint"* %795) #10
  %801 = icmp eq %"class.spvtools::opt::DependenceEmpty"* %800, null
  br i1 %801, label %802, label %805

802:                                              ; preds = %793
  %803 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %794, i64 1
  %804 = icmp eq %"class.spvtools::opt::Constraint"** %803, %790
  br i1 %804, label %805, label %793

805:                                              ; preds = %802, %793
  %806 = phi %"class.spvtools::opt::Constraint"** [ %794, %793 ], [ %790, %802 ]
  %807 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %181, align 8
  br label %808

808:                                              ; preds = %805, %789
  %809 = phi %"class.spvtools::opt::Constraint"** [ %790, %789 ], [ %807, %805 ]
  %810 = phi %"class.spvtools::opt::Constraint"** [ %790, %789 ], [ %806, %805 ]
  %811 = icmp eq %"class.spvtools::opt::Constraint"** %810, %809
  br i1 %811, label %832, label %1074

812:                                              ; preds = %524, %812
  %813 = phi %"class.spvtools::opt::Constraint"** [ %831, %812 ], [ %526, %524 ]
  %814 = phi %"struct.std::__1::pair.1056"* [ %829, %812 ], [ %527, %524 ]
  %815 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %814, i64 0, i32 1
  %816 = load i64, i64* %815, align 8
  %817 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %169, align 8
  %818 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %817, i64 %816
  %819 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %818, align 8
  %820 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %813, i64 %816
  %821 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %820, align 8
  %822 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %814, i64 0, i32 0
  %823 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %822, align 8
  %824 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetLowerBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %819) #10
  %825 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetUpperBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %819) #10
  %826 = call %"class.spvtools::opt::Constraint"* @_ZN8spvtools3opt22LoopDependenceAnalysis20IntersectConstraintsEPNS0_10ConstraintES3_PKNS0_6SENodeES6_(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Constraint"* %821, %"class.spvtools::opt::Constraint"* %823, %"class.spvtools::opt::SENode"* %824, %"class.spvtools::opt::SENode"* %825)
  %827 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %180, align 16
  %828 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %827, i64 %816
  store %"class.spvtools::opt::Constraint"* %826, %"class.spvtools::opt::Constraint"** %828, align 8
  %829 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %814, i64 1
  %830 = icmp eq %"struct.std::__1::pair.1056"* %829, %528
  %831 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %180, align 16
  br i1 %830, label %787, label %812

832:                                              ; preds = %808
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %192, i8 0, i64 24, i1 false) #10
  %833 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %19, align 16
  %834 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %20, align 8
  %835 = icmp eq %"class.spvtools::opt::Constraint"** %833, %834
  br i1 %835, label %1042, label %836

836:                                              ; preds = %832
  %837 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %180, align 16
  br label %838

838:                                              ; preds = %836, %844
  %839 = phi %"class.spvtools::opt::Constraint"** [ %846, %844 ], [ %837, %836 ]
  %840 = phi %"class.spvtools::opt::Constraint"** [ %845, %844 ], [ %833, %836 ]
  %841 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %840, align 8
  %842 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %839, align 8
  %843 = call zeroext i1 @_ZNK8spvtools3opt10ConstrainteqERKS1_(%"class.spvtools::opt::Constraint"* %841, %"class.spvtools::opt::Constraint"* dereferenceable(16) %842) #10
  br i1 %843, label %844, label %848

844:                                              ; preds = %838
  %845 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %840, i64 1
  %846 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %839, i64 1
  %847 = icmp eq %"class.spvtools::opt::Constraint"** %845, %834
  br i1 %847, label %1042, label %838

848:                                              ; preds = %838
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #10
  %849 = load i64, i64* %140, align 8
  %850 = load i64, i64* %139, align 8
  %851 = sub i64 %849, %850
  %852 = ashr exact i64 %851, 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 0, i64 24, i1 false) #10
  %853 = icmp eq i64 %851, 0
  %854 = inttoptr i64 %850 to %"struct.std::__1::pair.983"*
  %855 = inttoptr i64 %849 to %"struct.std::__1::pair.983"*
  br i1 %853, label %872, label %856

856:                                              ; preds = %848
  %857 = icmp ugt i64 %852, 1152921504606846975
  br i1 %857, label %858, label %860

858:                                              ; preds = %856
  %859 = bitcast %"class.std::__1::vector.993"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %859) #12
  unreachable

860:                                              ; preds = %856
  %861 = call i8* @_Znwm(i64 %851) #11
  %862 = bitcast i8* %861 to %"struct.std::__1::pair.983"*
  store i8* %861, i8** %200, align 8
  %863 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %862, i64 %852
  store %"struct.std::__1::pair.983"* %863, %"struct.std::__1::pair.983"** %199, align 8
  %864 = ptrtoint i8* %861 to i64
  %865 = add nsw i64 %852, -1
  %866 = getelementptr %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %862, i64 %865, i32 0
  %867 = ptrtoint %"class.spvtools::opt::SENode"** %866 to i64
  %868 = sub i64 16, %864
  %869 = add i64 %868, %867
  %870 = and i64 %869, -16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %861, i8 0, i64 %870, i1 false) #10
  %871 = ptrtoint %"struct.std::__1::pair.983"* %863 to i64
  store i64 %871, i64* %201, align 8
  br label %872

872:                                              ; preds = %848, %860
  %873 = phi i8* [ null, %848 ], [ %861, %860 ]
  %874 = phi %"struct.std::__1::pair.983"* [ null, %848 ], [ %862, %860 ]
  %875 = phi %"struct.std::__1::pair.983"* [ null, %848 ], [ %863, %860 ]
  %876 = icmp eq %"struct.std::__1::pair.983"* %854, %855
  br i1 %876, label %895, label %877

877:                                              ; preds = %872, %877
  %878 = phi %"struct.std::__1::pair.983"* [ %888, %877 ], [ %854, %872 ]
  %879 = phi %"struct.std::__1::pair.983"* [ %889, %877 ], [ %874, %872 ]
  %880 = call { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* } @_ZN8spvtools3opt22LoopDependenceAnalysis20PropagateConstraintsERKNSt3__14pairIPNS0_6SENodeES5_EERKNS2_6vectorIPNS0_10ConstraintENS2_9allocatorISB_EEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %878, %"class.std::__1::vector.1031"* nonnull dereferenceable(24) %13) #10
  %881 = extractvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* } %880, 0
  %882 = ptrtoint %"class.spvtools::opt::SENode"* %881 to i64
  %883 = extractvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* } %880, 1
  %884 = ptrtoint %"class.spvtools::opt::SENode"* %883 to i64
  %885 = bitcast %"struct.std::__1::pair.983"* %879 to i64*
  store i64 %882, i64* %885, align 8
  %886 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %879, i64 0, i32 1
  %887 = bitcast %"class.spvtools::opt::SENode"** %886 to i64*
  store i64 %884, i64* %887, align 8
  %888 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %878, i64 1
  %889 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %879, i64 1
  %890 = icmp eq %"struct.std::__1::pair.983"* %888, %855
  br i1 %890, label %891, label %877

891:                                              ; preds = %877
  %892 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %197, align 8
  %893 = bitcast %"struct.std::__1::pair.983"* %892 to i8*
  %894 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %198, align 8
  br label %895

895:                                              ; preds = %891, %872
  %896 = phi i8* [ %893, %891 ], [ %873, %872 ]
  %897 = phi %"struct.std::__1::pair.983"* [ %892, %891 ], [ %874, %872 ]
  %898 = phi %"struct.std::__1::pair.983"* [ %894, %891 ], [ %875, %872 ]
  %899 = icmp eq %"struct.std::__1::pair.983"* %897, %898
  br i1 %899, label %1024, label %900

900:                                              ; preds = %895, %1017
  %901 = phi %"struct.std::__1::pair.983"* [ %1018, %1017 ], [ %897, %895 ]
  %902 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsZIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %901) #10
  br i1 %902, label %903, label %905

903:                                              ; preds = %900
  %904 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis7ZIVTestERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %901)
  br i1 %904, label %1020, label %905

905:                                              ; preds = %903, %900
  %906 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis5IsSIVERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* dereferenceable(16) %901) #10
  br i1 %906, label %907, label %962

907:                                              ; preds = %905
  %908 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %190, align 8
  %909 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %191, align 8
  %910 = icmp eq %"struct.std::__1::pair.983"* %908, %909
  %911 = ptrtoint %"struct.std::__1::pair.983"* %909 to i64
  br i1 %910, label %917, label %912

912:                                              ; preds = %907
  %913 = bitcast %"struct.std::__1::pair.983"* %908 to i8*
  %914 = bitcast %"struct.std::__1::pair.983"* %901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %913, i8* align 8 %914, i64 16, i1 false) #10
  %915 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %908, i64 1
  %916 = ptrtoint %"struct.std::__1::pair.983"* %915 to i64
  store i64 %916, i64* %205, align 8
  br label %1017

917:                                              ; preds = %907
  %918 = ptrtoint %"struct.std::__1::pair.983"* %908 to i64
  %919 = load i64, i64* %206, align 8
  %920 = sub i64 %918, %919
  %921 = ashr exact i64 %920, 4
  %922 = add nsw i64 %921, 1
  %923 = icmp ugt i64 %922, 1152921504606846975
  br i1 %923, label %924, label %926

924:                                              ; preds = %917
  %925 = bitcast %"class.std::__1::vector.993"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %925) #12
  unreachable

926:                                              ; preds = %917
  %927 = sub i64 %911, %919
  %928 = ashr exact i64 %927, 4
  %929 = icmp ult i64 %928, 576460752303423487
  br i1 %929, label %930, label %938

930:                                              ; preds = %926
  %931 = ashr exact i64 %927, 3
  %932 = icmp ult i64 %931, %922
  %933 = select i1 %932, i64 %922, i64 %931
  %934 = icmp eq i64 %933, 0
  br i1 %934, label %943, label %935

935:                                              ; preds = %930
  %936 = icmp ugt i64 %933, 1152921504606846975
  br i1 %936, label %937, label %938

937:                                              ; preds = %935
  call void @abort() #12
  unreachable

938:                                              ; preds = %935, %926
  %939 = phi i64 [ %933, %935 ], [ 1152921504606846975, %926 ]
  %940 = shl i64 %939, 4
  %941 = call i8* @_Znwm(i64 %940) #11
  %942 = bitcast i8* %941 to %"struct.std::__1::pair.983"*
  br label %943

943:                                              ; preds = %938, %930
  %944 = phi i64 [ %939, %938 ], [ 0, %930 ]
  %945 = phi i8* [ %941, %938 ], [ null, %930 ]
  %946 = phi %"struct.std::__1::pair.983"* [ %942, %938 ], [ null, %930 ]
  %947 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %946, i64 %921
  %948 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %946, i64 %944
  %949 = ptrtoint %"struct.std::__1::pair.983"* %948 to i64
  %950 = bitcast %"struct.std::__1::pair.983"* %947 to i8*
  %951 = bitcast %"struct.std::__1::pair.983"* %901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %950, i8* align 8 %951, i64 16, i1 false) #10
  %952 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %947, i64 1
  %953 = ptrtoint %"struct.std::__1::pair.983"* %952 to i64
  %954 = ptrtoint %"struct.std::__1::pair.983"* %946 to i64
  %955 = icmp sgt i64 %920, 0
  br i1 %955, label %956, label %958

956:                                              ; preds = %943
  %957 = inttoptr i64 %919 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %945, i8* align 8 %957, i64 %920, i1 false) #10
  br label %958

958:                                              ; preds = %956, %943
  store i64 %954, i64* %206, align 8
  store i64 %953, i64* %205, align 8
  store i64 %949, i64* %207, align 8
  %959 = icmp eq i64 %919, 0
  br i1 %959, label %1017, label %960

960:                                              ; preds = %958
  %961 = inttoptr i64 %919 to i8*
  call void @_ZdlPv(i8* %961) #11
  br label %1017

962:                                              ; preds = %905
  %963 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %194, align 8
  %964 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %195, align 8
  %965 = icmp eq %"struct.std::__1::pair.983"* %963, %964
  %966 = ptrtoint %"struct.std::__1::pair.983"* %964 to i64
  br i1 %965, label %972, label %967

967:                                              ; preds = %962
  %968 = bitcast %"struct.std::__1::pair.983"* %963 to i8*
  %969 = bitcast %"struct.std::__1::pair.983"* %901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %968, i8* align 8 %969, i64 16, i1 false) #10
  %970 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %963, i64 1
  %971 = ptrtoint %"struct.std::__1::pair.983"* %970 to i64
  store i64 %971, i64* %202, align 8
  br label %1017

972:                                              ; preds = %962
  %973 = ptrtoint %"struct.std::__1::pair.983"* %963 to i64
  %974 = load i64, i64* %203, align 8
  %975 = sub i64 %973, %974
  %976 = ashr exact i64 %975, 4
  %977 = add nsw i64 %976, 1
  %978 = icmp ugt i64 %977, 1152921504606846975
  br i1 %978, label %979, label %981

979:                                              ; preds = %972
  %980 = bitcast %"class.std::__1::vector.993"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %980) #12
  unreachable

981:                                              ; preds = %972
  %982 = sub i64 %966, %974
  %983 = ashr exact i64 %982, 4
  %984 = icmp ult i64 %983, 576460752303423487
  br i1 %984, label %985, label %993

985:                                              ; preds = %981
  %986 = ashr exact i64 %982, 3
  %987 = icmp ult i64 %986, %977
  %988 = select i1 %987, i64 %977, i64 %986
  %989 = icmp eq i64 %988, 0
  br i1 %989, label %998, label %990

990:                                              ; preds = %985
  %991 = icmp ugt i64 %988, 1152921504606846975
  br i1 %991, label %992, label %993

992:                                              ; preds = %990
  call void @abort() #12
  unreachable

993:                                              ; preds = %990, %981
  %994 = phi i64 [ %988, %990 ], [ 1152921504606846975, %981 ]
  %995 = shl i64 %994, 4
  %996 = call i8* @_Znwm(i64 %995) #11
  %997 = bitcast i8* %996 to %"struct.std::__1::pair.983"*
  br label %998

998:                                              ; preds = %993, %985
  %999 = phi i64 [ %994, %993 ], [ 0, %985 ]
  %1000 = phi i8* [ %996, %993 ], [ null, %985 ]
  %1001 = phi %"struct.std::__1::pair.983"* [ %997, %993 ], [ null, %985 ]
  %1002 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1001, i64 %976
  %1003 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1001, i64 %999
  %1004 = ptrtoint %"struct.std::__1::pair.983"* %1003 to i64
  %1005 = bitcast %"struct.std::__1::pair.983"* %1002 to i8*
  %1006 = bitcast %"struct.std::__1::pair.983"* %901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1005, i8* align 8 %1006, i64 16, i1 false) #10
  %1007 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1002, i64 1
  %1008 = ptrtoint %"struct.std::__1::pair.983"* %1007 to i64
  %1009 = ptrtoint %"struct.std::__1::pair.983"* %1001 to i64
  %1010 = icmp sgt i64 %975, 0
  br i1 %1010, label %1011, label %1013

1011:                                             ; preds = %998
  %1012 = inttoptr i64 %974 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1000, i8* align 8 %1012, i64 %975, i1 false) #10
  br label %1013

1013:                                             ; preds = %1011, %998
  store i64 %1009, i64* %203, align 8
  store i64 %1008, i64* %202, align 8
  store i64 %1004, i64* %204, align 8
  %1014 = icmp eq i64 %974, 0
  br i1 %1014, label %1017, label %1015

1015:                                             ; preds = %1013
  %1016 = inttoptr i64 %974 to i8*
  call void @_ZdlPv(i8* %1016) #11
  br label %1017

1017:                                             ; preds = %912, %958, %960, %967, %1013, %1015
  %1018 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %901, i64 1
  %1019 = icmp eq %"struct.std::__1::pair.983"* %1018, %898
  br i1 %1019, label %1020, label %900

1020:                                             ; preds = %1017, %903
  %1021 = phi i32 [ 1, %903 ], [ 0, %1017 ]
  %1022 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %197, align 8
  %1023 = bitcast %"struct.std::__1::pair.983"* %1022 to i8*
  br label %1024

1024:                                             ; preds = %1020, %895
  %1025 = phi i8* [ %896, %895 ], [ %1023, %1020 ]
  %1026 = phi %"struct.std::__1::pair.983"* [ %897, %895 ], [ %1022, %1020 ]
  %1027 = phi i32 [ 0, %895 ], [ %1021, %1020 ]
  %1028 = icmp eq %"struct.std::__1::pair.983"* %1026, null
  br i1 %1028, label %1031, label %1029

1029:                                             ; preds = %1024
  %1030 = ptrtoint %"struct.std::__1::pair.983"* %1026 to i64
  store i64 %1030, i64* %201, align 8
  call void @_ZdlPv(i8* %1025) #11
  br label %1031

1031:                                             ; preds = %1024, %1029
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #10
  %1032 = icmp eq i32 %1027, 0
  br i1 %1032, label %1035, label %1033

1033:                                             ; preds = %1031
  %1034 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %193, align 8
  br label %1060

1035:                                             ; preds = %1031
  %1036 = load i64, i64* %206, align 8
  %1037 = load i64, i64* %205, align 8
  %1038 = load i64, i64* %207, align 8
  %1039 = load i64, i64* %203, align 8
  %1040 = load i64, i64* %202, align 8
  %1041 = load i64, i64* %204, align 8
  br label %1042

1042:                                             ; preds = %844, %1035, %832
  %1043 = phi i64 [ %1041, %1035 ], [ 0, %832 ], [ 0, %844 ]
  %1044 = phi i64 [ %1040, %1035 ], [ 0, %832 ], [ 0, %844 ]
  %1045 = phi i64 [ %1039, %1035 ], [ 0, %832 ], [ 0, %844 ]
  %1046 = phi i64 [ %1038, %1035 ], [ 0, %832 ], [ 0, %844 ]
  %1047 = phi i64 [ %1037, %1035 ], [ 0, %832 ], [ 0, %844 ]
  %1048 = phi i64 [ %1036, %1035 ], [ 0, %832 ], [ 0, %844 ]
  %1049 = load i64, i64* %141, align 8
  store i64 %1048, i64* %141, align 8
  store i64 %1049, i64* %206, align 8
  %1050 = load i64, i64* %142, align 8
  store i64 %1047, i64* %142, align 8
  store i64 %1050, i64* %205, align 8
  %1051 = load i64, i64* %138, align 8
  store i64 %1046, i64* %138, align 8
  store i64 %1051, i64* %207, align 8
  %1052 = load i64, i64* %139, align 8
  store i64 %1045, i64* %139, align 8
  store i64 %1052, i64* %203, align 8
  %1053 = load i64, i64* %140, align 8
  store i64 %1044, i64* %140, align 8
  store i64 %1053, i64* %202, align 8
  %1054 = load i64, i64* %137, align 8
  store i64 %1043, i64* %137, align 8
  store i64 %1054, i64* %204, align 8
  %1055 = load <2 x i64>, <2 x i64>* %214, align 16
  %1056 = load <2 x i64>, <2 x i64>* %215, align 16
  store <2 x i64> %1055, <2 x i64>* %216, align 16
  store <2 x i64> %1056, <2 x i64>* %217, align 16
  %1057 = load i64, i64* %208, align 16
  %1058 = load i64, i64* %209, align 16
  store i64 %1058, i64* %208, align 16
  store i64 %1057, i64* %209, align 16
  %1059 = inttoptr i64 %1052 to %"struct.std::__1::pair.983"*
  br label %1060

1060:                                             ; preds = %1033, %1042
  %1061 = phi %"struct.std::__1::pair.983"* [ %1059, %1042 ], [ %1034, %1033 ]
  %1062 = phi i32 [ 0, %1042 ], [ 1, %1033 ]
  %1063 = icmp eq %"struct.std::__1::pair.983"* %1061, null
  br i1 %1063, label %1067, label %1064

1064:                                             ; preds = %1060
  %1065 = ptrtoint %"struct.std::__1::pair.983"* %1061 to i64
  store i64 %1065, i64* %202, align 8
  %1066 = bitcast %"struct.std::__1::pair.983"* %1061 to i8*
  call void @_ZdlPv(i8* %1066) #11
  br label %1067

1067:                                             ; preds = %1060, %1064
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #10
  %1068 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %189, align 8
  %1069 = icmp eq %"struct.std::__1::pair.983"* %1068, null
  br i1 %1069, label %1073, label %1070

1070:                                             ; preds = %1067
  %1071 = ptrtoint %"struct.std::__1::pair.983"* %1068 to i64
  store i64 %1071, i64* %205, align 8
  %1072 = bitcast %"struct.std::__1::pair.983"* %1068 to i8*
  call void @_ZdlPv(i8* %1072) #11
  br label %1073

1073:                                             ; preds = %1067, %1070
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #10
  br label %1074

1074:                                             ; preds = %808, %1073
  %1075 = phi i32 [ %1062, %1073 ], [ 1, %808 ]
  %1076 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %180, align 16
  %1077 = icmp eq %"class.spvtools::opt::Constraint"** %1076, null
  br i1 %1077, label %1081, label %1078

1078:                                             ; preds = %1074
  %1079 = ptrtoint %"class.spvtools::opt::Constraint"** %1076 to i64
  store i64 %1079, i64* %187, align 8
  %1080 = bitcast %"class.spvtools::opt::Constraint"** %1076 to i8*
  call void @_ZdlPv(i8* %1080) #11
  br label %1081

1081:                                             ; preds = %1074, %1078
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #10
  %1082 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %166, align 8
  %1083 = icmp eq %"struct.std::__1::pair.1056"* %1082, null
  br i1 %1083, label %1087, label %1084

1084:                                             ; preds = %1081
  %1085 = ptrtoint %"struct.std::__1::pair.1056"* %1082 to i64
  store i64 %1085, i64* %176, align 8
  %1086 = bitcast %"struct.std::__1::pair.1056"* %1082 to i8*
  call void @_ZdlPv(i8* %1086) #11
  br label %1087

1087:                                             ; preds = %1081, %1084
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #10
  br label %1088

1088:                                             ; preds = %493, %1087
  %1089 = phi i32 [ %1075, %1087 ], [ 1, %493 ]
  %1090 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %153, align 8
  %1091 = icmp eq %"class.spvtools::opt::DistanceVector"* %1090, null
  br i1 %1091, label %1113, label %1092

1092:                                             ; preds = %1088
  %1093 = bitcast %"class.spvtools::opt::DistanceVector"* %1090 to i8*
  %1094 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %154, align 8
  %1095 = icmp eq %"class.spvtools::opt::DistanceVector"* %1094, %1090
  br i1 %1095, label %1111, label %1096

1096:                                             ; preds = %1092, %1107
  %1097 = phi %"class.spvtools::opt::DistanceVector"* [ %1098, %1107 ], [ %1094, %1092 ]
  %1098 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %1097, i64 -1
  %1099 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %1098, i64 0, i32 0, i32 0, i32 0
  %1100 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %1099, align 8
  %1101 = icmp eq %"class.spvtools::opt::DistanceEntry"* %1100, null
  br i1 %1101, label %1107, label %1102

1102:                                             ; preds = %1096
  %1103 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %1100 to i64
  %1104 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %1097, i64 -1, i32 0, i32 0, i32 1
  %1105 = bitcast %"class.spvtools::opt::DistanceEntry"** %1104 to i64*
  store i64 %1103, i64* %1105, align 8
  %1106 = bitcast %"class.spvtools::opt::DistanceEntry"* %1100 to i8*
  call void @_ZdlPv(i8* %1106) #11
  br label %1107

1107:                                             ; preds = %1102, %1096
  %1108 = icmp eq %"class.spvtools::opt::DistanceVector"* %1098, %1090
  br i1 %1108, label %1109, label %1096

1109:                                             ; preds = %1107
  %1110 = load i8*, i8** %210, align 8
  br label %1111

1111:                                             ; preds = %1109, %1092
  %1112 = phi i8* [ %1110, %1109 ], [ %1093, %1092 ]
  store %"class.spvtools::opt::DistanceVector"* %1090, %"class.spvtools::opt::DistanceVector"** %154, align 8
  call void @_ZdlPv(i8* %1112) #11
  br label %1113

1113:                                             ; preds = %1088, %1111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #10
  %1114 = load i64*, i64** %148, align 8
  %1115 = icmp eq i64* %1114, null
  br i1 %1115, label %1118, label %1116

1116:                                             ; preds = %1113
  %1117 = bitcast i64* %1114 to i8*
  call void @_ZdlPv(i8* %1117) #11
  br label %1118

1118:                                             ; preds = %1113, %1116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #10
  %1119 = icmp eq i32 %1089, 0
  br i1 %1119, label %1120, label %1326

1120:                                             ; preds = %1118
  %1121 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %110, align 8
  %1122 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %111, align 8
  %1123 = ptrtoint %"struct.std::__1::pair.983"* %1122 to i64
  %1124 = ptrtoint %"struct.std::__1::pair.983"* %1121 to i64
  %1125 = icmp eq %"struct.std::__1::pair.983"* %1121, %1122
  br i1 %1125, label %356, label %363

1126:                                             ; preds = %1319, %356
  %1127 = bitcast %"class.std::__1::vector.1039"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1127) #10
  %1128 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %17, i64 0, i32 1
  %1129 = getelementptr inbounds %"class.std::__1::vector.1039", %"class.std::__1::vector.1039"* %17, i64 0, i32 2, i32 0, i32 0
  %1130 = load i64, i64* %140, align 8
  %1131 = load i64, i64* %139, align 8
  %1132 = sub i64 %1130, %1131
  %1133 = ashr exact i64 %1132, 4
  %1134 = icmp eq i64 %1132, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1127, i8 0, i64 24, i1 false) #10
  %1135 = inttoptr i64 %1131 to %"struct.std::__1::pair.983"*
  %1136 = inttoptr i64 %1130 to %"struct.std::__1::pair.983"*
  br i1 %1134, label %1164, label %1137

1137:                                             ; preds = %1126
  %1138 = icmp slt i64 %1132, 0
  br i1 %1138, label %1139, label %1141

1139:                                             ; preds = %1137
  %1140 = bitcast %"class.std::__1::vector.1039"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1140) #12
  unreachable

1141:                                             ; preds = %1137
  %1142 = add nsw i64 %1133, -1
  %1143 = lshr i64 %1142, 6
  %1144 = add nuw nsw i64 %1143, 1
  %1145 = shl nuw nsw i64 %1144, 3
  %1146 = call i8* @_Znwm(i64 %1145) #11
  %1147 = bitcast %"class.std::__1::vector.1039"* %17 to i8**
  store i8* %1146, i8** %1147, align 8
  store i64 %1144, i64* %1129, align 8
  store i64 %1133, i64* %1128, align 8
  %1148 = icmp ult i64 %1133, 65
  %1149 = bitcast i8* %1146 to i64*
  %1150 = ptrtoint i8* %1146 to i64
  %1151 = getelementptr inbounds i64, i64* %1149, i64 %1143
  %1152 = select i1 %1148, i64* %1149, i64* %1151
  store i64 0, i64* %1152, align 8
  %1153 = lshr i64 %1133, 6
  %1154 = shl nuw nsw i64 %1153, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1146, i8 0, i64 %1154, i1 false) #10
  %1155 = and i64 %1133, 63
  %1156 = icmp eq i64 %1155, 0
  br i1 %1156, label %1164, label %1157

1157:                                             ; preds = %1141
  %1158 = getelementptr inbounds i64, i64* %1149, i64 %1153
  %1159 = sub nuw nsw i64 64, %1155
  %1160 = lshr i64 -1, %1159
  %1161 = xor i64 %1160, -1
  %1162 = load i64, i64* %1158, align 8
  %1163 = and i64 %1162, %1161
  store i64 %1163, i64* %1158, align 8
  br label %1164

1164:                                             ; preds = %1126, %1141, %1157
  %1165 = phi i64 [ 0, %1126 ], [ %1150, %1141 ], [ %1150, %1157 ]
  %1166 = bitcast %"class.std::__1::vector.1039"* %17 to i64*
  %1167 = icmp eq %"struct.std::__1::pair.983"* %1135, %1136
  br i1 %1167, label %1196, label %1168

1168:                                             ; preds = %1164, %1183
  %1169 = phi i32 [ %1190, %1183 ], [ 0, %1164 ]
  %1170 = phi i64 [ %1191, %1183 ], [ %1165, %1164 ]
  %1171 = phi %"struct.std::__1::pair.983"* [ %1185, %1183 ], [ %1135, %1164 ]
  %1172 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis10GCDMIVTestERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* undef, %"struct.std::__1::pair.983"* dereferenceable(16) %1171) #10, !noalias !30
  %1173 = inttoptr i64 %1170 to i64*
  %1174 = zext i32 %1169 to i64
  %1175 = shl i64 1, %1174
  br i1 %1172, label %1176, label %1179

1176:                                             ; preds = %1168
  %1177 = load i64, i64* %1173, align 8, !noalias !30
  %1178 = or i64 %1177, %1175
  br label %1183

1179:                                             ; preds = %1168
  %1180 = xor i64 %1175, -1
  %1181 = load i64, i64* %1173, align 8, !noalias !30
  %1182 = and i64 %1181, %1180
  br label %1183

1183:                                             ; preds = %1179, %1176
  %1184 = phi i64 [ %1182, %1179 ], [ %1178, %1176 ]
  store i64 %1184, i64* %1173, align 8, !noalias !30
  %1185 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1171, i64 1
  %1186 = icmp eq i32 %1169, 63
  %1187 = getelementptr inbounds i64, i64* %1173, i64 1
  %1188 = ptrtoint i64* %1187 to i64
  %1189 = add i32 %1169, 1
  %1190 = select i1 %1186, i32 0, i32 %1189
  %1191 = select i1 %1186, i64 %1188, i64 %1170
  %1192 = icmp eq %"struct.std::__1::pair.983"* %1185, %1136
  br i1 %1192, label %1193, label %1168

1193:                                             ; preds = %1183
  %1194 = load i64, i64* %1166, align 8, !noalias !18
  %1195 = load i64, i64* %1128, align 8, !noalias !33
  br label %1196

1196:                                             ; preds = %1193, %1164
  %1197 = phi i64 [ %1195, %1193 ], [ %1133, %1164 ]
  %1198 = phi i64 [ %1194, %1193 ], [ %1165, %1164 ]
  %1199 = inttoptr i64 %1198 to i64*
  %1200 = lshr i64 %1197, 6
  %1201 = getelementptr inbounds i64, i64* %1199, i64 %1200
  %1202 = trunc i64 %1197 to i32
  %1203 = and i32 %1202, 63
  %1204 = icmp eq i64 %1200, 0
  %1205 = icmp eq i32 %1203, 0
  %1206 = and i1 %1205, %1204
  br i1 %1206, label %1225, label %1207

1207:                                             ; preds = %1196, %1207
  %1208 = phi i1 [ %1216, %1207 ], [ false, %1196 ]
  %1209 = phi i64* [ %1221, %1207 ], [ %1199, %1196 ]
  %1210 = phi i32 [ %1220, %1207 ], [ 0, %1196 ]
  %1211 = zext i32 %1210 to i64
  %1212 = shl i64 1, %1211
  %1213 = load i64, i64* %1209, align 8
  %1214 = and i64 %1213, %1212
  %1215 = icmp ne i64 %1214, 0
  %1216 = or i1 %1208, %1215
  %1217 = icmp eq i32 %1210, 63
  %1218 = getelementptr inbounds i64, i64* %1209, i64 1
  %1219 = add i32 %1210, 1
  %1220 = select i1 %1217, i32 0, i32 %1219
  %1221 = select i1 %1217, i64* %1218, i64* %1209
  %1222 = icmp eq i64* %1221, %1201
  %1223 = icmp eq i32 %1220, %1203
  %1224 = and i1 %1223, %1222
  br i1 %1224, label %1225, label %1207

1225:                                             ; preds = %1207, %1196
  %1226 = phi i1 [ false, %1196 ], [ %1216, %1207 ]
  %1227 = icmp eq i64 %1198, 0
  br i1 %1227, label %1230, label %1228

1228:                                             ; preds = %1225
  %1229 = inttoptr i64 %1198 to i8*
  call void @_ZdlPv(i8* %1229) #11
  br label %1230

1230:                                             ; preds = %1225, %1228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1127) #10
  br label %1326

1231:                                             ; preds = %360, %1319
  %1232 = phi i64 [ 0, %360 ], [ %1320, %1319 ]
  %1233 = lshr i64 %1232, 6
  %1234 = getelementptr inbounds i64, i64* %361, i64 %1233
  %1235 = and i64 %1232, 63
  %1236 = shl i64 1, %1235
  %1237 = load i64, i64* %1234, align 8
  %1238 = and i64 %1237, %1236
  %1239 = icmp eq i64 %1238, 0
  br i1 %1239, label %1319, label %1240

1240:                                             ; preds = %1231
  %1241 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %19, align 16
  %1242 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %1241, i64 %1232
  %1243 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %1242, align 8
  %1244 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %362, align 8
  %1245 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232
  %1246 = bitcast %"class.spvtools::opt::Constraint"* %1243 to %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)***
  %1247 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %1246, align 8
  %1248 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %1247, i64 5
  %1249 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %1248, align 8
  %1250 = call %"class.spvtools::opt::DependenceDistance"* %1249(%"class.spvtools::opt::Constraint"* %1243) #10
  %1251 = icmp eq %"class.spvtools::opt::DependenceDistance"* %1250, null
  br i1 %1251, label %1274, label %1252

1252:                                             ; preds = %1240
  %1253 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance", %"class.spvtools::opt::DependenceDistance"* %1250, i64 0, i32 1
  %1254 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %1253, align 8
  %1255 = bitcast %"class.spvtools::opt::SENode"* %1254 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %1256 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %1255, align 8
  %1257 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1256, i64 4
  %1258 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1257, align 8
  %1259 = call %"class.spvtools::opt::SEConstantNode"* %1258(%"class.spvtools::opt::SENode"* %1254) #10
  %1260 = icmp eq %"class.spvtools::opt::SEConstantNode"* %1259, null
  br i1 %1260, label %1319, label %1261

1261:                                             ; preds = %1252
  %1262 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1245, i64 0, i32 0
  store i32 2, i32* %1262, align 8
  %1263 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %1259, i64 0, i32 1
  %1264 = load i64, i64* %1263, align 8
  %1265 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 2
  store i64 %1264, i64* %1265, align 8
  %1266 = icmp eq i64 %1264, 0
  br i1 %1266, label %1267, label %1269

1267:                                             ; preds = %1261
  %1268 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 1
  store i32 2, i32* %1268, align 4
  br label %1319

1269:                                             ; preds = %1261
  %1270 = icmp slt i64 %1264, 0
  %1271 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 1
  br i1 %1270, label %1272, label %1273

1272:                                             ; preds = %1269
  store i32 4, i32* %1271, align 4
  br label %1319

1273:                                             ; preds = %1269
  store i32 1, i32* %1271, align 4
  br label %1319

1274:                                             ; preds = %1240
  %1275 = bitcast %"class.spvtools::opt::Constraint"* %1243 to %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)***
  %1276 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %1275, align 8
  %1277 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %1276, i64 7
  %1278 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %1277, align 8
  %1279 = call %"class.spvtools::opt::DependencePoint"* %1278(%"class.spvtools::opt::Constraint"* %1243) #10
  %1280 = icmp eq %"class.spvtools::opt::DependencePoint"* %1279, null
  br i1 %1280, label %1319, label %1281

1281:                                             ; preds = %1274
  %1282 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %1279, i64 0, i32 1
  %1283 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %1282, align 8
  %1284 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %1279, i64 0, i32 2
  %1285 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %1284, align 8
  %1286 = bitcast %"class.spvtools::opt::SENode"* %1283 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %1287 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %1286, align 8
  %1288 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1287, i64 4
  %1289 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1288, align 8
  %1290 = call %"class.spvtools::opt::SEConstantNode"* %1289(%"class.spvtools::opt::SENode"* %1283) #10
  %1291 = icmp eq %"class.spvtools::opt::SEConstantNode"* %1290, null
  br i1 %1291, label %1319, label %1292

1292:                                             ; preds = %1281
  %1293 = bitcast %"class.spvtools::opt::SENode"* %1285 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %1294 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %1293, align 8
  %1295 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1294, i64 4
  %1296 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1295, align 8
  %1297 = call %"class.spvtools::opt::SEConstantNode"* %1296(%"class.spvtools::opt::SENode"* %1285) #10
  %1298 = icmp eq %"class.spvtools::opt::SEConstantNode"* %1297, null
  br i1 %1298, label %1319, label %1299

1299:                                             ; preds = %1292
  %1300 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %1286, align 8
  %1301 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1300, i64 4
  %1302 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1301, align 8
  %1303 = call %"class.spvtools::opt::SEConstantNode"* %1302(%"class.spvtools::opt::SENode"* %1283) #10
  %1304 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %1303, i64 0, i32 1
  %1305 = load i64, i64* %1304, align 8
  %1306 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %1293, align 8
  %1307 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1306, i64 4
  %1308 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %1307, align 8
  %1309 = call %"class.spvtools::opt::SEConstantNode"* %1308(%"class.spvtools::opt::SENode"* %1285) #10
  %1310 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %1309, i64 0, i32 1
  %1311 = load i64, i64* %1310, align 8
  %1312 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1245, i64 0, i32 0
  store i32 5, i32* %1312, align 8
  %1313 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 1
  store i32 7, i32* %1313, align 4
  %1314 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 2
  store i64 0, i64* %1314, align 8
  %1315 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 3
  store i8 0, i8* %1315, align 8
  %1316 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 4
  store i8 0, i8* %1316, align 1
  %1317 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 5
  store i64 %1305, i64* %1317, align 8
  %1318 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %1244, i64 %1232, i32 6
  store i64 %1311, i64* %1318, align 8
  br label %1319

1319:                                             ; preds = %1231, %1252, %1267, %1273, %1272, %1299, %1281, %1292, %1274
  %1320 = add nuw i64 %1232, 1
  %1321 = load i64, i64* %24, align 8
  %1322 = load i64, i64* %26, align 8
  %1323 = sub i64 %1321, %1322
  %1324 = ashr exact i64 %1323, 3
  %1325 = icmp ult i64 %1320, %1324
  br i1 %1325, label %1231, label %1126

1326:                                             ; preds = %1118, %1230
  %1327 = phi i1 [ %1226, %1230 ], [ true, %1118 ]
  %1328 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %114, align 8
  %1329 = icmp eq %"struct.std::__1::pair.983"* %1328, null
  br i1 %1329, label %1333, label %1330

1330:                                             ; preds = %1326
  %1331 = ptrtoint %"struct.std::__1::pair.983"* %1328 to i64
  store i64 %1331, i64* %140, align 8
  %1332 = bitcast %"struct.std::__1::pair.983"* %1328 to i8*
  call void @_ZdlPv(i8* %1332) #11
  br label %1333

1333:                                             ; preds = %1326, %1330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #10
  %1334 = load %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"** %110, align 8
  %1335 = icmp eq %"struct.std::__1::pair.983"* %1334, null
  br i1 %1335, label %1339, label %1336

1336:                                             ; preds = %1333
  %1337 = ptrtoint %"struct.std::__1::pair.983"* %1334 to i64
  store i64 %1337, i64* %142, align 8
  %1338 = bitcast %"struct.std::__1::pair.983"* %1334 to i8*
  call void @_ZdlPv(i8* %1338) #11
  br label %1339

1339:                                             ; preds = %1333, %1336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #10
  %1340 = load i64*, i64** %53, align 8
  %1341 = icmp eq i64* %1340, null
  br i1 %1341, label %1344, label %1342

1342:                                             ; preds = %1339
  %1343 = bitcast i64* %1340 to i8*
  call void @_ZdlPv(i8* %1343) #11
  br label %1344

1344:                                             ; preds = %1339, %1342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  %1345 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %19, align 16
  %1346 = icmp eq %"class.spvtools::opt::Constraint"** %1345, null
  br i1 %1346, label %1350, label %1347

1347:                                             ; preds = %1344
  %1348 = ptrtoint %"class.spvtools::opt::Constraint"** %1345 to i64
  store i64 %1348, i64* %183, align 8
  %1349 = bitcast %"class.spvtools::opt::Constraint"** %1345 to i8*
  call void @_ZdlPv(i8* %1349) #11
  br label %1350

1350:                                             ; preds = %1344, %1347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  ret i1 %1327
}

declare i64 @_ZN8spvtools3opt22LoopDependenceAnalysis23CountInductionVariablesEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis21WeakZeroSourceSIVTestEPNS0_6SENodeEPNS0_15SERecurrentNodeES3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::DistanceEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.std::__1::pair.983", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = alloca %"class.std::__1::basic_string", align 8
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.std::__1::basic_string", align 8
  %37 = alloca %"class.std::__1::basic_string", align 8
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = alloca %"class.std::__1::basic_string", align 8
  %42 = alloca %"class.std::__1::basic_string", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = alloca %"class.std::__1::basic_string", align 8
  %45 = tail call i8* @_Znwm(i64 48) #11
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0), i64 33, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %45, i64 33
  store i8 0, i8* %49, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %6) #10
  %50 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %5
  %55 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %5, %54
  %57 = bitcast %"struct.std::__1::pair.983"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #10
  %58 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %7, i64 0, i32 1
  %59 = ptrtoint %"class.spvtools::opt::SENode"* %1 to i64
  %60 = ptrtoint %"class.spvtools::opt::SERecurrentNode"* %2 to i64
  %61 = bitcast %"struct.std::__1::pair.983"* %7 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::SENode"** %58 to i64*
  store i64 %60, i64* %62, align 8
  %63 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetLoopForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %7) #10
  %64 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %63, %"class.spvtools::opt::SERecurrentNode"* %2) #10
  %65 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %66 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %65, %"class.spvtools::opt::SENode"* %1, %"class.spvtools::opt::SENode"* %64) #10
  %67 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %65, %"class.spvtools::opt::SENode"* %66) #10
  %68 = bitcast %"class.spvtools::opt::SENode"* %67 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %69 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %69, i64 4
  %71 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %70, align 8
  %72 = call %"class.spvtools::opt::SEConstantNode"* %71(%"class.spvtools::opt::SENode"* %67) #10
  %73 = bitcast %"class.spvtools::opt::SENode"* %3 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %74 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %74, i64 4
  %76 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %75, align 8
  %77 = call %"class.spvtools::opt::SEConstantNode"* %76(%"class.spvtools::opt::SENode"* %3) #10
  %78 = icmp ne %"class.spvtools::opt::SEConstantNode"* %72, null
  %79 = icmp ne %"class.spvtools::opt::SEConstantNode"* %77, null
  %80 = and i1 %78, %79
  %81 = call i8* @_Znwm(i64 80) #11
  br i1 %80, label %82, label %226

82:                                               ; preds = %56
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %81, i8** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> <i64 65, i64 -9223372036854775728>, <2 x i64>* %85, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 getelementptr inbounds ([66 x i8], [66 x i8]* @.str.43, i64 0, i64 0), i64 65, i1 false) #10
  %86 = getelementptr inbounds i8, i8* %81, i64 65
  store i8 0, i8* %86, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %8) #10
  %87 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %82
  %92 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %82, %91
  %94 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %72, i64 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %77, i64 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = srem i64 %95, %97
  %99 = sdiv i64 %95, %97
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %113, label %101

101:                                              ; preds = %93
  %102 = call i8* @_Znwm(i64 96) #11
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %102, i8** %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> <i64 80, i64 -9223372036854775712>, <2 x i64>* %105, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %102, i8* align 1 getelementptr inbounds ([81 x i8], [81 x i8]* @.str.44, i64 0, i64 0), i64 80, i1 false) #10
  %106 = getelementptr inbounds i8, i8* %102, i64 80
  store i8 0, i8* %106, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %9) #10
  %107 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %223

111:                                              ; preds = %101
  %112 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %112) #11
  br label %223

113:                                              ; preds = %93
  %114 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #10
  %115 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #10
  %117 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #10
  %118 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #10
  %119 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %16, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %95)
  %120 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %16, i64 0, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.45, i64 0, i64 0)) #10, !noalias !38
  %121 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 8 %121, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #10, !noalias !38
  %122 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i64 0, i64 0)) #10, !noalias !41
  %123 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 %123, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #10, !noalias !41
  %124 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %17, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %97)
  %125 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1, !noalias !44
  %128 = icmp slt i8 %127, 0
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8, !noalias !44
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8, !noalias !44
  %133 = zext i8 %127 to i64
  %134 = select i1 %128, i8* %130, i8* %124
  %135 = select i1 %128, i64 %132, i64 %133
  %136 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* %134, i64 %135) #10, !noalias !44
  %137 = bitcast %"class.std::__1::basic_string"* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* align 8 %137, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #10, !noalias !44
  %138 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0)) #10, !noalias !47
  %139 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 8 %139, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #10, !noalias !47
  %140 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %18, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %99)
  %141 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1, !noalias !50
  %144 = icmp slt i8 %143, 0
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8, !noalias !50
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8, !noalias !50
  %149 = zext i8 %143 to i64
  %150 = select i1 %144, i8* %146, i8* %140
  %151 = select i1 %144, i64 %148, i64 %149
  %152 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %150, i64 %151) #10, !noalias !50
  %153 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %153, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #10, !noalias !50
  %154 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !53
  %155 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %156 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 8 %156, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 24, i1 false) #10, !noalias !53
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %10) #10
  %157 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %113
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %163) #11
  br label %164

164:                                              ; preds = %113, %161
  %165 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #11
  br label %172

172:                                              ; preds = %164, %169
  %173 = load i8, i8* %142, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %176) #11
  br label %177

177:                                              ; preds = %172, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #10
  %178 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %177, %182
  %186 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  call void @_ZdlPv(i8* %192) #11
  br label %193

193:                                              ; preds = %185, %190
  %194 = load i8, i8* %126, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %197) #11
  br label %198

198:                                              ; preds = %193, %196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #10
  %199 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  call void @_ZdlPv(i8* %205) #11
  br label %206

206:                                              ; preds = %198, %203
  %207 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #11
  br label %214

214:                                              ; preds = %206, %211
  %215 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  call void @_ZdlPv(i8* %221) #11
  br label %222

222:                                              ; preds = %219, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #10
  br label %237

223:                                              ; preds = %111, %101
  %224 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 1, i32* %224, align 8
  %225 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 0, i32* %225, align 4
  br label %611

226:                                              ; preds = %56
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %81, i8** %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %229 = bitcast i64* %228 to <2 x i64>*
  store <2 x i64> <i64 76, i64 -9223372036854775728>, <2 x i64>* %229, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 getelementptr inbounds ([77 x i8], [77 x i8]* @.str.47, i64 0, i64 0), i64 76, i1 false) #10
  %230 = getelementptr inbounds i8, i8* %81, i64 76
  store i8 0, i8* %230, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %19) #10
  %231 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %226
  %236 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %236) #11
  br label %237

237:                                              ; preds = %235, %226, %222
  %238 = phi i64 [ %99, %222 ], [ 0, %226 ], [ 0, %235 ]
  %239 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetLowerBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %63) #10
  %240 = bitcast %"class.spvtools::opt::SENode"* %239 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %241 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %240, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %241, i64 4
  %243 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %242, align 8
  %244 = call %"class.spvtools::opt::SEConstantNode"* %243(%"class.spvtools::opt::SENode"* %239) #10
  %245 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetUpperBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %63) #10
  %246 = bitcast %"class.spvtools::opt::SENode"* %245 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %247 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %246, align 8
  %248 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %247, i64 4
  %249 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %248, align 8
  %250 = call %"class.spvtools::opt::SEConstantNode"* %249(%"class.spvtools::opt::SENode"* %245) #10
  %251 = icmp ne %"class.spvtools::opt::SEConstantNode"* %244, null
  %252 = icmp ne %"class.spvtools::opt::SEConstantNode"* %250, null
  %253 = and i1 %251, %252
  br i1 %253, label %254, label %400

254:                                              ; preds = %237
  %255 = call i8* @_Znwm(i64 64) #11
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %255, i8** %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %258 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> <i64 54, i64 -9223372036854775744>, <2 x i64>* %258, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %255, i8* align 1 getelementptr inbounds ([55 x i8], [55 x i8]* @.str.48, i64 0, i64 0), i64 54, i1 false) #10
  %259 = getelementptr inbounds i8, i8* %255, i64 54
  store i8 0, i8* %259, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %20) #10
  %260 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = load i8, i8* %261, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %254
  %265 = load i8*, i8** %256, align 8
  call void @_ZdlPv(i8* %265) #11
  br label %266

266:                                              ; preds = %254, %264
  %267 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %244, i64 0, i32 1
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %250, i64 0, i32 1
  %270 = load i64, i64* %269, align 8
  %271 = icmp slt i64 %238, 0
  %272 = sub nsw i64 0, %238
  %273 = select i1 %271, i64 %272, i64 %238
  %274 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis14IsWithinBoundsElll(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %273, i64 %268, i64 %270) #10
  br i1 %274, label %412, label %275

275:                                              ; preds = %266
  %276 = call i8* @_Znwm(i64 96) #11
  %277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %276, i8** %277, align 8
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %279 = bitcast i64* %278 to <2 x i64>*
  store <2 x i64> <i64 84, i64 -9223372036854775712>, <2 x i64>* %279, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %276, i8* align 1 getelementptr inbounds ([85 x i8], [85 x i8]* @.str.49, i64 0, i64 0), i64 84, i1 false) #10
  %280 = getelementptr inbounds i8, i8* %276, i64 84
  store i8 0, i8* %280, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %21) #10
  %281 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %287

285:                                              ; preds = %275
  %286 = load i8*, i8** %277, align 8
  call void @_ZdlPv(i8* %286) #11
  br label %287

287:                                              ; preds = %275, %285
  %288 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %288) #10
  %289 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #10
  %290 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #10
  %291 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %291) #10
  %292 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #10
  %293 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %293) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %28, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %268)
  %294 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %28, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.50, i64 0, i64 0)) #10, !noalias !56
  %295 = bitcast %"class.std::__1::basic_string"* %294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %292, i8* align 8 %295, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %295, i8 0, i64 24, i1 false) #10, !noalias !56
  %296 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %27, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0)) #10, !noalias !59
  %297 = bitcast %"class.std::__1::basic_string"* %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %291, i8* align 8 %297, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %297, i8 0, i64 24, i1 false) #10, !noalias !59
  %298 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %29, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %270)
  %299 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %299, i64 0, i32 1, i32 0
  %301 = load i8, i8* %300, align 1, !noalias !62
  %302 = icmp slt i8 %301, 0
  %303 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8, !noalias !62
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %306 = load i64, i64* %305, align 8, !noalias !62
  %307 = zext i8 %301 to i64
  %308 = select i1 %302, i8* %304, i8* %298
  %309 = select i1 %302, i64 %306, i64 %307
  %310 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %26, i8* %308, i64 %309) #10, !noalias !62
  %311 = bitcast %"class.std::__1::basic_string"* %310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %290, i8* align 8 %311, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %311, i8 0, i64 24, i1 false) #10, !noalias !62
  %312 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0)) #10, !noalias !65
  %313 = bitcast %"class.std::__1::basic_string"* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %289, i8* align 8 %313, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %313, i8 0, i64 24, i1 false) #10, !noalias !65
  %314 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %30, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %238)
  %315 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %315, i64 0, i32 1, i32 0
  %317 = load i8, i8* %316, align 1, !noalias !68
  %318 = icmp slt i8 %317, 0
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8, !noalias !68
  %321 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %322 = load i64, i64* %321, align 8, !noalias !68
  %323 = zext i8 %317 to i64
  %324 = select i1 %318, i8* %320, i8* %314
  %325 = select i1 %318, i64 %322, i64 %323
  %326 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %24, i8* %324, i64 %325) #10, !noalias !68
  %327 = bitcast %"class.std::__1::basic_string"* %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %288, i8* align 8 %327, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %327, i8 0, i64 24, i1 false) #10, !noalias !68
  %328 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !71
  %329 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %330 = bitcast %"class.std::__1::basic_string"* %328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %329, i8* align 8 %330, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 24, i1 false) #10, !noalias !71
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %22) #10
  %331 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %287
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #11
  br label %338

338:                                              ; preds = %287, %335
  %339 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #11
  br label %346

346:                                              ; preds = %338, %343
  %347 = load i8, i8* %316, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %349, label %351

349:                                              ; preds = %346
  %350 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %350) #11
  br label %351

351:                                              ; preds = %346, %349
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %314) #10
  %352 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %352, i64 0, i32 1, i32 0
  %354 = load i8, i8* %353, align 1
  %355 = icmp slt i8 %354, 0
  br i1 %355, label %356, label %359

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  call void @_ZdlPv(i8* %358) #11
  br label %359

359:                                              ; preds = %351, %356
  %360 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %360, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %359
  %365 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  call void @_ZdlPv(i8* %366) #11
  br label %367

367:                                              ; preds = %359, %364
  %368 = load i8, i8* %300, align 1
  %369 = icmp slt i8 %368, 0
  br i1 %369, label %370, label %372

370:                                              ; preds = %367
  %371 = load i8*, i8** %303, align 8
  call void @_ZdlPv(i8* %371) #11
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #10
  %373 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %373, i64 0, i32 1, i32 0
  %375 = load i8, i8* %374, align 1
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %377, label %380

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load i8*, i8** %378, align 8
  call void @_ZdlPv(i8* %379) #11
  br label %380

380:                                              ; preds = %372, %377
  %381 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %380
  %386 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #11
  br label %388

388:                                              ; preds = %380, %385
  %389 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #11
  br label %396

396:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %293) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %291) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %288) #10
  %397 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 2, i32* %397, align 8
  %398 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 0, i32* %398, align 4
  %399 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 %238, i64* %399, align 8
  br label %611

400:                                              ; preds = %237
  %401 = call i8* @_Znwm(i64 96) #11
  %402 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %401, i8** %402, align 8
  %403 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %404 = bitcast i64* %403 to <2 x i64>*
  store <2 x i64> <i64 82, i64 -9223372036854775712>, <2 x i64>* %404, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %401, i8* align 1 getelementptr inbounds ([83 x i8], [83 x i8]* @.str.53, i64 0, i64 0), i64 82, i1 false) #10
  %405 = getelementptr inbounds i8, i8* %401, i64 82
  store i8 0, i8* %405, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %31) #10
  %406 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %407 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %406, i64 0, i32 1, i32 0
  %408 = load i8, i8* %407, align 1
  %409 = icmp slt i8 %408, 0
  br i1 %409, label %410, label %412

410:                                              ; preds = %400
  %411 = load i8*, i8** %402, align 8
  call void @_ZdlPv(i8* %411) #11
  br label %412

412:                                              ; preds = %410, %400, %266
  %413 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis25GetFirstTripInductionNodeEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %63) #10
  %414 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %63, %"class.spvtools::opt::SERecurrentNode"* %2) #10
  %415 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %65, %"class.spvtools::opt::SENode"* %413, %"class.spvtools::opt::SENode"* %414) #10
  %416 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %65, %"class.spvtools::opt::SENode"* %415) #10
  %417 = icmp eq %"class.spvtools::opt::SENode"* %416, null
  br i1 %417, label %492, label %418

418:                                              ; preds = %412
  %419 = call i8* @_Znwm(i64 48) #11
  %420 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %419, i8** %420, align 8
  %421 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %422 = bitcast i64* %421 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %422, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %419, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str.54, i64 0, i64 0), i64 46, i1 false) #10
  %423 = getelementptr inbounds i8, i8* %419, i64 46
  store i8 0, i8* %423, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %32) #10
  %424 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %425 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %424, i64 0, i32 1, i32 0
  %426 = load i8, i8* %425, align 1
  %427 = icmp slt i8 %426, 0
  br i1 %427, label %428, label %430

428:                                              ; preds = %418
  %429 = load i8*, i8** %420, align 8
  call void @_ZdlPv(i8* %429) #11
  br label %430

430:                                              ; preds = %418, %428
  %431 = bitcast %"class.spvtools::opt::SENode"* %416 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %432 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %431, align 8
  %433 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %432, i64 4
  %434 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %433, align 8
  %435 = call %"class.spvtools::opt::SEConstantNode"* %434(%"class.spvtools::opt::SENode"* nonnull %416) #10
  %436 = icmp eq %"class.spvtools::opt::SEConstantNode"* %435, null
  br i1 %436, label %475, label %437

437:                                              ; preds = %430
  %438 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %438) #10
  %439 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #10
  %440 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %431, align 8
  %441 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %440, i64 4
  %442 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %441, align 8
  %443 = call %"class.spvtools::opt::SEConstantNode"* %442(%"class.spvtools::opt::SENode"* nonnull %416) #10
  %444 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %443, i64 0, i32 1
  %445 = load i64, i64* %444, align 8
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %35, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %445)
  %446 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %35, i64 0, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.55, i64 0, i64 0)) #10, !noalias !74
  %447 = bitcast %"class.std::__1::basic_string"* %446 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %438, i8* align 8 %447, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %447, i8 0, i64 24, i1 false) #10, !noalias !74
  %448 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !77
  %449 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %450 = bitcast %"class.std::__1::basic_string"* %448 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %449, i8* align 8 %450, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %450, i8 0, i64 24, i1 false) #10, !noalias !77
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %33) #10
  %451 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %452 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %451, i64 0, i32 1, i32 0
  %453 = load i8, i8* %452, align 1
  %454 = icmp slt i8 %453, 0
  br i1 %454, label %455, label %458

455:                                              ; preds = %437
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = load i8*, i8** %456, align 8
  call void @_ZdlPv(i8* %457) #11
  br label %458

458:                                              ; preds = %437, %455
  %459 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %460 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %459, i64 0, i32 1, i32 0
  %461 = load i8, i8* %460, align 1
  %462 = icmp slt i8 %461, 0
  br i1 %462, label %463, label %466

463:                                              ; preds = %458
  %464 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = load i8*, i8** %464, align 8
  call void @_ZdlPv(i8* %465) #11
  br label %466

466:                                              ; preds = %458, %463
  %467 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %468 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %467, i64 0, i32 1, i32 0
  %469 = load i8, i8* %468, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %474

471:                                              ; preds = %466
  %472 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  call void @_ZdlPv(i8* %473) #11
  br label %474

474:                                              ; preds = %466, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %438) #10
  br label %475

475:                                              ; preds = %430, %474
  %476 = icmp eq %"class.spvtools::opt::SENode"* %416, %1
  br i1 %476, label %477, label %504

477:                                              ; preds = %475
  %478 = call i8* @_Znwm(i64 80) #11
  %479 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %478, i8** %479, align 8
  %480 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %481 = bitcast i64* %480 to <2 x i64>*
  store <2 x i64> <i64 77, i64 -9223372036854775728>, <2 x i64>* %481, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %478, i8* align 1 getelementptr inbounds ([78 x i8], [78 x i8]* @.str.56, i64 0, i64 0), i64 77, i1 false) #10
  %482 = getelementptr inbounds i8, i8* %478, i64 77
  store i8 0, i8* %482, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %36) #10
  %483 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %484 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %483, i64 0, i32 1, i32 0
  %485 = load i8, i8* %484, align 1
  %486 = icmp slt i8 %485, 0
  br i1 %486, label %487, label %489

487:                                              ; preds = %477
  %488 = load i8*, i8** %479, align 8
  call void @_ZdlPv(i8* %488) #11
  br label %489

489:                                              ; preds = %477, %487
  %490 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 3, i32* %490, align 8
  %491 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 3
  store i8 1, i8* %491, align 8
  br label %611

492:                                              ; preds = %412
  %493 = call i8* @_Znwm(i64 64) #11
  %494 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %493, i8** %494, align 8
  %495 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %496 = bitcast i64* %495 to <2 x i64>*
  store <2 x i64> <i64 59, i64 -9223372036854775744>, <2 x i64>* %496, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %493, i8* align 1 getelementptr inbounds ([60 x i8], [60 x i8]* @.str.57, i64 0, i64 0), i64 59, i1 false) #10
  %497 = getelementptr inbounds i8, i8* %493, i64 59
  store i8 0, i8* %497, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %37) #10
  %498 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %499 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %498, i64 0, i32 1, i32 0
  %500 = load i8, i8* %499, align 1
  %501 = icmp slt i8 %500, 0
  br i1 %501, label %502, label %504

502:                                              ; preds = %492
  %503 = load i8*, i8** %494, align 8
  call void @_ZdlPv(i8* %503) #11
  br label %504

504:                                              ; preds = %502, %492, %475
  %505 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis25GetFinalTripInductionNodeEPKNS0_4LoopEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %63, %"class.spvtools::opt::SENode"* %3) #10
  %506 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %63, %"class.spvtools::opt::SERecurrentNode"* %2) #10
  %507 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %65, %"class.spvtools::opt::SENode"* %505, %"class.spvtools::opt::SENode"* %506) #10
  %508 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %65, %"class.spvtools::opt::SENode"* %507) #10
  %509 = icmp eq %"class.spvtools::opt::SENode"* %508, null
  br i1 %509, label %585, label %510

510:                                              ; preds = %504
  %511 = call i8* @_Znwm(i64 48) #11
  %512 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %511, i8** %512, align 8
  %513 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %514 = bitcast i64* %513 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %514, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %511, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str.58, i64 0, i64 0), i64 46, i1 false) #10
  %515 = getelementptr inbounds i8, i8* %511, i64 46
  store i8 0, i8* %515, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %38) #10
  %516 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %517 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %516, i64 0, i32 1, i32 0
  %518 = load i8, i8* %517, align 1
  %519 = icmp slt i8 %518, 0
  br i1 %519, label %520, label %522

520:                                              ; preds = %510
  %521 = load i8*, i8** %512, align 8
  call void @_ZdlPv(i8* %521) #11
  br label %522

522:                                              ; preds = %510, %520
  %523 = bitcast %"class.spvtools::opt::SENode"* %416 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %524 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %523, align 8
  %525 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %524, i64 4
  %526 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %525, align 8
  %527 = call %"class.spvtools::opt::SEConstantNode"* %526(%"class.spvtools::opt::SENode"* %416) #10
  %528 = icmp eq %"class.spvtools::opt::SEConstantNode"* %527, null
  br i1 %528, label %568, label %529

529:                                              ; preds = %522
  %530 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %530) #10
  %531 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %531) #10
  %532 = bitcast %"class.spvtools::opt::SENode"* %508 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %533 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %532, align 8
  %534 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %533, i64 4
  %535 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %534, align 8
  %536 = call %"class.spvtools::opt::SEConstantNode"* %535(%"class.spvtools::opt::SENode"* nonnull %508) #10
  %537 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %536, i64 0, i32 1
  %538 = load i64, i64* %537, align 8
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %41, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %538)
  %539 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %41, i64 0, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.59, i64 0, i64 0)) #10, !noalias !80
  %540 = bitcast %"class.std::__1::basic_string"* %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %530, i8* align 8 %540, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %540, i8 0, i64 24, i1 false) #10, !noalias !80
  %541 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !83
  %542 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %543 = bitcast %"class.std::__1::basic_string"* %541 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %542, i8* align 8 %543, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %543, i8 0, i64 24, i1 false) #10, !noalias !83
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %39) #10
  %544 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %545 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %544, i64 0, i32 1, i32 0
  %546 = load i8, i8* %545, align 1
  %547 = icmp slt i8 %546, 0
  br i1 %547, label %548, label %551

548:                                              ; preds = %529
  %549 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load i8*, i8** %549, align 8
  call void @_ZdlPv(i8* %550) #11
  br label %551

551:                                              ; preds = %529, %548
  %552 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %553 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %552, i64 0, i32 1, i32 0
  %554 = load i8, i8* %553, align 1
  %555 = icmp slt i8 %554, 0
  br i1 %555, label %556, label %559

556:                                              ; preds = %551
  %557 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load i8*, i8** %557, align 8
  call void @_ZdlPv(i8* %558) #11
  br label %559

559:                                              ; preds = %551, %556
  %560 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %561 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %560, i64 0, i32 1, i32 0
  %562 = load i8, i8* %561, align 1
  %563 = icmp slt i8 %562, 0
  br i1 %563, label %564, label %567

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load i8*, i8** %565, align 8
  call void @_ZdlPv(i8* %566) #11
  br label %567

567:                                              ; preds = %559, %564
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %531) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %530) #10
  br label %568

568:                                              ; preds = %522, %567
  %569 = icmp eq %"class.spvtools::opt::SENode"* %508, %1
  br i1 %569, label %570, label %597

570:                                              ; preds = %568
  %571 = call i8* @_Znwm(i64 80) #11
  %572 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %571, i8** %572, align 8
  %573 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %574 = bitcast i64* %573 to <2 x i64>*
  store <2 x i64> <i64 77, i64 -9223372036854775728>, <2 x i64>* %574, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %571, i8* align 1 getelementptr inbounds ([78 x i8], [78 x i8]* @.str.60, i64 0, i64 0), i64 77, i1 false) #10
  %575 = getelementptr inbounds i8, i8* %571, i64 77
  store i8 0, i8* %575, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %42) #10
  %576 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %577 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %576, i64 0, i32 1, i32 0
  %578 = load i8, i8* %577, align 1
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %582

580:                                              ; preds = %570
  %581 = load i8*, i8** %572, align 8
  call void @_ZdlPv(i8* %581) #11
  br label %582

582:                                              ; preds = %570, %580
  %583 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 3, i32* %583, align 8
  %584 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 4
  store i8 1, i8* %584, align 1
  br label %611

585:                                              ; preds = %504
  %586 = call i8* @_Znwm(i64 64) #11
  %587 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %586, i8** %587, align 8
  %588 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %589 = bitcast i64* %588 to <2 x i64>*
  store <2 x i64> <i64 59, i64 -9223372036854775744>, <2 x i64>* %589, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %586, i8* align 1 getelementptr inbounds ([60 x i8], [60 x i8]* @.str.61, i64 0, i64 0), i64 59, i1 false) #10
  %590 = getelementptr inbounds i8, i8* %586, i64 59
  store i8 0, i8* %590, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %43) #10
  %591 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %592 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %591, i64 0, i32 1, i32 0
  %593 = load i8, i8* %592, align 1
  %594 = icmp slt i8 %593, 0
  br i1 %594, label %595, label %597

595:                                              ; preds = %585
  %596 = load i8*, i8** %587, align 8
  call void @_ZdlPv(i8* %596) #11
  br label %597

597:                                              ; preds = %595, %585, %568
  %598 = call i8* @_Znwm(i64 80) #11
  %599 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %598, i8** %599, align 8
  %600 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %601 = bitcast i64* %600 to <2 x i64>*
  store <2 x i64> <i64 73, i64 -9223372036854775728>, <2 x i64>* %601, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %598, i8* align 1 getelementptr inbounds ([74 x i8], [74 x i8]* @.str.62, i64 0, i64 0), i64 73, i1 false) #10
  %602 = getelementptr inbounds i8, i8* %598, i64 73
  store i8 0, i8* %602, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %44) #10
  %603 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %604 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %603, i64 0, i32 1, i32 0
  %605 = load i8, i8* %604, align 1
  %606 = icmp slt i8 %605, 0
  br i1 %606, label %607, label %609

607:                                              ; preds = %597
  %608 = load i8*, i8** %599, align 8
  call void @_ZdlPv(i8* %608) #11
  br label %609

609:                                              ; preds = %597, %607
  %610 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 7, i32* %610, align 4
  br label %611

611:                                              ; preds = %223, %396, %582, %609, %489
  %612 = phi i1 [ true, %223 ], [ true, %396 ], [ false, %582 ], [ false, %609 ], [ false, %489 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #10
  ret i1 %612
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis26WeakZeroDestinationSIVTestEPNS0_15SERecurrentNodeEPNS0_6SENodeES5_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::DistanceEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.std::__1::pair.983", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = alloca %"class.std::__1::basic_string", align 8
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.std::__1::basic_string", align 8
  %37 = alloca %"class.std::__1::basic_string", align 8
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = alloca %"class.std::__1::basic_string", align 8
  %42 = alloca %"class.std::__1::basic_string", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = tail call i8* @_Znwm(i64 48) #11
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %44, i8** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast i64* %46 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %47, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.63, i64 0, i64 0), i64 38, i1 false) #10
  %48 = getelementptr inbounds i8, i8* %44, i64 38
  store i8 0, i8* %48, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %6) #10
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %5
  %54 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %5, %53
  %56 = bitcast %"struct.std::__1::pair.983"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #10
  %57 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %7, i64 0, i32 1
  %58 = ptrtoint %"class.spvtools::opt::SERecurrentNode"* %1 to i64
  %59 = ptrtoint %"class.spvtools::opt::SENode"* %2 to i64
  %60 = bitcast %"struct.std::__1::pair.983"* %7 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"class.spvtools::opt::SENode"** %57 to i64*
  store i64 %59, i64* %61, align 8
  %62 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetLoopForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %7) #10
  %63 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %62, %"class.spvtools::opt::SERecurrentNode"* %1) #10
  %64 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %65 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %64, %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::SENode"* %63) #10
  %66 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %64, %"class.spvtools::opt::SENode"* %65) #10
  %67 = bitcast %"class.spvtools::opt::SENode"* %66 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %68 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %68, i64 4
  %70 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %69, align 8
  %71 = call %"class.spvtools::opt::SEConstantNode"* %70(%"class.spvtools::opt::SENode"* %66) #10
  %72 = bitcast %"class.spvtools::opt::SENode"* %3 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %73 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %73, i64 4
  %75 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %74, align 8
  %76 = call %"class.spvtools::opt::SEConstantNode"* %75(%"class.spvtools::opt::SENode"* %3) #10
  %77 = icmp ne %"class.spvtools::opt::SEConstantNode"* %71, null
  %78 = icmp ne %"class.spvtools::opt::SEConstantNode"* %76, null
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %225

80:                                               ; preds = %55
  %81 = call i8* @_Znwm(i64 80) #11
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %81, i8** %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> <i64 70, i64 -9223372036854775728>, <2 x i64>* %84, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 getelementptr inbounds ([71 x i8], [71 x i8]* @.str.64, i64 0, i64 0), i64 70, i1 false) #10
  %85 = getelementptr inbounds i8, i8* %81, i64 70
  store i8 0, i8* %85, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %8) #10
  %86 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %80
  %91 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %80, %90
  %93 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %71, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %76, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = srem i64 %94, %96
  %98 = sdiv i64 %94, %96
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %92
  %101 = call i8* @_Znwm(i64 96) #11
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> <i64 85, i64 -9223372036854775712>, <2 x i64>* %104, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* align 1 getelementptr inbounds ([86 x i8], [86 x i8]* @.str.65, i64 0, i64 0), i64 85, i1 false) #10
  %105 = getelementptr inbounds i8, i8* %101, i64 85
  store i8 0, i8* %105, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %9) #10
  %106 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %222

110:                                              ; preds = %100
  %111 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %111) #11
  br label %222

112:                                              ; preds = %92
  %113 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #10
  %114 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #10
  %115 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #10
  %117 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #10
  %118 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %16, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %94)
  %119 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %16, i64 0, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.66, i64 0, i64 0)) #10, !noalias !86
  %120 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 %120, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #10, !noalias !86
  %121 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i64 0, i64 0)) #10, !noalias !89
  %122 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* align 8 %122, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #10, !noalias !89
  %123 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %17, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %96)
  %124 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1, !noalias !92
  %127 = icmp slt i8 %126, 0
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8, !noalias !92
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !92
  %132 = zext i8 %126 to i64
  %133 = select i1 %127, i8* %129, i8* %123
  %134 = select i1 %127, i64 %131, i64 %132
  %135 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* %133, i64 %134) #10, !noalias !92
  %136 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 8 %136, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #10, !noalias !92
  %137 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0)) #10, !noalias !95
  %138 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %138, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 24, i1 false) #10, !noalias !95
  %139 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %18, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %98)
  %140 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1, !noalias !98
  %143 = icmp slt i8 %142, 0
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8, !noalias !98
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = load i64, i64* %146, align 8, !noalias !98
  %148 = zext i8 %142 to i64
  %149 = select i1 %143, i8* %145, i8* %139
  %150 = select i1 %143, i64 %147, i64 %148
  %151 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %149, i64 %150) #10, !noalias !98
  %152 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 8 %152, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #10, !noalias !98
  %153 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !101
  %154 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %155 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %154, i8* align 8 %155, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 24, i1 false) #10, !noalias !101
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %10) #10
  %156 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %112
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #11
  br label %163

163:                                              ; preds = %112, %160
  %164 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %170) #11
  br label %171

171:                                              ; preds = %163, %168
  %172 = load i8, i8* %141, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %175) #11
  br label %176

176:                                              ; preds = %171, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #10
  %177 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %183) #11
  br label %184

184:                                              ; preds = %176, %181
  %185 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  call void @_ZdlPv(i8* %191) #11
  br label %192

192:                                              ; preds = %184, %189
  %193 = load i8, i8* %125, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %196) #11
  br label %197

197:                                              ; preds = %192, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #10
  %198 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %204) #11
  br label %205

205:                                              ; preds = %197, %202
  %206 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #11
  br label %213

213:                                              ; preds = %205, %210
  %214 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %220) #11
  br label %221

221:                                              ; preds = %218, %213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #10
  br label %237

222:                                              ; preds = %110, %100
  %223 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 1, i32* %223, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 0, i32* %224, align 4
  br label %599

225:                                              ; preds = %55
  %226 = call i8* @_Znwm(i64 96) #11
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %226, i8** %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %229 = bitcast i64* %228 to <2 x i64>*
  store <2 x i64> <i64 81, i64 -9223372036854775712>, <2 x i64>* %229, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %226, i8* align 1 getelementptr inbounds ([82 x i8], [82 x i8]* @.str.67, i64 0, i64 0), i64 81, i1 false) #10
  %230 = getelementptr inbounds i8, i8* %226, i64 81
  store i8 0, i8* %230, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %19) #10
  %231 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %225
  %236 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %236) #11
  br label %237

237:                                              ; preds = %235, %225, %221
  %238 = phi i64 [ %98, %221 ], [ 0, %225 ], [ 0, %235 ]
  %239 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetLowerBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %62) #10
  %240 = bitcast %"class.spvtools::opt::SENode"* %239 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %241 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %240, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %241, i64 4
  %243 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %242, align 8
  %244 = call %"class.spvtools::opt::SEConstantNode"* %243(%"class.spvtools::opt::SENode"* %239) #10
  %245 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetUpperBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %62) #10
  %246 = bitcast %"class.spvtools::opt::SENode"* %245 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %247 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %246, align 8
  %248 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %247, i64 4
  %249 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %248, align 8
  %250 = call %"class.spvtools::opt::SEConstantNode"* %249(%"class.spvtools::opt::SENode"* %245) #10
  %251 = icmp ne %"class.spvtools::opt::SEConstantNode"* %244, null
  %252 = icmp ne %"class.spvtools::opt::SEConstantNode"* %250, null
  %253 = and i1 %251, %252
  br i1 %253, label %254, label %389

254:                                              ; preds = %237
  %255 = call i8* @_Znwm(i64 64) #11
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %255, i8** %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %258 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> <i64 59, i64 -9223372036854775744>, <2 x i64>* %258, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %255, i8* align 1 getelementptr inbounds ([60 x i8], [60 x i8]* @.str.68, i64 0, i64 0), i64 59, i1 false) #10
  %259 = getelementptr inbounds i8, i8* %255, i64 59
  store i8 0, i8* %259, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %20) #10
  %260 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = load i8, i8* %261, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %254
  %265 = load i8*, i8** %256, align 8
  call void @_ZdlPv(i8* %265) #11
  br label %266

266:                                              ; preds = %254, %264
  %267 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %244, i64 0, i32 1
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %250, i64 0, i32 1
  %270 = load i64, i64* %269, align 8
  %271 = icmp slt i64 %238, 0
  %272 = sub nsw i64 0, %238
  %273 = select i1 %271, i64 %272, i64 %238
  %274 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis14IsWithinBoundsElll(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %273, i64 %268, i64 %270) #10
  br i1 %274, label %401, label %275

275:                                              ; preds = %266
  %276 = call i8* @_Znwm(i64 96) #11
  %277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %276, i8** %277, align 8
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %279 = bitcast i64* %278 to <2 x i64>*
  store <2 x i64> <i64 89, i64 -9223372036854775712>, <2 x i64>* %279, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %276, i8* align 1 getelementptr inbounds ([90 x i8], [90 x i8]* @.str.69, i64 0, i64 0), i64 89, i1 false) #10
  %280 = getelementptr inbounds i8, i8* %276, i64 89
  store i8 0, i8* %280, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %21) #10
  %281 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %287

285:                                              ; preds = %275
  %286 = load i8*, i8** %277, align 8
  call void @_ZdlPv(i8* %286) #11
  br label %287

287:                                              ; preds = %275, %285
  %288 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %288) #10
  %289 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #10
  %290 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #10
  %291 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %291) #10
  %292 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %27, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %268)
  %293 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %27, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.70, i64 0, i64 0)) #10, !noalias !104
  %294 = bitcast %"class.std::__1::basic_string"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %291, i8* align 8 %294, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 24, i1 false) #10, !noalias !104
  %295 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %26, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0)) #10, !noalias !107
  %296 = bitcast %"class.std::__1::basic_string"* %295 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %290, i8* align 8 %296, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %296, i8 0, i64 24, i1 false) #10, !noalias !107
  %297 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %28, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %270)
  %298 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %298, i64 0, i32 1, i32 0
  %300 = load i8, i8* %299, align 1, !noalias !110
  %301 = icmp slt i8 %300, 0
  %302 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8, !noalias !110
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %305 = load i64, i64* %304, align 8, !noalias !110
  %306 = zext i8 %300 to i64
  %307 = select i1 %301, i8* %303, i8* %297
  %308 = select i1 %301, i64 %305, i64 %306
  %309 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %25, i8* %307, i64 %308) #10, !noalias !110
  %310 = bitcast %"class.std::__1::basic_string"* %309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %289, i8* align 8 %310, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 24, i1 false) #10, !noalias !110
  %311 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0)) #10, !noalias !113
  %312 = bitcast %"class.std::__1::basic_string"* %311 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %288, i8* align 8 %312, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %312, i8 0, i64 24, i1 false) #10, !noalias !113
  %313 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %313) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %29, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %238)
  %314 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %315 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %314, i64 0, i32 1, i32 0
  %316 = load i8, i8* %315, align 1, !noalias !116
  %317 = icmp slt i8 %316, 0
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8, !noalias !116
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %321 = load i64, i64* %320, align 8, !noalias !116
  %322 = zext i8 %316 to i64
  %323 = select i1 %317, i8* %319, i8* %313
  %324 = select i1 %317, i64 %321, i64 %322
  %325 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %23, i8* %323, i64 %324) #10, !noalias !116
  %326 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %327 = bitcast %"class.std::__1::basic_string"* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %326, i8* align 8 %327, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %327, i8 0, i64 24, i1 false) #10, !noalias !116
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %22) #10
  %328 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = icmp slt i8 %330, 0
  br i1 %331, label %332, label %335

332:                                              ; preds = %287
  %333 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  call void @_ZdlPv(i8* %334) #11
  br label %335

335:                                              ; preds = %287, %332
  %336 = load i8, i8* %315, align 1
  %337 = icmp slt i8 %336, 0
  br i1 %337, label %338, label %340

338:                                              ; preds = %335
  %339 = load i8*, i8** %318, align 8
  call void @_ZdlPv(i8* %339) #11
  br label %340

340:                                              ; preds = %335, %338
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #10
  %341 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %342 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %341, i64 0, i32 1, i32 0
  %343 = load i8, i8* %342, align 1
  %344 = icmp slt i8 %343, 0
  br i1 %344, label %345, label %348

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load i8*, i8** %346, align 8
  call void @_ZdlPv(i8* %347) #11
  br label %348

348:                                              ; preds = %340, %345
  %349 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %350 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %349, i64 0, i32 1, i32 0
  %351 = load i8, i8* %350, align 1
  %352 = icmp slt i8 %351, 0
  br i1 %352, label %353, label %356

353:                                              ; preds = %348
  %354 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load i8*, i8** %354, align 8
  call void @_ZdlPv(i8* %355) #11
  br label %356

356:                                              ; preds = %348, %353
  %357 = load i8, i8* %299, align 1
  %358 = icmp slt i8 %357, 0
  br i1 %358, label %359, label %361

359:                                              ; preds = %356
  %360 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %360) #11
  br label %361

361:                                              ; preds = %356, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #10
  %362 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %363 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %362, i64 0, i32 1, i32 0
  %364 = load i8, i8* %363, align 1
  %365 = icmp slt i8 %364, 0
  br i1 %365, label %366, label %369

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load i8*, i8** %367, align 8
  call void @_ZdlPv(i8* %368) #11
  br label %369

369:                                              ; preds = %361, %366
  %370 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %371 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %370, i64 0, i32 1, i32 0
  %372 = load i8, i8* %371, align 1
  %373 = icmp slt i8 %372, 0
  br i1 %373, label %374, label %377

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load i8*, i8** %375, align 8
  call void @_ZdlPv(i8* %376) #11
  br label %377

377:                                              ; preds = %369, %374
  %378 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %379 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %378, i64 0, i32 1, i32 0
  %380 = load i8, i8* %379, align 1
  %381 = icmp slt i8 %380, 0
  br i1 %381, label %382, label %385

382:                                              ; preds = %377
  %383 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load i8*, i8** %383, align 8
  call void @_ZdlPv(i8* %384) #11
  br label %385

385:                                              ; preds = %377, %382
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %291) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %288) #10
  %386 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 2, i32* %386, align 8
  %387 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 0, i32* %387, align 4
  %388 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 %238, i64* %388, align 8
  br label %599

389:                                              ; preds = %237
  %390 = call i8* @_Znwm(i64 96) #11
  %391 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %390, i8** %391, align 8
  %392 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %393 = bitcast i64* %392 to <2 x i64>*
  store <2 x i64> <i64 87, i64 -9223372036854775712>, <2 x i64>* %393, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %390, i8* align 1 getelementptr inbounds ([88 x i8], [88 x i8]* @.str.71, i64 0, i64 0), i64 87, i1 false) #10
  %394 = getelementptr inbounds i8, i8* %390, i64 87
  store i8 0, i8* %394, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %30) #10
  %395 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %395, i64 0, i32 1, i32 0
  %397 = load i8, i8* %396, align 1
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %389
  %400 = load i8*, i8** %391, align 8
  call void @_ZdlPv(i8* %400) #11
  br label %401

401:                                              ; preds = %399, %389, %266
  %402 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis25GetFirstTripInductionNodeEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %62) #10
  %403 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %62, %"class.spvtools::opt::SERecurrentNode"* %1) #10
  %404 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %64, %"class.spvtools::opt::SENode"* %402, %"class.spvtools::opt::SENode"* %403) #10
  %405 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %64, %"class.spvtools::opt::SENode"* %404) #10
  %406 = icmp eq %"class.spvtools::opt::SENode"* %405, null
  br i1 %406, label %481, label %407

407:                                              ; preds = %401
  %408 = call i8* @_Znwm(i64 64) #11
  %409 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %408, i8** %409, align 8
  %410 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %411 = bitcast i64* %410 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %411, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %408, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.72, i64 0, i64 0), i64 51, i1 false) #10
  %412 = getelementptr inbounds i8, i8* %408, i64 51
  store i8 0, i8* %412, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %31) #10
  %413 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %414 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %413, i64 0, i32 1, i32 0
  %415 = load i8, i8* %414, align 1
  %416 = icmp slt i8 %415, 0
  br i1 %416, label %417, label %419

417:                                              ; preds = %407
  %418 = load i8*, i8** %409, align 8
  call void @_ZdlPv(i8* %418) #11
  br label %419

419:                                              ; preds = %407, %417
  %420 = bitcast %"class.spvtools::opt::SENode"* %405 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %421 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %420, align 8
  %422 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %421, i64 4
  %423 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %422, align 8
  %424 = call %"class.spvtools::opt::SEConstantNode"* %423(%"class.spvtools::opt::SENode"* nonnull %405) #10
  %425 = icmp eq %"class.spvtools::opt::SEConstantNode"* %424, null
  br i1 %425, label %464, label %426

426:                                              ; preds = %419
  %427 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %427) #10
  %428 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %428) #10
  %429 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %420, align 8
  %430 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %429, i64 4
  %431 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %430, align 8
  %432 = call %"class.spvtools::opt::SEConstantNode"* %431(%"class.spvtools::opt::SENode"* nonnull %405) #10
  %433 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %432, i64 0, i32 1
  %434 = load i64, i64* %433, align 8
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %34, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %434)
  %435 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %34, i64 0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.73, i64 0, i64 0)) #10, !noalias !119
  %436 = bitcast %"class.std::__1::basic_string"* %435 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %427, i8* align 8 %436, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %436, i8 0, i64 24, i1 false) #10, !noalias !119
  %437 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !122
  %438 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %439 = bitcast %"class.std::__1::basic_string"* %437 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %438, i8* align 8 %439, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %439, i8 0, i64 24, i1 false) #10, !noalias !122
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %32) #10
  %440 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %441 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %440, i64 0, i32 1, i32 0
  %442 = load i8, i8* %441, align 1
  %443 = icmp slt i8 %442, 0
  br i1 %443, label %444, label %447

444:                                              ; preds = %426
  %445 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %446 = load i8*, i8** %445, align 8
  call void @_ZdlPv(i8* %446) #11
  br label %447

447:                                              ; preds = %426, %444
  %448 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %449 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %448, i64 0, i32 1, i32 0
  %450 = load i8, i8* %449, align 1
  %451 = icmp slt i8 %450, 0
  br i1 %451, label %452, label %455

452:                                              ; preds = %447
  %453 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load i8*, i8** %453, align 8
  call void @_ZdlPv(i8* %454) #11
  br label %455

455:                                              ; preds = %447, %452
  %456 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %457 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %456, i64 0, i32 1, i32 0
  %458 = load i8, i8* %457, align 1
  %459 = icmp slt i8 %458, 0
  br i1 %459, label %460, label %463

460:                                              ; preds = %455
  %461 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load i8*, i8** %461, align 8
  call void @_ZdlPv(i8* %462) #11
  br label %463

463:                                              ; preds = %455, %460
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %428) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %427) #10
  br label %464

464:                                              ; preds = %419, %463
  %465 = icmp eq %"class.spvtools::opt::SENode"* %405, %2
  br i1 %465, label %466, label %493

466:                                              ; preds = %464
  %467 = call i8* @_Znwm(i64 96) #11
  %468 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %467, i8** %468, align 8
  %469 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %470 = bitcast i64* %469 to <2 x i64>*
  store <2 x i64> <i64 82, i64 -9223372036854775712>, <2 x i64>* %470, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %467, i8* align 1 getelementptr inbounds ([83 x i8], [83 x i8]* @.str.74, i64 0, i64 0), i64 82, i1 false) #10
  %471 = getelementptr inbounds i8, i8* %467, i64 82
  store i8 0, i8* %471, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %35) #10
  %472 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %473 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %472, i64 0, i32 1, i32 0
  %474 = load i8, i8* %473, align 1
  %475 = icmp slt i8 %474, 0
  br i1 %475, label %476, label %478

476:                                              ; preds = %466
  %477 = load i8*, i8** %468, align 8
  call void @_ZdlPv(i8* %477) #11
  br label %478

478:                                              ; preds = %466, %476
  %479 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 3, i32* %479, align 8
  %480 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 3
  store i8 1, i8* %480, align 8
  br label %599

481:                                              ; preds = %401
  %482 = call i8* @_Znwm(i64 80) #11
  %483 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %482, i8** %483, align 8
  %484 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %485 = bitcast i64* %484 to <2 x i64>*
  store <2 x i64> <i64 64, i64 -9223372036854775728>, <2 x i64>* %485, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %482, i8* align 1 getelementptr inbounds ([65 x i8], [65 x i8]* @.str.75, i64 0, i64 0), i64 64, i1 false) #10
  %486 = getelementptr inbounds i8, i8* %482, i64 64
  store i8 0, i8* %486, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %36) #10
  %487 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %488 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %487, i64 0, i32 1, i32 0
  %489 = load i8, i8* %488, align 1
  %490 = icmp slt i8 %489, 0
  br i1 %490, label %491, label %493

491:                                              ; preds = %481
  %492 = load i8*, i8** %483, align 8
  call void @_ZdlPv(i8* %492) #11
  br label %493

493:                                              ; preds = %491, %481, %464
  %494 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis25GetFinalTripInductionNodeEPKNS0_4LoopEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %62, %"class.spvtools::opt::SENode"* %3) #10
  %495 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %62, %"class.spvtools::opt::SERecurrentNode"* %1) #10
  %496 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %64, %"class.spvtools::opt::SENode"* %494, %"class.spvtools::opt::SENode"* %495) #10
  %497 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %64, %"class.spvtools::opt::SENode"* %496) #10
  %498 = icmp eq %"class.spvtools::opt::SENode"* %497, null
  br i1 %498, label %573, label %499

499:                                              ; preds = %493
  %500 = call i8* @_Znwm(i64 64) #11
  %501 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %500, i8** %501, align 8
  %502 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %503 = bitcast i64* %502 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %503, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %500, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i64 0, i64 0), i64 51, i1 false) #10
  %504 = getelementptr inbounds i8, i8* %500, i64 51
  store i8 0, i8* %504, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %37) #10
  %505 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %506 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %505, i64 0, i32 1, i32 0
  %507 = load i8, i8* %506, align 1
  %508 = icmp slt i8 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %499
  %510 = load i8*, i8** %501, align 8
  call void @_ZdlPv(i8* %510) #11
  br label %511

511:                                              ; preds = %499, %509
  %512 = bitcast %"class.spvtools::opt::SENode"* %497 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %513 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %512, align 8
  %514 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %513, i64 4
  %515 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %514, align 8
  %516 = call %"class.spvtools::opt::SEConstantNode"* %515(%"class.spvtools::opt::SENode"* nonnull %497) #10
  %517 = icmp eq %"class.spvtools::opt::SEConstantNode"* %516, null
  br i1 %517, label %556, label %518

518:                                              ; preds = %511
  %519 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %519) #10
  %520 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #10
  %521 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %512, align 8
  %522 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %521, i64 4
  %523 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %522, align 8
  %524 = call %"class.spvtools::opt::SEConstantNode"* %523(%"class.spvtools::opt::SENode"* nonnull %497) #10
  %525 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %524, i64 0, i32 1
  %526 = load i64, i64* %525, align 8
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %40, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %526)
  %527 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %40, i64 0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.77, i64 0, i64 0)) #10, !noalias !125
  %528 = bitcast %"class.std::__1::basic_string"* %527 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %519, i8* align 8 %528, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %528, i8 0, i64 24, i1 false) #10, !noalias !125
  %529 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !128
  %530 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %531 = bitcast %"class.std::__1::basic_string"* %529 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %530, i8* align 8 %531, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %531, i8 0, i64 24, i1 false) #10, !noalias !128
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %38) #10
  %532 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %533 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %532, i64 0, i32 1, i32 0
  %534 = load i8, i8* %533, align 1
  %535 = icmp slt i8 %534, 0
  br i1 %535, label %536, label %539

536:                                              ; preds = %518
  %537 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load i8*, i8** %537, align 8
  call void @_ZdlPv(i8* %538) #11
  br label %539

539:                                              ; preds = %518, %536
  %540 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %541 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %540, i64 0, i32 1, i32 0
  %542 = load i8, i8* %541, align 1
  %543 = icmp slt i8 %542, 0
  br i1 %543, label %544, label %547

544:                                              ; preds = %539
  %545 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load i8*, i8** %545, align 8
  call void @_ZdlPv(i8* %546) #11
  br label %547

547:                                              ; preds = %539, %544
  %548 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %549 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %548, i64 0, i32 1, i32 0
  %550 = load i8, i8* %549, align 1
  %551 = icmp slt i8 %550, 0
  br i1 %551, label %552, label %555

552:                                              ; preds = %547
  %553 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load i8*, i8** %553, align 8
  call void @_ZdlPv(i8* %554) #11
  br label %555

555:                                              ; preds = %547, %552
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %519) #10
  br label %556

556:                                              ; preds = %511, %555
  %557 = icmp eq %"class.spvtools::opt::SENode"* %497, %2
  br i1 %557, label %558, label %585

558:                                              ; preds = %556
  %559 = call i8* @_Znwm(i64 96) #11
  %560 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %559, i8** %560, align 8
  %561 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %562 = bitcast i64* %561 to <2 x i64>*
  store <2 x i64> <i64 82, i64 -9223372036854775712>, <2 x i64>* %562, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %559, i8* align 1 getelementptr inbounds ([83 x i8], [83 x i8]* @.str.78, i64 0, i64 0), i64 82, i1 false) #10
  %563 = getelementptr inbounds i8, i8* %559, i64 82
  store i8 0, i8* %563, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %41) #10
  %564 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %565 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %564, i64 0, i32 1, i32 0
  %566 = load i8, i8* %565, align 1
  %567 = icmp slt i8 %566, 0
  br i1 %567, label %568, label %570

568:                                              ; preds = %558
  %569 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %569) #11
  br label %570

570:                                              ; preds = %558, %568
  %571 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 3, i32* %571, align 8
  %572 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 4
  store i8 1, i8* %572, align 1
  br label %599

573:                                              ; preds = %493
  %574 = call i8* @_Znwm(i64 80) #11
  %575 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %574, i8** %575, align 8
  %576 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %577 = bitcast i64* %576 to <2 x i64>*
  store <2 x i64> <i64 64, i64 -9223372036854775728>, <2 x i64>* %577, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %574, i8* align 1 getelementptr inbounds ([65 x i8], [65 x i8]* @.str.79, i64 0, i64 0), i64 64, i1 false) #10
  %578 = getelementptr inbounds i8, i8* %574, i64 64
  store i8 0, i8* %578, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %42) #10
  %579 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %580 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %579, i64 0, i32 1, i32 0
  %581 = load i8, i8* %580, align 1
  %582 = icmp slt i8 %581, 0
  br i1 %582, label %583, label %585

583:                                              ; preds = %573
  %584 = load i8*, i8** %575, align 8
  call void @_ZdlPv(i8* %584) #11
  br label %585

585:                                              ; preds = %583, %573, %556
  %586 = call i8* @_Znwm(i64 80) #11
  %587 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %586, i8** %587, align 8
  %588 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %589 = bitcast i64* %588 to <2 x i64>*
  store <2 x i64> <i64 78, i64 -9223372036854775728>, <2 x i64>* %589, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %586, i8* align 1 getelementptr inbounds ([79 x i8], [79 x i8]* @.str.80, i64 0, i64 0), i64 78, i1 false) #10
  %590 = getelementptr inbounds i8, i8* %586, i64 78
  store i8 0, i8* %590, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %43) #10
  %591 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %592 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %591, i64 0, i32 1, i32 0
  %593 = load i8, i8* %592, align 1
  %594 = icmp slt i8 %593, 0
  br i1 %594, label %595, label %597

595:                                              ; preds = %585
  %596 = load i8*, i8** %587, align 8
  call void @_ZdlPv(i8* %596) #11
  br label %597

597:                                              ; preds = %585, %595
  %598 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 7, i32* %598, align 4
  br label %599

599:                                              ; preds = %222, %385, %570, %597, %478
  %600 = phi i1 [ true, %222 ], [ true, %385 ], [ false, %570 ], [ false, %597 ], [ false, %478 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #10
  ret i1 %600
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt6SENode21CollectRecurrentNodesEv(%"class.std::__1::vector.1002"* noalias sret, %"class.spvtools::opt::SENode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.1002", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1002"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %7 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %7, i64 6
  %9 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %8, align 8
  %10 = tail call %"class.spvtools::opt::SERecurrentNode"* %9(%"class.spvtools::opt::SENode"* %1) #10
  %11 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = ptrtoint %"class.spvtools::opt::SERecurrentNode"* %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %4 to i64*
  %16 = bitcast %"class.std::__1::vector.1002"* %0 to i64*
  %17 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %14 to i64*
  %18 = tail call i8* @_Znwm(i64 8) #11
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast i8* %18 to i64*
  store i64 %13, i64* %21, align 8
  %22 = ptrtoint i8* %18 to i64
  store i64 %22, i64* %16, align 8
  store i64 %20, i64* %15, align 8
  store i64 %20, i64* %17, align 8
  br label %23

23:                                               ; preds = %12, %2
  %24 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %1, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %1, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %26, align 8
  %28 = icmp eq %"class.spvtools::opt::SENode"** %25, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::vector.1002"* %3 to i8*
  %31 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %3, i64 0, i32 0, i32 1
  %33 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %32 to i64*
  %34 = bitcast %"class.std::__1::vector.1002"* %3 to i8*
  br label %36

35:                                               ; preds = %48, %23
  ret void

36:                                               ; preds = %29, %48
  %37 = phi %"class.spvtools::opt::SENode"** [ %25, %29 ], [ %49, %48 ]
  %38 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt6SENode21CollectRecurrentNodesEv(%"class.std::__1::vector.1002"* nonnull sret %3, %"class.spvtools::opt::SENode"* %38)
  %39 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %4, align 8
  %40 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %31, align 8
  %41 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %32, align 8
  %42 = call %"class.spvtools::opt::SERecurrentNode"** @_ZNSt3__16vectorIPN8spvtools3opt15SERecurrentNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1002"* %0, %"class.spvtools::opt::SERecurrentNode"** %39, %"class.spvtools::opt::SERecurrentNode"** %40, %"class.spvtools::opt::SERecurrentNode"** %41)
  %43 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %31, align 8
  %44 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %43 to i64
  store i64 %46, i64* %33, align 8
  %47 = bitcast %"class.spvtools::opt::SERecurrentNode"** %43 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %36, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  %49 = getelementptr inbounds %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %37, i64 1
  %50 = icmp eq %"class.spvtools::opt::SENode"** %49, %27
  br i1 %50, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13StrongSIVTestEPNS0_6SENodeES3_S3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::DistanceEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector.1010", align 8
  %8 = alloca %"class.std::__1::vector.1010", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"struct.std::__1::pair.983", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = tail call i8* @_Znwm(i64 32) #11
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %32, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i64 0, i64 0), i64 25, i1 false) #10
  %33 = getelementptr inbounds i8, i8* %29, i64 25
  store i8 0, i8* %33, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %6) #10
  %34 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %5
  %39 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %5, %38
  %41 = bitcast %"class.std::__1::vector.1010"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %7, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %7, i64 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::vector.1010"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt6SENode24CollectValueUnknownNodesEv(%"class.std::__1::vector.1010"* nonnull sret %7, %"class.spvtools::opt::SENode"* %1)
  %45 = bitcast %"class.std::__1::vector.1010"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %8, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %8, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::vector.1010"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt6SENode24CollectValueUnknownNodesEv(%"class.std::__1::vector.1010"* nonnull sret %8, %"class.spvtools::opt::SENode"* %2)
  %49 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %43 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.1010"* %7 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %40
  %55 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.1010"* %8 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %56, %58
  br i1 %59, label %74, label %60

60:                                               ; preds = %54, %40
  %61 = call i8* @_Znwm(i64 80) #11
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast i64* %63 to <2 x i64>*
  store <2 x i64> <i64 66, i64 -9223372036854775728>, <2 x i64>* %64, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 getelementptr inbounds ([67 x i8], [67 x i8]* @.str.24, i64 0, i64 0), i64 66, i1 false) #10
  %65 = getelementptr inbounds i8, i8* %61, i64 66
  store i8 0, i8* %65, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %9) #10
  %66 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %60
  %71 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %60, %70
  %73 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis21SymbolicStrongSIVTestEPNS0_6SENodeES3_S3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::SENode"* %1, %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::SENode"* %3, %"class.spvtools::opt::DistanceEntry"* %4)
  br label %393

74:                                               ; preds = %54
  %75 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %76 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %76, i64 6
  %78 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %77, align 8
  %79 = call %"class.spvtools::opt::SERecurrentNode"* %78(%"class.spvtools::opt::SENode"* %1) #10
  %80 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %79, null
  br i1 %80, label %88, label %81

81:                                               ; preds = %74
  %82 = bitcast %"class.spvtools::opt::SENode"* %2 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %83 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %82, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %83, i64 6
  %85 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %84, align 8
  %86 = call %"class.spvtools::opt::SERecurrentNode"* %85(%"class.spvtools::opt::SENode"* %2) #10
  %87 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %86, null
  br i1 %87, label %88, label %102

88:                                               ; preds = %81, %74
  %89 = call i8* @_Znwm(i64 96) #11
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> <i64 89, i64 -9223372036854775712>, <2 x i64>* %92, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %89, i8* align 1 getelementptr inbounds ([90 x i8], [90 x i8]* @.str.25, i64 0, i64 0), i64 89, i1 false) #10
  %93 = getelementptr inbounds i8, i8* %89, i64 89
  store i8 0, i8* %93, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %10) #10
  %94 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %88
  %99 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %99) #11
  br label %100

100:                                              ; preds = %88, %98
  %101 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 7, i32* %101, align 4
  br label %393

102:                                              ; preds = %81
  %103 = bitcast %"struct.std::__1::pair.983"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #10
  %104 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %11, i64 0, i32 0
  %105 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %11, i64 0, i32 1
  store %"class.spvtools::opt::SENode"* %1, %"class.spvtools::opt::SENode"** %104, align 8
  store %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::SENode"** %105, align 8
  %106 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetLoopForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %11) #10
  %107 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %75, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %107, i64 6
  %109 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %108, align 8
  %110 = call %"class.spvtools::opt::SERecurrentNode"* %109(%"class.spvtools::opt::SENode"* %1) #10
  %111 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %106, %"class.spvtools::opt::SERecurrentNode"* %110) #10
  %112 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %82, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %112, i64 6
  %114 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %113, align 8
  %115 = call %"class.spvtools::opt::SERecurrentNode"* %114(%"class.spvtools::opt::SENode"* %2) #10
  %116 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %106, %"class.spvtools::opt::SERecurrentNode"* %115) #10
  %117 = icmp ne %"class.spvtools::opt::SENode"* %111, null
  %118 = icmp ne %"class.spvtools::opt::SENode"* %116, null
  %119 = and i1 %117, %118
  br i1 %119, label %132, label %120

120:                                              ; preds = %102
  %121 = call i8* @_Znwm(i64 112) #11
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %121, i8** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast i64* %123 to <2 x i64>*
  store <2 x i64> <i64 96, i64 -9223372036854775696>, <2 x i64>* %124, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %121, i8* align 1 getelementptr inbounds ([97 x i8], [97 x i8]* @.str.26, i64 0, i64 0), i64 96, i1 false) #10
  %125 = getelementptr inbounds i8, i8* %121, i64 96
  store i8 0, i8* %125, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %12) #10
  %126 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %391

130:                                              ; preds = %120
  %131 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %131) #11
  br label %391

132:                                              ; preds = %102
  %133 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %134 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %133, %"class.spvtools::opt::SENode"* nonnull %116, %"class.spvtools::opt::SENode"* nonnull %111) #10
  %135 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %133, %"class.spvtools::opt::SENode"* %134) #10
  %136 = bitcast %"class.spvtools::opt::SENode"* %135 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %137 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %136, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %137, i64 4
  %139 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %138, align 8
  %140 = call %"class.spvtools::opt::SEConstantNode"* %139(%"class.spvtools::opt::SENode"* %135) #10
  %141 = bitcast %"class.spvtools::opt::SENode"* %3 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %142 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %141, align 8
  %143 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %142, i64 4
  %144 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %143, align 8
  %145 = call %"class.spvtools::opt::SEConstantNode"* %144(%"class.spvtools::opt::SENode"* %3) #10
  %146 = icmp ne %"class.spvtools::opt::SEConstantNode"* %140, null
  %147 = icmp ne %"class.spvtools::opt::SEConstantNode"* %145, null
  %148 = and i1 %146, %147
  br i1 %148, label %149, label %262

149:                                              ; preds = %132
  %150 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %140, i64 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %145, i64 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #10
  %155 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #10
  %156 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #10
  %157 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %17, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %151)
  %158 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %17, i64 0, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.27, i64 0, i64 0)) #10, !noalias !131
  %159 = bitcast %"class.std::__1::basic_string"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %156, i8* align 8 %159, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #10, !noalias !131
  %160 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i64 0, i64 0)) #10, !noalias !134
  %161 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 8 %161, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #10, !noalias !134
  %162 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %18, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %153)
  %163 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1, !noalias !137
  %166 = icmp slt i8 %165, 0
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8, !noalias !137
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8, !noalias !137
  %171 = zext i8 %165 to i64
  %172 = select i1 %166, i8* %168, i8* %162
  %173 = select i1 %166, i64 %170, i64 %171
  %174 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %172, i64 %173) #10, !noalias !137
  %175 = bitcast %"class.std::__1::basic_string"* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %154, i8* align 8 %175, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 24, i1 false) #10, !noalias !137
  %176 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #10, !noalias !140
  %177 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %178 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %177, i8* align 8 %178, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #10, !noalias !140
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %13) #10
  %179 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %149
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %185) #11
  br label %186

186:                                              ; preds = %149, %183
  %187 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  call void @_ZdlPv(i8* %193) #11
  br label %194

194:                                              ; preds = %186, %191
  %195 = load i8, i8* %164, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %194
  %198 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %198) #11
  br label %199

199:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #10
  %200 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %206) #11
  br label %207

207:                                              ; preds = %199, %204
  %208 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8
  call void @_ZdlPv(i8* %214) #11
  br label %215

215:                                              ; preds = %207, %212
  %216 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %222) #11
  br label %223

223:                                              ; preds = %215, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #10
  %224 = srem i64 %151, %153
  %225 = sdiv i64 %151, %153
  %226 = icmp eq i64 %224, 0
  br i1 %226, label %239, label %227

227:                                              ; preds = %223
  %228 = call i8* @_Znwm(i64 80) #11
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %228, i8** %229, align 8
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %231 = bitcast i64* %230 to <2 x i64>*
  store <2 x i64> <i64 72, i64 -9223372036854775728>, <2 x i64>* %231, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %228, i8* align 1 getelementptr inbounds ([73 x i8], [73 x i8]* @.str.30, i64 0, i64 0), i64 72, i1 false) #10
  %232 = getelementptr inbounds i8, i8* %228, i64 72
  store i8 0, i8* %232, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %19) #10
  %233 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %233, i64 0, i32 1, i32 0
  %235 = load i8, i8* %234, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %259

237:                                              ; preds = %227
  %238 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %238) #11
  br label %259

239:                                              ; preds = %223
  %240 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %21, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %225)
  %241 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %21, i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i64 0, i64 0)) #10, !noalias !143
  %242 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %243 = bitcast %"class.std::__1::basic_string"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %242, i8* align 8 %243, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #10, !noalias !143
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %20) #10
  %244 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %245 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %244, i64 0, i32 1, i32 0
  %246 = load i8, i8* %245, align 1
  %247 = icmp slt i8 %246, 0
  br i1 %247, label %248, label %251

248:                                              ; preds = %239
  %249 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  call void @_ZdlPv(i8* %250) #11
  br label %251

251:                                              ; preds = %239, %248
  %252 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %276

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  call void @_ZdlPv(i8* %258) #11
  br label %276

259:                                              ; preds = %237, %227
  %260 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 1, i32* %260, align 8
  %261 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 0, i32* %261, align 4
  br label %391

262:                                              ; preds = %132
  %263 = call i8* @_Znwm(i64 64) #11
  %264 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %263, i8** %264, align 8
  %265 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %266 = bitcast i64* %265 to <2 x i64>*
  store <2 x i64> <i64 54, i64 -9223372036854775744>, <2 x i64>* %266, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %263, i8* align 1 getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0), i64 54, i1 false) #10
  %267 = getelementptr inbounds i8, i8* %263, i64 54
  store i8 0, i8* %267, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %22) #10
  %268 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %269 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %268, i64 0, i32 1, i32 0
  %270 = load i8, i8* %269, align 1
  %271 = icmp slt i8 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %262
  %273 = load i8*, i8** %264, align 8
  call void @_ZdlPv(i8* %273) #11
  br label %274

274:                                              ; preds = %262, %272
  %275 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 7, i64* %275, align 8
  br label %391

276:                                              ; preds = %256, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #10
  %277 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetLowerBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %106) #10
  %278 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetUpperBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %106) #10
  %279 = icmp ne %"class.spvtools::opt::SENode"* %277, null
  %280 = icmp ne %"class.spvtools::opt::SENode"* %278, null
  %281 = and i1 %279, %280
  br i1 %281, label %282, label %353

282:                                              ; preds = %276
  %283 = call i8* @_Znwm(i64 32) #11
  %284 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %283, i8** %284, align 8
  %285 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %286 = bitcast i64* %285 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %286, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %283, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i64 27, i1 false) #10
  %287 = getelementptr inbounds i8, i8* %283, i64 27
  store i8 0, i8* %287, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %23) #10
  %288 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %289 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %288, i64 0, i32 1, i32 0
  %290 = load i8, i8* %289, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %282
  %293 = load i8*, i8** %284, align 8
  call void @_ZdlPv(i8* %293) #11
  br label %294

294:                                              ; preds = %282, %292
  %295 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %133, %"class.spvtools::opt::SENode"* nonnull %278, %"class.spvtools::opt::SENode"* nonnull %277) #10
  %296 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %133, %"class.spvtools::opt::SENode"* %295) #10
  %297 = bitcast %"class.spvtools::opt::SENode"* %296 to i32 (%"class.spvtools::opt::SENode"*)***
  %298 = load i32 (%"class.spvtools::opt::SENode"*)**, i32 (%"class.spvtools::opt::SENode"*)*** %297, align 8
  %299 = load i32 (%"class.spvtools::opt::SENode"*)*, i32 (%"class.spvtools::opt::SENode"*)** %298, align 8
  %300 = call i32 %299(%"class.spvtools::opt::SENode"* %296) #10
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %365

302:                                              ; preds = %294
  %303 = bitcast %"class.spvtools::opt::SENode"* %296 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %304 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %303, align 8
  %305 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %304, i64 4
  %306 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %305, align 8
  %307 = call %"class.spvtools::opt::SEConstantNode"* %306(%"class.spvtools::opt::SENode"* %296) #10
  %308 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %307, i64 0, i32 1
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %310) #10
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* nonnull sret %25, %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 %309)
  %311 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %25, i64 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.34, i64 0, i64 0)) #10, !noalias !146
  %312 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %313 = bitcast %"class.std::__1::basic_string"* %311 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %312, i8* align 8 %313, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %313, i8 0, i64 24, i1 false) #10, !noalias !146
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %24) #10
  %314 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %315 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %314, i64 0, i32 1, i32 0
  %316 = load i8, i8* %315, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %302
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %320) #11
  br label %321

321:                                              ; preds = %302, %318
  %322 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %323 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %322, i64 0, i32 1, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = icmp slt i8 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  call void @_ZdlPv(i8* %328) #11
  br label %329

329:                                              ; preds = %321, %326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %310) #10
  %330 = icmp slt i64 %225, 0
  %331 = sub nsw i64 0, %225
  %332 = select i1 %330, i64 %331, i64 %225
  %333 = icmp slt i64 %309, 0
  %334 = sub nsw i64 0, %309
  %335 = select i1 %333, i64 %334, i64 %309
  %336 = icmp sgt i64 %332, %335
  br i1 %336, label %337, label %365

337:                                              ; preds = %329
  %338 = call i8* @_Znwm(i64 80) #11
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %338, i8** %339, align 8
  %340 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %341 = bitcast i64* %340 to <2 x i64>*
  store <2 x i64> <i64 76, i64 -9223372036854775728>, <2 x i64>* %341, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %338, i8* align 1 getelementptr inbounds ([77 x i8], [77 x i8]* @.str.35, i64 0, i64 0), i64 76, i1 false) #10
  %342 = getelementptr inbounds i8, i8* %338, i64 76
  store i8 0, i8* %342, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %26) #10
  %343 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %344 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %343, i64 0, i32 1, i32 0
  %345 = load i8, i8* %344, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %349

347:                                              ; preds = %337
  %348 = load i8*, i8** %339, align 8
  call void @_ZdlPv(i8* %348) #11
  br label %349

349:                                              ; preds = %337, %347
  %350 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 2, i32* %350, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 0, i32* %351, align 4
  %352 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 %225, i64* %352, align 8
  br label %391

353:                                              ; preds = %276
  %354 = call i8* @_Znwm(i64 64) #11
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %354, i8** %355, align 8
  %356 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %357 = bitcast i64* %356 to <2 x i64>*
  store <2 x i64> <i64 58, i64 -9223372036854775744>, <2 x i64>* %357, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %354, i8* align 1 getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i64 58, i1 false) #10
  %358 = getelementptr inbounds i8, i8* %354, i64 58
  store i8 0, i8* %358, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %27) #10
  %359 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %360 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %359, i64 0, i32 1, i32 0
  %361 = load i8, i8* %360, align 1
  %362 = icmp slt i8 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %353
  %364 = load i8*, i8** %355, align 8
  call void @_ZdlPv(i8* %364) #11
  br label %365

365:                                              ; preds = %329, %294, %363, %353
  %366 = call i8* @_Znwm(i64 80) #11
  %367 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %366, i8** %367, align 8
  %368 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %369 = bitcast i64* %368 to <2 x i64>*
  store <2 x i64> <i64 76, i64 -9223372036854775728>, <2 x i64>* %369, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %366, i8* align 1 getelementptr inbounds ([77 x i8], [77 x i8]* @.str.37, i64 0, i64 0), i64 76, i1 false) #10
  %370 = getelementptr inbounds i8, i8* %366, i64 76
  store i8 0, i8* %370, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %28) #10
  %371 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  %373 = load i8, i8* %372, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %377

375:                                              ; preds = %365
  %376 = load i8*, i8** %367, align 8
  call void @_ZdlPv(i8* %376) #11
  br label %377

377:                                              ; preds = %365, %375
  %378 = icmp sgt i64 %225, 0
  br i1 %378, label %379, label %383

379:                                              ; preds = %377
  %380 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 2, i32* %380, align 8
  %381 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 1, i32* %381, align 4
  %382 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 %225, i64* %382, align 8
  br label %391

383:                                              ; preds = %377
  %384 = icmp eq i64 %225, 0
  %385 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 2, i32* %385, align 8
  %386 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  br i1 %384, label %387, label %389

387:                                              ; preds = %383
  store i32 2, i32* %386, align 4
  %388 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 0, i64* %388, align 8
  br label %391

389:                                              ; preds = %383
  store i32 4, i32* %386, align 4
  %390 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 %225, i64* %390, align 8
  br label %391

391:                                              ; preds = %349, %259, %130, %120, %274, %389, %387, %379
  %392 = phi i1 [ true, %259 ], [ false, %274 ], [ false, %379 ], [ false, %387 ], [ false, %389 ], [ true, %349 ], [ false, %120 ], [ false, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #10
  br label %393

393:                                              ; preds = %391, %100, %72
  %394 = phi i1 [ %73, %72 ], [ %392, %391 ], [ false, %100 ]
  %395 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %46, align 8
  %396 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %395, null
  br i1 %396, label %401, label %397

397:                                              ; preds = %393
  %398 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %395 to i64
  %399 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %47 to i64*
  store i64 %398, i64* %399, align 8
  %400 = bitcast %"class.spvtools::opt::SEValueUnknown"** %395 to i8*
  call void @_ZdlPv(i8* %400) #11
  br label %401

401:                                              ; preds = %393, %397
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #10
  %402 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %42, align 8
  %403 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %402, null
  br i1 %403, label %407, label %404

404:                                              ; preds = %401
  %405 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %402 to i64
  store i64 %405, i64* %49, align 8
  %406 = bitcast %"class.spvtools::opt::SEValueUnknown"** %402 to i8*
  call void @_ZdlPv(i8* %406) #11
  br label %407

407:                                              ; preds = %401, %404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #10
  ret i1 %394
}

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis19WeakCrossingSIVTestEPNS0_6SENodeES3_S3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::DistanceEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = tail call i8* @_Znwm(i64 32) #11
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i64 0, i64 0), i64 31, i1 false) #10
  %17 = getelementptr inbounds i8, i8* %13, i64 31
  store i8 0, i8* %17, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %6) #10
  %18 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %5
  %23 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %5, %22
  %25 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %26 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %26, i64 6
  %28 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %27, align 8
  %29 = call %"class.spvtools::opt::SERecurrentNode"* %28(%"class.spvtools::opt::SENode"* %1) #10
  %30 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.spvtools::opt::SENode"* %2 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %33 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %33, i64 6
  %35 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %34, align 8
  %36 = call %"class.spvtools::opt::SERecurrentNode"* %35(%"class.spvtools::opt::SENode"* %2) #10
  %37 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %36, null
  br i1 %37, label %38, label %52

38:                                               ; preds = %31, %24
  %39 = call i8* @_Znwm(i64 80) #11
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 75, i64 -9223372036854775728>, <2 x i64>* %42, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([76 x i8], [76 x i8]* @.str.82, i64 0, i64 0), i64 75, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %39, i64 75
  store i8 0, i8* %43, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %7) #10
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %38
  %49 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %38, %48
  %51 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 7, i32* %51, align 4
  br label %166

52:                                               ; preds = %31
  %53 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %54 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %32, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %54, i64 6
  %56 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %55, align 8
  %57 = call %"class.spvtools::opt::SERecurrentNode"* %56(%"class.spvtools::opt::SENode"* %2) #10
  %58 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %57, i64 0, i32 2
  %59 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %58, align 8
  %60 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %25, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %60, i64 6
  %62 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %61, align 8
  %63 = call %"class.spvtools::opt::SERecurrentNode"* %62(%"class.spvtools::opt::SENode"* %1) #10
  %64 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %63, i64 0, i32 2
  %65 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %64, align 8
  %66 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %53, %"class.spvtools::opt::SENode"* %59, %"class.spvtools::opt::SENode"* %65) #10
  %67 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %53, %"class.spvtools::opt::SENode"* %66) #10
  %68 = bitcast %"class.spvtools::opt::SENode"* %67 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %69 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %69, i64 4
  %71 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %70, align 8
  %72 = call %"class.spvtools::opt::SEConstantNode"* %71(%"class.spvtools::opt::SENode"* %67) #10
  %73 = bitcast %"class.spvtools::opt::SENode"* %3 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %74 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %74, i64 4
  %76 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %75, align 8
  %77 = call %"class.spvtools::opt::SEConstantNode"* %76(%"class.spvtools::opt::SENode"* %3) #10
  %78 = icmp ne %"class.spvtools::opt::SEConstantNode"* %72, null
  %79 = icmp ne %"class.spvtools::opt::SEConstantNode"* %77, null
  %80 = and i1 %78, %79
  br i1 %80, label %81, label %140

81:                                               ; preds = %52
  %82 = call i8* @_Znwm(i64 80) #11
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %82, i8** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> <i64 70, i64 -9223372036854775728>, <2 x i64>* %85, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %82, i8* align 1 getelementptr inbounds ([71 x i8], [71 x i8]* @.str.83, i64 0, i64 0), i64 70, i1 false) #10
  %86 = getelementptr inbounds i8, i8* %82, i64 70
  store i8 0, i8* %86, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %8) #10
  %87 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %81, %91
  %94 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %72, i64 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %77, i64 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = shl nsw i64 %97, 1
  %99 = srem i64 %95, %98
  %100 = sdiv i64 %95, %98
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %122, label %102

102:                                              ; preds = %93
  %103 = sitofp i64 %99 to float
  %104 = sitofp i64 %98 to float
  %105 = fdiv float %103, %104
  %106 = fcmp une float %105, 5.000000e-01
  br i1 %106, label %107, label %122

107:                                              ; preds = %102
  %108 = call i8* @_Znwm(i64 96) #11
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %108, i8** %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = bitcast i64* %110 to <2 x i64>*
  store <2 x i64> <i64 82, i64 -9223372036854775712>, <2 x i64>* %111, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %108, i8* align 1 getelementptr inbounds ([83 x i8], [83 x i8]* @.str.84, i64 0, i64 0), i64 82, i1 false) #10
  %112 = getelementptr inbounds i8, i8* %108, i64 82
  store i8 0, i8* %112, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %9) #10
  %113 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %107
  %118 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %118) #11
  br label %119

119:                                              ; preds = %107, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 1, i32* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 0, i32* %121, align 4
  br label %166

122:                                              ; preds = %93, %102
  %123 = icmp eq i64 %100, 0
  br i1 %123, label %124, label %152

124:                                              ; preds = %122
  %125 = call i8* @_Znwm(i64 48) #11
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %125, i8** %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %128, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str.85, i64 0, i64 0), i64 40, i1 false) #10
  %129 = getelementptr inbounds i8, i8* %125, i64 40
  store i8 0, i8* %129, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %10) #10
  %130 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %124
  %135 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %135) #11
  br label %136

136:                                              ; preds = %124, %134
  %137 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 2, i32* %137, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 2, i32* %138, align 4
  %139 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 2
  store i64 0, i64* %139, align 8
  br label %166

140:                                              ; preds = %52
  %141 = call i8* @_Znwm(i64 96) #11
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %141, i8** %142, align 8
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = bitcast i64* %143 to <2 x i64>*
  store <2 x i64> <i64 81, i64 -9223372036854775712>, <2 x i64>* %144, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %141, i8* align 1 getelementptr inbounds ([82 x i8], [82 x i8]* @.str.86, i64 0, i64 0), i64 81, i1 false) #10
  %145 = getelementptr inbounds i8, i8* %141, i64 81
  store i8 0, i8* %145, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %11) #10
  %146 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %140
  %151 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %150, %140, %122
  %153 = call i8* @_Znwm(i64 80) #11
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %153, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %156 = bitcast i64* %155 to <2 x i64>*
  store <2 x i64> <i64 71, i64 -9223372036854775728>, <2 x i64>* %156, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %153, i8* align 1 getelementptr inbounds ([72 x i8], [72 x i8]* @.str.87, i64 0, i64 0), i64 71, i1 false) #10
  %157 = getelementptr inbounds i8, i8* %153, i64 71
  store i8 0, i8* %157, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %12) #10
  %158 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %152
  %163 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %163) #11
  br label %164

164:                                              ; preds = %152, %162
  %165 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 7, i32* %165, align 4
  br label %166

166:                                              ; preds = %136, %119, %164, %50
  %167 = phi i1 [ false, %50 ], [ false, %164 ], [ false, %136 ], [ true, %119 ]
  ret i1 %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt6SENode24CollectValueUnknownNodesEv(%"class.std::__1::vector.1010"* noalias sret, %"class.spvtools::opt::SENode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.1010", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1010"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SEValueUnknown"* (%"class.spvtools::opt::SENode"*)***
  %7 = load %"class.spvtools::opt::SEValueUnknown"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEValueUnknown"* (%"class.spvtools::opt::SENode"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEValueUnknown"* (%"class.spvtools::opt::SENode"*)** %7, i64 14
  %9 = load %"class.spvtools::opt::SEValueUnknown"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEValueUnknown"* (%"class.spvtools::opt::SENode"*)** %8, align 8
  %10 = tail call %"class.spvtools::opt::SEValueUnknown"* %9(%"class.spvtools::opt::SENode"* %1) #10
  %11 = icmp eq %"class.spvtools::opt::SEValueUnknown"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = ptrtoint %"class.spvtools::opt::SEValueUnknown"* %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %4 to i64*
  %16 = bitcast %"class.std::__1::vector.1010"* %0 to i64*
  %17 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %14 to i64*
  %18 = tail call i8* @_Znwm(i64 8) #11
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast i8* %18 to i64*
  store i64 %13, i64* %21, align 8
  %22 = ptrtoint i8* %18 to i64
  store i64 %22, i64* %16, align 8
  store i64 %20, i64* %15, align 8
  store i64 %20, i64* %17, align 8
  br label %23

23:                                               ; preds = %12, %2
  %24 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %1, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %1, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %26, align 8
  %28 = icmp eq %"class.spvtools::opt::SENode"** %25, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::vector.1010"* %3 to i8*
  %31 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %3, i64 0, i32 0, i32 1
  %33 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %32 to i64*
  %34 = bitcast %"class.std::__1::vector.1010"* %3 to i8*
  br label %36

35:                                               ; preds = %48, %23
  ret void

36:                                               ; preds = %29, %48
  %37 = phi %"class.spvtools::opt::SENode"** [ %25, %29 ], [ %49, %48 ]
  %38 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt6SENode24CollectValueUnknownNodesEv(%"class.std::__1::vector.1010"* nonnull sret %3, %"class.spvtools::opt::SENode"* %38)
  %39 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %4, align 8
  %40 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %31, align 8
  %41 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %32, align 8
  %42 = call %"class.spvtools::opt::SEValueUnknown"** @_ZNSt3__16vectorIPN8spvtools3opt14SEValueUnknownENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1010"* %0, %"class.spvtools::opt::SEValueUnknown"** %39, %"class.spvtools::opt::SEValueUnknown"** %40, %"class.spvtools::opt::SEValueUnknown"** %41)
  %43 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %31, align 8
  %44 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %43 to i64
  store i64 %46, i64* %33, align 8
  %47 = bitcast %"class.spvtools::opt::SEValueUnknown"** %43 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %36, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  %49 = getelementptr inbounds %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %37, i64 1
  %50 = icmp eq %"class.spvtools::opt::SENode"** %49, %27
  br i1 %50, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis21SymbolicStrongSIVTestEPNS0_6SENodeES3_S3_PNS0_13DistanceEntryE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::DistanceEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.std::__1::pair.983", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = tail call i8* @_Znwm(i64 48) #11
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i64 0, i64 0), i64 33, i1 false) #10
  %14 = getelementptr inbounds i8, i8* %10, i64 33
  store i8 0, i8* %14, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %6) #10
  %15 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %5
  %20 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %5, %19
  %22 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %23 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %22, %"class.spvtools::opt::SENode"* %1, %"class.spvtools::opt::SENode"* %2) #10
  %24 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %22, %"class.spvtools::opt::SENode"* %23) #10
  %25 = bitcast %"struct.std::__1::pair.983"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %7, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %7, i64 0, i32 1
  store %"class.spvtools::opt::SENode"* %1, %"class.spvtools::opt::SENode"** %26, align 8
  store %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::SENode"** %27, align 8
  %28 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt22LoopDependenceAnalysis23GetLoopForSubscriptPairERKNSt3__14pairIPNS0_6SENodeES5_EE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"struct.std::__1::pair.983"* nonnull dereferenceable(16) %7) #10
  %29 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis29IsProvablyOutsideOfLoopBoundsEPKNS0_4LoopEPNS0_6SENodeES6_(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.spvtools::opt::Loop"* %28, %"class.spvtools::opt::SENode"* %24, %"class.spvtools::opt::SENode"* %3) #10
  br i1 %29, label %30, label %44

30:                                               ; preds = %21
  %31 = call i8* @_Znwm(i64 64) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 62, i64 -9223372036854775744>, <2 x i64>* %34, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40, i64 0, i64 0), i64 62, i1 false) #10
  %35 = getelementptr inbounds i8, i8* %31, i64 62
  store i8 0, i8* %35, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %8) #10
  %36 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %30
  %41 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %30, %40
  %43 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 0
  store i32 1, i32* %43, align 8
  br label %56

44:                                               ; preds = %21
  %45 = call i8* @_Znwm(i64 80) #11
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 73, i64 -9223372036854775728>, <2 x i64>* %48, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([74 x i8], [74 x i8]* @.str.41, i64 0, i64 0), i64 73, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %45, i64 73
  store i8 0, i8* %49, align 1
  call void @_ZN8spvtools3opt22LoopDependenceAnalysis10PrintDebugENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::LoopDependenceAnalysis"* %0, %"class.std::__1::basic_string"* nonnull %9) #10
  %50 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %54, %44, %42
  %57 = phi i32 [ 0, %42 ], [ 7, %44 ], [ 7, %54 ]
  %58 = phi i1 [ true, %42 ], [ false, %44 ], [ false, %54 ]
  %59 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %4, i64 0, i32 1
  store i32 %57, i32* %59, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  ret i1 %58
}

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis15GetConstantTermEPKNS0_4LoopEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::SERecurrentNode"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt22LoopDependenceAnalysis8ToStringIlEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEET_(%"class.std::__1::basic_string"* noalias sret, %"class.spvtools::opt::LoopDependenceAnalysis"*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_stringbuf"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 256, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = load i8*, i8** %15, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #10
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #10
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* nonnull %37, i64 %2) #10
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %10) #10
  %39 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %39, i64* %13, align 8
  %40 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %41 = inttoptr i64 %39 to i8*
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %5, i64 %44
  %46 = bitcast i8* %45 to i64*
  store i64 %40, i64* %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %3, %51
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %11) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %37, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #10
  %55 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %56 = bitcast %"class.std::__1::basic_ios.base"* %55 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %56) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #10
  ret void
}

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetLowerBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis13GetUpperBoundEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis29IsProvablyOutsideOfLoopBoundsEPKNS0_4LoopEPNS0_6SENodeES6_(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis14IsWithinBoundsElll(%"class.spvtools::opt::LoopDependenceAnalysis"*, i64, i64, i64) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis25GetFirstTripInductionNodeEPKNS0_4LoopE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt22LoopDependenceAnalysis25GetFinalTripInductionNodeEPKNS0_4LoopEPNS0_6SENodeE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_125IsInCorrectFormForGCDTestEPNS0_6SENodeE(%"class.spvtools::opt::SENode"*) unnamed_addr #0 {
  %2 = bitcast %"class.spvtools::opt::SENode"* %0 to %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)***
  %3 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %3, i64 8
  %5 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %4, align 8
  %6 = tail call %"class.spvtools::opt::SEAddNode"* %5(%"class.spvtools::opt::SENode"* %0) #10
  %7 = icmp eq %"class.spvtools::opt::SEAddNode"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::SEAddNode", %"class.spvtools::opt::SEAddNode"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::SEAddNode", %"class.spvtools::opt::SEAddNode"* %6, i64 0, i32 0, i32 1, i32 0, i32 1
  %12 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %11, align 8
  %13 = icmp eq %"class.spvtools::opt::SENode"** %10, %12
  br i1 %13, label %23, label %14

14:                                               ; preds = %8, %14
  %15 = phi i8 [ %20, %14 ], [ 1, %8 ]
  %16 = phi %"class.spvtools::opt::SENode"** [ %21, %14 ], [ %10, %8 ]
  %17 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %16, align 8
  %18 = tail call fastcc zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_125IsInCorrectFormForGCDTestEPNS0_6SENodeE(%"class.spvtools::opt::SENode"* %17)
  %19 = zext i1 %18 to i8
  %20 = and i8 %15, %19
  %21 = getelementptr inbounds %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %16, i64 1
  %22 = icmp eq %"class.spvtools::opt::SENode"** %21, %12
  br i1 %22, label %23, label %14

23:                                               ; preds = %14, %8, %1
  %24 = phi i8 [ 1, %1 ], [ 1, %8 ], [ %20, %14 ]
  %25 = bitcast %"class.spvtools::opt::SENode"* %0 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %26 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %26, i64 6
  %28 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %27, align 8
  %29 = tail call %"class.spvtools::opt::SERecurrentNode"* %28(%"class.spvtools::opt::SENode"* %0) #10
  %30 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %29, null
  br i1 %30, label %31, label %44

31:                                               ; preds = %23
  %32 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*** %2, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %32, i64 8
  %34 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %33, align 8
  %35 = tail call %"class.spvtools::opt::SEAddNode"* %34(%"class.spvtools::opt::SENode"* %0) #10
  %36 = icmp eq %"class.spvtools::opt::SEAddNode"* %35, null
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  %38 = bitcast %"class.spvtools::opt::SENode"* %0 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %39 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %39, i64 4
  %41 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %40, align 8
  %42 = tail call %"class.spvtools::opt::SEConstantNode"* %41(%"class.spvtools::opt::SENode"* %0) #10
  %43 = icmp ne %"class.spvtools::opt::SEConstantNode"* %42, null
  br label %44

44:                                               ; preds = %31, %23, %37
  %45 = phi i1 [ true, %31 ], [ true, %23 ], [ %43, %37 ]
  %46 = icmp ne i8 %24, 0
  %47 = and i1 %46, %45
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_125GetAllTopLevelRecurrencesEPNS0_6SENodeE(%"class.std::__1::vector.1002"* noalias sret, %"class.spvtools::opt::SENode"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.1002", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1002"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %7 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %7, i64 6
  %9 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %8, align 8
  %10 = tail call %"class.spvtools::opt::SERecurrentNode"* %9(%"class.spvtools::opt::SENode"* %1) #10
  %11 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = ptrtoint %"class.spvtools::opt::SERecurrentNode"* %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %4 to i64*
  %16 = bitcast %"class.std::__1::vector.1002"* %0 to i64*
  %17 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %14 to i64*
  %18 = tail call i8* @_Znwm(i64 8) #11
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast i8* %18 to i64*
  store i64 %13, i64* %21, align 8
  %22 = ptrtoint i8* %18 to i64
  store i64 %22, i64* %16, align 8
  store i64 %20, i64* %15, align 8
  store i64 %20, i64* %17, align 8
  br label %23

23:                                               ; preds = %12, %2
  %24 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)***
  %25 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %25, i64 8
  %27 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %26, align 8
  %28 = tail call %"class.spvtools::opt::SEAddNode"* %27(%"class.spvtools::opt::SENode"* %1) #10
  %29 = icmp eq %"class.spvtools::opt::SEAddNode"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.spvtools::opt::SEAddNode", %"class.spvtools::opt::SEAddNode"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::SEAddNode", %"class.spvtools::opt::SEAddNode"* %28, i64 0, i32 0, i32 1, i32 0, i32 1
  %34 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::SENode"** %32, %34
  br i1 %35, label %57, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::vector.1002"* %3 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %3, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %3, i64 0, i32 0, i32 1
  %40 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %39 to i64*
  %41 = bitcast %"class.std::__1::vector.1002"* %3 to i8*
  br label %42

42:                                               ; preds = %36, %54
  %43 = phi %"class.spvtools::opt::SENode"** [ %32, %36 ], [ %55, %54 ]
  %44 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_125GetAllTopLevelRecurrencesEPNS0_6SENodeE(%"class.std::__1::vector.1002"* nonnull sret %3, %"class.spvtools::opt::SENode"* %44)
  %45 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %4, align 8
  %46 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %38, align 8
  %47 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %39, align 8
  %48 = call %"class.spvtools::opt::SERecurrentNode"** @_ZNSt3__16vectorIPN8spvtools3opt15SERecurrentNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1002"* %0, %"class.spvtools::opt::SERecurrentNode"** %45, %"class.spvtools::opt::SERecurrentNode"** %46, %"class.spvtools::opt::SERecurrentNode"** %47)
  %49 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %38, align 8
  %50 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %42
  %52 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %49 to i64
  store i64 %52, i64* %40, align 8
  %53 = bitcast %"class.spvtools::opt::SERecurrentNode"** %49 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %42, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  %55 = getelementptr inbounds %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %43, i64 1
  %56 = icmp eq %"class.spvtools::opt::SENode"** %55, %34
  br i1 %56, label %57, label %42

57:                                               ; preds = %54, %30, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_123GetAllTopLevelConstantsEPNS0_6SENodeE(%"class.std::__1::vector.1019"* noalias sret, %"class.spvtools::opt::SENode"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.1019", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1019"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %7 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %7, i64 4
  %9 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %8, align 8
  %10 = tail call %"class.spvtools::opt::SEConstantNode"* %9(%"class.spvtools::opt::SENode"* %1) #10
  %11 = icmp eq %"class.spvtools::opt::SEConstantNode"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = ptrtoint %"class.spvtools::opt::SEConstantNode"* %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.spvtools::opt::SEConstantNode"*** %4 to i64*
  %16 = bitcast %"class.std::__1::vector.1019"* %0 to i64*
  %17 = bitcast %"class.spvtools::opt::SEConstantNode"*** %14 to i64*
  %18 = tail call i8* @_Znwm(i64 8) #11
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast i8* %18 to i64*
  store i64 %13, i64* %21, align 8
  %22 = ptrtoint i8* %18 to i64
  store i64 %22, i64* %16, align 8
  store i64 %20, i64* %15, align 8
  store i64 %20, i64* %17, align 8
  br label %23

23:                                               ; preds = %12, %2
  %24 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)***
  %25 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %25, i64 8
  %27 = load %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEAddNode"* (%"class.spvtools::opt::SENode"*)** %26, align 8
  %28 = tail call %"class.spvtools::opt::SEAddNode"* %27(%"class.spvtools::opt::SENode"* %1) #10
  %29 = icmp eq %"class.spvtools::opt::SEAddNode"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.spvtools::opt::SEAddNode", %"class.spvtools::opt::SEAddNode"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::SEAddNode", %"class.spvtools::opt::SEAddNode"* %28, i64 0, i32 0, i32 1, i32 0, i32 1
  %34 = load %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::SENode"** %32, %34
  br i1 %35, label %57, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::vector.1019"* %3 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %3, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %3, i64 0, i32 0, i32 1
  %40 = bitcast %"class.spvtools::opt::SEConstantNode"*** %39 to i64*
  %41 = bitcast %"class.std::__1::vector.1019"* %3 to i8*
  br label %42

42:                                               ; preds = %36, %54
  %43 = phi %"class.spvtools::opt::SENode"** [ %32, %36 ], [ %55, %54 ]
  %44 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_123GetAllTopLevelConstantsEPNS0_6SENodeE(%"class.std::__1::vector.1019"* nonnull sret %3, %"class.spvtools::opt::SENode"* %44)
  %45 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %4, align 8
  %46 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %38, align 8
  %47 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %39, align 8
  %48 = call %"class.spvtools::opt::SEConstantNode"** @_ZNSt3__16vectorIPN8spvtools3opt14SEConstantNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1019"* %0, %"class.spvtools::opt::SEConstantNode"** %45, %"class.spvtools::opt::SEConstantNode"** %46, %"class.spvtools::opt::SEConstantNode"** %47)
  %49 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %38, align 8
  %50 = icmp eq %"class.spvtools::opt::SEConstantNode"** %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %42
  %52 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %49 to i64
  store i64 %52, i64* %40, align 8
  %53 = bitcast %"class.spvtools::opt::SEConstantNode"** %49 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %42, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  %55 = getelementptr inbounds %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %43, i64 1
  %56 = icmp eq %"class.spvtools::opt::SENode"** %55, %34
  br i1 %56, label %57, label %42

57:                                               ; preds = %54, %30, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE6insertINS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEEEvT_SJ_(%"class.std::__1::set.971"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::set.971"* %0 to i64*
  %12 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %14

13:                                               ; preds = %156, %3
  ret void

14:                                               ; preds = %6, %156
  %15 = phi %"class.std::__1::__tree_end_node"* [ %1, %6 ], [ %157, %156 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 4
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %4
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br i1 %18, label %57, label %20

20:                                               ; preds = %14
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %20, %22
  %23 = phi %"class.std::__1::__tree_node_base"* [ %25, %22 ], [ %19, %20 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %38, label %22

27:                                               ; preds = %20, %27
  %28 = phi %"class.std::__1::__tree_end_node"* [ %32, %27 ], [ %4, %20 ]
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_end_node"**
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %29
  br i1 %35, label %27, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  br label %38

38:                                               ; preds = %22, %36
  %39 = phi %"class.std::__1::__tree_node_base"* [ %37, %36 ], [ %23, %22 ]
  %40 = ptrtoint %"class.std::__1::__tree_node_base"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 1
  %42 = bitcast %"class.std::__1::__tree_node_base"* %41 to %"class.spvtools::opt::Instruction"**
  %43 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.spvtools::opt::Instruction"**
  %45 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %44, align 8
  %46 = icmp ult %"class.spvtools::opt::Instruction"* %43, %45
  br i1 %46, label %57, label %47

47:                                               ; preds = %38
  %48 = icmp ult %"class.spvtools::opt::Instruction"* %45, %43
  br i1 %48, label %63, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 1, i32 1
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.spvtools::opt::Instruction"**
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 5
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.spvtools::opt::Instruction"**
  %55 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %54, align 8
  %56 = icmp ult %"class.spvtools::opt::Instruction"* %52, %55
  br i1 %56, label %57, label %63

57:                                               ; preds = %49, %38, %14
  %58 = phi i64 [ %40, %49 ], [ %40, %38 ], [ %7, %14 ]
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %59, label %102, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 1
  br label %102

63:                                               ; preds = %49, %47
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %64, label %102, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 5
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  br label %69

69:                                               ; preds = %95, %65
  %70 = phi %"class.std::__1::__tree_node_base"* [ %19, %65 ], [ %96, %95 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %10, %65 ], [ %97, %95 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 1
  %73 = bitcast %"class.std::__1::__tree_node_base"* %72 to %"class.spvtools::opt::Instruction"**
  %74 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %73, align 8
  %75 = icmp ult %"class.spvtools::opt::Instruction"* %45, %74
  br i1 %75, label %83, label %76

76:                                               ; preds = %69
  %77 = icmp ult %"class.spvtools::opt::Instruction"* %74, %45
  br i1 %77, label %91, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 1, i32 1
  %80 = bitcast %"class.std::__1::__tree_node_base"** %79 to %"class.spvtools::opt::Instruction"**
  %81 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, align 8
  %82 = icmp ult %"class.spvtools::opt::Instruction"* %68, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %78, %69
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, null
  br i1 %86, label %87, label %95

87:                                               ; preds = %83
  %88 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  br label %102

89:                                               ; preds = %78
  %90 = icmp ult %"class.spvtools::opt::Instruction"* %81, %68
  br i1 %90, label %91, label %100

91:                                               ; preds = %89, %76
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 0, i32 1
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %91, %83
  %96 = phi %"class.std::__1::__tree_node_base"* [ %85, %83 ], [ %93, %91 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %84, %83 ], [ %92, %91 ]
  br label %69

98:                                               ; preds = %91
  %99 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  br label %102

100:                                              ; preds = %89
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  br label %102

102:                                              ; preds = %63, %57, %60, %87, %98, %100
  %103 = phi i64 [ %58, %60 ], [ %88, %87 ], [ %99, %98 ], [ %101, %100 ], [ %7, %57 ], [ %7, %63 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %62, %60 ], [ %84, %87 ], [ %92, %98 ], [ %71, %100 ], [ %9, %57 ], [ %9, %63 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to %"class.std::__1::__tree_node"**
  %106 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node"* %106, null
  br i1 %107, label %108, label %128

108:                                              ; preds = %102
  %109 = tail call i8* @_Znwm(i64 48) #11, !noalias !149
  %110 = getelementptr inbounds i8, i8* %109, i64 32
  %111 = bitcast %"class.std::__1::__tree_end_node"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #10, !noalias !149
  %112 = bitcast i8* %109 to %"class.std::__1::__tree_node_base"*
  %113 = getelementptr inbounds i8, i8* %109, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false) #10
  %114 = bitcast i8* %113 to i64*
  store i64 %103, i64* %114, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"** %104 to i8**
  store i8* %109, i8** %115, align 8
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %108
  %121 = ptrtoint %"class.std::__1::__tree_node_base"* %118 to i64
  store i64 %121, i64* %11, align 8
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  br label %123

123:                                              ; preds = %120, %108
  %124 = phi %"class.std::__1::__tree_node_base"* [ %112, %108 ], [ %122, %120 ]
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %125, %"class.std::__1::__tree_node_base"* %124) #10
  %126 = load i64, i64* %12, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %12, align 8
  br label %128

128:                                              ; preds = %102, %123
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, null
  br i1 %131, label %132, label %140

132:                                              ; preds = %128
  %133 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %135 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_end_node"**
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %136, i64 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, %133
  br i1 %139, label %156, label %147

140:                                              ; preds = %128, %140
  %141 = phi %"class.std::__1::__tree_node_base"* [ %143, %140 ], [ %130, %128 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_node_base"* %143, null
  br i1 %144, label %145, label %140

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 0
  br label %156

147:                                              ; preds = %132, %147
  %148 = phi %"class.std::__1::__tree_end_node"** [ %151, %147 ], [ %135, %132 ]
  %149 = bitcast %"class.std::__1::__tree_end_node"** %148 to %"class.std::__1::__tree_node_base"**
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %150, i64 0, i32 2
  %152 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %152, i64 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, %150
  br i1 %155, label %156, label %147

156:                                              ; preds = %147, %132, %145
  %157 = phi %"class.std::__1::__tree_end_node"* [ %146, %145 ], [ %136, %132 ], [ %152, %147 ]
  %158 = icmp eq %"class.std::__1::__tree_end_node"* %157, %2
  br i1 %158, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Constraint"* @_ZN8spvtools3opt22LoopDependenceAnalysis20IntersectConstraintsEPNS0_10ConstraintES3_PKNS0_6SENodeES6_(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #0 align 2 {
  %6 = bitcast %"class.spvtools::opt::Constraint"* %1 to %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)***
  %7 = load %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)** %7, i64 9
  %9 = load %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)** %8, align 8
  %10 = tail call %"class.spvtools::opt::DependenceNone"* %9(%"class.spvtools::opt::Constraint"* %1) #10
  %11 = icmp eq %"class.spvtools::opt::DependenceNone"* %10, null
  br i1 %11, label %12, label %813

12:                                               ; preds = %5
  %13 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)***
  %14 = load %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)** %14, i64 9
  %16 = load %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceNone"* (%"class.spvtools::opt::Constraint"*)** %15, align 8
  %17 = tail call %"class.spvtools::opt::DependenceNone"* %16(%"class.spvtools::opt::Constraint"* %2) #10
  %18 = icmp eq %"class.spvtools::opt::DependenceNone"* %17, null
  br i1 %18, label %19, label %813

19:                                               ; preds = %12
  %20 = bitcast %"class.spvtools::opt::Constraint"* %1 to %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)***
  %21 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %21, i64 5
  %23 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %22, align 8
  %24 = tail call %"class.spvtools::opt::DependenceDistance"* %23(%"class.spvtools::opt::Constraint"* %1) #10
  %25 = icmp eq %"class.spvtools::opt::DependenceDistance"* %24, null
  br i1 %25, label %71, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)***
  %28 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %28, i64 5
  %30 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %29, align 8
  %31 = tail call %"class.spvtools::opt::DependenceDistance"* %30(%"class.spvtools::opt::Constraint"* %2) #10
  %32 = icmp eq %"class.spvtools::opt::DependenceDistance"* %31, null
  br i1 %32, label %71, label %33

33:                                               ; preds = %26
  %34 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %20, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %34, i64 5
  %36 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %35, align 8
  %37 = tail call %"class.spvtools::opt::DependenceDistance"* %36(%"class.spvtools::opt::Constraint"* %1) #10
  %38 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %27, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %38, i64 5
  %40 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %39, align 8
  %41 = tail call %"class.spvtools::opt::DependenceDistance"* %40(%"class.spvtools::opt::Constraint"* %2) #10
  %42 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance", %"class.spvtools::opt::DependenceDistance"* %37, i64 0, i32 1
  %43 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance", %"class.spvtools::opt::DependenceDistance"* %41, i64 0, i32 1
  %45 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %44, align 8
  %46 = tail call zeroext i1 @_ZNK8spvtools3opt6SENodeeqERKS1_(%"class.spvtools::opt::SENode"* %43, %"class.spvtools::opt::SENode"* dereferenceable(48) %45) #10
  br i1 %46, label %813, label %47

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %49 = tail call i8* @_Znwm(i64 16) #11
  %50 = bitcast i8* %49 to i32 (...)***
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  %52 = bitcast i8* %51 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt15DependenceEmptyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %53 = ptrtoint i8* %49 to i64
  %54 = tail call i8* @_Znwm(i64 24) #11, !noalias !152
  %55 = bitcast i8* %54 to %"struct.std::__1::__list_node_base"**
  %56 = getelementptr inbounds i8, i8* %54, i64 16
  %57 = bitcast i8* %56 to i64*
  store i64 %53, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %48, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds i8, i8* %54, i64 8
  %60 = bitcast i8* %59 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %58, %"struct.std::__1::__list_node_base"** %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %48, i64 0, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %61, align 8
  store %"struct.std::__1::__list_node_base"* %62, %"struct.std::__1::__list_node_base"** %55, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %64 = bitcast %"struct.std::__1::__list_node_base"** %63 to i8**
  store i8* %54, i8** %64, align 8
  %65 = bitcast %"class.std::__1::list"* %48 to i8**
  store i8* %54, i8** %65, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = bitcast i8* %56 to %"class.spvtools::opt::Constraint"**
  %70 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %69, align 8
  br label %813

71:                                               ; preds = %26, %19
  %72 = bitcast %"class.spvtools::opt::Constraint"* %1 to %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)***
  %73 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %73, i64 7
  %75 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %74, align 8
  %76 = tail call %"class.spvtools::opt::DependencePoint"* %75(%"class.spvtools::opt::Constraint"* %1) #10
  %77 = icmp eq %"class.spvtools::opt::DependencePoint"* %76, null
  br i1 %77, label %129, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)***
  %80 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %79, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %80, i64 7
  %82 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %81, align 8
  %83 = tail call %"class.spvtools::opt::DependencePoint"* %82(%"class.spvtools::opt::Constraint"* %2) #10
  %84 = icmp eq %"class.spvtools::opt::DependencePoint"* %83, null
  br i1 %84, label %129, label %85

85:                                               ; preds = %78
  %86 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %72, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %86, i64 7
  %88 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %87, align 8
  %89 = tail call %"class.spvtools::opt::DependencePoint"* %88(%"class.spvtools::opt::Constraint"* %1) #10
  %90 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %79, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %90, i64 7
  %92 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %91, align 8
  %93 = tail call %"class.spvtools::opt::DependencePoint"* %92(%"class.spvtools::opt::Constraint"* %2) #10
  %94 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %89, i64 0, i32 1
  %95 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %93, i64 0, i32 1
  %97 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %96, align 8
  %98 = tail call zeroext i1 @_ZNK8spvtools3opt6SENodeeqERKS1_(%"class.spvtools::opt::SENode"* %95, %"class.spvtools::opt::SENode"* dereferenceable(48) %97) #10
  br i1 %98, label %99, label %105

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %89, i64 0, i32 2
  %101 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %100, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %93, i64 0, i32 2
  %103 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %102, align 8
  %104 = tail call zeroext i1 @_ZNK8spvtools3opt6SENodeeqERKS1_(%"class.spvtools::opt::SENode"* %101, %"class.spvtools::opt::SENode"* dereferenceable(48) %103) #10
  br i1 %104, label %813, label %105

105:                                              ; preds = %99, %85
  %106 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %107 = tail call i8* @_Znwm(i64 16) #11
  %108 = bitcast i8* %107 to i32 (...)***
  %109 = getelementptr inbounds i8, i8* %107, i64 8
  %110 = bitcast i8* %109 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %110, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt15DependenceEmptyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %111 = ptrtoint i8* %107 to i64
  %112 = tail call i8* @_Znwm(i64 24) #11, !noalias !155
  %113 = bitcast i8* %112 to %"struct.std::__1::__list_node_base"**
  %114 = getelementptr inbounds i8, i8* %112, i64 16
  %115 = bitcast i8* %114 to i64*
  store i64 %111, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %106, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds i8, i8* %112, i64 8
  %118 = bitcast i8* %117 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %116, %"struct.std::__1::__list_node_base"** %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %106, i64 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %119, align 8
  store %"struct.std::__1::__list_node_base"* %120, %"struct.std::__1::__list_node_base"** %113, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %120, i64 0, i32 1
  %122 = bitcast %"struct.std::__1::__list_node_base"** %121 to i8**
  store i8* %112, i8** %122, align 8
  %123 = bitcast %"class.std::__1::list"* %106 to i8**
  store i8* %112, i8** %123, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 1
  store i64 %126, i64* %124, align 8
  %127 = bitcast i8* %114 to %"class.spvtools::opt::Constraint"**
  %128 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %127, align 8
  br label %813

129:                                              ; preds = %78, %71
  %130 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %20, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %130, i64 5
  %132 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %131, align 8
  %133 = tail call %"class.spvtools::opt::DependenceDistance"* %132(%"class.spvtools::opt::Constraint"* %1) #10
  %134 = icmp eq %"class.spvtools::opt::DependenceDistance"* %133, null
  br i1 %134, label %135, label %142

135:                                              ; preds = %129
  %136 = bitcast %"class.spvtools::opt::Constraint"* %1 to %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)***
  %137 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %136, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %137, i64 3
  %139 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %138, align 8
  %140 = tail call %"class.spvtools::opt::DependenceLine"* %139(%"class.spvtools::opt::Constraint"* %1) #10
  %141 = icmp eq %"class.spvtools::opt::DependenceLine"* %140, null
  br i1 %141, label %588, label %142

142:                                              ; preds = %135, %129
  %143 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)***
  %144 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %143, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %144, i64 5
  %146 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %145, align 8
  %147 = tail call %"class.spvtools::opt::DependenceDistance"* %146(%"class.spvtools::opt::Constraint"* %2) #10
  %148 = icmp eq %"class.spvtools::opt::DependenceDistance"* %147, null
  br i1 %148, label %149, label %156

149:                                              ; preds = %142
  %150 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)***
  %151 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %151, i64 3
  %153 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %152, align 8
  %154 = tail call %"class.spvtools::opt::DependenceLine"* %153(%"class.spvtools::opt::Constraint"* %2) #10
  %155 = icmp eq %"class.spvtools::opt::DependenceLine"* %154, null
  br i1 %155, label %588, label %156

156:                                              ; preds = %149, %142
  %157 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %20, align 8
  %158 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %157, i64 5
  %159 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %158, align 8
  %160 = tail call %"class.spvtools::opt::DependenceDistance"* %159(%"class.spvtools::opt::Constraint"* %1) #10
  %161 = icmp eq %"class.spvtools::opt::DependenceDistance"* %160, null
  %162 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %143, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %162, i64 5
  %164 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %163, align 8
  %165 = tail call %"class.spvtools::opt::DependenceDistance"* %164(%"class.spvtools::opt::Constraint"* %2) #10
  %166 = icmp eq %"class.spvtools::opt::DependenceDistance"* %165, null
  br i1 %161, label %179, label %167

167:                                              ; preds = %156
  %168 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %169 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %168, i64 1) #10
  %170 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %168, i64 -1) #10
  %171 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %20, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %171, i64 5
  %173 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %172, align 8
  %174 = tail call %"class.spvtools::opt::DependenceDistance"* %173(%"class.spvtools::opt::Constraint"* %1) #10
  %175 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance", %"class.spvtools::opt::DependenceDistance"* %174, i64 0, i32 1
  %176 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %175, align 8
  %177 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %168, %"class.spvtools::opt::SENode"* %176) #10
  %178 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %168, %"class.spvtools::opt::SENode"* %177) #10
  br label %199

179:                                              ; preds = %156
  %180 = bitcast %"class.spvtools::opt::Constraint"* %1 to %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)***
  %181 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %180, align 8
  %182 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %181, i64 3
  %183 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %182, align 8
  %184 = tail call %"class.spvtools::opt::DependenceLine"* %183(%"class.spvtools::opt::Constraint"* %1) #10
  %185 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %184, i64 0, i32 1
  %186 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %185, align 8
  %187 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %180, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %187, i64 3
  %189 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %188, align 8
  %190 = tail call %"class.spvtools::opt::DependenceLine"* %189(%"class.spvtools::opt::Constraint"* %1) #10
  %191 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %190, i64 0, i32 2
  %192 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %191, align 8
  %193 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %180, align 8
  %194 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %193, i64 3
  %195 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %194, align 8
  %196 = tail call %"class.spvtools::opt::DependenceLine"* %195(%"class.spvtools::opt::Constraint"* %1) #10
  %197 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %196, i64 0, i32 3
  %198 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %197, align 8
  br label %199

199:                                              ; preds = %179, %167
  %200 = phi %"class.spvtools::opt::SENode"* [ %170, %167 ], [ %192, %179 ]
  %201 = phi %"class.spvtools::opt::SENode"* [ %169, %167 ], [ %186, %179 ]
  %202 = phi %"class.spvtools::opt::SENode"* [ %178, %167 ], [ %198, %179 ]
  br i1 %166, label %215, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %205 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %204, i64 1) #10
  %206 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %204, i64 -1) #10
  %207 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %143, align 8
  %208 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %207, i64 5
  %209 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %208, align 8
  %210 = tail call %"class.spvtools::opt::DependenceDistance"* %209(%"class.spvtools::opt::Constraint"* %2) #10
  %211 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance", %"class.spvtools::opt::DependenceDistance"* %210, i64 0, i32 1
  %212 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %211, align 8
  %213 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %204, %"class.spvtools::opt::SENode"* %212) #10
  %214 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %204, %"class.spvtools::opt::SENode"* %213) #10
  br label %235

215:                                              ; preds = %199
  %216 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)***
  %217 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %216, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %217, i64 3
  %219 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %218, align 8
  %220 = tail call %"class.spvtools::opt::DependenceLine"* %219(%"class.spvtools::opt::Constraint"* %2) #10
  %221 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %220, i64 0, i32 1
  %222 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %221, align 8
  %223 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %216, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %223, i64 3
  %225 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %224, align 8
  %226 = tail call %"class.spvtools::opt::DependenceLine"* %225(%"class.spvtools::opt::Constraint"* %2) #10
  %227 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %226, i64 0, i32 2
  %228 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %227, align 8
  %229 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %216, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %229, i64 3
  %231 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %230, align 8
  %232 = tail call %"class.spvtools::opt::DependenceLine"* %231(%"class.spvtools::opt::Constraint"* %2) #10
  %233 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %232, i64 0, i32 3
  %234 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %233, align 8
  br label %235

235:                                              ; preds = %215, %203
  %236 = phi %"class.spvtools::opt::SENode"* [ %206, %203 ], [ %228, %215 ]
  %237 = phi %"class.spvtools::opt::SENode"* [ %205, %203 ], [ %222, %215 ]
  %238 = phi %"class.spvtools::opt::SENode"* [ %214, %203 ], [ %234, %215 ]
  %239 = bitcast %"class.spvtools::opt::SENode"* %201 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %240 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %239, align 8
  %241 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %240, i64 4
  %242 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %241, align 8
  %243 = tail call %"class.spvtools::opt::SEConstantNode"* %242(%"class.spvtools::opt::SENode"* %201) #10
  %244 = icmp eq %"class.spvtools::opt::SEConstantNode"* %243, null
  br i1 %244, label %564, label %245

245:                                              ; preds = %235
  %246 = bitcast %"class.spvtools::opt::SENode"* %200 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %247 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %246, align 8
  %248 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %247, i64 4
  %249 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %248, align 8
  %250 = tail call %"class.spvtools::opt::SEConstantNode"* %249(%"class.spvtools::opt::SENode"* %200) #10
  %251 = icmp eq %"class.spvtools::opt::SEConstantNode"* %250, null
  br i1 %251, label %564, label %252

252:                                              ; preds = %245
  %253 = bitcast %"class.spvtools::opt::SENode"* %202 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %254 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %253, align 8
  %255 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %254, i64 4
  %256 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %255, align 8
  %257 = tail call %"class.spvtools::opt::SEConstantNode"* %256(%"class.spvtools::opt::SENode"* %202) #10
  %258 = icmp eq %"class.spvtools::opt::SEConstantNode"* %257, null
  br i1 %258, label %564, label %259

259:                                              ; preds = %252
  %260 = bitcast %"class.spvtools::opt::SENode"* %237 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %261 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %260, align 8
  %262 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %261, i64 4
  %263 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %262, align 8
  %264 = tail call %"class.spvtools::opt::SEConstantNode"* %263(%"class.spvtools::opt::SENode"* %237) #10
  %265 = icmp eq %"class.spvtools::opt::SEConstantNode"* %264, null
  br i1 %265, label %564, label %266

266:                                              ; preds = %259
  %267 = bitcast %"class.spvtools::opt::SENode"* %236 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %268 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %267, align 8
  %269 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %268, i64 4
  %270 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %269, align 8
  %271 = tail call %"class.spvtools::opt::SEConstantNode"* %270(%"class.spvtools::opt::SENode"* %236) #10
  %272 = icmp eq %"class.spvtools::opt::SEConstantNode"* %271, null
  br i1 %272, label %564, label %273

273:                                              ; preds = %266
  %274 = bitcast %"class.spvtools::opt::SENode"* %238 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %275 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %274, align 8
  %276 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %275, i64 4
  %277 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %276, align 8
  %278 = tail call %"class.spvtools::opt::SEConstantNode"* %277(%"class.spvtools::opt::SENode"* %238) #10
  %279 = icmp eq %"class.spvtools::opt::SEConstantNode"* %278, null
  br i1 %279, label %564, label %280

280:                                              ; preds = %273
  %281 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %239, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %281, i64 4
  %283 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %282, align 8
  %284 = tail call %"class.spvtools::opt::SEConstantNode"* %283(%"class.spvtools::opt::SENode"* %201) #10
  %285 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %284, i64 0, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %246, align 8
  %288 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %287, i64 4
  %289 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %288, align 8
  %290 = tail call %"class.spvtools::opt::SEConstantNode"* %289(%"class.spvtools::opt::SENode"* %200) #10
  %291 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %290, i64 0, i32 1
  %292 = load i64, i64* %291, align 8
  %293 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %253, align 8
  %294 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %293, i64 4
  %295 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %294, align 8
  %296 = tail call %"class.spvtools::opt::SEConstantNode"* %295(%"class.spvtools::opt::SENode"* %202) #10
  %297 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %296, i64 0, i32 1
  %298 = load i64, i64* %297, align 8
  %299 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %260, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %299, i64 4
  %301 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %300, align 8
  %302 = tail call %"class.spvtools::opt::SEConstantNode"* %301(%"class.spvtools::opt::SENode"* %237) #10
  %303 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %302, i64 0, i32 1
  %304 = load i64, i64* %303, align 8
  %305 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %267, align 8
  %306 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %305, i64 4
  %307 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %306, align 8
  %308 = tail call %"class.spvtools::opt::SEConstantNode"* %307(%"class.spvtools::opt::SENode"* %236) #10
  %309 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %308, i64 0, i32 1
  %310 = load i64, i64* %309, align 8
  %311 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %274, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %311, i64 4
  %313 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %312, align 8
  %314 = tail call %"class.spvtools::opt::SEConstantNode"* %313(%"class.spvtools::opt::SENode"* %238) #10
  %315 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %314, i64 0, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = sub nsw i64 0, %286
  %318 = icmp slt i64 %286, 0
  %319 = select i1 %318, i64 %317, i64 %286
  %320 = sub nsw i64 0, %292
  %321 = icmp slt i64 %292, 0
  %322 = select i1 %321, i64 %320, i64 %292
  %323 = tail call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %319, i64 %322) #10
  %324 = sub nsw i64 0, %304
  %325 = icmp slt i64 %304, 0
  %326 = select i1 %325, i64 %324, i64 %304
  %327 = sub nsw i64 0, %310
  %328 = icmp slt i64 %310, 0
  %329 = select i1 %328, i64 %327, i64 %310
  %330 = tail call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %326, i64 %329) #10
  %331 = sdiv i64 %286, %323
  %332 = sdiv i64 %304, %330
  %333 = icmp eq i64 %331, %332
  br i1 %333, label %334, label %418

334:                                              ; preds = %280
  %335 = sdiv i64 %310, %330
  %336 = sdiv i64 %292, %323
  %337 = icmp eq i64 %336, %335
  br i1 %337, label %338, label %418

338:                                              ; preds = %334
  %339 = or i64 %310, %292
  %340 = icmp eq i64 %339, 0
  %341 = sub nsw i64 0, %298
  %342 = icmp slt i64 %298, 0
  %343 = select i1 %342, i64 %341, i64 %298
  br i1 %340, label %344, label %381

344:                                              ; preds = %338
  %345 = tail call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %343, i64 %319) #10
  %346 = sub nsw i64 0, %316
  %347 = icmp slt i64 %316, 0
  %348 = select i1 %347, i64 %346, i64 %316
  %349 = tail call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %348, i64 %326) #10
  %350 = sdiv i64 %298, %345
  %351 = sdiv i64 %316, %349
  %352 = icmp eq i64 %350, %351
  br i1 %352, label %353, label %357

353:                                              ; preds = %344
  %354 = sdiv i64 %304, %349
  %355 = sdiv i64 %286, %345
  %356 = icmp eq i64 %355, %354
  br i1 %356, label %813, label %357

357:                                              ; preds = %344, %353
  %358 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %359 = tail call i8* @_Znwm(i64 16) #11
  %360 = bitcast i8* %359 to i32 (...)***
  %361 = getelementptr inbounds i8, i8* %359, i64 8
  %362 = bitcast i8* %361 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %362, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt15DependenceEmptyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %360, align 8
  %363 = ptrtoint i8* %359 to i64
  %364 = tail call i8* @_Znwm(i64 24) #11, !noalias !158
  %365 = bitcast i8* %364 to %"struct.std::__1::__list_node_base"**
  %366 = getelementptr inbounds i8, i8* %364, i64 16
  %367 = bitcast i8* %366 to i64*
  store i64 %363, i64* %367, align 8
  %368 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %358, i64 0, i32 0, i32 0
  %369 = getelementptr inbounds i8, i8* %364, i64 8
  %370 = bitcast i8* %369 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %368, %"struct.std::__1::__list_node_base"** %370, align 8
  %371 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %358, i64 0, i32 0, i32 0, i32 0
  %372 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %371, align 8
  store %"struct.std::__1::__list_node_base"* %372, %"struct.std::__1::__list_node_base"** %365, align 8
  %373 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %372, i64 0, i32 1
  %374 = bitcast %"struct.std::__1::__list_node_base"** %373 to i8**
  store i8* %364, i8** %374, align 8
  %375 = bitcast %"class.std::__1::list"* %358 to i8**
  store i8* %364, i8** %375, align 8
  %376 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %377 = load i64, i64* %376, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %376, align 8
  %379 = bitcast i8* %366 to %"class.spvtools::opt::Constraint"**
  %380 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %379, align 8
  br label %813

381:                                              ; preds = %338
  %382 = tail call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %343, i64 %322) #10
  %383 = sub nsw i64 0, %316
  %384 = icmp slt i64 %316, 0
  %385 = select i1 %384, i64 %383, i64 %316
  %386 = tail call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %385, i64 %329) #10
  %387 = sdiv i64 %298, %382
  %388 = sdiv i64 %316, %386
  %389 = icmp eq i64 %387, %388
  br i1 %389, label %390, label %394

390:                                              ; preds = %381
  %391 = sdiv i64 %310, %386
  %392 = sdiv i64 %292, %382
  %393 = icmp eq i64 %392, %391
  br i1 %393, label %813, label %394

394:                                              ; preds = %381, %390
  %395 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %396 = tail call i8* @_Znwm(i64 16) #11
  %397 = bitcast i8* %396 to i32 (...)***
  %398 = getelementptr inbounds i8, i8* %396, i64 8
  %399 = bitcast i8* %398 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %399, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt15DependenceEmptyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %397, align 8
  %400 = ptrtoint i8* %396 to i64
  %401 = tail call i8* @_Znwm(i64 24) #11, !noalias !161
  %402 = bitcast i8* %401 to %"struct.std::__1::__list_node_base"**
  %403 = getelementptr inbounds i8, i8* %401, i64 16
  %404 = bitcast i8* %403 to i64*
  store i64 %400, i64* %404, align 8
  %405 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %395, i64 0, i32 0, i32 0
  %406 = getelementptr inbounds i8, i8* %401, i64 8
  %407 = bitcast i8* %406 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %405, %"struct.std::__1::__list_node_base"** %407, align 8
  %408 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %395, i64 0, i32 0, i32 0, i32 0
  %409 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %408, align 8
  store %"struct.std::__1::__list_node_base"* %409, %"struct.std::__1::__list_node_base"** %402, align 8
  %410 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %409, i64 0, i32 1
  %411 = bitcast %"struct.std::__1::__list_node_base"** %410 to i8**
  store i8* %401, i8** %411, align 8
  %412 = bitcast %"class.std::__1::list"* %395 to i8**
  store i8* %401, i8** %412, align 8
  %413 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %414 = load i64, i64* %413, align 8
  %415 = add i64 %414, 1
  store i64 %415, i64* %413, align 8
  %416 = bitcast i8* %403 to %"class.spvtools::opt::Constraint"**
  %417 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %416, align 8
  br label %813

418:                                              ; preds = %280, %334
  %419 = bitcast %"class.spvtools::opt::SENode"* %4 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %420 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %419, align 8
  %421 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %420, i64 5
  %422 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %421, align 8
  %423 = tail call %"class.spvtools::opt::SEConstantNode"* %422(%"class.spvtools::opt::SENode"* %4) #10
  %424 = icmp eq %"class.spvtools::opt::SEConstantNode"* %423, null
  br i1 %424, label %540, label %425

425:                                              ; preds = %418
  %426 = bitcast %"class.spvtools::opt::SENode"* %3 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %427 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %426, align 8
  %428 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %427, i64 5
  %429 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %428, align 8
  %430 = tail call %"class.spvtools::opt::SEConstantNode"* %429(%"class.spvtools::opt::SENode"* %3) #10
  %431 = icmp eq %"class.spvtools::opt::SEConstantNode"* %430, null
  br i1 %431, label %540, label %432

432:                                              ; preds = %425
  %433 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %426, align 8
  %434 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %433, i64 5
  %435 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %434, align 8
  %436 = tail call %"class.spvtools::opt::SEConstantNode"* %435(%"class.spvtools::opt::SENode"* %3) #10
  %437 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %436, i64 0, i32 1
  %438 = load i64, i64* %437, align 8
  %439 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %419, align 8
  %440 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %439, i64 5
  %441 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %440, align 8
  %442 = tail call %"class.spvtools::opt::SEConstantNode"* %441(%"class.spvtools::opt::SENode"* %4) #10
  %443 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %442, i64 0, i32 1
  %444 = load i64, i64* %443, align 8
  %445 = mul nsw i64 %310, %298
  %446 = mul nsw i64 %316, %292
  %447 = sub nsw i64 %445, %446
  %448 = mul nsw i64 %310, %286
  %449 = mul nsw i64 %304, %292
  %450 = sub nsw i64 %448, %449
  %451 = sdiv i64 %447, %450
  %452 = srem i64 %447, %450
  %453 = icmp eq i64 %310, 0
  br i1 %453, label %458, label %454

454:                                              ; preds = %432
  %455 = mul nsw i64 %451, %304
  %456 = sub nsw i64 %316, %455
  %457 = sdiv i64 %456, %310
  br label %464

458:                                              ; preds = %432
  %459 = icmp eq i64 %292, 0
  br i1 %459, label %464, label %460

460:                                              ; preds = %458
  %461 = mul nsw i64 %451, %286
  %462 = sub nsw i64 %298, %461
  %463 = sdiv i64 %462, %292
  br label %464

464:                                              ; preds = %458, %460, %454
  %465 = phi i64 [ %457, %454 ], [ %463, %460 ], [ 0, %458 ]
  %466 = phi i64 [ %456, %454 ], [ %462, %460 ], [ 0, %458 ]
  %467 = phi i64 [ %310, %454 ], [ %292, %460 ], [ 0, %458 ]
  %468 = icmp eq i64 %452, 0
  br i1 %468, label %469, label %516

469:                                              ; preds = %464
  %470 = srem i64 %466, %467
  %471 = icmp ne i64 %470, 0
  %472 = icmp sgt i64 %438, %451
  %473 = or i1 %472, %471
  %474 = icmp sgt i64 %451, %444
  %475 = or i1 %474, %473
  %476 = icmp sgt i64 %438, %465
  %477 = or i1 %476, %475
  %478 = icmp sgt i64 %465, %444
  %479 = or i1 %478, %477
  br i1 %479, label %516, label %480

480:                                              ; preds = %469
  %481 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %482 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %481, i64 %451) #10
  %483 = ptrtoint %"class.spvtools::opt::SENode"* %482 to i64
  %484 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %481, i64 %465) #10
  %485 = ptrtoint %"class.spvtools::opt::SENode"* %484 to i64
  %486 = getelementptr inbounds %"class.spvtools::opt::Constraint", %"class.spvtools::opt::Constraint"* %1, i64 0, i32 1
  %487 = bitcast %"class.spvtools::opt::Loop"** %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %490 = tail call i8* @_Znwm(i64 32) #11
  %491 = bitcast i8* %490 to i32 (...)***
  %492 = getelementptr inbounds i8, i8* %490, i64 8
  %493 = bitcast i8* %492 to i64*
  store i64 %488, i64* %493, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt15DependencePointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %491, align 8
  %494 = getelementptr inbounds i8, i8* %490, i64 16
  %495 = bitcast i8* %494 to i64*
  store i64 %483, i64* %495, align 8
  %496 = getelementptr inbounds i8, i8* %490, i64 24
  %497 = bitcast i8* %496 to i64*
  store i64 %485, i64* %497, align 8
  %498 = ptrtoint i8* %490 to i64
  %499 = tail call i8* @_Znwm(i64 24) #11, !noalias !164
  %500 = bitcast i8* %499 to %"struct.std::__1::__list_node_base"**
  %501 = getelementptr inbounds i8, i8* %499, i64 16
  %502 = bitcast i8* %501 to i64*
  store i64 %498, i64* %502, align 8
  %503 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %489, i64 0, i32 0, i32 0
  %504 = getelementptr inbounds i8, i8* %499, i64 8
  %505 = bitcast i8* %504 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %503, %"struct.std::__1::__list_node_base"** %505, align 8
  %506 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %489, i64 0, i32 0, i32 0, i32 0
  %507 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %506, align 8
  store %"struct.std::__1::__list_node_base"* %507, %"struct.std::__1::__list_node_base"** %500, align 8
  %508 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %507, i64 0, i32 1
  %509 = bitcast %"struct.std::__1::__list_node_base"** %508 to i8**
  store i8* %499, i8** %509, align 8
  %510 = bitcast %"class.std::__1::list"* %489 to i8**
  store i8* %499, i8** %510, align 8
  %511 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %512 = load i64, i64* %511, align 8
  %513 = add i64 %512, 1
  store i64 %513, i64* %511, align 8
  %514 = bitcast i8* %501 to %"class.spvtools::opt::Constraint"**
  %515 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %514, align 8
  br label %813

516:                                              ; preds = %469, %464
  %517 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %518 = tail call i8* @_Znwm(i64 16) #11
  %519 = bitcast i8* %518 to i32 (...)***
  %520 = getelementptr inbounds i8, i8* %518, i64 8
  %521 = bitcast i8* %520 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %521, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt15DependenceEmptyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %519, align 8
  %522 = ptrtoint i8* %518 to i64
  %523 = tail call i8* @_Znwm(i64 24) #11, !noalias !167
  %524 = bitcast i8* %523 to %"struct.std::__1::__list_node_base"**
  %525 = getelementptr inbounds i8, i8* %523, i64 16
  %526 = bitcast i8* %525 to i64*
  store i64 %522, i64* %526, align 8
  %527 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %517, i64 0, i32 0, i32 0
  %528 = getelementptr inbounds i8, i8* %523, i64 8
  %529 = bitcast i8* %528 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %527, %"struct.std::__1::__list_node_base"** %529, align 8
  %530 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %517, i64 0, i32 0, i32 0, i32 0
  %531 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %530, align 8
  store %"struct.std::__1::__list_node_base"* %531, %"struct.std::__1::__list_node_base"** %524, align 8
  %532 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %531, i64 0, i32 1
  %533 = bitcast %"struct.std::__1::__list_node_base"** %532 to i8**
  store i8* %523, i8** %533, align 8
  %534 = bitcast %"class.std::__1::list"* %517 to i8**
  store i8* %523, i8** %534, align 8
  %535 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %536 = load i64, i64* %535, align 8
  %537 = add i64 %536, 1
  store i64 %537, i64* %535, align 8
  %538 = bitcast i8* %525 to %"class.spvtools::opt::Constraint"**
  %539 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %538, align 8
  br label %813

540:                                              ; preds = %425, %418
  %541 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %542 = tail call i8* @_Znwm(i64 16) #11
  %543 = bitcast i8* %542 to i32 (...)***
  %544 = getelementptr inbounds i8, i8* %542, i64 8
  %545 = bitcast i8* %544 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %545, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt14DependenceNoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %543, align 8
  %546 = ptrtoint i8* %542 to i64
  %547 = tail call i8* @_Znwm(i64 24) #11, !noalias !170
  %548 = bitcast i8* %547 to %"struct.std::__1::__list_node_base"**
  %549 = getelementptr inbounds i8, i8* %547, i64 16
  %550 = bitcast i8* %549 to i64*
  store i64 %546, i64* %550, align 8
  %551 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %541, i64 0, i32 0, i32 0
  %552 = getelementptr inbounds i8, i8* %547, i64 8
  %553 = bitcast i8* %552 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %551, %"struct.std::__1::__list_node_base"** %553, align 8
  %554 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %541, i64 0, i32 0, i32 0, i32 0
  %555 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %554, align 8
  store %"struct.std::__1::__list_node_base"* %555, %"struct.std::__1::__list_node_base"** %548, align 8
  %556 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %555, i64 0, i32 1
  %557 = bitcast %"struct.std::__1::__list_node_base"** %556 to i8**
  store i8* %547, i8** %557, align 8
  %558 = bitcast %"class.std::__1::list"* %541 to i8**
  store i8* %547, i8** %558, align 8
  %559 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %560 = load i64, i64* %559, align 8
  %561 = add i64 %560, 1
  store i64 %561, i64* %559, align 8
  %562 = bitcast i8* %549 to %"class.spvtools::opt::Constraint"**
  %563 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %562, align 8
  br label %813

564:                                              ; preds = %273, %266, %259, %252, %245, %235
  %565 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %566 = tail call i8* @_Znwm(i64 16) #11
  %567 = bitcast i8* %566 to i32 (...)***
  %568 = getelementptr inbounds i8, i8* %566, i64 8
  %569 = bitcast i8* %568 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %569, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt14DependenceNoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %567, align 8
  %570 = ptrtoint i8* %566 to i64
  %571 = tail call i8* @_Znwm(i64 24) #11, !noalias !173
  %572 = bitcast i8* %571 to %"struct.std::__1::__list_node_base"**
  %573 = getelementptr inbounds i8, i8* %571, i64 16
  %574 = bitcast i8* %573 to i64*
  store i64 %570, i64* %574, align 8
  %575 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %565, i64 0, i32 0, i32 0
  %576 = getelementptr inbounds i8, i8* %571, i64 8
  %577 = bitcast i8* %576 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %575, %"struct.std::__1::__list_node_base"** %577, align 8
  %578 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %565, i64 0, i32 0, i32 0, i32 0
  %579 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %578, align 8
  store %"struct.std::__1::__list_node_base"* %579, %"struct.std::__1::__list_node_base"** %572, align 8
  %580 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %579, i64 0, i32 1
  %581 = bitcast %"struct.std::__1::__list_node_base"** %580 to i8**
  store i8* %571, i8** %581, align 8
  %582 = bitcast %"class.std::__1::list"* %565 to i8**
  store i8* %571, i8** %582, align 8
  %583 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %584 = load i64, i64* %583, align 8
  %585 = add i64 %584, 1
  store i64 %585, i64* %583, align 8
  %586 = bitcast i8* %573 to %"class.spvtools::opt::Constraint"**
  %587 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %586, align 8
  br label %813

588:                                              ; preds = %149, %135
  %589 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %72, align 8
  %590 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %589, i64 7
  %591 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %590, align 8
  %592 = tail call %"class.spvtools::opt::DependencePoint"* %591(%"class.spvtools::opt::Constraint"* %1) #10
  %593 = icmp eq %"class.spvtools::opt::DependencePoint"* %592, null
  br i1 %593, label %608, label %594

594:                                              ; preds = %588
  %595 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)***
  %596 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %595, align 8
  %597 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %596, i64 3
  %598 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %597, align 8
  %599 = tail call %"class.spvtools::opt::DependenceLine"* %598(%"class.spvtools::opt::Constraint"* %2) #10
  %600 = icmp eq %"class.spvtools::opt::DependenceLine"* %599, null
  br i1 %600, label %601, label %628

601:                                              ; preds = %594
  %602 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)***
  %603 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %602, align 8
  %604 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %603, i64 5
  %605 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %604, align 8
  %606 = tail call %"class.spvtools::opt::DependenceDistance"* %605(%"class.spvtools::opt::Constraint"* %2) #10
  %607 = icmp eq %"class.spvtools::opt::DependenceDistance"* %606, null
  br i1 %607, label %608, label %628

608:                                              ; preds = %601, %588
  %609 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)***
  %610 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %609, align 8
  %611 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %610, i64 7
  %612 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %611, align 8
  %613 = tail call %"class.spvtools::opt::DependencePoint"* %612(%"class.spvtools::opt::Constraint"* %2) #10
  %614 = icmp eq %"class.spvtools::opt::DependencePoint"* %613, null
  br i1 %614, label %813, label %615

615:                                              ; preds = %608
  %616 = bitcast %"class.spvtools::opt::Constraint"* %1 to %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)***
  %617 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %616, align 8
  %618 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %617, i64 3
  %619 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %618, align 8
  %620 = tail call %"class.spvtools::opt::DependenceLine"* %619(%"class.spvtools::opt::Constraint"* %1) #10
  %621 = icmp eq %"class.spvtools::opt::DependenceLine"* %620, null
  br i1 %621, label %622, label %628

622:                                              ; preds = %615
  %623 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %20, align 8
  %624 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %623, i64 5
  %625 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %624, align 8
  %626 = tail call %"class.spvtools::opt::DependenceDistance"* %625(%"class.spvtools::opt::Constraint"* %1) #10
  %627 = icmp eq %"class.spvtools::opt::DependenceDistance"* %626, null
  br i1 %627, label %813, label %628

628:                                              ; preds = %601, %594, %622, %615
  %629 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %72, align 8
  %630 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %629, i64 7
  %631 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %630, align 8
  %632 = tail call %"class.spvtools::opt::DependencePoint"* %631(%"class.spvtools::opt::Constraint"* %1) #10
  %633 = icmp ne %"class.spvtools::opt::DependencePoint"* %632, null
  br i1 %633, label %634, label %639

634:                                              ; preds = %628
  %635 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %72, align 8
  %636 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %635, i64 7
  %637 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %636, align 8
  %638 = tail call %"class.spvtools::opt::DependencePoint"* %637(%"class.spvtools::opt::Constraint"* %1) #10
  br label %645

639:                                              ; preds = %628
  %640 = bitcast %"class.spvtools::opt::Constraint"* %2 to %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)***
  %641 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*** %640, align 8
  %642 = getelementptr inbounds %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %641, i64 7
  %643 = load %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependencePoint"* (%"class.spvtools::opt::Constraint"*)** %642, align 8
  %644 = tail call %"class.spvtools::opt::DependencePoint"* %643(%"class.spvtools::opt::Constraint"* %2) #10
  br label %645

645:                                              ; preds = %639, %634
  %646 = phi %"class.spvtools::opt::DependencePoint"* [ %638, %634 ], [ %644, %639 ]
  %647 = select i1 %633, %"class.spvtools::opt::Constraint"* %2, %"class.spvtools::opt::Constraint"* %1
  %648 = bitcast %"class.spvtools::opt::Constraint"* %647 to %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)***
  %649 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %648, align 8
  %650 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %649, i64 5
  %651 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %650, align 8
  %652 = tail call %"class.spvtools::opt::DependenceDistance"* %651(%"class.spvtools::opt::Constraint"* %647) #10
  %653 = icmp eq %"class.spvtools::opt::DependenceDistance"* %652, null
  br i1 %653, label %666, label %654

654:                                              ; preds = %645
  %655 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  %656 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %655, i64 1) #10
  %657 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %655, i64 -1) #10
  %658 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %648, align 8
  %659 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %658, i64 5
  %660 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %659, align 8
  %661 = tail call %"class.spvtools::opt::DependenceDistance"* %660(%"class.spvtools::opt::Constraint"* %647) #10
  %662 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance", %"class.spvtools::opt::DependenceDistance"* %661, i64 0, i32 1
  %663 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %662, align 8
  %664 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %655, %"class.spvtools::opt::SENode"* %663) #10
  %665 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %655, %"class.spvtools::opt::SENode"* %664) #10
  br label %686

666:                                              ; preds = %645
  %667 = bitcast %"class.spvtools::opt::Constraint"* %647 to %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)***
  %668 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %667, align 8
  %669 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %668, i64 3
  %670 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %669, align 8
  %671 = tail call %"class.spvtools::opt::DependenceLine"* %670(%"class.spvtools::opt::Constraint"* %647) #10
  %672 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %671, i64 0, i32 1
  %673 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %672, align 8
  %674 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %667, align 8
  %675 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %674, i64 3
  %676 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %675, align 8
  %677 = tail call %"class.spvtools::opt::DependenceLine"* %676(%"class.spvtools::opt::Constraint"* %647) #10
  %678 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %677, i64 0, i32 2
  %679 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %678, align 8
  %680 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*** %667, align 8
  %681 = getelementptr inbounds %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %680, i64 3
  %682 = load %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceLine"* (%"class.spvtools::opt::Constraint"*)** %681, align 8
  %683 = tail call %"class.spvtools::opt::DependenceLine"* %682(%"class.spvtools::opt::Constraint"* %647) #10
  %684 = getelementptr inbounds %"class.spvtools::opt::DependenceLine", %"class.spvtools::opt::DependenceLine"* %683, i64 0, i32 3
  %685 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %684, align 8
  br label %686

686:                                              ; preds = %666, %654
  %687 = phi %"class.spvtools::opt::SENode"* [ %657, %654 ], [ %679, %666 ]
  %688 = phi %"class.spvtools::opt::SENode"* [ %656, %654 ], [ %673, %666 ]
  %689 = phi %"class.spvtools::opt::SENode"* [ %665, %654 ], [ %685, %666 ]
  %690 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %646, i64 0, i32 1
  %691 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %690, align 8
  %692 = getelementptr inbounds %"class.spvtools::opt::DependencePoint", %"class.spvtools::opt::DependencePoint"* %646, i64 0, i32 2
  %693 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %692, align 8
  %694 = bitcast %"class.spvtools::opt::SENode"* %688 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %695 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %694, align 8
  %696 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %695, i64 4
  %697 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %696, align 8
  %698 = tail call %"class.spvtools::opt::SEConstantNode"* %697(%"class.spvtools::opt::SENode"* %688) #10
  %699 = icmp eq %"class.spvtools::opt::SEConstantNode"* %698, null
  br i1 %699, label %789, label %700

700:                                              ; preds = %686
  %701 = bitcast %"class.spvtools::opt::SENode"* %687 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %702 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %701, align 8
  %703 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %702, i64 4
  %704 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %703, align 8
  %705 = tail call %"class.spvtools::opt::SEConstantNode"* %704(%"class.spvtools::opt::SENode"* %687) #10
  %706 = icmp eq %"class.spvtools::opt::SEConstantNode"* %705, null
  br i1 %706, label %789, label %707

707:                                              ; preds = %700
  %708 = bitcast %"class.spvtools::opt::SENode"* %689 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %709 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %708, align 8
  %710 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %709, i64 4
  %711 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %710, align 8
  %712 = tail call %"class.spvtools::opt::SEConstantNode"* %711(%"class.spvtools::opt::SENode"* %689) #10
  %713 = icmp eq %"class.spvtools::opt::SEConstantNode"* %712, null
  br i1 %713, label %789, label %714

714:                                              ; preds = %707
  %715 = bitcast %"class.spvtools::opt::SENode"* %691 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %716 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %715, align 8
  %717 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %716, i64 4
  %718 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %717, align 8
  %719 = tail call %"class.spvtools::opt::SEConstantNode"* %718(%"class.spvtools::opt::SENode"* %691) #10
  %720 = icmp eq %"class.spvtools::opt::SEConstantNode"* %719, null
  br i1 %720, label %789, label %721

721:                                              ; preds = %714
  %722 = bitcast %"class.spvtools::opt::SENode"* %693 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %723 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %722, align 8
  %724 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %723, i64 4
  %725 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %724, align 8
  %726 = tail call %"class.spvtools::opt::SEConstantNode"* %725(%"class.spvtools::opt::SENode"* %693) #10
  %727 = icmp eq %"class.spvtools::opt::SEConstantNode"* %726, null
  br i1 %727, label %789, label %728

728:                                              ; preds = %721
  %729 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %694, align 8
  %730 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %729, i64 4
  %731 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %730, align 8
  %732 = tail call %"class.spvtools::opt::SEConstantNode"* %731(%"class.spvtools::opt::SENode"* %688) #10
  %733 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %732, i64 0, i32 1
  %734 = load i64, i64* %733, align 8
  %735 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %701, align 8
  %736 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %735, i64 4
  %737 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %736, align 8
  %738 = tail call %"class.spvtools::opt::SEConstantNode"* %737(%"class.spvtools::opt::SENode"* %687) #10
  %739 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %738, i64 0, i32 1
  %740 = load i64, i64* %739, align 8
  %741 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %708, align 8
  %742 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %741, i64 4
  %743 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %742, align 8
  %744 = tail call %"class.spvtools::opt::SEConstantNode"* %743(%"class.spvtools::opt::SENode"* %689) #10
  %745 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %744, i64 0, i32 1
  %746 = load i64, i64* %745, align 8
  %747 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %715, align 8
  %748 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %747, i64 4
  %749 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %748, align 8
  %750 = tail call %"class.spvtools::opt::SEConstantNode"* %749(%"class.spvtools::opt::SENode"* %691) #10
  %751 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %750, i64 0, i32 1
  %752 = load i64, i64* %751, align 8
  %753 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %722, align 8
  %754 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %753, i64 4
  %755 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %754, align 8
  %756 = tail call %"class.spvtools::opt::SEConstantNode"* %755(%"class.spvtools::opt::SENode"* %693) #10
  %757 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %756, i64 0, i32 1
  %758 = load i64, i64* %757, align 8
  %759 = mul nsw i64 %752, %734
  %760 = mul nsw i64 %758, %740
  %761 = add nsw i64 %760, %759
  %762 = icmp eq i64 %761, %746
  br i1 %762, label %763, label %765

763:                                              ; preds = %728
  %764 = select i1 %633, %"class.spvtools::opt::Constraint"* %1, %"class.spvtools::opt::Constraint"* %2
  br label %813

765:                                              ; preds = %728
  %766 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %767 = tail call i8* @_Znwm(i64 16) #11
  %768 = bitcast i8* %767 to i32 (...)***
  %769 = getelementptr inbounds i8, i8* %767, i64 8
  %770 = bitcast i8* %769 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %770, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt15DependenceEmptyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %768, align 8
  %771 = ptrtoint i8* %767 to i64
  %772 = tail call i8* @_Znwm(i64 24) #11, !noalias !176
  %773 = bitcast i8* %772 to %"struct.std::__1::__list_node_base"**
  %774 = getelementptr inbounds i8, i8* %772, i64 16
  %775 = bitcast i8* %774 to i64*
  store i64 %771, i64* %775, align 8
  %776 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %766, i64 0, i32 0, i32 0
  %777 = getelementptr inbounds i8, i8* %772, i64 8
  %778 = bitcast i8* %777 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %776, %"struct.std::__1::__list_node_base"** %778, align 8
  %779 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %766, i64 0, i32 0, i32 0, i32 0
  %780 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %779, align 8
  store %"struct.std::__1::__list_node_base"* %780, %"struct.std::__1::__list_node_base"** %773, align 8
  %781 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %780, i64 0, i32 1
  %782 = bitcast %"struct.std::__1::__list_node_base"** %781 to i8**
  store i8* %772, i8** %782, align 8
  %783 = bitcast %"class.std::__1::list"* %766 to i8**
  store i8* %772, i8** %783, align 8
  %784 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %785 = load i64, i64* %784, align 8
  %786 = add i64 %785, 1
  store i64 %786, i64* %784, align 8
  %787 = bitcast i8* %774 to %"class.spvtools::opt::Constraint"**
  %788 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %787, align 8
  br label %813

789:                                              ; preds = %721, %714, %707, %700, %686
  %790 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4
  %791 = tail call i8* @_Znwm(i64 16) #11
  %792 = bitcast i8* %791 to i32 (...)***
  %793 = getelementptr inbounds i8, i8* %791, i64 8
  %794 = bitcast i8* %793 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %794, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8spvtools3opt14DependenceNoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %792, align 8
  %795 = ptrtoint i8* %791 to i64
  %796 = tail call i8* @_Znwm(i64 24) #11, !noalias !179
  %797 = bitcast i8* %796 to %"struct.std::__1::__list_node_base"**
  %798 = getelementptr inbounds i8, i8* %796, i64 16
  %799 = bitcast i8* %798 to i64*
  store i64 %795, i64* %799, align 8
  %800 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %790, i64 0, i32 0, i32 0
  %801 = getelementptr inbounds i8, i8* %796, i64 8
  %802 = bitcast i8* %801 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %800, %"struct.std::__1::__list_node_base"** %802, align 8
  %803 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %790, i64 0, i32 0, i32 0, i32 0
  %804 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %803, align 8
  store %"struct.std::__1::__list_node_base"* %804, %"struct.std::__1::__list_node_base"** %797, align 8
  %805 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %804, i64 0, i32 1
  %806 = bitcast %"struct.std::__1::__list_node_base"** %805 to i8**
  store i8* %796, i8** %806, align 8
  %807 = bitcast %"class.std::__1::list"* %790 to i8**
  store i8* %796, i8** %807, align 8
  %808 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %809 = load i64, i64* %808, align 8
  %810 = add i64 %809, 1
  store i64 %810, i64* %808, align 8
  %811 = bitcast i8* %798 to %"class.spvtools::opt::Constraint"**
  %812 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %811, align 8
  br label %813

813:                                              ; preds = %608, %622, %789, %765, %763, %564, %480, %516, %390, %353, %540, %394, %357, %105, %99, %47, %33, %12, %5
  %814 = phi %"class.spvtools::opt::Constraint"* [ %2, %5 ], [ %1, %12 ], [ %70, %47 ], [ %1, %33 ], [ %128, %105 ], [ %1, %99 ], [ %587, %564 ], [ %380, %357 ], [ %417, %394 ], [ %563, %540 ], [ %1, %353 ], [ %1, %390 ], [ %515, %480 ], [ %539, %516 ], [ %812, %789 ], [ %764, %763 ], [ %788, %765 ], [ null, %622 ], [ null, %608 ]
  ret %"class.spvtools::opt::Constraint"* %814
}

declare zeroext i1 @_ZNK8spvtools3opt6SENodeeqERKS1_(%"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* dereferenceable(48)) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* } @_ZN8spvtools3opt22LoopDependenceAnalysis20PropagateConstraintsERKNSt3__14pairIPNS0_6SENodeES5_EERKNS2_6vectorIPNS0_10ConstraintENS2_9allocatorISB_EEEE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"struct.std::__1::pair.983"* nocapture readonly dereferenceable(16), %"class.std::__1::vector.1031"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.std::__1::pair.983"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.983", %"struct.std::__1::pair.983"* %1, i64 0, i32 1
  %7 = bitcast %"class.spvtools::opt::SENode"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.1031", %"class.std::__1::vector.1031"* %2, i64 0, i32 0, i32 1
  %12 = load %"class.spvtools::opt::Constraint"**, %"class.spvtools::opt::Constraint"*** %11, align 8
  %13 = icmp eq %"class.spvtools::opt::Constraint"** %10, %12
  %14 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2
  br i1 %13, label %15, label %23

15:                                               ; preds = %77, %3
  %16 = phi i64 [ %5, %3 ], [ %78, %77 ]
  %17 = phi i64 [ %8, %3 ], [ %79, %77 ]
  %18 = inttoptr i64 %17 to %"class.spvtools::opt::SENode"*
  %19 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %18) #10
  %20 = inttoptr i64 %16 to %"class.spvtools::opt::SENode"*
  %21 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* } undef, %"class.spvtools::opt::SENode"* %20, 0
  %22 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* } %21, %"class.spvtools::opt::SENode"* %19, 1
  ret { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* } %22

23:                                               ; preds = %3, %77
  %24 = phi %"class.spvtools::opt::Constraint"** [ %80, %77 ], [ %10, %3 ]
  %25 = phi i64 [ %79, %77 ], [ %8, %3 ]
  %26 = phi i64 [ %78, %77 ], [ %5, %3 ]
  %27 = inttoptr i64 %26 to %"class.spvtools::opt::SENode"*
  %28 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Constraint", %"class.spvtools::opt::Constraint"* %28, i64 0, i32 1
  %30 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %29, align 8
  %31 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis31GetCoefficientFromRecurrentTermEPNS0_6SENodeEPKNS0_4LoopE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %27, %"class.spvtools::opt::Loop"* %30) #10
  %32 = inttoptr i64 %25 to %"class.spvtools::opt::SENode"*
  %33 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Constraint", %"class.spvtools::opt::Constraint"* %33, i64 0, i32 1
  %35 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %34, align 8
  %36 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis31GetCoefficientFromRecurrentTermEPNS0_6SENodeEPKNS0_4LoopE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %32, %"class.spvtools::opt::Loop"* %35) #10
  %37 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, align 8
  %38 = bitcast %"class.spvtools::opt::Constraint"* %37 to i32 (%"class.spvtools::opt::Constraint"*)***
  %39 = load i32 (%"class.spvtools::opt::Constraint"*)**, i32 (%"class.spvtools::opt::Constraint"*)*** %38, align 8
  %40 = load i32 (%"class.spvtools::opt::Constraint"*)*, i32 (%"class.spvtools::opt::Constraint"*)** %39, align 8
  %41 = tail call i32 %40(%"class.spvtools::opt::Constraint"* %37) #10
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %77

43:                                               ; preds = %23
  %44 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, align 8
  %45 = bitcast %"class.spvtools::opt::Constraint"* %44 to %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)***
  %46 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)**, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %46, i64 5
  %48 = load %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)*, %"class.spvtools::opt::DependenceDistance"* (%"class.spvtools::opt::Constraint"*)** %47, align 8
  %49 = tail call %"class.spvtools::opt::DependenceDistance"* %48(%"class.spvtools::opt::Constraint"* %44) #10
  %50 = getelementptr inbounds %"class.spvtools::opt::DependenceDistance", %"class.spvtools::opt::DependenceDistance"* %49, i64 0, i32 1
  %51 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %50, align 8
  %52 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %31, %"class.spvtools::opt::SENode"* %51) #10
  %53 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::Constraint", %"class.spvtools::opt::Constraint"* %53, i64 0, i32 1
  %55 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %54, align 8
  %56 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis30BuildGraphWithoutRecurrentTermEPNS0_6SENodeEPKNS0_4LoopE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %27, %"class.spvtools::opt::Loop"* %55) #10
  %57 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %56, %"class.spvtools::opt::SENode"* %52) #10
  %58 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %57) #10
  %59 = ptrtoint %"class.spvtools::opt::SENode"* %58 to i64
  %60 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis17CreateSubtractionEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %36, %"class.spvtools::opt::SENode"* %31) #10
  %61 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %60) #10
  %62 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Constraint", %"class.spvtools::opt::Constraint"* %62, i64 0, i32 1
  %64 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %63, align 8
  %65 = tail call %"class.spvtools::opt::SERecurrentNode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis16GetRecurrentTermEPNS0_6SENodeEPKNS0_4LoopE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %32, %"class.spvtools::opt::Loop"* %64) #10
  %66 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %43
  %68 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Constraint", %"class.spvtools::opt::Constraint"* %68, i64 0, i32 1
  %70 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %69, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %65, i64 0, i32 2
  %72 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %71, align 8
  %73 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis25CreateRecurrentExpressionEPKNS0_4LoopEPNS0_6SENodeES6_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::Loop"* %70, %"class.spvtools::opt::SENode"* %72, %"class.spvtools::opt::SENode"* %61) #10
  %74 = bitcast %"class.spvtools::opt::SERecurrentNode"* %65 to %"class.spvtools::opt::SENode"*
  %75 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis15UpdateChildNodeEPNS0_6SENodeES3_S3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %32, %"class.spvtools::opt::SENode"* nonnull %74, %"class.spvtools::opt::SENode"* %73) #10
  %76 = ptrtoint %"class.spvtools::opt::SENode"* %75 to i64
  br label %77

77:                                               ; preds = %23, %67, %43
  %78 = phi i64 [ %59, %43 ], [ %26, %23 ], [ %59, %67 ]
  %79 = phi i64 [ %25, %43 ], [ %25, %23 ], [ %76, %67 ]
  %80 = getelementptr inbounds %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %24, i64 1
  %81 = icmp eq %"class.spvtools::opt::Constraint"** %80, %12
  br i1 %81, label %15, label %23
}

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis31GetCoefficientFromRecurrentTermEPNS0_6SENodeEPKNS0_4LoopE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis30BuildGraphWithoutRecurrentTermEPNS0_6SENodeEPKNS0_4LoopE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SERecurrentNode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis16GetRecurrentTermEPNS0_6SENodeEPKNS0_4LoopE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis25CreateRecurrentExpressionEPKNS0_4LoopEPNS0_6SENodeES6_(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis15UpdateChildNodeEPNS0_6SENodeES3_S3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt14DistanceVectorENS_9allocatorIS3_EEEC2EmRKS3_(%"class.std::__1::vector.1044"*, i64, %"class.spvtools::opt::DistanceVector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.1044"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector.1044"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #12
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #11
  %13 = bitcast i8* %12 to %"class.spvtools::opt::DistanceVector"*
  %14 = getelementptr inbounds %"class.std::__1::vector.1044", %"class.std::__1::vector.1044"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.spvtools::opt::DistanceVector"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector.1044"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector.1044", %"class.std::__1::vector.1044"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::DistanceVector"* %17, %"class.spvtools::opt::DistanceVector"** %18, align 8
  %19 = bitcast %"class.spvtools::opt::DistanceVector"** %14 to i64*
  %20 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %2, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.spvtools::opt::DistanceEntry"** %20 to i64*
  %22 = bitcast %"class.spvtools::opt::DistanceVector"* %2 to i64*
  %23 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %2, i64 0, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.spvtools::opt::DistanceVector"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.spvtools::opt::DistanceVector"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #10
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = sdiv exact i64 %29, 40
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 461168601842738790
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.spvtools::opt::DistanceVector"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #12
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #11
  %38 = bitcast i8* %37 to %"class.spvtools::opt::DistanceEntry"*
  %39 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %25, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.spvtools::opt::DistanceEntry"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.spvtools::opt::DistanceVector"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %38, i64 %30
  %43 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %25, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::DistanceEntry"* %42, %"class.spvtools::opt::DistanceEntry"** %43, align 8
  %44 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast %"class.spvtools::opt::DistanceEntry"** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = udiv exact i64 %49, 40
  %53 = bitcast %"class.spvtools::opt::DistanceEntry"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %53, i64 %49, i1 false) #10
  %54 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %38, i64 %52
  %55 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %25, i64 1
  %60 = icmp eq %"class.spvtools::opt::DistanceVector"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.spvtools::opt::DistanceVector"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::SERecurrentNode"** @_ZNSt3__16vectorIPN8spvtools3opt15SERecurrentNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1002"*, %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.spvtools::opt::SERecurrentNode"** %2 to i8*
  %6 = bitcast %"class.spvtools::opt::SERecurrentNode"** %1 to i8*
  %7 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %1 to i64
  %8 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.1002", %"class.std::__1::vector.1002"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %18, align 8
  %20 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.spvtools::opt::SERecurrentNode"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %27
  %31 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %3, i64 %33
  %35 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %3, i64 %41
  %43 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %49
  %51 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %19, %50
  %52 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %55
  %57 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %66
  %69 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %30, i64 %66
  %70 = bitcast %"class.spvtools::opt::SERecurrentNode"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !182
  %72 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %69, i64 2
  %73 = bitcast %"class.spvtools::opt::SERecurrentNode"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !182
  %75 = bitcast %"class.spvtools::opt::SERecurrentNode"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !185, !noalias !182
  %76 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %68, i64 2
  %77 = bitcast %"class.spvtools::opt::SERecurrentNode"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !185, !noalias !182
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %78
  %80 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %30, i64 %78
  %81 = bitcast %"class.spvtools::opt::SERecurrentNode"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !182
  %83 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %80, i64 2
  %84 = bitcast %"class.spvtools::opt::SERecurrentNode"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !182
  %86 = bitcast %"class.spvtools::opt::SERecurrentNode"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !185, !noalias !182
  %87 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %79, i64 2
  %88 = bitcast %"class.spvtools::opt::SERecurrentNode"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !185, !noalias !182
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %89
  %91 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %30, i64 %89
  %92 = bitcast %"class.spvtools::opt::SERecurrentNode"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !182
  %94 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %91, i64 2
  %95 = bitcast %"class.spvtools::opt::SERecurrentNode"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !182
  %97 = bitcast %"class.spvtools::opt::SERecurrentNode"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !185, !noalias !182
  %98 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %90, i64 2
  %99 = bitcast %"class.spvtools::opt::SERecurrentNode"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !185, !noalias !182
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %100
  %102 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %30, i64 %100
  %103 = bitcast %"class.spvtools::opt::SERecurrentNode"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !182
  %105 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %102, i64 2
  %106 = bitcast %"class.spvtools::opt::SERecurrentNode"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !182
  %108 = bitcast %"class.spvtools::opt::SERecurrentNode"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !185, !noalias !182
  %109 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %101, i64 2
  %110 = bitcast %"class.spvtools::opt::SERecurrentNode"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !185, !noalias !182
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !187

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %118
  %121 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %30, i64 %118
  %122 = bitcast %"class.spvtools::opt::SERecurrentNode"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !182
  %124 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %121, i64 2
  %125 = bitcast %"class.spvtools::opt::SERecurrentNode"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !182
  %127 = bitcast %"class.spvtools::opt::SERecurrentNode"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !185, !noalias !182
  %128 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %120, i64 2
  %129 = bitcast %"class.spvtools::opt::SERecurrentNode"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !185, !noalias !182
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !189

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.spvtools::opt::SERecurrentNode"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.spvtools::opt::SERecurrentNode"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %137 to i64
  %139 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %3, i64 -1
  %140 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.spvtools::opt::SERecurrentNode"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.spvtools::opt::SERecurrentNode"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.spvtools::opt::SERecurrentNode"** %147 to i64*
  %151 = bitcast %"class.spvtools::opt::SERecurrentNode"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %148, i64 1
  %154 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !190

157:                                              ; preds = %146, %135
  %158 = phi %"class.spvtools::opt::SERecurrentNode"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.spvtools::opt::SERecurrentNode"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.spvtools::opt::SERecurrentNode"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.spvtools::opt::SERecurrentNode"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.spvtools::opt::SERecurrentNode"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.spvtools::opt::SERecurrentNode"** %163 to i64*
  %166 = bitcast %"class.spvtools::opt::SERecurrentNode"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 1
  %169 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 1
  %170 = bitcast %"class.spvtools::opt::SERecurrentNode"** %169 to i64*
  %171 = bitcast %"class.spvtools::opt::SERecurrentNode"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 2
  %174 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 2
  %175 = bitcast %"class.spvtools::opt::SERecurrentNode"** %174 to i64*
  %176 = bitcast %"class.spvtools::opt::SERecurrentNode"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 3
  %179 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 3
  %180 = bitcast %"class.spvtools::opt::SERecurrentNode"** %179 to i64*
  %181 = bitcast %"class.spvtools::opt::SERecurrentNode"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 4
  %184 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 4
  %185 = bitcast %"class.spvtools::opt::SERecurrentNode"** %184 to i64*
  %186 = bitcast %"class.spvtools::opt::SERecurrentNode"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 5
  %189 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 5
  %190 = bitcast %"class.spvtools::opt::SERecurrentNode"** %189 to i64*
  %191 = bitcast %"class.spvtools::opt::SERecurrentNode"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 6
  %194 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 6
  %195 = bitcast %"class.spvtools::opt::SERecurrentNode"** %194 to i64*
  %196 = bitcast %"class.spvtools::opt::SERecurrentNode"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 7
  %199 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 7
  %200 = bitcast %"class.spvtools::opt::SERecurrentNode"** %199 to i64*
  %201 = bitcast %"class.spvtools::opt::SERecurrentNode"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %164, i64 8
  %204 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %163, i64 8
  %205 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !191

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.spvtools::opt::SERecurrentNode"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.spvtools::opt::SERecurrentNode"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.spvtools::opt::SERecurrentNode"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.spvtools::opt::SERecurrentNode"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %12
  %219 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %221
  %223 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %225
  %227 = bitcast %"class.spvtools::opt::SERecurrentNode"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.spvtools::opt::SERecurrentNode"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.spvtools::opt::SERecurrentNode"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %19, i64 %238
  %240 = bitcast %"class.spvtools::opt::SERecurrentNode"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %248
  %250 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %216, %249
  %251 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %254
  %256 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %265
  %268 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %222, i64 %265
  %269 = bitcast %"class.spvtools::opt::SERecurrentNode"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !192
  %271 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %268, i64 2
  %272 = bitcast %"class.spvtools::opt::SERecurrentNode"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !192
  %274 = bitcast %"class.spvtools::opt::SERecurrentNode"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !195, !noalias !192
  %275 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %267, i64 2
  %276 = bitcast %"class.spvtools::opt::SERecurrentNode"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !195, !noalias !192
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %277
  %279 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %222, i64 %277
  %280 = bitcast %"class.spvtools::opt::SERecurrentNode"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !192
  %282 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %279, i64 2
  %283 = bitcast %"class.spvtools::opt::SERecurrentNode"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !192
  %285 = bitcast %"class.spvtools::opt::SERecurrentNode"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !195, !noalias !192
  %286 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %278, i64 2
  %287 = bitcast %"class.spvtools::opt::SERecurrentNode"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !195, !noalias !192
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %288
  %290 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %222, i64 %288
  %291 = bitcast %"class.spvtools::opt::SERecurrentNode"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !192
  %293 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %290, i64 2
  %294 = bitcast %"class.spvtools::opt::SERecurrentNode"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !192
  %296 = bitcast %"class.spvtools::opt::SERecurrentNode"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !195, !noalias !192
  %297 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %289, i64 2
  %298 = bitcast %"class.spvtools::opt::SERecurrentNode"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !195, !noalias !192
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %299
  %301 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %222, i64 %299
  %302 = bitcast %"class.spvtools::opt::SERecurrentNode"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !192
  %304 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %301, i64 2
  %305 = bitcast %"class.spvtools::opt::SERecurrentNode"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !192
  %307 = bitcast %"class.spvtools::opt::SERecurrentNode"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !195, !noalias !192
  %308 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %300, i64 2
  %309 = bitcast %"class.spvtools::opt::SERecurrentNode"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !195, !noalias !192
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !197

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %317
  %320 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %222, i64 %317
  %321 = bitcast %"class.spvtools::opt::SERecurrentNode"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !192
  %323 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %320, i64 2
  %324 = bitcast %"class.spvtools::opt::SERecurrentNode"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !192
  %326 = bitcast %"class.spvtools::opt::SERecurrentNode"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !195, !noalias !192
  %327 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %319, i64 2
  %328 = bitcast %"class.spvtools::opt::SERecurrentNode"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !195, !noalias !192
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !198

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.spvtools::opt::SERecurrentNode"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %216, i64 %341
  %343 = bitcast %"class.spvtools::opt::SERecurrentNode"** %342 to i8*
  %344 = bitcast %"class.spvtools::opt::SERecurrentNode"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #10
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.spvtools::opt::SERecurrentNode"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.spvtools::opt::SERecurrentNode"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.spvtools::opt::SERecurrentNode"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.spvtools::opt::SERecurrentNode"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %347, i64 1
  %352 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %346, i64 1
  %353 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !199

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #10
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.1002"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.1002"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #12
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #12
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #11
  %390 = bitcast i8* %389 to %"class.spvtools::opt::SERecurrentNode"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.spvtools::opt::SERecurrentNode"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %394, i64 %392
  %396 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %394, i64 %393
  %397 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %396 to i64
  %398 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %409
  %411 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %395, %410
  %412 = icmp ugt %"class.spvtools::opt::SERecurrentNode"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %415
  %417 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %415
  %418 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %427
  %430 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %427
  %431 = bitcast %"class.spvtools::opt::SERecurrentNode"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !200
  %433 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %430, i64 2
  %434 = bitcast %"class.spvtools::opt::SERecurrentNode"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !200
  %436 = bitcast %"class.spvtools::opt::SERecurrentNode"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !203, !noalias !200
  %437 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %429, i64 2
  %438 = bitcast %"class.spvtools::opt::SERecurrentNode"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !203, !noalias !200
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %439
  %441 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %439
  %442 = bitcast %"class.spvtools::opt::SERecurrentNode"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !200
  %444 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %441, i64 2
  %445 = bitcast %"class.spvtools::opt::SERecurrentNode"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !200
  %447 = bitcast %"class.spvtools::opt::SERecurrentNode"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !203, !noalias !200
  %448 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %440, i64 2
  %449 = bitcast %"class.spvtools::opt::SERecurrentNode"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !203, !noalias !200
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %450
  %452 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %450
  %453 = bitcast %"class.spvtools::opt::SERecurrentNode"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !200
  %455 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %452, i64 2
  %456 = bitcast %"class.spvtools::opt::SERecurrentNode"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !200
  %458 = bitcast %"class.spvtools::opt::SERecurrentNode"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !203, !noalias !200
  %459 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %451, i64 2
  %460 = bitcast %"class.spvtools::opt::SERecurrentNode"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !203, !noalias !200
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %461
  %463 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %461
  %464 = bitcast %"class.spvtools::opt::SERecurrentNode"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !200
  %466 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %463, i64 2
  %467 = bitcast %"class.spvtools::opt::SERecurrentNode"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !200
  %469 = bitcast %"class.spvtools::opt::SERecurrentNode"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !203, !noalias !200
  %470 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %462, i64 2
  %471 = bitcast %"class.spvtools::opt::SERecurrentNode"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !203, !noalias !200
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !205

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %479
  %482 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %2, i64 %479
  %483 = bitcast %"class.spvtools::opt::SERecurrentNode"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !200
  %485 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %482, i64 2
  %486 = bitcast %"class.spvtools::opt::SERecurrentNode"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !200
  %488 = bitcast %"class.spvtools::opt::SERecurrentNode"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !203, !noalias !200
  %489 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %481, i64 2
  %490 = bitcast %"class.spvtools::opt::SERecurrentNode"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !203, !noalias !200
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !206

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.spvtools::opt::SERecurrentNode"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.spvtools::opt::SERecurrentNode"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.spvtools::opt::SERecurrentNode"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %394, i64 %502
  %504 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.spvtools::opt::SERecurrentNode"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.spvtools::opt::SERecurrentNode"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.spvtools::opt::SERecurrentNode"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.spvtools::opt::SERecurrentNode"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.spvtools::opt::SERecurrentNode"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %511, i64 1
  %519 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !207

522:                                              ; preds = %510, %496
  %523 = phi %"class.spvtools::opt::SERecurrentNode"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.spvtools::opt::SERecurrentNode"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.spvtools::opt::SERecurrentNode"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.spvtools::opt::SERecurrentNode"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.spvtools::opt::SERecurrentNode"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.spvtools::opt::SERecurrentNode"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.spvtools::opt::SERecurrentNode"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.spvtools::opt::SERecurrentNode"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 1
  %535 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 1
  %536 = bitcast %"class.spvtools::opt::SERecurrentNode"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.spvtools::opt::SERecurrentNode"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 2
  %540 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 2
  %541 = bitcast %"class.spvtools::opt::SERecurrentNode"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.spvtools::opt::SERecurrentNode"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 3
  %545 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 3
  %546 = bitcast %"class.spvtools::opt::SERecurrentNode"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.spvtools::opt::SERecurrentNode"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 4
  %550 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 4
  %551 = bitcast %"class.spvtools::opt::SERecurrentNode"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.spvtools::opt::SERecurrentNode"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 5
  %555 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 5
  %556 = bitcast %"class.spvtools::opt::SERecurrentNode"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.spvtools::opt::SERecurrentNode"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 6
  %560 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 6
  %561 = bitcast %"class.spvtools::opt::SERecurrentNode"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.spvtools::opt::SERecurrentNode"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 7
  %565 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 7
  %566 = bitcast %"class.spvtools::opt::SERecurrentNode"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.spvtools::opt::SERecurrentNode"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %528, i64 8
  %570 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %530, i64 8
  %571 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !208

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %9, align 8
  %574 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %395, i64 %577
  %579 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.spvtools::opt::SERecurrentNode"** %578 to i8*
  %583 = bitcast %"class.spvtools::opt::SERecurrentNode"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #10
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %18, align 8
  %586 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %585, i64 -1
  %589 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %585, i64 -1
  %597 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %603
  %605 = icmp ult %"class.spvtools::opt::SERecurrentNode"** %398, %604
  %606 = icmp ugt %"class.spvtools::opt::SERecurrentNode"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %398, i64 %609
  %611 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %398, i64 %609
  %612 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %398, i64 %621
  %624 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %621
  %625 = bitcast %"class.spvtools::opt::SERecurrentNode"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !209
  %627 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %624, i64 2
  %628 = bitcast %"class.spvtools::opt::SERecurrentNode"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !209
  %630 = bitcast %"class.spvtools::opt::SERecurrentNode"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !212, !noalias !209
  %631 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %623, i64 2
  %632 = bitcast %"class.spvtools::opt::SERecurrentNode"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !212, !noalias !209
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %398, i64 %633
  %635 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %633
  %636 = bitcast %"class.spvtools::opt::SERecurrentNode"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !209
  %638 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %635, i64 2
  %639 = bitcast %"class.spvtools::opt::SERecurrentNode"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !209
  %641 = bitcast %"class.spvtools::opt::SERecurrentNode"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !212, !noalias !209
  %642 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %634, i64 2
  %643 = bitcast %"class.spvtools::opt::SERecurrentNode"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !212, !noalias !209
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %398, i64 %644
  %646 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %644
  %647 = bitcast %"class.spvtools::opt::SERecurrentNode"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !209
  %649 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %646, i64 2
  %650 = bitcast %"class.spvtools::opt::SERecurrentNode"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !209
  %652 = bitcast %"class.spvtools::opt::SERecurrentNode"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !212, !noalias !209
  %653 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %645, i64 2
  %654 = bitcast %"class.spvtools::opt::SERecurrentNode"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !212, !noalias !209
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %398, i64 %655
  %657 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %655
  %658 = bitcast %"class.spvtools::opt::SERecurrentNode"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !209
  %660 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %657, i64 2
  %661 = bitcast %"class.spvtools::opt::SERecurrentNode"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !209
  %663 = bitcast %"class.spvtools::opt::SERecurrentNode"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !212, !noalias !209
  %664 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %656, i64 2
  %665 = bitcast %"class.spvtools::opt::SERecurrentNode"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !212, !noalias !209
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !214

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %398, i64 %673
  %676 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %1, i64 %673
  %677 = bitcast %"class.spvtools::opt::SERecurrentNode"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !209
  %679 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %676, i64 2
  %680 = bitcast %"class.spvtools::opt::SERecurrentNode"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !209
  %682 = bitcast %"class.spvtools::opt::SERecurrentNode"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !212, !noalias !209
  %683 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %675, i64 2
  %684 = bitcast %"class.spvtools::opt::SERecurrentNode"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !212, !noalias !209
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !215

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.spvtools::opt::SERecurrentNode"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.spvtools::opt::SERecurrentNode"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.spvtools::opt::SERecurrentNode"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %693 to i64
  %695 = getelementptr %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %585, i64 -1
  %696 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.spvtools::opt::SERecurrentNode"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.spvtools::opt::SERecurrentNode"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.spvtools::opt::SERecurrentNode"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.spvtools::opt::SERecurrentNode"** %704 to i64*
  %708 = bitcast %"class.spvtools::opt::SERecurrentNode"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %705, i64 1
  %711 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !216

714:                                              ; preds = %702, %690
  %715 = phi %"class.spvtools::opt::SERecurrentNode"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.spvtools::opt::SERecurrentNode"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.spvtools::opt::SERecurrentNode"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.spvtools::opt::SERecurrentNode"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.spvtools::opt::SERecurrentNode"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.spvtools::opt::SERecurrentNode"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.spvtools::opt::SERecurrentNode"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.spvtools::opt::SERecurrentNode"** %722 to i64*
  %725 = bitcast %"class.spvtools::opt::SERecurrentNode"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 1
  %728 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 1
  %729 = bitcast %"class.spvtools::opt::SERecurrentNode"** %728 to i64*
  %730 = bitcast %"class.spvtools::opt::SERecurrentNode"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 2
  %733 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 2
  %734 = bitcast %"class.spvtools::opt::SERecurrentNode"** %733 to i64*
  %735 = bitcast %"class.spvtools::opt::SERecurrentNode"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 3
  %738 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 3
  %739 = bitcast %"class.spvtools::opt::SERecurrentNode"** %738 to i64*
  %740 = bitcast %"class.spvtools::opt::SERecurrentNode"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 4
  %743 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 4
  %744 = bitcast %"class.spvtools::opt::SERecurrentNode"** %743 to i64*
  %745 = bitcast %"class.spvtools::opt::SERecurrentNode"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 5
  %748 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 5
  %749 = bitcast %"class.spvtools::opt::SERecurrentNode"** %748 to i64*
  %750 = bitcast %"class.spvtools::opt::SERecurrentNode"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 6
  %753 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 6
  %754 = bitcast %"class.spvtools::opt::SERecurrentNode"** %753 to i64*
  %755 = bitcast %"class.spvtools::opt::SERecurrentNode"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 7
  %758 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 7
  %759 = bitcast %"class.spvtools::opt::SERecurrentNode"** %758 to i64*
  %760 = bitcast %"class.spvtools::opt::SERecurrentNode"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %723, i64 8
  %763 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"*, %"class.spvtools::opt::SERecurrentNode"** %721, i64 8
  %764 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !217

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.spvtools::opt::SERecurrentNode"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.spvtools::opt::SERecurrentNode"** %766 to i64
  %768 = load %"class.spvtools::opt::SERecurrentNode"**, %"class.spvtools::opt::SERecurrentNode"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.spvtools::opt::SERecurrentNode"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.spvtools::opt::SERecurrentNode"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #11
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.spvtools::opt::SERecurrentNode"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.spvtools::opt::SERecurrentNode"** %773
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::SEValueUnknown"** @_ZNSt3__16vectorIPN8spvtools3opt14SEValueUnknownENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1010"*, %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.spvtools::opt::SEValueUnknown"** %2 to i8*
  %6 = bitcast %"class.spvtools::opt::SEValueUnknown"** %1 to i8*
  %7 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %1 to i64
  %8 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %18, align 8
  %20 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.spvtools::opt::SEValueUnknown"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %27
  %31 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %3, i64 %33
  %35 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %3, i64 %41
  %43 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %49
  %51 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %19, %50
  %52 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %55
  %57 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %66
  %69 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %30, i64 %66
  %70 = bitcast %"class.spvtools::opt::SEValueUnknown"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !218
  %72 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %69, i64 2
  %73 = bitcast %"class.spvtools::opt::SEValueUnknown"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !218
  %75 = bitcast %"class.spvtools::opt::SEValueUnknown"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !221, !noalias !218
  %76 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %68, i64 2
  %77 = bitcast %"class.spvtools::opt::SEValueUnknown"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !221, !noalias !218
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %78
  %80 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %30, i64 %78
  %81 = bitcast %"class.spvtools::opt::SEValueUnknown"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !218
  %83 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %80, i64 2
  %84 = bitcast %"class.spvtools::opt::SEValueUnknown"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !218
  %86 = bitcast %"class.spvtools::opt::SEValueUnknown"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !221, !noalias !218
  %87 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %79, i64 2
  %88 = bitcast %"class.spvtools::opt::SEValueUnknown"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !221, !noalias !218
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %89
  %91 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %30, i64 %89
  %92 = bitcast %"class.spvtools::opt::SEValueUnknown"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !218
  %94 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %91, i64 2
  %95 = bitcast %"class.spvtools::opt::SEValueUnknown"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !218
  %97 = bitcast %"class.spvtools::opt::SEValueUnknown"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !221, !noalias !218
  %98 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %90, i64 2
  %99 = bitcast %"class.spvtools::opt::SEValueUnknown"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !221, !noalias !218
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %100
  %102 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %30, i64 %100
  %103 = bitcast %"class.spvtools::opt::SEValueUnknown"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !218
  %105 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %102, i64 2
  %106 = bitcast %"class.spvtools::opt::SEValueUnknown"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !218
  %108 = bitcast %"class.spvtools::opt::SEValueUnknown"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !221, !noalias !218
  %109 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %101, i64 2
  %110 = bitcast %"class.spvtools::opt::SEValueUnknown"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !221, !noalias !218
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !223

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %118
  %121 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %30, i64 %118
  %122 = bitcast %"class.spvtools::opt::SEValueUnknown"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !218
  %124 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %121, i64 2
  %125 = bitcast %"class.spvtools::opt::SEValueUnknown"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !218
  %127 = bitcast %"class.spvtools::opt::SEValueUnknown"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !221, !noalias !218
  %128 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %120, i64 2
  %129 = bitcast %"class.spvtools::opt::SEValueUnknown"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !221, !noalias !218
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !224

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.spvtools::opt::SEValueUnknown"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.spvtools::opt::SEValueUnknown"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %137 to i64
  %139 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %3, i64 -1
  %140 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.spvtools::opt::SEValueUnknown"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.spvtools::opt::SEValueUnknown"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.spvtools::opt::SEValueUnknown"** %147 to i64*
  %151 = bitcast %"class.spvtools::opt::SEValueUnknown"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %148, i64 1
  %154 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !225

157:                                              ; preds = %146, %135
  %158 = phi %"class.spvtools::opt::SEValueUnknown"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.spvtools::opt::SEValueUnknown"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.spvtools::opt::SEValueUnknown"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.spvtools::opt::SEValueUnknown"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.spvtools::opt::SEValueUnknown"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.spvtools::opt::SEValueUnknown"** %163 to i64*
  %166 = bitcast %"class.spvtools::opt::SEValueUnknown"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 1
  %169 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 1
  %170 = bitcast %"class.spvtools::opt::SEValueUnknown"** %169 to i64*
  %171 = bitcast %"class.spvtools::opt::SEValueUnknown"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 2
  %174 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 2
  %175 = bitcast %"class.spvtools::opt::SEValueUnknown"** %174 to i64*
  %176 = bitcast %"class.spvtools::opt::SEValueUnknown"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 3
  %179 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 3
  %180 = bitcast %"class.spvtools::opt::SEValueUnknown"** %179 to i64*
  %181 = bitcast %"class.spvtools::opt::SEValueUnknown"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 4
  %184 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 4
  %185 = bitcast %"class.spvtools::opt::SEValueUnknown"** %184 to i64*
  %186 = bitcast %"class.spvtools::opt::SEValueUnknown"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 5
  %189 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 5
  %190 = bitcast %"class.spvtools::opt::SEValueUnknown"** %189 to i64*
  %191 = bitcast %"class.spvtools::opt::SEValueUnknown"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 6
  %194 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 6
  %195 = bitcast %"class.spvtools::opt::SEValueUnknown"** %194 to i64*
  %196 = bitcast %"class.spvtools::opt::SEValueUnknown"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 7
  %199 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 7
  %200 = bitcast %"class.spvtools::opt::SEValueUnknown"** %199 to i64*
  %201 = bitcast %"class.spvtools::opt::SEValueUnknown"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %164, i64 8
  %204 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %163, i64 8
  %205 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !226

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.spvtools::opt::SEValueUnknown"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.spvtools::opt::SEValueUnknown"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.spvtools::opt::SEValueUnknown"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.spvtools::opt::SEValueUnknown"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %12
  %219 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %221
  %223 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %225
  %227 = bitcast %"class.spvtools::opt::SEValueUnknown"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.spvtools::opt::SEValueUnknown"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.spvtools::opt::SEValueUnknown"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %19, i64 %238
  %240 = bitcast %"class.spvtools::opt::SEValueUnknown"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %248
  %250 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %216, %249
  %251 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %254
  %256 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %265
  %268 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %222, i64 %265
  %269 = bitcast %"class.spvtools::opt::SEValueUnknown"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !227
  %271 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %268, i64 2
  %272 = bitcast %"class.spvtools::opt::SEValueUnknown"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !227
  %274 = bitcast %"class.spvtools::opt::SEValueUnknown"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !230, !noalias !227
  %275 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %267, i64 2
  %276 = bitcast %"class.spvtools::opt::SEValueUnknown"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !230, !noalias !227
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %277
  %279 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %222, i64 %277
  %280 = bitcast %"class.spvtools::opt::SEValueUnknown"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !227
  %282 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %279, i64 2
  %283 = bitcast %"class.spvtools::opt::SEValueUnknown"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !227
  %285 = bitcast %"class.spvtools::opt::SEValueUnknown"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !230, !noalias !227
  %286 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %278, i64 2
  %287 = bitcast %"class.spvtools::opt::SEValueUnknown"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !230, !noalias !227
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %288
  %290 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %222, i64 %288
  %291 = bitcast %"class.spvtools::opt::SEValueUnknown"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !227
  %293 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %290, i64 2
  %294 = bitcast %"class.spvtools::opt::SEValueUnknown"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !227
  %296 = bitcast %"class.spvtools::opt::SEValueUnknown"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !230, !noalias !227
  %297 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %289, i64 2
  %298 = bitcast %"class.spvtools::opt::SEValueUnknown"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !230, !noalias !227
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %299
  %301 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %222, i64 %299
  %302 = bitcast %"class.spvtools::opt::SEValueUnknown"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !227
  %304 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %301, i64 2
  %305 = bitcast %"class.spvtools::opt::SEValueUnknown"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !227
  %307 = bitcast %"class.spvtools::opt::SEValueUnknown"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !230, !noalias !227
  %308 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %300, i64 2
  %309 = bitcast %"class.spvtools::opt::SEValueUnknown"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !230, !noalias !227
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !232

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %317
  %320 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %222, i64 %317
  %321 = bitcast %"class.spvtools::opt::SEValueUnknown"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !227
  %323 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %320, i64 2
  %324 = bitcast %"class.spvtools::opt::SEValueUnknown"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !227
  %326 = bitcast %"class.spvtools::opt::SEValueUnknown"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !230, !noalias !227
  %327 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %319, i64 2
  %328 = bitcast %"class.spvtools::opt::SEValueUnknown"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !230, !noalias !227
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !233

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.spvtools::opt::SEValueUnknown"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %216, i64 %341
  %343 = bitcast %"class.spvtools::opt::SEValueUnknown"** %342 to i8*
  %344 = bitcast %"class.spvtools::opt::SEValueUnknown"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #10
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.spvtools::opt::SEValueUnknown"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.spvtools::opt::SEValueUnknown"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.spvtools::opt::SEValueUnknown"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.spvtools::opt::SEValueUnknown"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %347, i64 1
  %352 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %346, i64 1
  %353 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !234

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #10
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.1010"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.1010"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #12
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #12
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #11
  %390 = bitcast i8* %389 to %"class.spvtools::opt::SEValueUnknown"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.spvtools::opt::SEValueUnknown"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %394, i64 %392
  %396 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %394, i64 %393
  %397 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %396 to i64
  %398 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %409
  %411 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %395, %410
  %412 = icmp ugt %"class.spvtools::opt::SEValueUnknown"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %415
  %417 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %415
  %418 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %427
  %430 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %427
  %431 = bitcast %"class.spvtools::opt::SEValueUnknown"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !235
  %433 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %430, i64 2
  %434 = bitcast %"class.spvtools::opt::SEValueUnknown"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !235
  %436 = bitcast %"class.spvtools::opt::SEValueUnknown"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !238, !noalias !235
  %437 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %429, i64 2
  %438 = bitcast %"class.spvtools::opt::SEValueUnknown"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !238, !noalias !235
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %439
  %441 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %439
  %442 = bitcast %"class.spvtools::opt::SEValueUnknown"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !235
  %444 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %441, i64 2
  %445 = bitcast %"class.spvtools::opt::SEValueUnknown"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !235
  %447 = bitcast %"class.spvtools::opt::SEValueUnknown"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !238, !noalias !235
  %448 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %440, i64 2
  %449 = bitcast %"class.spvtools::opt::SEValueUnknown"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !238, !noalias !235
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %450
  %452 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %450
  %453 = bitcast %"class.spvtools::opt::SEValueUnknown"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !235
  %455 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %452, i64 2
  %456 = bitcast %"class.spvtools::opt::SEValueUnknown"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !235
  %458 = bitcast %"class.spvtools::opt::SEValueUnknown"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !238, !noalias !235
  %459 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %451, i64 2
  %460 = bitcast %"class.spvtools::opt::SEValueUnknown"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !238, !noalias !235
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %461
  %463 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %461
  %464 = bitcast %"class.spvtools::opt::SEValueUnknown"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !235
  %466 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %463, i64 2
  %467 = bitcast %"class.spvtools::opt::SEValueUnknown"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !235
  %469 = bitcast %"class.spvtools::opt::SEValueUnknown"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !238, !noalias !235
  %470 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %462, i64 2
  %471 = bitcast %"class.spvtools::opt::SEValueUnknown"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !238, !noalias !235
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !240

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %479
  %482 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %2, i64 %479
  %483 = bitcast %"class.spvtools::opt::SEValueUnknown"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !235
  %485 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %482, i64 2
  %486 = bitcast %"class.spvtools::opt::SEValueUnknown"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !235
  %488 = bitcast %"class.spvtools::opt::SEValueUnknown"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !238, !noalias !235
  %489 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %481, i64 2
  %490 = bitcast %"class.spvtools::opt::SEValueUnknown"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !238, !noalias !235
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !241

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.spvtools::opt::SEValueUnknown"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.spvtools::opt::SEValueUnknown"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.spvtools::opt::SEValueUnknown"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %394, i64 %502
  %504 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.spvtools::opt::SEValueUnknown"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.spvtools::opt::SEValueUnknown"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.spvtools::opt::SEValueUnknown"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.spvtools::opt::SEValueUnknown"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.spvtools::opt::SEValueUnknown"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %511, i64 1
  %519 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !242

522:                                              ; preds = %510, %496
  %523 = phi %"class.spvtools::opt::SEValueUnknown"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.spvtools::opt::SEValueUnknown"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.spvtools::opt::SEValueUnknown"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.spvtools::opt::SEValueUnknown"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.spvtools::opt::SEValueUnknown"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.spvtools::opt::SEValueUnknown"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.spvtools::opt::SEValueUnknown"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.spvtools::opt::SEValueUnknown"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 1
  %535 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 1
  %536 = bitcast %"class.spvtools::opt::SEValueUnknown"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.spvtools::opt::SEValueUnknown"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 2
  %540 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 2
  %541 = bitcast %"class.spvtools::opt::SEValueUnknown"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.spvtools::opt::SEValueUnknown"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 3
  %545 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 3
  %546 = bitcast %"class.spvtools::opt::SEValueUnknown"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.spvtools::opt::SEValueUnknown"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 4
  %550 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 4
  %551 = bitcast %"class.spvtools::opt::SEValueUnknown"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.spvtools::opt::SEValueUnknown"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 5
  %555 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 5
  %556 = bitcast %"class.spvtools::opt::SEValueUnknown"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.spvtools::opt::SEValueUnknown"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 6
  %560 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 6
  %561 = bitcast %"class.spvtools::opt::SEValueUnknown"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.spvtools::opt::SEValueUnknown"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 7
  %565 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 7
  %566 = bitcast %"class.spvtools::opt::SEValueUnknown"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.spvtools::opt::SEValueUnknown"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %528, i64 8
  %570 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %530, i64 8
  %571 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !243

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %9, align 8
  %574 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %395, i64 %577
  %579 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.spvtools::opt::SEValueUnknown"** %578 to i8*
  %583 = bitcast %"class.spvtools::opt::SEValueUnknown"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #10
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %18, align 8
  %586 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %585, i64 -1
  %589 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %585, i64 -1
  %597 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %603
  %605 = icmp ult %"class.spvtools::opt::SEValueUnknown"** %398, %604
  %606 = icmp ugt %"class.spvtools::opt::SEValueUnknown"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %398, i64 %609
  %611 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %398, i64 %609
  %612 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %398, i64 %621
  %624 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %621
  %625 = bitcast %"class.spvtools::opt::SEValueUnknown"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !244
  %627 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %624, i64 2
  %628 = bitcast %"class.spvtools::opt::SEValueUnknown"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !244
  %630 = bitcast %"class.spvtools::opt::SEValueUnknown"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !247, !noalias !244
  %631 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %623, i64 2
  %632 = bitcast %"class.spvtools::opt::SEValueUnknown"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !247, !noalias !244
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %398, i64 %633
  %635 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %633
  %636 = bitcast %"class.spvtools::opt::SEValueUnknown"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !244
  %638 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %635, i64 2
  %639 = bitcast %"class.spvtools::opt::SEValueUnknown"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !244
  %641 = bitcast %"class.spvtools::opt::SEValueUnknown"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !247, !noalias !244
  %642 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %634, i64 2
  %643 = bitcast %"class.spvtools::opt::SEValueUnknown"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !247, !noalias !244
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %398, i64 %644
  %646 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %644
  %647 = bitcast %"class.spvtools::opt::SEValueUnknown"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !244
  %649 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %646, i64 2
  %650 = bitcast %"class.spvtools::opt::SEValueUnknown"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !244
  %652 = bitcast %"class.spvtools::opt::SEValueUnknown"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !247, !noalias !244
  %653 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %645, i64 2
  %654 = bitcast %"class.spvtools::opt::SEValueUnknown"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !247, !noalias !244
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %398, i64 %655
  %657 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %655
  %658 = bitcast %"class.spvtools::opt::SEValueUnknown"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !244
  %660 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %657, i64 2
  %661 = bitcast %"class.spvtools::opt::SEValueUnknown"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !244
  %663 = bitcast %"class.spvtools::opt::SEValueUnknown"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !247, !noalias !244
  %664 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %656, i64 2
  %665 = bitcast %"class.spvtools::opt::SEValueUnknown"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !247, !noalias !244
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !249

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %398, i64 %673
  %676 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %1, i64 %673
  %677 = bitcast %"class.spvtools::opt::SEValueUnknown"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !244
  %679 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %676, i64 2
  %680 = bitcast %"class.spvtools::opt::SEValueUnknown"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !244
  %682 = bitcast %"class.spvtools::opt::SEValueUnknown"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !247, !noalias !244
  %683 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %675, i64 2
  %684 = bitcast %"class.spvtools::opt::SEValueUnknown"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !247, !noalias !244
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !250

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.spvtools::opt::SEValueUnknown"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.spvtools::opt::SEValueUnknown"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.spvtools::opt::SEValueUnknown"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %693 to i64
  %695 = getelementptr %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %585, i64 -1
  %696 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.spvtools::opt::SEValueUnknown"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.spvtools::opt::SEValueUnknown"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.spvtools::opt::SEValueUnknown"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.spvtools::opt::SEValueUnknown"** %704 to i64*
  %708 = bitcast %"class.spvtools::opt::SEValueUnknown"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %705, i64 1
  %711 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !251

714:                                              ; preds = %702, %690
  %715 = phi %"class.spvtools::opt::SEValueUnknown"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.spvtools::opt::SEValueUnknown"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.spvtools::opt::SEValueUnknown"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.spvtools::opt::SEValueUnknown"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.spvtools::opt::SEValueUnknown"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.spvtools::opt::SEValueUnknown"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.spvtools::opt::SEValueUnknown"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.spvtools::opt::SEValueUnknown"** %722 to i64*
  %725 = bitcast %"class.spvtools::opt::SEValueUnknown"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 1
  %728 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 1
  %729 = bitcast %"class.spvtools::opt::SEValueUnknown"** %728 to i64*
  %730 = bitcast %"class.spvtools::opt::SEValueUnknown"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 2
  %733 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 2
  %734 = bitcast %"class.spvtools::opt::SEValueUnknown"** %733 to i64*
  %735 = bitcast %"class.spvtools::opt::SEValueUnknown"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 3
  %738 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 3
  %739 = bitcast %"class.spvtools::opt::SEValueUnknown"** %738 to i64*
  %740 = bitcast %"class.spvtools::opt::SEValueUnknown"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 4
  %743 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 4
  %744 = bitcast %"class.spvtools::opt::SEValueUnknown"** %743 to i64*
  %745 = bitcast %"class.spvtools::opt::SEValueUnknown"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 5
  %748 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 5
  %749 = bitcast %"class.spvtools::opt::SEValueUnknown"** %748 to i64*
  %750 = bitcast %"class.spvtools::opt::SEValueUnknown"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 6
  %753 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 6
  %754 = bitcast %"class.spvtools::opt::SEValueUnknown"** %753 to i64*
  %755 = bitcast %"class.spvtools::opt::SEValueUnknown"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 7
  %758 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 7
  %759 = bitcast %"class.spvtools::opt::SEValueUnknown"** %758 to i64*
  %760 = bitcast %"class.spvtools::opt::SEValueUnknown"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %723, i64 8
  %763 = getelementptr inbounds %"class.spvtools::opt::SEValueUnknown"*, %"class.spvtools::opt::SEValueUnknown"** %721, i64 8
  %764 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !252

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.spvtools::opt::SEValueUnknown"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.spvtools::opt::SEValueUnknown"** %766 to i64
  %768 = load %"class.spvtools::opt::SEValueUnknown"**, %"class.spvtools::opt::SEValueUnknown"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.spvtools::opt::SEValueUnknown"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.spvtools::opt::SEValueUnknown"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #11
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.spvtools::opt::SEValueUnknown"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.spvtools::opt::SEValueUnknown"** %773
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::SEConstantNode"** @_ZNSt3__16vectorIPN8spvtools3opt14SEConstantNodeENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.1019"*, %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.spvtools::opt::SEConstantNode"** %2 to i8*
  %6 = bitcast %"class.spvtools::opt::SEConstantNode"** %1 to i8*
  %7 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %1 to i64
  %8 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::SEConstantNode"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.1019", %"class.std::__1::vector.1019"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %18, align 8
  %20 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.spvtools::opt::SEConstantNode"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %27
  %31 = icmp eq %"class.spvtools::opt::SEConstantNode"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %3, i64 %33
  %35 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %3, i64 %41
  %43 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %49
  %51 = icmp ult %"class.spvtools::opt::SEConstantNode"** %19, %50
  %52 = icmp ult %"class.spvtools::opt::SEConstantNode"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %55
  %57 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %66
  %69 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %30, i64 %66
  %70 = bitcast %"class.spvtools::opt::SEConstantNode"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !253
  %72 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %69, i64 2
  %73 = bitcast %"class.spvtools::opt::SEConstantNode"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !253
  %75 = bitcast %"class.spvtools::opt::SEConstantNode"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !256, !noalias !253
  %76 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %68, i64 2
  %77 = bitcast %"class.spvtools::opt::SEConstantNode"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !256, !noalias !253
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %78
  %80 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %30, i64 %78
  %81 = bitcast %"class.spvtools::opt::SEConstantNode"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !253
  %83 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %80, i64 2
  %84 = bitcast %"class.spvtools::opt::SEConstantNode"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !253
  %86 = bitcast %"class.spvtools::opt::SEConstantNode"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !256, !noalias !253
  %87 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %79, i64 2
  %88 = bitcast %"class.spvtools::opt::SEConstantNode"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !256, !noalias !253
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %89
  %91 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %30, i64 %89
  %92 = bitcast %"class.spvtools::opt::SEConstantNode"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !253
  %94 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %91, i64 2
  %95 = bitcast %"class.spvtools::opt::SEConstantNode"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !253
  %97 = bitcast %"class.spvtools::opt::SEConstantNode"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !256, !noalias !253
  %98 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %90, i64 2
  %99 = bitcast %"class.spvtools::opt::SEConstantNode"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !256, !noalias !253
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %100
  %102 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %30, i64 %100
  %103 = bitcast %"class.spvtools::opt::SEConstantNode"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !253
  %105 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %102, i64 2
  %106 = bitcast %"class.spvtools::opt::SEConstantNode"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !253
  %108 = bitcast %"class.spvtools::opt::SEConstantNode"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !256, !noalias !253
  %109 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %101, i64 2
  %110 = bitcast %"class.spvtools::opt::SEConstantNode"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !256, !noalias !253
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !258

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %118
  %121 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %30, i64 %118
  %122 = bitcast %"class.spvtools::opt::SEConstantNode"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !253
  %124 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %121, i64 2
  %125 = bitcast %"class.spvtools::opt::SEConstantNode"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !253
  %127 = bitcast %"class.spvtools::opt::SEConstantNode"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !256, !noalias !253
  %128 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %120, i64 2
  %129 = bitcast %"class.spvtools::opt::SEConstantNode"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !256, !noalias !253
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !259

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.spvtools::opt::SEConstantNode"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.spvtools::opt::SEConstantNode"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %137 to i64
  %139 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %3, i64 -1
  %140 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.spvtools::opt::SEConstantNode"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.spvtools::opt::SEConstantNode"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.spvtools::opt::SEConstantNode"** %147 to i64*
  %151 = bitcast %"class.spvtools::opt::SEConstantNode"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %148, i64 1
  %154 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !260

157:                                              ; preds = %146, %135
  %158 = phi %"class.spvtools::opt::SEConstantNode"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.spvtools::opt::SEConstantNode"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.spvtools::opt::SEConstantNode"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.spvtools::opt::SEConstantNode"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.spvtools::opt::SEConstantNode"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.spvtools::opt::SEConstantNode"** %163 to i64*
  %166 = bitcast %"class.spvtools::opt::SEConstantNode"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 1
  %169 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 1
  %170 = bitcast %"class.spvtools::opt::SEConstantNode"** %169 to i64*
  %171 = bitcast %"class.spvtools::opt::SEConstantNode"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 2
  %174 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 2
  %175 = bitcast %"class.spvtools::opt::SEConstantNode"** %174 to i64*
  %176 = bitcast %"class.spvtools::opt::SEConstantNode"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 3
  %179 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 3
  %180 = bitcast %"class.spvtools::opt::SEConstantNode"** %179 to i64*
  %181 = bitcast %"class.spvtools::opt::SEConstantNode"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 4
  %184 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 4
  %185 = bitcast %"class.spvtools::opt::SEConstantNode"** %184 to i64*
  %186 = bitcast %"class.spvtools::opt::SEConstantNode"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 5
  %189 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 5
  %190 = bitcast %"class.spvtools::opt::SEConstantNode"** %189 to i64*
  %191 = bitcast %"class.spvtools::opt::SEConstantNode"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 6
  %194 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 6
  %195 = bitcast %"class.spvtools::opt::SEConstantNode"** %194 to i64*
  %196 = bitcast %"class.spvtools::opt::SEConstantNode"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 7
  %199 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 7
  %200 = bitcast %"class.spvtools::opt::SEConstantNode"** %199 to i64*
  %201 = bitcast %"class.spvtools::opt::SEConstantNode"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %164, i64 8
  %204 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %163, i64 8
  %205 = icmp eq %"class.spvtools::opt::SEConstantNode"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !261

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.spvtools::opt::SEConstantNode"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.spvtools::opt::SEConstantNode"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.spvtools::opt::SEConstantNode"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.spvtools::opt::SEConstantNode"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %12
  %219 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %221
  %223 = icmp ult %"class.spvtools::opt::SEConstantNode"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %225
  %227 = bitcast %"class.spvtools::opt::SEConstantNode"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.spvtools::opt::SEConstantNode"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.spvtools::opt::SEConstantNode"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %19, i64 %238
  %240 = bitcast %"class.spvtools::opt::SEConstantNode"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %248
  %250 = icmp ult %"class.spvtools::opt::SEConstantNode"** %216, %249
  %251 = icmp ult %"class.spvtools::opt::SEConstantNode"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %254
  %256 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %265
  %268 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %222, i64 %265
  %269 = bitcast %"class.spvtools::opt::SEConstantNode"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !262
  %271 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %268, i64 2
  %272 = bitcast %"class.spvtools::opt::SEConstantNode"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !262
  %274 = bitcast %"class.spvtools::opt::SEConstantNode"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !265, !noalias !262
  %275 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %267, i64 2
  %276 = bitcast %"class.spvtools::opt::SEConstantNode"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !265, !noalias !262
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %277
  %279 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %222, i64 %277
  %280 = bitcast %"class.spvtools::opt::SEConstantNode"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !262
  %282 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %279, i64 2
  %283 = bitcast %"class.spvtools::opt::SEConstantNode"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !262
  %285 = bitcast %"class.spvtools::opt::SEConstantNode"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !265, !noalias !262
  %286 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %278, i64 2
  %287 = bitcast %"class.spvtools::opt::SEConstantNode"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !265, !noalias !262
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %288
  %290 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %222, i64 %288
  %291 = bitcast %"class.spvtools::opt::SEConstantNode"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !262
  %293 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %290, i64 2
  %294 = bitcast %"class.spvtools::opt::SEConstantNode"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !262
  %296 = bitcast %"class.spvtools::opt::SEConstantNode"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !265, !noalias !262
  %297 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %289, i64 2
  %298 = bitcast %"class.spvtools::opt::SEConstantNode"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !265, !noalias !262
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %299
  %301 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %222, i64 %299
  %302 = bitcast %"class.spvtools::opt::SEConstantNode"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !262
  %304 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %301, i64 2
  %305 = bitcast %"class.spvtools::opt::SEConstantNode"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !262
  %307 = bitcast %"class.spvtools::opt::SEConstantNode"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !265, !noalias !262
  %308 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %300, i64 2
  %309 = bitcast %"class.spvtools::opt::SEConstantNode"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !265, !noalias !262
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !267

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %317
  %320 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %222, i64 %317
  %321 = bitcast %"class.spvtools::opt::SEConstantNode"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !262
  %323 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %320, i64 2
  %324 = bitcast %"class.spvtools::opt::SEConstantNode"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !262
  %326 = bitcast %"class.spvtools::opt::SEConstantNode"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !265, !noalias !262
  %327 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %319, i64 2
  %328 = bitcast %"class.spvtools::opt::SEConstantNode"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !265, !noalias !262
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !268

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.spvtools::opt::SEConstantNode"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %216, i64 %341
  %343 = bitcast %"class.spvtools::opt::SEConstantNode"** %342 to i8*
  %344 = bitcast %"class.spvtools::opt::SEConstantNode"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #10
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.spvtools::opt::SEConstantNode"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.spvtools::opt::SEConstantNode"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.spvtools::opt::SEConstantNode"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.spvtools::opt::SEConstantNode"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %347, i64 1
  %352 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %346, i64 1
  %353 = icmp ult %"class.spvtools::opt::SEConstantNode"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !269

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #10
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.1019"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.1019"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #12
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #12
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #11
  %390 = bitcast i8* %389 to %"class.spvtools::opt::SEConstantNode"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.spvtools::opt::SEConstantNode"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %394, i64 %392
  %396 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %394, i64 %393
  %397 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %396 to i64
  %398 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %409
  %411 = icmp ult %"class.spvtools::opt::SEConstantNode"** %395, %410
  %412 = icmp ugt %"class.spvtools::opt::SEConstantNode"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %415
  %417 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %415
  %418 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %427
  %430 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %427
  %431 = bitcast %"class.spvtools::opt::SEConstantNode"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !270
  %433 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %430, i64 2
  %434 = bitcast %"class.spvtools::opt::SEConstantNode"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !270
  %436 = bitcast %"class.spvtools::opt::SEConstantNode"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !273, !noalias !270
  %437 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %429, i64 2
  %438 = bitcast %"class.spvtools::opt::SEConstantNode"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !273, !noalias !270
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %439
  %441 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %439
  %442 = bitcast %"class.spvtools::opt::SEConstantNode"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !270
  %444 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %441, i64 2
  %445 = bitcast %"class.spvtools::opt::SEConstantNode"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !270
  %447 = bitcast %"class.spvtools::opt::SEConstantNode"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !273, !noalias !270
  %448 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %440, i64 2
  %449 = bitcast %"class.spvtools::opt::SEConstantNode"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !273, !noalias !270
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %450
  %452 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %450
  %453 = bitcast %"class.spvtools::opt::SEConstantNode"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !270
  %455 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %452, i64 2
  %456 = bitcast %"class.spvtools::opt::SEConstantNode"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !270
  %458 = bitcast %"class.spvtools::opt::SEConstantNode"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !273, !noalias !270
  %459 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %451, i64 2
  %460 = bitcast %"class.spvtools::opt::SEConstantNode"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !273, !noalias !270
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %461
  %463 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %461
  %464 = bitcast %"class.spvtools::opt::SEConstantNode"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !270
  %466 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %463, i64 2
  %467 = bitcast %"class.spvtools::opt::SEConstantNode"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !270
  %469 = bitcast %"class.spvtools::opt::SEConstantNode"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !273, !noalias !270
  %470 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %462, i64 2
  %471 = bitcast %"class.spvtools::opt::SEConstantNode"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !273, !noalias !270
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !275

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %479
  %482 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %2, i64 %479
  %483 = bitcast %"class.spvtools::opt::SEConstantNode"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !270
  %485 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %482, i64 2
  %486 = bitcast %"class.spvtools::opt::SEConstantNode"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !270
  %488 = bitcast %"class.spvtools::opt::SEConstantNode"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !273, !noalias !270
  %489 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %481, i64 2
  %490 = bitcast %"class.spvtools::opt::SEConstantNode"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !273, !noalias !270
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !276

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.spvtools::opt::SEConstantNode"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.spvtools::opt::SEConstantNode"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.spvtools::opt::SEConstantNode"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %394, i64 %502
  %504 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.spvtools::opt::SEConstantNode"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.spvtools::opt::SEConstantNode"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.spvtools::opt::SEConstantNode"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.spvtools::opt::SEConstantNode"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.spvtools::opt::SEConstantNode"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %511, i64 1
  %519 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !277

522:                                              ; preds = %510, %496
  %523 = phi %"class.spvtools::opt::SEConstantNode"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.spvtools::opt::SEConstantNode"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.spvtools::opt::SEConstantNode"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.spvtools::opt::SEConstantNode"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.spvtools::opt::SEConstantNode"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.spvtools::opt::SEConstantNode"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.spvtools::opt::SEConstantNode"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.spvtools::opt::SEConstantNode"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 1
  %535 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 1
  %536 = bitcast %"class.spvtools::opt::SEConstantNode"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.spvtools::opt::SEConstantNode"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 2
  %540 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 2
  %541 = bitcast %"class.spvtools::opt::SEConstantNode"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.spvtools::opt::SEConstantNode"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 3
  %545 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 3
  %546 = bitcast %"class.spvtools::opt::SEConstantNode"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.spvtools::opt::SEConstantNode"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 4
  %550 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 4
  %551 = bitcast %"class.spvtools::opt::SEConstantNode"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.spvtools::opt::SEConstantNode"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 5
  %555 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 5
  %556 = bitcast %"class.spvtools::opt::SEConstantNode"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.spvtools::opt::SEConstantNode"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 6
  %560 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 6
  %561 = bitcast %"class.spvtools::opt::SEConstantNode"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.spvtools::opt::SEConstantNode"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 7
  %565 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 7
  %566 = bitcast %"class.spvtools::opt::SEConstantNode"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.spvtools::opt::SEConstantNode"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %528, i64 8
  %570 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %530, i64 8
  %571 = icmp eq %"class.spvtools::opt::SEConstantNode"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !278

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %9, align 8
  %574 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %395, i64 %577
  %579 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.spvtools::opt::SEConstantNode"** %578 to i8*
  %583 = bitcast %"class.spvtools::opt::SEConstantNode"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #10
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %18, align 8
  %586 = icmp eq %"class.spvtools::opt::SEConstantNode"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %585, i64 -1
  %589 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %585, i64 -1
  %597 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %603
  %605 = icmp ult %"class.spvtools::opt::SEConstantNode"** %398, %604
  %606 = icmp ugt %"class.spvtools::opt::SEConstantNode"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %398, i64 %609
  %611 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %398, i64 %609
  %612 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %398, i64 %621
  %624 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %621
  %625 = bitcast %"class.spvtools::opt::SEConstantNode"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !279
  %627 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %624, i64 2
  %628 = bitcast %"class.spvtools::opt::SEConstantNode"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !279
  %630 = bitcast %"class.spvtools::opt::SEConstantNode"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !282, !noalias !279
  %631 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %623, i64 2
  %632 = bitcast %"class.spvtools::opt::SEConstantNode"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !282, !noalias !279
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %398, i64 %633
  %635 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %633
  %636 = bitcast %"class.spvtools::opt::SEConstantNode"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !279
  %638 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %635, i64 2
  %639 = bitcast %"class.spvtools::opt::SEConstantNode"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !279
  %641 = bitcast %"class.spvtools::opt::SEConstantNode"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !282, !noalias !279
  %642 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %634, i64 2
  %643 = bitcast %"class.spvtools::opt::SEConstantNode"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !282, !noalias !279
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %398, i64 %644
  %646 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %644
  %647 = bitcast %"class.spvtools::opt::SEConstantNode"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !279
  %649 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %646, i64 2
  %650 = bitcast %"class.spvtools::opt::SEConstantNode"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !279
  %652 = bitcast %"class.spvtools::opt::SEConstantNode"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !282, !noalias !279
  %653 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %645, i64 2
  %654 = bitcast %"class.spvtools::opt::SEConstantNode"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !282, !noalias !279
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %398, i64 %655
  %657 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %655
  %658 = bitcast %"class.spvtools::opt::SEConstantNode"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !279
  %660 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %657, i64 2
  %661 = bitcast %"class.spvtools::opt::SEConstantNode"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !279
  %663 = bitcast %"class.spvtools::opt::SEConstantNode"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !282, !noalias !279
  %664 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %656, i64 2
  %665 = bitcast %"class.spvtools::opt::SEConstantNode"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !282, !noalias !279
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !284

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %398, i64 %673
  %676 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %1, i64 %673
  %677 = bitcast %"class.spvtools::opt::SEConstantNode"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !279
  %679 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %676, i64 2
  %680 = bitcast %"class.spvtools::opt::SEConstantNode"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !279
  %682 = bitcast %"class.spvtools::opt::SEConstantNode"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !282, !noalias !279
  %683 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %675, i64 2
  %684 = bitcast %"class.spvtools::opt::SEConstantNode"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !282, !noalias !279
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !285

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.spvtools::opt::SEConstantNode"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.spvtools::opt::SEConstantNode"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.spvtools::opt::SEConstantNode"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %693 to i64
  %695 = getelementptr %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %585, i64 -1
  %696 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.spvtools::opt::SEConstantNode"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.spvtools::opt::SEConstantNode"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.spvtools::opt::SEConstantNode"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.spvtools::opt::SEConstantNode"** %704 to i64*
  %708 = bitcast %"class.spvtools::opt::SEConstantNode"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %705, i64 1
  %711 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !286

714:                                              ; preds = %702, %690
  %715 = phi %"class.spvtools::opt::SEConstantNode"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.spvtools::opt::SEConstantNode"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.spvtools::opt::SEConstantNode"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.spvtools::opt::SEConstantNode"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.spvtools::opt::SEConstantNode"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.spvtools::opt::SEConstantNode"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.spvtools::opt::SEConstantNode"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.spvtools::opt::SEConstantNode"** %722 to i64*
  %725 = bitcast %"class.spvtools::opt::SEConstantNode"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 1
  %728 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 1
  %729 = bitcast %"class.spvtools::opt::SEConstantNode"** %728 to i64*
  %730 = bitcast %"class.spvtools::opt::SEConstantNode"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 2
  %733 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 2
  %734 = bitcast %"class.spvtools::opt::SEConstantNode"** %733 to i64*
  %735 = bitcast %"class.spvtools::opt::SEConstantNode"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 3
  %738 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 3
  %739 = bitcast %"class.spvtools::opt::SEConstantNode"** %738 to i64*
  %740 = bitcast %"class.spvtools::opt::SEConstantNode"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 4
  %743 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 4
  %744 = bitcast %"class.spvtools::opt::SEConstantNode"** %743 to i64*
  %745 = bitcast %"class.spvtools::opt::SEConstantNode"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 5
  %748 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 5
  %749 = bitcast %"class.spvtools::opt::SEConstantNode"** %748 to i64*
  %750 = bitcast %"class.spvtools::opt::SEConstantNode"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 6
  %753 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 6
  %754 = bitcast %"class.spvtools::opt::SEConstantNode"** %753 to i64*
  %755 = bitcast %"class.spvtools::opt::SEConstantNode"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 7
  %758 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 7
  %759 = bitcast %"class.spvtools::opt::SEConstantNode"** %758 to i64*
  %760 = bitcast %"class.spvtools::opt::SEConstantNode"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %723, i64 8
  %763 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"*, %"class.spvtools::opt::SEConstantNode"** %721, i64 8
  %764 = icmp eq %"class.spvtools::opt::SEConstantNode"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !287

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.spvtools::opt::SEConstantNode"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.spvtools::opt::SEConstantNode"** %766 to i64
  %768 = load %"class.spvtools::opt::SEConstantNode"**, %"class.spvtools::opt::SEConstantNode"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.spvtools::opt::SEConstantNode"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.spvtools::opt::SEConstantNode"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #11
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.spvtools::opt::SEConstantNode"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.spvtools::opt::SEConstantNode"** %773
}

; Function Attrs: nounwind readnone ssp uwtable
define internal fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64, i64) unnamed_addr #7 {
  %3 = icmp eq i64 %0, %1
  br i1 %3, label %45, label %4

4:                                                ; preds = %2, %30
  %5 = phi i64 [ %32, %30 ], [ %1, %2 ]
  %6 = phi i64 [ %33, %30 ], [ %0, %2 ]
  %7 = icmp eq i64 %6, 0
  %8 = srem i64 %6, 2
  %9 = sdiv i64 %6, 2
  %10 = icmp eq i64 %8, 0
  %11 = icmp eq i64 %8, 1
  br label %12

12:                                               ; preds = %4, %37
  %13 = phi i64 [ %5, %4 ], [ %27, %37 ]
  br i1 %7, label %45, label %14

14:                                               ; preds = %12
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %45, label %16

16:                                               ; preds = %14
  %17 = and i64 %13, 1
  %18 = icmp eq i64 %17, 0
  %19 = or i64 %17, %8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = sdiv i64 %13, 2
  %23 = tail call fastcc i64 @_ZN8spvtools3opt12_GLOBAL__N_121GreatestCommonDivisorEll(i64 %9, i64 %22)
  %24 = shl nsw i64 %23, 1
  ret i64 %24

25:                                               ; preds = %16
  %26 = srem i64 %13, 2
  %27 = sdiv i64 %13, 2
  %28 = icmp eq i64 %26, 1
  %29 = and i1 %10, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %25, %41, %43
  %31 = phi i64 [ %44, %43 ], [ %42, %41 ], [ %6, %25 ]
  %32 = phi i64 [ %6, %43 ], [ %13, %41 ], [ %13, %25 ]
  %33 = sdiv i64 %31, 2
  %34 = icmp eq i64 %33, %32
  br i1 %34, label %45, label %4

35:                                               ; preds = %25
  %36 = and i1 %11, %18
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = icmp eq i64 %6, %27
  br i1 %38, label %45, label %12

39:                                               ; preds = %35
  %40 = icmp sgt i64 %6, %13
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = sub nsw i64 %6, %13
  br label %30

43:                                               ; preds = %39
  %44 = sub nsw i64 %13, %6
  br label %30

45:                                               ; preds = %30, %37, %12, %14, %2
  %46 = phi i64 [ %0, %2 ], [ %6, %14 ], [ %5, %12 ], [ %6, %37 ], [ %32, %30 ]
  ret i64 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN8spvtools3opt4LoopENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.985"*, %"class.std::__1::__tree_node.1083"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1083"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1083"* %1 to %"class.std::__1::__tree_node.1083"**
  %6 = load %"class.std::__1::__tree_node.1083"*, %"class.std::__1::__tree_node.1083"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN8spvtools3opt4LoopENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.985"* %0, %"class.std::__1::__tree_node.1083"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1083", %"class.std::__1::__tree_node.1083"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1083"**
  %9 = load %"class.std::__1::__tree_node.1083"*, %"class.std::__1::__tree_node.1083"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN8spvtools3opt4LoopENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.985"* %0, %"class.std::__1::__tree_node.1083"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1083"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_3setINS_4pairIPN8spvtools3opt11InstructionES6_EENS_4lessIS7_EENS_9allocatorIS7_EEEENSA_ISC_EEE21__push_back_slow_pathISC_EEvOT_(%"class.std::__1::vector.969"*, %"class.std::__1::set.971"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::set.971"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.969"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.969"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::set.971"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::set.971"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::set.971"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::set.971"* %35 to i64
  %37 = bitcast %"class.std::__1::set.971"* %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::set.971"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %33, i64 %9, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %1, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__compressed_pair.84"* %41 to i64*
  %43 = bitcast %"class.std::__1::__compressed_pair.84"* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %33, i64 %9, i32 0, i32 1, i32 0, i32 0
  br i1 %48, label %50, label %52

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %34, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %51, align 8
  br label %58

52:                                               ; preds = %31
  %53 = inttoptr i64 %44 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %1, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %54, align 8
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #10
  br label %58

58:                                               ; preds = %50, %52
  %59 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %34, i64 1
  %60 = ptrtoint %"class.std::__1::set.971"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.969", %"class.std::__1::vector.969"* %0, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %61, align 8
  %63 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %3, align 8
  %64 = icmp eq %"class.std::__1::set.971"* %63, %62
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = ptrtoint %"class.std::__1::set.971"* %62 to i64
  br label %98

67:                                               ; preds = %58, %93
  %68 = phi %"class.std::__1::set.971"* [ %70, %93 ], [ %34, %58 ]
  %69 = phi %"class.std::__1::set.971"* [ %71, %93 ], [ %63, %58 ]
  %70 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %68, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %69, i64 -1
  %72 = bitcast %"class.std::__1::set.971"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::set.971"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %68, i64 -1, i32 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %69, i64 -1, i32 0, i32 1
  %77 = bitcast %"class.std::__1::__compressed_pair.84"* %76 to i64*
  %78 = bitcast %"class.std::__1::__compressed_pair.84"* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %69, i64 -1, i32 0, i32 2, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %68, i64 -1, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %68, i64 -1, i32 0, i32 1, i32 0, i32 0
  br i1 %83, label %85, label %87

85:                                               ; preds = %67
  %86 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %70, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %86, align 8
  br label %93

87:                                               ; preds = %67
  %88 = inttoptr i64 %79 to %"class.std::__1::__tree_node_base"*
  %89 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %71, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %69, i64 -1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %89, align 8
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #10
  br label %93

93:                                               ; preds = %87, %85
  %94 = icmp eq %"class.std::__1::set.971"* %71, %62
  br i1 %94, label %95, label %67

95:                                               ; preds = %93
  %96 = load i64, i64* %6, align 8
  %97 = load %"class.std::__1::set.971"*, %"class.std::__1::set.971"** %3, align 8
  br label %98

98:                                               ; preds = %65, %95
  %99 = phi %"class.std::__1::set.971"* [ %62, %65 ], [ %97, %95 ]
  %100 = phi %"class.std::__1::set.971"* [ %34, %65 ], [ %70, %95 ]
  %101 = phi i64 [ %66, %65 ], [ %96, %95 ]
  %102 = ptrtoint %"class.std::__1::set.971"* %100 to i64
  store i64 %102, i64* %6, align 8
  store i64 %60, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %103 = inttoptr i64 %101 to %"class.std::__1::set.971"*
  %104 = icmp eq %"class.std::__1::set.971"* %99, %103
  br i1 %104, label %113, label %105

105:                                              ; preds = %98, %105
  %106 = phi %"class.std::__1::set.971"* [ %107, %105 ], [ %99, %98 ]
  %107 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %106, i64 -1
  %108 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %107, i64 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %106, i64 -1, i32 0, i32 1, i32 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_node"**
  %111 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %110, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.972"* %108, %"class.std::__1::__tree_node"* %111) #10
  %112 = icmp eq %"class.std::__1::set.971"* %107, %103
  br i1 %112, label %113, label %105

113:                                              ; preds = %105, %98
  %114 = icmp eq i64 %101, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %101 to i8*
  tail call void @_ZdlPv(i8* %116) #11
  br label %117

117:                                              ; preds = %113, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE6insertIPKS6_EEvT_SF_(%"class.std::__1::set.971"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"struct.std::__1::pair"* %1, %2
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::set.971"* %0 to i64*
  %12 = getelementptr inbounds %"class.std::__1::set.971", %"class.std::__1::set.971"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %14

13:                                               ; preds = %125, %3
  ret void

14:                                               ; preds = %6, %125
  %15 = phi %"struct.std::__1::pair"* [ %1, %6 ], [ %126, %125 ]
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %16, %4
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br i1 %17, label %55, label %19

19:                                               ; preds = %14
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19, %21
  %22 = phi %"class.std::__1::__tree_node_base"* [ %24, %21 ], [ %18, %19 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 1
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %37, label %21

26:                                               ; preds = %19, %26
  %27 = phi %"class.std::__1::__tree_end_node"* [ %31, %26 ], [ %4, %19 ]
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_end_node"**
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %28
  br i1 %34, label %26, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  br label %37

37:                                               ; preds = %21, %35
  %38 = phi %"class.std::__1::__tree_node_base"* [ %36, %35 ], [ %22, %21 ]
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 1
  %41 = bitcast %"class.std::__1::__tree_node_base"* %40 to %"class.spvtools::opt::Instruction"**
  %42 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %43, align 8
  %45 = icmp ult %"class.spvtools::opt::Instruction"* %42, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %37
  %47 = icmp ult %"class.spvtools::opt::Instruction"* %44, %42
  br i1 %47, label %61, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 1, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.spvtools::opt::Instruction"**
  %51 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %52, align 8
  %54 = icmp ult %"class.spvtools::opt::Instruction"* %51, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %48, %37, %14
  %56 = phi i64 [ %39, %48 ], [ %39, %37 ], [ %7, %14 ]
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %57, label %99, label %58

58:                                               ; preds = %55
  %59 = inttoptr i64 %56 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 1
  br label %99

61:                                               ; preds = %48, %46
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %62, label %99, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1
  %65 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %64, align 8
  br label %66

66:                                               ; preds = %92, %63
  %67 = phi %"class.std::__1::__tree_node_base"* [ %18, %63 ], [ %93, %92 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %10, %63 ], [ %94, %92 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 1
  %70 = bitcast %"class.std::__1::__tree_node_base"* %69 to %"class.spvtools::opt::Instruction"**
  %71 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %70, align 8
  %72 = icmp ult %"class.spvtools::opt::Instruction"* %44, %71
  br i1 %72, label %80, label %73

73:                                               ; preds = %66
  %74 = icmp ult %"class.spvtools::opt::Instruction"* %71, %44
  br i1 %74, label %88, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 1, i32 1
  %77 = bitcast %"class.std::__1::__tree_node_base"** %76 to %"class.spvtools::opt::Instruction"**
  %78 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, align 8
  %79 = icmp ult %"class.spvtools::opt::Instruction"* %65, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %75, %66
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %92

84:                                               ; preds = %80
  %85 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  br label %99

86:                                               ; preds = %75
  %87 = icmp ult %"class.spvtools::opt::Instruction"* %78, %65
  br i1 %87, label %88, label %97

88:                                               ; preds = %86, %73
  %89 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88, %80
  %93 = phi %"class.std::__1::__tree_node_base"* [ %82, %80 ], [ %90, %88 ]
  %94 = phi %"class.std::__1::__tree_node_base"** [ %81, %80 ], [ %89, %88 ]
  br label %66

95:                                               ; preds = %88
  %96 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  br label %99

97:                                               ; preds = %86
  %98 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  br label %99

99:                                               ; preds = %61, %55, %58, %84, %95, %97
  %100 = phi i64 [ %56, %58 ], [ %85, %84 ], [ %96, %95 ], [ %98, %97 ], [ %7, %55 ], [ %7, %61 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %60, %58 ], [ %81, %84 ], [ %89, %95 ], [ %68, %97 ], [ %9, %55 ], [ %9, %61 ]
  %102 = bitcast %"class.std::__1::__tree_node_base"** %101 to %"class.std::__1::__tree_node"**
  %103 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node"* %103, null
  br i1 %104, label %105, label %125

105:                                              ; preds = %99
  %106 = tail call i8* @_Znwm(i64 48) #11, !noalias !288
  %107 = getelementptr inbounds i8, i8* %106, i64 32
  %108 = bitcast %"struct.std::__1::pair"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 16, i1 false) #10, !noalias !288
  %109 = bitcast i8* %106 to %"class.std::__1::__tree_node_base"*
  %110 = getelementptr inbounds i8, i8* %106, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 16, i1 false) #10
  %111 = bitcast i8* %110 to i64*
  store i64 %100, i64* %111, align 8
  %112 = bitcast %"class.std::__1::__tree_node_base"** %101 to i8**
  store i8* %106, i8** %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %105
  %118 = ptrtoint %"class.std::__1::__tree_node_base"* %115 to i64
  store i64 %118, i64* %11, align 8
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  br label %120

120:                                              ; preds = %117, %105
  %121 = phi %"class.std::__1::__tree_node_base"* [ %109, %105 ], [ %119, %117 ]
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %122, %"class.std::__1::__tree_node_base"* %121) #10
  %123 = load i64, i64* %12, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %12, align 8
  br label %125

125:                                              ; preds = %99, %120
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %127 = icmp eq %"struct.std::__1::pair"* %126, %2
  br i1 %127, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !291
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !291
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !291
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN8spvtools3opt22LoopDependenceAnalysis12CollectLoopsERKNSt3__16vectorIPNS0_15SERecurrentNodeENS2_9allocatorIS5_EEEE(%"class.std::__1::set.984"* sret, %"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.std::__1::vector.1002"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8spvtools3opt15DependenceEmpty7GetTypeEv(%"class.spvtools::opt::DependenceEmpty"*) unnamed_addr #0 comdat align 2 {
  ret i32 4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15DependenceEmptyD0Ev(%"class.spvtools::opt::DependenceEmpty"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.spvtools::opt::DependenceEmpty"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceLine"* @_ZN8spvtools3opt10Constraint16AsDependenceLineEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceLine"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceLine"* @_ZNK8spvtools3opt10Constraint16AsDependenceLineEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceLine"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceDistance"* @_ZN8spvtools3opt10Constraint20AsDependenceDistanceEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceDistance"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceDistance"* @_ZNK8spvtools3opt10Constraint20AsDependenceDistanceEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceDistance"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependencePoint"* @_ZN8spvtools3opt10Constraint17AsDependencePointEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependencePoint"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependencePoint"* @_ZNK8spvtools3opt10Constraint17AsDependencePointEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependencePoint"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceNone"* @_ZN8spvtools3opt10Constraint16AsDependenceNoneEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceNone"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceNone"* @_ZNK8spvtools3opt10Constraint16AsDependenceNoneEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceNone"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceEmpty"* @_ZN8spvtools3opt15DependenceEmpty17AsDependenceEmptyEv(%"class.spvtools::opt::DependenceEmpty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceEmpty"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceEmpty"* @_ZNK8spvtools3opt15DependenceEmpty17AsDependenceEmptyEv(%"class.spvtools::opt::DependenceEmpty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceEmpty"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceEmpty"* @_ZN8spvtools3opt10Constraint17AsDependenceEmptyEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceEmpty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceEmpty"* @_ZNK8spvtools3opt10Constraint17AsDependenceEmptyEv(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceEmpty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8spvtools3opt15DependencePoint7GetTypeEv(%"class.spvtools::opt::DependencePoint"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15DependencePointD0Ev(%"class.spvtools::opt::DependencePoint"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.spvtools::opt::DependencePoint"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependencePoint"* @_ZN8spvtools3opt15DependencePoint17AsDependencePointEv(%"class.spvtools::opt::DependencePoint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependencePoint"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependencePoint"* @_ZNK8spvtools3opt15DependencePoint17AsDependencePointEv(%"class.spvtools::opt::DependencePoint"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependencePoint"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8spvtools3opt14DependenceNone7GetTypeEv(%"class.spvtools::opt::DependenceNone"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt10ConstraintD2Ev(%"class.spvtools::opt::Constraint"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14DependenceNoneD0Ev(%"class.spvtools::opt::DependenceNone"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.spvtools::opt::DependenceNone"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceNone"* @_ZN8spvtools3opt14DependenceNone16AsDependenceNoneEv(%"class.spvtools::opt::DependenceNone"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceNone"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceNone"* @_ZNK8spvtools3opt14DependenceNone16AsDependenceNoneEv(%"class.spvtools::opt::DependenceNone"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceNone"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8spvtools3opt18DependenceDistance7GetTypeEv(%"class.spvtools::opt::DependenceDistance"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt18DependenceDistanceD0Ev(%"class.spvtools::opt::DependenceDistance"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.spvtools::opt::DependenceDistance"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceDistance"* @_ZN8spvtools3opt18DependenceDistance20AsDependenceDistanceEv(%"class.spvtools::opt::DependenceDistance"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceDistance"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceDistance"* @_ZNK8spvtools3opt18DependenceDistance20AsDependenceDistanceEv(%"class.spvtools::opt::DependenceDistance"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceDistance"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8spvtools3opt14DependenceLine7GetTypeEv(%"class.spvtools::opt::DependenceLine"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14DependenceLineD0Ev(%"class.spvtools::opt::DependenceLine"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.spvtools::opt::DependenceLine"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceLine"* @_ZN8spvtools3opt14DependenceLine16AsDependenceLineEv(%"class.spvtools::opt::DependenceLine"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceLine"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::DependenceLine"* @_ZNK8spvtools3opt14DependenceLine16AsDependenceLineEv(%"class.spvtools::opt::DependenceLine"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::DependenceLine"* %0
}

declare zeroext i1 @_ZNK8spvtools3opt10ConstrainteqERKS1_(%"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"* dereferenceable(16)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!8 = !{!9, !11, !13}
!9 = distinct !{!9, !10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!11 = distinct !{!11, !12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!13 = distinct !{!13, !14, !"_ZNSt3__15beginINS_6vectorIbNS_9allocatorIbEEEEEEDTcldtfp_5beginEERT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__15beginINS_6vectorIbNS_9allocatorIbEEEEEEDTcldtfp_5beginEERT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__19transformINS_11__wrap_iterIPNS_4pairIPN8spvtools3opt6SENodeES6_EEEENS1_IPNS4_14DistanceVectorEEENS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEZNS4_22LoopDependenceAnalysis9DeltaTestERKNSE_IS7_NSF_IS7_EEEESB_E3$_5EET1_T_SQ_T0_SP_T2_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__19transformINS_11__wrap_iterIPNS_4pairIPN8spvtools3opt6SENodeES6_EEEENS1_IPNS4_14DistanceVectorEEENS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEZNS4_22LoopDependenceAnalysis9DeltaTestERKNSE_IS7_NSF_IS7_EEEESB_E3$_5EET1_T_SQ_T0_SP_T2_"}
!18 = !{}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!22 = distinct !{!22, !23, !"_ZNSt3__13endINS_6vectorIbNS_9allocatorIbEEEEEEDTcldtfp_3endEERT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__13endINS_6vectorIbNS_9allocatorIbEEEEEEDTcldtfp_3endEERT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__19transformINS_11__wrap_iterIPNS_4pairIPN8spvtools3opt6SENodeES6_EEEENS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEZNS4_22LoopDependenceAnalysis9DeltaTestERKNSB_IS7_NSC_IS7_EEEEPNS4_14DistanceVectorEE3$_9EET0_T_SP_SO_T1_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__19transformINS_11__wrap_iterIPNS_4pairIPN8spvtools3opt6SENodeES6_EEEENS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEZNS4_22LoopDependenceAnalysis9DeltaTestERKNSB_IS7_NSC_IS7_EEEEPNS4_14DistanceVectorEE3$_9EET0_T_SP_SO_T1_"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!36 = distinct !{!36, !37, !"_ZNSt3__13endINS_6vectorIbNS_9allocatorIbEEEEEEDTcldtfp_3endEERT_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__13endINS_6vectorIbNS_9allocatorIbEEEEEEDTcldtfp_3endEERT_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!67 = distinct !{!67, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!76 = distinct !{!76, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!91 = distinct !{!91, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!94 = distinct !{!94, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!112 = distinct !{!112, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!124 = distinct !{!124, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!136 = distinct !{!136, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!139 = distinct !{!139, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!142 = distinct !{!142, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!145 = distinct !{!145, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!148 = distinct !{!148, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_: argument 0"}
!151 = distinct !{!151, !"_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!154 = distinct !{!154, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!157 = distinct !{!157, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!160 = distinct !{!160, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!163 = distinct !{!163, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!166 = distinct !{!166, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!169 = distinct !{!169, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!172 = distinct !{!172, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!175 = distinct !{!175, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!178 = distinct !{!178, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!181 = distinct !{!181, !"_ZNSt3__14listINS_10unique_ptrIN8spvtools3opt10ConstraintENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !188}
!188 = !{!"llvm.loop.isvectorized", i32 1}
!189 = distinct !{!189, !3}
!190 = distinct !{!190, !3}
!191 = distinct !{!191, !188}
!192 = !{!193}
!193 = distinct !{!193, !194}
!194 = distinct !{!194, !"LVerDomain"}
!195 = !{!196}
!196 = distinct !{!196, !194}
!197 = distinct !{!197, !188}
!198 = distinct !{!198, !3}
!199 = distinct !{!199, !188}
!200 = !{!201}
!201 = distinct !{!201, !202}
!202 = distinct !{!202, !"LVerDomain"}
!203 = !{!204}
!204 = distinct !{!204, !202}
!205 = distinct !{!205, !188}
!206 = distinct !{!206, !3}
!207 = distinct !{!207, !3}
!208 = distinct !{!208, !188}
!209 = !{!210}
!210 = distinct !{!210, !211}
!211 = distinct !{!211, !"LVerDomain"}
!212 = !{!213}
!213 = distinct !{!213, !211}
!214 = distinct !{!214, !188}
!215 = distinct !{!215, !3}
!216 = distinct !{!216, !3}
!217 = distinct !{!217, !188}
!218 = !{!219}
!219 = distinct !{!219, !220}
!220 = distinct !{!220, !"LVerDomain"}
!221 = !{!222}
!222 = distinct !{!222, !220}
!223 = distinct !{!223, !188}
!224 = distinct !{!224, !3}
!225 = distinct !{!225, !3}
!226 = distinct !{!226, !188}
!227 = !{!228}
!228 = distinct !{!228, !229}
!229 = distinct !{!229, !"LVerDomain"}
!230 = !{!231}
!231 = distinct !{!231, !229}
!232 = distinct !{!232, !188}
!233 = distinct !{!233, !3}
!234 = distinct !{!234, !188}
!235 = !{!236}
!236 = distinct !{!236, !237}
!237 = distinct !{!237, !"LVerDomain"}
!238 = !{!239}
!239 = distinct !{!239, !237}
!240 = distinct !{!240, !188}
!241 = distinct !{!241, !3}
!242 = distinct !{!242, !3}
!243 = distinct !{!243, !188}
!244 = !{!245}
!245 = distinct !{!245, !246}
!246 = distinct !{!246, !"LVerDomain"}
!247 = !{!248}
!248 = distinct !{!248, !246}
!249 = distinct !{!249, !188}
!250 = distinct !{!250, !3}
!251 = distinct !{!251, !3}
!252 = distinct !{!252, !188}
!253 = !{!254}
!254 = distinct !{!254, !255}
!255 = distinct !{!255, !"LVerDomain"}
!256 = !{!257}
!257 = distinct !{!257, !255}
!258 = distinct !{!258, !188}
!259 = distinct !{!259, !3}
!260 = distinct !{!260, !3}
!261 = distinct !{!261, !188}
!262 = !{!263}
!263 = distinct !{!263, !264}
!264 = distinct !{!264, !"LVerDomain"}
!265 = !{!266}
!266 = distinct !{!266, !264}
!267 = distinct !{!267, !188}
!268 = distinct !{!268, !3}
!269 = distinct !{!269, !188}
!270 = !{!271}
!271 = distinct !{!271, !272}
!272 = distinct !{!272, !"LVerDomain"}
!273 = !{!274}
!274 = distinct !{!274, !272}
!275 = distinct !{!275, !188}
!276 = distinct !{!276, !3}
!277 = distinct !{!277, !3}
!278 = distinct !{!278, !188}
!279 = !{!280}
!280 = distinct !{!280, !281}
!281 = distinct !{!281, !"LVerDomain"}
!282 = !{!283}
!283 = distinct !{!283, !281}
!284 = distinct !{!284, !188}
!285 = distinct !{!285, !3}
!286 = distinct !{!286, !3}
!287 = distinct !{!287, !188}
!288 = !{!289}
!289 = distinct !{!289, !290, !"_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_: argument 0"}
!290 = distinct !{!290, !"_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_"}
!291 = !{i8 0, i8 2}
