; ModuleID = '../../components/query_tiles/internal/logger_impl.cc'
source_filename = "../../components/query_tiles/internal/logger_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.query_tiles::LoggerImpl" = type { %"class.query_tiles::Logger", %"class.query_tiles::LogSink", %"class.query_tiles::LogSource"*, %"class.base::ObserverList" }
%"class.query_tiles::Logger" = type { i32 (...)** }
%"class.query_tiles::LogSink" = type { i32 (...)** }
%"class.query_tiles::LogSource" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.query_tiles::Logger::Observer" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.query_tiles::TileGroup" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::vector.35", %"class.std::__1::map" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }

@_ZTVN11query_tiles10LoggerImplE = hidden unnamed_addr constant { [10 x i8*], [6 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImplD2Ev to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImplD0Ev to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*, %"class.query_tiles::Logger::Observer"*)* @_ZN11query_tiles10LoggerImpl11AddObserverEPNS_6Logger8ObserverE to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*, %"class.query_tiles::Logger::Observer"*)* @_ZN11query_tiles10LoggerImpl14RemoveObserverEPNS_6Logger8ObserverE to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImpl16GetServiceStatusEv to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImpl11GetTileDataEv to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImpl22OnServiceStatusChangedEv to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImpl19OnTileDataAvailableEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZThn8_N11query_tiles10LoggerImplD1Ev to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZThn8_N11query_tiles10LoggerImplD0Ev to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZThn8_N11query_tiles10LoggerImpl22OnServiceStatusChangedEv to i8*), i8* bitcast (void (%"class.query_tiles::LoggerImpl"*)* @_ZThn8_N11query_tiles10LoggerImpl19OnTileDataAvailableEv to i8*)] }, align 8
@.str = private unnamed_addr constant [14 x i8] c"fetcherStatus\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"groupStatus\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"groupInfo\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"INITIAL\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"SUCCESS\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"SUSPEND\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"UN_INIT\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"DB_FAIL\00", align 1

@_ZN11query_tiles10LoggerImplC1Ev = hidden unnamed_addr alias void (%"class.query_tiles::LoggerImpl"*), void (%"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImplC2Ev
@_ZN11query_tiles10LoggerImplD1Ev = hidden unnamed_addr alias void (%"class.query_tiles::LoggerImpl"*), void (%"class.query_tiles::LoggerImpl"*)* @_ZN11query_tiles10LoggerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImplC2Ev(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.query_tiles::LoggerImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %5 = bitcast %"class.query_tiles::LogSource"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %4, %"class.base::internal::LinkNodeBase"* %4, %"class.base::internal::LinkNodeBase"* %4) #9
  %6 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImplD2Ev(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.query_tiles::LoggerImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode"**
  %5 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0
  %6 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode"* %10 to %"class.base::ObserverList"**
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #9
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11query_tiles10LoggerImplD1Ev(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 -1, i32 3, i32 3
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 14
  %5 = bitcast i32* %4 to %"class.base::LinkNode"**
  %6 = getelementptr inbounds i32, i32* %2, i64 12
  %7 = bitcast i32* %6 to %"class.base::LinkNode"*
  %8 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  %9 = icmp eq %"class.base::LinkNode"* %8, %7
  br i1 %9, label %22, label %10

10:                                               ; preds = %1, %19
  %11 = phi %"class.base::LinkNode"* [ %20, %19 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %11, i64 1
  %13 = bitcast %"class.base::LinkNode"* %12 to %"class.base::ObserverList"**
  %14 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %13, align 8
  %15 = icmp eq %"class.base::ObserverList"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %13, align 8
  %17 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %17) #9
  %18 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  br label %19

19:                                               ; preds = %16, %10
  %20 = phi %"class.base::LinkNode"* [ %11, %10 ], [ %18, %16 ]
  %21 = icmp eq %"class.base::LinkNode"* %20, %7
  br i1 %21, label %22, label %10

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds i32, i32* %2, i64 6
  %24 = bitcast i32* %23 to %"class.base::internal::UncheckedObserverAdapter"**
  %25 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %24, align 8
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %25 to i64
  %29 = getelementptr inbounds i32, i32* %2, i64 8
  %30 = bitcast i32* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %22, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImplD0Ev(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.query_tiles::LoggerImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode"**
  %5 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0
  %6 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode"* %10 to %"class.base::ObserverList"**
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #9
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %20, %24
  %30 = bitcast %"class.query_tiles::LoggerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11query_tiles10LoggerImplD0Ev(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 -1, i32 3, i32 3
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [6 x i8*] }, { [10 x i8*], [6 x i8*] }* @_ZTVN11query_tiles10LoggerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 14
  %5 = bitcast i32* %4 to %"class.base::LinkNode"**
  %6 = getelementptr inbounds i32, i32* %2, i64 12
  %7 = bitcast i32* %6 to %"class.base::LinkNode"*
  %8 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  %9 = icmp eq %"class.base::LinkNode"* %8, %7
  br i1 %9, label %22, label %10

10:                                               ; preds = %1, %19
  %11 = phi %"class.base::LinkNode"* [ %20, %19 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %11, i64 1
  %13 = bitcast %"class.base::LinkNode"* %12 to %"class.base::ObserverList"**
  %14 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %13, align 8
  %15 = icmp eq %"class.base::ObserverList"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %13, align 8
  %17 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %17) #9
  %18 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  br label %19

19:                                               ; preds = %16, %10
  %20 = phi %"class.base::LinkNode"* [ %11, %10 ], [ %18, %16 ]
  %21 = icmp eq %"class.base::LinkNode"* %20, %7
  br i1 %21, label %22, label %10

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds i32, i32* %2, i64 6
  %24 = bitcast i32* %23 to %"class.base::internal::UncheckedObserverAdapter"**
  %25 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %24, align 8
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %25 to i64
  %29 = getelementptr inbounds i32, i32* %2, i64 8
  %30 = bitcast i32* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %22, %27
  %33 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11query_tiles10LoggerImpl12SetLogSourceEPNS_9LogSourceE(%"class.query_tiles::LoggerImpl"* nocapture, %"class.query_tiles::LogSource"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 2
  store %"class.query_tiles::LogSource"* %1, %"class.query_tiles::LogSource"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImpl11AddObserverEPNS_6Logger8ObserverE(%"class.query_tiles::LoggerImpl"*, %"class.query_tiles::Logger::Observer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3
  %4 = icmp eq %"class.query_tiles::Logger::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.query_tiles::Logger::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.query_tiles::Logger::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #11
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #9
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImpl14RemoveObserverEPNS_6Logger8ObserverE(%"class.query_tiles::LoggerImpl"*, %"class.query_tiles::Logger::Observer"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.query_tiles::Logger::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #9
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImpl16GetServiceStatusEv(%"class.base::Value"* noalias sret, %"class.query_tiles::LoggerImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::DictionaryValue", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #9
  %8 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %1, i64 0, i32 2
  %9 = load %"class.query_tiles::LogSource"*, %"class.query_tiles::LogSource"** %8, align 8
  %10 = icmp eq %"class.query_tiles::LogSource"* %9, null
  br i1 %10, label %90, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = bitcast %"class.query_tiles::LogSource"* %9 to i32 (%"class.query_tiles::LogSource"*)***
  %14 = load i32 (%"class.query_tiles::LogSource"*)**, i32 (%"class.query_tiles::LogSource"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.query_tiles::LogSource"*)*, i32 (%"class.query_tiles::LogSource"*)** %14, i64 2
  %16 = load i32 (%"class.query_tiles::LogSource"*)*, i32 (%"class.query_tiles::LogSource"*)** %15, align 8
  %17 = call i32 %16(%"class.query_tiles::LogSource"* nonnull %9) #9
  switch i32 %17, label %35 [
    i32 0, label %18
    i32 1, label %22
    i32 2, label %26
    i32 3, label %31
  ]

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 7, i8* %20, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7, i1 false) #9
  %21 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 0, i8* %21, align 1, !alias.scope !2
  br label %39

22:                                               ; preds = %11
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 7, i8* %24, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7, i1 false) #9
  %25 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 0, i8* %25, align 1, !alias.scope !2
  br label %39

26:                                               ; preds = %11
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 4, i8* %28, align 1, !alias.scope !2
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  store i32 1279869254, i32* %29, align 8, !alias.scope !2
  %30 = getelementptr inbounds i8, i8* %12, i64 4
  store i8 0, i8* %30, align 4, !alias.scope !2
  br label %39

31:                                               ; preds = %11
  %32 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 7, i8* %33, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 7, i1 false) #9
  %34 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 0, i8* %34, align 1, !alias.scope !2
  br label %39

35:                                               ; preds = %11
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 7, i8* %37, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7, i1 false) #9
  %38 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 0, i8* %38, align 1, !alias.scope !2
  br label %39

39:                                               ; preds = %18, %22, %26, %31, %35
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %19, %18 ], [ %23, %22 ], [ %27, %26 ], [ %32, %31 ], [ %36, %35 ]
  %41 = phi i64 [ 7, %18 ], [ 7, %22 ], [ 4, %26 ], [ 7, %31 ], [ 7, %35 ]
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %43 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13, i8* nonnull %12, i64 %41) #9
  %44 = load i8, i8* %42, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %39, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  %50 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #9
  %51 = load %"class.query_tiles::LogSource"*, %"class.query_tiles::LogSource"** %8, align 8
  %52 = bitcast %"class.query_tiles::LogSource"* %51 to i32 (%"class.query_tiles::LogSource"*)***
  %53 = load i32 (%"class.query_tiles::LogSource"*)**, i32 (%"class.query_tiles::LogSource"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.query_tiles::LogSource"*)*, i32 (%"class.query_tiles::LogSource"*)** %53, i64 3
  %55 = load i32 (%"class.query_tiles::LogSource"*)*, i32 (%"class.query_tiles::LogSource"*)** %54, align 8
  %56 = call i32 %55(%"class.query_tiles::LogSource"* %51) #9
  switch i32 %56, label %75 [
    i32 0, label %57
    i32 1, label %61
    i32 3, label %65
    i32 2, label %71
  ]

57:                                               ; preds = %49
  %58 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 7, i8* %59, align 1, !alias.scope !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7, i1 false) #9
  %60 = getelementptr inbounds i8, i8* %50, i64 7
  store i8 0, i8* %60, align 1, !alias.scope !5
  br label %79

61:                                               ; preds = %49
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 7, i8* %63, align 1, !alias.scope !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 7, i1 false) #9
  %64 = getelementptr inbounds i8, i8* %50, i64 7
  store i8 0, i8* %64, align 1, !alias.scope !5
  br label %79

65:                                               ; preds = %49
  %66 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  store i8 8, i8* %67, align 1, !alias.scope !5
  %68 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  store i64 6000285956372909902, i64* %68, align 8, !alias.scope !5
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast i64* %69 to i8*
  store i8 0, i8* %70, align 8, !alias.scope !5
  br label %79

71:                                               ; preds = %49
  %72 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 7, i8* %73, align 1, !alias.scope !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7, i1 false) #9
  %74 = getelementptr inbounds i8, i8* %50, i64 7
  store i8 0, i8* %74, align 1, !alias.scope !5
  br label %79

75:                                               ; preds = %49
  %76 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 7, i8* %77, align 1, !alias.scope !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7, i1 false) #9
  %78 = getelementptr inbounds i8, i8* %50, i64 7
  store i8 0, i8* %78, align 1, !alias.scope !5
  br label %79

79:                                               ; preds = %57, %61, %65, %71, %75
  %80 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %58, %57 ], [ %62, %61 ], [ %66, %65 ], [ %72, %71 ], [ %76, %75 ]
  %81 = phi i64 [ 7, %57 ], [ 7, %61 ], [ 8, %65 ], [ 7, %71 ], [ 7, %75 ]
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %83 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11, i8* nonnull %50, i64 %81) #9
  %84 = load i8, i8* %82, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %79, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #9
  br label %90

90:                                               ; preds = %2, %89
  %91 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %0, %"class.base::Value"* nonnull dereferenceable(32) %91) #9
  %92 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %92) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #5

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImpl11GetTileDataEv(%"class.base::Value"* noalias sret, %"class.query_tiles::LoggerImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::DictionaryValue", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  %6 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #9
  %7 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %1, i64 0, i32 2
  %8 = load %"class.query_tiles::LogSource"*, %"class.query_tiles::LogSource"** %7, align 8
  %9 = icmp eq %"class.query_tiles::LogSource"* %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.query_tiles::LogSource"* %8 to %"struct.query_tiles::TileGroup"* (%"class.query_tiles::LogSource"*)***
  %12 = load %"struct.query_tiles::TileGroup"* (%"class.query_tiles::LogSource"*)**, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::LogSource"*)*** %11, align 8
  %13 = getelementptr inbounds %"struct.query_tiles::TileGroup"* (%"class.query_tiles::LogSource"*)*, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::LogSource"*)** %12, i64 4
  %14 = load %"struct.query_tiles::TileGroup"* (%"class.query_tiles::LogSource"*)*, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::LogSource"*)** %13, align 8
  %15 = call %"struct.query_tiles::TileGroup"* %14(%"class.query_tiles::LogSource"* nonnull %8) #9
  %16 = icmp eq %"struct.query_tiles::TileGroup"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  call void @_ZN11query_tiles9TileGroup11DebugStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.query_tiles::TileGroup"* nonnull %15) #9
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = select i1 %22, i8* %24, i8* %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %21 to i64
  %29 = select i1 %22, i64 %27, i64 %28
  %30 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9, i8* %25, i64 %29) #9
  %31 = load i8, i8* %20, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %17
  %34 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %17, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br label %36

36:                                               ; preds = %35, %10, %2
  %37 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %0, %"class.base::Value"* nonnull dereferenceable(32) %37) #9
  %38 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret void
}

declare void @_ZN11query_tiles9TileGroup11DebugStringEv(%"class.std::__1::basic_string"* sret, %"struct.query_tiles::TileGroup"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImpl22OnServiceStatusChangedEv(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Value", align 8
  %3 = alloca %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %348, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.base::Value"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  %11 = bitcast %"class.query_tiles::LoggerImpl"* %0 to void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)***
  %12 = bitcast %"class.base::Value"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = load void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)**, void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)*** %11, align 8
  %14 = getelementptr inbounds void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)*, void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)** %13, i64 4
  %15 = load void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)*, void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)** %14, align 8
  call void %15(%"class.base::Value"* nonnull sret %2, %"class.query_tiles::LoggerImpl"* %0) #9
  %16 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %20 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 40, i1 false)
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8, !noalias !8
  %23 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8, !noalias !8
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %24
  %26 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %26) #9
  br i1 %25, label %27, label %29

27:                                               ; preds = %9
  %28 = bitcast %"class.base::ObserverList"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #9, !alias.scope !8
  br label %69

29:                                               ; preds = %9
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %17, align 8
  %30 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %26, %"class.base::internal::LinkNodeBase"* %30) #9
  store i64 0, i64* %18, align 8
  %31 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %23 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %5 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  br label %41

41:                                               ; preds = %34, %29
  %42 = phi i64 [ %40, %34 ], [ -1, %29 ]
  store i64 %42, i64* %19, align 8
  %43 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::ObserverList"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, %42
  %52 = select i1 %51, i64 %50, i64 %42
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %69, label %54

54:                                               ; preds = %41
  %55 = inttoptr i64 %48 to %"class.base::internal::UncheckedObserverAdapter"*
  %56 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %69

60:                                               ; preds = %54, %64
  %61 = phi i64 [ %62, %64 ], [ 0, %54 ]
  %62 = add nuw i64 %61, 1
  store i64 %62, i64* %18, align 8
  %63 = icmp ult i64 %62, %52
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %56, align 8
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %65, i64 %62, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %60, label %69

69:                                               ; preds = %64, %60, %54, %41, %27
  %70 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #9
  %71 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %73 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %74 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %74) #9
  %76 = bitcast %"class.base::ObserverList"** %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #9, !alias.scope !11
  %77 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  br label %78

78:                                               ; preds = %318, %69
  %79 = phi %"class.base::ObserverList"* [ %77, %69 ], [ %316, %318 ]
  %80 = icmp eq %"class.base::ObserverList"* %79, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %78
  %82 = load i64, i64* %18, align 8
  %83 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %79, i64 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.base::ObserverList"* %79 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = ashr exact i64 %88, 3
  %90 = load i64, i64* %19, align 8
  %91 = icmp ult i64 %89, %90
  %92 = select i1 %91, i64 %89, i64 %90
  %93 = icmp eq i64 %82, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %81
  %95 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  br label %112

96:                                               ; preds = %81, %78
  %97 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  %98 = icmp eq %"class.base::ObserverList"* %97, null
  br i1 %98, label %212, label %99

99:                                               ; preds = %96
  %100 = load i64, i64* %72, align 8
  %101 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %97, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.base::ObserverList"* %97 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = ashr exact i64 %106, 3
  %108 = load i64, i64* %73, align 8
  %109 = icmp ult i64 %107, %108
  %110 = select i1 %109, i64 %107, i64 %108
  %111 = icmp eq i64 %100, %110
  br i1 %111, label %121, label %112

112:                                              ; preds = %99, %94
  %113 = phi %"class.base::ObserverList"* [ %95, %94 ], [ %97, %99 ]
  %114 = icmp eq %"class.base::ObserverList"* %79, %113
  %115 = load i64, i64* %18, align 8
  %116 = load i64, i64* %72, align 8
  %117 = icmp eq i64 %115, %116
  %118 = and i1 %114, %117
  br i1 %118, label %119, label %306

119:                                              ; preds = %112
  %120 = icmp eq %"class.base::ObserverList"* %79, null
  br i1 %120, label %212, label %121

121:                                              ; preds = %99, %119
  %122 = phi %"class.base::ObserverList"* [ %79, %119 ], [ %97, %99 ]
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 1
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 1, i32 0, i32 0, i32 1
  %125 = bitcast %"class.base::internal::LinkNodeBase"** %124 to %"class.base::LinkNode"**
  %126 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %125, align 8
  %127 = bitcast %"class.base::LinkedList"* %123 to %"class.base::LinkNode"**
  %128 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %127, align 8
  %129 = icmp eq %"class.base::LinkNode"* %126, %128
  br i1 %129, label %130, label %208

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %131, align 8
  %133 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 0, i32 0, i32 1
  %134 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  %135 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %134
  br i1 %135, label %144, label %136

136:                                              ; preds = %130, %141
  %137 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %141 ], [ %132, %130 ]
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %134
  br i1 %143, label %208, label %136

144:                                              ; preds = %136, %130
  %145 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %130 ], [ %137, %136 ]
  %146 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %145 to i64
  %147 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %145, %134
  br i1 %147, label %208, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 1
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %149, %134
  br i1 %150, label %203, label %151

151:                                              ; preds = %148
  %152 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 -2, i32 0
  %153 = ptrtoint i8** %152 to i64
  %154 = sub i64 %153, %146
  %155 = lshr i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %151, %172
  %160 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %174, %172 ], [ %149, %151 ]
  %161 = phi i64 [ %173, %172 ], [ %146, %151 ]
  %162 = phi i64 [ %175, %172 ], [ %157, %151 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %159
  %167 = ptrtoint i8* %164 to i64
  %168 = inttoptr i64 %161 to %"class.base::internal::UncheckedObserverAdapter"*
  %169 = inttoptr i64 %161 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 1
  %171 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %170 to i64
  br label %172

172:                                              ; preds = %166, %159
  %173 = phi i64 [ %161, %159 ], [ %171, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %175 = add i64 %162, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %159, !llvm.loop !14

177:                                              ; preds = %172, %151
  %178 = phi i64 [ undef, %151 ], [ %173, %172 ]
  %179 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %149, %151 ], [ %174, %172 ]
  %180 = phi i64 [ %146, %151 ], [ %173, %172 ]
  %181 = icmp ult i64 %154, 24
  br i1 %181, label %199, label %182

182:                                              ; preds = %177, %409
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %411, %409 ], [ %179, %177 ]
  %184 = phi i64 [ %410, %409 ], [ %180, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %194, label %188

188:                                              ; preds = %182
  %189 = ptrtoint i8* %186 to i64
  %190 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = inttoptr i64 %184 to i64*
  store i64 %189, i64* %191, align 8
  %192 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 1
  %193 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %192 to i64
  br label %194

194:                                              ; preds = %188, %182
  %195 = phi i64 [ %184, %182 ], [ %193, %188 ]
  %196 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %387, label %381

199:                                              ; preds = %409, %177
  %200 = phi i64 [ %178, %177 ], [ %410, %409 ]
  %201 = inttoptr i64 %200 to %"class.base::internal::UncheckedObserverAdapter"*
  %202 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  br label %203

203:                                              ; preds = %199, %148
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %148 ], [ %202, %199 ]
  %205 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %148 ], [ %201, %199 ]
  %206 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %205, %204
  br i1 %206, label %208, label %207

207:                                              ; preds = %203
  store %"class.base::internal::UncheckedObserverAdapter"* %205, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  br label %208

208:                                              ; preds = %141, %207, %203, %144, %121
  %209 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  %210 = icmp eq %"class.base::ObserverList"* %209, null
  br i1 %210, label %212, label %211

211:                                              ; preds = %208
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %71, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %74) #9
  br label %212

212:                                              ; preds = %96, %119, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #9
  %213 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %214 = icmp eq %"class.base::ObserverList"* %213, null
  br i1 %214, label %305, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 1
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 1, i32 0, i32 0, i32 1
  %218 = bitcast %"class.base::internal::LinkNodeBase"** %217 to %"class.base::LinkNode"**
  %219 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %218, align 8
  %220 = bitcast %"class.base::LinkedList"* %216 to %"class.base::LinkNode"**
  %221 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %220, align 8
  %222 = icmp eq %"class.base::LinkNode"* %219, %221
  br i1 %222, label %223, label %301

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %224, align 8
  %226 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 0, i32 0, i32 1
  %227 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  %228 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %227
  br i1 %228, label %237, label %229

229:                                              ; preds = %223, %234
  %230 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %234 ], [ %225, %223 ]
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = icmp eq i8* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %227
  br i1 %236, label %301, label %229

237:                                              ; preds = %229, %223
  %238 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %223 ], [ %230, %229 ]
  %239 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %238 to i64
  %240 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %238, %227
  br i1 %240, label %301, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 1
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %242, %227
  br i1 %243, label %296, label %244

244:                                              ; preds = %241
  %245 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 -2, i32 0
  %246 = ptrtoint i8** %245 to i64
  %247 = sub i64 %246, %239
  %248 = lshr i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %270, label %252

252:                                              ; preds = %244, %265
  %253 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %267, %265 ], [ %242, %244 ]
  %254 = phi i64 [ %266, %265 ], [ %239, %244 ]
  %255 = phi i64 [ %268, %265 ], [ %250, %244 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 0, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = icmp eq i8* %257, null
  br i1 %258, label %265, label %259

259:                                              ; preds = %252
  %260 = ptrtoint i8* %257 to i64
  %261 = inttoptr i64 %254 to %"class.base::internal::UncheckedObserverAdapter"*
  %262 = inttoptr i64 %254 to i64*
  store i64 %260, i64* %262, align 8
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 1
  %264 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %263 to i64
  br label %265

265:                                              ; preds = %259, %252
  %266 = phi i64 [ %254, %252 ], [ %264, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %268 = add i64 %255, -1
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %270, label %252, !llvm.loop !16

270:                                              ; preds = %265, %244
  %271 = phi i64 [ undef, %244 ], [ %266, %265 ]
  %272 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %242, %244 ], [ %267, %265 ]
  %273 = phi i64 [ %239, %244 ], [ %266, %265 ]
  %274 = icmp ult i64 %247, 24
  br i1 %274, label %292, label %275

275:                                              ; preds = %270, %377
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %379, %377 ], [ %272, %270 ]
  %277 = phi i64 [ %378, %377 ], [ %273, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %287, label %281

281:                                              ; preds = %275
  %282 = ptrtoint i8* %279 to i64
  %283 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = inttoptr i64 %277 to i64*
  store i64 %282, i64* %284, align 8
  %285 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 1
  %286 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %285 to i64
  br label %287

287:                                              ; preds = %281, %275
  %288 = phi i64 [ %277, %275 ], [ %286, %281 ]
  %289 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %355, label %349

292:                                              ; preds = %377, %270
  %293 = phi i64 [ %271, %270 ], [ %378, %377 ]
  %294 = inttoptr i64 %293 to %"class.base::internal::UncheckedObserverAdapter"*
  %295 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  br label %296

296:                                              ; preds = %292, %241
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %241 ], [ %295, %292 ]
  %298 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %241 ], [ %294, %292 ]
  %299 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %298, %297
  br i1 %299, label %301, label %300

300:                                              ; preds = %296
  store %"class.base::internal::UncheckedObserverAdapter"* %298, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  br label %301

301:                                              ; preds = %234, %300, %296, %237, %215
  %302 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %303 = icmp eq %"class.base::ObserverList"* %302, null
  br i1 %303, label %305, label %304

304:                                              ; preds = %301
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %17, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %26) #9
  br label %305

305:                                              ; preds = %212, %301, %304
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  br label %348

306:                                              ; preds = %112
  %307 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %79, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %307, align 8
  %309 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %308, i64 %115
  %310 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %309 to %"class.query_tiles::Logger::Observer"**
  %311 = load %"class.query_tiles::Logger::Observer"*, %"class.query_tiles::Logger::Observer"** %310, align 8
  %312 = bitcast %"class.query_tiles::Logger::Observer"* %311 to void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)***
  %313 = load void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)**, void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)*, void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)** %313, i64 2
  %315 = load void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)*, void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)** %314, align 8
  call void %315(%"class.query_tiles::Logger::Observer"* %311, %"class.base::Value"* nonnull dereferenceable(32) %2) #9
  %316 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %317 = icmp eq %"class.base::ObserverList"* %316, null
  br i1 %317, label %318, label %319

318:                                              ; preds = %343, %339, %306, %319, %333
  br label %78

319:                                              ; preds = %306
  %320 = load i64, i64* %18, align 8
  %321 = add i64 %320, 1
  store i64 %321, i64* %18, align 8
  %322 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %316, i64 0, i32 0, i32 0, i32 1
  %323 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.base::ObserverList"* %316 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = sub i64 %324, %326
  %328 = ashr exact i64 %327, 3
  %329 = load i64, i64* %19, align 8
  %330 = icmp ult i64 %328, %329
  %331 = select i1 %330, i64 %328, i64 %329
  %332 = icmp ult i64 %321, %331
  br i1 %332, label %333, label %318

333:                                              ; preds = %319
  %334 = inttoptr i64 %326 to %"class.base::internal::UncheckedObserverAdapter"*
  %335 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %316, i64 0, i32 0, i32 0, i32 0
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %321, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = icmp eq i8* %337, null
  br i1 %338, label %339, label %318

339:                                              ; preds = %333, %343
  %340 = phi i64 [ %341, %343 ], [ %321, %333 ]
  %341 = add nuw i64 %340, 1
  store i64 %341, i64* %18, align 8
  %342 = icmp ult i64 %341, %331
  br i1 %342, label %343, label %318

343:                                              ; preds = %339
  %344 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %335, align 8
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 %341, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %339, label %318

348:                                              ; preds = %1, %305
  ret void

349:                                              ; preds = %287
  %350 = ptrtoint i8* %290 to i64
  %351 = inttoptr i64 %288 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %288 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %287
  %356 = phi i64 [ %288, %287 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 2, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 3, i32 0
  %369 = load i8*, i8** %368, align 8
  %370 = icmp eq i8* %369, null
  br i1 %370, label %377, label %371

371:                                              ; preds = %366
  %372 = ptrtoint i8* %369 to i64
  %373 = inttoptr i64 %367 to %"class.base::internal::UncheckedObserverAdapter"*
  %374 = inttoptr i64 %367 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %373, i64 1
  %376 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %375 to i64
  br label %377

377:                                              ; preds = %371, %366
  %378 = phi i64 [ %367, %366 ], [ %376, %371 ]
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 4
  %380 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %379, %227
  br i1 %380, label %292, label %275

381:                                              ; preds = %194
  %382 = ptrtoint i8* %197 to i64
  %383 = inttoptr i64 %195 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %195 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %194
  %388 = phi i64 [ %195, %194 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 2, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 3, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = icmp eq i8* %401, null
  br i1 %402, label %409, label %403

403:                                              ; preds = %398
  %404 = ptrtoint i8* %401 to i64
  %405 = inttoptr i64 %399 to %"class.base::internal::UncheckedObserverAdapter"*
  %406 = inttoptr i64 %399 to i64*
  store i64 %404, i64* %406, align 8
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %405, i64 1
  %408 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %407 to i64
  br label %409

409:                                              ; preds = %403, %398
  %410 = phi i64 [ %399, %398 ], [ %408, %403 ]
  %411 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 4
  %412 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %411, %134
  br i1 %412, label %199, label %182
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11query_tiles10LoggerImpl22OnServiceStatusChangedEv(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 -1, i32 3, i32 3
  %3 = bitcast i32* %2 to %"class.query_tiles::LoggerImpl"*
  tail call void @_ZN11query_tiles10LoggerImpl22OnServiceStatusChangedEv(%"class.query_tiles::LoggerImpl"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles10LoggerImpl19OnTileDataAvailableEv(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Value", align 8
  %3 = alloca %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %348, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.base::Value"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  %11 = bitcast %"class.query_tiles::LoggerImpl"* %0 to void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)***
  %12 = bitcast %"class.base::Value"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = load void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)**, void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)*** %11, align 8
  %14 = getelementptr inbounds void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)*, void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)** %13, i64 5
  %15 = load void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)*, void (%"class.base::Value"*, %"class.query_tiles::LoggerImpl"*)** %14, align 8
  call void %15(%"class.base::Value"* nonnull sret %2, %"class.query_tiles::LoggerImpl"* %0) #9
  %16 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %20 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 40, i1 false)
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8, !noalias !17
  %23 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8, !noalias !17
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %24
  %26 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %26) #9
  br i1 %25, label %27, label %29

27:                                               ; preds = %9
  %28 = bitcast %"class.base::ObserverList"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #9, !alias.scope !17
  br label %69

29:                                               ; preds = %9
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %17, align 8
  %30 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %26, %"class.base::internal::LinkNodeBase"* %30) #9
  store i64 0, i64* %18, align 8
  %31 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 0, i32 3, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %23 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %5 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  br label %41

41:                                               ; preds = %34, %29
  %42 = phi i64 [ %40, %34 ], [ -1, %29 ]
  store i64 %42, i64* %19, align 8
  %43 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::ObserverList"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, %42
  %52 = select i1 %51, i64 %50, i64 %42
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %69, label %54

54:                                               ; preds = %41
  %55 = inttoptr i64 %48 to %"class.base::internal::UncheckedObserverAdapter"*
  %56 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %69

60:                                               ; preds = %54, %64
  %61 = phi i64 [ %62, %64 ], [ 0, %54 ]
  %62 = add nuw i64 %61, 1
  store i64 %62, i64* %18, align 8
  %63 = icmp ult i64 %62, %52
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %56, align 8
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %65, i64 %62, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %60, label %69

69:                                               ; preds = %64, %60, %54, %41, %27
  %70 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #9
  %71 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %73 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %74 = getelementptr inbounds %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.base::ObserverList<query_tiles::Logger::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %74) #9
  %76 = bitcast %"class.base::ObserverList"** %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #9, !alias.scope !20
  %77 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  br label %78

78:                                               ; preds = %318, %69
  %79 = phi %"class.base::ObserverList"* [ %77, %69 ], [ %316, %318 ]
  %80 = icmp eq %"class.base::ObserverList"* %79, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %78
  %82 = load i64, i64* %18, align 8
  %83 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %79, i64 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.base::ObserverList"* %79 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = ashr exact i64 %88, 3
  %90 = load i64, i64* %19, align 8
  %91 = icmp ult i64 %89, %90
  %92 = select i1 %91, i64 %89, i64 %90
  %93 = icmp eq i64 %82, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %81
  %95 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  br label %112

96:                                               ; preds = %81, %78
  %97 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  %98 = icmp eq %"class.base::ObserverList"* %97, null
  br i1 %98, label %212, label %99

99:                                               ; preds = %96
  %100 = load i64, i64* %72, align 8
  %101 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %97, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.base::ObserverList"* %97 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = ashr exact i64 %106, 3
  %108 = load i64, i64* %73, align 8
  %109 = icmp ult i64 %107, %108
  %110 = select i1 %109, i64 %107, i64 %108
  %111 = icmp eq i64 %100, %110
  br i1 %111, label %121, label %112

112:                                              ; preds = %99, %94
  %113 = phi %"class.base::ObserverList"* [ %95, %94 ], [ %97, %99 ]
  %114 = icmp eq %"class.base::ObserverList"* %79, %113
  %115 = load i64, i64* %18, align 8
  %116 = load i64, i64* %72, align 8
  %117 = icmp eq i64 %115, %116
  %118 = and i1 %114, %117
  br i1 %118, label %119, label %306

119:                                              ; preds = %112
  %120 = icmp eq %"class.base::ObserverList"* %79, null
  br i1 %120, label %212, label %121

121:                                              ; preds = %99, %119
  %122 = phi %"class.base::ObserverList"* [ %79, %119 ], [ %97, %99 ]
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 1
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 1, i32 0, i32 0, i32 1
  %125 = bitcast %"class.base::internal::LinkNodeBase"** %124 to %"class.base::LinkNode"**
  %126 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %125, align 8
  %127 = bitcast %"class.base::LinkedList"* %123 to %"class.base::LinkNode"**
  %128 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %127, align 8
  %129 = icmp eq %"class.base::LinkNode"* %126, %128
  br i1 %129, label %130, label %208

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %131, align 8
  %133 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %122, i64 0, i32 0, i32 0, i32 1
  %134 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  %135 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %134
  br i1 %135, label %144, label %136

136:                                              ; preds = %130, %141
  %137 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %141 ], [ %132, %130 ]
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 1
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %134
  br i1 %143, label %208, label %136

144:                                              ; preds = %136, %130
  %145 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %130 ], [ %137, %136 ]
  %146 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %145 to i64
  %147 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %145, %134
  br i1 %147, label %208, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 1
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %149, %134
  br i1 %150, label %203, label %151

151:                                              ; preds = %148
  %152 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 -2, i32 0
  %153 = ptrtoint i8** %152 to i64
  %154 = sub i64 %153, %146
  %155 = lshr i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %151, %172
  %160 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %174, %172 ], [ %149, %151 ]
  %161 = phi i64 [ %173, %172 ], [ %146, %151 ]
  %162 = phi i64 [ %175, %172 ], [ %157, %151 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %159
  %167 = ptrtoint i8* %164 to i64
  %168 = inttoptr i64 %161 to %"class.base::internal::UncheckedObserverAdapter"*
  %169 = inttoptr i64 %161 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 1
  %171 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %170 to i64
  br label %172

172:                                              ; preds = %166, %159
  %173 = phi i64 [ %161, %159 ], [ %171, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %175 = add i64 %162, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %159, !llvm.loop !23

177:                                              ; preds = %172, %151
  %178 = phi i64 [ undef, %151 ], [ %173, %172 ]
  %179 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %149, %151 ], [ %174, %172 ]
  %180 = phi i64 [ %146, %151 ], [ %173, %172 ]
  %181 = icmp ult i64 %154, 24
  br i1 %181, label %199, label %182

182:                                              ; preds = %177, %409
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %411, %409 ], [ %179, %177 ]
  %184 = phi i64 [ %410, %409 ], [ %180, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %194, label %188

188:                                              ; preds = %182
  %189 = ptrtoint i8* %186 to i64
  %190 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = inttoptr i64 %184 to i64*
  store i64 %189, i64* %191, align 8
  %192 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 1
  %193 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %192 to i64
  br label %194

194:                                              ; preds = %188, %182
  %195 = phi i64 [ %184, %182 ], [ %193, %188 ]
  %196 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %387, label %381

199:                                              ; preds = %409, %177
  %200 = phi i64 [ %178, %177 ], [ %410, %409 ]
  %201 = inttoptr i64 %200 to %"class.base::internal::UncheckedObserverAdapter"*
  %202 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  br label %203

203:                                              ; preds = %199, %148
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %148 ], [ %202, %199 ]
  %205 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %148 ], [ %201, %199 ]
  %206 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %205, %204
  br i1 %206, label %208, label %207

207:                                              ; preds = %203
  store %"class.base::internal::UncheckedObserverAdapter"* %205, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  br label %208

208:                                              ; preds = %141, %207, %203, %144, %121
  %209 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %71, align 8
  %210 = icmp eq %"class.base::ObserverList"* %209, null
  br i1 %210, label %212, label %211

211:                                              ; preds = %208
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %71, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %74) #9
  br label %212

212:                                              ; preds = %96, %119, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #9
  %213 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %214 = icmp eq %"class.base::ObserverList"* %213, null
  br i1 %214, label %305, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 1
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 1, i32 0, i32 0, i32 1
  %218 = bitcast %"class.base::internal::LinkNodeBase"** %217 to %"class.base::LinkNode"**
  %219 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %218, align 8
  %220 = bitcast %"class.base::LinkedList"* %216 to %"class.base::LinkNode"**
  %221 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %220, align 8
  %222 = icmp eq %"class.base::LinkNode"* %219, %221
  br i1 %222, label %223, label %301

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %224, align 8
  %226 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %213, i64 0, i32 0, i32 0, i32 1
  %227 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  %228 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %227
  br i1 %228, label %237, label %229

229:                                              ; preds = %223, %234
  %230 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %234 ], [ %225, %223 ]
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = icmp eq i8* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 1
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %227
  br i1 %236, label %301, label %229

237:                                              ; preds = %229, %223
  %238 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %223 ], [ %230, %229 ]
  %239 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %238 to i64
  %240 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %238, %227
  br i1 %240, label %301, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 1
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %242, %227
  br i1 %243, label %296, label %244

244:                                              ; preds = %241
  %245 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 -2, i32 0
  %246 = ptrtoint i8** %245 to i64
  %247 = sub i64 %246, %239
  %248 = lshr i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %270, label %252

252:                                              ; preds = %244, %265
  %253 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %267, %265 ], [ %242, %244 ]
  %254 = phi i64 [ %266, %265 ], [ %239, %244 ]
  %255 = phi i64 [ %268, %265 ], [ %250, %244 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 0, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = icmp eq i8* %257, null
  br i1 %258, label %265, label %259

259:                                              ; preds = %252
  %260 = ptrtoint i8* %257 to i64
  %261 = inttoptr i64 %254 to %"class.base::internal::UncheckedObserverAdapter"*
  %262 = inttoptr i64 %254 to i64*
  store i64 %260, i64* %262, align 8
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 1
  %264 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %263 to i64
  br label %265

265:                                              ; preds = %259, %252
  %266 = phi i64 [ %254, %252 ], [ %264, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %268 = add i64 %255, -1
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %270, label %252, !llvm.loop !24

270:                                              ; preds = %265, %244
  %271 = phi i64 [ undef, %244 ], [ %266, %265 ]
  %272 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %242, %244 ], [ %267, %265 ]
  %273 = phi i64 [ %239, %244 ], [ %266, %265 ]
  %274 = icmp ult i64 %247, 24
  br i1 %274, label %292, label %275

275:                                              ; preds = %270, %377
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %379, %377 ], [ %272, %270 ]
  %277 = phi i64 [ %378, %377 ], [ %273, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %287, label %281

281:                                              ; preds = %275
  %282 = ptrtoint i8* %279 to i64
  %283 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = inttoptr i64 %277 to i64*
  store i64 %282, i64* %284, align 8
  %285 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 1
  %286 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %285 to i64
  br label %287

287:                                              ; preds = %281, %275
  %288 = phi i64 [ %277, %275 ], [ %286, %281 ]
  %289 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %355, label %349

292:                                              ; preds = %377, %270
  %293 = phi i64 [ %271, %270 ], [ %378, %377 ]
  %294 = inttoptr i64 %293 to %"class.base::internal::UncheckedObserverAdapter"*
  %295 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  br label %296

296:                                              ; preds = %292, %241
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %241 ], [ %295, %292 ]
  %298 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %241 ], [ %294, %292 ]
  %299 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %298, %297
  br i1 %299, label %301, label %300

300:                                              ; preds = %296
  store %"class.base::internal::UncheckedObserverAdapter"* %298, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  br label %301

301:                                              ; preds = %234, %300, %296, %237, %215
  %302 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %303 = icmp eq %"class.base::ObserverList"* %302, null
  br i1 %303, label %305, label %304

304:                                              ; preds = %301
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %17, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %26) #9
  br label %305

305:                                              ; preds = %212, %301, %304
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  br label %348

306:                                              ; preds = %112
  %307 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %79, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %307, align 8
  %309 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %308, i64 %115
  %310 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %309 to %"class.query_tiles::Logger::Observer"**
  %311 = load %"class.query_tiles::Logger::Observer"*, %"class.query_tiles::Logger::Observer"** %310, align 8
  %312 = bitcast %"class.query_tiles::Logger::Observer"* %311 to void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)***
  %313 = load void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)**, void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)*, void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)** %313, i64 3
  %315 = load void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)*, void (%"class.query_tiles::Logger::Observer"*, %"class.base::Value"*)** %314, align 8
  call void %315(%"class.query_tiles::Logger::Observer"* %311, %"class.base::Value"* nonnull dereferenceable(32) %2) #9
  %316 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %17, align 8
  %317 = icmp eq %"class.base::ObserverList"* %316, null
  br i1 %317, label %318, label %319

318:                                              ; preds = %343, %339, %306, %319, %333
  br label %78

319:                                              ; preds = %306
  %320 = load i64, i64* %18, align 8
  %321 = add i64 %320, 1
  store i64 %321, i64* %18, align 8
  %322 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %316, i64 0, i32 0, i32 0, i32 1
  %323 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.base::ObserverList"* %316 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = sub i64 %324, %326
  %328 = ashr exact i64 %327, 3
  %329 = load i64, i64* %19, align 8
  %330 = icmp ult i64 %328, %329
  %331 = select i1 %330, i64 %328, i64 %329
  %332 = icmp ult i64 %321, %331
  br i1 %332, label %333, label %318

333:                                              ; preds = %319
  %334 = inttoptr i64 %326 to %"class.base::internal::UncheckedObserverAdapter"*
  %335 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %316, i64 0, i32 0, i32 0, i32 0
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %321, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = icmp eq i8* %337, null
  br i1 %338, label %339, label %318

339:                                              ; preds = %333, %343
  %340 = phi i64 [ %341, %343 ], [ %321, %333 ]
  %341 = add nuw i64 %340, 1
  store i64 %341, i64* %18, align 8
  %342 = icmp ult i64 %341, %331
  br i1 %342, label %343, label %318

343:                                              ; preds = %339
  %344 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %335, align 8
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 %341, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %339, label %318

348:                                              ; preds = %1, %305
  ret void

349:                                              ; preds = %287
  %350 = ptrtoint i8* %290 to i64
  %351 = inttoptr i64 %288 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %288 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %287
  %356 = phi i64 [ %288, %287 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 2, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 3, i32 0
  %369 = load i8*, i8** %368, align 8
  %370 = icmp eq i8* %369, null
  br i1 %370, label %377, label %371

371:                                              ; preds = %366
  %372 = ptrtoint i8* %369 to i64
  %373 = inttoptr i64 %367 to %"class.base::internal::UncheckedObserverAdapter"*
  %374 = inttoptr i64 %367 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %373, i64 1
  %376 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %375 to i64
  br label %377

377:                                              ; preds = %371, %366
  %378 = phi i64 [ %367, %366 ], [ %376, %371 ]
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 4
  %380 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %379, %227
  br i1 %380, label %292, label %275

381:                                              ; preds = %194
  %382 = ptrtoint i8* %197 to i64
  %383 = inttoptr i64 %195 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %195 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %194
  %388 = phi i64 [ %195, %194 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 2, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 3, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = icmp eq i8* %401, null
  br i1 %402, label %409, label %403

403:                                              ; preds = %398
  %404 = ptrtoint i8* %401 to i64
  %405 = inttoptr i64 %399 to %"class.base::internal::UncheckedObserverAdapter"*
  %406 = inttoptr i64 %399 to i64*
  store i64 %404, i64* %406, align 8
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %405, i64 1
  %408 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %407 to i64
  br label %409

409:                                              ; preds = %403, %398
  %410 = phi i64 [ %399, %398 ], [ %408, %403 ]
  %411 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 4
  %412 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %411, %134
  br i1 %412, label %199, label %182
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11query_tiles10LoggerImpl19OnTileDataAvailableEv(%"class.query_tiles::LoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::LoggerImpl", %"class.query_tiles::LoggerImpl"* %0, i64 -1, i32 3, i32 3
  %3 = bitcast i32* %2 to %"class.query_tiles::LoggerImpl"*
  tail call void @_ZN11query_tiles10LoggerImpl19OnTileDataAvailableEv(%"class.query_tiles::LoggerImpl"* %3)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11query_tiles12_GLOBAL__N_121FetcherStatusToStringE21TileInfoRequestStatus: argument 0"}
!4 = distinct !{!4, !"_ZN11query_tiles12_GLOBAL__N_121FetcherStatusToStringE21TileInfoRequestStatus"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN11query_tiles12_GLOBAL__N_119GroupStatusToStringE15TileGroupStatus: argument 0"}
!7 = distinct !{!7, !"_ZN11query_tiles12_GLOBAL__N_119GroupStatusToStringE15TileGroupStatus"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base12ObserverListIN11query_tiles6Logger8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!23 = distinct !{!23, !15}
!24 = distinct !{!24, !15}
