; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_lazy_parsing_state.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_lazy_parsing_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.257" }
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.12", i32, [4 x i8], %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.185", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.128", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.108", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110", %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.131", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.166" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.815" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CSSLazyParsingState" = type <{ %"class.blink::Member", %"class.WTF::String", %"class.blink::WeakMember.506", %"class.blink::WeakMember.301", i8, [7 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSParserContext"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakMember.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::WeakMember.301" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.253", %"class.WTF::Vector.253", i8, i32, %"class.blink::Member.264", %"class.blink::Member.266", %"class.blink::Member.268", %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::Member.274", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.276", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.282", %"class.blink::Member.284", %"class.blink::Member.243", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.287", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.218", %"class.blink::Member.302", %"class.blink::Member.218", %"class.blink::Member.218", %"class.blink::Member.218", %"class.blink::UserActionElementSet", %"class.blink::Member.311", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.318", i16, i8, %"class.blink::Member.325", %"class.blink::Member.327", %"class.blink::Member.329", %"class.blink::Member.331", %"class.blink::TextLinkColors", %"class.blink::Member.333", i8, [7 x i8], %"class.blink::HeapHashMap.335", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.218", %"class.WTF::Vector.342", %"class.blink::Member.347", %"class.blink::Member.349", i8, %"class.blink::Member.218", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.351", %"class.blink::HeapVector.353", %"class.std::__1::unique_ptr.361", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.367", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.380", %"class.WTF::Vector.382", i8, i8, %"class.std::__1::unique_ptr.387", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.393", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.401", i8, i32, %"class.blink::Member.403", %"class.blink::Member.405", %"class.blink::Member.407", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.409", %"class.WTF::HashMap.411", %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::Member.201", %"class.blink::Member.201", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.424", i8, i32, %"class.blink::Member.431", %"class.blink::Member.433", i32, %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.std::__1::unique_ptr.441", i64, %"class.std::__1::unique_ptr.447", i32, i32, %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.457", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.459", %"class.WTF::Vector.461", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.466", %"class.blink::Member.473", %"class.std::__1::unique_ptr.475", %"class.blink::Member.481", i8, i8, %"class.WTF::String", %"class.blink::Member.483", i8, [7 x i8], %"class.blink::HeapHashMap.485", %"class.blink::HeapObserverSet", %"class.blink::Member.499", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.501", i32, i8, i8, %"class.blink::WeakMember.503", %"class.blink::Member.504" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.191", %"class.blink::Member.191" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.191", %"class.blink::Member.193", %"class.blink::Member.191", %"class.blink::Member.191", %"class.blink::Member.195" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.199", %"class.blink::Member.201", %"class.blink::Member.193", %"class.blink::Member.203", %"class.blink::Member.203", %"class.blink::Member.226", %"class.blink::Member.228", %"class.blink::Member.230", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.235", %"class.blink::HeapVector.237" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.207" }
%"class.blink::HeapHashMap.207" = type { %"class.WTF::HashMap.210" }
%"class.WTF::HashMap.210" = type { %"class.WTF::HashTable.211" }
%"class.WTF::HashTable.211" = type <{ %"struct.WTF::KeyValuePair.213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.213" = type { %"class.WTF::AtomicString", %"class.blink::Member.214" }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.218", i32, %"class.blink::HeapVector" }
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.232" }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::HeapHashMap.234"* }
%"class.blink::HeapHashMap.234" = type opaque
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.237" = type { %"class.WTF::Vector.240" }
%"class.WTF::Vector.240" = type { %"class.WTF::VectorBuffer.241" }
%"class.WTF::VectorBuffer.241" = type { %"class.WTF::VectorBufferBase.242" }
%"class.WTF::VectorBufferBase.242" = type { %"class.blink::Member.243"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.246" }
%"class.blink::HeapHashMap.246" = type { %"class.WTF::HashMap.249" }
%"class.WTF::HashMap.249" = type { %"class.WTF::HashTable.250" }
%"class.WTF::HashTable.250" = type <{ %"struct.WTF::KeyValuePair.252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.252" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.257" }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.743", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.784", i32, i8, [3 x i8], %"class.blink::HeapVector.786", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.794", %"class.blink::Member.796", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.805", %"class.blink::Member.811", %"class.blink::Member.813", i8, [7 x i8] }>
%"class.blink::Supplementable.743" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.744" }
%"class.blink::HeapHashMap.744" = type { %"class.WTF::HashMap.747" }
%"class.WTF::HashMap.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"struct.WTF::KeyValuePair.750"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.750" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.759" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.751" }
%"class.blink::HeapObserverSet.751" = type { i32, [4 x i8], %"class.blink::HeapHashSet.752" }
%"class.blink::HeapHashSet.752" = type { %"class.WTF::HashSet.755" }
%"class.WTF::HashSet.755" = type { %"class.WTF::HashTable.756" }
%"class.WTF::HashTable.756" = type <{ %"class.blink::WeakMember.758"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.758" = type opaque
%"class.blink::Supplementable.759" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.760" }
%"class.blink::HeapHashMap.760" = type { %"class.WTF::HashMap.763" }
%"class.WTF::HashMap.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"struct.WTF::KeyValuePair.766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.766" = type { i8*, %"class.blink::Member.820" }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.822" }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.767, %"class.std::__1::unique_ptr.768", %"class.std::__1::unique_ptr.768", %"class.std::__1::unique_ptr.774", %"class.std::__1::unique_ptr.774", %"class.blink::Member.266", i32, [4 x i8], %"class.WTF::HashSet.780", i32, i32 }
%class.scoped_refptr.767 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.786" = type { %"class.WTF::Vector.789" }
%"class.WTF::Vector.789" = type { %"class.WTF::VectorBuffer.790" }
%"class.WTF::VectorBuffer.790" = type { %"class.WTF::VectorBufferBase.791" }
%"class.WTF::VectorBufferBase.791" = type { %"class.blink::Member.792"*, i32, i32 }
%"class.blink::Member.792" = type opaque
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.798", i32, i32 }
%"class.blink::HeapHashMap.798" = type { %"class.WTF::HashMap.801" }
%"class.WTF::HashMap.801" = type { %"class.WTF::HashTable.802" }
%"class.WTF::HashTable.802" = type <{ %"struct.WTF::KeyValuePair.804"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.804" = type opaque
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.286 }
%class.scoped_refptr.286 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.304" }
%"class.blink::HeapHashMap.304" = type { %"class.WTF::HashMap.307" }
%"class.WTF::HashMap.307" = type { %"class.WTF::HashTable.308" }
%"class.WTF::HashTable.308" = type <{ %"struct.WTF::KeyValuePair.310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.310" = type opaque
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.315" }
%"class.WTF::HashTable.315" = type <{ %"class.blink::WeakMember.317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.317" = type opaque
%"class.blink::HeapHashSet.318" = type { %"class.WTF::HashSet.321" }
%"class.WTF::HashSet.321" = type { %"class.WTF::HashTable.322" }
%"class.WTF::HashTable.322" = type <{ %"class.blink::WeakMember.324"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.324" = type opaque
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.353" = type { %"class.WTF::Vector.356" }
%"class.WTF::Vector.356" = type { %"class.WTF::VectorBuffer.357" }
%"class.WTF::VectorBuffer.357" = type { %"class.WTF::VectorBufferBase.358" }
%"class.WTF::VectorBufferBase.358" = type { %"class.blink::Member.359"*, i32, i32 }
%"class.blink::Member.359" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.367" = type { %"class.WTF::HashSet.370" }
%"class.WTF::HashSet.370" = type { %"class.WTF::HashTable.371" }
%"class.WTF::HashTable.371" = type <{ %"class.blink::WeakMember.373"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.373" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.374", i32, [4 x i8] }>
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { %"struct.std::__1::pair.377"*, i32, i32 }
%"struct.std::__1::pair.377" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.222" }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"class.blink::Member.218"*, i32, i32 }
%"class.blink::HeapVector.393" = type { %"class.WTF::Vector.396" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.blink::Member.399"*, i32, i32 }
%"class.blink::Member.399" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.201" }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.411" = type { %"class.WTF::HashTable.412" }
%"class.WTF::HashTable.412" = type <{ %"struct.WTF::KeyValuePair.415"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.415" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.301", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.292, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.292 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.293" }>
%"class.base::RefCountedThreadSafe.293" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.294 }
%class.scoped_refptr.294 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.295", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.295" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.296" }
%"struct.std::__1::atomic.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i8 }
%"class.blink::HeapHashSet.424" = type { %"class.WTF::HashSet.427" }
%"class.WTF::HashSet.427" = type { %"class.WTF::HashTable.428" }
%"class.WTF::HashTable.428" = type <{ %"class.blink::Member.430"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.430" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.466" = type { %"class.WTF::HashMap.469" }
%"class.WTF::HashMap.469" = type { %"class.WTF::HashTable.470" }
%"class.WTF::HashTable.470" = type <{ %"struct.WTF::KeyValuePair.472"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.472" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.485" = type { %"class.WTF::HashMap.488" }
%"class.WTF::HashMap.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"struct.WTF::KeyValuePair.491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.491" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.492" }
%"class.blink::HeapHashSet.492" = type { %"class.WTF::HashSet.495" }
%"class.WTF::HashSet.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"class.blink::WeakMember.498"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.498" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.201", %"class.blink::HeapHashSet.734", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.741", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.734" = type { %"class.WTF::HashSet.737" }
%"class.WTF::HashSet.737" = type { %"class.WTF::HashTable.738" }
%"class.WTF::HashTable.738" = type <{ %"class.blink::Member.740"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.740" = type opaque
%"class.blink::HeapTaskRunnerTimer.741" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.742", { i64, i64 } }
%"class.blink::WeakMember.742" = type { %"class.blink::MemberBase.502" }
%"class.blink::WeakMember.503" = type { %"class.blink::MemberBase.192" }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.4, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.189", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::Document"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.510", %"class.WTF::String", %"class.blink::HeapVector.512", %"class.blink::HeapVector.519", %"class.blink::HeapVector.527", %"class.WTF::HashMap.535", %"class.WTF::AtomicString", %"class.blink::WeakMember.540", i8, [7 x i8], %"class.blink::Member", %"class.blink::HeapHashSet.542", %"class.blink::HeapHashSet.542", %"class.blink::Member.549", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.512" = type { %"class.WTF::Vector.515" }
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"class.blink::Member.510"*, i32, i32 }
%"class.blink::HeapVector.519" = type { %"class.WTF::Vector.522" }
%"class.WTF::Vector.522" = type { %"class.WTF::VectorBuffer.523" }
%"class.WTF::VectorBuffer.523" = type { %"class.WTF::VectorBufferBase.524" }
%"class.WTF::VectorBufferBase.524" = type { %"class.blink::Member.525"*, i32, i32 }
%"class.blink::Member.525" = type opaque
%"class.blink::HeapVector.527" = type { %"class.WTF::Vector.530" }
%"class.WTF::Vector.530" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { %"class.blink::Member.533"*, i32, i32 }
%"class.blink::Member.533" = type opaque
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.539" = type opaque
%"class.blink::WeakMember.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::HeapHashSet.542" = type { %"class.WTF::HashSet.545" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"class.blink::WeakMember.548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.548" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.553", %"class.blink::HeapHashMap.553", %"class.blink::HeapHashMap.553", %"class.blink::HeapHashMap.553", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::HeapVector.560", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.633", %"class.blink::HeapVector.641", %"class.blink::HeapVector.649", %"class.blink::HeapVector.666", %"class.blink::HeapVector.674", %"class.blink::HeapVector.682", %"class.blink::HeapVector.690", %"class.WTF::Vector.697", i32, %"class.blink::Member.721" }
%"class.blink::HeapHashMap.553" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.559"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.559" = type { %"class.WTF::AtomicString", %"class.blink::Member.834" }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::HeapVector.560"* }
%"class.blink::HeapVector.560" = type { %"class.WTF::Vector.563" }
%"class.WTF::Vector.563" = type { %"class.WTF::VectorBuffer.564" }
%"class.WTF::VectorBuffer.564" = type { %"class.WTF::VectorBufferBase.565" }
%"class.WTF::VectorBufferBase.565" = type { %"class.blink::Member.566"*, i32, i32 }
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.570", i64, [4 x i32] }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.597", %"class.blink::Member.601" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.606", %"class.WTF::HashMap.606", %"class.WTF::HashMap.606", %"class.WTF::HashMap.611", %class.scoped_refptr.616, %class.scoped_refptr.627, %class.scoped_refptr.626, %"class.WTF::Vector.628", %"class.WTF::Vector.628", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.606" = type { %"class.WTF::HashTable.607" }
%"class.WTF::HashTable.607" = type <{ %"struct.WTF::KeyValuePair.610"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.610" = type { %"class.WTF::AtomicString", %class.scoped_refptr.824 }
%class.scoped_refptr.824 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.617", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.623", %"union.blink::InvalidationSet::Backing.624", %"union.blink::InvalidationSet::Backing.625", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.617" = type { %"class.base::RefCounted.618" }
%"class.base::RefCounted.618" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.623" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.624" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.625" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"struct.WTF::KeyValuePair.615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.615" = type opaque
%class.scoped_refptr.616 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.626, %class.scoped_refptr.626 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.617", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.623", %"union.blink::InvalidationSet::Backing.624", %"union.blink::InvalidationSet::Backing.625", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.627 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.626 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::HeapVector.633" = type { %"class.WTF::Vector.636" }
%"class.WTF::Vector.636" = type { %"class.WTF::VectorBuffer.637" }
%"class.WTF::VectorBuffer.637" = type { %"class.WTF::VectorBufferBase.638" }
%"class.WTF::VectorBufferBase.638" = type { %"class.blink::Member.639"*, i32, i32 }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.597", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.641" = type { %"class.WTF::Vector.644" }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.blink::Member.647"*, i32, i32 }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.597" }
%"class.blink::HeapVector.649" = type { %"class.WTF::Vector.652" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.blink::Member.655"*, i32, i32 }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.657", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.657" = type { %"class.WTF::Vector.660" }
%"class.WTF::Vector.660" = type { %"class.WTF::VectorBuffer.661" }
%"class.WTF::VectorBuffer.661" = type { %"class.WTF::VectorBufferBase.662" }
%"class.WTF::VectorBufferBase.662" = type { %"class.blink::Member.663"*, i32, i32 }
%"class.blink::Member.663" = type opaque
%"class.blink::HeapVector.666" = type { %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.blink::Member.672"*, i32, i32 }
%"class.blink::Member.672" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.597" }
%"class.blink::HeapVector.674" = type { %"class.WTF::Vector.677" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679" }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::Member.680"*, i32, i32 }
%"class.blink::Member.680" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", i32, [4 x i8] }>
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector.682" = type { %"class.WTF::Vector.685" }
%"class.WTF::Vector.685" = type { %"class.WTF::VectorBuffer.686" }
%"class.WTF::VectorBuffer.686" = type { %"class.WTF::VectorBufferBase.687" }
%"class.WTF::VectorBufferBase.687" = type { %"class.blink::Member.688"*, i32, i32 }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829", %"class.blink::Member.829" }
%"class.blink::HeapVector.690" = type { %"class.WTF::Vector.693" }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695" }
%"class.WTF::VectorBufferBase.695" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.570", i32, i32 }
%"class.WTF::Vector.697" = type { %"class.WTF::VectorBuffer.698" }
%"class.WTF::VectorBuffer.698" = type { %"class.WTF::VectorBufferBase.699" }
%"class.WTF::VectorBufferBase.699" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.700, i8, [7 x i8] }>
%class.scoped_refptr.700 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.701", %"class.WTF::Vector.703" }
%"class.WTF::RefCounted.701" = type { %"class.base::RefCounted.702" }
%"class.base::RefCounted.702" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %"class.std::__1::unique_ptr.706"*, i32, i32 }
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.709", %"class.WTF::String" }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.725", %"class.blink::HeapHashMap.725", %"class.blink::HeapHashMap.725", %"class.blink::HeapHashMap.725" }
%"class.blink::HeapHashMap.725" = type { %"class.WTF::HashMap.728" }
%"class.WTF::HashMap.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"struct.WTF::KeyValuePair.731"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.731" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.857 }
%union.anon.857 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_18StyleSheetContentsEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8DocumentEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink19CSSLazyParsingStateC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_18StyleSheetContentsE = hidden unnamed_addr alias void (%"class.blink::CSSLazyParsingState"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"*, %"class.blink::StyleSheetContents"*), void (%"class.blink::CSSLazyParsingState"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"*, %"class.blink::StyleSheetContents"*)* @_ZN5blink19CSSLazyParsingStateC2EPKNS_16CSSParserContextERKN3WTF6StringEPNS_18StyleSheetContentsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSLazyParsingStateC2EPKNS_16CSSParserContextERKN3WTF6StringEPNS_18StyleSheetContentsE(%"class.blink::CSSLazyParsingState"* nocapture, %"class.blink::CSSParserContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::StyleSheetContents"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #6
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #6
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  %27 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %5, align 8
  br label %28

28:                                               ; preds = %4, %10, %25
  %29 = phi %"class.blink::CSSParserContext"* [ %1, %4 ], [ %1, %10 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::StyleSheetContents"* %3, %"class.blink::StyleSheetContents"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::Document"* null, %"class.blink::Document"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 4
  %33 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %29, i64 0, i32 13, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = icmp ne %"class.blink::Document"* %34, null
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserContext"* @_ZN5blink19CSSLazyParsingState7ContextEv(%"class.blink::CSSLazyParsingState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 0, i32 0, i32 0
  br label %44

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::WeakMember.301", %"class.blink::WeakMember.301"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %13, align 8
  %15 = tail call %"class.blink::Document"* @_ZNK5blink18StyleSheetContents16AnyOwnerDocumentEv(%"class.blink::StyleSheetContents"* %14) #6
  %16 = ptrtoint %"class.blink::Document"* %15 to i64
  %17 = bitcast %"class.blink::WeakMember.301"* %8 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.blink::Document"* %15 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #6
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  br label %24

24:                                               ; preds = %7, %20, %12
  %25 = phi %"class.blink::Document"* [ %10, %7 ], [ %23, %20 ], [ %15, %12 ]
  %26 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %26, align 8
  %28 = tail call zeroext i1 @_ZNK5blink16CSSParserContext21IsDocumentHandleEqualEPKNS_8DocumentE(%"class.blink::CSSParserContext"* %27, %"class.blink::Document"* %25) #6
  br i1 %28, label %44, label %29

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #6
  %31 = bitcast i8* %30 to %"class.blink::CSSParserContext"*
  %32 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %26, align 8
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  tail call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_8DocumentE(%"class.blink::CSSParserContext"* %31, %"class.blink::CSSParserContext"* %32, %"class.blink::Document"* %33) #6
  %34 = getelementptr inbounds i8, i8* %30, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = ptrtoint i8* %30 to i64
  %39 = bitcast %"class.blink::CSSLazyParsingState"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %29
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #6
  br label %44

44:                                               ; preds = %24, %29, %42, %5
  %45 = phi %"class.blink::CSSParserContext"** [ %6, %5 ], [ %26, %42 ], [ %26, %29 ], [ %26, %24 ]
  %46 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %45, align 8
  ret %"class.blink::CSSParserContext"* %46
}

declare %"class.blink::Document"* @_ZNK5blink18StyleSheetContents16AnyOwnerDocumentEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16CSSParserContext21IsDocumentHandleEqualEPKNS_8DocumentE(%"class.blink::CSSParserContext"*, %"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19CSSLazyParsingState5TraceEPNS_7VisitorE(%"class.blink::CSSLazyParsingState"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::WeakMember.506"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::WeakMember.506"* %3 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, i64 6
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %9, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_18StyleSheetContentsEEEvRKNS_14LivenessBrokerEPKv) #6
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::CSSLazyParsingState", %"class.blink::CSSLazyParsingState"* %0, i64 0, i32 3
  %16 = bitcast %"class.blink::WeakMember.301"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::WeakMember.301"* %15 to i8*
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %23, i64 6
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* %21, i8* %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8DocumentEEEvRKNS_14LivenessBrokerEPKv) #6
  br label %26

26:                                               ; preds = %14, %19
  %27 = bitcast %"class.blink::CSSLazyParsingState"* %0 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = inttoptr i64 %28 to %"class.blink::CSSParserContext"*
  %32 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, i64 5
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, align 8
  tail call void %36(%"class.blink::Visitor"* %1, i8* %32, i8* %32, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv) #6
  br label %37

37:                                               ; preds = %26, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_8DocumentE(%"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"*, %"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #6
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #6
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #6
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #6
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #6
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #6
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #6
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_18StyleSheetContentsEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"**
  %4 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %5 = ptrtoint %"class.blink::StyleSheetContents"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #6
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %4, i64 -1, i32 15
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"*
  tail call void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8DocumentEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"**
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = ptrtoint %"class.blink::Document"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #6
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 -1, i32 192
  %20 = bitcast %"class.blink::Member.504"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
