; ModuleID = '../../content/renderer/renderer_main_platform_delegate_linux.cc'
source_filename = "../../content/renderer/renderer_main_platform_delegate_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.content::RendererMainPlatformDelegate" = type { i8 }
%"struct.content::MainFunctionParams" = type { %"class.base::CommandLine"*, i8, %"class.base::OnceCallback"*, %"class.base::OnceCallback.15"*, %"struct.content::StartupData"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.15" = type opaque
%"struct.content::StartupData" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"struct.sandbox::policy::SandboxLinux::Options" = type { %"struct.sandbox::policy::SandboxSeccompBPF::Options", i8, i8, i8 }
%"struct.sandbox::policy::SandboxSeccompBPF::Options" = type { i8, i8, i8, i8, i8 }
%"class.base::OnceCallback.16" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.sandbox::policy::SandboxLinux" = type { i32, i8, i32, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.sandbox::syscall_broker::BrokerProcess"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.sandbox::SetuidSandboxClient"* }
%"class.sandbox::SetuidSandboxClient" = type opaque
%"class.sandbox::syscall_broker::BrokerProcess" = type opaque

@.str = private unnamed_addr constant [64 x i8] c"../../content/renderer/renderer_main_platform_delegate_linux.cc\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"linux_sandbox->seccomp_bpf_started()\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"/proc/cpuinfo\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"!base::PathExists(base::FilePath(\22/proc/cpuinfo\22))\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"fchmod(-1, 07777) == -1\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"(*__errno_location ()) == 1\00", align 1

@_ZN7content28RendererMainPlatformDelegateC1ERKNS_18MainFunctionParamsE = hidden unnamed_addr alias void (%"class.content::RendererMainPlatformDelegate"*, %"struct.content::MainFunctionParams"*), void (%"class.content::RendererMainPlatformDelegate"*, %"struct.content::MainFunctionParams"*)* @_ZN7content28RendererMainPlatformDelegateC2ERKNS_18MainFunctionParamsE
@_ZN7content28RendererMainPlatformDelegateD1Ev = hidden unnamed_addr alias void (%"class.content::RendererMainPlatformDelegate"*), void (%"class.content::RendererMainPlatformDelegate"*)* @_ZN7content28RendererMainPlatformDelegateD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content28RendererMainPlatformDelegateC2ERKNS_18MainFunctionParamsE(%"class.content::RendererMainPlatformDelegate"* nocapture, %"struct.content::MainFunctionParams"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content28RendererMainPlatformDelegateD2Ev(%"class.content::RendererMainPlatformDelegate"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content28RendererMainPlatformDelegate18PlatformInitializeEv(%"class.content::RendererMainPlatformDelegate"* nocapture) local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content28RendererMainPlatformDelegate20PlatformUninitializeEv(%"class.content::RendererMainPlatformDelegate"* nocapture) local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content28RendererMainPlatformDelegate13EnableSandboxEv(%"class.content::RendererMainPlatformDelegate"* nocapture readnone) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.sandbox::policy::SandboxLinux::Options"*
  %6 = alloca %"class.base::OnceCallback.16", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"struct.sandbox::policy::SandboxLinux::Options", %"struct.sandbox::policy::SandboxLinux::Options"* %5, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 7, i1 false) #6
  store i8 1, i8* %15, align 1
  %16 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #6
  %17 = tail call i32 @_ZN7sandbox6policy26SandboxTypeFromCommandLineERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %16) #6
  %18 = getelementptr inbounds %"class.base::OnceCallback.16", %"class.base::OnceCallback.16"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %19 = call zeroext i1 @_ZN7sandbox6policy7Sandbox10InitializeENS0_11SandboxTypeEN4base12OnceCallbackIFbNS0_12SandboxLinux7OptionsEEEERKS6_(i32 %17, %"class.base::OnceCallback.16"* nonnull %6, %"struct.sandbox::policy::SandboxLinux::Options"* nonnull dereferenceable(8) %5) #6
  %20 = getelementptr inbounds %"class.base::OnceCallback.16", %"class.base::OnceCallback.16"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #6
  %21 = call %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() #6
  %22 = call i32 @_ZN7sandbox6policy12SandboxLinux9GetStatusEv(%"class.sandbox::policy::SandboxLinux"* %21) #6
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %1
  %26 = call zeroext i1 @_ZNK7sandbox6policy12SandboxLinux19seccomp_bpf_startedEv(%"class.sandbox::policy::SandboxLinux"* %21) #6
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %27, %25, %1
  %31 = call i32 @_ZN7sandbox6policy12SandboxLinux9GetStatusEv(%"class.sandbox::policy::SandboxLinux"* %21) #6
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #6
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #6
  %36 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %8) #6
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0)) #6
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #6
  br label %40

40:                                               ; preds = %34, %37
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #6
  br label %41

41:                                               ; preds = %30, %40
  %42 = call zeroext i1 @_ZNK7sandbox6policy12SandboxLinux19seccomp_bpf_startedEv(%"class.sandbox::policy::SandboxLinux"* %21) #6
  br i1 %42, label %43, label %77

43:                                               ; preds = %41
  %44 = tail call i32* @__errno_location() #7
  store i32 0, i32* %44, align 4
  %45 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = call i32 @fchmod(i32 -1, i32 4095) #6
  %48 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp eq i32 %47, -1
  br i1 %49, label %50, label %51

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %47) #6
  %53 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 -1) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* %52, i8* %53) #6
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 64, %"class.logging::CheckOpResult"* nonnull %10) #6
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #6
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  %61 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #6
  %62 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %62, align 8
  %63 = load i32, i32* %44, align 4
  %64 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = icmp eq i32 %63, 1
  br i1 %65, label %66, label %67

66:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  store i8* null, i8** %62, align 8
  br label %76

67:                                               ; preds = %60
  %68 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %63) #6
  %69 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 1) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %68, i8* %69) #6
  %70 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  store i8* %71, i8** %62, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 65, %"class.logging::CheckOpResult"* nonnull %12) #6
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #6
  br label %76

76:                                               ; preds = %66, %67, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #6
  br label %77

77:                                               ; preds = %76, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN7sandbox6policy7Sandbox10InitializeENS0_11SandboxTypeEN4base12OnceCallbackIFbNS0_12SandboxLinux7OptionsEEEERKS6_(i32, %"class.base::OnceCallback.16"*, %"struct.sandbox::policy::SandboxLinux::Options"* dereferenceable(8)) local_unnamed_addr #3

declare i32 @_ZN7sandbox6policy26SandboxTypeFromCommandLineERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #3

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() local_unnamed_addr #3

declare i32 @_ZN7sandbox6policy12SandboxLinux9GetStatusEv(%"class.sandbox::policy::SandboxLinux"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK7sandbox6policy12SandboxLinux19seccomp_bpf_startedEv(%"class.sandbox::policy::SandboxLinux"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @fchmod(i32, i32) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
