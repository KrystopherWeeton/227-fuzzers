; ModuleID = '../../third_party/libyuv/source/rotate.cc'
source_filename = "../../third_party/libyuv/source/rotate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@cpu_info_ = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @TransposePlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = tail call i32 @InitCpuFlags() #4
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i32 [ %10, %9 ], [ %7, %6 ]
  %13 = and i32 %12, 64
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = and i32 %4, 7
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, void (i8*, i32, i8*, i32, i32)* @TransposeWx8_SSSE3, void (i8*, i32, i8*, i32, i32)* @TransposeWx8_Any_SSSE3
  br label %19

19:                                               ; preds = %11, %15
  %20 = phi void (i8*, i32, i8*, i32, i32)* [ %18, %15 ], [ @TransposeWx8_C, %11 ]
  %21 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = tail call i32 @InitCpuFlags() #4
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %19 ]
  %27 = and i32 %26, 64
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = and i32 %4, 15
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, void (i8*, i32, i8*, i32, i32)* @TransposeWx8_Fast_SSSE3, void (i8*, i32, i8*, i32, i32)* @TransposeWx8_Fast_Any_SSSE3
  br label %33

33:                                               ; preds = %25, %29
  %34 = phi void (i8*, i32, i8*, i32, i32)* [ %32, %29 ], [ %20, %25 ]
  %35 = icmp sgt i32 %5, 7
  br i1 %35, label %36, label %49

36:                                               ; preds = %33
  %37 = shl nsw i32 %1, 3
  %38 = sext i32 %37 to i64
  br label %39

39:                                               ; preds = %36, %39
  %40 = phi i32 [ %5, %36 ], [ %45, %39 ]
  %41 = phi i8* [ %0, %36 ], [ %43, %39 ]
  %42 = phi i8* [ %2, %36 ], [ %44, %39 ]
  tail call void %34(i8* %41, i32 %1, i8* %42, i32 %3, i32 %4) #4
  %43 = getelementptr inbounds i8, i8* %41, i64 %38
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = add nsw i32 %40, -8
  %46 = icmp sgt i32 %45, 7
  br i1 %46, label %39, label %47

47:                                               ; preds = %39
  %48 = and i32 %5, 7
  br label %49

49:                                               ; preds = %47, %33
  %50 = phi i8* [ %2, %33 ], [ %44, %47 ]
  %51 = phi i8* [ %0, %33 ], [ %43, %47 ]
  %52 = phi i32 [ %5, %33 ], [ %48, %47 ]
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  tail call void @TransposeWxH_C(i8* %51, i32 %1, i8* %50, i32 %3, i32 %4, i32 %52) #4
  br label %55

55:                                               ; preds = %54, %49
  ret void
}

declare void @TransposeWx8_C(i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeWx8_Any_SSSE3(i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeWx8_SSSE3(i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeWx8_Fast_Any_SSSE3(i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeWx8_Fast_SSSE3(i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeWxH_C(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @RotatePlane90(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = add nsw i32 %5, -1
  %8 = mul nsw i32 %7, %1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = sub nsw i32 0, %1
  tail call void @TransposePlane(i8* %10, i32 %11, i8* %2, i32 %3, i32 %4, i32 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @RotatePlane270(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = add nsw i32 %4, -1
  %8 = mul nsw i32 %7, %3
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %2, i64 %9
  %11 = sub nsw i32 0, %3
  tail call void @TransposePlane(i8* %0, i32 %1, i8* %10, i32 %11, i32 %4, i32 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @RotatePlane180(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = add nsw i32 %4, 63
  %8 = sext i32 %7 to i64
  %9 = tail call noalias i8* @malloc(i64 %8) #4
  %10 = ptrtoint i8* %9 to i64
  %11 = add nsw i64 %10, 63
  %12 = and i64 %11, -64
  %13 = inttoptr i64 %12 to i8*
  %14 = add nsw i32 %5, -1
  %15 = mul nsw i32 %14, %1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  %18 = mul nsw i32 %14, %3
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %2, i64 %19
  %21 = add nsw i32 %5, 1
  %22 = ashr i32 %21, 1
  %23 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %6
  %26 = tail call i32 @InitCpuFlags() #4
  br label %27

27:                                               ; preds = %6, %25
  %28 = phi i32 [ %26, %25 ], [ %23, %6 ]
  %29 = and i32 %28, 64
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = and i32 %4, 15
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, void (i8*, i8*, i32)* @MirrorRow_SSSE3, void (i8*, i8*, i32)* @MirrorRow_Any_SSSE3
  br label %35

35:                                               ; preds = %27, %31
  %36 = phi void (i8*, i8*, i32)* [ %34, %31 ], [ @MirrorRow_C, %27 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %35, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %35 ]
  %43 = and i32 %42, 1024
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %4, 31
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i8*, i8*, i32)* @MirrorRow_AVX2, void (i8*, i8*, i32)* @MirrorRow_Any_AVX2
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i8*, i8*, i32)* [ %48, %45 ], [ %36, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 32
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %4, 31
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i8*, i8*, i32)* @CopyRow_SSE2, void (i8*, i8*, i32)* @CopyRow_Any_SSE2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i8*, i8*, i32)* [ %62, %59 ], [ @CopyRow_C, %55 ]
  %65 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = tail call i32 @InitCpuFlags() #4
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ %68, %67 ], [ %65, %63 ]
  %71 = and i32 %70, 512
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = and i32 %4, 63
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, void (i8*, i8*, i32)* @CopyRow_AVX, void (i8*, i8*, i32)* @CopyRow_Any_AVX
  br label %77

77:                                               ; preds = %69, %73
  %78 = phi void (i8*, i8*, i32)* [ %76, %73 ], [ %64, %69 ]
  %79 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = tail call i32 @InitCpuFlags() #4
  br label %83

83:                                               ; preds = %77, %81
  %84 = phi i32 [ %82, %81 ], [ %79, %77 ]
  %85 = and i32 %84, 2048
  %86 = icmp eq i32 %85, 0
  %87 = select i1 %86, void (i8*, i8*, i32)* %78, void (i8*, i8*, i32)* @CopyRow_ERMS
  %88 = icmp sgt i32 %5, 0
  br i1 %88, label %89, label %106

89:                                               ; preds = %83
  %90 = sext i32 %1 to i64
  %91 = sext i32 %3 to i64
  %92 = sub nsw i64 0, %90
  %93 = sub nsw i64 0, %91
  br label %94

94:                                               ; preds = %89, %94
  %95 = phi i32 [ 0, %89 ], [ %104, %94 ]
  %96 = phi i8* [ %20, %89 ], [ %103, %94 ]
  %97 = phi i8* [ %17, %89 ], [ %102, %94 ]
  %98 = phi i8* [ %0, %89 ], [ %100, %94 ]
  %99 = phi i8* [ %2, %89 ], [ %101, %94 ]
  tail call void %87(i8* %98, i8* %13, i32 %4) #4
  tail call void %50(i8* %97, i8* %99, i32 %4) #4
  tail call void %50(i8* %13, i8* %96, i32 %4) #4
  %100 = getelementptr inbounds i8, i8* %98, i64 %90
  %101 = getelementptr inbounds i8, i8* %99, i64 %91
  %102 = getelementptr inbounds i8, i8* %97, i64 %92
  %103 = getelementptr inbounds i8, i8* %96, i64 %93
  %104 = add nuw nsw i32 %95, 1
  %105 = icmp slt i32 %104, %22
  br i1 %105, label %94, label %106

106:                                              ; preds = %94, %83
  tail call void @free(i8* %9) #4
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare void @MirrorRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @CopyRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @MirrorRow_Any_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

declare void @MirrorRow_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

declare void @MirrorRow_Any_AVX2(i8*, i8*, i32) local_unnamed_addr #1

declare void @MirrorRow_AVX2(i8*, i8*, i32) local_unnamed_addr #1

declare void @CopyRow_SSE2(i8*, i8*, i32) local_unnamed_addr #1

declare void @CopyRow_Any_SSE2(i8*, i8*, i32) local_unnamed_addr #1

declare void @CopyRow_AVX(i8*, i8*, i32) local_unnamed_addr #1

declare void @CopyRow_Any_AVX(i8*, i8*, i32) local_unnamed_addr #1

declare void @CopyRow_ERMS(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @TransposeUV(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @InitCpuFlags() #4
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %8 ]
  %15 = and i32 %14, 32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = and i32 %6, 7
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_SSE2, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_Any_SSE2
  br label %21

21:                                               ; preds = %13, %17
  %22 = phi void (i8*, i32, i8*, i32, i8*, i32, i32)* [ %20, %17 ], [ @TransposeUVWx8_C, %13 ]
  %23 = icmp sgt i32 %7, 7
  br i1 %23, label %24, label %39

24:                                               ; preds = %21
  %25 = shl nsw i32 %1, 3
  %26 = sext i32 %25 to i64
  br label %27

27:                                               ; preds = %24, %27
  %28 = phi i32 [ %7, %24 ], [ %35, %27 ]
  %29 = phi i8* [ %0, %24 ], [ %32, %27 ]
  %30 = phi i8* [ %2, %24 ], [ %33, %27 ]
  %31 = phi i8* [ %4, %24 ], [ %34, %27 ]
  tail call void %22(i8* %29, i32 %1, i8* %30, i32 %3, i8* %31, i32 %5, i32 %6) #4, !callees !2
  %32 = getelementptr inbounds i8, i8* %29, i64 %26
  %33 = getelementptr inbounds i8, i8* %30, i64 8
  %34 = getelementptr inbounds i8, i8* %31, i64 8
  %35 = add nsw i32 %28, -8
  %36 = icmp sgt i32 %35, 7
  br i1 %36, label %27, label %37

37:                                               ; preds = %27
  %38 = and i32 %7, 7
  br label %39

39:                                               ; preds = %37, %21
  %40 = phi i8* [ %4, %21 ], [ %34, %37 ]
  %41 = phi i8* [ %2, %21 ], [ %33, %37 ]
  %42 = phi i8* [ %0, %21 ], [ %32, %37 ]
  %43 = phi i32 [ %7, %21 ], [ %38, %37 ]
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %39
  tail call void @TransposeUVWxH_C(i8* %42, i32 %1, i8* %41, i32 %3, i8* %40, i32 %5, i32 %6, i32 %43) #4
  br label %46

46:                                               ; preds = %45, %39
  ret void
}

declare void @TransposeUVWx8_C(i8*, i32, i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeUVWx8_Any_SSE2(i8*, i32, i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeUVWx8_SSE2(i8*, i32, i8*, i32, i8*, i32, i32) local_unnamed_addr #1

declare void @TransposeUVWxH_C(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @RotateUV90(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = add nsw i32 %7, -1
  %10 = mul nsw i32 %9, %1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  %13 = sub nsw i32 0, %1
  %14 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = tail call i32 @InitCpuFlags() #4
  br label %18

18:                                               ; preds = %16, %8
  %19 = phi i32 [ %17, %16 ], [ %14, %8 ]
  %20 = and i32 %19, 32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = and i32 %6, 7
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %24, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_SSE2, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_Any_SSE2
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi void (i8*, i32, i8*, i32, i8*, i32, i32)* [ %25, %22 ], [ @TransposeUVWx8_C, %18 ]
  %28 = icmp sgt i32 %7, 7
  br i1 %28, label %29, label %44

29:                                               ; preds = %26
  %30 = shl nsw i32 %13, 3
  %31 = sext i32 %30 to i64
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi i32 [ %7, %29 ], [ %40, %32 ]
  %34 = phi i8* [ %12, %29 ], [ %37, %32 ]
  %35 = phi i8* [ %2, %29 ], [ %38, %32 ]
  %36 = phi i8* [ %4, %29 ], [ %39, %32 ]
  tail call void %27(i8* %34, i32 %13, i8* %35, i32 %3, i8* %36, i32 %5, i32 %6) #4, !callees !2
  %37 = getelementptr inbounds i8, i8* %34, i64 %31
  %38 = getelementptr inbounds i8, i8* %35, i64 8
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = add nsw i32 %33, -8
  %41 = icmp sgt i32 %40, 7
  br i1 %41, label %32, label %42

42:                                               ; preds = %32
  %43 = and i32 %7, 7
  br label %44

44:                                               ; preds = %42, %26
  %45 = phi i8* [ %4, %26 ], [ %39, %42 ]
  %46 = phi i8* [ %2, %26 ], [ %38, %42 ]
  %47 = phi i8* [ %12, %26 ], [ %37, %42 ]
  %48 = phi i32 [ %7, %26 ], [ %43, %42 ]
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %44
  tail call void @TransposeUVWxH_C(i8* %47, i32 %13, i8* %46, i32 %3, i8* %45, i32 %5, i32 %6, i32 %48) #4
  br label %51

51:                                               ; preds = %44, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @RotateUV270(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = add nsw i32 %6, -1
  %10 = mul nsw i32 %9, %3
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %2, i64 %11
  %13 = mul nsw i32 %9, %5
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %4, i64 %14
  %16 = sub nsw i32 0, %3
  %17 = sub nsw i32 0, %5
  %18 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %8
  %21 = tail call i32 @InitCpuFlags() #4
  br label %22

22:                                               ; preds = %20, %8
  %23 = phi i32 [ %21, %20 ], [ %18, %8 ]
  %24 = and i32 %23, 32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = and i32 %6, 7
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_SSE2, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_Any_SSE2
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi void (i8*, i32, i8*, i32, i8*, i32, i32)* [ %29, %26 ], [ @TransposeUVWx8_C, %22 ]
  %32 = icmp sgt i32 %7, 7
  br i1 %32, label %33, label %48

33:                                               ; preds = %30
  %34 = shl nsw i32 %1, 3
  %35 = sext i32 %34 to i64
  br label %36

36:                                               ; preds = %36, %33
  %37 = phi i32 [ %7, %33 ], [ %44, %36 ]
  %38 = phi i8* [ %0, %33 ], [ %41, %36 ]
  %39 = phi i8* [ %12, %33 ], [ %42, %36 ]
  %40 = phi i8* [ %15, %33 ], [ %43, %36 ]
  tail call void %31(i8* %38, i32 %1, i8* %39, i32 %16, i8* %40, i32 %17, i32 %6) #4, !callees !2
  %41 = getelementptr inbounds i8, i8* %38, i64 %35
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = getelementptr inbounds i8, i8* %40, i64 8
  %44 = add nsw i32 %37, -8
  %45 = icmp sgt i32 %44, 7
  br i1 %45, label %36, label %46

46:                                               ; preds = %36
  %47 = and i32 %7, 7
  br label %48

48:                                               ; preds = %46, %30
  %49 = phi i8* [ %15, %30 ], [ %43, %46 ]
  %50 = phi i8* [ %12, %30 ], [ %42, %46 ]
  %51 = phi i8* [ %0, %30 ], [ %41, %46 ]
  %52 = phi i32 [ %7, %30 ], [ %47, %46 ]
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %48
  tail call void @TransposeUVWxH_C(i8* %51, i32 %1, i8* %50, i32 %16, i8* %49, i32 %17, i32 %6, i32 %52) #4
  br label %55

55:                                               ; preds = %48, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @RotateUV180(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @InitCpuFlags() #4
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %8 ]
  %15 = and i32 %14, 64
  %16 = icmp ne i32 %15, 0
  %17 = and i32 %6, 15
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %18, %16
  %20 = select i1 %19, void (i8*, i8*, i8*, i32)* @MirrorSplitUVRow_SSSE3, void (i8*, i8*, i8*, i32)* @MirrorSplitUVRow_C
  %21 = add nsw i32 %7, -1
  %22 = icmp sgt i32 %7, 0
  br i1 %22, label %23, label %45

23:                                               ; preds = %13
  %24 = mul nsw i32 %21, %5
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %4, i64 %25
  %27 = mul nsw i32 %21, %3
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  %30 = sext i32 %1 to i64
  %31 = sext i32 %3 to i64
  %32 = sub nsw i64 0, %31
  %33 = sext i32 %5 to i64
  %34 = sub nsw i64 0, %33
  br label %35

35:                                               ; preds = %35, %23
  %36 = phi i32 [ 0, %23 ], [ %43, %35 ]
  %37 = phi i8* [ %0, %23 ], [ %40, %35 ]
  %38 = phi i8* [ %29, %23 ], [ %41, %35 ]
  %39 = phi i8* [ %26, %23 ], [ %42, %35 ]
  tail call void %20(i8* %37, i8* %38, i8* %39, i32 %6) #4, !callees !3
  %40 = getelementptr inbounds i8, i8* %37, i64 %30
  %41 = getelementptr inbounds i8, i8* %38, i64 %32
  %42 = getelementptr inbounds i8, i8* %39, i64 %34
  %43 = add nuw nsw i32 %36, 1
  %44 = icmp eq i32 %43, %7
  br i1 %44, label %45, label %35

45:                                               ; preds = %35, %13
  ret void
}

declare void @MirrorSplitUVRow_C(i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @MirrorSplitUVRow_SSSE3(i8*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RotatePlane(i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %8 = icmp eq i8* %0, null
  %9 = icmp slt i32 %4, 1
  %10 = or i1 %8, %9
  %11 = icmp eq i32 %5, 0
  %12 = or i1 %10, %11
  %13 = xor i1 %12, true
  %14 = icmp ne i8* %2, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %43

16:                                               ; preds = %7
  %17 = icmp slt i32 %5, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %16
  %19 = sub nsw i32 0, %5
  %20 = xor i32 %5, -1
  %21 = mul nsw i32 %20, %1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %0, i64 %22
  %24 = sub nsw i32 0, %1
  br label %25

25:                                               ; preds = %18, %16
  %26 = phi i32 [ %24, %18 ], [ %1, %16 ]
  %27 = phi i8* [ %23, %18 ], [ %0, %16 ]
  %28 = phi i32 [ %19, %18 ], [ %5, %16 ]
  switch i32 %6, label %43 [
    i32 0, label %29
    i32 90, label %30
    i32 270, label %36
    i32 180, label %42
  ]

29:                                               ; preds = %25
  tail call void @CopyPlane(i8* %27, i32 %26, i8* nonnull %2, i32 %3, i32 %4, i32 %28) #4
  br label %43

30:                                               ; preds = %25
  %31 = add nsw i32 %28, -1
  %32 = mul nsw i32 %31, %26
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %27, i64 %33
  %35 = sub nsw i32 0, %26
  tail call void @TransposePlane(i8* %34, i32 %35, i8* nonnull %2, i32 %3, i32 %4, i32 %28) #4
  br label %43

36:                                               ; preds = %25
  %37 = add nsw i32 %4, -1
  %38 = mul nsw i32 %37, %3
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %2, i64 %39
  %41 = sub nsw i32 0, %3
  tail call void @TransposePlane(i8* %27, i32 %26, i8* %40, i32 %41, i32 %4, i32 %28) #4
  br label %43

42:                                               ; preds = %25
  tail call void @RotatePlane180(i8* %27, i32 %26, i8* nonnull %2, i32 %3, i32 %4, i32 %28)
  br label %43

43:                                               ; preds = %25, %7, %42, %36, %30, %29
  %44 = phi i32 [ 0, %42 ], [ 0, %36 ], [ 0, %30 ], [ 0, %29 ], [ -1, %7 ], [ -1, %25 ]
  ret i32 %44
}

declare void @CopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420Rotate(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %16 = add nsw i32 %12, 1
  %17 = ashr i32 %16, 1
  %18 = icmp ne i8* %0, null
  %19 = icmp ne i8* %2, null
  %20 = and i1 %18, %19
  %21 = icmp ne i8* %4, null
  %22 = and i1 %20, %21
  %23 = xor i1 %22, true
  %24 = icmp slt i32 %12, 1
  %25 = or i1 %24, %23
  %26 = icmp eq i32 %13, 0
  %27 = or i1 %25, %26
  %28 = xor i1 %27, true
  %29 = icmp ne i8* %6, null
  %30 = and i1 %29, %28
  %31 = icmp ne i8* %8, null
  %32 = and i1 %31, %30
  %33 = icmp ne i8* %10, null
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %99

35:                                               ; preds = %15
  %36 = add nsw i32 %13, 1
  %37 = ashr i32 %36, 1
  %38 = icmp slt i32 %13, 0
  br i1 %38, label %39, label %57

39:                                               ; preds = %35
  %40 = sub nsw i32 0, %13
  %41 = sub i32 1, %13
  %42 = ashr i32 %41, 1
  %43 = xor i32 %13, -1
  %44 = mul nsw i32 %43, %1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %0, i64 %45
  %47 = add nsw i32 %42, -1
  %48 = mul nsw i32 %47, %3
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %2, i64 %49
  %51 = mul nsw i32 %47, %5
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %4, i64 %52
  %54 = sub nsw i32 0, %1
  %55 = sub nsw i32 0, %3
  %56 = sub nsw i32 0, %5
  br label %57

57:                                               ; preds = %39, %35
  %58 = phi i32 [ %56, %39 ], [ %5, %35 ]
  %59 = phi i8* [ %53, %39 ], [ %4, %35 ]
  %60 = phi i32 [ %55, %39 ], [ %3, %35 ]
  %61 = phi i8* [ %50, %39 ], [ %2, %35 ]
  %62 = phi i32 [ %54, %39 ], [ %1, %35 ]
  %63 = phi i8* [ %46, %39 ], [ %0, %35 ]
  %64 = phi i32 [ %40, %39 ], [ %13, %35 ]
  %65 = phi i32 [ %42, %39 ], [ %37, %35 ]
  switch i32 %14, label %99 [
    i32 0, label %66
    i32 90, label %68
    i32 270, label %83
    i32 180, label %98
  ]

66:                                               ; preds = %57
  %67 = tail call i32 @I420Copy(i8* %63, i32 %62, i8* %61, i32 %60, i8* %59, i32 %58, i8* nonnull %6, i32 %7, i8* nonnull %8, i32 %9, i8* nonnull %10, i32 %11, i32 %12, i32 %64) #4
  br label %99

68:                                               ; preds = %57
  %69 = add nsw i32 %64, -1
  %70 = mul nsw i32 %69, %62
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %63, i64 %71
  %73 = sub nsw i32 0, %62
  tail call void @TransposePlane(i8* %72, i32 %73, i8* nonnull %6, i32 %7, i32 %12, i32 %64) #4
  %74 = add nsw i32 %65, -1
  %75 = mul nsw i32 %74, %60
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %61, i64 %76
  %78 = sub nsw i32 0, %60
  tail call void @TransposePlane(i8* %77, i32 %78, i8* nonnull %8, i32 %9, i32 %17, i32 %65) #4
  %79 = mul nsw i32 %74, %58
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %59, i64 %80
  %82 = sub nsw i32 0, %58
  tail call void @TransposePlane(i8* %81, i32 %82, i8* nonnull %10, i32 %11, i32 %17, i32 %65) #4
  br label %99

83:                                               ; preds = %57
  %84 = add nsw i32 %12, -1
  %85 = mul nsw i32 %84, %7
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %6, i64 %86
  %88 = sub nsw i32 0, %7
  tail call void @TransposePlane(i8* %63, i32 %62, i8* %87, i32 %88, i32 %12, i32 %64) #4
  %89 = add nsw i32 %17, -1
  %90 = mul nsw i32 %89, %9
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %8, i64 %91
  %93 = sub nsw i32 0, %9
  tail call void @TransposePlane(i8* %61, i32 %60, i8* %92, i32 %93, i32 %17, i32 %65) #4
  %94 = mul nsw i32 %89, %11
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %10, i64 %95
  %97 = sub nsw i32 0, %11
  tail call void @TransposePlane(i8* %59, i32 %58, i8* %96, i32 %97, i32 %17, i32 %65) #4
  br label %99

98:                                               ; preds = %57
  tail call void @RotatePlane180(i8* %63, i32 %62, i8* nonnull %6, i32 %7, i32 %12, i32 %64)
  tail call void @RotatePlane180(i8* %61, i32 %60, i8* nonnull %8, i32 %9, i32 %17, i32 %65)
  tail call void @RotatePlane180(i8* %59, i32 %58, i8* nonnull %10, i32 %11, i32 %17, i32 %65)
  br label %99

99:                                               ; preds = %57, %15, %98, %83, %68, %66
  %100 = phi i32 [ 0, %98 ], [ 0, %83 ], [ 0, %68 ], [ %67, %66 ], [ -1, %15 ], [ -1, %57 ]
  ret i32 %100
}

declare i32 @I420Copy(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I444Rotate(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %16 = icmp ne i8* %0, null
  %17 = icmp ne i8* %2, null
  %18 = and i1 %16, %17
  %19 = icmp ne i8* %4, null
  %20 = and i1 %18, %19
  %21 = xor i1 %20, true
  %22 = icmp slt i32 %12, 1
  %23 = or i1 %22, %21
  %24 = icmp eq i32 %13, 0
  %25 = or i1 %23, %24
  %26 = xor i1 %25, true
  %27 = icmp ne i8* %6, null
  %28 = and i1 %27, %26
  %29 = icmp ne i8* %8, null
  %30 = and i1 %29, %28
  %31 = icmp ne i8* %10, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %88

33:                                               ; preds = %15
  %34 = icmp slt i32 %13, 0
  br i1 %34, label %35, label %50

35:                                               ; preds = %33
  %36 = sub nsw i32 0, %13
  %37 = xor i32 %13, -1
  %38 = mul nsw i32 %37, %1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = mul nsw i32 %37, %3
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %2, i64 %42
  %44 = mul nsw i32 %37, %5
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %4, i64 %45
  %47 = sub nsw i32 0, %1
  %48 = sub nsw i32 0, %3
  %49 = sub nsw i32 0, %5
  br label %50

50:                                               ; preds = %35, %33
  %51 = phi i32 [ %49, %35 ], [ %5, %33 ]
  %52 = phi i8* [ %46, %35 ], [ %4, %33 ]
  %53 = phi i32 [ %48, %35 ], [ %3, %33 ]
  %54 = phi i8* [ %43, %35 ], [ %2, %33 ]
  %55 = phi i32 [ %47, %35 ], [ %1, %33 ]
  %56 = phi i8* [ %40, %35 ], [ %0, %33 ]
  %57 = phi i32 [ %36, %35 ], [ %13, %33 ]
  switch i32 %14, label %88 [
    i32 0, label %58
    i32 90, label %59
    i32 270, label %73
    i32 180, label %87
  ]

58:                                               ; preds = %50
  tail call void @CopyPlane(i8* %56, i32 %55, i8* nonnull %6, i32 %7, i32 %12, i32 %57) #4
  tail call void @CopyPlane(i8* %54, i32 %53, i8* nonnull %8, i32 %9, i32 %12, i32 %57) #4
  tail call void @CopyPlane(i8* %52, i32 %51, i8* nonnull %10, i32 %11, i32 %12, i32 %57) #4
  br label %88

59:                                               ; preds = %50
  %60 = add nsw i32 %57, -1
  %61 = mul nsw i32 %60, %55
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %56, i64 %62
  %64 = sub nsw i32 0, %55
  tail call void @TransposePlane(i8* %63, i32 %64, i8* nonnull %6, i32 %7, i32 %12, i32 %57) #4
  %65 = mul nsw i32 %60, %53
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %54, i64 %66
  %68 = sub nsw i32 0, %53
  tail call void @TransposePlane(i8* %67, i32 %68, i8* nonnull %8, i32 %9, i32 %12, i32 %57) #4
  %69 = mul nsw i32 %60, %51
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %52, i64 %70
  %72 = sub nsw i32 0, %51
  tail call void @TransposePlane(i8* %71, i32 %72, i8* nonnull %10, i32 %11, i32 %12, i32 %57) #4
  br label %88

73:                                               ; preds = %50
  %74 = add nsw i32 %12, -1
  %75 = mul nsw i32 %74, %7
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %6, i64 %76
  %78 = sub nsw i32 0, %7
  tail call void @TransposePlane(i8* %56, i32 %55, i8* %77, i32 %78, i32 %12, i32 %57) #4
  %79 = mul nsw i32 %74, %9
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %8, i64 %80
  %82 = sub nsw i32 0, %9
  tail call void @TransposePlane(i8* %54, i32 %53, i8* %81, i32 %82, i32 %12, i32 %57) #4
  %83 = mul nsw i32 %74, %11
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %10, i64 %84
  %86 = sub nsw i32 0, %11
  tail call void @TransposePlane(i8* %52, i32 %51, i8* %85, i32 %86, i32 %12, i32 %57) #4
  br label %88

87:                                               ; preds = %50
  tail call void @RotatePlane180(i8* %56, i32 %55, i8* nonnull %6, i32 %7, i32 %12, i32 %57)
  tail call void @RotatePlane180(i8* %54, i32 %53, i8* nonnull %8, i32 %9, i32 %12, i32 %57)
  tail call void @RotatePlane180(i8* %52, i32 %51, i8* nonnull %10, i32 %11, i32 %12, i32 %57)
  br label %88

88:                                               ; preds = %50, %15, %87, %73, %59, %58
  %89 = phi i32 [ 0, %87 ], [ 0, %73 ], [ 0, %59 ], [ 0, %58 ], [ -1, %15 ], [ -1, %50 ]
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToI420Rotate(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %14 = add nsw i32 %10, 1
  %15 = ashr i32 %14, 1
  %16 = icmp eq i8* %0, null
  %17 = icmp eq i8* %2, null
  %18 = or i1 %16, %17
  %19 = icmp slt i32 %10, 1
  %20 = or i1 %18, %19
  %21 = icmp eq i32 %11, 0
  %22 = or i1 %20, %21
  %23 = xor i1 %22, true
  %24 = icmp ne i8* %4, null
  %25 = and i1 %24, %23
  %26 = icmp ne i8* %6, null
  %27 = and i1 %26, %25
  %28 = icmp ne i8* %8, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %194

30:                                               ; preds = %13
  %31 = add nsw i32 %11, 1
  %32 = ashr i32 %31, 1
  %33 = icmp slt i32 %11, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %30
  %35 = sub nsw i32 0, %11
  %36 = sub i32 1, %11
  %37 = ashr i32 %36, 1
  %38 = xor i32 %11, -1
  %39 = mul nsw i32 %38, %1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %0, i64 %40
  %42 = add nsw i32 %37, -1
  %43 = mul nsw i32 %42, %3
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 %44
  %46 = sub nsw i32 0, %1
  %47 = sub nsw i32 0, %3
  br label %48

48:                                               ; preds = %34, %30
  %49 = phi i32 [ %47, %34 ], [ %3, %30 ]
  %50 = phi i8* [ %45, %34 ], [ %2, %30 ]
  %51 = phi i32 [ %46, %34 ], [ %1, %30 ]
  %52 = phi i8* [ %41, %34 ], [ %0, %30 ]
  %53 = phi i32 [ %35, %34 ], [ %11, %30 ]
  %54 = phi i32 [ %37, %34 ], [ %32, %30 ]
  switch i32 %12, label %194 [
    i32 0, label %55
    i32 90, label %57
    i32 270, label %105
    i32 180, label %157
  ]

55:                                               ; preds = %48
  %56 = tail call i32 @NV12ToI420(i8* %52, i32 %51, i8* %50, i32 %49, i8* nonnull %4, i32 %5, i8* nonnull %6, i32 %7, i8* nonnull %8, i32 %9, i32 %10, i32 %53) #4
  br label %194

57:                                               ; preds = %48
  %58 = add nsw i32 %53, -1
  %59 = mul nsw i32 %58, %51
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  %62 = sub nsw i32 0, %51
  tail call void @TransposePlane(i8* %61, i32 %62, i8* nonnull %4, i32 %5, i32 %10, i32 %53) #4
  %63 = add nsw i32 %54, -1
  %64 = mul nsw i32 %63, %49
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %50, i64 %65
  %67 = sub nsw i32 0, %49
  %68 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %57
  %71 = tail call i32 @InitCpuFlags() #4
  br label %72

72:                                               ; preds = %70, %57
  %73 = phi i32 [ %71, %70 ], [ %68, %57 ]
  %74 = and i32 %73, 32
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = and i32 %14, 14
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_SSE2, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_Any_SSE2
  br label %80

80:                                               ; preds = %76, %72
  %81 = phi void (i8*, i32, i8*, i32, i8*, i32, i32)* [ %79, %76 ], [ @TransposeUVWx8_C, %72 ]
  %82 = icmp sgt i32 %54, 7
  br i1 %82, label %83, label %98

83:                                               ; preds = %80
  %84 = shl nsw i32 %67, 3
  %85 = sext i32 %84 to i64
  br label %86

86:                                               ; preds = %86, %83
  %87 = phi i32 [ %54, %83 ], [ %94, %86 ]
  %88 = phi i8* [ %66, %83 ], [ %91, %86 ]
  %89 = phi i8* [ %6, %83 ], [ %92, %86 ]
  %90 = phi i8* [ %8, %83 ], [ %93, %86 ]
  tail call void %81(i8* %88, i32 %67, i8* %89, i32 %7, i8* %90, i32 %9, i32 %15) #4, !callees !2
  %91 = getelementptr inbounds i8, i8* %88, i64 %85
  %92 = getelementptr inbounds i8, i8* %89, i64 8
  %93 = getelementptr inbounds i8, i8* %90, i64 8
  %94 = add nsw i32 %87, -8
  %95 = icmp sgt i32 %94, 7
  br i1 %95, label %86, label %96

96:                                               ; preds = %86
  %97 = and i32 %54, 7
  br label %98

98:                                               ; preds = %96, %80
  %99 = phi i8* [ %8, %80 ], [ %93, %96 ]
  %100 = phi i8* [ %6, %80 ], [ %92, %96 ]
  %101 = phi i8* [ %66, %80 ], [ %91, %96 ]
  %102 = phi i32 [ %54, %80 ], [ %97, %96 ]
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %194

104:                                              ; preds = %98
  tail call void @TransposeUVWxH_C(i8* %101, i32 %67, i8* %100, i32 %7, i8* %99, i32 %9, i32 %15, i32 %102) #4
  br label %194

105:                                              ; preds = %48
  %106 = add nsw i32 %10, -1
  %107 = mul nsw i32 %106, %5
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %4, i64 %108
  %110 = sub nsw i32 0, %5
  tail call void @TransposePlane(i8* %52, i32 %51, i8* %109, i32 %110, i32 %10, i32 %53) #4
  %111 = add nsw i32 %15, -1
  %112 = mul nsw i32 %111, %7
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = mul nsw i32 %111, %9
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %8, i64 %116
  %118 = sub nsw i32 0, %7
  %119 = sub nsw i32 0, %9
  %120 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %105
  %123 = tail call i32 @InitCpuFlags() #4
  br label %124

124:                                              ; preds = %122, %105
  %125 = phi i32 [ %123, %122 ], [ %120, %105 ]
  %126 = and i32 %125, 32
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %124
  %129 = and i32 %14, 14
  %130 = icmp eq i32 %129, 0
  %131 = select i1 %130, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_SSE2, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_Any_SSE2
  br label %132

132:                                              ; preds = %128, %124
  %133 = phi void (i8*, i32, i8*, i32, i8*, i32, i32)* [ %131, %128 ], [ @TransposeUVWx8_C, %124 ]
  %134 = icmp sgt i32 %54, 7
  br i1 %134, label %135, label %150

135:                                              ; preds = %132
  %136 = shl nsw i32 %49, 3
  %137 = sext i32 %136 to i64
  br label %138

138:                                              ; preds = %138, %135
  %139 = phi i32 [ %54, %135 ], [ %146, %138 ]
  %140 = phi i8* [ %50, %135 ], [ %143, %138 ]
  %141 = phi i8* [ %114, %135 ], [ %144, %138 ]
  %142 = phi i8* [ %117, %135 ], [ %145, %138 ]
  tail call void %133(i8* %140, i32 %49, i8* %141, i32 %118, i8* %142, i32 %119, i32 %15) #4, !callees !2
  %143 = getelementptr inbounds i8, i8* %140, i64 %137
  %144 = getelementptr inbounds i8, i8* %141, i64 8
  %145 = getelementptr inbounds i8, i8* %142, i64 8
  %146 = add nsw i32 %139, -8
  %147 = icmp sgt i32 %146, 7
  br i1 %147, label %138, label %148

148:                                              ; preds = %138
  %149 = and i32 %54, 7
  br label %150

150:                                              ; preds = %148, %132
  %151 = phi i8* [ %117, %132 ], [ %145, %148 ]
  %152 = phi i8* [ %114, %132 ], [ %144, %148 ]
  %153 = phi i8* [ %50, %132 ], [ %143, %148 ]
  %154 = phi i32 [ %54, %132 ], [ %149, %148 ]
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %194

156:                                              ; preds = %150
  tail call void @TransposeUVWxH_C(i8* %153, i32 %49, i8* %152, i32 %118, i8* %151, i32 %119, i32 %15, i32 %154) #4
  br label %194

157:                                              ; preds = %48
  tail call void @RotatePlane180(i8* %52, i32 %51, i8* nonnull %4, i32 %5, i32 %10, i32 %53)
  %158 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = tail call i32 @InitCpuFlags() #4
  br label %162

162:                                              ; preds = %160, %157
  %163 = phi i32 [ %161, %160 ], [ %158, %157 ]
  %164 = and i32 %163, 64
  %165 = icmp ne i32 %164, 0
  %166 = and i32 %14, 30
  %167 = icmp eq i32 %166, 0
  %168 = and i1 %167, %165
  %169 = select i1 %168, void (i8*, i8*, i8*, i32)* @MirrorSplitUVRow_SSSE3, void (i8*, i8*, i8*, i32)* @MirrorSplitUVRow_C
  %170 = add nsw i32 %54, -1
  %171 = icmp sgt i32 %54, 0
  br i1 %171, label %172, label %194

172:                                              ; preds = %162
  %173 = mul nsw i32 %170, %9
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8, i8* %8, i64 %174
  %176 = mul nsw i32 %170, %7
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %6, i64 %177
  %179 = sext i32 %49 to i64
  %180 = sext i32 %7 to i64
  %181 = sub nsw i64 0, %180
  %182 = sext i32 %9 to i64
  %183 = sub nsw i64 0, %182
  br label %184

184:                                              ; preds = %184, %172
  %185 = phi i32 [ 0, %172 ], [ %192, %184 ]
  %186 = phi i8* [ %50, %172 ], [ %189, %184 ]
  %187 = phi i8* [ %178, %172 ], [ %190, %184 ]
  %188 = phi i8* [ %175, %172 ], [ %191, %184 ]
  tail call void %169(i8* %186, i8* %187, i8* %188, i32 %15) #4, !callees !3
  %189 = getelementptr inbounds i8, i8* %186, i64 %179
  %190 = getelementptr inbounds i8, i8* %187, i64 %181
  %191 = getelementptr inbounds i8, i8* %188, i64 %183
  %192 = add nuw nsw i32 %185, 1
  %193 = icmp eq i32 %192, %54
  br i1 %193, label %194, label %184

194:                                              ; preds = %184, %162, %156, %150, %104, %98, %48, %13, %55
  %195 = phi i32 [ %56, %55 ], [ -1, %13 ], [ -1, %48 ], [ 0, %98 ], [ 0, %104 ], [ 0, %150 ], [ 0, %156 ], [ 0, %162 ], [ 0, %184 ]
  ret i32 %195
}

declare i32 @NV12ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @InitCpuFlags() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_Any_SSE2, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_C, void (i8*, i32, i8*, i32, i8*, i32, i32)* @TransposeUVWx8_SSE2}
!3 = !{void (i8*, i8*, i8*, i32)* @MirrorSplitUVRow_C, void (i8*, i8*, i8*, i32)* @MirrorSplitUVRow_SSSE3}
