; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/expand_uma_logger.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/expand_uma_logger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::ExpandUmaLogger" = type <{ %"class.std::__1::basic_string", i32, [4 x i8], %"class.webrtc::TickTimer"*, %"class.std::__1::unique_ptr", %"class.absl::optional", i64, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::TickTimer::Countdown"* }
%"class.webrtc::TickTimer::Countdown" = type { %"class.std::__1::unique_ptr.3", i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.webrtc::TickTimer::Stopwatch"* }
%"class.webrtc::TickTimer::Stopwatch" = type { %"class.webrtc::TickTimer"*, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.10 }
%union.anon.10 = type { i64 }
%"class.webrtc::TickTimer" = type <{ i64, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::metrics::Histogram" = type opaque

@_ZN6webrtc15ExpandUmaLoggerC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPKNS_9TickTimerE = hidden unnamed_addr alias void (%"class.webrtc::ExpandUmaLogger"*, %"class.std::__1::basic_string"*, i32, %"class.webrtc::TickTimer"*), void (%"class.webrtc::ExpandUmaLogger"*, %"class.std::__1::basic_string"*, i32, %"class.webrtc::TickTimer"*)* @_ZN6webrtc15ExpandUmaLoggerC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPKNS_9TickTimerE
@_ZN6webrtc15ExpandUmaLoggerD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ExpandUmaLogger"*), void (%"class.webrtc::ExpandUmaLogger"*)* @_ZN6webrtc15ExpandUmaLoggerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15ExpandUmaLoggerC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPKNS_9TickTimerE(%"class.webrtc::ExpandUmaLogger"*, %"class.std::__1::basic_string"* nocapture readonly, i32, %"class.webrtc::TickTimer"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.webrtc::ExpandUmaLogger"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #6
  br label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %15, i64 %17) #6
  br label %18

18:                                               ; preds = %9, %12
  %19 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 1
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 3
  store %"class.webrtc::TickTimer"* %3, %"class.webrtc::TickTimer"** %20, align 8
  %21 = mul nsw i32 %2, 1000
  %22 = getelementptr inbounds %"class.webrtc::TickTimer", %"class.webrtc::TickTimer"* %3, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = sdiv i32 %21, %23
  %25 = sext i32 %24 to i64
  %26 = tail call i8* @_Znwm(i64 16) #7
  %27 = bitcast i8* %26 to %"class.webrtc::TickTimer::Countdown"*
  tail call void @_ZN6webrtc9TickTimer9CountdownC1ERKS0_m(%"class.webrtc::TickTimer::Countdown"* nonnull %27, %"class.webrtc::TickTimer"* dereferenceable(16) %3, i64 %25) #6
  %28 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = bitcast %"class.webrtc::TickTimer::Countdown"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 6
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 7
  store i32 0, i32* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15ExpandUmaLoggerD2Ev(%"class.webrtc::ExpandUmaLogger"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::TickTimer::Countdown"*, %"class.webrtc::TickTimer::Countdown"** %2, align 8
  store %"class.webrtc::TickTimer::Countdown"* null, %"class.webrtc::TickTimer::Countdown"** %2, align 8
  %4 = icmp eq %"class.webrtc::TickTimer::Countdown"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN6webrtc9TickTimer9CountdownD1Ev(%"class.webrtc::TickTimer::Countdown"* nonnull %3) #6
  %6 = bitcast %"class.webrtc::TickTimer::Countdown"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  %8 = bitcast %"class.webrtc::ExpandUmaLogger"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #7
  br label %15

15:                                               ; preds = %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15ExpandUmaLogger19UpdateSampleCounterEmi(%"class.webrtc::ExpandUmaLogger"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %2
  br i1 %14, label %18, label %15

15:                                               ; preds = %7, %11
  store i8 0, i8* %4, align 8
  %16 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 6
  store i64 %1, i64* %16, align 8
  %17 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 7
  store i32 %2, i32* %17, align 8
  br label %20

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 6
  store i64 %1, i64* %19, align 8
  store i32 %2, i32* %12, align 8
  br i1 %6, label %20, label %22

20:                                               ; preds = %18, %15
  store i8 1, i8* %4, align 8
  %21 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %21, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 4
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.webrtc::TickTimer::Countdown"*, %"class.webrtc::TickTimer::Countdown"** %24, align 8
  %26 = getelementptr inbounds %"class.webrtc::TickTimer::Countdown", %"class.webrtc::TickTimer::Countdown"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.webrtc::TickTimer::Stopwatch"*, %"class.webrtc::TickTimer::Stopwatch"** %26, align 8
  %28 = getelementptr inbounds %"class.webrtc::TickTimer::Stopwatch", %"class.webrtc::TickTimer::Stopwatch"* %27, i64 0, i32 0
  %29 = load %"class.webrtc::TickTimer"*, %"class.webrtc::TickTimer"** %28, align 8
  %30 = getelementptr inbounds %"class.webrtc::TickTimer", %"class.webrtc::TickTimer"* %29, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.webrtc::TickTimer::Stopwatch", %"class.webrtc::TickTimer::Stopwatch"* %27, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = getelementptr inbounds %"class.webrtc::TickTimer::Countdown", %"class.webrtc::TickTimer::Countdown"* %25, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %70, label %38

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = load i64, i64* %39, align 8
  store i8 1, i8* %4, align 8
  store i64 %1, i64* %39, align 8
  %41 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 0
  %44 = tail call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics36SparseHistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24) %43, i32 101) #6
  %45 = icmp eq %"class.webrtc::metrics::Histogram"* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = sub i64 %1, %40
  %48 = mul i64 %47, 100
  %49 = mul nsw i32 %42, %2
  %50 = sext i32 %49 to i64
  %51 = udiv i64 %48, %50
  %52 = trunc i64 %51 to i32
  tail call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %44, i32 %52) #6
  br label %53

53:                                               ; preds = %38, %46
  %54 = getelementptr inbounds %"class.webrtc::ExpandUmaLogger", %"class.webrtc::ExpandUmaLogger"* %0, i64 0, i32 3
  %55 = load %"class.webrtc::TickTimer"*, %"class.webrtc::TickTimer"** %54, align 8
  %56 = load i32, i32* %41, align 8
  %57 = mul nsw i32 %56, 1000
  %58 = getelementptr inbounds %"class.webrtc::TickTimer", %"class.webrtc::TickTimer"* %55, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = sdiv i32 %57, %59
  %61 = sext i32 %60 to i64
  %62 = tail call i8* @_Znwm(i64 16) #7
  %63 = bitcast i8* %62 to %"class.webrtc::TickTimer::Countdown"*
  tail call void @_ZN6webrtc9TickTimer9CountdownC1ERKS0_m(%"class.webrtc::TickTimer::Countdown"* nonnull %63, %"class.webrtc::TickTimer"* dereferenceable(16) %55, i64 %61) #6
  %64 = ptrtoint i8* %62 to i64
  %65 = load %"class.webrtc::TickTimer::Countdown"*, %"class.webrtc::TickTimer::Countdown"** %24, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %64, i64* %66, align 8
  %67 = icmp eq %"class.webrtc::TickTimer::Countdown"* %65, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %53
  tail call void @_ZN6webrtc9TickTimer9CountdownD1Ev(%"class.webrtc::TickTimer::Countdown"* nonnull %65) #6
  %69 = bitcast %"class.webrtc::TickTimer::Countdown"* %65 to i8*
  tail call void @_ZdlPv(i8* %69) #7
  br label %70

70:                                               ; preds = %22, %53, %68
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics36SparseHistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN6webrtc9TickTimer9CountdownC1ERKS0_m(%"class.webrtc::TickTimer::Countdown"*, %"class.webrtc::TickTimer"* dereferenceable(16), i64) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc9TickTimer9CountdownD1Ev(%"class.webrtc::TickTimer::Countdown"*) unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
