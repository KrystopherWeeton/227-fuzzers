; ModuleID = '../../third_party/skia/src/core/SkPicture.cpp'
source_filename = "../../third_party/skia/src/core/SkPicture.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.sk_sp.59 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.66 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.73 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.74 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkTDArray.93 = type { i32*, i32, i32 }
%class.SkTDArray.94 = type { i32*, i32, i32 }
%class.SkTArray = type { %class.SkPaint*, i64 }
%class.SkPaint = type <{ %class.sk_sp.20, %class.sk_sp.21, %class.sk_sp.22, %class.sk_sp.23, %class.sk_sp.24, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.20 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.21 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.22 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.23 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.24 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkTHashMap.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type { %class.SkPath, i32 }
%class.SkPath = type <{ %class.sk_sp.26, i32, %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11", i8, i8 }>
%class.sk_sp.26 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.27, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.28, %class.SkTDArray.29, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.27 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.28 = type { i8*, i32, i32 }
%class.SkTDArray.29 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.30 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.30 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.1", [3 x i8] }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%class.SkWriter32 = type { i8*, i64, i64, i8*, %class.SkAutoTMalloc }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.104" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i8* }
%class.SkTArray.45 = type { %class.sk_sp.46*, i64 }
%class.sk_sp.46 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.19, i32, i32 }
%class.sk_sp.19 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkTArray.35 = type { %class.sk_sp.36*, i64 }
%class.sk_sp.36 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%class.SkTArray.37 = type { %class.sk_sp.38*, i64 }
%class.sk_sp.38 = type { %class.SkDrawable* }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkTArray.39 = type { %class.sk_sp.40*, i64 }
%class.sk_sp.40 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.41, %struct.SkRect, i32, %"struct.std::__1::atomic.5" }
%class.SkNVRefCnt.41 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%class.SkTArray.42 = type { %class.sk_sp.43*, i64 }
%class.sk_sp.43 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt.44, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.44 = type { %"struct.std::__1::atomic" }
%struct.SkPictInfo = type { [8 x i8], i32, %struct.SkRect }
%class.SkStream = type { i32 (...)** }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp*, i32, [4 x i8], void (%class.sk_sp.16*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.16*, %class.SkReadBuffer*)* }
%class.sk_sp.16 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.17*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.18*, i8*, i64, i8*)*, i8*, void (%class.sk_sp*, i8*, i64, i8*)*, i8* }
%class.sk_sp.17 = type { %class.SkPicture* }
%class.sk_sp.18 = type { %class.SkImage* }
%class.SkPictureData = type <{ %class.SkTArray, %class.SkTArray.25, %class.sk_sp.31, %class.SkPath, %class.SkBitmap, %class.SkTArray.35, %class.SkTArray.37, %class.SkTArray.39, %class.SkTArray.42, %class.SkTArray.45, %class.SkTypefacePlayback, %"class.std::__1::unique_ptr.53", %struct.SkPictInfo, [4 x i8] }>
%class.SkTArray.25 = type { %class.SkPath*, i64 }
%class.sk_sp.31 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.32, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.32 = type { %"struct.std::__1::atomic" }
%class.SkBitmap = type { %class.sk_sp.33, %class.SkPixmap, %class.sk_sp.34 }
%class.sk_sp.33 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.34 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkTypefacePlayback = type { i64, %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.sk_sp* }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.SkFactoryPlayback* }
%class.SkFactoryPlayback = type { i32, void (%class.sk_sp.16*, %class.SkReadBuffer*)** }
%class.SkPicturePlayback = type { %class.SkPictureData*, i64 }
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.73, [384 x i64], %class.sk_sp.74, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.75", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.81" }
%class.SkBBHFactory = type { i32 (...)** }
%"class.SkPicture::AbortCallback" = type { i32 (...)** }
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp.31, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkPictureRecord = type { %class.SkCanvasVirtualEnforcer, %class.SkTDArray.93, %class.SkTDArray.94, %class.SkTArray, %class.SkTHashMap.95, %class.SkWriter32, %class.SkTArray.45, %class.SkTArray.35, %class.SkTArray.37, %class.SkTArray.39, %class.SkTArray.42, i32, i32 }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWStream = type { i32 (...)** }
%struct.SkSerialProcs = type { void (%class.sk_sp.31*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.31*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.31*, %class.SkTypeface*, i8*)*, i8* }
%class.SkRefCntSet = type { %class.SkTPtrSet }
%class.SkTPtrSet = type { %class.SkPtrSet }
%class.SkPtrSet = type { %class.SkRefCnt.base, %class.SkTDArray.108 }
%class.SkTDArray.108 = type { %"struct.SkPtrSet::Pair"*, i32, i32 }
%"struct.SkPtrSet::Pair" = type { i8*, i32 }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%class.SkBigPicture = type opaque
%struct.Placeholder = type { %class.SkPicture.base, %struct.SkRect, [4 x i8] }
%class.SkPicture.base = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1" }>

$_ZN15SkPictureRecordD2Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK9SkPicture14asSkBigPictureEv = comdat any

$_ZN13SkPictureDataD2Ev = comdat any

@_ZTV9SkPicture = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPicture*)* @_ZN9SkPictureD2Ev to i8*), i8* bitcast (void (%class.SkPicture*)* @_ZN9SkPictureD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.SkBigPicture* (%class.SkPicture*)* @_ZNK9SkPicture14asSkBigPictureEv to i8*)] }, align 8
@_ZZN9SkPictureC1EvE6nextID = internal global { { i32 } } { { i32 } { i32 1 } }, align 4
@_ZL6kMagic = internal constant [8 x i8] c"skiapict", align 1
@__const._ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer.r = private unnamed_addr constant { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.59 { %class.SkBBoxHierarchy* inttoptr (i64 -6148914691236517206 to %class.SkBBoxHierarchy*) }, %"class.std::__1::unique_ptr.60" { %"class.std::__1::__compressed_pair.61" { %"struct.std::__1::__compressed_pair_elem.62" { %class.SkRecorder* inttoptr (i64 -6148914691236517206 to %class.SkRecorder*) } } }, %class.sk_sp.66 { %class.SkRecord* inttoptr (i64 -6148914691236517206 to %class.SkRecord*) }, %"class.std::__1::unique_ptr.67" { %"class.std::__1::__compressed_pair.68" { %"struct.std::__1::__compressed_pair_elem.69" { %class.SkMiniRecorder* inttoptr (i64 -6148914691236517206 to %class.SkMiniRecorder*) } } } }, align 8
@__const._ZNK9SkPicture8backportEv.rec = private unnamed_addr constant { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.73, [384 x i64], %class.sk_sp.74, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.75", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.81" } }, %class.SkTDArray.93, %class.SkTDArray.94, %class.SkTArray, %class.SkTHashMap.95, %class.SkWriter32, %class.SkTArray.45, %class.SkTArray.35, %class.SkTArray.37, %class.SkTArray.39, %class.SkTArray.42, i32, i32 } { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.73, [384 x i64], %class.sk_sp.74, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.75", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.81" } } { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.73, [384 x i64], %class.sk_sp.74, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.75", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.81" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.73 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.74 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.75" { %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.81" { %"class.std::__1::__compressed_pair.82" { %"struct.std::__1::__compressed_pair_elem.83" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } } }, %class.SkTDArray.93 { i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.94 { i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766 }, %class.SkTArray { %class.SkPaint* inttoptr (i64 -6148914691236517206 to %class.SkPaint*), i64 -6148914691236517206 }, %class.SkTHashMap.95 { %class.SkTHashTable.96 { i32 -1431655766, i32 -1431655766, %class.SkAutoTArray.97 { %"class.std::__1::unique_ptr.98" { %"class.std::__1::__compressed_pair.99" { %"struct.std::__1::__compressed_pair_elem.100" { %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* inttoptr (i64 -6148914691236517206 to %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"*) } } } } } }, %class.SkWriter32 { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), %class.SkAutoTMalloc { %"class.std::__1::unique_ptr.104" { %"class.std::__1::__compressed_pair.105" { %"struct.std::__1::__compressed_pair_elem.106" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %class.SkTArray.45 { %class.sk_sp.46* inttoptr (i64 -6148914691236517206 to %class.sk_sp.46*), i64 -6148914691236517206 }, %class.SkTArray.35 { %class.sk_sp.36* inttoptr (i64 -6148914691236517206 to %class.sk_sp.36*), i64 -6148914691236517206 }, %class.SkTArray.37 { %class.sk_sp.38* inttoptr (i64 -6148914691236517206 to %class.sk_sp.38*), i64 -6148914691236517206 }, %class.SkTArray.39 { %class.sk_sp.40* inttoptr (i64 -6148914691236517206 to %class.sk_sp.40*), i64 -6148914691236517206 }, %class.SkTArray.42 { %class.sk_sp.43* inttoptr (i64 -6148914691236517206 to %class.sk_sp.43*), i64 -6148914691236517206 }, i32 -1431655766, i32 -1431655766 }, align 8
@_ZTV14SkMemoryStream = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTV15SkPictureRecord = external unnamed_addr constant { [56 x i8*] }, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVZN9SkPicture15MakePlaceholderE6SkRectE11Placeholder = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPicture*)* @_ZN9SkPictureD2Ev to i8*), i8* bitcast (void (%struct.Placeholder*)* @_ZZN9SkPicture15MakePlaceholderE6SkRectEN11PlaceholderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%struct.Placeholder*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)* @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder8playbackEP8SkCanvasPNS_13AbortCallbackE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%struct.Placeholder*)* @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder8cullRectEv to i8*), i8* bitcast (i32 (%struct.Placeholder*, i1)* @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder18approximateOpCountEb to i8*), i8* bitcast (i64 (%struct.Placeholder*)* @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder20approximateBytesUsedEv to i8*), i8* bitcast (%class.SkBigPicture* (%class.SkPicture*)* @_ZNK9SkPicture14asSkBigPictureEv to i8*)] }, align 8

@_ZN9SkPictureD1Ev = hidden unnamed_addr alias void (%class.SkPicture*), void (%class.SkPicture*)* @_ZN9SkPictureD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9SkPictureC2Ev(%class.SkPicture* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV9SkPicture, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 1
  br label %5

5:                                                ; preds = %5, %1
  %6 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN9SkPictureC1EvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %5, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %0, i64 0, i32 1
  store i32 %6, i32* %9, align 4
  ret void
}

declare void @_ZN15SkResourceCache17PostPurgeSharedIDEm(i64) local_unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9SkPictureD0Ev(%class.SkPicture* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkPicture12createHeaderEv(%struct.SkPictInfo* noalias nocapture sret, %class.SkPicture*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %0, i64 0, i32 2, i32 2
  %5 = bitcast %struct.SkPictInfo* %0 to i64*
  store i64 8386662862485547891, i64* %5, align 4
  store i32 86, i32* %3, align 4
  %6 = bitcast %class.SkPicture* %1 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %7 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %6, align 8
  %8 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %7, i64 4
  %9 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %8, align 8
  %10 = tail call { <2 x float>, <2 x float> } %9(%class.SkPicture* %1) #17
  %11 = extractvalue { <2 x float>, <2 x float> } %10, 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 1
  %13 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %0, i64 0, i32 2
  %14 = bitcast %struct.SkRect* %13 to <2 x float>*
  store <2 x float> %11, <2 x float>* %14, align 4
  %15 = bitcast float* %4 to <2 x float>*
  store <2 x float> %12, <2 x float>* %15, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN9SkPicture15IsValidPictInfoERK10SkPictInfo(%struct.SkPictInfo* nocapture readonly dereferenceable(28)) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %0, i64 0, i32 0, i64 0
  %3 = tail call i32 @bcmp(i8* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZL6kMagic, i64 0, i64 0), i64 8)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 73
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = icmp ult i32 %7, 87
  ret i1 %10

11:                                               ; preds = %5, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkPicture11StreamIsSKPEP8SkStreamP10SkPictInfo(%class.SkStream*, %struct.SkPictInfo*) local_unnamed_addr #4 align 2 {
  %3 = alloca %struct.SkPictInfo, align 8
  %4 = alloca i32, align 4
  %5 = icmp eq %class.SkStream* %0, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %7) #17
  %8 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 1
  %9 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 2, i32 0
  %10 = bitcast %struct.SkPictInfo* %3 to i64*
  store i64 -6148914691236517206, i64* %10, align 8
  %11 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 2, i32 2
  %13 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 2, i32 3
  %14 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  %15 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -1, i64 20, i1 false)
  %16 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %14, align 8
  %17 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %16, i64 2
  %18 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %17, align 8
  %19 = call i64 %18(%class.SkStream* nonnull %0, i8* nonnull %7, i64 8) #17
  %20 = icmp eq i64 %19, 8
  br i1 %20, label %21, label %47

21:                                               ; preds = %6
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #17
  store i32 -1431655766, i32* %4, align 4
  %23 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* nonnull %0, i32* nonnull %4) #17
  br i1 %23, label %24, label %45

24:                                               ; preds = %21
  %25 = load i32, i32* %4, align 4
  store i32 %25, i32* %8, align 8
  %26 = call zeroext i1 @_ZN8SkStream10readScalarEPf(%class.SkStream* nonnull %0, float* %9) #17
  br i1 %26, label %27, label %45

27:                                               ; preds = %24
  %28 = call zeroext i1 @_ZN8SkStream10readScalarEPf(%class.SkStream* nonnull %0, float* %11) #17
  br i1 %28, label %29, label %45

29:                                               ; preds = %27
  %30 = call zeroext i1 @_ZN8SkStream10readScalarEPf(%class.SkStream* nonnull %0, float* %12) #17
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = call zeroext i1 @_ZN8SkStream10readScalarEPf(%class.SkStream* nonnull %0, float* %13) #17
  br i1 %32, label %33, label %45

33:                                               ; preds = %31
  %34 = bitcast %struct.SkPictInfo* %3 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 8386662862485547891
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = load i32, i32* %8, align 8
  %39 = add i32 %38, -73
  %40 = icmp ult i32 %39, 14
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = icmp eq %struct.SkPictInfo* %1, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %1, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* nonnull align 8 %7, i64 28, i1 false)
  br label %45

45:                                               ; preds = %37, %33, %43, %41, %31, %29, %27, %24, %21
  %46 = phi i1 [ false, %21 ], [ false, %24 ], [ false, %27 ], [ false, %29 ], [ false, %31 ], [ true, %41 ], [ true, %43 ], [ false, %37 ], [ false, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #17
  br label %47

47:                                               ; preds = %6, %45
  %48 = phi i1 [ %46, %45 ], [ false, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %7) #17
  br label %49

49:                                               ; preds = %2, %47
  %50 = phi i1 [ %48, %47 ], [ false, %2 ]
  ret i1 %50
}

declare zeroext i1 @_ZN8SkStream10readScalarEPf(%class.SkStream*, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z21SkPicture_StreamIsSKPP8SkStreamP10SkPictInfo(%class.SkStream*, %struct.SkPictInfo*) local_unnamed_addr #4 {
  %3 = tail call zeroext i1 @_ZN9SkPicture11StreamIsSKPEP8SkStreamP10SkPictInfo(%class.SkStream* %0, %struct.SkPictInfo* %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkPicture11BufferIsSKPEP12SkReadBufferP10SkPictInfo(%class.SkReadBuffer*, %struct.SkPictInfo*) local_unnamed_addr #4 align 2 {
  %3 = alloca %struct.SkPictInfo, align 8
  %4 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %4) #17
  %5 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 1
  %6 = bitcast %struct.SkPictInfo* %3 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -1, i64 20, i1 false)
  %8 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %0, i8* nonnull %4, i64 8) #17
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %3, i64 0, i32 2
  %11 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %0) #17
  store i32 %11, i32* %5, align 8
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %0, %struct.SkRect* %10) #17
  %12 = bitcast %struct.SkPictInfo* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 8386662862485547891
  br i1 %14, label %15, label %23

15:                                               ; preds = %9
  %16 = load i32, i32* %5, align 8
  %17 = add i32 %16, -73
  %18 = icmp ult i32 %17, 14
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = icmp eq %struct.SkPictInfo* %1, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %1, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* nonnull align 8 %4, i64 28, i1 false)
  br label %23

23:                                               ; preds = %15, %9, %21, %19, %2
  %24 = phi i1 [ false, %2 ], [ true, %19 ], [ true, %21 ], [ false, %15 ], [ false, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %4) #17
  ret i1 %24
}

declare zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer(%class.sk_sp.17* noalias sret, %struct.SkPictInfo* dereferenceable(28), %class.SkPictureData*, %class.SkReadBuffer*) local_unnamed_addr #4 align 2 {
  %5 = alloca %class.SkPicturePlayback, align 8
  %6 = alloca %class.SkPictureRecorder, align 8
  %7 = icmp eq %class.SkPictureData* %2, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %9, align 8
  br label %23

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %2, i64 0, i32 2, i32 0
  %12 = load %class.SkData*, %class.SkData** %11, align 8
  %13 = icmp eq %class.SkData* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %15, align 8
  br label %23

16:                                               ; preds = %10
  %17 = bitcast %class.SkPicturePlayback* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %5, i64 0, i32 0
  %19 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %5, i64 0, i32 1
  store %class.SkPictureData* %2, %class.SkPictureData** %18, align 8
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" }* @__const._ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer.r, i64 0, i32 0), i64 56, i1 false)
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %6) #17
  %21 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %1, i64 0, i32 2
  %22 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %6, %struct.SkRect* dereferenceable(16) %21, %class.SkBBHFactory* null) #17
  call void @_ZN17SkPicturePlayback4drawEP8SkCanvasPN9SkPicture13AbortCallbackEP12SkReadBuffer(%class.SkPicturePlayback* nonnull %5, %class.SkCanvas* %22, %"class.SkPicture::AbortCallback"* null, %class.SkReadBuffer* %3) #17
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.17* sret %0, %class.SkPictureRecorder* nonnull %6) #17
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  br label %23

23:                                               ; preds = %16, %14, %8
  ret void
}

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #1

declare void @_ZN17SkPicturePlayback4drawEP8SkCanvasPN9SkPicture13AbortCallbackEP12SkReadBuffer(%class.SkPicturePlayback*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*, %class.SkReadBuffer*) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #1

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.17* sret, %class.SkPictureRecorder*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcs(%class.sk_sp.17* noalias sret, %class.SkStream*, %struct.SkDeserialProcs* readonly) local_unnamed_addr #4 align 2 {
  tail call void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcsP18SkTypefacePlayback(%class.sk_sp.17* sret %0, %class.SkStream* %1, %struct.SkDeserialProcs* %2, %class.SkTypefacePlayback* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcsP18SkTypefacePlayback(%class.sk_sp.17* noalias sret, %class.SkStream*, %struct.SkDeserialProcs* readonly, %class.SkTypefacePlayback*) local_unnamed_addr #4 align 2 {
  %5 = alloca %class.SkPicturePlayback, align 8
  %6 = alloca %class.SkPictureRecorder, align 8
  %7 = alloca %struct.SkPictInfo, align 8
  %8 = alloca %struct.SkDeserialProcs, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %class.sk_sp.31, align 8
  %12 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %12) #17
  %13 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %7, i64 0, i32 1
  %14 = bitcast %struct.SkPictInfo* %7 to i64*
  store i64 -6148914691236517206, i64* %14, align 8
  %15 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -1, i64 20, i1 false)
  %16 = call zeroext i1 @_ZN9SkPicture11StreamIsSKPEP8SkStreamP10SkPictInfo(%class.SkStream* %1, %struct.SkPictInfo* nonnull %7)
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %18, align 8
  br label %100

19:                                               ; preds = %4
  %20 = bitcast %struct.SkDeserialProcs* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #17
  %21 = getelementptr inbounds %struct.SkDeserialProcs, %struct.SkDeserialProcs* %8, i64 0, i32 0
  %22 = getelementptr inbounds %struct.SkDeserialProcs, %struct.SkDeserialProcs* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 48, i1 false) #17
  %23 = icmp eq %struct.SkDeserialProcs* %2, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %struct.SkDeserialProcs* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %25, i64 48, i1 false)
  br label %26

26:                                               ; preds = %19, %24
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #17
  store i8 -86, i8* %9, align 1
  %27 = call zeroext i1 @_ZN8SkStream6readS8EPa(%class.SkStream* %1, i8* nonnull %9) #17
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %29, align 8
  br label %99

30:                                               ; preds = %26
  %31 = load i8, i8* %9, align 1
  switch i8 %31, label %97 [
    i8 1, label %32
    i8 2, label %52
  ]

32:                                               ; preds = %30
  %33 = call %class.SkPictureData* @_ZN13SkPictureData16CreateFromStreamEP8SkStreamRK10SkPictInfoRK15SkDeserialProcsP18SkTypefacePlayback(%class.SkStream* %1, %struct.SkPictInfo* nonnull dereferenceable(28) %7, %struct.SkDeserialProcs* nonnull dereferenceable(48) %8, %class.SkTypefacePlayback* %3) #17
  %34 = icmp eq %class.SkPictureData* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %33, i64 0, i32 2, i32 0
  %37 = load %class.SkData*, %class.SkData** %36, align 8, !noalias !2
  %38 = icmp eq %class.SkData* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %40, align 8, !alias.scope !2
  br label %50

41:                                               ; preds = %35
  %42 = bitcast %class.SkPicturePlayback* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #17, !noalias !2
  %43 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %5, i64 0, i32 0
  %44 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %5, i64 0, i32 1
  store %class.SkPictureData* %33, %class.SkPictureData** %43, align 8, !noalias !2
  store i64 0, i64* %44, align 8, !noalias !2
  %45 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %45) #17, !noalias !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" }* @__const._ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer.r, i64 0, i32 0), i64 56, i1 false) #17, !noalias !2
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %6) #17, !noalias !2
  %46 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %7, i64 0, i32 2
  %47 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %6, %struct.SkRect* dereferenceable(16) %46, %class.SkBBHFactory* null) #17, !noalias !2
  call void @_ZN17SkPicturePlayback4drawEP8SkCanvasPN9SkPicture13AbortCallbackEP12SkReadBuffer(%class.SkPicturePlayback* nonnull %5, %class.SkCanvas* %47, %"class.SkPicture::AbortCallback"* null, %class.SkReadBuffer* null) #17, !noalias !2
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.17* sret %0, %class.SkPictureRecorder* nonnull %6) #17
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %45) #17, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #17, !noalias !2
  br label %50

48:                                               ; preds = %32
  %49 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %49, align 8, !alias.scope !2
  br label %99

50:                                               ; preds = %39, %41
  call void @_ZN13SkPictureDataD2Ev(%class.SkPictureData* nonnull %33) #17
  %51 = bitcast %class.SkPictureData* %33 to i8*
  call void @_ZdlPv(i8* %51) #18
  br label %99

52:                                               ; preds = %30
  %53 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #17
  store i32 -1431655766, i32* %10, align 4
  %54 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %10) #17
  %55 = xor i1 %54, true
  %56 = load i32, i32* %10, align 4
  %57 = icmp sgt i32 %56, -1
  %58 = or i1 %57, %55
  %59 = load void (%class.sk_sp.17*, i8*, i64, i8*)*, void (%class.sk_sp.17*, i8*, i64, i8*)** %21, align 8
  %60 = icmp eq void (%class.sk_sp.17*, i8*, i64, i8*)* %59, null
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %52
  %63 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %63, align 8
  br label %96

64:                                               ; preds = %52
  %65 = sext i32 %56 to i64
  %66 = sub nsw i64 0, %65
  %67 = bitcast %class.sk_sp.31* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #17
  %68 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %11, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %68, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.31* nonnull sret %11, i64 %66) #17
  %69 = load %class.SkData*, %class.SkData** %68, align 8
  %70 = getelementptr inbounds %class.SkData, %class.SkData* %69, i64 0, i32 3
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*, i8*, i64)***
  %73 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %72, align 8
  %74 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %73, i64 2
  %75 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %74, align 8
  %76 = call i64 %75(%class.SkStream* %1, i8* %71, i64 %66) #17
  %77 = icmp eq i64 %76, %66
  br i1 %77, label %80, label %78

78:                                               ; preds = %64
  %79 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %79, align 8
  br label %86

80:                                               ; preds = %64
  %81 = load void (%class.sk_sp.17*, i8*, i64, i8*)*, void (%class.sk_sp.17*, i8*, i64, i8*)** %21, align 8
  %82 = load %class.SkData*, %class.SkData** %68, align 8
  %83 = getelementptr inbounds %class.SkData, %class.SkData* %82, i64 0, i32 3
  %84 = load i8*, i8** %83, align 8
  %85 = load i8*, i8** %22, align 8
  call void %81(%class.sk_sp.17* sret %0, i8* %84, i64 %66, i8* %85) #17
  br label %86

86:                                               ; preds = %80, %78
  %87 = load %class.SkData*, %class.SkData** %68, align 8
  %88 = icmp eq %class.SkData* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %class.SkData, %class.SkData* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %87) #17
  %94 = bitcast %class.SkData* %87 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %94) #17
  br label %95

95:                                               ; preds = %86, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #17
  br label %96

96:                                               ; preds = %95, %62
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #17
  br label %99

97:                                               ; preds = %30
  %98 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %98, align 8
  br label %99

99:                                               ; preds = %50, %48, %97, %96, %28
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #17
  br label %100

100:                                              ; preds = %99, %17
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %12) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPicture12MakeFromDataEPKvmPK15SkDeserialProcs(%class.sk_sp.17* noalias sret, i8*, i64, %struct.SkDeserialProcs* readonly) local_unnamed_addr #4 align 2 {
  %5 = alloca %class.SkMemoryStream, align 8
  %6 = icmp eq i8* %1, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %8, align 8
  br label %24

9:                                                ; preds = %4
  %10 = bitcast %class.SkMemoryStream* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  %11 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %5, i64 0, i32 1, i32 0
  %13 = bitcast %class.SkMemoryStream* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN14SkMemoryStreamC1EPKvmb(%class.SkMemoryStream* nonnull %5, i8* nonnull %1, i64 %2, i1 zeroext false) #17
  %14 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcsP18SkTypefacePlayback(%class.sk_sp.17* sret %0, %class.SkStream* nonnull %14, %struct.SkDeserialProcs* %3, %class.SkTypefacePlayback* null)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV14SkMemoryStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %15 = load %class.SkData*, %class.SkData** %12, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %15) #17
  %22 = bitcast %class.SkData* %15 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %22) #17
  br label %23

23:                                               ; preds = %9, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #17
  br label %24

24:                                               ; preds = %23, %7
  ret void
}

declare void @_ZN14SkMemoryStreamC1EPKvmb(%class.SkMemoryStream*, i8*, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPicture12MakeFromDataEPK6SkDataPK15SkDeserialProcs(%class.sk_sp.17* noalias sret, %class.SkData* readonly, %struct.SkDeserialProcs* readonly) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkMemoryStream, align 8
  %5 = icmp eq %class.SkData* %1, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %7, align 8
  br label %27

8:                                                ; preds = %3
  %9 = bitcast %class.SkMemoryStream* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %4, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 3
  %13 = bitcast %class.SkMemoryStream* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8*, i8** %12, align 8
  %15 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  call void @_ZN14SkMemoryStreamC1EPKvmb(%class.SkMemoryStream* nonnull %4, i8* %14, i64 %16, i1 zeroext false) #17
  %17 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN9SkPicture14MakeFromStreamEP8SkStreamPK15SkDeserialProcsP18SkTypefacePlayback(%class.sk_sp.17* sret %0, %class.SkStream* nonnull %17, %struct.SkDeserialProcs* %2, %class.SkTypefacePlayback* null)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV14SkMemoryStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %18 = load %class.SkData*, %class.SkData** %11, align 8
  %19 = icmp eq %class.SkData* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %class.SkData, %class.SkData* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %18) #17
  %25 = bitcast %class.SkData* %18 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %25) #17
  br label %26

26:                                               ; preds = %8, %20, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  br label %27

27:                                               ; preds = %26, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare %class.SkPictureData* @_ZN13SkPictureData16CreateFromStreamEP8SkStreamRK10SkPictInfoRK15SkDeserialProcsP18SkTypefacePlayback(%class.SkStream*, %struct.SkPictInfo* dereferenceable(28), %struct.SkDeserialProcs* dereferenceable(48), %class.SkTypefacePlayback*) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream*, i32*) local_unnamed_addr #1

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.31* sret, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPicturePriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.17* noalias sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #4 align 2 {
  %3 = alloca %class.SkPicturePlayback, align 8
  %4 = alloca %class.SkPictureRecorder, align 8
  %5 = alloca %struct.SkPictInfo, align 8
  %6 = alloca %struct.SkPictInfo, align 8
  %7 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %7) #17
  %8 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %6, i64 0, i32 1
  %9 = bitcast %struct.SkPictInfo* %6 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %5, i64 0, i32 0, i64 0
  %11 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -1, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %10) #17
  %12 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %5, i64 0, i32 1
  %13 = bitcast %struct.SkPictInfo* %5 to i64*
  store i64 -6148914691236517206, i64* %13, align 8
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -1, i64 20, i1 false) #17
  %15 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* nonnull %10, i64 8) #17
  br i1 %15, label %16, label %25

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %5, i64 0, i32 2
  %18 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #17
  store i32 %18, i32* %12, align 8
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* %17) #17
  %19 = load i64, i64* %13, align 8
  %20 = icmp eq i64 %19, 8386662862485547891
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = load i32, i32* %12, align 8
  %23 = add i32 %22, -73
  %24 = icmp ult i32 %23, 14
  br i1 %24, label %27, label %25

25:                                               ; preds = %2, %21, %16
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %10) #17
  %26 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %26, align 8
  br label %66

27:                                               ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %10, i64 28, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %10) #17
  %28 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #17
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 0
  %32 = load void (%class.sk_sp.17*, i8*, i64, i8*)*, void (%class.sk_sp.17*, i8*, i64, i8*)** %31, align 8
  %33 = icmp eq void (%class.sk_sp.17*, i8*, i64, i8*)* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %35, align 8
  br label %66

36:                                               ; preds = %30
  %37 = sext i32 %28 to i64
  %38 = sub nsw i64 0, %37
  %39 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 %38) #17
  %40 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 1
  %41 = load i8*, i8** %40, align 8
  call void %32(%class.sk_sp.17* sret %0, i8* %39, i64 %38, i8* %41) #17
  br label %66

42:                                               ; preds = %27
  %43 = icmp eq i32 %28, 1
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %45, align 8
  br label %66

46:                                               ; preds = %42
  %47 = call %class.SkPictureData* @_ZN13SkPictureData16CreateFromBufferER12SkReadBufferRK10SkPictInfo(%class.SkReadBuffer* dereferenceable(136) %1, %struct.SkPictInfo* nonnull dereferenceable(28) %6) #17
  %48 = icmp eq %class.SkPictureData* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %47, i64 0, i32 2, i32 0
  %51 = load %class.SkData*, %class.SkData** %50, align 8, !noalias !5
  %52 = icmp eq %class.SkData* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %54, align 8, !alias.scope !5
  br label %64

55:                                               ; preds = %49
  %56 = bitcast %class.SkPicturePlayback* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #17, !noalias !5
  %57 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %3, i64 0, i32 0
  %58 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %3, i64 0, i32 1
  store %class.SkPictureData* %47, %class.SkPictureData** %57, align 8, !noalias !5
  store i64 0, i64* %58, align 8, !noalias !5
  %59 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %59) #17, !noalias !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %class.sk_sp.66, %"class.std::__1::unique_ptr.67" }* @__const._ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer.r, i64 0, i32 0), i64 56, i1 false) #17, !noalias !5
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %4) #17, !noalias !5
  %60 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %6, i64 0, i32 2
  %61 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %4, %struct.SkRect* dereferenceable(16) %60, %class.SkBBHFactory* null) #17, !noalias !5
  call void @_ZN17SkPicturePlayback4drawEP8SkCanvasPN9SkPicture13AbortCallbackEP12SkReadBuffer(%class.SkPicturePlayback* nonnull %3, %class.SkCanvas* %61, %"class.SkPicture::AbortCallback"* null, %class.SkReadBuffer* %1) #17, !noalias !5
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.17* sret %0, %class.SkPictureRecorder* nonnull %4) #17
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %59) #17, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #17, !noalias !5
  br label %64

62:                                               ; preds = %46
  %63 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %63, align 8, !alias.scope !5
  br label %66

64:                                               ; preds = %53, %55
  call void @_ZN13SkPictureDataD2Ev(%class.SkPictureData* nonnull %47) #17
  %65 = bitcast %class.SkPictureData* %47 to i8*
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %64, %62, %44, %36, %34, %25
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %7) #17
  ret void
}

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #1

declare i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer*, i64) local_unnamed_addr #1

declare %class.SkPictureData* @_ZN13SkPictureData16CreateFromBufferER12SkReadBufferRK10SkPictInfo(%class.SkReadBuffer* dereferenceable(136), %struct.SkPictInfo* dereferenceable(28)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.SkPictureData* @_ZNK9SkPicture8backportEv(%class.SkPicture*) local_unnamed_addr #4 align 2 {
  %2 = alloca %struct.SkPictInfo, align 8
  %3 = alloca %class.SkPictureRecord, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %6) #17
  %7 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %2, i64 0, i32 1
  %8 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %2, i64 0, i32 2
  %9 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %2, i64 0, i32 2, i32 2
  %10 = bitcast %struct.SkPictInfo* %2 to i64*
  store i64 8386662862485547891, i64* %10, align 8, !alias.scope !8
  store i32 86, i32* %7, align 8, !alias.scope !8
  %11 = bitcast %class.SkPicture* %0 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %12 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %11, align 8, !noalias !8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %12, i64 4
  %14 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %13, align 8, !noalias !8
  %15 = tail call { <2 x float>, <2 x float> } %14(%class.SkPicture* %0) #17, !noalias !8
  %16 = extractvalue { <2 x float>, <2 x float> } %15, 0
  %17 = extractvalue { <2 x float>, <2 x float> } %15, 1
  %18 = bitcast %struct.SkRect* %8 to <2 x float>*
  store <2 x float> %16, <2 x float>* %18, align 4, !alias.scope !8
  %19 = bitcast float* %9 to <2 x float>*
  store <2 x float> %17, <2 x float>* %19, align 4, !alias.scope !8
  %20 = bitcast %class.SkPictureRecord* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3424, i8* nonnull %20) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast ({ { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.73, [384 x i64], %class.sk_sp.74, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.75", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.81" } }, %class.SkTDArray.93, %class.SkTDArray.94, %class.SkTArray, %class.SkTHashMap.95, %class.SkWriter32, %class.SkTArray.45, %class.SkTArray.35, %class.SkTArray.37, %class.SkTArray.39, %class.SkTArray.42, i32, i32 }* @__const._ZNK9SkPicture8backportEv.rec to i8*), i64 3424, i1 false)
  %21 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #17
  %22 = extractelement <2 x float> %16, i32 0
  %23 = tail call float @llvm.floor.f32(float %22) #17
  %24 = fcmp olt float %23, 0x41DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0x41DFFFFFE0000000
  %26 = fcmp ogt float %25, 0xC1DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0xC1DFFFFFE0000000
  %28 = fptosi float %27 to i32
  %29 = extractelement <2 x float> %16, i32 1
  %30 = tail call float @llvm.floor.f32(float %29) #17
  %31 = fcmp olt float %30, 0x41DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0x41DFFFFFE0000000
  %33 = fcmp ogt float %32, 0xC1DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0xC1DFFFFFE0000000
  %35 = fptosi float %34 to i32
  %36 = extractelement <2 x float> %17, i32 0
  %37 = tail call float @llvm.ceil.f32(float %36) #17
  %38 = fcmp olt float %37, 0x41DFFFFFE0000000
  %39 = select i1 %38, float %37, float 0x41DFFFFFE0000000
  %40 = fcmp ogt float %39, 0xC1DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0xC1DFFFFFE0000000
  %42 = fptosi float %41 to i32
  %43 = extractelement <2 x float> %17, i32 1
  %44 = tail call float @llvm.ceil.f32(float %43) #17
  %45 = fcmp olt float %44, 0x41DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0x41DFFFFFE0000000
  %47 = fcmp ogt float %46, 0xC1DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0xC1DFFFFFE0000000
  %49 = fptosi float %48 to i32
  %50 = zext i32 %35 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %28 to i64
  %53 = or i64 %51, %52
  %54 = zext i32 %49 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %42 to i64
  %57 = or i64 %55, %56
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %53, i64* %58, align 8
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %57, i64* %59, align 8
  call void @_ZN15SkPictureRecordC1ERK7SkIRectj(%class.SkPictureRecord* nonnull %3, %struct.SkIRect* nonnull dereferenceable(16) %5, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #17
  call void @_ZN15SkPictureRecord14beginRecordingEv(%class.SkPictureRecord* nonnull %3) #17
  %60 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %3, i64 0, i32 0, i32 0
  %61 = bitcast %class.SkPicture* %0 to void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)***
  %62 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)**, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %62, i64 3
  %64 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %63, align 8
  call void %64(%class.SkPicture* %0, %class.SkCanvas* nonnull %60, %"class.SkPicture::AbortCallback"* null) #17
  call void @_ZN15SkPictureRecord12endRecordingEv(%class.SkPictureRecord* nonnull %3) #17
  %65 = call i8* @_Znwm(i64 248) #18
  %66 = bitcast i8* %65 to %class.SkPictureData*
  call void @_ZN13SkPictureDataC1ERK15SkPictureRecordRK10SkPictInfo(%class.SkPictureData* nonnull %66, %class.SkPictureRecord* nonnull dereferenceable(3424) %3, %struct.SkPictInfo* nonnull dereferenceable(28) %2) #17
  call void @_ZN15SkPictureRecordD2Ev(%class.SkPictureRecord* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 3424, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %6) #17
  ret %class.SkPictureData* %66
}

declare void @_ZN15SkPictureRecordC1ERK7SkIRectj(%class.SkPictureRecord*, %struct.SkIRect* dereferenceable(16), i32) unnamed_addr #1

declare void @_ZN15SkPictureRecord14beginRecordingEv(%class.SkPictureRecord*) local_unnamed_addr #1

declare void @_ZN15SkPictureRecord12endRecordingEv(%class.SkPictureRecord*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN13SkPictureDataC1ERK15SkPictureRecordRK10SkPictInfo(%class.SkPictureData*, %class.SkPictureRecord* dereferenceable(3424), %struct.SkPictInfo* dereferenceable(28)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkPictureRecordD2Ev(%class.SkPictureRecord*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV15SkPictureRecord, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 10
  %4 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 10, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.42, %class.SkTArray.42* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %26, %1
  %11 = phi i64 [ %5, %1 ], [ %28, %26 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %35, label %32

14:                                               ; preds = %26, %8
  %15 = phi i64 [ 0, %8 ], [ %27, %26 ]
  %16 = load %class.sk_sp.43*, %class.sk_sp.43** %9, align 8
  %17 = getelementptr inbounds %class.sk_sp.43, %class.sk_sp.43* %16, i64 %15, i32 0
  %18 = load %class.SkVertices*, %class.SkVertices** %17, align 8
  %19 = icmp eq %class.SkVertices* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkVertices* %18 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %25) #17
  br label %26

26:                                               ; preds = %24, %20, %14
  %27 = add nuw nsw i64 %15, 1
  %28 = load i64, i64* %4, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %14, label %10

32:                                               ; preds = %10
  %33 = bitcast %class.SkTArray.42* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #17
  br label %35

35:                                               ; preds = %10, %32
  %36 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 9
  %37 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 9, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 4294967294
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.SkTArray.39, %class.SkTArray.39* %36, i64 0, i32 0
  br label %47

43:                                               ; preds = %59, %35
  %44 = phi i64 [ %38, %35 ], [ %61, %59 ]
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %68, label %65

47:                                               ; preds = %59, %41
  %48 = phi i64 [ 0, %41 ], [ %60, %59 ]
  %49 = load %class.sk_sp.40*, %class.sk_sp.40** %42, align 8
  %50 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %49, i64 %48, i32 0
  %51 = load %class.SkTextBlob*, %class.SkTextBlob** %50, align 8
  %52 = icmp eq %class.SkTextBlob* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %51) #17
  %58 = bitcast %class.SkTextBlob* %51 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %58) #17
  br label %59

59:                                               ; preds = %57, %53, %47
  %60 = add nuw nsw i64 %48, 1
  %61 = load i64, i64* %37, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = icmp ult i64 %60, %63
  br i1 %64, label %47, label %43

65:                                               ; preds = %43
  %66 = bitcast %class.SkTArray.39* %36 to i8**
  %67 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %67) #17
  br label %68

68:                                               ; preds = %43, %65
  %69 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 8
  %70 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 8, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 4294967294
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %69, i64 0, i32 0
  br label %80

76:                                               ; preds = %96, %68
  %77 = phi i64 [ %71, %68 ], [ %98, %96 ]
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %105, label %102

80:                                               ; preds = %96, %74
  %81 = phi i64 [ 0, %74 ], [ %97, %96 ]
  %82 = load %class.sk_sp.38*, %class.sk_sp.38** %75, align 8
  %83 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %82, i64 %81, i32 0
  %84 = load %class.SkDrawable*, %class.SkDrawable** %83, align 8
  %85 = icmp eq %class.SkDrawable* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.SkDrawable* %84 to %class.SkRefCntBase*
  %92 = bitcast %class.SkDrawable* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  tail call void %95(%class.SkRefCntBase* nonnull %91) #17
  br label %96

96:                                               ; preds = %90, %86, %80
  %97 = add nuw nsw i64 %81, 1
  %98 = load i64, i64* %70, align 8
  %99 = lshr i64 %98, 1
  %100 = and i64 %99, 2147483647
  %101 = icmp ult i64 %97, %100
  br i1 %101, label %80, label %76

102:                                              ; preds = %76
  %103 = bitcast %class.SkTArray.37* %69 to i8**
  %104 = load i8*, i8** %103, align 8
  tail call void @_Z7sk_freePv(i8* %104) #17
  br label %105

105:                                              ; preds = %76, %102
  %106 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 7
  %107 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 7, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 4294967294
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %class.SkTArray.35, %class.SkTArray.35* %106, i64 0, i32 0
  br label %117

113:                                              ; preds = %133, %105
  %114 = phi i64 [ %108, %105 ], [ %135, %133 ]
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %142, label %139

117:                                              ; preds = %133, %111
  %118 = phi i64 [ 0, %111 ], [ %134, %133 ]
  %119 = load %class.sk_sp.36*, %class.sk_sp.36** %112, align 8
  %120 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %119, i64 %118, i32 0
  %121 = load %class.SkPicture*, %class.SkPicture** %120, align 8
  %122 = icmp eq %class.SkPicture* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %121, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %class.SkPicture* %121 to %class.SkRefCntBase*
  %129 = bitcast %class.SkPicture* %121 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  tail call void %132(%class.SkRefCntBase* nonnull %128) #17
  br label %133

133:                                              ; preds = %127, %123, %117
  %134 = add nuw nsw i64 %118, 1
  %135 = load i64, i64* %107, align 8
  %136 = lshr i64 %135, 1
  %137 = and i64 %136, 2147483647
  %138 = icmp ult i64 %134, %137
  br i1 %138, label %117, label %113

139:                                              ; preds = %113
  %140 = bitcast %class.SkTArray.35* %106 to i8**
  %141 = load i8*, i8** %140, align 8
  tail call void @_Z7sk_freePv(i8* %141) #17
  br label %142

142:                                              ; preds = %113, %139
  %143 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 6
  %144 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 6, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, 4294967294
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %143, i64 0, i32 0
  br label %154

150:                                              ; preds = %170, %142
  %151 = phi i64 [ %145, %142 ], [ %172, %170 ]
  %152 = and i64 %151, 1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %179, label %176

154:                                              ; preds = %170, %148
  %155 = phi i64 [ 0, %148 ], [ %171, %170 ]
  %156 = load %class.sk_sp.46*, %class.sk_sp.46** %149, align 8
  %157 = getelementptr inbounds %class.sk_sp.46, %class.sk_sp.46* %156, i64 %155, i32 0
  %158 = load %class.SkImage*, %class.SkImage** %157, align 8
  %159 = icmp eq %class.SkImage* %158, null
  br i1 %159, label %170, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %class.SkImage, %class.SkImage* %158, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %170

164:                                              ; preds = %160
  %165 = bitcast %class.SkImage* %158 to %class.SkRefCntBase*
  %166 = bitcast %class.SkImage* %158 to void (%class.SkRefCntBase*)***
  %167 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, i64 2
  %169 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %168, align 8
  tail call void %169(%class.SkRefCntBase* nonnull %165) #17
  br label %170

170:                                              ; preds = %164, %160, %154
  %171 = add nuw nsw i64 %155, 1
  %172 = load i64, i64* %144, align 8
  %173 = lshr i64 %172, 1
  %174 = and i64 %173, 2147483647
  %175 = icmp ult i64 %171, %174
  br i1 %175, label %154, label %150

176:                                              ; preds = %150
  %177 = bitcast %class.SkTArray.45* %143 to i8**
  %178 = load i8*, i8** %177, align 8
  tail call void @_Z7sk_freePv(i8* %178) #17
  br label %179

179:                                              ; preds = %150, %176
  %180 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 5, i32 4, i32 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  store i8* null, i8** %180, align 8
  %182 = icmp eq i8* %181, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %179
  tail call void @_Z7sk_freePv(i8* nonnull %181) #17
  br label %184

184:                                              ; preds = %179, %183
  %185 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %186 = load %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"** %185, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"** %185, align 8
  %187 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %186, null
  br i1 %187, label %202, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %186, i64 -1, i32 1
  %190 = bitcast i32* %189 to i8*
  %191 = bitcast i32* %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %201, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %186, i64 %192
  br label %196

196:                                              ; preds = %196, %194
  %197 = phi %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* [ %198, %196 ], [ %195, %194 ]
  %198 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %197, i64 -1
  %199 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %198, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %199) #17
  %200 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair, SkPath, SkTHashMap<SkPath, int, SkPictureRecord::PathHash>::Pair>::Slot"* %198, %186
  br i1 %200, label %201, label %196

201:                                              ; preds = %196, %188
  tail call void @_ZdaPv(i8* %190) #18
  br label %202

202:                                              ; preds = %184, %201
  %203 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 3
  %204 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 3, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = and i64 %205, 4294967294
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %203, i64 0, i32 0
  br label %214

210:                                              ; preds = %214, %202
  %211 = phi i64 [ %205, %202 ], [ %219, %214 ]
  %212 = and i64 %211, 1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %226, label %223

214:                                              ; preds = %214, %208
  %215 = phi i64 [ 0, %208 ], [ %218, %214 ]
  %216 = load %class.SkPaint*, %class.SkPaint** %209, align 8
  %217 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %216, i64 %215
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %217) #17
  %218 = add nuw nsw i64 %215, 1
  %219 = load i64, i64* %204, align 8
  %220 = lshr i64 %219, 1
  %221 = and i64 %220, 2147483647
  %222 = icmp ult i64 %218, %221
  br i1 %222, label %214, label %210

223:                                              ; preds = %210
  %224 = bitcast %class.SkTArray* %203 to i8**
  %225 = load i8*, i8** %224, align 8
  tail call void @_Z7sk_freePv(i8* %225) #17
  br label %226

226:                                              ; preds = %210, %223
  %227 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 2
  %228 = bitcast %class.SkTDArray.94* %227 to i8**
  %229 = load i8*, i8** %228, align 8
  tail call void @_Z7sk_freePv(i8* %229) #17
  %230 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 1
  %231 = bitcast %class.SkTDArray.93* %230 to i8**
  %232 = load i8*, i8** %231, align 8
  tail call void @_Z7sk_freePv(i8* %232) #17
  %233 = getelementptr inbounds %class.SkPictureRecord, %class.SkPictureRecord* %0, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* %233) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcs(%class.SkPicture*, %class.SkWStream*, %struct.SkSerialProcs* readonly) local_unnamed_addr #4 align 2 {
  tail call void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcsP11SkRefCntSetb(%class.SkPicture* %0, %class.SkWStream* %1, %struct.SkSerialProcs* %2, %class.SkRefCntSet* null, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcsP11SkRefCntSetb(%class.SkPicture*, %class.SkWStream*, %struct.SkSerialProcs* readonly, %class.SkRefCntSet*, i1 zeroext) local_unnamed_addr #4 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca %class.sk_sp.31, align 8
  %12 = alloca %struct.SkSerialProcs, align 8
  %13 = alloca %struct.SkPictInfo, align 8
  %14 = alloca %class.sk_sp.31, align 8
  %15 = bitcast %struct.SkSerialProcs* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #17
  %16 = getelementptr inbounds %struct.SkSerialProcs, %struct.SkSerialProcs* %12, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 48, i1 false) #17
  %17 = icmp eq %struct.SkSerialProcs* %2, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %struct.SkSerialProcs, %struct.SkSerialProcs* %12, i64 0, i32 0
  %20 = bitcast %struct.SkSerialProcs* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %20, i64 48, i1 false)
  %21 = load void (%class.sk_sp.31*, %class.SkPicture*, i8*)*, void (%class.sk_sp.31*, %class.SkPicture*, i8*)** %19, align 8, !noalias !11
  br label %22

22:                                               ; preds = %5, %18
  %23 = phi void (%class.sk_sp.31*, %class.SkPicture*, i8*)* [ null, %5 ], [ %21, %18 ]
  %24 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %24) #17
  %25 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %13, i64 0, i32 1
  %26 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %13, i64 0, i32 2, i32 2
  %27 = bitcast %struct.SkPictInfo* %13 to i64*
  store i64 8386662862485547891, i64* %27, align 8, !alias.scope !14
  store i32 86, i32* %25, align 8, !alias.scope !14
  %28 = bitcast %class.SkPicture* %0 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %29 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %28, align 8, !noalias !14
  %30 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %29, i64 4
  %31 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %30, align 8, !noalias !14
  %32 = tail call { <2 x float>, <2 x float> } %31(%class.SkPicture* %0) #17, !noalias !14
  %33 = extractvalue { <2 x float>, <2 x float> } %32, 0
  %34 = extractvalue { <2 x float>, <2 x float> } %32, 1
  %35 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %13, i64 0, i32 2
  %36 = bitcast %struct.SkRect* %35 to <2 x float>*
  store <2 x float> %33, <2 x float>* %36, align 4, !alias.scope !14
  %37 = bitcast float* %26 to <2 x float>*
  store <2 x float> %34, <2 x float>* %37, align 4, !alias.scope !14
  %38 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %39 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %38, align 8
  %40 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %39, i64 2
  %41 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %40, align 8
  %42 = call zeroext i1 %41(%class.SkWStream* %1, i8* nonnull %24, i64 28) #17
  %43 = bitcast %class.sk_sp.31* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #17
  %44 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %14, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %44, align 8
  %45 = icmp eq void (%class.sk_sp.31*, %class.SkPicture*, i8*)* %23, null
  br i1 %45, label %70, label %46

46:                                               ; preds = %22
  %47 = bitcast %class.sk_sp.31* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #17, !noalias !11
  %48 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %11, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %48, align 8, !noalias !11
  %49 = load i8*, i8** %16, align 8, !noalias !11
  call void %23(%class.sk_sp.31* nonnull sret %11, %class.SkPicture* %0, i8* %49) #17, !noalias !11
  %50 = load %class.SkData*, %class.SkData** %48, align 8, !noalias !11
  %51 = icmp eq %class.SkData* %50, null
  %52 = ptrtoint %class.SkData* %50 to i64
  br i1 %51, label %69, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %class.SkData, %class.SkData* %50, i64 0, i32 4
  %55 = load i64, i64* %54, align 8, !noalias !11
  %56 = add i64 %55, -2
  %57 = icmp ugt i64 %56, 2147483645
  br i1 %57, label %58, label %67

58:                                               ; preds = %53
  call void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.31* nonnull sret %14) #17
  %59 = load %class.SkData*, %class.SkData** %48, align 8, !noalias !11
  %60 = icmp eq %class.SkData* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkData, %class.SkData* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %59) #17
  %66 = bitcast %class.SkData* %59 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %66) #17
  br label %71

67:                                               ; preds = %53
  %68 = bitcast %class.sk_sp.31* %14 to i64*
  store i64 %52, i64* %68, align 8, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17, !noalias !11
  br label %74

69:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17, !noalias !11
  br label %70

70:                                               ; preds = %22, %69
  store %class.SkData* null, %class.SkData** %44, align 8, !alias.scope !11
  br label %134

71:                                               ; preds = %58, %61, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17, !noalias !11
  %72 = load %class.SkData*, %class.SkData** %44, align 8
  %73 = icmp eq %class.SkData* %72, null
  br i1 %73, label %134, label %74

74:                                               ; preds = %67, %71
  %75 = phi %class.SkData* [ %50, %67 ], [ %72, %71 ]
  %76 = getelementptr inbounds %class.SkData, %class.SkData* %75, i64 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %94

80:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #17
  store i8 0, i8* %10, align 1
  %81 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %38, align 8
  %82 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %81, i64 2
  %83 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %82, align 8
  %84 = call zeroext i1 %83(%class.SkWStream* %1, i8* nonnull %10, i64 1) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #17
  %85 = load %class.SkData*, %class.SkData** %44, align 8
  %86 = icmp eq %class.SkData* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %class.SkData, %class.SkData* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %85) #17
  %92 = bitcast %class.SkData* %85 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %92) #17
  br label %93

93:                                               ; preds = %80, %87, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  br label %141

94:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #17
  store i8 2, i8* %9, align 1
  %95 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %38, align 8
  %96 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %95, i64 2
  %97 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %96, align 8
  %98 = call zeroext i1 %97(%class.SkWStream* %1, i8* nonnull %9, i64 1) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #17
  %99 = sub nsw i32 0, %78
  %100 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100)
  store i32 %99, i32* %8, align 4
  %101 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %38, align 8
  %102 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %101, i64 2
  %103 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %102, align 8
  %104 = call zeroext i1 %103(%class.SkWStream* %1, i8* nonnull %100, i64 4) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  %105 = load %class.SkData*, %class.SkData** %44, align 8
  %106 = getelementptr inbounds %class.SkData, %class.SkData* %105, i64 0, i32 3
  %107 = load i8*, i8** %106, align 8
  %108 = shl i64 %77, 32
  %109 = ashr exact i64 %108, 32
  %110 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %38, align 8
  %111 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %110, i64 2
  %112 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %111, align 8
  %113 = call zeroext i1 %112(%class.SkWStream* %1, i8* %107, i64 %109) #17
  br i1 %113, label %114, label %124

114:                                              ; preds = %94
  %115 = and i64 %109, 3
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %114
  %118 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #17
  store i32 0, i32* %7, align 4
  %119 = sub nuw nsw i64 4, %115
  %120 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %38, align 8
  %121 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %120, i64 2
  %122 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %121, align 8
  %123 = call zeroext i1 %122(%class.SkWStream* %1, i8* nonnull %118, i64 %119) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #17
  br label %124

124:                                              ; preds = %94, %114, %117
  %125 = load %class.SkData*, %class.SkData** %44, align 8
  %126 = icmp eq %class.SkData* %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %class.SkData, %class.SkData* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 -1 acq_rel
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %133

131:                                              ; preds = %127
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %125) #17
  %132 = bitcast %class.SkData* %125 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %132) #17
  br label %133

133:                                              ; preds = %124, %127, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  br label %141

134:                                              ; preds = %71, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  %135 = call %class.SkPictureData* @_ZNK9SkPicture8backportEv(%class.SkPicture* %0)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17
  store i8 1, i8* %6, align 1
  %136 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %38, align 8
  %137 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %136, i64 2
  %138 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %137, align 8
  %139 = call zeroext i1 %138(%class.SkWStream* %1, i8* nonnull %6, i64 1) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17
  call void @_ZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetb(%class.SkPictureData* nonnull %135, %class.SkWStream* %1, %struct.SkSerialProcs* nonnull dereferenceable(48) %12, %class.SkRefCntSet* %3, i1 zeroext %4) #17
  call void @_ZN13SkPictureDataD2Ev(%class.SkPictureData* nonnull %135) #17
  %140 = bitcast %class.SkPictureData* %135 to i8*
  call void @_ZdlPv(i8* nonnull %140) #18
  br label %141

141:                                              ; preds = %93, %133, %134
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %24) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkPicture9serializeEPK13SkSerialProcs(%class.sk_sp.31* noalias sret, %class.SkPicture*, %struct.SkSerialProcs* readonly) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkDynamicMemoryWStream, align 8
  %5 = bitcast %class.SkDynamicMemoryWStream* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #17
  %6 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #17
  %9 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0
  call void @_ZNK9SkPicture9serializeEP9SkWStreamPK13SkSerialProcsP11SkRefCntSetb(%class.SkPicture* %1, %class.SkWStream* nonnull %9, %struct.SkSerialProcs* %2, %class.SkRefCntSet* null, i1 zeroext false)
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.31* sret %0, %class.SkDynamicMemoryWStream* nonnull %4) #17
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #17
  ret void
}

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.31* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #7

declare void @_ZNK13SkPictureData9serializeEP9SkWStreamRK13SkSerialProcsP11SkRefCntSetb(%class.SkPictureData*, %class.SkWStream*, %struct.SkSerialProcs* dereferenceable(48), %class.SkRefCntSet*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPicturePriv7FlattenE5sk_spIK9SkPictureER13SkWriteBuffer(%class.sk_sp.36* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.31, align 8
  %4 = alloca %struct.SkPictInfo, align 8
  %5 = alloca %class.sk_sp.31, align 8
  %6 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %6) #17
  %7 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %4, i64 0, i32 1
  %8 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %4, i64 0, i32 2
  %9 = getelementptr inbounds %struct.SkPictInfo, %struct.SkPictInfo* %4, i64 0, i32 2, i32 2
  %10 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %0, i64 0, i32 0
  %11 = load %class.SkPicture*, %class.SkPicture** %10, align 8
  %12 = bitcast %struct.SkPictInfo* %4 to i64*
  store i64 8386662862485547891, i64* %12, align 8, !alias.scope !17
  store i32 86, i32* %7, align 8, !alias.scope !17
  %13 = bitcast %class.SkPicture* %11 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %14 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %13, align 8, !noalias !17
  %15 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %14, i64 4
  %16 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %15, align 8, !noalias !17
  %17 = tail call { <2 x float>, <2 x float> } %16(%class.SkPicture* %11) #17, !noalias !17
  %18 = extractvalue { <2 x float>, <2 x float> } %17, 0
  %19 = extractvalue { <2 x float>, <2 x float> } %17, 1
  %20 = bitcast %struct.SkRect* %8 to <2 x float>*
  store <2 x float> %18, <2 x float>* %20, align 4, !alias.scope !17
  %21 = bitcast float* %9 to <2 x float>*
  store <2 x float> %19, <2 x float>* %21, align 4, !alias.scope !17
  %22 = load %class.SkPicture*, %class.SkPicture** %10, align 8
  %23 = tail call %class.SkPictureData* @_ZNK9SkPicture8backportEv(%class.SkPicture* %22)
  %24 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %25 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %25, i64 3
  %27 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %26, align 8
  call void %27(%class.SkWriteBuffer* %1, i8* nonnull %6, i64 8) #17
  %28 = load i32, i32* %7, align 8
  %29 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %30 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %30, i64 9
  %32 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %31, align 8
  call void %32(%class.SkWriteBuffer* %1, i32 %28) #17
  %33 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %34 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %34, i64 22
  %36 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %35, align 8
  call void %36(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %8) #17
  %37 = bitcast %class.sk_sp.31* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  %38 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %38, align 8
  %39 = getelementptr inbounds %class.SkWriteBuffer, %class.SkWriteBuffer* %1, i64 0, i32 1, i32 0
  %40 = load void (%class.sk_sp.31*, %class.SkPicture*, i8*)*, void (%class.sk_sp.31*, %class.SkPicture*, i8*)** %39, align 8, !noalias !20
  %41 = icmp eq void (%class.sk_sp.31*, %class.SkPicture*, i8*)* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %2
  %43 = load %class.SkPicture*, %class.SkPicture** %10, align 8
  %44 = bitcast %class.sk_sp.31* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17, !noalias !20
  %45 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %3, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %45, align 8, !noalias !20
  %46 = getelementptr inbounds %class.SkWriteBuffer, %class.SkWriteBuffer* %1, i64 0, i32 1, i32 1
  %47 = load i8*, i8** %46, align 8, !noalias !20
  call void %40(%class.sk_sp.31* nonnull sret %3, %class.SkPicture* %43, i8* %47) #17, !noalias !20
  %48 = load %class.SkData*, %class.SkData** %45, align 8, !noalias !20
  %49 = icmp eq %class.SkData* %48, null
  %50 = ptrtoint %class.SkData* %48 to i64
  br i1 %49, label %67, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %class.SkData, %class.SkData* %48, i64 0, i32 4
  %53 = load i64, i64* %52, align 8, !noalias !20
  %54 = add i64 %53, -2
  %55 = icmp ugt i64 %54, 2147483645
  br i1 %55, label %56, label %65

56:                                               ; preds = %51
  call void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.31* nonnull sret %5) #17
  %57 = load %class.SkData*, %class.SkData** %45, align 8, !noalias !20
  %58 = icmp eq %class.SkData* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %57) #17
  %64 = bitcast %class.SkData* %57 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %64) #17
  br label %69

65:                                               ; preds = %51
  %66 = bitcast %class.sk_sp.31* %5 to i64*
  store i64 %50, i64* %66, align 8, !alias.scope !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17, !noalias !20
  br label %72

67:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17, !noalias !20
  br label %68

68:                                               ; preds = %2, %67
  store %class.SkData* null, %class.SkData** %38, align 8, !alias.scope !20
  br label %98

69:                                               ; preds = %56, %59, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17, !noalias !20
  %70 = load %class.SkData*, %class.SkData** %38, align 8
  %71 = icmp eq %class.SkData* %70, null
  br i1 %71, label %98, label %72

72:                                               ; preds = %65, %69
  %73 = phi %class.SkData* [ %48, %65 ], [ %70, %69 ]
  %74 = getelementptr inbounds %class.SkData, %class.SkData* %73, i64 0, i32 4
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = sub nsw i32 0, %76
  %78 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %29, align 8
  %79 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %78, i64 7
  %80 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %79, align 8
  call void %80(%class.SkWriteBuffer* %1, i32 %77) #17
  %81 = load %class.SkData*, %class.SkData** %38, align 8
  %82 = getelementptr inbounds %class.SkData, %class.SkData* %81, i64 0, i32 3
  %83 = load i8*, i8** %82, align 8
  %84 = shl i64 %75, 32
  %85 = ashr exact i64 %84, 32
  %86 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %24, align 8
  %87 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %86, i64 2
  %88 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %87, align 8
  call void %88(%class.SkWriteBuffer* %1, i8* %83, i64 %85) #17
  %89 = load %class.SkData*, %class.SkData** %38, align 8
  %90 = icmp eq %class.SkData* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %72
  %92 = getelementptr inbounds %class.SkData, %class.SkData* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %89) #17
  %96 = bitcast %class.SkData* %89 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %96) #17
  br label %97

97:                                               ; preds = %72, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  br label %102

98:                                               ; preds = %69, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  %99 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %29, align 8
  %100 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %99, i64 7
  %101 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %100, align 8
  call void %101(%class.SkWriteBuffer* %1, i32 1) #17
  call void @_ZNK13SkPictureData7flattenER13SkWriteBuffer(%class.SkPictureData* nonnull %23, %class.SkWriteBuffer* dereferenceable(56) %1) #17
  br label %102

102:                                              ; preds = %98, %97
  call void @_ZN13SkPictureDataD2Ev(%class.SkPictureData* nonnull %23) #17
  %103 = bitcast %class.SkPictureData* %23 to i8*
  call void @_ZdlPv(i8* nonnull %103) #18
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %6) #17
  ret void
}

declare void @_ZNK13SkPictureData7flattenER13SkWriteBuffer(%class.SkPictureData*, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPicture15MakePlaceholderE6SkRect(%class.sk_sp.17* noalias nocapture sret, <2 x float>, <2 x float>) local_unnamed_addr #10 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #18, !noalias !23
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 4, !noalias !23
  %7 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV9SkPicture, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !23
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 0, i8* %8, align 1, !noalias !23
  br label %9

9:                                                ; preds = %9, %3
  %10 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN9SkPictureC1EvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic, !noalias !23
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %9, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %4, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 %10, i32* %14, align 4, !noalias !23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVZN9SkPicture15MakePlaceholderE6SkRectE11Placeholder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !23
  %15 = getelementptr inbounds i8, i8* %4, i64 20
  %16 = bitcast i8* %15 to <2 x float>*
  store <2 x float> %1, <2 x float>* %16, align 4, !noalias !23
  %17 = getelementptr inbounds i8, i8* %4, i64 28
  %18 = bitcast i8* %17 to <2 x float>*
  store <2 x float> %2, <2 x float>* %18, align 4, !noalias !23
  %19 = ptrtoint i8* %4 to i64
  %20 = bitcast %class.sk_sp.17* %0 to i64*
  store i64 %19, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #4 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #17
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBigPicture* @_ZNK9SkPicture14asSkBigPictureEv(%class.SkPicture*) unnamed_addr #4 comdat align 2 {
  ret %class.SkBigPicture* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare zeroext i1 @_ZN8SkStream6readS8EPa(%class.SkStream*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD2Ev(%class.SkCanvas*) unnamed_addr #7

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #7

declare void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.31* sret) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPictureDataD2Ev(%class.SkPictureData*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %class.SkFactoryPlayback*, %class.SkFactoryPlayback** %2, align 8
  store %class.SkFactoryPlayback* null, %class.SkFactoryPlayback** %2, align 8
  %4 = icmp eq %class.SkFactoryPlayback* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkFactoryPlayback, %class.SkFactoryPlayback* %3, i64 0, i32 1
  %7 = load void (%class.sk_sp.16*, %class.SkReadBuffer*)**, void (%class.sk_sp.16*, %class.SkReadBuffer*)*** %6, align 8
  %8 = icmp eq void (%class.sk_sp.16*, %class.SkReadBuffer*)** %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast void (%class.sk_sp.16*, %class.SkReadBuffer*)** %7 to i8*
  tail call void @_ZdaPv(i8* %10) #18
  br label %11

11:                                               ; preds = %9, %5
  %12 = bitcast %class.SkFactoryPlayback* %3 to i8*
  tail call void @_ZdlPv(i8* %12) #18
  br label %13

13:                                               ; preds = %1, %11
  %14 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.sk_sp*, %class.sk_sp** %14, align 8
  store %class.sk_sp* null, %class.sk_sp** %14, align 8
  %16 = icmp eq %class.sk_sp* %15, null
  br i1 %16, label %44, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 -1
  %19 = bitcast %class.sk_sp* %18 to i8*
  %20 = bitcast %class.sk_sp* %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 %21
  br label %25

25:                                               ; preds = %41, %23
  %26 = phi %class.sk_sp* [ %27, %41 ], [ %24, %23 ]
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %26, i64 -1
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %27, i64 0, i32 0
  %29 = load %class.SkTypeface*, %class.SkTypeface** %28, align 8
  %30 = icmp eq %class.SkTypeface* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkTypeface* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkTypeface* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #17
  br label %41

41:                                               ; preds = %35, %31, %25
  %42 = icmp eq %class.sk_sp* %27, %15
  br i1 %42, label %43, label %25

43:                                               ; preds = %41, %17
  tail call void @_ZdaPv(i8* %19) #18
  br label %44

44:                                               ; preds = %13, %43
  %45 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9
  %46 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 9, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 4294967294
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %45, i64 0, i32 0
  br label %56

52:                                               ; preds = %72, %44
  %53 = phi i64 [ %47, %44 ], [ %74, %72 ]
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %81, label %78

56:                                               ; preds = %72, %50
  %57 = phi i64 [ 0, %50 ], [ %73, %72 ]
  %58 = load %class.sk_sp.46*, %class.sk_sp.46** %51, align 8
  %59 = getelementptr inbounds %class.sk_sp.46, %class.sk_sp.46* %58, i64 %57, i32 0
  %60 = load %class.SkImage*, %class.SkImage** %59, align 8
  %61 = icmp eq %class.SkImage* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.SkImage, %class.SkImage* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkImage* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkImage* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  tail call void %71(%class.SkRefCntBase* nonnull %67) #17
  br label %72

72:                                               ; preds = %66, %62, %56
  %73 = add nuw nsw i64 %57, 1
  %74 = load i64, i64* %46, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = icmp ult i64 %73, %76
  br i1 %77, label %56, label %52

78:                                               ; preds = %52
  %79 = bitcast %class.SkTArray.45* %45 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %80) #17
  br label %81

81:                                               ; preds = %52, %78
  %82 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8
  %83 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 8, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 4294967294
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.SkTArray.42, %class.SkTArray.42* %82, i64 0, i32 0
  br label %93

89:                                               ; preds = %105, %81
  %90 = phi i64 [ %84, %81 ], [ %107, %105 ]
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %114, label %111

93:                                               ; preds = %105, %87
  %94 = phi i64 [ 0, %87 ], [ %106, %105 ]
  %95 = load %class.sk_sp.43*, %class.sk_sp.43** %88, align 8
  %96 = getelementptr inbounds %class.sk_sp.43, %class.sk_sp.43* %95, i64 %94, i32 0
  %97 = load %class.SkVertices*, %class.SkVertices** %96, align 8
  %98 = icmp eq %class.SkVertices* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkVertices* %97 to i8*
  tail call void @_ZN10SkVerticesdlEPv(i8* nonnull %104) #17
  br label %105

105:                                              ; preds = %103, %99, %93
  %106 = add nuw nsw i64 %94, 1
  %107 = load i64, i64* %83, align 8
  %108 = lshr i64 %107, 1
  %109 = and i64 %108, 2147483647
  %110 = icmp ult i64 %106, %109
  br i1 %110, label %93, label %89

111:                                              ; preds = %89
  %112 = bitcast %class.SkTArray.42* %82 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @_Z7sk_freePv(i8* %113) #17
  br label %114

114:                                              ; preds = %89, %111
  %115 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7
  %116 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 7, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = and i64 %117, 4294967294
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %class.SkTArray.39, %class.SkTArray.39* %115, i64 0, i32 0
  br label %126

122:                                              ; preds = %138, %114
  %123 = phi i64 [ %117, %114 ], [ %140, %138 ]
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %147, label %144

126:                                              ; preds = %138, %120
  %127 = phi i64 [ 0, %120 ], [ %139, %138 ]
  %128 = load %class.sk_sp.40*, %class.sk_sp.40** %121, align 8
  %129 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %128, i64 %127, i32 0
  %130 = load %class.SkTextBlob*, %class.SkTextBlob** %129, align 8
  %131 = icmp eq %class.SkTextBlob* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %130) #17
  %137 = bitcast %class.SkTextBlob* %130 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %137) #17
  br label %138

138:                                              ; preds = %136, %132, %126
  %139 = add nuw nsw i64 %127, 1
  %140 = load i64, i64* %116, align 8
  %141 = lshr i64 %140, 1
  %142 = and i64 %141, 2147483647
  %143 = icmp ult i64 %139, %142
  br i1 %143, label %126, label %122

144:                                              ; preds = %122
  %145 = bitcast %class.SkTArray.39* %115 to i8**
  %146 = load i8*, i8** %145, align 8
  tail call void @_Z7sk_freePv(i8* %146) #17
  br label %147

147:                                              ; preds = %122, %144
  %148 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6
  %149 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 6, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, 4294967294
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %class.SkTArray.37, %class.SkTArray.37* %148, i64 0, i32 0
  br label %159

155:                                              ; preds = %175, %147
  %156 = phi i64 [ %150, %147 ], [ %177, %175 ]
  %157 = and i64 %156, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %184, label %181

159:                                              ; preds = %175, %153
  %160 = phi i64 [ 0, %153 ], [ %176, %175 ]
  %161 = load %class.sk_sp.38*, %class.sk_sp.38** %154, align 8
  %162 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %161, i64 %160, i32 0
  %163 = load %class.SkDrawable*, %class.SkDrawable** %162, align 8
  %164 = icmp eq %class.SkDrawable* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %163, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = bitcast %class.SkDrawable* %163 to %class.SkRefCntBase*
  %171 = bitcast %class.SkDrawable* %163 to void (%class.SkRefCntBase*)***
  %172 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %171, align 8
  %173 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, i64 2
  %174 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, align 8
  tail call void %174(%class.SkRefCntBase* nonnull %170) #17
  br label %175

175:                                              ; preds = %169, %165, %159
  %176 = add nuw nsw i64 %160, 1
  %177 = load i64, i64* %149, align 8
  %178 = lshr i64 %177, 1
  %179 = and i64 %178, 2147483647
  %180 = icmp ult i64 %176, %179
  br i1 %180, label %159, label %155

181:                                              ; preds = %155
  %182 = bitcast %class.SkTArray.37* %148 to i8**
  %183 = load i8*, i8** %182, align 8
  tail call void @_Z7sk_freePv(i8* %183) #17
  br label %184

184:                                              ; preds = %155, %181
  %185 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5
  %186 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 5, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 4294967294
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %class.SkTArray.35, %class.SkTArray.35* %185, i64 0, i32 0
  br label %196

192:                                              ; preds = %212, %184
  %193 = phi i64 [ %187, %184 ], [ %214, %212 ]
  %194 = and i64 %193, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %221, label %218

196:                                              ; preds = %212, %190
  %197 = phi i64 [ 0, %190 ], [ %213, %212 ]
  %198 = load %class.sk_sp.36*, %class.sk_sp.36** %191, align 8
  %199 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %198, i64 %197, i32 0
  %200 = load %class.SkPicture*, %class.SkPicture** %199, align 8
  %201 = icmp eq %class.SkPicture* %200, null
  br i1 %201, label %212, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %200, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 -1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = bitcast %class.SkPicture* %200 to %class.SkRefCntBase*
  %208 = bitcast %class.SkPicture* %200 to void (%class.SkRefCntBase*)***
  %209 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %208, align 8
  %210 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %209, i64 2
  %211 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %210, align 8
  tail call void %211(%class.SkRefCntBase* nonnull %207) #17
  br label %212

212:                                              ; preds = %206, %202, %196
  %213 = add nuw nsw i64 %197, 1
  %214 = load i64, i64* %186, align 8
  %215 = lshr i64 %214, 1
  %216 = and i64 %215, 2147483647
  %217 = icmp ult i64 %213, %216
  br i1 %217, label %196, label %192

218:                                              ; preds = %192
  %219 = bitcast %class.SkTArray.35* %185 to i8**
  %220 = load i8*, i8** %219, align 8
  tail call void @_Z7sk_freePv(i8* %220) #17
  br label %221

221:                                              ; preds = %192, %218
  %222 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 4
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %222) #17
  %223 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 3
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %223) #17
  %224 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 2, i32 0
  %225 = load %class.SkData*, %class.SkData** %224, align 8
  %226 = icmp eq %class.SkData* %225, null
  br i1 %226, label %233, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %class.SkData, %class.SkData* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 -1 acq_rel
  %230 = icmp eq i32 %229, 1
  br i1 %230, label %231, label %233

231:                                              ; preds = %227
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %225) #17
  %232 = bitcast %class.SkData* %225 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %232) #17
  br label %233

233:                                              ; preds = %221, %227, %231
  %234 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1
  %235 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 1, i32 1
  %236 = load i64, i64* %235, align 8
  %237 = and i64 %236, 4294967294
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %class.SkTArray.25, %class.SkTArray.25* %234, i64 0, i32 0
  br label %245

241:                                              ; preds = %245, %233
  %242 = phi i64 [ %236, %233 ], [ %250, %245 ]
  %243 = and i64 %242, 1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %257, label %254

245:                                              ; preds = %245, %239
  %246 = phi i64 [ 0, %239 ], [ %249, %245 ]
  %247 = load %class.SkPath*, %class.SkPath** %240, align 8
  %248 = getelementptr inbounds %class.SkPath, %class.SkPath* %247, i64 %246
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %248) #17
  %249 = add nuw nsw i64 %246, 1
  %250 = load i64, i64* %235, align 8
  %251 = lshr i64 %250, 1
  %252 = and i64 %251, 2147483647
  %253 = icmp ult i64 %249, %252
  br i1 %253, label %245, label %241

254:                                              ; preds = %241
  %255 = bitcast %class.SkTArray.25* %234 to i8**
  %256 = load i8*, i8** %255, align 8
  tail call void @_Z7sk_freePv(i8* %256) #17
  br label %257

257:                                              ; preds = %241, %254
  %258 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = and i64 %259, 4294967294
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %0, i64 0, i32 0, i32 0
  br label %268

264:                                              ; preds = %268, %257
  %265 = phi i64 [ %259, %257 ], [ %273, %268 ]
  %266 = and i64 %265, 1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %280, label %277

268:                                              ; preds = %268, %262
  %269 = phi i64 [ 0, %262 ], [ %272, %268 ]
  %270 = load %class.SkPaint*, %class.SkPaint** %263, align 8
  %271 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %270, i64 %269
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %271) #17
  %272 = add nuw nsw i64 %269, 1
  %273 = load i64, i64* %258, align 8
  %274 = lshr i64 %273, 1
  %275 = and i64 %274, 2147483647
  %276 = icmp ult i64 %272, %275
  br i1 %276, label %268, label %264

277:                                              ; preds = %264
  %278 = bitcast %class.SkPictureData* %0 to i8**
  %279 = load i8*, i8** %278, align 8
  tail call void @_Z7sk_freePv(i8* %279) #17
  br label %280

280:                                              ; preds = %264, %277
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPictureD2Ev(%class.SkPicture* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV9SkPicture, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %10, 8100114754669903872
  tail call void @_ZN15SkResourceCache17PostPurgeSharedIDEm(i64 %11) #17
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN9SkPicture15MakePlaceholderE6SkRectEN11PlaceholderD0Ev(%struct.Placeholder*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %struct.Placeholder, %struct.Placeholder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV9SkPicture, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.Placeholder, %struct.Placeholder* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.Placeholder, %struct.Placeholder* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %10, 8100114754669903872
  tail call void @_ZN15SkResourceCache17PostPurgeSharedIDEm(i64 %11) #17
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %struct.Placeholder* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder8playbackEP8SkCanvasPNS_13AbortCallbackE(%struct.Placeholder* nocapture, %class.SkCanvas* nocapture, %"class.SkPicture::AbortCallback"* nocapture) unnamed_addr #13 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder8cullRectEv(%struct.Placeholder* nocapture readonly) unnamed_addr #14 align 2 {
  %2 = getelementptr inbounds %struct.Placeholder, %struct.Placeholder* %0, i64 0, i32 1
  %3 = bitcast %struct.SkRect* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %struct.Placeholder, %struct.Placeholder* %0, i64 0, i32 1, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder18approximateOpCountEb(%struct.Placeholder* nocapture readnone, i1 zeroext) unnamed_addr #13 align 2 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZZN9SkPicture15MakePlaceholderE6SkRectENK11Placeholder20approximateBytesUsedEv(%struct.Placeholder* nocapture readnone) unnamed_addr #13 align 2 {
  ret i64 40
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer: argument 0"}
!4 = distinct !{!4, !"_ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer: argument 0"}
!7 = distinct !{!7, !"_ZN9SkPicture11ForwardportERK10SkPictInfoPK13SkPictureDataP12SkReadBuffer"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK9SkPicture12createHeaderEv: argument 0"}
!10 = distinct !{!10, !"_ZNK9SkPicture12createHeaderEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZL16custom_serializePK9SkPictureRK13SkSerialProcs: argument 0"}
!13 = distinct !{!13, !"_ZL16custom_serializePK9SkPictureRK13SkSerialProcs"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK9SkPicture12createHeaderEv: argument 0"}
!16 = distinct !{!16, !"_ZNK9SkPicture12createHeaderEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK9SkPicture12createHeaderEv: argument 0"}
!19 = distinct !{!19, !"_ZNK9SkPicture12createHeaderEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZL16custom_serializePK9SkPictureRK13SkSerialProcs: argument 0"}
!22 = distinct !{!22, !"_ZL16custom_serializePK9SkPictureRK13SkSerialProcs"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_Z10sk_make_spIZN9SkPicture15MakePlaceholderE6SkRectE11PlaceholderJRS1_EE5sk_spIT_EDpOT0_: argument 0"}
!25 = distinct !{!25, !"_Z10sk_make_spIZN9SkPicture15MakePlaceholderE6SkRectE11PlaceholderJRS1_EE5sk_spIT_EDpOT0_"}
