; ModuleID = '../../cc/base/tiling_data.cc'
source_filename = "../../cc/base/tiling_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TilingData::BaseIterator" = type { i32, i32 }
%"class.cc::TilingData::Iterator" = type { %"class.cc::TilingData::BaseIterator", %"class.cc::IndexRect" }
%"class.cc::IndexRect" = type { i32, i32, i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.cc::TilingData::BaseDifferenceIterator" = type { %"class.cc::TilingData::BaseIterator", %"class.cc::IndexRect", %"class.cc::IndexRect" }
%"class.cc::TilingData::DifferenceIterator" = type { %"class.cc::TilingData::BaseDifferenceIterator" }
%"class.cc::TilingData::SpiralDifferenceIterator" = type { %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::SpiralIterator" }
%"class.cc::SpiralIterator" = type { %"class.cc::IndexRect", %"class.cc::IndexRect", %"class.cc::IndexRect", i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.cc::TilingData::ReverseSpiralDifferenceIterator" = type { %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::ReverseSpiralIterator" }
%"class.cc::ReverseSpiralIterator" = type { %"class.cc::IndexRect", %"class.cc::IndexRect", %"class.cc::IndexRect", i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }

@_ZN2cc10TilingDataC1Ev = hidden unnamed_addr alias void (%"class.cc::TilingData"*), void (%"class.cc::TilingData"*)* @_ZN2cc10TilingDataC2Ev
@_ZN2cc10TilingDataC1ERKN3gfx4SizeES4_b = hidden unnamed_addr alias void (%"class.cc::TilingData"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1), void (%"class.cc::TilingData"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i1)* @_ZN2cc10TilingDataC2ERKN3gfx4SizeES4_b
@_ZN2cc10TilingDataC1ERKN3gfx4SizeES4_i = hidden unnamed_addr alias void (%"class.cc::TilingData"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i32), void (%"class.cc::TilingData"*, %"class.gfx::Size"*, %"class.gfx::Size"*, i32)* @_ZN2cc10TilingDataC2ERKN3gfx4SizeES4_i
@_ZN2cc10TilingData12BaseIteratorC1Ev = hidden unnamed_addr alias void (%"class.cc::TilingData::BaseIterator"*), void (%"class.cc::TilingData::BaseIterator"*)* @_ZN2cc10TilingData12BaseIteratorC2Ev
@_ZN2cc10TilingData8IteratorC1Ev = hidden unnamed_addr alias void (%"class.cc::TilingData::Iterator"*), void (%"class.cc::TilingData::Iterator"*)* @_ZN2cc10TilingData8IteratorC2Ev
@_ZN2cc10TilingData8IteratorC1EPKS0_RKN3gfx4RectEb = hidden unnamed_addr alias void (%"class.cc::TilingData::Iterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, i1), void (%"class.cc::TilingData::Iterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, i1)* @_ZN2cc10TilingData8IteratorC2EPKS0_RKN3gfx4RectEb
@_ZN2cc10TilingData22BaseDifferenceIteratorC1Ev = hidden unnamed_addr alias void (%"class.cc::TilingData::BaseDifferenceIterator"*), void (%"class.cc::TilingData::BaseDifferenceIterator"*)* @_ZN2cc10TilingData22BaseDifferenceIteratorC2Ev
@_ZN2cc10TilingData22BaseDifferenceIteratorC1EPKS0_RKN3gfx4RectES7_ = hidden unnamed_addr alias void (%"class.cc::TilingData::BaseDifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*), void (%"class.cc::TilingData::BaseDifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)* @_ZN2cc10TilingData22BaseDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_
@_ZN2cc10TilingData18DifferenceIteratorC1Ev = hidden unnamed_addr alias void (%"class.cc::TilingData::DifferenceIterator"*), void (%"class.cc::TilingData::DifferenceIterator"*)* @_ZN2cc10TilingData18DifferenceIteratorC2Ev
@_ZN2cc10TilingData18DifferenceIteratorC1EPKS0_RKN3gfx4RectES7_ = hidden unnamed_addr alias void (%"class.cc::TilingData::DifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*), void (%"class.cc::TilingData::DifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)* @_ZN2cc10TilingData18DifferenceIteratorC2EPKS0_RKN3gfx4RectES7_
@_ZN2cc10TilingData24SpiralDifferenceIteratorC1Ev = hidden unnamed_addr alias void (%"class.cc::TilingData::SpiralDifferenceIterator"*), void (%"class.cc::TilingData::SpiralDifferenceIterator"*)* @_ZN2cc10TilingData24SpiralDifferenceIteratorC2Ev
@_ZN2cc10TilingData24SpiralDifferenceIteratorC1EPKS0_RKN3gfx4RectES7_S7_ = hidden unnamed_addr alias void (%"class.cc::TilingData::SpiralDifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*), void (%"class.cc::TilingData::SpiralDifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)* @_ZN2cc10TilingData24SpiralDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_S7_
@_ZN2cc10TilingData31ReverseSpiralDifferenceIteratorC1Ev = hidden unnamed_addr alias void (%"class.cc::TilingData::ReverseSpiralDifferenceIterator"*), void (%"class.cc::TilingData::ReverseSpiralDifferenceIterator"*)* @_ZN2cc10TilingData31ReverseSpiralDifferenceIteratorC2Ev
@_ZN2cc10TilingData31ReverseSpiralDifferenceIteratorC1EPKS0_RKN3gfx4RectES7_S7_ = hidden unnamed_addr alias void (%"class.cc::TilingData::ReverseSpiralDifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*), void (%"class.cc::TilingData::ReverseSpiralDifferenceIterator"*, %"class.cc::TilingData"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*)* @_ZN2cc10TilingData31ReverseSpiralDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_S7_

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingDataC2Ev(%"class.cc::TilingData"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::TilingData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 20, i1 false)
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData17RecomputeNumTilesEv(%"class.cc::TilingData"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl nsw i32 %7, 1
  %9 = sub nsw i32 %3, %8
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  %12 = icmp sgt i32 %5, 0
  %13 = icmp sge i32 %3, %5
  %14 = and i1 %12, %13
  %15 = zext i1 %14 to i32
  br label %25

16:                                               ; preds = %1
  %17 = xor i32 %8, -1
  %18 = add i32 %5, %17
  %19 = sdiv i32 %18, %9
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0
  %22 = add nuw nsw i32 %21, 1
  %23 = icmp sgt i32 %5, 0
  %24 = select i1 %23, i32 %22, i32 0
  br label %25

25:                                               ; preds = %11, %16
  %26 = phi i32 [ %24, %16 ], [ %15, %11 ]
  %27 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %29, %8
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %34, label %39

34:                                               ; preds = %25
  %35 = icmp sgt i32 %31, 0
  %36 = icmp sge i32 %29, %31
  %37 = and i1 %35, %36
  %38 = zext i1 %37 to i32
  br label %48

39:                                               ; preds = %25
  %40 = xor i32 %8, -1
  %41 = add i32 %31, %40
  %42 = sdiv i32 %41, %32
  %43 = icmp sgt i32 %42, 0
  %44 = select i1 %43, i32 %42, i32 0
  %45 = add nuw nsw i32 %44, 1
  %46 = icmp sgt i32 %31, 0
  %47 = select i1 %46, i32 %45, i32 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i32 [ %47, %39 ], [ %38, %34 ]
  %50 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 %49, i32* %50, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingDataC2ERKN3gfx4SizeES4_b(%"class.cc::TilingData"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.gfx::Size"* %1 to i64*
  %6 = bitcast %"class.cc::TilingData"* %0 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 4
  %8 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1
  %9 = bitcast %"class.gfx::Size"* %2 to i64*
  %10 = bitcast %"class.gfx::Size"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %13 = zext i1 %3 to i32
  store i32 %13, i32* %12, align 4
  %14 = trunc i64 %7 to i32
  %15 = trunc i64 %11 to i32
  %16 = shl nuw nsw i32 %13, 1
  %17 = sub nsw i32 %14, %16
  %18 = icmp slt i32 %17, 1
  %19 = lshr i64 %7, 32
  %20 = trunc i64 %19 to i32
  %21 = lshr i64 %11, 32
  %22 = trunc i64 %21 to i32
  br i1 %18, label %23, label %28

23:                                               ; preds = %4
  %24 = icmp sgt i32 %15, 0
  %25 = icmp sge i32 %14, %15
  %26 = and i1 %24, %25
  %27 = zext i1 %26 to i32
  br label %37

28:                                               ; preds = %4
  %29 = xor i32 %16, -1
  %30 = add i32 %15, %29
  %31 = sdiv i32 %30, %17
  %32 = icmp sgt i32 %31, 0
  %33 = select i1 %32, i32 %31, i32 0
  %34 = add nuw nsw i32 %33, 1
  %35 = icmp sgt i32 %15, 0
  %36 = select i1 %35, i32 %34, i32 0
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %27, %23 ]
  %39 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 %38, i32* %39, align 4
  %40 = sub nsw i32 %20, %16
  %41 = icmp slt i32 %40, 1
  br i1 %41, label %42, label %47

42:                                               ; preds = %37
  %43 = icmp sgt i32 %22, 0
  %44 = icmp sge i32 %20, %22
  %45 = and i1 %43, %44
  %46 = zext i1 %45 to i32
  br label %56

47:                                               ; preds = %37
  %48 = xor i32 %16, -1
  %49 = add i32 %22, %48
  %50 = sdiv i32 %49, %40
  %51 = icmp sgt i32 %50, 0
  %52 = select i1 %51, i32 %50, i32 0
  %53 = add nuw nsw i32 %52, 1
  %54 = icmp sgt i32 %22, 0
  %55 = select i1 %54, i32 %53, i32 0
  br label %56

56:                                               ; preds = %42, %47
  %57 = phi i32 [ %55, %47 ], [ %46, %42 ]
  %58 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 %57, i32* %58, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingDataC2ERKN3gfx4SizeES4_i(%"class.cc::TilingData"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.gfx::Size"* %1 to i64*
  %6 = bitcast %"class.cc::TilingData"* %0 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 4
  %8 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1
  %9 = bitcast %"class.gfx::Size"* %2 to i64*
  %10 = bitcast %"class.gfx::Size"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  store i32 %3, i32* %12, align 4
  %13 = trunc i64 %7 to i32
  %14 = trunc i64 %11 to i32
  %15 = shl nsw i32 %3, 1
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 1
  %18 = lshr i64 %7, 32
  %19 = trunc i64 %18 to i32
  %20 = lshr i64 %11, 32
  %21 = trunc i64 %20 to i32
  br i1 %17, label %22, label %27

22:                                               ; preds = %4
  %23 = icmp sgt i32 %14, 0
  %24 = icmp sge i32 %13, %14
  %25 = and i1 %23, %24
  %26 = zext i1 %25 to i32
  br label %36

27:                                               ; preds = %4
  %28 = xor i32 %15, -1
  %29 = add i32 %14, %28
  %30 = sdiv i32 %29, %16
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  %33 = add nuw nsw i32 %32, 1
  %34 = icmp sgt i32 %14, 0
  %35 = select i1 %34, i32 %33, i32 0
  br label %36

36:                                               ; preds = %27, %22
  %37 = phi i32 [ %35, %27 ], [ %26, %22 ]
  %38 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 %37, i32* %38, align 4
  %39 = sub nsw i32 %19, %15
  %40 = icmp slt i32 %39, 1
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = icmp sgt i32 %21, 0
  %43 = icmp sge i32 %19, %21
  %44 = and i1 %42, %43
  %45 = zext i1 %44 to i32
  br label %55

46:                                               ; preds = %36
  %47 = xor i32 %15, -1
  %48 = add i32 %21, %47
  %49 = sdiv i32 %48, %39
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = add nuw nsw i32 %51, 1
  %53 = icmp sgt i32 %21, 0
  %54 = select i1 %53, i32 %52, i32 0
  br label %55

55:                                               ; preds = %41, %46
  %56 = phi i32 [ %54, %46 ], [ %45, %41 ]
  %57 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 %56, i32* %57, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData13SetTilingSizeERKN3gfx4SizeE(%"class.cc::TilingData"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1
  %4 = bitcast %"class.gfx::Size"* %1 to i64*
  %5 = bitcast %"class.gfx::Size"* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = trunc i64 %6 to i32
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = shl nsw i32 %11, 1
  %13 = sub nsw i32 %8, %12
  %14 = icmp slt i32 %13, 1
  %15 = lshr i64 %6, 32
  %16 = trunc i64 %15 to i32
  br i1 %14, label %17, label %22

17:                                               ; preds = %2
  %18 = icmp sgt i32 %9, 0
  %19 = icmp sge i32 %8, %9
  %20 = and i1 %18, %19
  %21 = zext i1 %20 to i32
  br label %31

22:                                               ; preds = %2
  %23 = xor i32 %12, -1
  %24 = add i32 %9, %23
  %25 = sdiv i32 %24, %13
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = add nuw nsw i32 %27, 1
  %29 = icmp sgt i32 %9, 0
  %30 = select i1 %29, i32 %28, i32 0
  br label %31

31:                                               ; preds = %22, %17
  %32 = phi i32 [ %30, %22 ], [ %21, %17 ]
  %33 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %35, %12
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %38, label %43

38:                                               ; preds = %31
  %39 = icmp sgt i32 %16, 0
  %40 = icmp sge i32 %35, %16
  %41 = and i1 %39, %40
  %42 = zext i1 %41 to i32
  br label %52

43:                                               ; preds = %31
  %44 = xor i32 %12, -1
  %45 = add i32 %16, %44
  %46 = sdiv i32 %45, %36
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  %49 = add nuw nsw i32 %48, 1
  %50 = icmp sgt i32 %16, 0
  %51 = select i1 %50, i32 %49, i32 0
  br label %52

52:                                               ; preds = %38, %43
  %53 = phi i32 [ %51, %43 ], [ %42, %38 ]
  %54 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 %53, i32* %54, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData17SetMaxTextureSizeERKN3gfx4SizeE(%"class.cc::TilingData"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::Size"* %1 to i64*
  %4 = bitcast %"class.cc::TilingData"* %0 to i64*
  %5 = load i64, i64* %3, align 4
  store i64 %5, i64* %4, align 4
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = shl nsw i32 %10, 1
  %12 = sub nsw i32 %6, %11
  %13 = icmp slt i32 %12, 1
  %14 = lshr i64 %5, 32
  %15 = trunc i64 %14 to i32
  br i1 %13, label %16, label %21

16:                                               ; preds = %2
  %17 = icmp sgt i32 %8, 0
  %18 = icmp sle i32 %8, %6
  %19 = and i1 %17, %18
  %20 = zext i1 %19 to i32
  br label %30

21:                                               ; preds = %2
  %22 = xor i32 %11, -1
  %23 = add i32 %8, %22
  %24 = sdiv i32 %23, %12
  %25 = icmp sgt i32 %24, 0
  %26 = select i1 %25, i32 %24, i32 0
  %27 = add nuw nsw i32 %26, 1
  %28 = icmp sgt i32 %8, 0
  %29 = select i1 %28, i32 %27, i32 0
  br label %30

30:                                               ; preds = %21, %16
  %31 = phi i32 [ %29, %21 ], [ %20, %16 ]
  %32 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub nsw i32 %15, %11
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %37, label %42

37:                                               ; preds = %30
  %38 = icmp sgt i32 %34, 0
  %39 = icmp sle i32 %34, %15
  %40 = and i1 %38, %39
  %41 = zext i1 %40 to i32
  br label %51

42:                                               ; preds = %30
  %43 = xor i32 %11, -1
  %44 = add i32 %34, %43
  %45 = sdiv i32 %44, %35
  %46 = icmp sgt i32 %45, 0
  %47 = select i1 %46, i32 %45, i32 0
  %48 = add nuw nsw i32 %47, 1
  %49 = icmp sgt i32 %34, 0
  %50 = select i1 %49, i32 %48, i32 0
  br label %51

51:                                               ; preds = %37, %42
  %52 = phi i32 [ %50, %42 ], [ %41, %37 ]
  %53 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 %52, i32* %53, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData18SetHasBorderTexelsEb(%"class.cc::TilingData"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  store i32 %3, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = shl nuw nsw i32 %3, 1
  %10 = sub nsw i32 %6, %9
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = icmp sgt i32 %8, 0
  %14 = icmp sge i32 %6, %8
  %15 = and i1 %13, %14
  %16 = zext i1 %15 to i32
  br label %26

17:                                               ; preds = %2
  %18 = xor i32 %9, -1
  %19 = add i32 %8, %18
  %20 = sdiv i32 %19, %10
  %21 = icmp sgt i32 %20, 0
  %22 = select i1 %21, i32 %20, i32 0
  %23 = add nuw nsw i32 %22, 1
  %24 = icmp sgt i32 %8, 0
  %25 = select i1 %24, i32 %23, i32 0
  br label %26

26:                                               ; preds = %17, %12
  %27 = phi i32 [ %25, %17 ], [ %16, %12 ]
  %28 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 %30, %9
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %40

35:                                               ; preds = %26
  %36 = icmp sgt i32 %32, 0
  %37 = icmp sge i32 %30, %32
  %38 = and i1 %36, %37
  %39 = zext i1 %38 to i32
  br label %49

40:                                               ; preds = %26
  %41 = xor i32 %9, -1
  %42 = add i32 %32, %41
  %43 = sdiv i32 %42, %33
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = add nuw nsw i32 %45, 1
  %47 = icmp sgt i32 %32, 0
  %48 = select i1 %47, i32 %46, i32 0
  br label %49

49:                                               ; preds = %35, %40
  %50 = phi i32 [ %48, %40 ], [ %39, %35 ]
  %51 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 %50, i32* %51, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData15SetBorderTexelsEi(%"class.cc::TilingData"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = shl nsw i32 %1, 1
  %9 = sub nsw i32 %5, %8
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = icmp sgt i32 %7, 0
  %13 = icmp sge i32 %5, %7
  %14 = and i1 %12, %13
  %15 = zext i1 %14 to i32
  br label %25

16:                                               ; preds = %2
  %17 = xor i32 %8, -1
  %18 = add i32 %7, %17
  %19 = sdiv i32 %18, %9
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0
  %22 = add nuw nsw i32 %21, 1
  %23 = icmp sgt i32 %7, 0
  %24 = select i1 %23, i32 %22, i32 0
  br label %25

25:                                               ; preds = %16, %11
  %26 = phi i32 [ %24, %16 ], [ %15, %11 ]
  %27 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %29, %8
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %34, label %39

34:                                               ; preds = %25
  %35 = icmp sgt i32 %31, 0
  %36 = icmp sge i32 %29, %31
  %37 = and i1 %35, %36
  %38 = zext i1 %37 to i32
  br label %48

39:                                               ; preds = %25
  %40 = xor i32 %8, -1
  %41 = add i32 %31, %40
  %42 = sdiv i32 %41, %32
  %43 = icmp sgt i32 %42, 0
  %44 = select i1 %43, i32 %42, i32 0
  %45 = add nuw nsw i32 %44, 1
  %46 = icmp sgt i32 %31, 0
  %47 = select i1 %46, i32 %45, i32 0
  br label %48

48:                                               ; preds = %34, %39
  %49 = phi i32 [ %47, %39 ], [ %38, %34 ]
  %50 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  store i32 %49, i32* %50, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData22TileXIndexFromSrcCoordEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sub nsw i32 %1, %8
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = shl nsw i32 %8, 1
  %13 = sub nsw i32 %11, %12
  %14 = sdiv i32 %9, %13
  %15 = add nsw i32 %4, -1
  %16 = icmp sgt i32 %14, 0
  %17 = select i1 %16, i32 %14, i32 0
  %18 = icmp slt i32 %15, %17
  %19 = select i1 %18, i32 %15, i32 %17
  br label %20

20:                                               ; preds = %2, %6
  %21 = phi i32 [ %19, %6 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData22TileYIndexFromSrcCoordEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sub nsw i32 %1, %8
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = shl nsw i32 %8, 1
  %13 = sub nsw i32 %11, %12
  %14 = sdiv i32 %9, %13
  %15 = add nsw i32 %4, -1
  %16 = icmp sgt i32 %14, 0
  %17 = select i1 %16, i32 %14, i32 0
  %18 = icmp slt i32 %15, %17
  %19 = select i1 %18, i32 %15, i32 %17
  br label %20

20:                                               ; preds = %2, %6
  %21 = phi i32 [ %19, %6 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData33FirstBorderTileXIndexFromSrcCoordEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = shl nsw i32 %10, 1
  %12 = sub nsw i32 %8, %11
  %13 = sub nsw i32 %1, %11
  %14 = sdiv i32 %13, %12
  %15 = add nsw i32 %4, -1
  %16 = icmp sgt i32 %14, 0
  %17 = select i1 %16, i32 %14, i32 0
  %18 = icmp slt i32 %15, %17
  %19 = select i1 %18, i32 %15, i32 %17
  br label %20

20:                                               ; preds = %2, %6
  %21 = phi i32 [ %19, %6 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData33FirstBorderTileYIndexFromSrcCoordEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = shl nsw i32 %10, 1
  %12 = sub nsw i32 %8, %11
  %13 = sub nsw i32 %1, %11
  %14 = sdiv i32 %13, %12
  %15 = add nsw i32 %4, -1
  %16 = icmp sgt i32 %14, 0
  %17 = select i1 %16, i32 %14, i32 0
  %18 = icmp slt i32 %15, %17
  %19 = select i1 %18, i32 %15, i32 %17
  br label %20

20:                                               ; preds = %2, %6
  %21 = phi i32 [ %19, %6 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData32LastBorderTileXIndexFromSrcCoordEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 2
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = shl nsw i32 %10, 1
  %12 = sub nsw i32 %8, %11
  %13 = sdiv i32 %1, %12
  %14 = add nsw i32 %4, -1
  %15 = icmp sgt i32 %13, 0
  %16 = select i1 %15, i32 %13, i32 0
  %17 = icmp slt i32 %14, %16
  %18 = select i1 %17, i32 %14, i32 %16
  br label %19

19:                                               ; preds = %2, %6
  %20 = phi i32 [ %18, %6 ], [ 0, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData32LastBorderTileYIndexFromSrcCoordEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 2
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = shl nsw i32 %10, 1
  %12 = sub nsw i32 %8, %11
  %13 = sdiv i32 %1, %12
  %14 = add nsw i32 %4, -1
  %15 = icmp sgt i32 %13, 0
  %16 = select i1 %15, i32 %13, i32 0
  %17 = icmp slt i32 %14, %16
  %18 = select i1 %17, i32 %14, i32 %16
  br label %19

19:                                               ; preds = %2, %6
  %20 = phi i32 [ %18, %6 ], [ 0, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2cc10TilingData19TileAroundIndexRectERKN3gfx4RectE(%"class.cc::TilingData"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1
  %16 = bitcast %"class.gfx::Size"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = trunc i64 %17 to i32
  %19 = icmp slt i32 %4, %18
  %20 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %38

22:                                               ; preds = %14
  %23 = icmp slt i32 %21, 2
  br i1 %23, label %38, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sub nsw i32 %4, %26
  %28 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = shl nsw i32 %26, 1
  %31 = sub nsw i32 %29, %30
  %32 = sdiv i32 %27, %31
  %33 = add nsw i32 %21, -1
  %34 = icmp sgt i32 %32, 0
  %35 = select i1 %34, i32 %32, i32 0
  %36 = icmp slt i32 %33, %35
  %37 = select i1 %36, i32 %33, i32 %35
  br label %38

38:                                               ; preds = %14, %6, %24, %22, %2, %10
  %39 = phi i32 [ -1, %10 ], [ -1, %2 ], [ %37, %24 ], [ 0, %22 ], [ -1, %6 ], [ %21, %14 ]
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %76, label %45

45:                                               ; preds = %38
  %46 = icmp eq i32 %44, 0
  br i1 %46, label %82, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %76, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1
  %53 = bitcast %"class.gfx::Size"* %52 to i64*
  %54 = load i64, i64* %53, align 4
  %55 = lshr i64 %54, 32
  %56 = trunc i64 %55 to i32
  %57 = icmp slt i32 %41, %56
  %58 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %76

60:                                               ; preds = %51
  %61 = icmp slt i32 %59, 2
  br i1 %61, label %76, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = sub nsw i32 %41, %64
  %66 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = shl nsw i32 %64, 1
  %69 = sub nsw i32 %67, %68
  %70 = sdiv i32 %65, %69
  %71 = add nsw i32 %59, -1
  %72 = icmp sgt i32 %70, 0
  %73 = select i1 %72, i32 %70, i32 0
  %74 = icmp slt i32 %71, %73
  %75 = select i1 %74, i32 %71, i32 %73
  br label %76

76:                                               ; preds = %38, %51, %62, %60, %47
  %77 = phi i32 [ -1, %47 ], [ %75, %62 ], [ 0, %60 ], [ %59, %51 ], [ -1, %38 ]
  %78 = add nsw i32 %44, %4
  %79 = icmp slt i32 %78, 1
  %80 = icmp eq i32 %44, 0
  %81 = or i1 %80, %79
  br i1 %81, label %82, label %87

82:                                               ; preds = %45, %76
  %83 = phi i1 [ %80, %76 ], [ true, %45 ]
  %84 = phi i32 [ %77, %76 ], [ -1, %45 ]
  %85 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %86 = load i32, i32* %85, align 4
  br label %116

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %152, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1
  %93 = bitcast %"class.gfx::Size"* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = trunc i64 %94 to i32
  %96 = icmp sgt i32 %78, %95
  %97 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %116, label %99

99:                                               ; preds = %91
  %100 = icmp slt i32 %98, 2
  br i1 %100, label %116, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = xor i32 %103, -1
  %105 = add i32 %78, %104
  %106 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = shl nsw i32 %103, 1
  %109 = sub nsw i32 %107, %108
  %110 = sdiv i32 %105, %109
  %111 = add nsw i32 %98, -1
  %112 = icmp sgt i32 %110, 0
  %113 = select i1 %112, i32 %110, i32 0
  %114 = icmp slt i32 %111, %113
  %115 = select i1 %114, i32 %111, i32 %113
  br label %116

116:                                              ; preds = %82, %91, %101, %99
  %117 = phi i1 [ %83, %82 ], [ %80, %101 ], [ %80, %99 ], [ %80, %91 ]
  %118 = phi i32 [ %84, %82 ], [ %77, %101 ], [ %77, %99 ], [ %77, %91 ]
  %119 = phi i32 [ %86, %82 ], [ %89, %101 ], [ %89, %99 ], [ %89, %91 ]
  %120 = phi i32 [ -1, %82 ], [ %115, %101 ], [ 0, %99 ], [ %98, %91 ]
  %121 = add nsw i32 %119, %41
  %122 = icmp slt i32 %121, 1
  %123 = or i1 %117, %122
  %124 = icmp eq i32 %119, 0
  %125 = or i1 %124, %123
  br i1 %125, label %152, label %126

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1
  %128 = bitcast %"class.gfx::Size"* %127 to i64*
  %129 = load i64, i64* %128, align 4
  %130 = lshr i64 %129, 32
  %131 = trunc i64 %130 to i32
  %132 = icmp sgt i32 %121, %131
  %133 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %152, label %135

135:                                              ; preds = %126
  %136 = icmp slt i32 %134, 2
  br i1 %136, label %152, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %139, -1
  %141 = add i32 %121, %140
  %142 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = shl nsw i32 %139, 1
  %145 = sub nsw i32 %143, %144
  %146 = sdiv i32 %141, %145
  %147 = add nsw i32 %134, -1
  %148 = icmp sgt i32 %146, 0
  %149 = select i1 %148, i32 %146, i32 0
  %150 = icmp slt i32 %147, %149
  %151 = select i1 %150, i32 %147, i32 %149
  br label %152

152:                                              ; preds = %87, %126, %137, %135, %116
  %153 = phi i32 [ %120, %116 ], [ %120, %137 ], [ %120, %135 ], [ %120, %126 ], [ -1, %87 ]
  %154 = phi i32 [ %118, %116 ], [ %118, %137 ], [ %118, %135 ], [ %118, %126 ], [ %77, %87 ]
  %155 = phi i32 [ -1, %116 ], [ %151, %137 ], [ 0, %135 ], [ %134, %126 ], [ -1, %87 ]
  %156 = zext i32 %153 to i64
  %157 = shl nuw i64 %156, 32
  %158 = zext i32 %39 to i64
  %159 = or i64 %157, %158
  %160 = insertvalue { i64, i64 } undef, i64 %159, 0
  %161 = zext i32 %155 to i64
  %162 = shl nuw i64 %161, 32
  %163 = zext i32 %154 to i64
  %164 = or i64 %162, %163
  %165 = insertvalue { i64, i64 } %160, i64 %164, 1
  ret { i64, i64 } %165
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc10TilingData37ExpandRectIgnoringBordersToTileBoundsERKN3gfx4RectE(%"class.cc::TilingData"* readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %231, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %231, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %231, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %231, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %24, %26
  br i1 %27, label %231, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %30, %32
  br i1 %33, label %231, label %34

34:                                               ; preds = %28
  %35 = icmp slt i32 %16, 2
  br i1 %35, label %50, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = sub nsw i32 %24, %38
  %40 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = shl nsw i32 %38, 1
  %43 = sub nsw i32 %41, %42
  %44 = sdiv i32 %39, %43
  %45 = add nsw i32 %16, -1
  %46 = icmp sgt i32 %44, 0
  %47 = select i1 %46, i32 %44, i32 0
  %48 = icmp slt i32 %45, %47
  %49 = select i1 %48, i32 %45, i32 %47
  br label %50

50:                                               ; preds = %34, %36
  %51 = phi i32 [ %49, %36 ], [ 0, %34 ]
  %52 = icmp slt i32 %20, 2
  br i1 %52, label %67, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = sub nsw i32 %30, %55
  %57 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = shl nsw i32 %55, 1
  %60 = sub nsw i32 %58, %59
  %61 = sdiv i32 %56, %60
  %62 = add nsw i32 %20, -1
  %63 = icmp sgt i32 %61, 0
  %64 = select i1 %63, i32 %61, i32 0
  %65 = icmp slt i32 %62, %64
  %66 = select i1 %65, i32 %62, i32 %64
  br label %67

67:                                               ; preds = %50, %53
  %68 = phi i32 [ %66, %53 ], [ 0, %50 ]
  br i1 %35, label %85, label %69

69:                                               ; preds = %67
  %70 = add nsw i32 %24, %8
  %71 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = shl nsw i32 %72, 1
  %78 = sub nsw i32 %76, %77
  %79 = sdiv i32 %74, %78
  %80 = add nsw i32 %16, -1
  %81 = icmp sgt i32 %79, 0
  %82 = select i1 %81, i32 %79, i32 0
  %83 = icmp slt i32 %80, %82
  %84 = select i1 %83, i32 %80, i32 %82
  br label %85

85:                                               ; preds = %67, %69
  %86 = phi i32 [ %84, %69 ], [ 0, %67 ]
  br i1 %52, label %87, label %94

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = shl nsw i32 %89, 1
  %93 = sub nsw i32 %91, %92
  br label %110

94:                                               ; preds = %85
  %95 = add nsw i32 %12, %30
  %96 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = xor i32 %97, -1
  %99 = add i32 %95, %98
  %100 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = shl nsw i32 %97, 1
  %103 = sub nsw i32 %101, %102
  %104 = sdiv i32 %99, %103
  %105 = add nsw i32 %20, -1
  %106 = icmp sgt i32 %104, 0
  %107 = select i1 %106, i32 %104, i32 0
  %108 = icmp slt i32 %105, %107
  %109 = select i1 %108, i32 %105, i32 %107
  br label %110

110:                                              ; preds = %94, %87
  %111 = phi i32 [ %93, %87 ], [ %103, %94 ]
  %112 = phi i32 [ %92, %87 ], [ %102, %94 ]
  %113 = phi i32 [ %89, %87 ], [ %97, %94 ]
  %114 = phi i32 [ 0, %87 ], [ %109, %94 ]
  %115 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #7
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %117 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = sub nsw i32 %118, %112
  %120 = mul nsw i32 %119, %51
  %121 = icmp eq i32 %51, 0
  %122 = select i1 %121, i32 0, i32 %113
  %123 = add nsw i32 %120, %122
  %124 = mul nsw i32 %111, %68
  %125 = icmp eq i32 %68, 0
  %126 = add nsw i32 %124, %113
  %127 = select i1 %125, i32 0, i32 %126
  %128 = add nuw nsw i32 %51, 1
  %129 = mul nsw i32 %119, %128
  %130 = icmp eq i32 %128, %16
  %131 = select i1 %130, i32 %113, i32 0
  %132 = add i32 %131, %113
  %133 = add i32 %132, %129
  %134 = add nuw nsw i32 %68, 1
  %135 = mul nsw i32 %111, %134
  %136 = icmp eq i32 %134, %20
  %137 = select i1 %136, i32 %113, i32 0
  %138 = add i32 %137, %113
  %139 = add i32 %138, %135
  %140 = icmp slt i32 %26, %133
  %141 = select i1 %140, i32 %26, i32 %133
  %142 = icmp slt i32 %32, %139
  %143 = select i1 %142, i32 %32, i32 %139
  %144 = sub nsw i32 %141, %123
  %145 = sub nsw i32 %143, %127
  %146 = icmp sgt i32 %123, 0
  %147 = icmp sgt i32 %144, 0
  %148 = and i1 %146, %147
  %149 = sub nuw nsw i32 2147483647, %123
  %150 = icmp ult i32 %149, %144
  %151 = and i1 %150, %148
  %152 = select i1 %151, i32 %149, i32 %144
  %153 = icmp sgt i32 %127, 0
  %154 = icmp sgt i32 %145, 0
  %155 = and i1 %153, %154
  %156 = sub nuw nsw i32 2147483647, %127
  %157 = icmp ult i32 %156, %145
  %158 = and i1 %157, %155
  %159 = select i1 %158, i32 %156, i32 %145
  %160 = icmp sgt i32 %152, 0
  %161 = select i1 %160, i32 %152, i32 0
  %162 = icmp sgt i32 %159, 0
  %163 = select i1 %162, i32 %159, i32 0
  %164 = zext i32 %127 to i64
  %165 = shl nuw i64 %164, 32
  %166 = zext i32 %123 to i64
  %167 = or i64 %165, %166
  %168 = zext i32 %163 to i64
  %169 = shl nuw nsw i64 %168, 32
  %170 = zext i32 %161 to i64
  %171 = or i64 %169, %170
  %172 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %167, i64* %172, align 8
  store i64 %171, i64* %116, align 8
  %173 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #7
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %175 = mul nsw i32 %119, %86
  %176 = icmp eq i32 %86, 0
  %177 = select i1 %176, i32 0, i32 %113
  %178 = add nsw i32 %175, %177
  %179 = mul nsw i32 %111, %114
  %180 = icmp eq i32 %114, 0
  %181 = add nsw i32 %179, %113
  %182 = select i1 %180, i32 0, i32 %181
  %183 = add nuw nsw i32 %86, 1
  %184 = mul nsw i32 %119, %183
  %185 = icmp eq i32 %183, %16
  %186 = select i1 %185, i32 %113, i32 0
  %187 = add i32 %186, %113
  %188 = add i32 %187, %184
  %189 = add nuw nsw i32 %114, 1
  %190 = mul nsw i32 %111, %189
  %191 = icmp eq i32 %189, %20
  %192 = select i1 %191, i32 %113, i32 0
  %193 = add i32 %192, %113
  %194 = add i32 %193, %190
  %195 = icmp slt i32 %26, %188
  %196 = select i1 %195, i32 %26, i32 %188
  %197 = icmp slt i32 %32, %194
  %198 = select i1 %197, i32 %32, i32 %194
  %199 = sub nsw i32 %196, %178
  %200 = sub nsw i32 %198, %182
  %201 = icmp sgt i32 %178, 0
  %202 = icmp sgt i32 %199, 0
  %203 = and i1 %201, %202
  %204 = sub nuw nsw i32 2147483647, %178
  %205 = icmp ult i32 %204, %199
  %206 = and i1 %205, %203
  %207 = select i1 %206, i32 %204, i32 %199
  %208 = icmp sgt i32 %182, 0
  %209 = icmp sgt i32 %200, 0
  %210 = and i1 %208, %209
  %211 = sub nuw nsw i32 2147483647, %182
  %212 = icmp ult i32 %211, %200
  %213 = and i1 %212, %210
  %214 = select i1 %213, i32 %211, i32 %200
  %215 = icmp sgt i32 %207, 0
  %216 = select i1 %215, i32 %207, i32 0
  %217 = icmp sgt i32 %214, 0
  %218 = select i1 %217, i32 %214, i32 0
  %219 = zext i32 %182 to i64
  %220 = shl nuw i64 %219, 32
  %221 = zext i32 %178 to i64
  %222 = or i64 %220, %221
  %223 = zext i32 %218 to i64
  %224 = shl nuw nsw i64 %223, 32
  %225 = zext i32 %216 to i64
  %226 = or i64 %224, %225
  %227 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %222, i64* %227, align 8
  store i64 %226, i64* %174, align 8
  %228 = call { i64, i64 } @_ZN3gfx10UnionRectsERKNS_4RectES2_(%"class.gfx::Rect"* nonnull dereferenceable(16) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #7
  %229 = extractvalue { i64, i64 } %228, 0
  %230 = extractvalue { i64, i64 } %228, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #7
  br label %231

231:                                              ; preds = %14, %2, %22, %28, %10, %18, %110
  %232 = phi i64 [ %229, %110 ], [ 0, %18 ], [ 0, %10 ], [ 0, %28 ], [ 0, %22 ], [ 0, %2 ], [ 0, %14 ]
  %233 = phi i64 [ %230, %110 ], [ 0, %18 ], [ 0, %10 ], [ 0, %28 ], [ 0, %22 ], [ 0, %2 ], [ 0, %14 ]
  %234 = insertvalue { i64, i64 } undef, i64 %232, 0
  %235 = insertvalue { i64, i64 } %234, i64 %233, 1
  ret { i64, i64 } %235
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2cc10TilingData10TileBoundsEii(%"class.cc::TilingData"* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl nsw i32 %7, 1
  %9 = sub nsw i32 %5, %8
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 %11, %8
  %13 = mul nsw i32 %9, %1
  %14 = icmp eq i32 %1, 0
  %15 = select i1 %14, i32 0, i32 %7
  %16 = add nsw i32 %13, %15
  %17 = mul nsw i32 %12, %2
  %18 = icmp eq i32 %2, 0
  %19 = add nsw i32 %17, %7
  %20 = select i1 %18, i32 0, i32 %19
  %21 = add nsw i32 %1, 1
  %22 = mul nsw i32 %9, %21
  %23 = add nsw i32 %22, %7
  %24 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %21, %25
  %27 = select i1 %26, i32 %7, i32 0
  %28 = add nsw i32 %23, %27
  %29 = add nsw i32 %2, 1
  %30 = mul nsw i32 %12, %29
  %31 = add nsw i32 %30, %7
  %32 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %29, %33
  %35 = select i1 %34, i32 %7, i32 0
  %36 = add nsw i32 %31, %35
  %37 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, %28
  %40 = select i1 %39, i32 %38, i32 %28
  %41 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, %36
  %44 = select i1 %43, i32 %42, i32 %36
  %45 = sub nsw i32 %40, %16
  %46 = sub nsw i32 %44, %20
  %47 = icmp sgt i32 %16, 0
  %48 = icmp sgt i32 %45, 0
  %49 = and i1 %47, %48
  %50 = sub nuw nsw i32 2147483647, %16
  %51 = icmp ult i32 %50, %45
  %52 = and i1 %51, %49
  %53 = select i1 %52, i32 %50, i32 %45
  %54 = icmp sgt i32 %20, 0
  %55 = icmp sgt i32 %46, 0
  %56 = and i1 %54, %55
  %57 = sub nuw nsw i32 2147483647, %20
  %58 = icmp ult i32 %57, %46
  %59 = and i1 %58, %56
  %60 = select i1 %59, i32 %57, i32 %46
  %61 = icmp sgt i32 %53, 0
  %62 = select i1 %61, i32 %53, i32 0
  %63 = icmp sgt i32 %60, 0
  %64 = select i1 %63, i32 %60, i32 0
  %65 = zext i32 %20 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %16 to i64
  %68 = or i64 %66, %67
  %69 = insertvalue { i64, i64 } undef, i64 %68, 0
  %70 = zext i32 %64 to i64
  %71 = shl nuw nsw i64 %70, 32
  %72 = zext i32 %62 to i64
  %73 = or i64 %71, %72
  %74 = insertvalue { i64, i64 } %69, i64 %73, 1
  ret { i64, i64 } %74
}

declare { i64, i64 } @_ZN3gfx10UnionRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc10TilingData22ExpandRectToTileBoundsERKN3gfx4RectE(%"class.cc::TilingData"* readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %229, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %229, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %229, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %229, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %24, %26
  br i1 %27, label %229, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %30, %32
  br i1 %33, label %229, label %34

34:                                               ; preds = %28
  %35 = icmp slt i32 %16, 2
  br i1 %35, label %50, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = shl nsw i32 %40, 1
  %42 = sub nsw i32 %38, %41
  %43 = sub nsw i32 %24, %41
  %44 = sdiv i32 %43, %42
  %45 = add nsw i32 %16, -1
  %46 = icmp sgt i32 %44, 0
  %47 = select i1 %46, i32 %44, i32 0
  %48 = icmp slt i32 %45, %47
  %49 = select i1 %48, i32 %45, i32 %47
  br label %50

50:                                               ; preds = %34, %36
  %51 = phi i32 [ %49, %36 ], [ 0, %34 ]
  %52 = icmp slt i32 %20, 2
  br i1 %52, label %67, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = shl nsw i32 %57, 1
  %59 = sub nsw i32 %55, %58
  %60 = sub nsw i32 %30, %58
  %61 = sdiv i32 %60, %59
  %62 = add nsw i32 %20, -1
  %63 = icmp sgt i32 %61, 0
  %64 = select i1 %63, i32 %61, i32 0
  %65 = icmp slt i32 %62, %64
  %66 = select i1 %65, i32 %62, i32 %64
  br label %67

67:                                               ; preds = %50, %53
  %68 = phi i32 [ %66, %53 ], [ 0, %50 ]
  br i1 %35, label %84, label %69

69:                                               ; preds = %67
  %70 = add i32 %8, -1
  %71 = add i32 %70, %24
  %72 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = shl nsw i32 %75, 1
  %77 = sub nsw i32 %73, %76
  %78 = sdiv i32 %71, %77
  %79 = add nsw i32 %16, -1
  %80 = icmp sgt i32 %78, 0
  %81 = select i1 %80, i32 %78, i32 0
  %82 = icmp slt i32 %79, %81
  %83 = select i1 %82, i32 %79, i32 %81
  br label %84

84:                                               ; preds = %67, %69
  %85 = phi i32 [ %83, %69 ], [ 0, %67 ]
  br i1 %52, label %86, label %93

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = shl nsw i32 %88, 1
  %92 = sub nsw i32 %90, %91
  br label %108

93:                                               ; preds = %84
  %94 = add i32 %30, -1
  %95 = add i32 %94, %12
  %96 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = shl nsw i32 %99, 1
  %101 = sub nsw i32 %97, %100
  %102 = sdiv i32 %95, %101
  %103 = add nsw i32 %20, -1
  %104 = icmp sgt i32 %102, 0
  %105 = select i1 %104, i32 %102, i32 0
  %106 = icmp slt i32 %103, %105
  %107 = select i1 %106, i32 %103, i32 %105
  br label %108

108:                                              ; preds = %93, %86
  %109 = phi i32 [ %92, %86 ], [ %101, %93 ]
  %110 = phi i32 [ %91, %86 ], [ %100, %93 ]
  %111 = phi i32 [ %88, %86 ], [ %99, %93 ]
  %112 = phi i32 [ 0, %86 ], [ %107, %93 ]
  %113 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #7
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %115 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = sub nsw i32 %116, %110
  %118 = mul nsw i32 %117, %51
  %119 = icmp eq i32 %51, 0
  %120 = select i1 %119, i32 0, i32 %111
  %121 = add nsw i32 %118, %120
  %122 = mul nsw i32 %109, %68
  %123 = icmp eq i32 %68, 0
  %124 = add nsw i32 %122, %111
  %125 = select i1 %123, i32 0, i32 %124
  %126 = add nuw nsw i32 %51, 1
  %127 = mul nsw i32 %117, %126
  %128 = icmp eq i32 %126, %16
  %129 = select i1 %128, i32 %111, i32 0
  %130 = add i32 %129, %111
  %131 = add i32 %130, %127
  %132 = add nuw nsw i32 %68, 1
  %133 = mul nsw i32 %109, %132
  %134 = icmp eq i32 %132, %20
  %135 = select i1 %134, i32 %111, i32 0
  %136 = add i32 %135, %111
  %137 = add i32 %136, %133
  %138 = icmp slt i32 %26, %131
  %139 = select i1 %138, i32 %26, i32 %131
  %140 = icmp slt i32 %32, %137
  %141 = select i1 %140, i32 %32, i32 %137
  %142 = sub nsw i32 %139, %121
  %143 = sub nsw i32 %141, %125
  %144 = icmp sgt i32 %121, 0
  %145 = icmp sgt i32 %142, 0
  %146 = and i1 %144, %145
  %147 = sub nuw nsw i32 2147483647, %121
  %148 = icmp ult i32 %147, %142
  %149 = and i1 %148, %146
  %150 = select i1 %149, i32 %147, i32 %142
  %151 = icmp sgt i32 %125, 0
  %152 = icmp sgt i32 %143, 0
  %153 = and i1 %151, %152
  %154 = sub nuw nsw i32 2147483647, %125
  %155 = icmp ult i32 %154, %143
  %156 = and i1 %155, %153
  %157 = select i1 %156, i32 %154, i32 %143
  %158 = icmp sgt i32 %150, 0
  %159 = select i1 %158, i32 %150, i32 0
  %160 = icmp sgt i32 %157, 0
  %161 = select i1 %160, i32 %157, i32 0
  %162 = zext i32 %125 to i64
  %163 = shl nuw i64 %162, 32
  %164 = zext i32 %121 to i64
  %165 = or i64 %163, %164
  %166 = zext i32 %161 to i64
  %167 = shl nuw nsw i64 %166, 32
  %168 = zext i32 %159 to i64
  %169 = or i64 %167, %168
  %170 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %165, i64* %170, align 8
  store i64 %169, i64* %114, align 8
  %171 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #7
  %172 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %173 = mul nsw i32 %117, %85
  %174 = icmp eq i32 %85, 0
  %175 = select i1 %174, i32 0, i32 %111
  %176 = add nsw i32 %173, %175
  %177 = mul nsw i32 %109, %112
  %178 = icmp eq i32 %112, 0
  %179 = add nsw i32 %177, %111
  %180 = select i1 %178, i32 0, i32 %179
  %181 = add nuw nsw i32 %85, 1
  %182 = mul nsw i32 %117, %181
  %183 = icmp eq i32 %181, %16
  %184 = select i1 %183, i32 %111, i32 0
  %185 = add i32 %184, %111
  %186 = add i32 %185, %182
  %187 = add nuw nsw i32 %112, 1
  %188 = mul nsw i32 %109, %187
  %189 = icmp eq i32 %187, %20
  %190 = select i1 %189, i32 %111, i32 0
  %191 = add i32 %190, %111
  %192 = add i32 %191, %188
  %193 = icmp slt i32 %26, %186
  %194 = select i1 %193, i32 %26, i32 %186
  %195 = icmp slt i32 %32, %192
  %196 = select i1 %195, i32 %32, i32 %192
  %197 = sub nsw i32 %194, %176
  %198 = sub nsw i32 %196, %180
  %199 = icmp sgt i32 %176, 0
  %200 = icmp sgt i32 %197, 0
  %201 = and i1 %199, %200
  %202 = sub nuw nsw i32 2147483647, %176
  %203 = icmp ult i32 %202, %197
  %204 = and i1 %203, %201
  %205 = select i1 %204, i32 %202, i32 %197
  %206 = icmp sgt i32 %180, 0
  %207 = icmp sgt i32 %198, 0
  %208 = and i1 %206, %207
  %209 = sub nuw nsw i32 2147483647, %180
  %210 = icmp ult i32 %209, %198
  %211 = and i1 %210, %208
  %212 = select i1 %211, i32 %209, i32 %198
  %213 = icmp sgt i32 %205, 0
  %214 = select i1 %213, i32 %205, i32 0
  %215 = icmp sgt i32 %212, 0
  %216 = select i1 %215, i32 %212, i32 0
  %217 = zext i32 %180 to i64
  %218 = shl nuw i64 %217, 32
  %219 = zext i32 %176 to i64
  %220 = or i64 %218, %219
  %221 = zext i32 %216 to i64
  %222 = shl nuw nsw i64 %221, 32
  %223 = zext i32 %214 to i64
  %224 = or i64 %222, %223
  %225 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %220, i64* %225, align 8
  store i64 %224, i64* %172, align 8
  %226 = call { i64, i64 } @_ZN3gfx10UnionRectsERKNS_4RectES2_(%"class.gfx::Rect"* nonnull dereferenceable(16) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #7
  %227 = extractvalue { i64, i64 } %226, 0
  %228 = extractvalue { i64, i64 } %226, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #7
  br label %229

229:                                              ; preds = %14, %2, %22, %28, %10, %18, %108
  %230 = phi i64 [ %227, %108 ], [ 0, %18 ], [ 0, %10 ], [ 0, %28 ], [ 0, %22 ], [ 0, %2 ], [ 0, %14 ]
  %231 = phi i64 [ %228, %108 ], [ 0, %18 ], [ 0, %10 ], [ 0, %28 ], [ 0, %22 ], [ 0, %2 ], [ 0, %14 ]
  %232 = insertvalue { i64, i64 } undef, i64 %230, 0
  %233 = insertvalue { i64, i64 } %232, i64 %231, 1
  ret { i64, i64 } %233
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2cc10TilingData20TileBoundsWithBorderEii(%"class.cc::TilingData"* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl nsw i32 %7, 1
  %9 = sub nsw i32 %5, %8
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 %11, %8
  %13 = mul nsw i32 %9, %1
  %14 = mul nsw i32 %12, %2
  %15 = add i32 %13, %5
  %16 = add i32 %14, %11
  %17 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %15
  %20 = select i1 %19, i32 %18, i32 %15
  %21 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %16
  %24 = select i1 %23, i32 %22, i32 %16
  %25 = sub nsw i32 %20, %13
  %26 = sub nsw i32 %24, %14
  %27 = icmp sgt i32 %13, 0
  %28 = icmp sgt i32 %25, 0
  %29 = and i1 %27, %28
  %30 = sub nuw nsw i32 2147483647, %13
  %31 = icmp ult i32 %30, %25
  %32 = and i1 %31, %29
  %33 = select i1 %32, i32 %30, i32 %25
  %34 = icmp sgt i32 %14, 0
  %35 = icmp sgt i32 %26, 0
  %36 = and i1 %34, %35
  %37 = sub nuw nsw i32 2147483647, %14
  %38 = icmp ult i32 %37, %26
  %39 = and i1 %38, %36
  %40 = select i1 %39, i32 %37, i32 %26
  %41 = icmp sgt i32 %33, 0
  %42 = select i1 %41, i32 %33, i32 0
  %43 = icmp sgt i32 %40, 0
  %44 = select i1 %43, i32 %40, i32 0
  %45 = zext i32 %14 to i64
  %46 = shl nuw i64 %45, 32
  %47 = zext i32 %13 to i64
  %48 = or i64 %46, %47
  %49 = insertvalue { i64, i64 } undef, i64 %48, 0
  %50 = zext i32 %44 to i64
  %51 = shl nuw nsw i64 %50, 32
  %52 = zext i32 %42 to i64
  %53 = or i64 %51, %52
  %54 = insertvalue { i64, i64 } %49, i64 %53, 1
  ret { i64, i64 } %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData13TilePositionXEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = shl nsw i32 %6, 1
  %8 = sub nsw i32 %4, %7
  %9 = mul nsw i32 %8, %1
  %10 = icmp eq i32 %1, 0
  %11 = select i1 %10, i32 0, i32 %6
  %12 = add nsw i32 %9, %11
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData13TilePositionYEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = shl nsw i32 %6, 1
  %8 = sub nsw i32 %4, %7
  %9 = mul nsw i32 %8, %1
  %10 = icmp eq i32 %1, 0
  %11 = select i1 %10, i32 0, i32 %6
  %12 = add nsw i32 %9, %11
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData9TileSizeXEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  br i1 %3, label %6, label %19

6:                                                ; preds = %2
  %7 = icmp eq i32 %5, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  br label %45

11:                                               ; preds = %6
  %12 = icmp sgt i32 %5, 1
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %15, %17
  br label %45

19:                                               ; preds = %2, %11
  %20 = add nsw i32 %5, -1
  %21 = icmp sgt i32 %20, %1
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = shl nsw i32 %26, 1
  %28 = sub nsw i32 %24, %27
  br label %45

29:                                               ; preds = %19
  %30 = icmp eq i32 %20, %1
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = shl nsw i32 %37, 1
  %39 = sub nsw i32 %35, %38
  %40 = mul nsw i32 %39, %1
  %41 = sub i32 0, %37
  %42 = select i1 %3, i32 0, i32 %41
  %43 = add i32 %42, %33
  %44 = sub i32 %43, %40
  br label %45

45:                                               ; preds = %29, %31, %22, %13, %8
  %46 = phi i32 [ %28, %22 ], [ %44, %31 ], [ %18, %13 ], [ %10, %8 ], [ 0, %29 ]
  ret i32 %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc10TilingData9TileSizeYEi(%"class.cc::TilingData"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  br i1 %3, label %6, label %19

6:                                                ; preds = %2
  %7 = icmp eq i32 %5, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  br label %45

11:                                               ; preds = %6
  %12 = icmp sgt i32 %5, 1
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %15, %17
  br label %45

19:                                               ; preds = %2, %11
  %20 = add nsw i32 %5, -1
  %21 = icmp sgt i32 %20, %1
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = shl nsw i32 %26, 1
  %28 = sub nsw i32 %24, %27
  br label %45

29:                                               ; preds = %19
  %30 = icmp eq i32 %20, %1
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = shl nsw i32 %37, 1
  %39 = sub nsw i32 %35, %38
  %40 = mul nsw i32 %39, %1
  %41 = sub i32 0, %37
  %42 = select i1 %3, i32 0, i32 %41
  %43 = add i32 %42, %33
  %44 = sub i32 %43, %40
  br label %45

45:                                               ; preds = %29, %31, %22, %13, %8
  %46 = phi i32 [ %28, %22 ], [ %44, %31 ], [ %18, %13 ], [ %10, %8 ], [ 0, %29 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK2cc10TilingData11TexelExtentEii(%"class.cc::TilingData"* nocapture readonly, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::RectF"*
  %6 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = shl nsw i32 %13, 1
  %15 = sub nsw i32 %11, %14
  %16 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %17, %14
  %19 = mul nsw i32 %15, %1
  %20 = mul nsw i32 %18, %2
  %21 = add i32 %19, %11
  %22 = add i32 %20, %17
  %23 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %21
  %26 = select i1 %25, i32 %24, i32 %21
  %27 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, %22
  %30 = select i1 %29, i32 %28, i32 %22
  %31 = sub nsw i32 %26, %19
  %32 = sub nsw i32 %30, %20
  %33 = icmp sgt i32 %19, 0
  %34 = icmp sgt i32 %31, 0
  %35 = and i1 %33, %34
  %36 = sub nuw nsw i32 2147483647, %19
  %37 = icmp ult i32 %36, %31
  %38 = and i1 %37, %35
  %39 = select i1 %38, i32 %36, i32 %31
  %40 = icmp sgt i32 %20, 0
  %41 = icmp sgt i32 %32, 0
  %42 = and i1 %40, %41
  %43 = sub nuw nsw i32 2147483647, %20
  %44 = icmp ult i32 %43, %32
  %45 = and i1 %44, %42
  %46 = select i1 %45, i32 %43, i32 %32
  %47 = icmp sgt i32 %39, 0
  %48 = icmp sgt i32 %46, 0
  %49 = sitofp i32 %19 to float
  %50 = sitofp i32 %20 to float
  store float %49, float* %6, align 8
  store float %50, float* %7, align 4
  %51 = select i1 %47, i32 %39, i32 0
  %52 = sitofp i32 %51 to float
  store float %52, float* %8, align 8
  %53 = select i1 %48, i32 %46, i32 0
  %54 = sitofp i32 %53 to float
  store float %54, float* %9, align 4
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %5, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01) #7
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %56 = load <2 x float>, <2 x float>* %55, align 8
  %57 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %56, 0
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %59 = load <2 x float>, <2 x float>* %58, align 8
  %60 = insertvalue { <2 x float>, <2 x float> } %57, <2 x float> %59, 1
  ret { <2 x float>, <2 x float> } %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc10TilingData13TextureOffsetEii(%"class.cc::TilingData"* nocapture readonly, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  br label %13

13:                                               ; preds = %3, %5, %9
  %14 = phi i64 [ %12, %9 ], [ 0, %5 ], [ 0, %3 ]
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  br label %25

25:                                               ; preds = %13, %16, %20
  %26 = phi i64 [ %24, %20 ], [ 0, %16 ], [ 0, %13 ]
  %27 = or i64 %26, %14
  ret i64 %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc10TilingData12BaseIteratorC2Ev(%"class.cc::TilingData::BaseIterator"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilingData::BaseIterator", %"class.cc::TilingData::BaseIterator"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.cc::TilingData::BaseIterator", %"class.cc::TilingData::BaseIterator"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData8IteratorC2Ev(%"class.cc::TilingData::Iterator"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.cc::TilingData::Iterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData8IteratorC2EPKS0_RKN3gfx4RectEb(%"class.cc::TilingData::Iterator"* nocapture, %"class.cc::TilingData"* readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #3 align 2 {
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca %"class.gfx::Rect", align 8
  %8 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 3
  %11 = bitcast %"class.cc::TilingData::Iterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 -1, i64 24, i1 false)
  %12 = load i32, i32* %10, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %14, %4
  store i32 -1, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  br label %315

19:                                               ; preds = %14
  %20 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 1
  %24 = bitcast %"class.gfx::Size"* %23 to i64*
  %25 = load i64, i64* %24, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %27 = bitcast %"class.gfx::Size"* %26 to i64*
  store i64 %25, i64* %27, align 4
  %28 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %33 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %33, i64 16, i1 false)
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #7
  %34 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #7
  %35 = load i32, i32* %29, align 4
  %36 = load i32, i32* %10, align 4
  %37 = icmp slt i32 %36, 2
  br i1 %3, label %38, label %155

38:                                               ; preds = %19
  br i1 %37, label %53, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = shl nsw i32 %43, 1
  %45 = sub nsw i32 %41, %44
  %46 = sub nsw i32 %35, %44
  %47 = sdiv i32 %46, %45
  %48 = add nsw i32 %36, -1
  %49 = icmp sgt i32 %47, 0
  %50 = select i1 %49, i32 %47, i32 0
  %51 = icmp slt i32 %48, %50
  %52 = select i1 %51, i32 %48, i32 %50
  br label %53

53:                                               ; preds = %38, %39
  %54 = phi i32 [ %52, %39 ], [ 0, %38 ]
  store i32 %54, i32* %8, align 4
  %55 = load i32, i32* %30, align 4
  %56 = load i32, i32* %15, align 4
  %57 = icmp slt i32 %56, 2
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = shl nsw i32 %62, 1
  %64 = sub nsw i32 %60, %63
  %65 = sub nsw i32 %55, %63
  %66 = sdiv i32 %65, %64
  %67 = add nsw i32 %56, -1
  %68 = icmp sgt i32 %66, 0
  %69 = select i1 %68, i32 %66, i32 0
  %70 = icmp slt i32 %67, %69
  %71 = select i1 %70, i32 %67, i32 %69
  br label %72

72:                                               ; preds = %53, %58
  %73 = phi i32 [ %71, %58 ], [ 0, %53 ]
  store i32 %73, i32* %9, align 4
  %74 = load i32, i32* %10, align 4
  %75 = icmp slt i32 %74, 2
  br i1 %75, label %92, label %76

76:                                               ; preds = %72
  %77 = load i32, i32* %31, align 4
  %78 = add i32 %35, -1
  %79 = add i32 %78, %77
  %80 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = shl nsw i32 %83, 1
  %85 = sub nsw i32 %81, %84
  %86 = sdiv i32 %79, %85
  %87 = add nsw i32 %74, -1
  %88 = icmp sgt i32 %86, 0
  %89 = select i1 %88, i32 %86, i32 0
  %90 = icmp slt i32 %87, %89
  %91 = select i1 %90, i32 %87, i32 %89
  br label %92

92:                                               ; preds = %72, %76
  %93 = phi i32 [ %91, %76 ], [ 0, %72 ]
  %94 = load i32, i32* %15, align 4
  %95 = icmp slt i32 %94, 2
  br i1 %95, label %112, label %96

96:                                               ; preds = %92
  %97 = load i32, i32* %32, align 4
  %98 = add i32 %55, -1
  %99 = add i32 %98, %97
  %100 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = shl nsw i32 %103, 1
  %105 = sub nsw i32 %101, %104
  %106 = sdiv i32 %99, %105
  %107 = add nsw i32 %94, -1
  %108 = icmp sgt i32 %106, 0
  %109 = select i1 %108, i32 %106, i32 0
  %110 = icmp slt i32 %107, %109
  %111 = select i1 %110, i32 %107, i32 %109
  br label %112

112:                                              ; preds = %92, %96
  %113 = phi i32 [ %111, %96 ], [ 0, %92 ]
  %114 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 0
  store i32 %54, i32* %114, align 4
  %115 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 1
  store i32 %93, i32* %115, align 4
  %116 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 2
  store i32 %73, i32* %116, align 4
  %117 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 3
  store i32 %113, i32* %117, align 4
  %118 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = shl nsw i32 %121, 1
  %123 = sub nsw i32 %119, %122
  %124 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = sub nsw i32 %125, %122
  %127 = mul nsw i32 %123, %54
  %128 = mul nsw i32 %126, %73
  %129 = add i32 %127, %119
  %130 = add i32 %128, %125
  %131 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 1, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %132, %129
  %134 = select i1 %133, i32 %132, i32 %129
  %135 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 1, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = icmp slt i32 %136, %130
  %138 = select i1 %137, i32 %136, i32 %130
  %139 = sub nsw i32 %134, %127
  %140 = sub nsw i32 %138, %128
  %141 = icmp sgt i32 %127, 0
  %142 = icmp sgt i32 %139, 0
  %143 = and i1 %141, %142
  %144 = sub nuw nsw i32 2147483647, %127
  %145 = icmp ult i32 %144, %139
  %146 = and i1 %145, %143
  %147 = select i1 %146, i32 %144, i32 %139
  %148 = icmp sgt i32 %128, 0
  %149 = icmp sgt i32 %140, 0
  %150 = and i1 %148, %149
  %151 = sub nuw nsw i32 2147483647, %128
  %152 = icmp ult i32 %151, %140
  %153 = and i1 %152, %150
  %154 = select i1 %153, i32 %151, i32 %140
  br label %292

155:                                              ; preds = %19
  br i1 %37, label %170, label %156

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = sub nsw i32 %35, %158
  %160 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = shl nsw i32 %158, 1
  %163 = sub nsw i32 %161, %162
  %164 = sdiv i32 %159, %163
  %165 = add nsw i32 %36, -1
  %166 = icmp sgt i32 %164, 0
  %167 = select i1 %166, i32 %164, i32 0
  %168 = icmp slt i32 %165, %167
  %169 = select i1 %168, i32 %165, i32 %167
  br label %170

170:                                              ; preds = %155, %156
  %171 = phi i32 [ %169, %156 ], [ 0, %155 ]
  store i32 %171, i32* %8, align 4
  %172 = load i32, i32* %30, align 4
  %173 = load i32, i32* %15, align 4
  %174 = icmp slt i32 %173, 2
  br i1 %174, label %189, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = sub nsw i32 %172, %177
  %179 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = shl nsw i32 %177, 1
  %182 = sub nsw i32 %180, %181
  %183 = sdiv i32 %178, %182
  %184 = add nsw i32 %173, -1
  %185 = icmp sgt i32 %183, 0
  %186 = select i1 %185, i32 %183, i32 0
  %187 = icmp slt i32 %184, %186
  %188 = select i1 %187, i32 %184, i32 %186
  br label %189

189:                                              ; preds = %170, %175
  %190 = phi i32 [ %188, %175 ], [ 0, %170 ]
  store i32 %190, i32* %9, align 4
  %191 = load i32, i32* %10, align 4
  %192 = icmp slt i32 %191, 2
  br i1 %192, label %210, label %193

193:                                              ; preds = %189
  %194 = load i32, i32* %31, align 4
  %195 = add nsw i32 %194, %35
  %196 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %197 = load i32, i32* %196, align 4
  %198 = xor i32 %197, -1
  %199 = add i32 %195, %198
  %200 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = shl nsw i32 %197, 1
  %203 = sub nsw i32 %201, %202
  %204 = sdiv i32 %199, %203
  %205 = add nsw i32 %191, -1
  %206 = icmp sgt i32 %204, 0
  %207 = select i1 %206, i32 %204, i32 0
  %208 = icmp slt i32 %205, %207
  %209 = select i1 %208, i32 %205, i32 %207
  br label %210

210:                                              ; preds = %189, %193
  %211 = phi i32 [ %209, %193 ], [ 0, %189 ]
  %212 = load i32, i32* %15, align 4
  %213 = icmp slt i32 %212, 2
  br i1 %213, label %231, label %214

214:                                              ; preds = %210
  %215 = load i32, i32* %32, align 4
  %216 = add nsw i32 %215, %172
  %217 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = xor i32 %218, -1
  %220 = add i32 %216, %219
  %221 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = shl nsw i32 %218, 1
  %224 = sub nsw i32 %222, %223
  %225 = sdiv i32 %220, %224
  %226 = add nsw i32 %212, -1
  %227 = icmp sgt i32 %225, 0
  %228 = select i1 %227, i32 %225, i32 0
  %229 = icmp slt i32 %226, %228
  %230 = select i1 %229, i32 %226, i32 %228
  br label %231

231:                                              ; preds = %210, %214
  %232 = phi i32 [ %230, %214 ], [ 0, %210 ]
  %233 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 0
  store i32 %171, i32* %233, align 4
  %234 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 1
  store i32 %211, i32* %234, align 4
  %235 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 2
  store i32 %190, i32* %235, align 4
  %236 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 3
  store i32 %232, i32* %236, align 4
  %237 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %240 = load i32, i32* %239, align 4
  %241 = shl nsw i32 %240, 1
  %242 = sub nsw i32 %238, %241
  %243 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub nsw i32 %244, %241
  %246 = mul nsw i32 %242, %171
  %247 = icmp eq i32 %171, 0
  %248 = select i1 %247, i32 0, i32 %240
  %249 = add nsw i32 %246, %248
  %250 = mul nsw i32 %245, %190
  %251 = icmp eq i32 %190, 0
  %252 = add nsw i32 %250, %240
  %253 = select i1 %251, i32 0, i32 %252
  %254 = add nuw nsw i32 %171, 1
  %255 = mul nsw i32 %242, %254
  %256 = add nsw i32 %255, %240
  %257 = load i32, i32* %10, align 4
  %258 = icmp eq i32 %254, %257
  %259 = select i1 %258, i32 %240, i32 0
  %260 = add nsw i32 %256, %259
  %261 = add nuw nsw i32 %190, 1
  %262 = mul nsw i32 %245, %261
  %263 = add nsw i32 %262, %240
  %264 = load i32, i32* %15, align 4
  %265 = icmp eq i32 %261, %264
  %266 = select i1 %265, i32 %240, i32 0
  %267 = add nsw i32 %263, %266
  %268 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 1, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %269, %260
  %271 = select i1 %270, i32 %269, i32 %260
  %272 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 1, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = icmp slt i32 %273, %267
  %275 = select i1 %274, i32 %273, i32 %267
  %276 = sub nsw i32 %271, %249
  %277 = sub nsw i32 %275, %253
  %278 = icmp sgt i32 %249, 0
  %279 = icmp sgt i32 %276, 0
  %280 = and i1 %278, %279
  %281 = sub nuw nsw i32 2147483647, %249
  %282 = icmp ult i32 %281, %276
  %283 = and i1 %282, %280
  %284 = select i1 %283, i32 %281, i32 %276
  %285 = icmp sgt i32 %253, 0
  %286 = icmp sgt i32 %277, 0
  %287 = and i1 %285, %286
  %288 = sub nuw nsw i32 2147483647, %253
  %289 = icmp ult i32 %288, %277
  %290 = and i1 %289, %287
  %291 = select i1 %290, i32 %288, i32 %277
  br label %292

292:                                              ; preds = %231, %112
  %293 = phi i32 [ %284, %231 ], [ %147, %112 ]
  %294 = phi i32 [ %291, %231 ], [ %154, %112 ]
  %295 = phi i32 [ %253, %231 ], [ %128, %112 ]
  %296 = phi i32 [ %249, %231 ], [ %127, %112 ]
  %297 = icmp sgt i32 %293, 0
  %298 = select i1 %297, i32 %293, i32 0
  %299 = icmp sgt i32 %294, 0
  %300 = select i1 %299, i32 %294, i32 0
  %301 = zext i32 %295 to i64
  %302 = shl nuw i64 %301, 32
  %303 = zext i32 %296 to i64
  %304 = or i64 %302, %303
  %305 = zext i32 %300 to i64
  %306 = shl nuw nsw i64 %305, 32
  %307 = zext i32 %298 to i64
  %308 = or i64 %306, %307
  %309 = bitcast %"class.gfx::Rect"* %7 to i64*
  store i64 %304, i64* %309, align 8
  %310 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1
  %311 = bitcast %"class.gfx::Size"* %310 to i64*
  store i64 %308, i64* %311, align 8
  %312 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #7
  br i1 %312, label %314, label %313

313:                                              ; preds = %292
  store i32 -1, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  br label %314

314:                                              ; preds = %313, %292
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #7
  br label %315

315:                                              ; preds = %314, %18
  ret void
}

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(24) %"class.cc::TilingData::Iterator"* @_ZN2cc10TilingData8IteratorppEv(%"class.cc::TilingData::Iterator"* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = add nuw nsw i32 %3, 1
  store i32 %10, i32* %2, align 4
  %11 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %3, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %2, align 4
  %17 = add nuw nsw i32 %7, 1
  store i32 %17, i32* %6, align 4
  %18 = getelementptr inbounds %"class.cc::TilingData::Iterator", %"class.cc::TilingData::Iterator"* %0, i64 0, i32 1, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %7, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  store i32 -1, i32* %2, align 4
  store i32 -1, i32* %6, align 4
  br label %22

22:                                               ; preds = %5, %1, %21, %9, %14
  ret %"class.cc::TilingData::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData22BaseDifferenceIteratorC2Ev(%"class.cc::TilingData::BaseDifferenceIterator"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.cc::TilingData::BaseDifferenceIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData22BaseDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_(%"class.cc::TilingData::BaseDifferenceIterator"*, %"class.cc::TilingData"* readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 2
  %12 = bitcast %"class.cc::IndexRect"* %11 to i8*
  %13 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 3
  %14 = bitcast %"class.cc::TilingData::BaseDifferenceIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 -1, i64 40, i1 false)
  %15 = load i32, i32* %13, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %21, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %4
  store i32 -1, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  br label %206

22:                                               ; preds = %17
  %23 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 1
  %27 = bitcast %"class.gfx::Size"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 4
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %30 = bitcast %"class.gfx::Size"* %29 to i64*
  store i64 %28, i64* %30, align 4
  %31 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %35 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %35, i64 16, i1 false)
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #7
  %36 = load i32, i32* %33, align 4
  %37 = icmp eq i32 %36, 0
  %38 = load i32, i32* %34, align 4
  %39 = icmp eq i32 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %22
  store i32 -1, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  br label %205

42:                                               ; preds = %22
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %13, align 4
  %46 = icmp slt i32 %45, 2
  br i1 %46, label %69, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = sub nsw i32 %44, %49
  %51 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = shl nsw i32 %49, 1
  %54 = sub nsw i32 %52, %53
  %55 = sdiv i32 %50, %54
  %56 = add nsw i32 %45, -1
  %57 = icmp sgt i32 %55, 0
  %58 = select i1 %57, i32 %55, i32 0
  %59 = icmp slt i32 %56, %58
  %60 = select i1 %59, i32 %56, i32 %58
  %61 = add nsw i32 %44, %36
  %62 = xor i32 %49, -1
  %63 = add i32 %61, %62
  %64 = sdiv i32 %63, %54
  %65 = icmp sgt i32 %64, 0
  %66 = select i1 %65, i32 %64, i32 0
  %67 = icmp slt i32 %56, %66
  %68 = select i1 %67, i32 %56, i32 %66
  br label %69

69:                                               ; preds = %42, %47
  %70 = phi i32 [ %60, %47 ], [ 0, %42 ]
  %71 = phi i32 [ %68, %47 ], [ 0, %42 ]
  %72 = load i32, i32* %32, align 4
  %73 = load i32, i32* %18, align 4
  %74 = icmp slt i32 %73, 2
  br i1 %74, label %97, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = sub nsw i32 %72, %77
  %79 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = shl nsw i32 %77, 1
  %82 = sub nsw i32 %80, %81
  %83 = sdiv i32 %78, %82
  %84 = add nsw i32 %73, -1
  %85 = icmp sgt i32 %83, 0
  %86 = select i1 %85, i32 %83, i32 0
  %87 = icmp slt i32 %84, %86
  %88 = select i1 %87, i32 %84, i32 %86
  %89 = add nsw i32 %38, %72
  %90 = xor i32 %77, -1
  %91 = add i32 %89, %90
  %92 = sdiv i32 %91, %82
  %93 = icmp sgt i32 %92, 0
  %94 = select i1 %93, i32 %92, i32 0
  %95 = icmp slt i32 %84, %94
  %96 = select i1 %95, i32 %84, i32 %94
  br label %97

97:                                               ; preds = %69, %75
  %98 = phi i32 [ %88, %75 ], [ 0, %69 ]
  %99 = phi i32 [ %96, %75 ], [ 0, %69 ]
  %100 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 1, i32 0
  store i32 %70, i32* %100, align 4
  %101 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 1, i32 1
  store i32 %71, i32* %101, align 4
  %102 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 1, i32 2
  store i32 %98, i32* %102, align 4
  %103 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 1, i32 3
  store i32 %99, i32* %103, align 4
  %104 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #7
  %105 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %108 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %104, i8* align 4 %108, i64 16, i1 false)
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #7
  %109 = load i32, i32* %106, align 4
  %110 = icmp eq i32 %109, 0
  %111 = load i32, i32* %107, align 4
  %112 = icmp eq i32 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %204, label %114

114:                                              ; preds = %97
  %115 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %13, align 4
  %118 = icmp slt i32 %117, 2
  br i1 %118, label %141, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = sub nsw i32 %116, %121
  %123 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = shl nsw i32 %121, 1
  %126 = sub nsw i32 %124, %125
  %127 = sdiv i32 %122, %126
  %128 = add nsw i32 %117, -1
  %129 = icmp sgt i32 %127, 0
  %130 = select i1 %129, i32 %127, i32 0
  %131 = icmp slt i32 %128, %130
  %132 = select i1 %131, i32 %128, i32 %130
  %133 = add nsw i32 %116, %109
  %134 = xor i32 %121, -1
  %135 = add i32 %133, %134
  %136 = sdiv i32 %135, %126
  %137 = icmp sgt i32 %136, 0
  %138 = select i1 %137, i32 %136, i32 0
  %139 = icmp slt i32 %128, %138
  %140 = select i1 %139, i32 %128, i32 %138
  br label %141

141:                                              ; preds = %114, %119
  %142 = phi i32 [ %132, %119 ], [ 0, %114 ]
  %143 = phi i32 [ %140, %119 ], [ 0, %114 ]
  %144 = load i32, i32* %105, align 4
  %145 = load i32, i32* %18, align 4
  %146 = icmp slt i32 %145, 2
  br i1 %146, label %169, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = sub nsw i32 %144, %149
  %151 = getelementptr inbounds %"class.cc::TilingData", %"class.cc::TilingData"* %1, i64 0, i32 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = shl nsw i32 %149, 1
  %154 = sub nsw i32 %152, %153
  %155 = sdiv i32 %150, %154
  %156 = add nsw i32 %145, -1
  %157 = icmp sgt i32 %155, 0
  %158 = select i1 %157, i32 %155, i32 0
  %159 = icmp slt i32 %156, %158
  %160 = select i1 %159, i32 %156, i32 %158
  %161 = add nsw i32 %111, %144
  %162 = xor i32 %149, -1
  %163 = add i32 %161, %162
  %164 = sdiv i32 %163, %154
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = icmp slt i32 %156, %166
  %168 = select i1 %167, i32 %156, i32 %166
  br label %169

169:                                              ; preds = %141, %147
  %170 = phi i32 [ %160, %147 ], [ 0, %141 ]
  %171 = phi i32 [ %168, %147 ], [ 0, %141 ]
  %172 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 2, i32 0
  store i32 %142, i32* %172, align 4
  %173 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 2, i32 1
  store i32 %143, i32* %173, align 4
  %174 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 2, i32 2
  store i32 %170, i32* %174, align 4
  %175 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 2, i32 3
  store i32 %171, i32* %175, align 4
  call void @_ZN2cc9IndexRect7ClampToERKS0_(%"class.cc::IndexRect"* %11, %"class.cc::IndexRect"* dereferenceable(16) %10) #7
  %176 = getelementptr inbounds %"class.cc::IndexRect", %"class.cc::IndexRect"* %11, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = load i32, i32* %173, align 4
  %179 = icmp sgt i32 %177, %178
  br i1 %179, label %184, label %180

180:                                              ; preds = %169
  %181 = load i32, i32* %174, align 4
  %182 = load i32, i32* %175, align 4
  %183 = icmp sgt i32 %181, %182
  br i1 %183, label %184, label %185

184:                                              ; preds = %180, %169
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 -1, i64 16, i1 false)
  br label %185

185:                                              ; preds = %180, %184
  %186 = phi i32 [ %182, %180 ], [ -1, %184 ]
  %187 = phi i32 [ %181, %180 ], [ -1, %184 ]
  %188 = phi i32 [ %178, %180 ], [ -1, %184 ]
  %189 = phi i32 [ %177, %180 ], [ -1, %184 ]
  %190 = getelementptr inbounds %"class.cc::IndexRect", %"class.cc::IndexRect"* %10, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %189, %191
  br i1 %192, label %193, label %204

193:                                              ; preds = %185
  %194 = load i32, i32* %101, align 4
  %195 = icmp eq i32 %188, %194
  br i1 %195, label %196, label %204

196:                                              ; preds = %193
  %197 = load i32, i32* %102, align 4
  %198 = icmp eq i32 %187, %197
  br i1 %198, label %199, label %204

199:                                              ; preds = %196
  %200 = load i32, i32* %103, align 4
  %201 = icmp eq i32 %186, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %199
  %203 = bitcast %"class.cc::TilingData::BaseDifferenceIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %203, i8 -1, i64 24, i1 false)
  br label %204

204:                                              ; preds = %185, %193, %196, %97, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #7
  br label %205

205:                                              ; preds = %204, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  br label %206

206:                                              ; preds = %205, %21
  ret void
}

declare void @_ZN2cc9IndexRect7ClampToERKS0_(%"class.cc::IndexRect"*, %"class.cc::IndexRect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc10TilingData22BaseDifferenceIterator15HasConsiderRectEv(%"class.cc::TilingData::BaseDifferenceIterator"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilingData::BaseDifferenceIterator", %"class.cc::TilingData::BaseDifferenceIterator"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData18DifferenceIteratorC2Ev(%"class.cc::TilingData::DifferenceIterator"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.cc::TilingData::DifferenceIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 40, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData18DifferenceIteratorC2EPKS0_RKN3gfx4RectES7_(%"class.cc::TilingData::DifferenceIterator"*, %"class.cc::TilingData"* readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0
  tail call void @_ZN2cc10TilingData22BaseDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_(%"class.cc::TilingData::BaseDifferenceIterator"* %5, %"class.cc::TilingData"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3)
  %6 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  %9 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %10, label %12

10:                                               ; preds = %4
  store i32 -1, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %11, align 4
  br label %20

12:                                               ; preds = %4
  store i32 %7, i32* %9, align 4
  %13 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 2
  %17 = tail call zeroext i1 @_ZNK2cc9IndexRect8ContainsEii(%"class.cc::IndexRect"* %16, i32 %7, i32 %14) #7
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  %19 = tail call dereferenceable(40) %"class.cc::TilingData::DifferenceIterator"* @_ZN2cc10TilingData18DifferenceIteratorppEv(%"class.cc::TilingData::DifferenceIterator"* %0)
  br label %20

20:                                               ; preds = %10, %18, %12
  ret void
}

declare zeroext i1 @_ZNK2cc9IndexRect8ContainsEii(%"class.cc::IndexRect"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.cc::TilingData::DifferenceIterator"* @_ZN2cc10TilingData18DifferenceIteratorppEv(%"class.cc::TilingData::DifferenceIterator"* returned) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  %10 = add nuw nsw i32 %3, 1
  store i32 %10, i32* %2, align 4
  %11 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 2
  %12 = tail call zeroext i1 @_ZNK2cc9IndexRect8ContainsEii(%"class.cc::IndexRect"* %11, i32 %10, i32 %7) #7
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = load i32, i32* %2, align 4
  br label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 2, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %2, align 4
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi i32 [ %14, %13 ], [ %18, %15 ]
  %21 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %20, %22
  br i1 %23, label %24, label %51

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %2, align 4
  %27 = load i32, i32* %6, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %6, align 4
  %29 = tail call zeroext i1 @_ZNK2cc9IndexRect8ContainsEii(%"class.cc::IndexRect"* %11, i32 %26, i32 %28) #7
  br i1 %29, label %30, label %45

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 2, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %2, align 4
  %34 = load i32, i32* %6, align 4
  %35 = tail call zeroext i1 @_ZNK2cc9IndexRect8ContainsEii(%"class.cc::IndexRect"* %11, i32 %33, i32 %34) #7
  br i1 %35, label %40, label %36

36:                                               ; preds = %30
  %37 = load i32, i32* %2, align 4
  %38 = load i32, i32* %21, align 4
  %39 = icmp sgt i32 %37, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %36, %30
  %41 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 2, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %6, align 4
  %44 = load i32, i32* %25, align 4
  store i32 %44, i32* %2, align 4
  br label %45

45:                                               ; preds = %36, %40, %24
  %46 = load i32, i32* %6, align 4
  %47 = getelementptr inbounds %"class.cc::TilingData::DifferenceIterator", %"class.cc::TilingData::DifferenceIterator"* %0, i64 0, i32 0, i32 1, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %46, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  store i32 -1, i32* %2, align 4
  store i32 -1, i32* %6, align 4
  br label %51

51:                                               ; preds = %5, %1, %19, %50, %45
  ret %"class.cc::TilingData::DifferenceIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData24SpiralDifferenceIteratorC2Ev(%"class.cc::TilingData::SpiralDifferenceIterator"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.cc::TilingData::SpiralDifferenceIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 40, i1 false) #7
  %3 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 1
  tail call void @_ZN2cc14SpiralIteratorC1Ev(%"class.cc::SpiralIterator"* %3) #7
  %4 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %5, align 4
  ret void
}

declare void @_ZN2cc14SpiralIteratorC1Ev(%"class.cc::SpiralIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData24SpiralDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_S7_(%"class.cc::TilingData::SpiralDifferenceIterator"*, %"class.cc::TilingData"* readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"class.cc::SpiralIterator", align 4
  %8 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0
  tail call void @_ZN2cc10TilingData22BaseDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_(%"class.cc::TilingData::BaseDifferenceIterator"* %8, %"class.cc::TilingData"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3)
  %9 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 1
  tail call void @_ZN2cc14SpiralIteratorC1Ev(%"class.cc::SpiralIterator"* %9) #7
  %10 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %15, align 4
  br label %39

16:                                               ; preds = %5
  %17 = bitcast { i64, i64 }* %6 to %"class.cc::IndexRect"*
  %18 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %20 = tail call { i64, i64 } @_ZNK2cc10TilingData19TileAroundIndexRectERKN3gfx4RectE(%"class.cc::TilingData"* %1, %"class.gfx::Rect"* dereferenceable(16) %4)
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %22 = extractvalue { i64, i64 } %20, 0
  store i64 %22, i64* %21, align 8
  %23 = extractvalue { i64, i64 } %20, 1
  store i64 %23, i64* %19, align 8
  %24 = bitcast %"class.cc::SpiralIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 2
  call void @_ZN2cc14SpiralIteratorC1ERKNS_9IndexRectES3_S3_(%"class.cc::SpiralIterator"* nonnull %7, %"class.cc::IndexRect"* nonnull dereferenceable(16) %17, %"class.cc::IndexRect"* dereferenceable(16) %25, %"class.cc::IndexRect"* dereferenceable(16) %26) #7
  %27 = bitcast %"class.cc::SpiralIterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %24, i64 80, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %24) #7
  %28 = call zeroext i1 @_ZNK2cc14SpiralIteratorcvbEv(%"class.cc::SpiralIterator"* %9) #7
  br i1 %28, label %29, label %34

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 1, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 1, i32 4
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %16, %29
  %35 = phi i32 [ %31, %29 ], [ -1, %16 ]
  %36 = phi i32 [ %33, %29 ], [ -1, %16 ]
  %37 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %35, i32* %37, align 4
  %38 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %36, i32* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  br label %39

39:                                               ; preds = %34, %13
  ret void
}

declare void @_ZN2cc14SpiralIteratorC1ERKNS_9IndexRectES3_S3_(%"class.cc::SpiralIterator"*, %"class.cc::IndexRect"* dereferenceable(16), %"class.cc::IndexRect"* dereferenceable(16), %"class.cc::IndexRect"* dereferenceable(16)) unnamed_addr #4

declare zeroext i1 @_ZNK2cc14SpiralIteratorcvbEv(%"class.cc::SpiralIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.cc::TilingData::SpiralDifferenceIterator"* @_ZN2cc10TilingData24SpiralDifferenceIteratorppEv(%"class.cc::TilingData::SpiralDifferenceIterator"* returned) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 1
  %3 = tail call dereferenceable(80) %"class.cc::SpiralIterator"* @_ZN2cc14SpiralIteratorppEv(%"class.cc::SpiralIterator"* %2) #7
  %4 = tail call zeroext i1 @_ZNK2cc14SpiralIteratorcvbEv(%"class.cc::SpiralIterator"* %2) #7
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 1, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 1, i32 4
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %7, %5 ], [ -1, %1 ]
  %12 = phi i32 [ %9, %5 ], [ -1, %1 ]
  %13 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %11, i32* %13, align 4
  %14 = getelementptr inbounds %"class.cc::TilingData::SpiralDifferenceIterator", %"class.cc::TilingData::SpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %12, i32* %14, align 4
  ret %"class.cc::TilingData::SpiralDifferenceIterator"* %0
}

declare dereferenceable(80) %"class.cc::SpiralIterator"* @_ZN2cc14SpiralIteratorppEv(%"class.cc::SpiralIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData31ReverseSpiralDifferenceIteratorC2Ev(%"class.cc::TilingData::ReverseSpiralDifferenceIterator"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 40, i1 false) #7
  %3 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 1
  tail call void @_ZN2cc21ReverseSpiralIteratorC1Ev(%"class.cc::ReverseSpiralIterator"* %3) #7
  %4 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %5, align 4
  ret void
}

declare void @_ZN2cc21ReverseSpiralIteratorC1Ev(%"class.cc::ReverseSpiralIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10TilingData31ReverseSpiralDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_S7_(%"class.cc::TilingData::ReverseSpiralDifferenceIterator"*, %"class.cc::TilingData"* readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"class.cc::ReverseSpiralIterator", align 4
  %8 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0
  tail call void @_ZN2cc10TilingData22BaseDifferenceIteratorC2EPKS0_RKN3gfx4RectES7_(%"class.cc::TilingData::BaseDifferenceIterator"* %8, %"class.cc::TilingData"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3)
  %9 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 1
  tail call void @_ZN2cc21ReverseSpiralIteratorC1Ev(%"class.cc::ReverseSpiralIterator"* %9) #7
  %10 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %15, align 4
  br label %39

16:                                               ; preds = %5
  %17 = bitcast { i64, i64 }* %6 to %"class.cc::IndexRect"*
  %18 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %20 = tail call { i64, i64 } @_ZNK2cc10TilingData19TileAroundIndexRectERKN3gfx4RectE(%"class.cc::TilingData"* %1, %"class.gfx::Rect"* dereferenceable(16) %4)
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %22 = extractvalue { i64, i64 } %20, 0
  store i64 %22, i64* %21, align 8
  %23 = extractvalue { i64, i64 } %20, 1
  store i64 %23, i64* %19, align 8
  %24 = bitcast %"class.cc::ReverseSpiralIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 2
  call void @_ZN2cc21ReverseSpiralIteratorC1ERKNS_9IndexRectES3_S3_(%"class.cc::ReverseSpiralIterator"* nonnull %7, %"class.cc::IndexRect"* nonnull dereferenceable(16) %17, %"class.cc::IndexRect"* dereferenceable(16) %25, %"class.cc::IndexRect"* dereferenceable(16) %26) #7
  %27 = bitcast %"class.cc::ReverseSpiralIterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %24, i64 80, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %24) #7
  %28 = call zeroext i1 @_ZNK2cc21ReverseSpiralIteratorcvbEv(%"class.cc::ReverseSpiralIterator"* %9) #7
  br i1 %28, label %29, label %34

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 1, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 1, i32 4
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %16, %29
  %35 = phi i32 [ %31, %29 ], [ -1, %16 ]
  %36 = phi i32 [ %33, %29 ], [ -1, %16 ]
  %37 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %35, i32* %37, align 4
  %38 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %36, i32* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  br label %39

39:                                               ; preds = %34, %13
  ret void
}

declare void @_ZN2cc21ReverseSpiralIteratorC1ERKNS_9IndexRectES3_S3_(%"class.cc::ReverseSpiralIterator"*, %"class.cc::IndexRect"* dereferenceable(16), %"class.cc::IndexRect"* dereferenceable(16), %"class.cc::IndexRect"* dereferenceable(16)) unnamed_addr #4

declare zeroext i1 @_ZNK2cc21ReverseSpiralIteratorcvbEv(%"class.cc::ReverseSpiralIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* @_ZN2cc10TilingData31ReverseSpiralDifferenceIteratorppEv(%"class.cc::TilingData::ReverseSpiralDifferenceIterator"* returned) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 1
  %3 = tail call dereferenceable(80) %"class.cc::ReverseSpiralIterator"* @_ZN2cc21ReverseSpiralIteratorppEv(%"class.cc::ReverseSpiralIterator"* %2) #7
  %4 = tail call zeroext i1 @_ZNK2cc21ReverseSpiralIteratorcvbEv(%"class.cc::ReverseSpiralIterator"* %2) #7
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 1, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 1, i32 4
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %7, %5 ], [ -1, %1 ]
  %12 = phi i32 [ %9, %5 ], [ -1, %1 ]
  %13 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %11, i32* %13, align 4
  %14 = getelementptr inbounds %"class.cc::TilingData::ReverseSpiralDifferenceIterator", %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %12, i32* %14, align 4
  ret %"class.cc::TilingData::ReverseSpiralDifferenceIterator"* %0
}

declare dereferenceable(80) %"class.cc::ReverseSpiralIterator"* @_ZN2cc21ReverseSpiralIteratorppEv(%"class.cc::ReverseSpiralIterator"*) local_unnamed_addr #4

declare void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"*, float, float, float, float) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
