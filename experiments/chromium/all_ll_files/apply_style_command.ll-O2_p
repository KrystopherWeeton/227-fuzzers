; ModuleID = '../../third_party/blink/renderer/core/editing/commands/apply_style_command.cc'
source_filename = "../../third_party/blink/renderer/core/editing/commands/apply_style_command.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.106" }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.154", i32, [4 x i8], %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.331", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.270", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i64 }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.250", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.264", [4 x i8] }>
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252", %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { i64 }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { float }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.273", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.222"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.569" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ApplyStyleCommand" = type { %"class.blink::CompositeEditCommand", %"class.blink::Member.671", i32, i32, %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i8, %"class.blink::Member.36", i8, i1 (%"class.blink::Element"*)* }
%"class.blink::CompositeEditCommand" = type { %"class.blink::EditCommand.base", %"class.blink::HeapVector.650", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::Member.659" }
%"class.blink::EditCommand.base" = type <{ i32 (...)**, %"class.blink::Member.23", %"class.blink::Member.648", i8 }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Document"* }
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::HeapVector.650" = type { %"class.WTF::Vector.653" }
%"class.WTF::Vector.653" = type { %"class.WTF::VectorBuffer.654" }
%"class.WTF::VectorBuffer.654" = type { %"class.WTF::VectorBufferBase.655" }
%"class.WTF::VectorBufferBase.655" = type { %"class.blink::Member.656"*, i32, i32 }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::EditCommand"* }
%"class.blink::EditCommand" = type <{ i32 (...)**, %"class.blink::Member.23", %"class.blink::Member.648", i8, [7 x i8] }>
%"class.blink::SelectionForUndoStep" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, %"class.blink::Member.36" }
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::UndoStep"* }
%"class.blink::UndoStep" = type <{ %"class.blink::Member.23", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::HeapVector.663", i64, i8, [7 x i8] }>
%"class.blink::HeapVector.663" = type { %"class.WTF::Vector.666" }
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668" }
%"class.WTF::VectorBufferBase.668" = type { %"class.blink::Member.669"*, i32, i32 }
%"class.blink::Member.669" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::EditingStyle"* }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.21", %"class.blink::Member.23", %"class.blink::Member.0", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.36", i32, %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.36"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.66", %"class.WTF::Vector.66", %"class.blink::Member", %"class.blink::Member.71", %"class.blink::HeapHashSet", %"class.blink::Member.23", %"class.WTF::HashSet.79", %"class.WTF::TextPosition", %"class.blink::Member.83", %"class.blink::HeapVector.85", %"class.blink::Member.92" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::Member.71"*, i32, i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.102", %"class.WTF::Vector.102", i8, i32, %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.123", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.126", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.137", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.36", %"class.blink::Member.347", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::UserActionElementSet", %"class.blink::Member.356", double, double, i64, i64, %"class.blink::HeapHashSet.358", %"class.blink::HeapHashSet.365", i16, i8, %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::Member.378", %"class.blink::TextLinkColors", %"class.blink::Member.380", i8, [7 x i8], %"class.blink::HeapHashMap.382", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.36", %"class.WTF::Vector.389", %"class.blink::Member.394", %"class.blink::Member.396", i8, %"class.blink::Member.36", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.398", %"class.blink::HeapVector.400", %"class.std::__1::unique_ptr.408", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.414", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.427", %"class.WTF::Vector.429", i8, i8, %"class.std::__1::unique_ptr.434", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.440", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.448", i8, i32, %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.456", %"class.WTF::HashMap.458", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.471", i8, i32, %"class.blink::Member.478", %"class.blink::Member.480", i32, %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", %"class.std::__1::unique_ptr.488", i64, %"class.std::__1::unique_ptr.494", i32, i32, %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.511", %"class.WTF::Vector.513", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.518", %"class.blink::Member.525", %"class.std::__1::unique_ptr.527", %"class.blink::Member.533", i8, i8, %"class.WTF::String", %"class.blink::Member.535", i8, [7 x i8], %"class.blink::HeapHashMap.537", %"class.blink::HeapObserverSet", %"class.blink::Member.551", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.553", i32, i8, i8, %"class.blink::WeakMember.555", %"class.blink::Member.556" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.95" }
%"class.blink::HeapHashMap.95" = type { %"class.WTF::HashMap.98" }
%"class.WTF::HashMap.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"struct.WTF::KeyValuePair.101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.101" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.106" }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.574", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.615", i32, i8, [3 x i8], %"class.blink::HeapVector.617", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.625", %"class.blink::Member.627", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.636", %"class.blink::Member.642", %"class.blink::Member.644", i8, [7 x i8] }>
%"class.blink::Supplementable.574" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.575" }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.590" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.582" }
%"class.blink::HeapObserverSet.582" = type { i32, [4 x i8], %"class.blink::HeapHashSet.583" }
%"class.blink::HeapHashSet.583" = type { %"class.WTF::HashSet.586" }
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::WeakMember.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.589" = type opaque
%"class.blink::Supplementable.590" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.591" }
%"class.blink::HeapHashMap.591" = type { %"class.WTF::HashMap.594" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type { i8*, %"class.blink::Member.1393" }
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1395" }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.598, %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.605", %"class.std::__1::unique_ptr.605", %"class.blink::Member.115", i32, [4 x i8], %"class.WTF::HashSet.611", i32, i32 }
%class.scoped_refptr.598 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.605" = type { %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.617" = type { %"class.WTF::Vector.620" }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.blink::Member.623"*, i32, i32 }
%"class.blink::Member.623" = type opaque
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.629", i32, i32 }
%"class.blink::HeapHashMap.629" = type { %"class.WTF::HashMap.632" }
%"class.WTF::HashMap.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"struct.WTF::KeyValuePair.635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.635" = type opaque
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.137" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.140 }
%class.scoped_refptr.140 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.141", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.141" = type { %"class.base::RefCounted.142" }
%"class.base::RefCounted.142" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.145" }
%"class.blink::HeapHashMap.145" = type { %"class.WTF::HashMap.148" }
%"class.WTF::HashMap.148" = type { %"class.WTF::HashTable.149" }
%"class.WTF::HashTable.149" = type <{ %"struct.WTF::KeyValuePair.151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.151" = type { %"class.blink::WeakMember.152", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.23", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.349" }
%"class.blink::HeapHashMap.349" = type { %"class.WTF::HashMap.352" }
%"class.WTF::HashMap.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"struct.WTF::KeyValuePair.355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.355" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.358" = type { %"class.WTF::HashSet.361" }
%"class.WTF::HashSet.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"class.blink::WeakMember.364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.364" = type opaque
%"class.blink::HeapHashSet.365" = type { %"class.WTF::HashSet.368" }
%"class.WTF::HashSet.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ %"class.blink::WeakMember.371"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.371" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.55" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.382" = type { %"class.WTF::HashMap.385" }
%"class.WTF::HashMap.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ %"struct.WTF::KeyValuePair.388"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.388" = type opaque
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.400" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::Member.406"*, i32, i32 }
%"class.blink::Member.406" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.414" = type { %"class.WTF::HashSet.417" }
%"class.WTF::HashSet.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"class.blink::WeakMember.420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.420" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.421", i32, [4 x i8] }>
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"struct.std::__1::pair.424"*, i32, i32 }
%"struct.std::__1::pair.424" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.440" = type { %"class.WTF::Vector.443" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.blink::Member.446"*, i32, i32 }
%"class.blink::Member.446" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.23" }
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.462" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.346", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.337, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.337 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.338" }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.339 }
%class.scoped_refptr.339 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.340", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.340" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.341" }
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__atomic_base.343" }
%"struct.std::__1::__atomic_base.343" = type { %"struct.std::__1::__cxx_atomic_impl.344" }
%"struct.std::__1::__cxx_atomic_impl.344" = type { %"struct.std::__1::__cxx_atomic_base_impl.345" }
%"struct.std::__1::__cxx_atomic_base_impl.345" = type { i8 }
%"class.blink::WeakMember.346" = type { %"class.blink::MemberBase.24" }
%"class.blink::HeapHashSet.471" = type { %"class.WTF::HashSet.474" }
%"class.WTF::HashSet.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"class.blink::Member.477"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.477" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", i32, [4 x i8], %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.518" = type { %"class.WTF::HashMap.521" }
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.524" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.537" = type { %"class.WTF::HashMap.540" }
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.543"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.543" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.544" }
%"class.blink::HeapHashSet.544" = type { %"class.WTF::HashSet.547" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.blink::WeakMember.550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.23", %"class.blink::HeapHashSet.560", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.567", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.560" = type { %"class.WTF::HashSet.563" }
%"class.WTF::HashSet.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"class.blink::Member.566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.566" = type opaque
%"class.blink::HeapTaskRunnerTimer.567" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.568", { i64, i64 } }
%"class.blink::WeakMember.568" = type { %"class.blink::MemberBase.554" }
%"class.blink::WeakMember.555" = type { %"class.blink::MemberBase" }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.675", %"class.blink::Member", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.677", %"class.blink::HeapVector.679", i8, [7 x i8] }>
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.675" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.691" }
%"class.blink::WeakMember.691" = type { %"class.blink::MemberBase.116" }
%"class.blink::HeapVector.679" = type { %"class.WTF::Vector.682" }
%"class.WTF::Vector.682" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684", [96 x i8] }
%"class.WTF::VectorBufferBase.684" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.685" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.1421" }
%"class.WTF::Vector.1421" = type { %"class.WTF::VectorBuffer.1422" }
%"class.WTF::VectorBuffer.1422" = type { %"class.WTF::VectorBufferBase.1423", [64 x i8] }
%"class.WTF::VectorBufferBase.1423" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder" = type { %"class.blink::SelectionTemplate" }
%"class.blink::SelectionTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::EditingState" = type { i8 }
%"class.blink::VisiblePositionTemplate" = type { %"class.blink::PositionWithAffinityTemplate" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::TextIteratorBehavior" = type { %union.anon }
%union.anon = type { i32 }
%"class.blink::RelocatablePosition" = type { %"class.blink::Member.347", %"class.blink::PositionTemplate" }
%"class.blink::StyleChange" = type { %"class.WTF::String", i8, i8, i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::PlainTextRange" = type { i32, i32 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::HeapHashMap.694" = type { %"class.WTF::HashMap.697" }
%"class.WTF::HashMap.697" = type { %"class.WTF::HashTable.698" }
%"class.WTF::HashTable.698" = type <{ %"struct.WTF::KeyValuePair.700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.700" = type <{ %"class.blink::Member", float, [4 x i8] }>
%"class.blink::HeapVector.701" = type { %"class.WTF::Vector.704" }
%"class.WTF::Vector.704" = type { %"class.WTF::VectorBuffer.705" }
%"class.WTF::VectorBuffer.705" = type { %"class.WTF::VectorBufferBase.706" }
%"class.WTF::VectorBufferBase.706" = type { %"class.blink::Member.707"*, i32, i32 }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::HTMLElement"* }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1431", %"class.blink::Member.1433", %"class.blink::Member.1435", %"class.blink::Member.1454", %"class.blink::Member.1456" }
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.710 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.710, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1162" }
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1165", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1171", %"class.std::__1::unique_ptr.1294", i8, %"class.absl::optional.1300", %class.scoped_refptr.1276, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1305" }
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1174, %class.scoped_refptr.1209, %class.scoped_refptr.1225, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %class.scoped_refptr.1266, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1267, %class.scoped_refptr.1290 }
%class.scoped_refptr.1174 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1191" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1175", i8, i8, %class.scoped_refptr.1177, i32, i32 }
%"class.WTF::RefCounted.1175" = type { %"class.base::RefCounted.1176" }
%"class.base::RefCounted.1176" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1177 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1184, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1185", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1178" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1184 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1210", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1210" = type { %"class.WTF::RefCounted.1211", i8, i8, %class.scoped_refptr.1184, i32, i32 }
%"class.WTF::RefCounted.1211" = type { %"class.base::RefCounted.1212" }
%"class.base::RefCounted.1212" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1213" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1213" = type { %"class.absl::optional_internal::optional_data.1214" }
%"class.absl::optional_internal::optional_data.1214" = type { %"class.absl::optional_internal::optional_data_base.1215" }
%"class.absl::optional_internal::optional_data_base.1215" = type { %"class.absl::optional_internal::optional_data_dtor_base.1216" }
%"class.absl::optional_internal::optional_data_dtor_base.1216" = type { i8, %union.anon.1217 }
%union.anon.1217 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1218", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1218" = type { %"class.std::__1::__vector_base.1219" }
%"class.std::__1::__vector_base.1219" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1220" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1200", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1209 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1225 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1226 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1227" }
%"class.blink::PaintPropertyNode.1227" = type { %"class.WTF::RefCounted.1228", i8, i8, %class.scoped_refptr.1230, i32, i32 }
%"class.WTF::RefCounted.1228" = type { %"class.base::RefCounted.1229" }
%"class.base::RefCounted.1229" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1230 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1177, %class.scoped_refptr.1231, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1253", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1231 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1268" }
%"class.blink::PaintPropertyNode.1268" = type { %"class.WTF::RefCounted.1269", i8, i8, %class.scoped_refptr.1231, i32, i32 }
%"class.WTF::RefCounted.1269" = type { %"class.base::RefCounted.1270" }
%"class.base::RefCounted.1270" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1232" }
%"class.std::__1::vector.1232" = type { %"class.std::__1::__vector_base.1233" }
%"class.std::__1::__vector_base.1233" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1248" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1234, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1241", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1234 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1235, i32, %"class.absl::optional.1236", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.106" }>
%class.sk_sp.1235 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1236" = type { %"class.absl::optional_internal::optional_data.1237" }
%"class.absl::optional_internal::optional_data.1237" = type { %"class.absl::optional_internal::optional_data_base.1238" }
%"class.absl::optional_internal::optional_data_base.1238" = type { %"class.absl::optional_internal::optional_data_dtor_base.1239" }
%"class.absl::optional_internal::optional_data_dtor_base.1239" = type { i8, %union.anon.1240 }
%union.anon.1240 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1241" = type { %"class.std::__1::__vector_base.1242" }
%"class.std::__1::__vector_base.1242" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1243" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1259" }
%"class.std::__1::vector.1259" = type { %"class.std::__1::__vector_base.1260" }
%"class.std::__1::__vector_base.1260" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { i32* }
%class.scoped_refptr.1266 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1267 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1279" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1177, %"class.absl::optional.1271", %class.scoped_refptr.1276, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1271" = type { %"class.absl::optional_internal::optional_data.1272" }
%"class.absl::optional_internal::optional_data.1272" = type { %"class.absl::optional_internal::optional_data_base.1273" }
%"class.absl::optional_internal::optional_data_base.1273" = type { %"class.absl::optional_internal::optional_data_dtor_base.1274" }
%"class.absl::optional_internal::optional_data_dtor_base.1274" = type { i8, [3 x i8], %union.anon.1275 }
%union.anon.1275 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1282", i32, [4 x i8] }>
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1290 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1294" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1177, %class.scoped_refptr.1231, %class.scoped_refptr.1230 }
%"class.absl::optional.1300" = type { %"class.absl::optional_internal::optional_data.1301" }
%"class.absl::optional_internal::optional_data.1301" = type { %"class.absl::optional_internal::optional_data_base.1302" }
%"class.absl::optional_internal::optional_data_base.1302" = type { %"class.absl::optional_internal::optional_data_dtor_base.1303" }
%"class.absl::optional_internal::optional_data_dtor_base.1303" = type { i8, %union.anon.1304 }
%union.anon.1304 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1276 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1277", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1084, i32, %"struct.std::__1::atomic.341", %"struct.std::__1::atomic.341", i8, i8 }>
%class.sk_sp.1084 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1085, %class.SkTDArray.1086, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.106" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1085 = type { i8*, i32, i32 }
%class.SkTDArray.1086 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1087 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.106", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.341" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1087 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.331", [3 x i8] }
%"class.WTF::RefCounted.1277" = type { %"class.base::RefCounted.1278" }
%"class.base::RefCounted.1278" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.710 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1146", %"class.std::__1::unique_ptr.1148" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.778", %"class.blink::DataRef.858", %"class.blink::DataRef.862", %"class.blink::DataRef.1062", %"class.blink::DataRef.1129", %"class.blink::DataRef.1133", %"class.blink::DataRef.1137", %"class.blink::DataRef.1141", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.712", %"class.blink::DataRef.714", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.716", %"class.blink::Font" }
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.751 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.719, %class.scoped_refptr.727, %class.scoped_refptr.737, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.750 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1316", [4 x i8] }>
%"class.WTF::RefCounted.1316" = type { %"class.base::RefCounted.1317" }
%"class.base::RefCounted.1317" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.719 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.725", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.720" }
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.725" = type { %"class.base::RefCounted.726" }
%"class.base::RefCounted.726" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.727 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.728", %"class.WTF::RefCounted.735", [4 x i8] }>
%"class.blink::FontSettings.728" = type { %"class.WTF::Vector.729" }
%"class.WTF::Vector.729" = type { %"class.WTF::VectorBuffer.730" }
%"class.WTF::VectorBuffer.730" = type { %"class.WTF::VectorBufferBase.731" }
%"class.WTF::VectorBufferBase.731" = type { %"class.blink::FontTagValuePair.732"*, i32, i32 }
%"class.blink::FontTagValuePair.732" = type { i32, float }
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.737 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.738", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.747, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.738" = type { %"class.base::RefCounted.739" }
%"class.base::RefCounted.739" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.742 }
%union.anon.742 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.747 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.748", [4 x i8] }>
%"class.WTF::RefCounted.748" = type { %"class.base::RefCounted.749" }
%"class.base::RefCounted.749" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.750 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.751 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.752", %"class.WTF::Vector.754", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.752" = type { %"class.base::RefCounted.753" }
%"class.base::RefCounted.753" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.754" = type { %"class.WTF::VectorBuffer.755" }
%"class.WTF::VectorBuffer.755" = type { %"class.WTF::VectorBufferBase.756", [8 x i8] }
%"class.WTF::VectorBufferBase.756" = type { %class.scoped_refptr.757*, i32, i32 }
%class.scoped_refptr.757 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.758", [4 x i8] }>
%"class.WTF::RefCounted.758" = type { %"class.base::RefCounted.759" }
%"class.base::RefCounted.759" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.764", %class.scoped_refptr.771, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.758" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.762 }
%union.anon.762 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.763, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.106" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.763 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.767, %class.scoped_refptr.767 }
%class.scoped_refptr.767 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.771 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.772", [4 x i8] }>
%"class.WTF::RefCounted.772" = type { %"class.base::RefCounted.773" }
%"class.base::RefCounted.773" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.774" }
%"class.blink::PersistentBase.774" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.775" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.775" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.776 }
%class.scoped_refptr.776 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.777, i8, i8, i8, i8 }>
%union.anon.777 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.778" = type { %class.scoped_refptr.779 }
%class.scoped_refptr.779 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.780", [4 x i8], %"class.blink::DataRef.782", %"class.blink::DataRef.823", %"class.WTF::Vector.827", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.831, %class.scoped_refptr.840, %"class.blink::Persistent.848", %"class.blink::Persistent.850", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.780" = type { %"class.base::RefCounted.781" }
%"class.base::RefCounted.781" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.782" = type { %class.scoped_refptr.783 }
%class.scoped_refptr.783 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.784", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.786, %class.scoped_refptr.793, %"class.blink::Persistent.810", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.784" = type { %"class.base::RefCounted.785" }
%"class.base::RefCounted.785" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.786 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.787", %"class.WTF::Vector.788" }
%"class.base::RefCountedThreadSafe.787" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.788" = type { %"class.WTF::VectorBuffer.789" }
%"class.WTF::VectorBuffer.789" = type { %"class.WTF::VectorBufferBase.790" }
%"class.WTF::VectorBufferBase.790" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.793 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.794", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.794" = type { %"class.base::RefCounted.795" }
%"class.base::RefCounted.795" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.796", %"class.blink::Persistent.801" }
%"class.WTF::HashMap.796" = type { %"class.WTF::HashTable.797" }
%"class.WTF::HashTable.797" = type <{ %"struct.WTF::KeyValuePair.800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.800" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1407 }
%class.scoped_refptr.1407 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1408", %"class.WTF::Vector.1045", %"class.WTF::Vector.1410", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1408" = type { %"class.base::RefCounted.1409" }
%"class.base::RefCounted.1409" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1410" = type { %"class.WTF::VectorBuffer.1411" }
%"class.WTF::VectorBuffer.1411" = type { %"class.WTF::VectorBufferBase.1412" }
%"class.WTF::VectorBufferBase.1412" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1413 }
%union.anon.1413 = type { double }
%"class.blink::Persistent.801" = type { %"class.blink::PersistentBase.802" }
%"class.blink::PersistentBase.802" = type { %"class.blink::HeapHashMap.803"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.803" = type { %"class.WTF::HashMap.806" }
%"class.WTF::HashMap.806" = type { %"class.WTF::HashTable.807" }
%"class.WTF::HashTable.807" = type <{ %"struct.WTF::KeyValuePair.809"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.809" = type opaque
%"class.blink::Persistent.810" = type { %"class.blink::PersistentBase.811" }
%"class.blink::PersistentBase.811" = type { %"class.blink::HeapVector.812"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.812" = type { %"class.WTF::Vector.815" }
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817" }
%"class.WTF::VectorBufferBase.817" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.818", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.823" = type { %class.scoped_refptr.824 }
%class.scoped_refptr.824 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.825", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.825" = type { %"class.base::RefCounted.826" }
%"class.base::RefCounted.826" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.827" = type { %"class.WTF::VectorBuffer.828" }
%"class.WTF::VectorBuffer.828" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.831 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.832", %"class.WTF::Vector.834" }
%"class.WTF::RefCounted.832" = type { %"class.base::RefCounted.833" }
%"class.base::RefCounted.833" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.834" = type { %"class.WTF::VectorBuffer.835" }
%"class.WTF::VectorBuffer.835" = type { %"class.WTF::VectorBufferBase.836" }
%"class.WTF::VectorBufferBase.836" = type { %"struct.std::__1::pair.837"*, i32, i32 }
%"struct.std::__1::pair.837" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.840 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.841", [4 x i8], %"class.WTF::Vector.843" }
%"class.WTF::RefCounted.841" = type { %"class.base::RefCounted.842" }
%"class.base::RefCounted.842" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.843" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.845", [28 x i8] }>
%"class.WTF::VectorBufferBase.845" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.848" = type { %"class.blink::PersistentBase.849" }
%"class.blink::PersistentBase.849" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.854", %"class.blink::Member.856" }
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.858" = type { %class.scoped_refptr.859 }
%class.scoped_refptr.859 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.860", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.862" = type { %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.864", [4 x i8], %"class.blink::DataRef.866", %"class.blink::DataRef.932", %"class.blink::TransformOperations", %class.scoped_refptr.840, %"class.blink::Persistent.1056", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.866" = type { %class.scoped_refptr.867 }
%class.scoped_refptr.867 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.868", [4 x i8], %"class.blink::DataRef.870", %"class.blink::Persistent.908", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.868" = type { %"class.base::RefCounted.869" }
%"class.base::RefCounted.869" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.870" = type { %class.scoped_refptr.871 }
%class.scoped_refptr.871 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.872", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.890, %class.scoped_refptr.893, %class.scoped_refptr.896, %class.scoped_refptr.899, %class.scoped_refptr.900, %class.scoped_refptr.901, %"class.blink::Persistent.908", %"class.blink::Persistent.923", %"class.absl::optional.927", %"class.absl::optional.927", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.872" = type { %"class.base::RefCounted.873" }
%"class.base::RefCounted.873" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.874", %"class.std::__1::unique_ptr.879" }
%"class.WTF::Vector.874" = type { %"class.WTF::VectorBuffer.875" }
%"class.WTF::VectorBuffer.875" = type { %"class.WTF::VectorBufferBase.876" }
%"class.WTF::VectorBufferBase.876" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.882", %"class.WTF::Vector.874", i32, i32 }
%"class.WTF::Vector.882" = type { %"class.WTF::VectorBuffer.883" }
%"class.WTF::VectorBuffer.883" = type { %"class.WTF::VectorBufferBase.884" }
%"class.WTF::VectorBufferBase.884" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.890 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.891", [4 x i8] }>
%"class.WTF::RefCounted.891" = type { %"class.base::RefCounted.892" }
%"class.base::RefCounted.892" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.893 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.894", [4 x i8] }>
%"class.WTF::RefCounted.894" = type { %"class.base::RefCounted.895" }
%"class.base::RefCounted.895" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.896 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.897" }>
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.899 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.900 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.901 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.902", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.902" = type { %"class.base::RefCounted.903" }
%"class.base::RefCounted.903" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.904" }
%"class.blink::DataRef.904" = type { %class.scoped_refptr.905 }
%class.scoped_refptr.905 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.848", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.906" }
%"class.WTF::RefCounted.906" = type { %"class.base::RefCounted.907" }
%"class.base::RefCounted.907" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.923" = type { %"class.blink::PersistentBase.924" }
%"class.blink::PersistentBase.924" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.893, %"class.blink::Member.818", i32, [4 x i8] }>
%"class.absl::optional.927" = type { %"class.absl::optional_internal::optional_data.928" }
%"class.absl::optional_internal::optional_data.928" = type { %"class.absl::optional_internal::optional_data_base.929" }
%"class.absl::optional_internal::optional_data_base.929" = type { %"class.absl::optional_internal::optional_data_dtor_base.930" }
%"class.absl::optional_internal::optional_data_dtor_base.930" = type { i8, [3 x i8], %union.anon.931 }
%union.anon.931 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.908" = type { %"class.blink::PersistentBase.909" }
%"class.blink::PersistentBase.909" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.912" }
%"class.blink::HeapVector.912" = type { %"class.WTF::Vector.915" }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"class.blink::Member.918"*, i32, i32 }
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.932" = type { %class.scoped_refptr.933 }
%class.scoped_refptr.933 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.934", %"class.blink::DataRef.936", %"class.blink::DataRef.940", %"class.blink::DataRef.949", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.968", %"class.std::__1::unique_ptr.979", %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1028", %"class.std::__1::unique_ptr.1039", %"class.WTF::Vector.1045", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.934" = type { %"class.base::RefCounted.935" }
%"class.base::RefCounted.935" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.936" = type { %class.scoped_refptr.937 }
%class.scoped_refptr.937 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.938", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.938" = type { %"class.base::RefCounted.939" }
%"class.base::RefCounted.939" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.940" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.942", [4 x i8], %"class.WTF::Vector.944", i8, [7 x i8] }>
%"class.WTF::RefCounted.942" = type { %"class.base::RefCounted.943" }
%"class.base::RefCounted.943" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { i32*, i32, i32 }
%"class.blink::DataRef.949" = type { %class.scoped_refptr.950 }
%class.scoped_refptr.950 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.951", [4 x i8], %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.953", %"class.WTF::HashMap.958", %"class.WTF::HashMap.958", %"class.WTF::HashMap.958", %"class.WTF::HashMap.958", %"class.WTF::HashMap.963", %"class.WTF::Vector.874", %"class.WTF::Vector.874", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.951" = type { %"class.base::RefCounted.952" }
%"class.base::RefCounted.952" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.953" = type { %"class.WTF::HashTable.954" }
%"class.WTF::HashTable.954" = type <{ %"struct.WTF::KeyValuePair.957"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.957" = type { %"class.WTF::String", %"class.WTF::Vector.1397" }
%"class.WTF::Vector.1397" = type { %"class.WTF::VectorBuffer.1398" }
%"class.WTF::VectorBuffer.1398" = type { %"class.WTF::VectorBufferBase.1399" }
%"class.WTF::VectorBufferBase.1399" = type { i64*, i32, i32 }
%"class.WTF::HashMap.958" = type { %"class.WTF::HashTable.959" }
%"class.WTF::HashTable.959" = type <{ %"struct.WTF::KeyValuePair.962"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.962" = type { i64, %"class.WTF::Vector.1045" }
%"class.WTF::HashMap.963" = type { %"class.WTF::HashTable.964" }
%"class.WTF::HashTable.964" = type <{ %"struct.WTF::KeyValuePair.967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.967" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.971" }
%"class.WTF::HashMap.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1402", %"class.absl::optional.1402", %"class.absl::optional.1402" }
%"class.absl::optional.1402" = type { %"class.absl::optional_internal::optional_data.1403" }
%"class.absl::optional_internal::optional_data.1403" = type { %"class.absl::optional_internal::optional_data_base.1404" }
%"class.absl::optional_internal::optional_data_base.1404" = type { %"class.absl::optional_internal::optional_data_dtor_base.1405" }
%"class.absl::optional_internal::optional_data_dtor_base.1405" = type { i8, %union.anon.1406 }
%union.anon.1406 = type { i32 }
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.827", %"class.WTF::Vector.994", %"class.WTF::Vector.982", %"class.WTF::Vector.999", %"class.WTF::Vector.1004", %"class.WTF::Vector.1009" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.982", %"class.WTF::Vector.982", %"class.WTF::Vector.987" }
%"class.WTF::Vector.987" = type { %"class.WTF::VectorBuffer.988" }
%"class.WTF::VectorBuffer.988" = type { %"class.WTF::VectorBufferBase.989" }
%"class.WTF::VectorBufferBase.989" = type { %class.scoped_refptr.990*, i32, i32 }
%class.scoped_refptr.990 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.991" }
%"class.base::RefCountedThreadSafe.991" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.994" = type { %"class.WTF::VectorBuffer.995" }
%"class.WTF::VectorBuffer.995" = type { %"class.WTF::VectorBufferBase.996" }
%"class.WTF::VectorBufferBase.996" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.982" = type { %"class.WTF::VectorBuffer.983" }
%"class.WTF::VectorBuffer.983" = type { %"class.WTF::VectorBufferBase.984" }
%"class.WTF::VectorBufferBase.984" = type { double*, i32, i32 }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { i32*, i32, i32 }
%"class.WTF::Vector.1004" = type { %"class.WTF::VectorBuffer.1005" }
%"class.WTF::VectorBuffer.1005" = type { %"class.WTF::VectorBufferBase.1006" }
%"class.WTF::VectorBufferBase.1006" = type { i32*, i32, i32 }
%"class.WTF::Vector.1009" = type { %"class.WTF::VectorBuffer.1010" }
%"class.WTF::VectorBuffer.1010" = type { %"class.WTF::VectorBufferBase.1011" }
%"class.WTF::VectorBufferBase.1011" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1020" }
%"class.WTF::Vector.1020" = type { %"class.WTF::VectorBuffer.1021" }
%"class.WTF::VectorBuffer.1021" = type { %"class.WTF::VectorBufferBase.1022" }
%"class.WTF::VectorBufferBase.1022" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1031" }
%"class.WTF::Vector.1031" = type { %"class.WTF::VectorBuffer.1032" }
%"class.WTF::VectorBuffer.1032" = type { %"class.WTF::VectorBufferBase.1033" }
%"class.WTF::VectorBufferBase.1033" = type { %"class.blink::Persistent.848"*, i32, i32 }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.848", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1050" }
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %class.scoped_refptr.1053*, i32, i32 }
%class.scoped_refptr.1053 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.897", [4 x i8] }>
%"class.blink::Persistent.1056" = type { %"class.blink::PersistentBase.1057" }
%"class.blink::PersistentBase.1057" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1060" }
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1062" = type { %class.scoped_refptr.1063 }
%class.scoped_refptr.1063 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1064", [4 x i8], %"class.blink::DataRef.1066", %"class.blink::DataRef.1070", %"class.blink::DataRef.1091", %"class.blink::DataRef.1109", %"class.blink::DataRef.1121", %"class.blink::DataRef.1125", %class.scoped_refptr.1095, i32, [4 x i8] }>
%"class.WTF::RefCounted.1064" = type { %"class.base::RefCounted.1065" }
%"class.base::RefCounted.1065" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1066" = type { %class.scoped_refptr.1067 }
%class.scoped_refptr.1067 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1068", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1068" = type { %"class.base::RefCounted.1069" }
%"class.base::RefCounted.1069" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1070" = type { %class.scoped_refptr.1071 }
%class.scoped_refptr.1071 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1072", %class.scoped_refptr.1074, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1072" = type { %"class.base::RefCounted.1073" }
%"class.base::RefCounted.1073" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1074 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1075", %"class.std::__1::unique_ptr.1081", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.894" }>
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1091" = type { %class.scoped_refptr.1092 }
%class.scoped_refptr.1092 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1093", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1093" = type { %"class.base::RefCounted.1094" }
%"class.base::RefCounted.1094" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1095, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1109" = type { %class.scoped_refptr.1110 }
%class.scoped_refptr.1110 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1111", [4 x i8], %class.scoped_refptr.1113, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1111" = type { %"class.base::RefCounted.1112" }
%"class.base::RefCounted.1112" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1113 = type { %"class.base::RefCountedData.1114"* }
%"class.base::RefCountedData.1114" = type { %"class.base::RefCountedThreadSafe.1115", %"class.WTF::Vector.1116" }
%"class.base::RefCountedThreadSafe.1115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1121" = type { %class.scoped_refptr.1122 }
%class.scoped_refptr.1122 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1123", %class.scoped_refptr.1095, %class.scoped_refptr.1095, %class.scoped_refptr.1095 }
%"class.WTF::RefCounted.1123" = type { %"class.base::RefCounted.1124" }
%"class.base::RefCounted.1124" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1125" = type { %class.scoped_refptr.1126 }
%class.scoped_refptr.1126 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1127", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1127" = type { %"class.base::RefCounted.1128" }
%"class.base::RefCounted.1128" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1095 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1096", %"class.blink::Persistent.1098", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1096" = type { %"class.base::RefCounted.1097" }
%"class.base::RefCounted.1097" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1098" = type { %"class.blink::PersistentBase.1099" }
%"class.blink::PersistentBase.1099" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.36", %"class.blink::HeapHashMap.1102" }
%"class.blink::HeapHashMap.1102" = type { %"class.WTF::HashMap.1105" }
%"class.WTF::HashMap.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ %"struct.WTF::KeyValuePair.1108"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1108" = type opaque
%"class.blink::DataRef.1129" = type { %class.scoped_refptr.1130 }
%class.scoped_refptr.1130 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1131", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1131" = type { %"class.base::RefCounted.1132" }
%"class.base::RefCounted.1132" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1133" = type { %class.scoped_refptr.1134 }
%class.scoped_refptr.1134 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1135", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1135" = type { %"class.base::RefCounted.1136" }
%"class.base::RefCounted.1136" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1137" = type { %class.scoped_refptr.1138 }
%class.scoped_refptr.1138 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1139", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1139" = type { %"class.base::RefCounted.1140" }
%"class.base::RefCounted.1140" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1141" = type { %class.scoped_refptr.1142 }
%class.scoped_refptr.1142 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1143", %class.scoped_refptr.1145 }
%"class.WTF::RefCounted.1143" = type { %"class.base::RefCounted.1144" }
%"class.base::RefCounted.1144" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1145 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1314", %"class.blink::StyleVariables", %class.scoped_refptr.1145 }
%"class.WTF::RefCounted.1314" = type { %"class.base::RefCounted.1315" }
%"class.base::RefCounted.1315" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1146" = type { %"class.base::RefCounted.1147" }
%"class.base::RefCounted.1147" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1151" }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.WTF::Vector.1154"* }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1417" }
%"class.WTF::VectorBuffer.1417" = type { %"class.WTF::VectorBufferBase.1418", [32 x i8] }
%"class.WTF::VectorBufferBase.1418" = type { %class.scoped_refptr.710*, i32, i32 }
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1439", %"class.blink::HeapHashSet.1448" }
%"class.blink::HeapVector.1439" = type { %"class.WTF::Vector.1442" }
%"class.WTF::Vector.1442" = type { %"class.WTF::VectorBuffer.1443" }
%"class.WTF::VectorBuffer.1443" = type { %"class.WTF::VectorBufferBase.1444" }
%"class.WTF::VectorBufferBase.1444" = type { %"class.blink::Member.1445"*, i32, i32 }
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1448" = type { %"class.WTF::HashSet.1451" }
%"class.WTF::HashSet.1451" = type { %"class.WTF::HashTable.1452" }
%"class.WTF::HashTable.1452" = type <{ %"class.blink::Member.1445"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::HeapHashSet.1458"* }
%"class.blink::HeapHashSet.1458" = type opaque
%"class.blink::HTMLSpanElement" = type { %"class.blink::HTMLElement" }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::IgnorableEditingAbortState" = type { %"class.blink::EditingState" }
%"class.blink::CSSComputedStyleDeclaration" = type <{ %"class.blink::CSSStyleDeclaration", %"class.blink::Member", i8, [7 x i8], %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1371, i32, i8, i8, [2 x i8] }>
%union.anon.1371 = type { %"class.WTF::Vector.1372" }
%"class.WTF::Vector.1372" = type { %"class.WTF::VectorBuffer.1373" }
%"class.WTF::VectorBuffer.1373" = type { %"class.WTF::VectorBufferBase.1352", [16 x i8] }
%"class.WTF::VectorBufferBase.1352" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapVector.1381" = type { %"class.WTF::Vector.1384" }
%"class.WTF::Vector.1384" = type { %"class.WTF::VectorBuffer.1385" }
%"class.WTF::VectorBuffer.1385" = type { %"class.WTF::VectorBufferBase.1386" }
%"class.WTF::VectorBufferBase.1386" = type { %"class.blink::Member.1387"*, i32, i32 }
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::Text"* }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1341 }
%class.scoped_refptr.1341 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1342", %"class.WTF::String", %"class.std::__1::unique_ptr.1344" }
%"class.WTF::RefCounted.1342" = type { %"class.base::RefCounted.1343" }
%"class.base::RefCounted.1343" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1347", %"class.std::__1::unique_ptr.1358", %"class.WTF::Vector.1364", i8, i32 }
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.WTF::Vector.1350"* }
%"class.WTF::Vector.1350" = type { %"class.WTF::VectorBuffer.1351" }
%"class.WTF::VectorBuffer.1351" = type { %"class.WTF::VectorBufferBase.1352" }
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1364" = type { %"class.WTF::VectorBuffer.1365" }
%"class.WTF::VectorBuffer.1365" = type { %"class.WTF::VectorBufferBase.1352", [32 x i8] }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapVector.1318" = type { %"class.WTF::Vector.1321" }
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"class.blink::InlineRunToApplyStyle"*, i32, i32 }
%"class.blink::InlineRunToApplyStyle" = type { %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::PositionTemplate", %"class.blink::Member.1324", %"class.blink::StyleChange" }
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::HTMLSpanElement"* }
%"class.blink::HTMLFontElement" = type { %"class.blink::HTMLElement" }
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329" }
%"class.WTF::VectorBufferBase.1329" = type { %"class.blink::QualifiedName"*, i32, i32 }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1332 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1332 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::HeapVector.1333" = type { %"class.WTF::Vector.1336" }
%"class.WTF::Vector.1336" = type { %"class.WTF::VectorBuffer.1337" }
%"class.WTF::VectorBuffer.1337" = type { %"class.WTF::VectorBufferBase.1338", [88 x i8] }
%"class.WTF::VectorBufferBase.1338" = type { %"class.blink::Member"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.WTF::Vector.1376" = type { %"class.WTF::VectorBuffer.1377" }
%"class.WTF::VectorBuffer.1377" = type { %"class.WTF::VectorBufferBase.1378", [16 x i8] }
%"class.WTF::VectorBufferBase.1378" = type { i16*, i32, i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.1509" = type { i8 }
%"class.blink::HeapVectorBacking.1523" = type { i8 }
%"class.blink::HeapVectorBacking.1536" = type { i8 }
%"class.blink::HeapVectorBacking.1548" = type { i8 }

$_ZN5blink11StyleChangeD2Ev = comdat any

$_ZN5blink11StyleChangeaSEOS0_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink17ApplyStyleCommandD0Ev = comdat any

$_ZNK5blink11EditCommand19IsSimpleEditCommandEv = comdat any

$_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_fEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6RehashEjPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_4NodeEEEEENS4_IfEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_fEEEEvRT1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_fEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IfEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEvPT_ = comdat any

$_ZN5blink10TraceTraitINS_15HTMLSpanElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_21InlineRunToApplyStyleEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLFontElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4TextEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4TextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17ApplyStyleCommandE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommandD2Ev to i8*), i8* bitcast (void (%"class.blink::ApplyStyleCommand"*)* @_ZN5blink17ApplyStyleCommandD0Ev to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommand9SetParentEPS0_ to i8*), i8* bitcast (i32 (%"class.blink::ApplyStyleCommand"*)* @_ZNK5blink17ApplyStyleCommand12GetInputTypeEv to i8*), i8* bitcast (i1 (%"class.blink::EditCommand"*)* @_ZNK5blink11EditCommand19IsSimpleEditCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv to i8*), i8* bitcast (void (%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingState"*)* @_ZN5blink17ApplyStyleCommand7DoApplyEPNS_12EditingStateE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::EditCommand"*)* @_ZNK5blink11EditCommand21TextDataForInputEventEv to i8*), i8* bitcast (void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Visitor"*)* @_ZNK5blink17ApplyStyleCommand5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand25IsReplaceSelectionCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand15IsTypingCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand21IsCommandGroupWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand20IsDragAndDropCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand20PreservesTypingStyleEv to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommand14AppliedEditingEv to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, i32)* @_ZN5blink20CompositeEditCommand18DeleteTextFromNodeEPNS_4TextEjj to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32)* @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE to i8*)] }, align 8
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kDirAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kColorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kFaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kSizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names5kBTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kITagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kUTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrikeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kSubTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kSupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyValueSet]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10html_names8kSpanTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink10html_names8kFontTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12EditingStyleEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EditingStyle]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.13 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IfEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [399 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, WTF::KeyValuePair<blink::Member<blink::Node>, float>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<float> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HTMLElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLElement>, WTF::VectorTraits<blink::Member<blink::HTMLElement> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_21InlineRunToApplyStyleENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [152 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::InlineRunToApplyStyle, WTF::VectorTraits<blink::InlineRunToApplyStyle> >]\00", align 1
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink11HTMLElementE = external unnamed_addr constant { [172 x i8*], [3 x i8*] }, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4TextEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Text>, WTF::VectorTraits<blink::Member<blink::Text> > >]\00", align 1

@_ZN5blink17ApplyStyleCommandC1ERNS_8DocumentEPKNS_12EditingStyleENS_10InputEvent9InputTypeENS0_13PropertyLevelE = hidden unnamed_addr alias void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"*, %"class.blink::EditingStyle"*, i32, i32), void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"*, %"class.blink::EditingStyle"*, i32, i32)* @_ZN5blink17ApplyStyleCommandC2ERNS_8DocumentEPKNS_12EditingStyleENS_10InputEvent9InputTypeENS0_13PropertyLevelE
@_ZN5blink17ApplyStyleCommandC1ERNS_8DocumentEPKNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESC_ = hidden unnamed_addr alias void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"*, %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"*), void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"*, %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"*)* @_ZN5blink17ApplyStyleCommandC2ERNS_8DocumentEPKNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESC_
@_ZN5blink17ApplyStyleCommandC1EPNS_7ElementEb = hidden unnamed_addr alias void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Element"*, i1), void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Element"*, i1)* @_ZN5blink17ApplyStyleCommandC2EPNS_7ElementEb
@_ZN5blink17ApplyStyleCommandC1ERNS_8DocumentEPKNS_12EditingStyleEPFbPKNS_7ElementEENS_10InputEvent9InputTypeE = hidden unnamed_addr alias void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"*, %"class.blink::EditingStyle"*, i1 (%"class.blink::Element"*)*, i32), void (%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"*, %"class.blink::EditingStyle"*, i1 (%"class.blink::Element"*)*, i32)* @_ZN5blink17ApplyStyleCommandC2ERNS_8DocumentEPKNS_12EditingStyleEPFbPKNS_7ElementEENS_10InputEvent9InputTypeE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink39IsStyleSpanOrSpanWithOnlyStyleAttributeEPKNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %51, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %51

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %14 = bitcast %"class.blink::Member"* %13 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %51

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %22, align 8
  %24 = icmp eq %"class.blink::ElementData"* %23, null
  br i1 %24, label %51, label %25

25:                                               ; preds = %21
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %0) #9
  %26 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %22, align 8
  %27 = icmp eq %"class.blink::ElementData"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = load i32, i32* null, align 536870912
  br label %39

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::UniqueElementData"*
  %37 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %36, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  br label %43

39:                                               ; preds = %30, %28
  %40 = phi i32 [ %29, %28 ], [ %32, %30 ]
  %41 = lshr i32 %40, 1
  %42 = and i32 %41, 268435455
  br label %43

43:                                               ; preds = %39, %35
  %44 = phi i32 [ %42, %39 ], [ %38, %35 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %48 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %0, %"class.blink::QualifiedName"* dereferenceable(8) %47) #9
  %49 = zext i1 %48 to i32
  %50 = icmp eq i32 %44, %49
  br label %51

51:                                               ; preds = %8, %46, %43, %21, %1, %3
  %52 = phi i1 [ false, %8 ], [ false, %3 ], [ false, %1 ], [ true, %21 ], [ true, %43 ], [ %50, %46 ]
  ret i1 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14IsEmptyFontTagEPKNS_7ElementENS_27ShouldStyleAttributeBeEmptyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::Element"* %0, null
  br i1 %3, label %75, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 48
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %75

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %75

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %23, align 8
  %25 = icmp eq %"class.blink::ElementData"* %24, null
  br i1 %25, label %75, label %26

26:                                               ; preds = %22
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %0) #9
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %23, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = load i32, i32* null, align 536870912
  br label %40

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %38 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %37, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  br label %44

40:                                               ; preds = %31, %29
  %41 = phi i32 [ %30, %29 ], [ %33, %31 ]
  %42 = lshr i32 %41, 1
  %43 = and i32 %42, 268435455
  br label %44

44:                                               ; preds = %40, %36
  %45 = phi i32 [ %43, %40 ], [ %39, %36 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %75, label %47

47:                                               ; preds = %44
  %48 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %49 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %0, %"class.blink::QualifiedName"* dereferenceable(8) %48) #9
  br i1 %49, label %50, label %72

50:                                               ; preds = %47
  %51 = icmp eq i32 %1, 0
  br i1 %51, label %71, label %52

52:                                               ; preds = %50
  %53 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %23, align 8
  %54 = icmp eq %"class.blink::ElementData"* %53, null
  br i1 %54, label %71, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %53, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %56, align 8
  %58 = icmp eq %"class.blink::CSSPropertyValueSet"* %57, null
  br i1 %58, label %71, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %57, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %57, i64 7, i32 0
  %65 = load i32, i32* %64, align 4
  br label %68

66:                                               ; preds = %59
  %67 = and i32 %61, 268435455
  br label %68

68:                                               ; preds = %66, %63
  %69 = phi i32 [ %67, %66 ], [ %65, %63 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68, %55, %52, %50
  br label %72

72:                                               ; preds = %71, %68, %47
  %73 = phi i32 [ 1, %71 ], [ 0, %68 ], [ 0, %47 ]
  %74 = icmp eq i32 %73, %45
  br label %75

75:                                               ; preds = %9, %72, %44, %22, %2, %4
  %76 = phi i1 [ false, %9 ], [ false, %4 ], [ false, %2 ], [ true, %22 ], [ true, %44 ], [ %74, %72 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommandC2ERNS_8DocumentEPKNS_12EditingStyleENS_10InputEvent9InputTypeENS0_13PropertyLevelE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::EditingStyle"*, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandC2ERNS_8DocumentE(%"class.blink::CompositeEditCommand"* %8, %"class.blink::Document"* dereferenceable(2848) %1) #9
  %9 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink17ApplyStyleCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = tail call %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"* %2) #9
  %11 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::EditingStyle"* %10, %"class.blink::EditingStyle"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 2
  store i32 %3, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 3
  store i32 %4, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::SelectionForUndoStep"* %16) #9
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  %17 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  %18 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::SelectionForUndoStep"* %16) #9
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::Element"* null, %"class.blink::Element"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 8
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  store i1 (%"class.blink::Element"*)* null, i1 (%"class.blink::Element"*)** %22, align 8
  ret void
}

declare void @_ZN5blink20CompositeEditCommandC2ERNS_8DocumentE(%"class.blink::CompositeEditCommand"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"*) local_unnamed_addr #2

declare void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionForUndoStep"*) local_unnamed_addr #2

declare void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionForUndoStep"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommandC2ERNS_8DocumentEPKNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESC_(%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandC2ERNS_8DocumentE(%"class.blink::CompositeEditCommand"* %6, %"class.blink::Document"* dereferenceable(2848) %1) #9
  %7 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink17ApplyStyleCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = tail call %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"* %2) #9
  %9 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::EditingStyle"* %8, %"class.blink::EditingStyle"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 3
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %12, %"class.blink::PositionTemplate"* dereferenceable(16) %3) #9
  %13 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %13, %"class.blink::PositionTemplate"* dereferenceable(16) %4) #9
  %14 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::Element"* null, %"class.blink::Element"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 8
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  store i1 (%"class.blink::Element"*)* null, i1 (%"class.blink::Element"*)** %17, align 8
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommandC2EPNS_7ElementEb(%"class.blink::ApplyStyleCommand"*, %"class.blink::Element"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  tail call void @_ZN5blink20CompositeEditCommandC2ERNS_8DocumentE(%"class.blink::CompositeEditCommand"* %7, %"class.blink::Document"* dereferenceable(2848) %11) #9
  %12 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink17ApplyStyleCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #9
  %14 = getelementptr inbounds i8, i8* %13, i64 -4
  %15 = bitcast i8* %14 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #9
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.blink::EditingStyle"** %18 to i8**
  store i8* %13, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 3
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  %23 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionForUndoStep"* %24) #9
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  %25 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::SelectionForUndoStep"* %24) #9
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret %25, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  store i8 1, i8* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::Element"* %1, %"class.blink::Element"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 8
  store i8 %6, i8* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  store i1 (%"class.blink::Element"*)* null, i1 (%"class.blink::Element"*)** %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommandC2ERNS_8DocumentEPKNS_12EditingStyleEPFbPKNS_7ElementEENS_10InputEvent9InputTypeE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::EditingStyle"*, i1 (%"class.blink::Element"*)*, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandC2ERNS_8DocumentE(%"class.blink::CompositeEditCommand"* %8, %"class.blink::Document"* dereferenceable(2848) %1) #9
  %9 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink17ApplyStyleCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = tail call %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"* %2) #9
  %11 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::EditingStyle"* %10, %"class.blink::EditingStyle"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 2
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 3
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::SelectionForUndoStep"* %16) #9
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  %17 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  %18 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::SelectionForUndoStep"* %16) #9
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::Element"* null, %"class.blink::Element"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 8
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  store i1 (%"class.blink::Element"*)* %3, i1 (%"class.blink::Element"*)** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %6 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %7 = alloca %"class.blink::SelectionTemplate", align 8
  %8 = alloca %"class.blink::SelectionForUndoStep", align 8
  %9 = alloca %"class.blink::SelectionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  br i1 %14, label %17, label %69

17:                                               ; preds = %2
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::EphemeralRangeTemplate"* %1) #9
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  %21 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  br i1 %20, label %23, label %25

23:                                               ; preds = %17
  %24 = icmp eq %"class.blink::Node"* %22, null
  br i1 %24, label %41, label %67

25:                                               ; preds = %17
  %26 = icmp eq %"class.blink::Node"* %19, %22
  br i1 %26, label %27, label %67

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %67

33:                                               ; preds = %27
  %34 = icmp eq i32 %29, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %67

41:                                               ; preds = %23, %35, %33
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::EphemeralRangeTemplate"* %1) #9
  %42 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  %45 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  br i1 %44, label %47, label %49

47:                                               ; preds = %41
  %48 = icmp eq %"class.blink::Node"* %46, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  br i1 %48, label %70, label %68

49:                                               ; preds = %41
  %50 = icmp eq %"class.blink::Node"* %43, %46
  br i1 %50, label %51, label %60

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = icmp eq i32 %53, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  br label %70

60:                                               ; preds = %51, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  br label %68

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %63, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  br i1 %66, label %70, label %68

67:                                               ; preds = %23, %35, %25, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  br label %68

68:                                               ; preds = %47, %61, %60, %67
  store i8 1, i8* %12, align 8
  br label %70

69:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  br label %70

70:                                               ; preds = %47, %61, %59, %69, %68
  %71 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %72 = load %"class.blink::Document"*, %"class.blink::Document"** %71, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %72, i32 7) #9
  %73 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %74 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 2, i32 3
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 3
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br label %81

81:                                               ; preds = %70, %77
  %82 = phi i1 [ true, %70 ], [ %80, %77 ]
  %83 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 40, i1 false)
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %5) #9
  br i1 %82, label %84, label %86

84:                                               ; preds = %81
  %85 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder21SetAsForwardSelectionERKNS_22EphemeralRangeTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %5, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %1) #9
  br label %88

86:                                               ; preds = %81
  %87 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder22SetAsBackwardSelectionERKNS_22EphemeralRangeTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %5, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %1) #9
  br label %88

88:                                               ; preds = %86, %84
  %89 = bitcast %"class.blink::VisibleSelectionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #9
  %90 = bitcast %"class.blink::SelectionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %7, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %5) #9
  call void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* nonnull sret %6, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %90) #9
  %91 = bitcast %"class.blink::SelectionForUndoStep"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %91) #9
  %92 = bitcast %"class.blink::SelectionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %92) #9
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11AsSelectionEv(%"class.blink::SelectionTemplate"* nonnull sret %9, %"class.blink::VisibleSelectionTemplate"* nonnull %6) #9
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %8, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %9) #9
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %73, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %92) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %91) #9
  %93 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::EphemeralRangeTemplate"* %1) #9
  %94 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  %95 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.blink::PositionTemplate"* %94 to i64*
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %88
  %101 = inttoptr i64 %96 to i8*
  %102 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #9
  br label %103

103:                                              ; preds = %88, %100
  %104 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4, i32 1
  %105 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %106 = bitcast i32* %105 to i64*
  %107 = bitcast i32* %104 to i64*
  %108 = load i64, i64* %106, align 8
  store i64 %108, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #9
  %109 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::EphemeralRangeTemplate"* %1) #9
  %110 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  %111 = bitcast %"class.blink::PositionTemplate"* %11 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.blink::PositionTemplate"* %110 to i64*
  store atomic i64 %112, i64* %113 monotonic, align 8
  %114 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %103
  %117 = inttoptr i64 %112 to i8*
  %118 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %117) #9
  br label %119

119:                                              ; preds = %103, %116
  %120 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5, i32 1
  %121 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  %122 = bitcast i32* %121 to i64*
  %123 = bitcast i32* %120 to i64*
  %124 = load i64, i64* %122, align 8
  store i64 %124, i64* %123, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %83) #9
  ret void
}

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) unnamed_addr #2

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder21SetAsForwardSelectionERKNS_22EphemeralRangeTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #2

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder22SetAsBackwardSelectionERKNS_22EphemeralRangeTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::SelectionTemplate"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"*, %"class.blink::SelectionForUndoStep"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* sret, %"class.blink::SelectionTemplate"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11AsSelectionEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand13StartPositionEv(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::ApplyStyleCommand"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 6
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 0, i32 3
  tail call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* sret %0, %"class.blink::SelectionForUndoStep"* %7) #9
  br label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 4
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %9) #9
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand11EndPositionEv(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::ApplyStyleCommand"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 6
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 0, i32 3
  tail call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* sret %0, %"class.blink::SelectionForUndoStep"* %7) #9
  br label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 5
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %9) #9
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand7DoApplyEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingState"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %38 [
    i32 0, label %5
    i32 1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %9) #9
  %11 = tail call %"class.blink::EditingStyle"* @_ZN5blink12EditingStyle31ExtractAndRemoveBlockPropertiesEPKNS_16ExecutionContextE(%"class.blink::EditingStyle"* %7, %"class.blink::ExecutionContext"* %10) #9
  %12 = tail call zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"* %11) #9
  br i1 %12, label %17, label %13

13:                                               ; preds = %5
  tail call void @_ZN5blink17ApplyStyleCommand15ApplyBlockStyleEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %11, %"class.blink::EditingState"* %1)
  %14 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %1, i64 0, i32 0
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %38

17:                                               ; preds = %13, %5
  %18 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %6, align 8
  %19 = tail call zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"* %18) #9
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  %26 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %25, align 8
  %27 = icmp eq i1 (%"class.blink::Element"*)* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %24, %17
  %29 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %6, align 8
  tail call void @_ZN5blink17ApplyStyleCommand28ApplyRelativeFontStyleChangeEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %29, %"class.blink::EditingState"* %1)
  %30 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %1, i64 0, i32 0
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %6, align 8
  tail call void @_ZN5blink17ApplyStyleCommand16ApplyInlineStyleEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %34, %"class.blink::EditingState"* %1)
  ret void

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %36, align 8
  tail call void @_ZN5blink17ApplyStyleCommand15ApplyBlockStyleEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %37, %"class.blink::EditingState"* %1)
  br label %38

38:                                               ; preds = %28, %13, %24, %2, %35
  ret void
}

declare %"class.blink::EditingStyle"* @_ZN5blink12EditingStyle31ExtractAndRemoveBlockPropertiesEPKNS_16ExecutionContextE(%"class.blink::EditingStyle"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand15ApplyBlockStyleEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %10 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.blink::PositionTemplate", align 8
  %15 = alloca %"class.blink::PositionTemplate", align 8
  %16 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %17 = alloca %"class.blink::PositionTemplate", align 8
  %18 = alloca %"class.blink::PositionTemplate", align 8
  %19 = alloca %"class.blink::PositionTemplate", align 8
  %20 = alloca %"class.blink::TextIteratorBehavior", align 4
  %21 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %22 = alloca %"class.blink::RelocatablePosition", align 8
  %23 = alloca %"class.blink::PositionTemplate", align 8
  %24 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %25 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %26 = alloca %"class.blink::PositionTemplate", align 8
  %27 = alloca %"class.blink::PositionTemplate", align 8
  %28 = alloca %"class.blink::RelocatablePosition", align 8
  %29 = alloca %"class.blink::PositionTemplate", align 8
  %30 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %31 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %32 = alloca %"class.blink::StyleChange", align 8
  %33 = alloca %"class.blink::PositionTemplate", align 8
  %34 = alloca %"class.blink::PositionTemplate", align 8
  %35 = alloca %"class.blink::PositionTemplate", align 8
  %36 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %37 = alloca %"class.blink::PositionTemplate", align 8
  %38 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %39 = alloca %"class.blink::PlainTextRange", align 4
  %40 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %41 = alloca %"class.blink::PlainTextRange", align 4
  %42 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %43 = alloca %"class.blink::PositionTemplate", align 8
  %44 = alloca %"class.blink::PositionTemplate", align 8
  %45 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %46, i32 7) #9
  %47 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  %50 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  %51 = load i8, i8* %49, align 8, !range !2, !noalias !3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::SelectionForUndoStep"* %54) #9
  br label %57

55:                                               ; preds = %3
  %56 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* dereferenceable(16) %56) #9
  br label %57

57:                                               ; preds = %53, %55
  %58 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #9
  %59 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %60 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  %61 = load i8, i8* %49, align 8, !range !2, !noalias !6
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::SelectionForUndoStep"* %64) #9
  br label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* dereferenceable(16) %66) #9
  br label %67

67:                                               ; preds = %63, %65
  %68 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  %69 = icmp slt i16 %68, 0
  br i1 %69, label %70, label %96

70:                                               ; preds = %67
  %71 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #9
  %72 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %73 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  %74 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %70
  %80 = inttoptr i64 %75 to i8*
  %81 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #9
  br label %82

82:                                               ; preds = %70, %79
  %83 = bitcast i32* %59 to i64*
  %84 = bitcast i32* %48 to i64*
  %85 = load i64, i64* %83, align 8
  store i64 %85, i64* %84, align 8
  %86 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  %87 = load i64, i64* %86, align 8
  store atomic i64 %87, i64* %74 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %82
  %91 = inttoptr i64 %87 to i8*
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #9
  br label %93

93:                                               ; preds = %82, %90
  %94 = bitcast i32* %72 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #9
  br label %96

96:                                               ; preds = %93, %67
  %97 = bitcast %"class.blink::VisiblePositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #9
  %98 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.blink::VisiblePositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false)
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1) #9
  %100 = bitcast %"class.blink::VisiblePositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #9
  %101 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = bitcast %"class.blink::VisiblePositionTemplate"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 24, i1 false)
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i32 1) #9
  %103 = load %"class.blink::Node"*, %"class.blink::Node"** %98, align 8
  %104 = icmp eq %"class.blink::Node"* %103, null
  br i1 %104, label %331, label %105

105:                                              ; preds = %96
  %106 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #9
  %107 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %107) #9
  %108 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %111, label %112

111:                                              ; preds = %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9
  br label %114

112:                                              ; preds = %105
  %113 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9
  br i1 %113, label %114, label %331

114:                                              ; preds = %112, %111
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %116 = icmp eq %"class.blink::Node"* %115, null
  br i1 %116, label %331, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #9
  %119 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %119) #9
  %120 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  %122 = icmp eq %"class.blink::Node"* %121, null
  br i1 %122, label %123, label %124

123:                                              ; preds = %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #9
  br label %126

124:                                              ; preds = %117
  %125 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #9
  br i1 %125, label %126, label %331

126:                                              ; preds = %124, %123
  %127 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %107) #9
  %128 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %128, align 8
  %130 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %129) #9
  %131 = icmp eq %"class.blink::ContainerNode"* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %126, %132
  %133 = phi %"class.blink::Node"* [ %135, %132 ], [ %129, %126 ]
  %134 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %133) #9
  %135 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %134, i64 0, i32 0
  %136 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %135) #9
  %137 = icmp eq %"class.blink::ContainerNode"* %136, null
  br i1 %137, label %138, label %132

138:                                              ; preds = %132, %126
  %139 = phi %"class.blink::Node"* [ %129, %126 ], [ %135, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #9
  %140 = bitcast %"class.blink::EphemeralRangeTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %140) #9
  %141 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  %142 = bitcast %"class.blink::EphemeralRangeTemplate"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %13, %"class.blink::Node"* dereferenceable(64) %139) #9
  %143 = bitcast %"class.blink::PositionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #9
  %144 = bitcast %"class.blink::PositionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %107) #9
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %14, %"class.blink::PositionTemplate"* nonnull %15) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %12, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %13, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #9
  %145 = bitcast %"class.blink::EphemeralRangeTemplate"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145) #9
  %146 = bitcast %"class.blink::PositionTemplate"* %17 to i8*
  %147 = bitcast %"class.blink::EphemeralRangeTemplate"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %17, %"class.blink::Node"* dereferenceable(64) %139) #9
  %148 = bitcast %"class.blink::PositionTemplate"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #9
  %149 = bitcast %"class.blink::PositionTemplate"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %19, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %119) #9
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %18, %"class.blink::PositionTemplate"* nonnull %19) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %16, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #9
  %150 = bitcast %"class.blink::TextIteratorBehavior"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #9
  %151 = getelementptr inbounds %"class.blink::TextIteratorBehavior", %"class.blink::TextIteratorBehavior"* %20, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %151, align 4
  call void @_ZN5blink20TextIteratorBehavior38AllVisiblePositionsRangeLengthBehaviorEv(%"class.blink::TextIteratorBehavior"* nonnull sret %20) #9
  %152 = call i32 @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11RangeLengthERKNS_22EphemeralRangeTemplateIS3_EERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %12, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %20) #9
  %153 = call i32 @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11RangeLengthERKNS_22EphemeralRangeTemplateIS3_EERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %16, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %20) #9
  %154 = bitcast %"class.blink::VisiblePositionTemplate"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #9
  %155 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %21, i64 0, i32 0, i32 1
  %157 = bitcast %"class.blink::VisiblePositionTemplate"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 24, i1 false)
  call void @_ZN5blink16StartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %21, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %9, i32 1) #9
  %158 = bitcast %"class.blink::RelocatablePosition"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #9
  %159 = bitcast %"class.blink::PositionTemplate"* %23 to i8*
  %160 = bitcast %"class.blink::RelocatablePosition"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #9
  %161 = bitcast %"class.blink::VisiblePositionTemplate"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #9
  %162 = bitcast %"class.blink::VisiblePositionTemplate"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #9
  call void @_ZN5blink14EndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %25, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %10, i32 1) #9
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %24, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %25, i32 0) #9
  %163 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %24, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %23, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %163) #9
  call void @_ZN5blink19RelocatablePositionC1ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::RelocatablePosition"* nonnull %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %23) #9
  %164 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %24, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %164) #9
  %165 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %25, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %165) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #9
  %166 = load %"class.blink::Node"*, %"class.blink::Node"** %155, align 8
  %167 = icmp eq %"class.blink::Node"* %166, null
  br i1 %167, label %307, label %168

168:                                              ; preds = %138
  %169 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %21, i64 0, i32 0, i32 0, i32 1
  %170 = bitcast %"class.blink::PositionTemplate"* %26 to i8*
  %171 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %26, i64 0, i32 0, i32 0, i32 0
  %172 = bitcast %"class.blink::PositionTemplate"* %27 to i8*
  %173 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %21, i64 0, i32 0, i32 0
  %174 = bitcast %"class.blink::RelocatablePosition"* %28 to i8*
  %175 = bitcast %"class.blink::PositionTemplate"* %29 to i8*
  %176 = bitcast %"class.blink::VisiblePositionTemplate"* %30 to i8*
  %177 = bitcast %"class.blink::VisiblePositionTemplate"* %31 to i8*
  %178 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %30, i64 0, i32 0, i32 0
  %179 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %30, i64 0, i32 0
  %180 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %31, i64 0, i32 0
  %181 = bitcast %"class.blink::StyleChange"* %32 to i8*
  %182 = bitcast %"class.blink::PositionTemplate"* %33 to i8*
  %183 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %32, i64 0, i32 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 8
  %185 = bitcast %"class.blink::PositionTemplate"* %34 to i8*
  %186 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %34, i64 0, i32 0, i32 0, i32 0
  %187 = bitcast %"class.blink::PositionTemplate"* %35 to i8*
  %188 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %189 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %190 = bitcast %"class.blink::VisiblePositionTemplate"* %36 to i8*
  %191 = bitcast %"class.blink::PositionTemplate"* %37 to i8*
  %192 = bitcast %"class.blink::VisiblePositionTemplate"* %36 to i64*
  %193 = bitcast %"class.blink::VisiblePositionTemplate"* %21 to i64*
  %194 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %36, i64 0, i32 0, i32 0, i32 1
  %195 = bitcast i32* %194 to i64*
  %196 = bitcast i32* %169 to i64*
  %197 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %36, i64 0, i32 0, i32 1
  %198 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %36, i64 0, i32 0
  %199 = bitcast %"class.blink::RelocatablePosition"* %28 to i8*
  br label %200

200:                                              ; preds = %168, %302
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #9
  call void @_ZNK5blink19RelocatablePosition11GetPositionEv(%"class.blink::PositionTemplate"* nonnull sret %26, %"class.blink::RelocatablePosition"* nonnull %22) #9
  %201 = load %"class.blink::Node"*, %"class.blink::Node"** %171, align 8
  %202 = icmp eq %"class.blink::Node"* %201, null
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #9
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %27, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %173) #9
  %204 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"* nonnull %26, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %27) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #9
  br i1 %204, label %205, label %207

205:                                              ; preds = %203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #9
  br label %307

206:                                              ; preds = %200
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #9
  br label %207

207:                                              ; preds = %206, %203
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #9
  call void @_ZN5blink14EndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %31, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %21, i32 1) #9
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %30, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %31, i32 0) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %29, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %178) #9
  call void @_ZN5blink19RelocatablePositionC1ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::RelocatablePosition"* nonnull %28, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %29) #9
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %179) #9
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %180) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #9
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %181) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 40, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %33, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %173) #9
  call void @_ZN5blink11StyleChangeC1EPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::StyleChange"* nonnull %32, %"class.blink::EditingStyle"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %33) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #9
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %210, label %213

210:                                              ; preds = %207
  %211 = load i8, i8* %184, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %295, label %261

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %230

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i33
  %222 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %221, i33 1) #9
  %223 = extractvalue { i33, i1 } %222, 1
  %224 = extractvalue { i33, i1 } %222, 0
  %225 = icmp slt i33 %224, 0
  %226 = or i1 %223, %225
  br i1 %226, label %227, label %228, !prof !9

227:                                              ; preds = %218
  call void @llvm.trap() #9
  unreachable

228:                                              ; preds = %218
  %229 = trunc i33 %224 to i32
  store i32 %229, i32* %219, align 4
  br label %230

230:                                              ; preds = %228, %213
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %249

234:                                              ; preds = %230
  %235 = load i8, i8* %184, align 8, !range !2
  %236 = icmp eq i8 %235, 0
  %237 = load atomic i32, i32* %214 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %234
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %234
  %245 = phi i32 [ %243, %242 ], [ %241, %234 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #9
  br i1 %236, label %295, label %261

248:                                              ; preds = %244
  br i1 %236, label %295, label %261

249:                                              ; preds = %230
  %250 = load atomic i32, i32* %214 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %249
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %249
  %258 = phi i32 [ %256, %255 ], [ %254, %249 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #9
  br label %261

261:                                              ; preds = %260, %257, %247, %210, %248
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %34, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %173) #9
  %262 = load %"class.blink::Node"*, %"class.blink::Node"** %186, align 8
  %263 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %262, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %35, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %173) #9
  %264 = load i8, i8* %184, align 8, !range !2
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %266, label %275

266:                                              ; preds = %261
  %267 = call zeroext i1 @_ZN5blink18IsEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %35) #9
  br i1 %267, label %268, label %275

268:                                              ; preds = %266
  %269 = call %"class.blink::HTMLElement"* @_ZN5blink20CompositeEditCommand42MoveParagraphContentsToNewBlockIfNecessaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %188, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %35, %"class.blink::EditingState"* %2) #9
  %270 = load i8, i8* %189, align 1, !range !2
  %271 = icmp eq i8 %270, 0
  %272 = icmp eq %"class.blink::HTMLElement"* %269, null
  %273 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %269, i64 0, i32 0
  %274 = select i1 %272, %"class.blink::Element"* %263, %"class.blink::Element"* %273
  br i1 %271, label %275, label %292

275:                                              ; preds = %261, %268, %266
  %276 = phi %"class.blink::Element"* [ %263, %261 ], [ %274, %268 ], [ %263, %266 ]
  %277 = icmp eq %"class.blink::Element"* %276, null
  br i1 %277, label %293, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %276, i64 0, i32 0, i32 0, i32 1
  %280 = load i32, i32* %279, align 8
  %281 = and i32 %280, 48
  %282 = icmp eq i32 %281, 0
  %283 = bitcast %"class.blink::Element"* %276 to %"class.blink::HTMLElement"*
  br i1 %282, label %284, label %293

284:                                              ; preds = %278
  %285 = call zeroext i1 @_ZN5blink17ApplyStyleCommand14RemoveCSSStyleEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* nonnull %283, %"class.blink::EditingState"* %2, i32 0, %"class.blink::EditingStyle"* null)
  %286 = load i8, i8* %189, align 1, !range !2
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %288, label %292

288:                                              ; preds = %284
  %289 = load i8, i8* %184, align 8, !range !2
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  call void @_ZN5blink17ApplyStyleCommand13AddBlockStyleERKNS_11StyleChangeEPNS_11HTMLElementE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::StyleChange"* nonnull dereferenceable(40) %32, %"class.blink::HTMLElement"* nonnull %283)
  br label %293

292:                                              ; preds = %284, %268
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #9
  call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %181) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #9
  br label %329

293:                                              ; preds = %278, %275, %291, %288
  %294 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %294, i32 7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #9
  br label %295

295:                                              ; preds = %293, %247, %210, %248
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #9
  call void @_ZNK5blink19RelocatablePosition11GetPositionEv(%"class.blink::PositionTemplate"* nonnull sret %37, %"class.blink::RelocatablePosition"* nonnull %28) #9
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %36, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %37, i32 1) #9
  %296 = load i64, i64* %192, align 8
  store atomic i64 %296, i64* %193 monotonic, align 8
  %297 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %302, label %299

299:                                              ; preds = %295
  %300 = inttoptr i64 %296 to i8*
  %301 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %300) #9
  br label %302

302:                                              ; preds = %299, %295
  %303 = load i64, i64* %195, align 8
  store i64 %303, i64* %196, align 8
  %304 = load i32, i32* %197, align 8
  store i32 %304, i32* %156, align 8
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %198) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #9
  call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %181) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #9
  %305 = load %"class.blink::Node"*, %"class.blink::Node"** %155, align 8
  %306 = icmp eq %"class.blink::Node"* %305, null
  br i1 %306, label %307, label %200

307:                                              ; preds = %302, %138, %205
  %308 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %308, i32 7) #9
  %309 = bitcast %"class.blink::EphemeralRangeTemplate"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %309) #9
  %310 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %311 = bitcast %"class.blink::PlainTextRange"* %39 to i8*
  %312 = bitcast %"class.blink::EphemeralRangeTemplate"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #9
  call void @_ZN5blink14PlainTextRangeC1Ej(%"class.blink::PlainTextRange"* nonnull %39, i32 %152) #9
  %313 = bitcast %"class.blink::Node"* %139 to %"class.blink::ContainerNode"*
  call void @_ZNK5blink14PlainTextRange23CreateRangeForSelectionERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %38, %"class.blink::PlainTextRange"* nonnull %39, %"class.blink::ContainerNode"* dereferenceable(80) %313) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #9
  %314 = load %"class.blink::Node"*, %"class.blink::Node"** %310, align 8
  %315 = icmp eq %"class.blink::Node"* %314, null
  br i1 %315, label %328, label %316

316:                                              ; preds = %307
  %317 = bitcast %"class.blink::EphemeralRangeTemplate"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %317) #9
  %318 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.blink::PlainTextRange"* %41 to i8*
  %320 = bitcast %"class.blink::EphemeralRangeTemplate"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %320, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #9
  call void @_ZN5blink14PlainTextRangeC1Ej(%"class.blink::PlainTextRange"* nonnull %41, i32 %153) #9
  call void @_ZNK5blink14PlainTextRange23CreateRangeForSelectionERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %40, %"class.blink::PlainTextRange"* nonnull %41, %"class.blink::ContainerNode"* dereferenceable(80) %313) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #9
  %321 = load %"class.blink::Node"*, %"class.blink::Node"** %318, align 8
  %322 = icmp eq %"class.blink::Node"* %321, null
  br i1 %322, label %327, label %323

323:                                              ; preds = %316
  %324 = bitcast %"class.blink::EphemeralRangeTemplate"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %324) #9
  %325 = bitcast %"class.blink::PositionTemplate"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %325) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %43, %"class.blink::EphemeralRangeTemplate"* nonnull %38) #9
  %326 = bitcast %"class.blink::PositionTemplate"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %326) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %44, %"class.blink::EphemeralRangeTemplate"* nonnull %40) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %42, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %43, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %44) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %42)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %42) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %326) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %324) #9
  br label %327

327:                                              ; preds = %316, %323
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %40) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %317) #9
  br label %328

328:                                              ; preds = %307, %327
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %309) #9
  br label %329

329:                                              ; preds = %292, %328
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #9
  %330 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %21, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %330) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %140) #9
  br label %331

331:                                              ; preds = %124, %112, %96, %114, %329
  %332 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %332) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #9
  %333 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %333) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand28ApplyRelativeFontStyleChangeEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"* readonly, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::PositionTemplate", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.blink::PositionTemplate", align 8
  %15 = alloca %"class.blink::PositionTemplate", align 8
  %16 = alloca %"class.blink::HeapHashMap.694", align 8
  %17 = alloca %"class.blink::Node"*, align 8
  %18 = alloca float, align 4
  %19 = alloca %"class.blink::HeapVector.701", align 8
  %20 = alloca %"class.blink::HTMLElement"*, align 8
  %21 = alloca %"class.WTF::AtomicString", align 8
  %22 = icmp eq %"class.blink::EditingStyle"* %1, null
  br i1 %22, label %803, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %1, i64 0, i32 4
  %25 = load float, float* %24, align 4
  %26 = fcmp une float %25, 0.000000e+00
  br i1 %26, label %27, label %803

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 2
  %32 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  %33 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  %34 = load i8, i8* %32, align 8, !range !2, !noalias !10
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionForUndoStep"* %37) #9
  br label %40

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %39) #9
  br label %40

40:                                               ; preds = %36, %38
  %41 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #9
  %42 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 2
  %45 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = load i8, i8* %32, align 8, !range !2, !noalias !13
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::SelectionForUndoStep"* %49) #9
  br label %52

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* dereferenceable(16) %51) #9
  br label %52

52:                                               ; preds = %48, %50
  %53 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  %54 = icmp slt i16 %53, 0
  br i1 %54, label %55, label %81

55:                                               ; preds = %52
  %56 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9
  %57 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %58 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  %59 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %60, i64* %61 monotonic, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %55
  %65 = inttoptr i64 %60 to i8*
  %66 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #9
  br label %67

67:                                               ; preds = %55, %64
  %68 = bitcast i32* %43 to i64*
  %69 = bitcast i32* %30 to i64*
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %69, align 8
  %71 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  %72 = load i64, i64* %71, align 8
  store atomic i64 %72, i64* %59 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %67
  %76 = inttoptr i64 %72 to i8*
  %77 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #9
  br label %78

78:                                               ; preds = %67, %75
  %79 = bitcast i32* %57 to i64*
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #9
  br label %81

81:                                               ; preds = %78, %52
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 12
  %86 = icmp eq i32 %85, 4
  br i1 %86, label %87, label %132

87:                                               ; preds = %81
  %88 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %82) #9
  call void @_ZN5blink17ApplyStyleCommand18JoinChildTextNodesEPNS_13ContainerNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::ContainerNode"* %88, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5)
  %89 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #9
  %90 = load i8, i8* %32, align 8, !range !2, !noalias !16
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::SelectionForUndoStep"* %93) #9
  br label %96

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* dereferenceable(16) %95) #9
  br label %96

96:                                               ; preds = %92, %94
  %97 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %96
  %103 = inttoptr i64 %98 to i8*
  %104 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #9
  br label %105

105:                                              ; preds = %96, %102
  %106 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %107 = bitcast i32* %106 to i64*
  %108 = bitcast i32* %30 to i64*
  %109 = load i64, i64* %107, align 8
  store i64 %109, i64* %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #9
  %110 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #9
  %111 = load i8, i8* %32, align 8, !range !2, !noalias !19
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::SelectionForUndoStep"* %114) #9
  br label %117

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::PositionTemplate"* dereferenceable(16) %116) #9
  br label %117

117:                                              ; preds = %113, %115
  %118 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = inttoptr i64 %119 to i8*
  %125 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %124) #9
  br label %126

126:                                              ; preds = %117, %123
  %127 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %128 = bitcast i32* %127 to i64*
  %129 = bitcast i32* %43 to i64*
  %130 = load i64, i64* %128, align 8
  store i64 %130, i64* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #9
  %131 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  br label %132

132:                                              ; preds = %126, %81
  %133 = phi %"class.blink::Node"* [ %131, %126 ], [ %82, %81 ]
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %802, label %135

135:                                              ; preds = %132
  %136 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %137 = icmp eq %"class.blink::Node"* %136, null
  br i1 %137, label %802, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %136, i64 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = and i32 %140, 12
  %142 = icmp eq i32 %141, 4
  br i1 %142, label %143, label %193

143:                                              ; preds = %138
  %144 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %133) #9
  %145 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %146 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %145) #9
  %147 = icmp eq %"class.blink::ContainerNode"* %144, %146
  br i1 %147, label %193, label %148

148:                                              ; preds = %143
  %149 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %150 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %149) #9
  call void @_ZN5blink17ApplyStyleCommand18JoinChildTextNodesEPNS_13ContainerNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::ContainerNode"* %150, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5)
  %151 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #9
  %152 = load i8, i8* %32, align 8, !range !2, !noalias !22
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::SelectionForUndoStep"* %155) #9
  br label %158

156:                                              ; preds = %148
  %157 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* dereferenceable(16) %157) #9
  br label %158

158:                                              ; preds = %154, %156
  %159 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %160, i64* %161 monotonic, align 8
  %162 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %158
  %165 = inttoptr i64 %160 to i8*
  %166 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %165) #9
  br label %167

167:                                              ; preds = %158, %164
  %168 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %169 = bitcast i32* %168 to i64*
  %170 = bitcast i32* %30 to i64*
  %171 = load i64, i64* %169, align 8
  store i64 %171, i64* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #9
  %172 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #9
  %173 = load i8, i8* %32, align 8, !range !2, !noalias !25
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::SelectionForUndoStep"* %176) #9
  br label %179

177:                                              ; preds = %167
  %178 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::PositionTemplate"* dereferenceable(16) %178) #9
  br label %179

179:                                              ; preds = %175, %177
  %180 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %181, i64* %182 monotonic, align 8
  %183 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %179
  %186 = inttoptr i64 %181 to i8*
  %187 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %186) #9
  br label %188

188:                                              ; preds = %179, %185
  %189 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %190 = bitcast i32* %189 to i64*
  %191 = bitcast i32* %43 to i64*
  %192 = load i64, i64* %190, align 8
  store i64 %192, i64* %191, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #9
  br label %193

193:                                              ; preds = %143, %188, %138
  %194 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %195 = icmp eq %"class.blink::Node"* %194, null
  %196 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %197 = icmp eq %"class.blink::Node"* %196, null
  %198 = or i1 %195, %197
  br i1 %198, label %802, label %199

199:                                              ; preds = %193
  %200 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %4) #9
  %201 = load i32, i32* %31, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %258

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %200, i64 0, i32 1
  %205 = load i32, i32* %204, align 8
  %206 = and i32 %205, 12
  %207 = icmp eq i32 %206, 4
  br i1 %207, label %208, label %258

208:                                              ; preds = %203
  %209 = load i32, i32* %30, align 8
  %210 = call i32 @_ZN5blink14CaretMinOffsetEPKNS_4NodeE(%"class.blink::Node"* %200) #9
  %211 = icmp sgt i32 %209, %210
  br i1 %211, label %212, label %258

212:                                              ; preds = %208
  %213 = call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %200) #9
  %214 = icmp slt i32 %209, %213
  br i1 %214, label %215, label %258

215:                                              ; preds = %212
  call void @_ZN5blink17ApplyStyleCommand16SplitTextAtStartERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5)
  %216 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %216) #9
  %217 = load i8, i8* %32, align 8, !range !2, !noalias !28
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::SelectionForUndoStep"* %220) #9
  br label %223

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::PositionTemplate"* dereferenceable(16) %222) #9
  br label %223

223:                                              ; preds = %219, %221
  %224 = bitcast %"class.blink::PositionTemplate"* %11 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %225, i64* %226 monotonic, align 8
  %227 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %232, label %229

229:                                              ; preds = %223
  %230 = inttoptr i64 %225 to i8*
  %231 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #9
  br label %232

232:                                              ; preds = %223, %229
  %233 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  %234 = bitcast i32* %233 to i64*
  %235 = bitcast i32* %30 to i64*
  %236 = load i64, i64* %234, align 8
  store i64 %236, i64* %235, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #9
  %237 = bitcast %"class.blink::PositionTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #9
  %238 = load i8, i8* %32, align 8, !range !2, !noalias !31
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %232
  %241 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %12, %"class.blink::SelectionForUndoStep"* %241) #9
  br label %244

242:                                              ; preds = %232
  %243 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %12, %"class.blink::PositionTemplate"* dereferenceable(16) %243) #9
  br label %244

244:                                              ; preds = %240, %242
  %245 = bitcast %"class.blink::PositionTemplate"* %12 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %246, i64* %247 monotonic, align 8
  %248 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %244
  %251 = inttoptr i64 %246 to i8*
  %252 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %251) #9
  br label %253

253:                                              ; preds = %244, %250
  %254 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %12, i64 0, i32 1
  %255 = bitcast i32* %254 to i64*
  %256 = bitcast i32* %43 to i64*
  %257 = load i64, i64* %255, align 8
  store i64 %257, i64* %256, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #9
  br label %258

258:                                              ; preds = %208, %199, %203, %253, %212
  %259 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #9
  %260 = load i32, i32* %44, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %317

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %259, i64 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = and i32 %264, 12
  %266 = icmp eq i32 %265, 4
  br i1 %266, label %267, label %317

267:                                              ; preds = %262
  %268 = load i32, i32* %43, align 8
  %269 = call i32 @_ZN5blink14CaretMinOffsetEPKNS_4NodeE(%"class.blink::Node"* %259) #9
  %270 = icmp sgt i32 %268, %269
  br i1 %270, label %271, label %317

271:                                              ; preds = %267
  %272 = call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %259) #9
  %273 = icmp slt i32 %268, %272
  br i1 %273, label %274, label %317

274:                                              ; preds = %271
  call void @_ZN5blink17ApplyStyleCommand14SplitTextAtEndERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5)
  %275 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #9
  %276 = load i8, i8* %32, align 8, !range !2, !noalias !34
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %13, %"class.blink::SelectionForUndoStep"* %279) #9
  br label %282

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %13, %"class.blink::PositionTemplate"* dereferenceable(16) %281) #9
  br label %282

282:                                              ; preds = %278, %280
  %283 = bitcast %"class.blink::PositionTemplate"* %13 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %284, i64* %285 monotonic, align 8
  %286 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %291, label %288

288:                                              ; preds = %282
  %289 = inttoptr i64 %284 to i8*
  %290 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %289) #9
  br label %291

291:                                              ; preds = %282, %288
  %292 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 1
  %293 = bitcast i32* %292 to i64*
  %294 = bitcast i32* %30 to i64*
  %295 = load i64, i64* %293, align 8
  store i64 %295, i64* %294, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #9
  %296 = bitcast %"class.blink::PositionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %296) #9
  %297 = load i8, i8* %32, align 8, !range !2, !noalias !37
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %301, label %299

299:                                              ; preds = %291
  %300 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %14, %"class.blink::SelectionForUndoStep"* %300) #9
  br label %303

301:                                              ; preds = %291
  %302 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %14, %"class.blink::PositionTemplate"* dereferenceable(16) %302) #9
  br label %303

303:                                              ; preds = %299, %301
  %304 = bitcast %"class.blink::PositionTemplate"* %14 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %305, i64* %306 monotonic, align 8
  %307 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %303
  %310 = inttoptr i64 %305 to i8*
  %311 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %310) #9
  br label %312

312:                                              ; preds = %303, %309
  %313 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %14, i64 0, i32 1
  %314 = bitcast i32* %313 to i64*
  %315 = bitcast i32* %43 to i64*
  %316 = load i64, i64* %314, align 8
  store i64 %316, i64* %315, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %296) #9
  br label %317

317:                                              ; preds = %267, %258, %262, %312, %271
  %318 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #9
  %319 = bitcast %"class.blink::PositionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %319) #9
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i32 1) #9
  %320 = bitcast %"class.blink::PositionTemplate"* %15 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %321, i64* %322 monotonic, align 8
  %323 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %324 = icmp eq i32 %323, 0
  %325 = inttoptr i64 %321 to %"class.blink::Node"*
  br i1 %324, label %330, label %326

326:                                              ; preds = %317
  %327 = inttoptr i64 %321 to i8*
  %328 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %327) #9
  %329 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  br label %330

330:                                              ; preds = %317, %326
  %331 = phi %"class.blink::Node"* [ %325, %317 ], [ %329, %326 ]
  %332 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %15, i64 0, i32 1
  %333 = bitcast i32* %332 to i64*
  %334 = bitcast i32* %30 to i64*
  %335 = load i64, i64* %333, align 8
  store i64 %335, i64* %334, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %319) #9
  %336 = icmp eq %"class.blink::Node"* %331, %318
  br i1 %336, label %802, label %337

337:                                              ; preds = %330
  %338 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 0, i32 1
  %339 = load i32, i32* %338, align 8
  %340 = and i32 %339, 12
  %341 = icmp eq i32 %340, 4
  br i1 %341, label %342, label %364

342:                                              ; preds = %337
  %343 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %4) #9
  %344 = call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %331) #9
  %345 = icmp slt i32 %343, %344
  br i1 %345, label %364, label %346

346:                                              ; preds = %342
  %347 = icmp eq %"class.blink::Node"* %331, null
  br i1 %347, label %357, label %348

348:                                              ; preds = %346
  %349 = load i32, i32* %338, align 8
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %357, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 1
  %354 = bitcast %"class.blink::Node"* %353 to %"class.blink::Node"**
  %355 = load %"class.blink::Node"*, %"class.blink::Node"** %354, align 8
  %356 = icmp eq %"class.blink::Node"* %355, null
  br i1 %356, label %357, label %364

357:                                              ; preds = %352, %348, %346
  %358 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 0, i32 5, i32 0, i32 0
  %359 = load %"class.blink::Node"*, %"class.blink::Node"** %358, align 8
  %360 = icmp eq %"class.blink::Node"* %359, null
  br i1 %360, label %361, label %364

361:                                              ; preds = %357
  %362 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %331) #9
  %363 = icmp eq %"class.blink::Node"* %362, null
  br i1 %363, label %802, label %364

364:                                              ; preds = %352, %357, %361, %342, %337
  %365 = phi %"class.blink::Node"* [ %362, %361 ], [ %331, %342 ], [ %331, %337 ], [ %355, %352 ], [ %359, %357 ]
  %366 = bitcast %"class.blink::HeapHashMap.694"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %366) #9
  %367 = getelementptr inbounds %"class.blink::HeapHashMap.694", %"class.blink::HeapHashMap.694"* %16, i64 0, i32 0, i32 0, i32 0
  %368 = getelementptr inbounds %"class.blink::HeapHashMap.694", %"class.blink::HeapHashMap.694"* %16, i64 0, i32 0, i32 0, i32 1
  %369 = bitcast %"class.blink::HeapHashMap.694"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 0, i64 20, i1 false) #9
  %370 = bitcast %"class.blink::Node"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %370) #9
  store %"class.blink::Node"* %365, %"class.blink::Node"** %17, align 8
  %371 = icmp eq %"class.blink::Node"* %365, %318
  br i1 %371, label %376, label %372

372:                                              ; preds = %364
  %373 = bitcast float* %18 to i8*
  %374 = getelementptr inbounds %"class.blink::HeapHashMap.694", %"class.blink::HeapHashMap.694"* %16, i64 0, i32 0, i32 0
  %375 = bitcast float* %18 to i32*
  br label %396

376:                                              ; preds = %427, %364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %370) #9
  %377 = bitcast %"class.blink::HeapVector.701"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %377) #9
  %378 = getelementptr inbounds %"class.blink::HeapVector.701", %"class.blink::HeapVector.701"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %379 = getelementptr inbounds %"class.blink::HeapVector.701", %"class.blink::HeapVector.701"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %380 = getelementptr inbounds %"class.blink::HeapVector.701", %"class.blink::HeapVector.701"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %377, i8 0, i64 16, i1 false) #9
  br i1 %371, label %801, label %381

381:                                              ; preds = %376
  %382 = bitcast %"class.blink::HTMLElement"** %20 to i8*
  %383 = bitcast %"class.blink::HTMLElement"** %20 to %"class.blink::Node"**
  %384 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %385 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %386 = bitcast %"class.blink::HTMLElement"** %20 to %"class.blink::Element"**
  %387 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %388 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %389 = bitcast %"class.WTF::AtomicString"* %21 to i8*
  %390 = bitcast %"class.WTF::AtomicString"* %21 to i64*
  %391 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %392 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %393 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %392, i64 0, i32 0, i32 0, i32 0
  %394 = bitcast %"class.blink::HTMLElement"** %20 to i64*
  %395 = getelementptr inbounds %"class.blink::HeapVector.701", %"class.blink::HeapVector.701"* %19, i64 0, i32 0
  br label %430

396:                                              ; preds = %372, %427
  %397 = phi %"class.blink::Node"* [ %365, %372 ], [ %428, %427 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %373) #9
  %398 = call float @_ZN5blink17ApplyStyleCommand16ComputedFontSizeEPNS_4NodeE(%"class.blink::ApplyStyleCommand"* undef, %"class.blink::Node"* %397)
  store float %398, float* %18, align 4
  %399 = call { %"struct.WTF::KeyValuePair.700"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_fEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.698"* nonnull %374, %"class.blink::Node"** nonnull dereferenceable(8) %17, float* nonnull dereferenceable(4) %18) #9
  %400 = extractvalue { %"struct.WTF::KeyValuePair.700"*, i8 } %399, 1
  %401 = and i8 %400, 1
  %402 = icmp eq i8 %401, 0
  br i1 %402, label %403, label %408

403:                                              ; preds = %396
  %404 = extractvalue { %"struct.WTF::KeyValuePair.700"*, i8 } %399, 0
  %405 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %404, i64 0, i32 1
  %406 = load i32, i32* %375, align 4
  %407 = bitcast float* %405 to i32*
  store i32 %406, i32* %407, align 4
  br label %408

408:                                              ; preds = %396, %403
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %373) #9
  %409 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %410 = icmp eq %"class.blink::Node"* %409, null
  br i1 %410, label %421, label %411

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %409, i64 0, i32 1
  %413 = load i32, i32* %412, align 8
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %421, label %416

416:                                              ; preds = %411
  %417 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %409, i64 1
  %418 = bitcast %"class.blink::Node"* %417 to %"class.blink::Node"**
  %419 = load %"class.blink::Node"*, %"class.blink::Node"** %418, align 8
  %420 = icmp eq %"class.blink::Node"* %419, null
  br i1 %420, label %421, label %427

421:                                              ; preds = %416, %411, %408
  %422 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %409, i64 0, i32 5, i32 0, i32 0
  %423 = load %"class.blink::Node"*, %"class.blink::Node"** %422, align 8
  %424 = icmp eq %"class.blink::Node"* %423, null
  br i1 %424, label %425, label %427

425:                                              ; preds = %421
  %426 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %409) #9
  br label %427

427:                                              ; preds = %416, %421, %425
  %428 = phi %"class.blink::Node"* [ %426, %425 ], [ %423, %421 ], [ %419, %416 ]
  store %"class.blink::Node"* %428, %"class.blink::Node"** %17, align 8
  %429 = icmp eq %"class.blink::Node"* %428, %318
  br i1 %429, label %376, label %396

430:                                              ; preds = %381, %778
  %431 = phi %"class.blink::Node"* [ null, %381 ], [ %780, %778 ]
  %432 = phi %"class.blink::Node"* [ %365, %381 ], [ %779, %778 ]
  %433 = icmp eq %"class.blink::Node"* %432, null
  br i1 %433, label %445, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %432, i64 0, i32 1
  %436 = load i32, i32* %435, align 8
  %437 = and i32 %436, 2
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %445, label %439

439:                                              ; preds = %434
  %440 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %432, i64 1
  %441 = bitcast %"class.blink::Node"* %440 to %"class.blink::Node"**
  %442 = load %"class.blink::Node"*, %"class.blink::Node"** %441, align 8
  %443 = icmp eq %"class.blink::Node"* %442, null
  br i1 %443, label %445, label %444

444:                                              ; preds = %439
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #9
  store %"class.blink::HTMLElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLElement"*), %"class.blink::HTMLElement"** %20, align 8
  br label %458

445:                                              ; preds = %439, %434, %430
  %446 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %432, i64 0, i32 5, i32 0, i32 0
  %447 = load %"class.blink::Node"*, %"class.blink::Node"** %446, align 8
  %448 = icmp eq %"class.blink::Node"* %447, null
  br i1 %448, label %449, label %451

449:                                              ; preds = %445
  %450 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %432) #9
  br label %451

451:                                              ; preds = %445, %449
  %452 = phi %"class.blink::Node"* [ %450, %449 ], [ %447, %445 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #9
  store %"class.blink::HTMLElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLElement"*), %"class.blink::HTMLElement"** %20, align 8
  br i1 %433, label %453, label %455

453:                                              ; preds = %451
  %454 = load i32, i32* inttoptr (i64 16 to i32*), align 16
  br label %468

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %432, i64 0, i32 1
  %457 = load i32, i32* %456, align 8
  br label %458

458:                                              ; preds = %455, %444
  %459 = phi i32 [ %436, %444 ], [ %457, %455 ]
  %460 = phi %"class.blink::Node"* [ %442, %444 ], [ %452, %455 ]
  %461 = and i32 %459, 48
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %468

463:                                              ; preds = %458
  %464 = bitcast %"class.blink::Node"* %432 to %"class.blink::HTMLElement"*
  store %"class.blink::Node"* %432, %"class.blink::Node"** %383, align 8
  %465 = call zeroext i1 @_ZNK5blink17ApplyStyleCommand20ElementFullySelectedERKNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESA_(%"class.blink::ApplyStyleCommand"* undef, %"class.blink::HTMLElement"* nonnull dereferenceable(104) %464, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5)
  br i1 %465, label %466, label %778

466:                                              ; preds = %463
  %467 = load %"class.blink::Element"*, %"class.blink::Element"** %386, align 8
  br label %503

468:                                              ; preds = %458, %453
  %469 = phi i32 [ %454, %453 ], [ %459, %458 ]
  %470 = phi %"class.blink::Node"* [ %452, %453 ], [ %460, %458 ]
  store %"class.blink::HTMLElement"* null, %"class.blink::HTMLElement"** %20, align 8
  %471 = and i32 %469, 12
  %472 = icmp eq i32 %471, 4
  br i1 %472, label %473, label %778

473:                                              ; preds = %468
  %474 = and i32 %469, 1
  %475 = icmp eq i32 %474, 0
  %476 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %432, i64 0, i32 6, i32 0, i32 0
  br i1 %475, label %481, label %477

477:                                              ; preds = %473
  %478 = bitcast %"class.blink::NodeData"** %476 to %"class.blink::NodeRareData"**
  %479 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %478, align 8
  %480 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %479, i64 0, i32 1, i32 0, i32 0
  br label %483

481:                                              ; preds = %473
  %482 = bitcast %"class.blink::NodeData"** %476 to %"class.blink::NodeRenderingData"**
  br label %483

483:                                              ; preds = %477, %481
  %484 = phi %"class.blink::NodeRenderingData"** [ %480, %477 ], [ %482, %481 ]
  %485 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %484, align 8
  %486 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %485, i64 0, i32 1
  %487 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %486, align 8
  %488 = icmp eq %"class.blink::LayoutObject"* %487, null
  br i1 %488, label %778, label %489

489:                                              ; preds = %483
  %490 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %432) #9
  %491 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %490, i64 0, i32 0
  %492 = icmp eq %"class.blink::Node"* %491, %431
  br i1 %492, label %778, label %493

493:                                              ; preds = %489
  %494 = load %"class.blink::Document"*, %"class.blink::Document"** %384, align 8
  %495 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %494) #9
  %496 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %495, i64 0, i32 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %432, %"class.blink::Node"* %432, %"class.blink::Element"* %496, %"class.blink::EditingState"* %2)
  %497 = load i8, i8* %385, align 1, !range !2
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %500, label %499

499:                                              ; preds = %493
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382) #9
  br label %801

500:                                              ; preds = %493
  %501 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %495, i64 0, i32 0
  store %"class.blink::HTMLElement"* %501, %"class.blink::HTMLElement"** %20, align 8
  %502 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %495, i64 0, i32 0, i32 0
  br label %503

503:                                              ; preds = %466, %500
  %504 = phi %"class.blink::Element"* [ %467, %466 ], [ %502, %500 ]
  %505 = phi %"class.blink::Node"* [ %460, %466 ], [ %470, %500 ]
  %506 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %504, i64 0, i32 3, i32 0, i32 0
  %507 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %506, align 8
  %508 = icmp eq %"class.blink::ElementData"* %507, null
  br i1 %508, label %513, label %509

509:                                              ; preds = %503
  %510 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %507, i64 0, i32 1, i32 0, i32 0
  %511 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %510, align 8
  %512 = icmp eq %"class.blink::CSSPropertyValueSet"* %511, null
  br i1 %512, label %513, label %520

513:                                              ; preds = %503, %509
  %514 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #9
  %515 = bitcast i8* %514 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %515, i8 zeroext 1) #9
  %516 = getelementptr inbounds i8, i8* %514, i64 -4
  %517 = bitcast i8* %516 to i16*
  %518 = load atomic i16, i16* %517 monotonic, align 2
  %519 = or i16 %518, 1
  store atomic i16 %519, i16* %517 release, align 2
  br label %522

520:                                              ; preds = %509
  %521 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* nonnull %511) #9
  br label %522

522:                                              ; preds = %513, %520
  %523 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %521, %520 ], [ %515, %513 ]
  %524 = call float @_ZN5blink17ApplyStyleCommand16ComputedFontSizeEPNS_4NodeE(%"class.blink::ApplyStyleCommand"* undef, %"class.blink::Node"* %432)
  %525 = ptrtoint %"class.blink::Node"* %432 to i64
  %526 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %367, align 8
  %527 = icmp eq %"struct.WTF::KeyValuePair.700"* %526, null
  br i1 %527, label %592, label %528

528:                                              ; preds = %522
  %529 = load i32, i32* %368, align 8
  %530 = add i32 %529, -1
  %531 = zext i32 %530 to i64
  %532 = shl i64 %525, 32
  %533 = xor i64 %532, -1
  %534 = add i64 %533, %525
  %535 = lshr i64 %534, 22
  %536 = xor i64 %535, %534
  %537 = shl i64 %536, 13
  %538 = xor i64 %537, -1
  %539 = add i64 %536, %538
  %540 = lshr i64 %539, 8
  %541 = xor i64 %540, %539
  %542 = mul i64 %541, 9
  %543 = lshr i64 %542, 15
  %544 = xor i64 %543, %542
  %545 = shl i64 %544, 27
  %546 = xor i64 %545, -1
  %547 = add i64 %544, %546
  %548 = lshr i64 %547, 31
  %549 = xor i64 %548, %547
  %550 = trunc i64 %549 to i32
  %551 = and i32 %530, %550
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %526, i64 %552
  %554 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %553, i64 0, i32 0, i32 0, i32 0
  %555 = load %"class.blink::Node"*, %"class.blink::Node"** %554, align 8
  %556 = icmp eq %"class.blink::Node"* %555, %432
  br i1 %556, label %586, label %557

557:                                              ; preds = %528
  %558 = xor i32 %550, -1
  %559 = lshr i32 %550, 23
  %560 = add i32 %559, %558
  %561 = shl i32 %560, 12
  %562 = xor i32 %561, %560
  %563 = lshr i32 %562, 7
  %564 = xor i32 %563, %562
  %565 = shl i32 %564, 2
  %566 = xor i32 %565, %564
  %567 = lshr i32 %566, 20
  %568 = xor i32 %567, %566
  %569 = or i32 %568, 1
  %570 = zext i32 %569 to i64
  br label %571

571:                                              ; preds = %577, %557
  %572 = phi i64 [ %552, %557 ], [ %581, %577 ]
  %573 = phi i64 [ 0, %557 ], [ %579, %577 ]
  %574 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %526, i64 %572, i32 0, i32 0, i32 0
  %575 = load %"class.blink::Node"*, %"class.blink::Node"** %574, align 8
  %576 = icmp eq %"class.blink::Node"* %575, null
  br i1 %576, label %592, label %577

577:                                              ; preds = %571
  %578 = icmp eq i64 %573, 0
  %579 = select i1 %578, i64 %570, i64 %573
  %580 = add i64 %579, %572
  %581 = and i64 %580, %531
  %582 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %526, i64 %581
  %583 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %582, i64 0, i32 0, i32 0, i32 0
  %584 = load %"class.blink::Node"*, %"class.blink::Node"** %583, align 8
  %585 = icmp eq %"class.blink::Node"* %584, %432
  br i1 %585, label %586, label %571

586:                                              ; preds = %577, %528
  %587 = phi %"struct.WTF::KeyValuePair.700"* [ %553, %528 ], [ %582, %577 ]
  %588 = icmp eq %"struct.WTF::KeyValuePair.700"* %587, null
  br i1 %588, label %592, label %589

589:                                              ; preds = %586
  %590 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %587, i64 0, i32 1
  %591 = load float, float* %590, align 4
  br label %592

592:                                              ; preds = %571, %522, %586, %589
  %593 = phi float [ %591, %589 ], [ 0x7FF0000000000000, %586 ], [ 0x7FF0000000000000, %522 ], [ 0x7FF0000000000000, %571 ]
  %594 = load float, float* %24, align 4
  %595 = fadd float %593, %594
  %596 = fcmp ogt float %595, 0x3FB99999A0000000
  %597 = select i1 %596, float %595, float 0x3FB99999A0000000
  %598 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %523, i64 0, i32 0
  %599 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %598, i32 8) #9
  %600 = icmp eq %"class.blink::CSSValue"* %599, null
  br i1 %600, label %605, label %601

601:                                              ; preds = %592
  %602 = load %"class.blink::Element"*, %"class.blink::Element"** %386, align 8
  %603 = call zeroext i1 @_ZN5blink7Element25RemoveInlineStylePropertyENS_13CSSPropertyIDE(%"class.blink::Element"* %602, i32 8) #9
  %604 = call float @_ZN5blink17ApplyStyleCommand16ComputedFontSizeEPNS_4NodeE(%"class.blink::ApplyStyleCommand"* undef, %"class.blink::Node"* %432)
  br label %605

605:                                              ; preds = %592, %601
  %606 = phi float [ %604, %601 ], [ %524, %592 ]
  %607 = fcmp une float %606, %597
  br i1 %607, label %608, label %671

608:                                              ; preds = %605
  %609 = fpext float %597 to double
  %610 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %609, i32 5) #9
  %611 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %610, i64 0, i32 0, i32 0
  call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %523, i32 8, %"class.blink::CSSValue"* dereferenceable(3) %611, i1 zeroext false) #9
  %612 = load %"class.blink::Element"*, %"class.blink::Element"** %386, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389) #9
  %613 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %598) #9
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %638, label %615

615:                                              ; preds = %608
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 acquire, align 4
  %618 = and i32 %617, 4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %636, label %620

620:                                              ; preds = %615
  %621 = load atomic i32, i32* %616 monotonic, align 4
  %622 = and i32 %621, 2
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %638

624:                                              ; preds = %620
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %626 = load i32, i32* %625, align 4
  %627 = zext i32 %626 to i33
  %628 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %627, i33 1) #9
  %629 = extractvalue { i33, i1 } %628, 1
  %630 = extractvalue { i33, i1 } %628, 0
  %631 = icmp slt i33 %630, 0
  %632 = or i1 %629, %631
  br i1 %632, label %633, label %634, !prof !9

633:                                              ; preds = %624
  call void @llvm.trap() #9
  unreachable

634:                                              ; preds = %624
  %635 = trunc i33 %630 to i32
  store i32 %635, i32* %625, align 4
  br label %638

636:                                              ; preds = %615
  %637 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %613) #9
  br label %638

638:                                              ; preds = %608, %620, %634, %636
  %639 = phi %"class.WTF::StringImpl"* [ %637, %636 ], [ %613, %620 ], [ %613, %634 ], [ null, %608 ]
  %640 = ptrtoint %"class.WTF::StringImpl"* %639 to i64
  store i64 %640, i64* %390, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %387, %"class.blink::Element"* %612, %"class.blink::QualifiedName"* dereferenceable(8) %388, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %21) #9
  %641 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %642 = icmp eq %"class.WTF::StringImpl"* %641, null
  br i1 %642, label %656, label %643

643:                                              ; preds = %638
  %644 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %641, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %645 = load atomic i32, i32* %644 monotonic, align 4
  %646 = and i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %641, i64 0, i32 0
  %649 = load i32, i32* %648, align 4
  br i1 %647, label %650, label %652

650:                                              ; preds = %643
  %651 = add i32 %649, -1
  store i32 %651, i32* %648, align 4
  br label %652

652:                                              ; preds = %650, %643
  %653 = phi i32 [ %651, %650 ], [ %649, %643 ]
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %656

655:                                              ; preds = %652
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %641) #9
  br label %656

656:                                              ; preds = %638, %652, %655
  br i1 %614, label %670, label %657

657:                                              ; preds = %656
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = load atomic i32, i32* %658 monotonic, align 4
  %660 = and i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %663 = load i32, i32* %662, align 4
  br i1 %661, label %664, label %666

664:                                              ; preds = %657
  %665 = add i32 %663, -1
  store i32 %665, i32* %662, align 4
  br label %666

666:                                              ; preds = %664, %657
  %667 = phi i32 [ %665, %664 ], [ %663, %657 ]
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %670

669:                                              ; preds = %666
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #9
  br label %670

670:                                              ; preds = %656, %666, %669
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #9
  br label %671

671:                                              ; preds = %670, %605
  %672 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %523, null
  br i1 %672, label %673, label %675

673:                                              ; preds = %671
  %674 = load i32, i32* null, align 536870912
  br label %682

675:                                              ; preds = %671
  %676 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %523, i64 0, i32 0, i32 0
  %677 = load i32, i32* %676, align 4
  %678 = icmp sgt i32 %677, -1
  br i1 %678, label %682, label %679

679:                                              ; preds = %675
  %680 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %598, i64 7, i32 0
  %681 = load i32, i32* %680, align 4
  br label %685

682:                                              ; preds = %675, %673
  %683 = phi i32 [ %674, %673 ], [ %677, %675 ]
  %684 = and i32 %683, 268435455
  br label %685

685:                                              ; preds = %679, %682
  %686 = phi i32 [ %684, %682 ], [ %681, %679 ]
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %688, label %778

688:                                              ; preds = %685
  %689 = load %"class.blink::Element"*, %"class.blink::Element"** %386, align 8
  call void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"* %387, %"class.blink::Element"* %689, %"class.blink::QualifiedName"* dereferenceable(8) %388) #9
  %690 = load %"class.blink::Node"*, %"class.blink::Node"** %383, align 8
  %691 = icmp eq %"class.blink::Node"* %690, null
  br i1 %691, label %778, label %692

692:                                              ; preds = %688
  %693 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %690, i64 0, i32 1
  %694 = load i32, i32* %693, align 8
  %695 = and i32 %694, 48
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %778

697:                                              ; preds = %692
  %698 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %393, align 8
  %699 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %690, i64 1, i32 2
  %700 = bitcast %"class.blink::Member"* %699 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %701 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %700, align 8
  %702 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %701, i64 0, i32 3, i32 0, i32 0, i32 0
  %703 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %702, align 8
  %704 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %698, i64 0, i32 3, i32 0, i32 0, i32 0
  %705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %704, align 8
  %706 = icmp eq %"class.WTF::StringImpl"* %703, %705
  br i1 %706, label %707, label %778

707:                                              ; preds = %697
  %708 = bitcast %"class.blink::Node"* %690 to %"class.blink::Element"*
  %709 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %690, i64 1, i32 3
  %710 = bitcast %"class.blink::Member.0"* %709 to %"class.blink::ElementData"**
  %711 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %710, align 8
  %712 = icmp eq %"class.blink::ElementData"* %711, null
  br i1 %712, label %759, label %713

713:                                              ; preds = %707
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %708) #9
  %714 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %710, align 8
  %715 = icmp eq %"class.blink::ElementData"* %714, null
  br i1 %715, label %716, label %718

716:                                              ; preds = %713
  %717 = load i32, i32* null, align 536870912
  br label %727

718:                                              ; preds = %713
  %719 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %714, i64 0, i32 0, i32 0, i32 0
  %720 = load i32, i32* %719, align 4
  %721 = and i32 %720, 1
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %727, label %723

723:                                              ; preds = %718
  %724 = bitcast %"class.blink::ElementData"* %714 to %"class.blink::UniqueElementData"*
  %725 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %724, i64 0, i32 2, i32 0, i32 0, i32 2
  %726 = load i32, i32* %725, align 4
  br label %731

727:                                              ; preds = %718, %716
  %728 = phi i32 [ %717, %716 ], [ %720, %718 ]
  %729 = lshr i32 %728, 1
  %730 = and i32 %729, 268435455
  br label %731

731:                                              ; preds = %727, %723
  %732 = phi i32 [ %730, %727 ], [ %726, %723 ]
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %759, label %734

734:                                              ; preds = %731
  %735 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %708, %"class.blink::QualifiedName"* dereferenceable(8) %388) #9
  br i1 %735, label %736, label %756

736:                                              ; preds = %734
  %737 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %710, align 8
  %738 = icmp eq %"class.blink::ElementData"* %737, null
  br i1 %738, label %755, label %739

739:                                              ; preds = %736
  %740 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %737, i64 0, i32 1, i32 0, i32 0
  %741 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %740, align 8
  %742 = icmp eq %"class.blink::CSSPropertyValueSet"* %741, null
  br i1 %742, label %755, label %743

743:                                              ; preds = %739
  %744 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %741, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  %746 = icmp sgt i32 %745, -1
  br i1 %746, label %750, label %747

747:                                              ; preds = %743
  %748 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %741, i64 7, i32 0
  %749 = load i32, i32* %748, align 4
  br label %752

750:                                              ; preds = %743
  %751 = and i32 %745, 268435455
  br label %752

752:                                              ; preds = %750, %747
  %753 = phi i32 [ %751, %750 ], [ %749, %747 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752, %739, %736
  br label %756

756:                                              ; preds = %734, %752, %755
  %757 = phi i32 [ 1, %755 ], [ 0, %752 ], [ 0, %734 ]
  %758 = icmp eq i32 %757, %732
  br i1 %758, label %759, label %778

759:                                              ; preds = %731, %707, %756
  %760 = load i32, i32* %380, align 4
  %761 = load i32, i32* %379, align 8
  %762 = icmp eq i32 %760, %761
  br i1 %762, label %777, label %763, !prof !9

763:                                              ; preds = %759
  %764 = load %"class.blink::Member.707"*, %"class.blink::Member.707"** %378, align 8
  %765 = zext i32 %760 to i64
  %766 = getelementptr inbounds %"class.blink::Member.707", %"class.blink::Member.707"* %764, i64 %765
  %767 = load i64, i64* %394, align 8
  %768 = bitcast %"class.blink::Member.707"* %766 to i64*
  store atomic i64 %767, i64* %768 monotonic, align 8
  %769 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %774, label %771

771:                                              ; preds = %763
  %772 = inttoptr i64 %767 to i8*
  %773 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %772) #9
  br label %774

774:                                              ; preds = %771, %763
  %775 = load i32, i32* %380, align 4
  %776 = add i32 %775, 1
  store i32 %776, i32* %380, align 4
  br label %778

777:                                              ; preds = %759
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.704"* nonnull %395, %"class.blink::HTMLElement"** nonnull dereferenceable(8) %20) #9
  br label %778

778:                                              ; preds = %688, %692, %697, %685, %756, %774, %777, %468, %483, %489, %463
  %779 = phi %"class.blink::Node"* [ %460, %463 ], [ %470, %489 ], [ %470, %483 ], [ %470, %468 ], [ %505, %777 ], [ %505, %774 ], [ %505, %756 ], [ %505, %685 ], [ %505, %697 ], [ %505, %692 ], [ %505, %688 ]
  %780 = phi %"class.blink::Node"* [ %431, %463 ], [ %431, %489 ], [ %431, %483 ], [ %431, %468 ], [ %432, %777 ], [ %432, %774 ], [ %432, %756 ], [ %432, %685 ], [ %432, %697 ], [ %432, %692 ], [ %432, %688 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382) #9
  %781 = icmp eq %"class.blink::Node"* %779, %318
  br i1 %781, label %782, label %430

782:                                              ; preds = %778
  %783 = load %"class.blink::Member.707"*, %"class.blink::Member.707"** %378, align 8
  %784 = load i32, i32* %380, align 4
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds %"class.blink::Member.707", %"class.blink::Member.707"* %783, i64 %785
  %787 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %788 = icmp eq i32 %784, 0
  br i1 %788, label %801, label %789

789:                                              ; preds = %782
  %790 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  br label %791

791:                                              ; preds = %791, %789
  %792 = phi %"class.blink::Member.707"* [ %783, %789 ], [ %798, %791 ]
  %793 = getelementptr inbounds %"class.blink::Member.707", %"class.blink::Member.707"* %792, i64 0, i32 0, i32 0
  %794 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %793, align 8
  %795 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %794, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %787, %"class.blink::Node"* %795, %"class.blink::EditingState"* %2, i32 1) #9
  %796 = load i8, i8* %790, align 1, !range !2
  %797 = icmp ne i8 %796, 0
  %798 = getelementptr inbounds %"class.blink::Member.707", %"class.blink::Member.707"* %792, i64 1
  %799 = icmp eq %"class.blink::Member.707"* %798, %786
  %800 = or i1 %797, %799
  br i1 %800, label %801, label %791

801:                                              ; preds = %791, %376, %782, %499
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %377) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %366) #9
  br label %802

802:                                              ; preds = %801, %330, %361, %193, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  br label %803

803:                                              ; preds = %3, %23, %802
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand16ApplyInlineStyleEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::IgnorableEditingAbortState", align 1
  %7 = alloca %"class.blink::IgnorableEditingAbortState", align 1
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::PositionTemplate", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.blink::PositionTemplate", align 8
  %15 = alloca %"class.blink::PositionTemplate", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.blink::PositionTemplate", align 8
  %18 = alloca %"class.blink::PositionTemplate", align 8
  %19 = alloca %"class.blink::PositionTemplate", align 8
  %20 = alloca %"class.blink::PositionTemplate", align 8
  %21 = alloca %"class.blink::PositionTemplate", align 8
  %22 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %23 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %24 = alloca %"class.blink::PositionTemplate", align 8
  %25 = alloca %"class.blink::PositionTemplate", align 8
  %26 = alloca %"class.blink::PositionTemplate", align 8
  %27 = alloca %"class.blink::PositionTemplate", align 8
  %28 = alloca %"class.blink::PositionTemplate", align 8
  %29 = alloca %"class.blink::PositionTemplate", align 8
  %30 = alloca %"class.blink::PositionTemplate", align 8
  %31 = alloca %"class.blink::PositionTemplate", align 8
  %32 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %33, i32 7) #9
  %34 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 2
  %38 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 6
  %39 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  %40 = load i8, i8* %38, align 8, !range !2, !noalias !40
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::SelectionForUndoStep"* %43) #9
  br label %46

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::PositionTemplate"* dereferenceable(16) %45) #9
  br label %46

46:                                               ; preds = %42, %44
  %47 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %50 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 2
  %51 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  %52 = load i8, i8* %38, align 8, !range !2, !noalias !43
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::SelectionForUndoStep"* %55) #9
  br label %58

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* dereferenceable(16) %57) #9
  br label %58

58:                                               ; preds = %54, %56
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  %63 = or i1 %60, %62
  br i1 %63, label %681, label %64

64:                                               ; preds = %58
  %65 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  %66 = icmp slt i16 %65, 0
  br i1 %66, label %67, label %93

67:                                               ; preds = %64
  %68 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %70 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  %71 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %67
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #9
  br label %79

79:                                               ; preds = %67, %76
  %80 = bitcast i32* %49 to i64*
  %81 = bitcast i32* %36 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %84 = load i64, i64* %83, align 8
  store atomic i64 %84, i64* %71 monotonic, align 8
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %79
  %88 = inttoptr i64 %84 to i8*
  %89 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #9
  br label %90

90:                                               ; preds = %79, %87
  %91 = bitcast i32* %69 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %93

93:                                               ; preds = %90, %64
  %94 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %8) #9
  %95 = load i32, i32* %37, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %177

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %94, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 12
  %101 = icmp eq i32 %100, 4
  br i1 %101, label %102, label %177

102:                                              ; preds = %97
  %103 = load i32, i32* %36, align 8
  %104 = call i32 @_ZN5blink14CaretMinOffsetEPKNS_4NodeE(%"class.blink::Node"* %94) #9
  %105 = icmp sgt i32 %103, %104
  br i1 %105, label %106, label %177

106:                                              ; preds = %102
  %107 = call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %94) #9
  %108 = icmp slt i32 %103, %107
  br i1 %108, label %109, label %177

109:                                              ; preds = %106
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %111 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %110) #9
  %112 = icmp eq %"class.blink::ContainerNode"* %111, null
  br i1 %112, label %124, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %111, i64 0, i32 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 60
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = bitcast %"class.blink::ContainerNode"* %111 to %"class.blink::HTMLElement"*
  %120 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %120) #9
  call void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %7) #9
  %121 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %7, i64 0, i32 0
  %122 = call zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* nonnull %119, %"class.blink::EditingState"* nonnull %121, i32 2, %"class.blink::EditingStyle"* null) #9
  call void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %120) #9
  br i1 %122, label %123, label %124

123:                                              ; preds = %118
  call void @_ZN5blink17ApplyStyleCommand23SplitTextElementAtStartERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9)
  br label %125

124:                                              ; preds = %113, %109, %118
  call void @_ZN5blink17ApplyStyleCommand16SplitTextAtStartERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9)
  br label %125

125:                                              ; preds = %124, %123
  %126 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #9
  %127 = load i8, i8* %38, align 8, !range !2, !noalias !46
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::SelectionForUndoStep"* %130) #9
  br label %133

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::PositionTemplate"* dereferenceable(16) %132) #9
  br label %133

133:                                              ; preds = %129, %131
  %134 = bitcast %"class.blink::PositionTemplate"* %11 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = inttoptr i64 %135 to i8*
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #9
  br label %142

142:                                              ; preds = %133, %139
  %143 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  %144 = bitcast i32* %143 to i64*
  %145 = bitcast i32* %36 to i64*
  %146 = load i64, i64* %144, align 8
  store i64 %146, i64* %145, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #9
  %147 = bitcast %"class.blink::PositionTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #9
  %148 = load i8, i8* %38, align 8, !range !2, !noalias !49
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %12, %"class.blink::SelectionForUndoStep"* %151) #9
  br label %154

152:                                              ; preds = %142
  %153 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %12, %"class.blink::PositionTemplate"* dereferenceable(16) %153) #9
  br label %154

154:                                              ; preds = %150, %152
  %155 = bitcast %"class.blink::PositionTemplate"* %12 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  store atomic i64 %156, i64* %157 monotonic, align 8
  %158 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %159 = icmp eq i32 %158, 0
  %160 = inttoptr i64 %156 to %"class.blink::Node"*
  br i1 %159, label %165, label %161

161:                                              ; preds = %154
  %162 = inttoptr i64 %156 to i8*
  %163 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %162) #9
  %164 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  br label %165

165:                                              ; preds = %154, %161
  %166 = phi %"class.blink::Node"* [ %160, %154 ], [ %164, %161 ]
  %167 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %12, i64 0, i32 1
  %168 = bitcast i32* %167 to i64*
  %169 = bitcast i32* %49 to i64*
  %170 = load i64, i64* %168, align 8
  store i64 %170, i64* %169, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #9
  %171 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %172 = icmp eq %"class.blink::Node"* %171, null
  %173 = icmp eq %"class.blink::Node"* %166, null
  %174 = or i1 %172, %173
  br i1 %174, label %681, label %175

175:                                              ; preds = %165
  %176 = call fastcc %"class.blink::ContainerNode"* @_ZN5blinkL24DummySpanAncestorForNodeEPKNS_4NodeE(%"class.blink::Node"* nonnull %171)
  br label %177

177:                                              ; preds = %102, %93, %97, %175, %106
  %178 = phi i1 [ true, %175 ], [ false, %106 ], [ false, %97 ], [ false, %93 ], [ false, %102 ]
  %179 = phi %"class.blink::ContainerNode"* [ %176, %175 ], [ null, %106 ], [ null, %97 ], [ null, %93 ], [ null, %102 ]
  %180 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %9) #9
  %181 = load i32, i32* %50, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %261

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %180, i64 0, i32 1
  %185 = load i32, i32* %184, align 8
  %186 = and i32 %185, 12
  %187 = icmp eq i32 %186, 4
  br i1 %187, label %188, label %261

188:                                              ; preds = %183
  %189 = load i32, i32* %49, align 8
  %190 = call i32 @_ZN5blink14CaretMinOffsetEPKNS_4NodeE(%"class.blink::Node"* %180) #9
  %191 = icmp sgt i32 %189, %190
  br i1 %191, label %192, label %261

192:                                              ; preds = %188
  %193 = call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %180) #9
  %194 = icmp slt i32 %189, %193
  br i1 %194, label %195, label %261

195:                                              ; preds = %192
  %196 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %197 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %196) #9
  %198 = icmp eq %"class.blink::ContainerNode"* %197, null
  br i1 %198, label %210, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %197, i64 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 60
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %210

204:                                              ; preds = %199
  %205 = bitcast %"class.blink::ContainerNode"* %197 to %"class.blink::HTMLElement"*
  %206 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %206) #9
  call void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %6) #9
  %207 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %6, i64 0, i32 0
  %208 = call zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* nonnull %205, %"class.blink::EditingState"* nonnull %207, i32 2, %"class.blink::EditingStyle"* null) #9
  call void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %206) #9
  br i1 %208, label %209, label %210

209:                                              ; preds = %204
  call void @_ZN5blink17ApplyStyleCommand21SplitTextElementAtEndERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9)
  br label %211

210:                                              ; preds = %199, %195, %204
  call void @_ZN5blink17ApplyStyleCommand14SplitTextAtEndERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9)
  br label %211

211:                                              ; preds = %210, %209
  %212 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212) #9
  %213 = load i8, i8* %38, align 8, !range !2, !noalias !52
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %13, %"class.blink::SelectionForUndoStep"* %216) #9
  br label %219

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %13, %"class.blink::PositionTemplate"* dereferenceable(16) %218) #9
  br label %219

219:                                              ; preds = %215, %217
  %220 = bitcast %"class.blink::PositionTemplate"* %13 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  store atomic i64 %221, i64* %222 monotonic, align 8
  %223 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = inttoptr i64 %221 to i8*
  %227 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %226) #9
  br label %228

228:                                              ; preds = %219, %225
  %229 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 1
  %230 = bitcast i32* %229 to i64*
  %231 = bitcast i32* %36 to i64*
  %232 = load i64, i64* %230, align 8
  store i64 %232, i64* %231, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212) #9
  %233 = bitcast %"class.blink::PositionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233) #9
  %234 = load i8, i8* %38, align 8, !range !2, !noalias !55
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %14, %"class.blink::SelectionForUndoStep"* %237) #9
  br label %240

238:                                              ; preds = %228
  %239 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %14, %"class.blink::PositionTemplate"* dereferenceable(16) %239) #9
  br label %240

240:                                              ; preds = %236, %238
  %241 = bitcast %"class.blink::PositionTemplate"* %14 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  store atomic i64 %242, i64* %243 monotonic, align 8
  %244 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = inttoptr i64 %242 to i8*
  %248 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %247) #9
  br label %249

249:                                              ; preds = %240, %246
  %250 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %14, i64 0, i32 1
  %251 = bitcast i32* %250 to i64*
  %252 = bitcast i32* %49 to i64*
  %253 = load i64, i64* %251, align 8
  store i64 %253, i64* %252, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233) #9
  %254 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %255 = icmp eq %"class.blink::Node"* %254, null
  br i1 %255, label %681, label %256

256:                                              ; preds = %249
  %257 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %258 = icmp eq %"class.blink::Node"* %257, null
  br i1 %258, label %681, label %259

259:                                              ; preds = %256
  %260 = call fastcc %"class.blink::ContainerNode"* @_ZN5blinkL24DummySpanAncestorForNodeEPKNS_4NodeE(%"class.blink::Node"* nonnull %257)
  br label %261

261:                                              ; preds = %188, %177, %183, %259, %192
  %262 = phi i1 [ true, %259 ], [ false, %192 ], [ false, %183 ], [ false, %177 ], [ false, %188 ]
  %263 = phi %"class.blink::ContainerNode"* [ %260, %259 ], [ null, %192 ], [ null, %183 ], [ null, %177 ], [ null, %188 ]
  %264 = bitcast %"class.blink::PositionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %264) #9
  %265 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %15, i64 0, i32 0, i32 0, i32 0
  %266 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %15, i64 0, i32 1
  %267 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %15, i64 0, i32 2
  %268 = bitcast %"class.blink::PositionTemplate"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %268, i8 -86, i64 16, i1 false)
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, i32 1) #9
  %269 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %269) #9
  store i32 0, i32* %16, align 4
  %270 = call zeroext i1 @_ZNK5blink12EditingStyle16GetTextDirectionERN9mojo_base5mojom13TextDirectionE(%"class.blink::EditingStyle"* %1, i32* nonnull dereferenceable(4) %16) #9
  br i1 %270, label %271, label %386

271:                                              ; preds = %261
  %272 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %273 = load i32, i32* %16, align 4
  %274 = call %"class.blink::HTMLElement"* @_ZN5blink17ApplyStyleCommand29SplitAncestorsWithUnicodeBidiEPNS_4NodeEbN9mojo_base5mojom13TextDirectionE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %272, i1 zeroext true, i32 %273)
  %275 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %276 = load i32, i32* %16, align 4
  %277 = call %"class.blink::HTMLElement"* @_ZN5blink17ApplyStyleCommand29SplitAncestorsWithUnicodeBidiEPNS_4NodeEbN9mojo_base5mojom13TextDirectionE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %275, i1 zeroext false, i32 %276)
  %278 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  call void @_ZN5blink17ApplyStyleCommand33RemoveEmbeddingUpToEnclosingBlockEPNS_4NodeEPNS_11HTMLElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %278, %"class.blink::HTMLElement"* %274, %"class.blink::EditingState"* %2)
  %279 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %280 = load i8, i8* %279, align 1, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %680

282:                                              ; preds = %271
  %283 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  call void @_ZN5blink17ApplyStyleCommand33RemoveEmbeddingUpToEnclosingBlockEPNS_4NodeEPNS_11HTMLElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %283, %"class.blink::HTMLElement"* %277, %"class.blink::EditingState"* %2)
  %284 = load i8, i8* %279, align 1, !range !2
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %680

286:                                              ; preds = %282
  %287 = bitcast %"class.blink::PositionTemplate"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287) #9
  %288 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %17, i64 0, i32 1
  %289 = bitcast %"class.blink::PositionTemplate"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %15) #9
  %290 = icmp eq %"class.blink::HTMLElement"* %274, null
  br i1 %290, label %309, label %291

291:                                              ; preds = %286
  %292 = call zeroext i1 @_ZNK5blink17ApplyStyleCommand20ElementFullySelectedERKNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESA_(%"class.blink::ApplyStyleCommand"* undef, %"class.blink::HTMLElement"* nonnull dereferenceable(104) %274, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9)
  br i1 %292, label %293, label %309

293:                                              ; preds = %291
  %294 = bitcast %"class.blink::PositionTemplate"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %294) #9
  %295 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %274, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %18, %"class.blink::Node"* dereferenceable(64) %295) #9
  %296 = bitcast %"class.blink::PositionTemplate"* %18 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"class.blink::PositionTemplate"* %17 to i64*
  store atomic i64 %297, i64* %298 monotonic, align 8
  %299 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %304, label %301

301:                                              ; preds = %293
  %302 = inttoptr i64 %297 to i8*
  %303 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %302) #9
  br label %304

304:                                              ; preds = %293, %301
  %305 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %18, i64 0, i32 1
  %306 = bitcast i32* %305 to i64*
  %307 = bitcast i32* %288 to i64*
  %308 = load i64, i64* %306, align 8
  store i64 %308, i64* %307, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %294) #9
  br label %309

309:                                              ; preds = %286, %304, %291
  %310 = bitcast %"class.blink::PositionTemplate"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %310) #9
  %311 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %19, i64 0, i32 0, i32 0, i32 0
  %312 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %19, i64 0, i32 1
  %313 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %19, i64 0, i32 2
  %314 = bitcast %"class.blink::PositionTemplate"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %19, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #9
  %315 = icmp eq %"class.blink::HTMLElement"* %277, null
  br i1 %315, label %335, label %316

316:                                              ; preds = %309
  %317 = call zeroext i1 @_ZNK5blink17ApplyStyleCommand20ElementFullySelectedERKNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESA_(%"class.blink::ApplyStyleCommand"* undef, %"class.blink::HTMLElement"* nonnull dereferenceable(104) %277, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9)
  br i1 %317, label %318, label %335

318:                                              ; preds = %316
  %319 = bitcast %"class.blink::PositionTemplate"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %319) #9
  %320 = bitcast %"class.blink::PositionTemplate"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %320) #9
  %321 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %277, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %21, %"class.blink::Node"* dereferenceable(64) %321) #9
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %20, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %21, i32 1) #9
  %322 = bitcast %"class.blink::PositionTemplate"* %20 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %"class.blink::PositionTemplate"* %19 to i64*
  store atomic i64 %323, i64* %324 monotonic, align 8
  %325 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %330, label %327

327:                                              ; preds = %318
  %328 = inttoptr i64 %323 to i8*
  %329 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %328) #9
  br label %330

330:                                              ; preds = %318, %327
  %331 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %20, i64 0, i32 1
  %332 = bitcast i32* %331 to i64*
  %333 = bitcast i32* %312 to i64*
  %334 = load i64, i64* %332, align 8
  store i64 %334, i64* %333, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %320) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %319) #9
  br label %335

335:                                              ; preds = %309, %330, %316
  %336 = load %"class.blink::Node"*, %"class.blink::Node"** %311, align 8
  %337 = icmp eq %"class.blink::Node"* %336, null
  %338 = load %"class.blink::Node"*, %"class.blink::Node"** %265, align 8
  br i1 %337, label %339, label %344

339:                                              ; preds = %335
  %340 = icmp eq %"class.blink::Node"* %338, null
  %341 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %342 = icmp eq %"class.blink::Node"* %341, null
  %343 = and i1 %340, %342
  br i1 %343, label %382, label %369

344:                                              ; preds = %335
  %345 = icmp eq %"class.blink::Node"* %336, %338
  br i1 %345, label %346, label %369

346:                                              ; preds = %344
  %347 = load i32, i32* %313, align 4
  %348 = load i32, i32* %267, align 4
  %349 = icmp eq i32 %347, %348
  br i1 %349, label %350, label %369

350:                                              ; preds = %346
  %351 = icmp eq i32 %347, 0
  br i1 %351, label %352, label %356

352:                                              ; preds = %350
  %353 = load i32, i32* %312, align 8
  %354 = load i32, i32* %266, align 8
  %355 = icmp eq i32 %353, %354
  br i1 %355, label %356, label %369

356:                                              ; preds = %352, %350
  %357 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %358 = icmp eq %"class.blink::Node"* %336, %357
  br i1 %358, label %359, label %369

359:                                              ; preds = %356
  %360 = load i32, i32* %313, align 4
  %361 = load i32, i32* %50, align 4
  %362 = icmp eq i32 %360, %361
  br i1 %362, label %363, label %369

363:                                              ; preds = %359
  %364 = icmp eq i32 %360, 0
  br i1 %364, label %365, label %382

365:                                              ; preds = %363
  %366 = load i32, i32* %312, align 8
  %367 = load i32, i32* %49, align 8
  %368 = icmp eq i32 %366, %367
  br i1 %368, label %382, label %369

369:                                              ; preds = %339, %352, %365, %356, %359, %344, %346
  %370 = call %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"* %1) #9
  %371 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %372 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %371) #9
  %373 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %372, i64 0, i32 6, i32 11
  %374 = load i32, i32* %373, align 8
  %375 = call %"class.blink::EditingStyle"* @_ZN5blink12EditingStyle29ExtractAndRemoveTextDirectionENS_17SecureContextModeE(%"class.blink::EditingStyle"* %370, i32 %374) #9
  %376 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %19) #9
  %377 = icmp slt i16 %376, 1
  br i1 %377, label %378, label %382

378:                                              ; preds = %369
  %379 = bitcast %"class.blink::EphemeralRangeTemplate"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %379) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %19) #9
  call void @_ZN5blink17ApplyStyleCommand17RemoveInlineStyleEPNS_12EditingStyleERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %375, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %22, %"class.blink::EditingState"* %2)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %379) #9
  %380 = load i8, i8* %279, align 1, !range !2
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %382, label %385

382:                                              ; preds = %339, %365, %378, %369, %363
  %383 = phi %"class.blink::EditingStyle"* [ %370, %378 ], [ %370, %369 ], [ null, %365 ], [ null, %363 ], [ null, %339 ]
  %384 = phi %"class.blink::EditingStyle"* [ %375, %378 ], [ %375, %369 ], [ null, %365 ], [ null, %363 ], [ null, %339 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %310) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #9
  br label %386

385:                                              ; preds = %378
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %310) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #9
  br label %680

386:                                              ; preds = %382, %261
  %387 = phi %"class.blink::EditingStyle"* [ null, %261 ], [ %383, %382 ]
  %388 = phi %"class.blink::EditingStyle"* [ null, %261 ], [ %384, %382 ]
  %389 = icmp eq %"class.blink::EditingStyle"* %387, null
  %390 = select i1 %389, %"class.blink::EditingStyle"* %1, %"class.blink::EditingStyle"* %387
  %391 = bitcast %"class.blink::EphemeralRangeTemplate"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %391) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %23, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #9
  call void @_ZN5blink17ApplyStyleCommand17RemoveInlineStyleEPNS_12EditingStyleERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %390, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %23, %"class.blink::EditingState"* %2)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %391) #9
  %392 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %393 = load i8, i8* %392, align 1, !range !2
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %395, label %680

395:                                              ; preds = %386
  %396 = bitcast %"class.blink::PositionTemplate"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %396) #9
  %397 = load i8, i8* %38, align 8, !range !2, !noalias !58
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %401, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %24, %"class.blink::SelectionForUndoStep"* %400) #9
  br label %403

401:                                              ; preds = %395
  %402 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %24, %"class.blink::PositionTemplate"* dereferenceable(16) %402) #9
  br label %403

403:                                              ; preds = %399, %401
  %404 = bitcast %"class.blink::PositionTemplate"* %24 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  store atomic i64 %405, i64* %406 monotonic, align 8
  %407 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %412, label %409

409:                                              ; preds = %403
  %410 = inttoptr i64 %405 to i8*
  %411 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %410) #9
  br label %412

412:                                              ; preds = %403, %409
  %413 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %24, i64 0, i32 1
  %414 = bitcast i32* %413 to i64*
  %415 = bitcast i32* %36 to i64*
  %416 = load i64, i64* %414, align 8
  store i64 %416, i64* %415, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %396) #9
  %417 = bitcast %"class.blink::PositionTemplate"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %417) #9
  %418 = load i8, i8* %38, align 8, !range !2, !noalias !61
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %422, label %420

420:                                              ; preds = %412
  %421 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %25, %"class.blink::SelectionForUndoStep"* %421) #9
  br label %424

422:                                              ; preds = %412
  %423 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %25, %"class.blink::PositionTemplate"* dereferenceable(16) %423) #9
  br label %424

424:                                              ; preds = %420, %422
  %425 = bitcast %"class.blink::PositionTemplate"* %25 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  store atomic i64 %426, i64* %427 monotonic, align 8
  %428 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %433, label %430

430:                                              ; preds = %424
  %431 = inttoptr i64 %426 to i8*
  %432 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %431) #9
  br label %433

433:                                              ; preds = %424, %430
  %434 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %25, i64 0, i32 1
  %435 = bitcast i32* %434 to i64*
  %436 = bitcast i32* %49 to i64*
  %437 = load i64, i64* %435, align 8
  store i64 %437, i64* %436, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %417) #9
  %438 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %439 = icmp eq %"class.blink::Node"* %438, null
  br i1 %439, label %680, label %440

440:                                              ; preds = %433
  %441 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %8) #9
  %442 = xor i1 %441, true
  %443 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %444 = icmp eq %"class.blink::Node"* %443, null
  %445 = or i1 %444, %442
  br i1 %445, label %680, label %446

446:                                              ; preds = %440
  %447 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %9) #9
  br i1 %447, label %448, label %680

448:                                              ; preds = %446
  br i1 %178, label %449, label %493

449:                                              ; preds = %448
  %450 = call zeroext i1 @_ZN5blink17ApplyStyleCommand33MergeStartWithPreviousIfIdenticalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9, %"class.blink::EditingState"* %2)
  %451 = load i8, i8* %392, align 1, !range !2
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %453, label %680

453:                                              ; preds = %449
  br i1 %450, label %454, label %493

454:                                              ; preds = %453
  %455 = bitcast %"class.blink::PositionTemplate"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %455) #9
  %456 = load i8, i8* %38, align 8, !range !2, !noalias !64
  %457 = icmp eq i8 %456, 0
  br i1 %457, label %460, label %458

458:                                              ; preds = %454
  %459 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %26, %"class.blink::SelectionForUndoStep"* %459) #9
  br label %462

460:                                              ; preds = %454
  %461 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %26, %"class.blink::PositionTemplate"* dereferenceable(16) %461) #9
  br label %462

462:                                              ; preds = %458, %460
  %463 = bitcast %"class.blink::PositionTemplate"* %26 to i64*
  %464 = load i64, i64* %463, align 8
  store atomic i64 %464, i64* %406 monotonic, align 8
  %465 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %470, label %467

467:                                              ; preds = %462
  %468 = inttoptr i64 %464 to i8*
  %469 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %468) #9
  br label %470

470:                                              ; preds = %462, %467
  %471 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %26, i64 0, i32 1
  %472 = bitcast i32* %471 to i64*
  %473 = load i64, i64* %472, align 8
  store i64 %473, i64* %415, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %455) #9
  %474 = bitcast %"class.blink::PositionTemplate"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %474) #9
  %475 = load i8, i8* %38, align 8, !range !2, !noalias !67
  %476 = icmp eq i8 %475, 0
  br i1 %476, label %479, label %477

477:                                              ; preds = %470
  %478 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %27, %"class.blink::SelectionForUndoStep"* %478) #9
  br label %481

479:                                              ; preds = %470
  %480 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %27, %"class.blink::PositionTemplate"* dereferenceable(16) %480) #9
  br label %481

481:                                              ; preds = %477, %479
  %482 = bitcast %"class.blink::PositionTemplate"* %27 to i64*
  %483 = load i64, i64* %482, align 8
  store atomic i64 %483, i64* %427 monotonic, align 8
  %484 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %489, label %486

486:                                              ; preds = %481
  %487 = inttoptr i64 %483 to i8*
  %488 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %487) #9
  br label %489

489:                                              ; preds = %481, %486
  %490 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %27, i64 0, i32 1
  %491 = bitcast i32* %490 to i64*
  %492 = load i64, i64* %491, align 8
  store i64 %492, i64* %436, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %474) #9
  br label %493

493:                                              ; preds = %453, %489, %448
  br i1 %262, label %494, label %537

494:                                              ; preds = %493
  %495 = call zeroext i1 @_ZN5blink17ApplyStyleCommand27MergeEndWithNextIfIdenticalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9, %"class.blink::EditingState"* %2)
  %496 = load i8, i8* %392, align 1, !range !2
  %497 = icmp eq i8 %496, 0
  br i1 %497, label %498, label %680

498:                                              ; preds = %494
  %499 = bitcast %"class.blink::PositionTemplate"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %499) #9
  %500 = load i8, i8* %38, align 8, !range !2, !noalias !70
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %504, label %502

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep5StartEv(%"class.blink::PositionTemplate"* nonnull sret %28, %"class.blink::SelectionForUndoStep"* %503) #9
  br label %506

504:                                              ; preds = %498
  %505 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %28, %"class.blink::PositionTemplate"* dereferenceable(16) %505) #9
  br label %506

506:                                              ; preds = %502, %504
  %507 = bitcast %"class.blink::PositionTemplate"* %28 to i64*
  %508 = load i64, i64* %507, align 8
  store atomic i64 %508, i64* %406 monotonic, align 8
  %509 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %514, label %511

511:                                              ; preds = %506
  %512 = inttoptr i64 %508 to i8*
  %513 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %512) #9
  br label %514

514:                                              ; preds = %506, %511
  %515 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %28, i64 0, i32 1
  %516 = bitcast i32* %515 to i64*
  %517 = load i64, i64* %516, align 8
  store i64 %517, i64* %415, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %499) #9
  %518 = bitcast %"class.blink::PositionTemplate"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %518) #9
  %519 = load i8, i8* %38, align 8, !range !2, !noalias !73
  %520 = icmp eq i8 %519, 0
  br i1 %520, label %523, label %521

521:                                              ; preds = %514
  %522 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %29, %"class.blink::SelectionForUndoStep"* %522) #9
  br label %525

523:                                              ; preds = %514
  %524 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %29, %"class.blink::PositionTemplate"* dereferenceable(16) %524) #9
  br label %525

525:                                              ; preds = %521, %523
  %526 = bitcast %"class.blink::PositionTemplate"* %29 to i64*
  %527 = load i64, i64* %526, align 8
  store atomic i64 %527, i64* %427 monotonic, align 8
  %528 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %533, label %530

530:                                              ; preds = %525
  %531 = inttoptr i64 %527 to i8*
  %532 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %531) #9
  br label %533

533:                                              ; preds = %525, %530
  %534 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %29, i64 0, i32 1
  %535 = bitcast i32* %534 to i64*
  %536 = load i64, i64* %535, align 8
  store i64 %536, i64* %436, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %518) #9
  br label %537

537:                                              ; preds = %533, %493
  %538 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %538, i32 7) #9
  br i1 %270, label %539, label %669

539:                                              ; preds = %537
  %540 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %541 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %540, i32 1) #9
  %542 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %541, i64 0, i32 0, i32 0
  %543 = icmp eq %"class.blink::Node"* %540, null
  %544 = icmp eq %"class.blink::Node"* %540, %542
  %545 = or i1 %543, %544
  br i1 %545, label %588, label %546

546:                                              ; preds = %539
  %547 = bitcast %"class.WTF::String"* %4 to i8*
  %548 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br label %549

549:                                              ; preds = %546, %580
  %550 = phi %"class.blink::Node"* [ %582, %580 ], [ %540, %546 ]
  %551 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %550, i64 0, i32 1
  %552 = load i32, i32* %551, align 8
  %553 = and i32 %552, 48
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %580

555:                                              ; preds = %549
  %556 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #9
  %557 = bitcast i8* %556 to %"class.blink::CSSComputedStyleDeclaration"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %548, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %557, %"class.blink::Node"* %550, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %559 = icmp eq %"class.WTF::StringImpl"* %558, null
  br i1 %559, label %573, label %560

560:                                              ; preds = %555
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = load atomic i32, i32* %561 monotonic, align 4
  %563 = and i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  br i1 %564, label %567, label %569

567:                                              ; preds = %560
  %568 = add i32 %566, -1
  store i32 %568, i32* %565, align 4
  br label %569

569:                                              ; preds = %567, %560
  %570 = phi i32 [ %568, %567 ], [ %566, %560 ]
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %572, label %573

572:                                              ; preds = %569
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %558) #9
  br label %573

573:                                              ; preds = %555, %569, %572
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #9
  %574 = getelementptr inbounds i8, i8* %556, i64 -4
  %575 = bitcast i8* %574 to i16*
  %576 = load atomic i16, i16* %575 monotonic, align 2
  %577 = or i16 %576, 1
  store atomic i16 %577, i16* %575 release, align 2
  %578 = bitcast i8* %556 to %"class.blink::CSSStyleDeclaration"*
  %579 = call i32 @_ZN5blink18GetIdentifierValueEPNS_19CSSStyleDeclarationENS_13CSSPropertyIDE(%"class.blink::CSSStyleDeclaration"* %578, i32 378) #9
  switch i32 %579, label %580 [
    i32 473, label %586
    i32 470, label %586
    i32 466, label %586
  ]

580:                                              ; preds = %573, %549
  %581 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %550) #9
  %582 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %581, i64 0, i32 0
  %583 = icmp eq %"class.blink::ContainerNode"* %581, null
  %584 = icmp eq %"class.blink::Node"* %582, %542
  %585 = or i1 %583, %584
  br i1 %585, label %588, label %549

586:                                              ; preds = %573, %573, %573
  %587 = bitcast %"class.blink::Node"* %550 to %"class.blink::HTMLElement"*
  br label %588

588:                                              ; preds = %580, %539, %586
  %589 = phi %"class.blink::HTMLElement"* [ %587, %586 ], [ null, %539 ], [ null, %580 ]
  %590 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %591 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %590, i32 1) #9
  %592 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %591, i64 0, i32 0, i32 0
  %593 = icmp eq %"class.blink::Node"* %590, null
  %594 = icmp eq %"class.blink::Node"* %590, %592
  %595 = or i1 %593, %594
  br i1 %595, label %638, label %596

596:                                              ; preds = %588
  %597 = bitcast %"class.WTF::String"* %5 to i8*
  %598 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %599

599:                                              ; preds = %596, %630
  %600 = phi %"class.blink::Node"* [ %632, %630 ], [ %590, %596 ]
  %601 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %600, i64 0, i32 1
  %602 = load i32, i32* %601, align 8
  %603 = and i32 %602, 48
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %630

605:                                              ; preds = %599
  %606 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #9
  %607 = bitcast i8* %606 to %"class.blink::CSSComputedStyleDeclaration"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %597) #9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %598, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %607, %"class.blink::Node"* %600, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %598, align 8
  %609 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %609, label %623, label %610

610:                                              ; preds = %605
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = load atomic i32, i32* %611 monotonic, align 4
  %613 = and i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 0
  %616 = load i32, i32* %615, align 4
  br i1 %614, label %617, label %619

617:                                              ; preds = %610
  %618 = add i32 %616, -1
  store i32 %618, i32* %615, align 4
  br label %619

619:                                              ; preds = %617, %610
  %620 = phi i32 [ %618, %617 ], [ %616, %610 ]
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %623

622:                                              ; preds = %619
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %608) #9
  br label %623

623:                                              ; preds = %605, %619, %622
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %597) #9
  %624 = getelementptr inbounds i8, i8* %606, i64 -4
  %625 = bitcast i8* %624 to i16*
  %626 = load atomic i16, i16* %625 monotonic, align 2
  %627 = or i16 %626, 1
  store atomic i16 %627, i16* %625 release, align 2
  %628 = bitcast i8* %606 to %"class.blink::CSSStyleDeclaration"*
  %629 = call i32 @_ZN5blink18GetIdentifierValueEPNS_19CSSStyleDeclarationENS_13CSSPropertyIDE(%"class.blink::CSSStyleDeclaration"* %628, i32 378) #9
  switch i32 %629, label %630 [
    i32 473, label %636
    i32 470, label %636
    i32 466, label %636
  ]

630:                                              ; preds = %623, %599
  %631 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %600) #9
  %632 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %631, i64 0, i32 0
  %633 = icmp eq %"class.blink::ContainerNode"* %631, null
  %634 = icmp eq %"class.blink::Node"* %632, %592
  %635 = or i1 %633, %634
  br i1 %635, label %638, label %599

636:                                              ; preds = %623, %623, %623
  %637 = bitcast %"class.blink::Node"* %600 to %"class.blink::HTMLElement"*
  br label %638

638:                                              ; preds = %630, %588, %636
  %639 = phi %"class.blink::HTMLElement"* [ %637, %636 ], [ null, %588 ], [ null, %630 ]
  %640 = icmp ne %"class.blink::HTMLElement"* %589, null
  %641 = icmp ne %"class.blink::HTMLElement"* %639, null
  %642 = or i1 %640, %641
  br i1 %642, label %643, label %669

643:                                              ; preds = %638
  %644 = bitcast %"class.blink::PositionTemplate"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %644) #9
  %645 = bitcast %"class.blink::PositionTemplate"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %645, i8 -86, i64 16, i1 false)
  br i1 %640, label %646, label %648

646:                                              ; preds = %643
  %647 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %589, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %30, %"class.blink::Node"* dereferenceable(64) %647) #9
  br label %649

648:                                              ; preds = %643
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %30, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  br label %649

649:                                              ; preds = %648, %646
  %650 = bitcast %"class.blink::PositionTemplate"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %650) #9
  %651 = bitcast %"class.blink::PositionTemplate"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %651, i8 -86, i64 16, i1 false)
  br i1 %641, label %652, label %654

652:                                              ; preds = %649
  %653 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %639, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %31, %"class.blink::Node"* dereferenceable(64) %653) #9
  br label %655

654:                                              ; preds = %649
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %31, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #9
  br label %655

655:                                              ; preds = %654, %652
  %656 = icmp eq %"class.blink::EditingStyle"* %388, null
  br i1 %656, label %657, label %664

657:                                              ; preds = %655
  %658 = call %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"* %1) #9
  %659 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %660 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %659) #9
  %661 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %660, i64 0, i32 6, i32 11
  %662 = load i32, i32* %661, align 8
  %663 = call %"class.blink::EditingStyle"* @_ZN5blink12EditingStyle29ExtractAndRemoveTextDirectionENS_17SecureContextModeE(%"class.blink::EditingStyle"* %658, i32 %662) #9
  br label %664

664:                                              ; preds = %655, %657
  %665 = phi %"class.blink::EditingStyle"* [ %387, %655 ], [ %658, %657 ]
  %666 = phi %"class.blink::EditingStyle"* [ %388, %655 ], [ %663, %657 ]
  call void @_ZN5blink17ApplyStyleCommand27FixRangeAndApplyInlineStyleEPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %666, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %30, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %31, %"class.blink::EditingState"* %2)
  %667 = load i8, i8* %392, align 1, !range !2
  %668 = icmp eq i8 %667, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %650) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %644) #9
  br i1 %668, label %669, label %680

669:                                              ; preds = %664, %638, %537
  %670 = phi %"class.blink::EditingStyle"* [ %1, %537 ], [ %665, %664 ], [ %1, %638 ]
  %671 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %671, i32 7) #9
  call void @_ZN5blink17ApplyStyleCommand27FixRangeAndApplyInlineStyleEPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %670, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9, %"class.blink::EditingState"* %2)
  %672 = load i8, i8* %392, align 1, !range !2
  %673 = icmp eq i8 %672, 0
  br i1 %673, label %674, label %680

674:                                              ; preds = %669
  call void @_ZN5blink17ApplyStyleCommand30CleanupUnstyledAppleStyleSpansEPNS_13ContainerNodeEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::ContainerNode"* %179, %"class.blink::EditingState"* %2)
  %675 = load i8, i8* %392, align 1, !range !2
  %676 = icmp ne i8 %675, 0
  %677 = icmp eq %"class.blink::ContainerNode"* %263, %179
  %678 = or i1 %677, %676
  br i1 %678, label %680, label %679

679:                                              ; preds = %674
  call void @_ZN5blink17ApplyStyleCommand30CleanupUnstyledAppleStyleSpansEPNS_13ContainerNodeEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::ContainerNode"* %263, %"class.blink::EditingState"* %2)
  br label %680

680:                                              ; preds = %282, %271, %449, %494, %669, %446, %386, %664, %385, %674, %679, %433, %440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %269) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %264) #9
  br label %681

681:                                              ; preds = %165, %249, %256, %680, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17ApplyStyleCommand12GetInputTypeEv(%"class.blink::ApplyStyleCommand"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink20TextIteratorBehavior38AllVisiblePositionsRangeLengthBehaviorEv(%"class.blink::TextIteratorBehavior"* sret) local_unnamed_addr #2

declare i32 @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11RangeLengthERKNS_22EphemeralRangeTemplateIS3_EERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink16StartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN5blink14EndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN5blink19RelocatablePositionC1ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::RelocatablePosition"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink19RelocatablePosition11GetPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::RelocatablePosition"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink11StyleChangeC1EPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::StyleChange"*, %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18IsEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZN5blink20CompositeEditCommand42MoveParagraphContentsToNewBlockIfNecessaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand14RemoveCSSStyleEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, %"class.blink::EditingState"*, i32, %"class.blink::EditingStyle"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::Vector.944", align 8
  %8 = icmp eq i32 %4, 2
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @_ZNK5blink12EditingStyle33ConflictsWithInlineStyleOfElementEPNS_11HTMLElementEPS0_PN3WTF6VectorINS_13CSSPropertyIDELj0ENS4_18PartitionAllocatorEEE(%"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2, %"class.blink::EditingStyle"* null, %"class.WTF::Vector.944"* null) #9
  br label %116

11:                                               ; preds = %6
  %12 = bitcast %"class.WTF::Vector.944"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.WTF::Vector.944", %"class.WTF::Vector.944"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector.944", %"class.WTF::Vector.944"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #9
  %15 = call zeroext i1 @_ZNK5blink12EditingStyle33ConflictsWithInlineStyleOfElementEPNS_11HTMLElementEPS0_PN3WTF6VectorINS_13CSSPropertyIDELj0ENS4_18PartitionAllocatorEEE(%"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2, %"class.blink::EditingStyle"* %5, %"class.WTF::Vector.944"* nonnull %7) #9
  br i1 %15, label %16, label %105

16:                                               ; preds = %11
  %17 = load i32*, i32** %13, align 8
  %18 = load i32, i32* %14, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  br label %98

25:                                               ; preds = %98, %16
  %26 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::HTMLElement"* %2, null
  br i1 %27, label %105, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 48
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %105

33:                                               ; preds = %28
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 2
  %38 = bitcast %"class.blink::Member"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %45, label %105

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 3
  %48 = bitcast %"class.blink::Member.0"* %47 to %"class.blink::ElementData"**
  %49 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %48, align 8
  %50 = icmp eq %"class.blink::ElementData"* %49, null
  br i1 %50, label %103, label %51

51:                                               ; preds = %45
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %46) #9
  %52 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %48, align 8
  %53 = icmp eq %"class.blink::ElementData"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = load i32, i32* null, align 536870912
  br label %65

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %52, i64 0, i32 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.blink::ElementData"* %52 to %"class.blink::UniqueElementData"*
  %63 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %62, i64 0, i32 2, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  br label %69

65:                                               ; preds = %56, %54
  %66 = phi i32 [ %55, %54 ], [ %58, %56 ]
  %67 = lshr i32 %66, 1
  %68 = and i32 %67, 268435455
  br label %69

69:                                               ; preds = %65, %61
  %70 = phi i32 [ %68, %65 ], [ %64, %61 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %103, label %72

72:                                               ; preds = %69
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %74 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %46, %"class.blink::QualifiedName"* dereferenceable(8) %73) #9
  br i1 %74, label %75, label %95

75:                                               ; preds = %72
  %76 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %48, align 8
  %77 = icmp eq %"class.blink::ElementData"* %76, null
  br i1 %77, label %94, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %76, i64 0, i32 1, i32 0, i32 0
  %80 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %79, align 8
  %81 = icmp eq %"class.blink::CSSPropertyValueSet"* %80, null
  br i1 %81, label %94, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %80, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, -1
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %80, i64 7, i32 0
  %88 = load i32, i32* %87, align 4
  br label %91

89:                                               ; preds = %82
  %90 = and i32 %84, 268435455
  br label %91

91:                                               ; preds = %89, %86
  %92 = phi i32 [ %90, %89 ], [ %88, %86 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91, %78, %75
  br label %95

95:                                               ; preds = %72, %91, %94
  %96 = phi i32 [ 1, %94 ], [ 0, %91 ], [ 0, %72 ]
  %97 = icmp eq i32 %96, %70
  br i1 %97, label %103, label %105

98:                                               ; preds = %22, %98
  %99 = phi i32* [ %17, %22 ], [ %101, %98 ]
  %100 = load i32, i32* %99, align 4
  call void @_ZN5blink20CompositeEditCommand17RemoveCSSPropertyEPNS_7ElementENS_13CSSPropertyIDE(%"class.blink::CompositeEditCommand"* %23, %"class.blink::Element"* %24, i32 %100) #9
  %101 = getelementptr inbounds i32, i32* %99, i64 1
  %102 = icmp eq i32* %101, %20
  br i1 %102, label %25, label %98

103:                                              ; preds = %69, %45, %95
  %104 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %104, %"class.blink::Node"* nonnull %26, %"class.blink::EditingState"* %3, i32 1) #9
  br label %105

105:                                              ; preds = %25, %28, %33, %95, %103, %11
  %106 = phi i1 [ false, %11 ], [ true, %103 ], [ true, %95 ], [ true, %33 ], [ true, %28 ], [ true, %25 ]
  %107 = load i32*, i32** %13, align 8
  %108 = icmp eq i32* %107, null
  %109 = bitcast i32* %107 to i8*
  br i1 %108, label %115, label %110, !prof !76

110:                                              ; preds = %105
  %111 = load i32, i32* %14, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %114, label %113, !prof !9

113:                                              ; preds = %110
  store i32 0, i32* %14, align 4
  br label %114

114:                                              ; preds = %113, %110
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #9
  store i32* null, i32** %13, align 8
  br label %115

115:                                              ; preds = %105, %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  br label %116

116:                                              ; preds = %115, %9
  %117 = phi i1 [ %10, %9 ], [ %106, %115 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand13AddBlockStyleERKNS_11StyleChangeEPNS_11HTMLElementE(%"class.blink::ApplyStyleCommand"*, %"class.blink::StyleChange"* nocapture readonly dereferenceable(40), %"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = icmp eq %"class.blink::HTMLElement"* %2, null
  br i1 %8, label %148, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #9
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !9

27:                                               ; preds = %18
  tail call void @llvm.trap() #9
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %9, %13, %28
  %31 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %34 = bitcast %union.anon.1371* %33 to i8*
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %36, align 4
  %37 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %37, align 1
  %38 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #9
  br i1 %12, label %39, label %43

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %41, i64* %42, align 8
  br label %50

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  br label %50

50:                                               ; preds = %39, %43
  %51 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  %53 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %54, align 8
  %56 = icmp eq %"class.blink::ElementData"* %55, null
  br i1 %56, label %97, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %58, align 8
  %60 = icmp eq %"class.blink::CSSPropertyValueSet"* %59, null
  br i1 %60, label %97, label %61

61:                                               ; preds = %57
  br i1 %12, label %67, label %62

62:                                               ; preds = %61
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext 32) #9
  br label %67

67:                                               ; preds = %61, %66, %62
  %68 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #9
  %69 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* nonnull %59) #9
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %72, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %74 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %75, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %96

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 1
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %82 = bitcast i8** %81 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %79, i32* %83, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %76
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %76
  %93 = phi i32 [ %91, %90 ], [ %89, %76 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #9
  br label %96

96:                                               ; preds = %71, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #9
  br label %97

97:                                               ; preds = %50, %57, %96
  %98 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %99 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %100 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #9
  %101 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  %102 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %102, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %98, %"class.blink::Element"* %53, %"class.blink::QualifiedName"* dereferenceable(8) %99, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #9
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %97, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #9
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #9
  br i1 %12, label %148, label %135

135:                                              ; preds = %134
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #9
  br label %148

148:                                              ; preds = %147, %144, %134, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 8, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 7, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %35, %48, %51
  %53 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #9
  br label %69

69:                                               ; preds = %52, %65, %68
  ret void
}

declare void @_ZN5blink14PlainTextRangeC1Ej(%"class.blink::PlainTextRange"*, i32) unnamed_addr #2

declare void @_ZNK5blink14PlainTextRange23CreateRangeForSelectionERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::PlainTextRange"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand18JoinChildTextNodesEPNS_13ContainerNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::ApplyStyleCommand"*, %"class.blink::ContainerNode"* readonly, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::HeapVector.1381", align 8
  %8 = alloca %"class.blink::Text"*, align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::IgnorableEditingAbortState", align 1
  %13 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %14 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %14, label %294, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %18 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* dereferenceable(16) %2) #9
  %19 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %21 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* dereferenceable(16) %3) #9
  %22 = bitcast %"class.blink::HeapVector.1381"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1381"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1381"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1381"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false) #9
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %101, label %30

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1
  %33 = bitcast %"class.blink::Node"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %101, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.blink::Text"** %8 to i8*
  %38 = getelementptr inbounds %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1381"* %7, i64 0, i32 0
  br label %67

39:                                               ; preds = %96
  %40 = load %"class.blink::Member.1387"*, %"class.blink::Member.1387"** %23, align 8
  %41 = load i32, i32* %25, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.1387", %"class.blink::Member.1387"* %40, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %101, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %47 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %49 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %50 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %51 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %52 = bitcast i32* %51 to i64*
  %53 = bitcast i32* %17 to i64*
  %54 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 2
  %55 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  %56 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 1
  %57 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %58 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  %59 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %60 = bitcast i32* %59 to i64*
  %61 = bitcast i32* %20 to i64*
  %62 = bitcast %"class.WTF::String"* %11 to i8*
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %65 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %12, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %12, i64 0, i32 0
  br label %103

67:                                               ; preds = %36, %96
  %68 = phi i64 [ %34, %36 ], [ %99, %96 ]
  %69 = inttoptr i64 %68 to %"class.blink::Node"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 12
  %73 = icmp eq i32 %72, 4
  %74 = inttoptr i64 %68 to %"class.blink::Text"*
  %75 = select i1 %73, %"class.blink::Text"* %74, %"class.blink::Text"* null
  store %"class.blink::Text"* %75, %"class.blink::Text"** %8, align 8
  %76 = icmp eq %"class.blink::Text"* %75, null
  %77 = ptrtoint %"class.blink::Text"* %75 to i64
  br i1 %76, label %96, label %78

78:                                               ; preds = %67
  %79 = load i32, i32* %25, align 4
  %80 = load i32, i32* %24, align 8
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %95, label %82, !prof !9

82:                                               ; preds = %78
  %83 = load %"class.blink::Member.1387"*, %"class.blink::Member.1387"** %23, align 8
  %84 = zext i32 %79 to i64
  %85 = getelementptr inbounds %"class.blink::Member.1387", %"class.blink::Member.1387"* %83, i64 %84
  %86 = bitcast %"class.blink::Member.1387"* %85 to i64*
  store atomic i64 %77, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %82
  %90 = bitcast %"class.blink::Text"* %75 to i8*
  %91 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %90) #9
  br label %92

92:                                               ; preds = %89, %82
  %93 = load i32, i32* %25, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %25, align 4
  br label %96

95:                                               ; preds = %78
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1384"* nonnull %38, %"class.blink::Text"** nonnull dereferenceable(8) %8) #9
  br label %96

96:                                               ; preds = %95, %92, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 0, i32 5, i32 0, i32 0
  %98 = bitcast %"class.blink::Node"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %39, label %67

101:                                              ; preds = %291, %15, %30, %39
  %102 = bitcast %"class.blink::EphemeralRangeTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %13, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %13)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %294

103:                                              ; preds = %45, %291
  %104 = phi %"class.blink::Member.1387"* [ %40, %45 ], [ %292, %291 ]
  %105 = getelementptr inbounds %"class.blink::Member.1387", %"class.blink::Member.1387"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::Text"*, %"class.blink::Text"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %291, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 12
  %115 = icmp eq i32 %114, 4
  br i1 %115, label %116, label %291

116:                                              ; preds = %111
  %117 = load i32, i32* %46, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %163

119:                                              ; preds = %116
  %120 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %121 = icmp eq %"class.blink::Node"* %109, %120
  br i1 %121, label %122, label %163

122:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %123 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 1
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %144, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %127, align 8
  %129 = icmp eq %"class.blink::ParkableStringImpl"* %128, null
  br i1 %129, label %151, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0
  %132 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %131, align 8
  %133 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %132, null
  br i1 %133, label %134, label %141

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %128, i64 0, i32 1, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 1
  %140 = load i32, i32* %139, align 4
  br label %151

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %132, i64 0, i32 8
  %143 = load i32, i32* %142, align 4
  br label %151

144:                                              ; preds = %122
  %145 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  br label %151

151:                                              ; preds = %126, %134, %138, %141, %144, %148
  %152 = phi i32 [ 0, %126 ], [ %143, %141 ], [ %140, %138 ], [ 0, %134 ], [ %150, %148 ], [ 0, %144 ]
  %153 = load i32, i32* %48, align 8
  %154 = add i32 %153, %152
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::Node"* %107, i32 %154) #9
  %155 = load i64, i64* %49, align 8
  store atomic i64 %155, i64* %50 monotonic, align 8
  %156 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %151
  %159 = inttoptr i64 %155 to i8*
  %160 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %159) #9
  br label %161

161:                                              ; preds = %151, %158
  %162 = load i64, i64* %52, align 8
  store i64 %162, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  br label %163

163:                                              ; preds = %161, %119, %116
  %164 = load i32, i32* %54, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %210

166:                                              ; preds = %163
  %167 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %3) #9
  %168 = icmp eq %"class.blink::Node"* %109, %167
  br i1 %168, label %169, label %210

169:                                              ; preds = %166
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #9
  %170 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 1
  %171 = load i8, i8* %170, align 8, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %191, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 2, i32 0, i32 0
  %175 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %174, align 8
  %176 = icmp eq %"class.blink::ParkableStringImpl"* %175, null
  br i1 %176, label %198, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0
  %179 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %178, align 8
  %180 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %179, null
  br i1 %180, label %181, label %188

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %175, i64 0, i32 1, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  br label %198

188:                                              ; preds = %177
  %189 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %179, i64 0, i32 8
  %190 = load i32, i32* %189, align 4
  br label %198

191:                                              ; preds = %169
  %192 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %173, %181, %185, %188, %191, %195
  %199 = phi i32 [ 0, %173 ], [ %190, %188 ], [ %187, %185 ], [ 0, %181 ], [ %197, %195 ], [ 0, %191 ]
  %200 = load i32, i32* %56, align 8
  %201 = add i32 %200, %199
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::Node"* %107, i32 %201) #9
  %202 = load i64, i64* %57, align 8
  store atomic i64 %202, i64* %58 monotonic, align 8
  %203 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %208, label %205

205:                                              ; preds = %198
  %206 = inttoptr i64 %202 to i8*
  %207 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %206) #9
  br label %208

208:                                              ; preds = %198, %205
  %209 = load i64, i64* %60, align 8
  store i64 %209, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #9
  br label %210

210:                                              ; preds = %208, %166, %163
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %63, align 8
  %211 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 1
  %212 = bitcast %"class.blink::Node"* %211 to i8*
  %213 = load i8, i8* %212, align 8, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %219, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 1, i32 0, i32 0, i32 1
  %217 = bitcast %"class.blink::TraceWrapperV8Reference"* %216 to %"class.blink::ParkableString"*
  %218 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %217) #9
  br label %222

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 1, i32 1
  %221 = bitcast i32* %220 to %"class.WTF::String"*
  br label %222

222:                                              ; preds = %215, %219
  %223 = phi %"class.WTF::String"* [ %218, %215 ], [ %221, %219 ]
  %224 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %223, i64 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %63, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %244, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %244

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = zext i32 %234 to i33
  %236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #9
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !9

241:                                              ; preds = %232
  call void @llvm.trap() #9
  unreachable

242:                                              ; preds = %232
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %233, align 4
  br label %244

244:                                              ; preds = %222, %227, %242
  %245 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 1
  %246 = load i8, i8* %245, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %266, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 2, i32 0, i32 0
  %250 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %249, align 8
  %251 = icmp eq %"class.blink::ParkableStringImpl"* %250, null
  br i1 %251, label %273, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0
  %254 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %253, align 8
  %255 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %254, null
  br i1 %255, label %256, label %263

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %250, i64 0, i32 1, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 1
  %262 = load i32, i32* %261, align 4
  br label %273

263:                                              ; preds = %252
  %264 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %254, i64 0, i32 8
  %265 = load i32, i32* %264, align 4
  br label %273

266:                                              ; preds = %244
  %267 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %273, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  br label %273

273:                                              ; preds = %248, %256, %260, %263, %266, %270
  %274 = phi i32 [ 0, %248 ], [ %265, %263 ], [ %262, %260 ], [ 0, %256 ], [ %272, %270 ], [ 0, %266 ]
  call void @_ZN5blink20CompositeEditCommand18InsertTextIntoNodeEPNS_4TextEjRKN3WTF6StringE(%"class.blink::CompositeEditCommand"* %64, %"class.blink::Text"* %106, i32 %274, %"class.WTF::String"* nonnull dereferenceable(8) %11) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %65) #9
  call void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %12) #9
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %64, %"class.blink::Node"* nonnull %109, %"class.blink::EditingState"* nonnull %66, i32 1) #9
  call void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %65) #9
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #9
  br label %290

290:                                              ; preds = %273, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  br label %291

291:                                              ; preds = %111, %103, %290
  %292 = getelementptr inbounds %"class.blink::Member.1387", %"class.blink::Member.1387"* %104, i64 1
  %293 = icmp eq %"class.blink::Member.1387"* %292, %43
  br i1 %293, label %101, label %103

294:                                              ; preds = %4, %101
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand30IsValidCaretPositionInTextNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* nocapture readnone, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = tail call i32 @_ZN5blink14CaretMinOffsetEPKNS_4NodeE(%"class.blink::Node"* %3) #9
  %16 = icmp sgt i32 %14, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %3) #9
  %19 = icmp slt i32 %14, %18
  br label %20

20:                                               ; preds = %12, %17, %2, %7
  %21 = phi i1 [ false, %7 ], [ false, %2 ], [ false, %12 ], [ %19, %17 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand16SplitTextAtStartERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9
  %10 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %38

13:                                               ; preds = %3
  %14 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %15 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %16 = icmp eq %"class.blink::Node"* %14, %15
  br i1 %16, label %17, label %38

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = sub nsw i32 %21, %23
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* %19, i32 %24) #9
  %25 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %26 to i8*
  %32 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #9
  br label %33

33:                                               ; preds = %17, %30
  %34 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast i32* %9 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  br label %52

38:                                               ; preds = %13, %3
  %39 = bitcast %"class.blink::PositionTemplate"* %2 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = inttoptr i64 %40 to i8*
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #9
  br label %47

47:                                               ; preds = %38, %44
  %48 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %49 = bitcast i32* %48 to i64*
  %50 = bitcast i32* %9 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  br label %52

52:                                               ; preds = %47, %33
  %53 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %54 = bitcast %"class.blink::Node"* %53 to %"class.blink::Text"*
  %55 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %56 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  call void @_ZN5blink20CompositeEditCommand13SplitTextNodeEPNS_4TextEj(%"class.blink::CompositeEditCommand"* %55, %"class.blink::Text"* %54, i32 %57) #9
  %58 = bitcast %"class.blink::EphemeralRangeTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #9
  %59 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %53) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %6)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand14SplitTextAtEndERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %12 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %13 = icmp eq %"class.blink::Node"* %11, %12
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i1 [ false, %3 ], [ %13, %10 ]
  %16 = bitcast %"class.blink::PositionTemplate"* %2 to %"class.blink::Text"**
  %17 = load %"class.blink::Text"*, %"class.blink::Text"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  tail call void @_ZN5blink20CompositeEditCommand13SplitTextNodeEPNS_4TextEj(%"class.blink::CompositeEditCommand"* %18, %"class.blink::Text"* %17, i32 %20) #9
  %21 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %17, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 12
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %29, label %39

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  %31 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  br i1 %15, label %32, label %35

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* nonnull %22, i32 %34) #9
  br label %36

35:                                               ; preds = %29
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  br label %36

36:                                               ; preds = %35, %32
  %37 = bitcast %"class.blink::EphemeralRangeTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #9
  %38 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %22) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %5)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  br label %39

39:                                               ; preds = %24, %14, %36
  ret void
}

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23NodeAsRangePastLastNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink17ApplyStyleCommand16ComputedFontSizeEPNS_4NodeE(%"class.blink::ApplyStyleCommand"* nocapture readnone, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %42, label %5

5:                                                ; preds = %2
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #9
  %7 = bitcast i8* %6 to %"class.blink::CSSComputedStyleDeclaration"*
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %7, %"class.blink::Node"* nonnull %1, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #9
  br label %25

25:                                               ; preds = %5, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  %26 = getelementptr inbounds i8, i8* %6, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = icmp eq i8* %6, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %25
  %32 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* nonnull %7, i32 8) #9
  %33 = icmp eq %"class.blink::CSSValue"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.blink::CSSValue"* %32 to %"class.blink::CSSPrimitiveValue"*
  %36 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %35) #9
  %37 = fcmp ult double %36, 0x47EFFFFFE0000000
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = fcmp ole double %36, 0xC7EFFFFFE0000000
  %40 = select i1 %39, double 0xC7EFFFFFE0000000, double %36
  %41 = fptrunc double %40 to float
  br label %42

42:                                               ; preds = %38, %34, %25, %31, %2
  %43 = phi float [ 0.000000e+00, %2 ], [ 0.000000e+00, %25 ], [ 0.000000e+00, %31 ], [ %41, %38 ], [ 0x47EFFFFFE0000000, %34 ]
  ret float %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17ApplyStyleCommand20ElementFullySelectedERKNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESA_(%"class.blink::ApplyStyleCommand"* nocapture readnone, %"class.blink::HTMLElement"* dereferenceable(104), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %12, i32 7) #9
  %13 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::Node"* dereferenceable(64) %8) #9
  %14 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::PositionTemplate"* dereferenceable(16) %2) #9
  %15 = icmp sgt i16 %14, -1
  %16 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  br i1 %15, label %18, label %21

18:                                               ; preds = %4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %8) #9
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i32 1) #9
  %19 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, %"class.blink::PositionTemplate"* dereferenceable(16) %3) #9
  %20 = icmp slt i16 %19, 1
  br label %21

21:                                               ; preds = %18, %4
  %22 = phi i1 [ false, %4 ], [ %20, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Node"*, %"class.blink::Node"* readnone, %"class.blink::Element"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %6, %"class.blink::Node"* %7, %"class.blink::Node"* %1, %"class.blink::EditingState"* %4, i32 1) #9
  %8 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %4, i64 0, i32 0
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %76

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %13) #9
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0
  br label %15

15:                                               ; preds = %28, %11
  %16 = phi %"class.blink::Node"* [ %1, %11 ], [ %20, %28 ]
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #9
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  tail call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %6, %"class.blink::Node"* nonnull %16, %"class.blink::EditingState"* %4, i32 1) #9
  %23 = load i8, i8* %8, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %76

25:                                               ; preds = %22
  tail call void @_ZN5blink20CompositeEditCommand10AppendNodeEPNS_4NodeEPNS_13ContainerNodeEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %6, %"class.blink::Node"* nonnull %16, %"class.blink::ContainerNode"* %14, %"class.blink::EditingState"* %4) #9
  %26 = load i8, i8* %8, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %76

28:                                               ; preds = %25, %18
  %29 = icmp eq %"class.blink::Node"* %16, %2
  br i1 %29, label %30, label %15

30:                                               ; preds = %28, %15
  %31 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %32, null
  br i1 %35, label %51, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 12
  %40 = icmp eq i32 %39, 0
  %41 = bitcast %"class.blink::Node"* %32 to %"class.blink::Element"*
  br i1 %40, label %42, label %51

42:                                               ; preds = %36
  %43 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %32) #9
  br i1 %43, label %44, label %51

44:                                               ; preds = %42
  %45 = tail call zeroext i1 @_ZN5blink20AreIdenticalElementsERKNS_4NodeES2_(%"class.blink::Node"* dereferenceable(64) %7, %"class.blink::Node"* nonnull dereferenceable(64) %32) #9
  br i1 %45, label %46, label %51

46:                                               ; preds = %44
  tail call void @_ZN5blink20CompositeEditCommand22MergeIdenticalElementsEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %6, %"class.blink::Element"* %3, %"class.blink::Element"* nonnull %41, %"class.blink::EditingState"* %4) #9
  %47 = load i8, i8* %8, align 1, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = icmp eq %"class.blink::Node"* %34, null
  %50 = or i1 %49, %48
  br i1 %50, label %76, label %53

51:                                               ; preds = %36, %30, %44, %42
  %52 = icmp eq %"class.blink::Node"* %34, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %46, %51
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 12
  %57 = icmp eq i32 %56, 0
  %58 = bitcast %"class.blink::Node"* %34 to %"class.blink::Element"*
  br i1 %57, label %59, label %76

59:                                               ; preds = %53
  %60 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %34) #9
  br i1 %60, label %61, label %76

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 5, i32 0, i32 0
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 12
  %69 = icmp eq i32 %68, 0
  %70 = bitcast %"class.blink::Node"* %63 to %"class.blink::Element"*
  br i1 %69, label %71, label %76

71:                                               ; preds = %65
  %72 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  br i1 %72, label %73, label %76

73:                                               ; preds = %71
  %74 = tail call zeroext i1 @_ZN5blink20AreIdenticalElementsERKNS_4NodeES2_(%"class.blink::Node"* nonnull dereferenceable(64) %34, %"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  tail call void @_ZN5blink20CompositeEditCommand22MergeIdenticalElementsEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %6, %"class.blink::Element"* nonnull %58, %"class.blink::Element"* nonnull %70, %"class.blink::EditingState"* %4) #9
  ret void

76:                                               ; preds = %25, %22, %53, %65, %5, %61, %51, %73, %71, %46, %59
  ret void
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink7Element25RemoveInlineStylePropertyENS_13CSSPropertyIDE(%"class.blink::Element"*, i32) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"*, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"*, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand30CleanupUnstyledAppleStyleSpansEPNS_13ContainerNodeEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::ContainerNode"* readonly, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %4, label %93, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %93, label %9

9:                                                ; preds = %5
  %10 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %13 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  br label %15

15:                                               ; preds = %92, %9
  %16 = phi %"class.blink::Node"* [ %7, %9 ], [ %19, %92 ]
  %17 = bitcast %"class.blink::Node"* %16 to %"class.blink::Element"*
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 48
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %90

24:                                               ; preds = %15
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 2
  %27 = bitcast %"class.blink::Member"* %26 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %30, %32
  br i1 %33, label %34, label %90

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 3
  %36 = bitcast %"class.blink::Member.0"* %35 to %"class.blink::ElementData"**
  %37 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %36, align 8
  %38 = icmp eq %"class.blink::ElementData"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %34
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %17) #9
  %40 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %36, align 8
  %41 = icmp eq %"class.blink::ElementData"* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = load i32, i32* null, align 536870912
  br label %53

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %40, i64 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.blink::ElementData"* %40 to %"class.blink::UniqueElementData"*
  %51 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %50, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  br label %57

53:                                               ; preds = %44, %42
  %54 = phi i32 [ %43, %42 ], [ %46, %44 ]
  %55 = lshr i32 %54, 1
  %56 = and i32 %55, 268435455
  br label %57

57:                                               ; preds = %53, %49
  %58 = phi i32 [ %56, %53 ], [ %52, %49 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %85, label %60

60:                                               ; preds = %57
  %61 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %17, %"class.blink::QualifiedName"* dereferenceable(8) %12) #9
  br i1 %61, label %62, label %82

62:                                               ; preds = %60
  %63 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %36, align 8
  %64 = icmp eq %"class.blink::ElementData"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %63, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %66, align 8
  %68 = icmp eq %"class.blink::CSSPropertyValueSet"* %67, null
  br i1 %68, label %81, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %67, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, -1
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %67, i64 7, i32 0
  %75 = load i32, i32* %74, align 4
  br label %78

76:                                               ; preds = %69
  %77 = and i32 %71, 268435455
  br label %78

78:                                               ; preds = %76, %73
  %79 = phi i32 [ %77, %76 ], [ %75, %73 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78, %65, %62
  br label %82

82:                                               ; preds = %60, %78, %81
  %83 = phi i32 [ 1, %81 ], [ 0, %78 ], [ 0, %60 ]
  %84 = icmp eq i32 %83, %58
  br i1 %84, label %85, label %90

85:                                               ; preds = %57, %34, %82
  tail call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %13, %"class.blink::Node"* nonnull %16, %"class.blink::EditingState"* %2, i32 1) #9
  %86 = load i8, i8* %14, align 1, !range !2
  %87 = icmp ne i8 %86, 0
  %88 = icmp eq %"class.blink::Node"* %19, null
  %89 = or i1 %87, %88
  br i1 %89, label %93, label %92

90:                                               ; preds = %15, %24, %82
  %91 = icmp eq %"class.blink::Node"* %19, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %90, %85
  br label %15

93:                                               ; preds = %90, %85, %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZN5blink17ApplyStyleCommand29SplitAncestorsWithUnicodeBidiEPNS_4NodeEbN9mojo_base5mojom13TextDirectionE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Node"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i32, align 4
  %7 = tail call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %1, i32 1) #9
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %110, label %9

9:                                                ; preds = %4
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #9
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  %12 = icmp eq %"class.blink::ContainerNode"* %10, null
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0
  %14 = icmp eq %"class.blink::Node"* %11, %13
  %15 = or i1 %12, %14
  br i1 %15, label %110, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.WTF::String"* %5 to i8*
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %16, %50
  %20 = phi %"class.blink::Node"* [ %11, %16 ], [ %55, %50 ]
  %21 = phi i32 [ 0, %16 ], [ %53, %50 ]
  %22 = phi %"class.blink::ContainerNode"* [ null, %16 ], [ %52, %50 ]
  %23 = phi %"class.blink::ContainerNode"* [ null, %16 ], [ %51, %50 ]
  %24 = phi %"class.blink::ContainerNode"* [ %10, %16 ], [ %54, %50 ]
  %25 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #9
  %26 = bitcast i8* %25 to %"class.blink::CSSComputedStyleDeclaration"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %26, %"class.blink::Node"* nonnull %20, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %19, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %43 = getelementptr inbounds i8, i8* %25, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  %47 = bitcast i8* %25 to %"class.blink::CSSStyleDeclaration"*
  %48 = call i32 @_ZN5blink18GetIdentifierValueEPNS_19CSSStyleDeclarationENS_13CSSPropertyIDE(%"class.blink::CSSStyleDeclaration"* %47, i32 378) #9
  switch i32 %48, label %49 [
    i32 56, label %50
    i32 0, label %50
  ]

49:                                               ; preds = %42
  br label %50

50:                                               ; preds = %42, %42, %49
  %51 = phi %"class.blink::ContainerNode"* [ %23, %42 ], [ %24, %49 ], [ %23, %42 ]
  %52 = phi %"class.blink::ContainerNode"* [ %22, %42 ], [ %23, %49 ], [ %22, %42 ]
  %53 = phi i32 [ %21, %42 ], [ %48, %49 ], [ %21, %42 ]
  %54 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %20) #9
  %55 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %54, i64 0, i32 0
  %56 = icmp eq %"class.blink::ContainerNode"* %54, null
  %57 = icmp eq %"class.blink::Node"* %55, %13
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %19

59:                                               ; preds = %50
  %60 = icmp eq %"class.blink::ContainerNode"* %51, null
  br i1 %60, label %110, label %61

61:                                               ; preds = %59
  %62 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #9
  store i32 -1431655766, i32* %6, align 4
  %63 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %51, i64 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 48
  %66 = icmp eq i32 %65, 0
  %67 = bitcast %"class.blink::ContainerNode"* %51 to %"class.blink::HTMLElement"*
  %68 = icmp ne i32 %3, 0
  %69 = icmp ne i32 %53, 461
  %70 = and i1 %68, %69
  %71 = and i1 %70, %66
  br i1 %71, label %72, label %85

72:                                               ; preds = %61
  %73 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #9
  %74 = bitcast i8* %73 to %"class.blink::EditingStyle"*
  call void @_ZN5blink12EditingStyleC1EPNS_13ContainerNodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %74, %"class.blink::ContainerNode"* nonnull %51, i32 0) #9
  %75 = getelementptr inbounds i8, i8* %73, i64 -4
  %76 = bitcast i8* %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = or i16 %77, 1
  store atomic i16 %78, i16* %76 release, align 2
  %79 = call zeroext i1 @_ZNK5blink12EditingStyle16GetTextDirectionERN9mojo_base5mojom13TextDirectionE(%"class.blink::EditingStyle"* %74, i32* nonnull dereferenceable(4) %6) #9
  %80 = load i32, i32* %6, align 4
  %81 = icmp eq i32 %80, %3
  %82 = and i1 %79, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %72
  %84 = icmp eq %"class.blink::ContainerNode"* %52, null
  br i1 %84, label %108, label %85

85:                                               ; preds = %61, %72, %83
  %86 = phi %"class.blink::ContainerNode"* [ %52, %83 ], [ %51, %72 ], [ %51, %61 ]
  %87 = phi %"class.blink::HTMLElement"* [ %67, %83 ], [ null, %72 ], [ null, %61 ]
  %88 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  br label %89

89:                                               ; preds = %105, %85
  %90 = phi %"class.blink::Node"* [ %1, %85 ], [ %107, %105 ]
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %89
  %93 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %90) #9
  %94 = bitcast %"class.blink::ContainerNode"* %93 to %"class.blink::Element"*
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 4, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 5, i32 0, i32 0
  %97 = select i1 %2, %"class.blink::Node"** %95, %"class.blink::Node"** %96
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %97, align 8
  %99 = icmp eq %"class.blink::Node"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %92
  br i1 %2, label %103, label %101

101:                                              ; preds = %100
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %96, align 8
  br label %103

103:                                              ; preds = %100, %101
  %104 = phi %"class.blink::Node"* [ %102, %101 ], [ %90, %100 ]
  call void @_ZN5blink20CompositeEditCommand12SplitElementEPNS_7ElementEPNS_4NodeE(%"class.blink::CompositeEditCommand"* %88, %"class.blink::Element"* %94, %"class.blink::Node"* %104) #9
  br label %105

105:                                              ; preds = %92, %103
  %106 = icmp eq %"class.blink::ContainerNode"* %93, %86
  %107 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %93, i64 0, i32 0
  br i1 %106, label %108, label %89

108:                                              ; preds = %105, %89, %83
  %109 = phi %"class.blink::HTMLElement"* [ %67, %83 ], [ %87, %89 ], [ %87, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #9
  br label %110

110:                                              ; preds = %9, %108, %59, %4
  %111 = phi %"class.blink::HTMLElement"* [ null, %4 ], [ %109, %108 ], [ null, %59 ], [ null, %9 ]
  ret %"class.blink::HTMLElement"* %111
}

declare i32 @_ZN5blink18GetIdentifierValueEPNS_19CSSStyleDeclarationENS_13CSSPropertyIDE(%"class.blink::CSSStyleDeclaration"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle16GetTextDirectionERN9mojo_base5mojom13TextDirectionE(%"class.blink::EditingStyle"*, i32* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand12SplitElementEPNS_7ElementEPNS_4NodeE(%"class.blink::CompositeEditCommand"*, %"class.blink::Element"*, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand33RemoveEmbeddingUpToEnclosingBlockEPNS_4NodeEPNS_11HTMLElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Node"*, %"class.blink::HTMLElement"* readnone, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = tail call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %1, i32 1) #9
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %269, label %9

9:                                                ; preds = %4
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #9
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  %12 = icmp eq %"class.blink::ContainerNode"* %10, null
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0
  %14 = icmp eq %"class.blink::Node"* %11, %13
  %15 = or i1 %12, %14
  %16 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0
  %17 = icmp eq %"class.blink::Node"* %11, %16
  %18 = or i1 %17, %15
  br i1 %18, label %269, label %19

19:                                               ; preds = %9
  %20 = bitcast %"class.WTF::String"* %5 to i8*
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %26 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %27 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  br label %32

32:                                               ; preds = %19, %261
  %33 = phi %"class.blink::Node"* [ %11, %19 ], [ %263, %261 ]
  %34 = phi %"class.blink::ContainerNode"* [ %10, %19 ], [ %262, %261 ]
  %35 = call zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"* nonnull %33) #9
  br i1 %35, label %36, label %261

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::ContainerNode"* %34 to %"class.blink::Element"*
  %38 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #9
  %39 = bitcast i8* %38 to %"class.blink::CSSComputedStyleDeclaration"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %39, %"class.blink::Node"* nonnull %33, i1 zeroext false, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #9
  br label %55

55:                                               ; preds = %36, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %56 = getelementptr inbounds i8, i8* %38, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  %60 = bitcast i8* %38 to %"class.blink::CSSStyleDeclaration"*
  %61 = call i32 @_ZN5blink18GetIdentifierValueEPNS_19CSSStyleDeclarationENS_13CSSPropertyIDE(%"class.blink::CSSStyleDeclaration"* %60, i32 378) #9
  switch i32 %61, label %62 [
    i32 56, label %261
    i32 0, label %261
  ]

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 1, i32 0, i32 1
  %64 = bitcast i32* %63 to %"class.blink::ElementData"**
  %65 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %64, align 8
  %66 = icmp eq %"class.blink::ElementData"* %65, null
  br i1 %66, label %121, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %65, i64 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.blink::ElementData"* %65 to %"class.blink::UniqueElementData"*
  %74 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %65, i64 1, i32 1
  %75 = bitcast %"class.blink::Member.14"* %74 to %"class.blink::Attribute"**
  %76 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %73, i64 0, i32 2, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  br label %84

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %65, i64 1
  %81 = bitcast %"class.blink::ElementData"* %80 to %"class.blink::Attribute"*
  %82 = lshr i32 %69, 1
  %83 = and i32 %82, 268435455
  br label %84

84:                                               ; preds = %79, %72
  %85 = phi %"class.blink::Attribute"* [ %81, %79 ], [ %76, %72 ]
  %86 = phi i32 [ %83, %79 ], [ %78, %72 ]
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %85, i64 %87
  %89 = icmp eq i32 %86, 0
  br i1 %89, label %117, label %90

90:                                               ; preds = %84
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %94

94:                                               ; preds = %110, %90
  %95 = phi %"class.blink::Attribute"* [ %85, %90 ], [ %111, %110 ]
  %96 = phi i32 [ 0, %90 ], [ %112, %110 ]
  %97 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %99 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %98, %91
  br i1 %99, label %114, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 3, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %102, %103
  br i1 %104, label %105, label %110

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 4, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %105, %100
  %111 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %95, i64 1
  %112 = add i32 %96, 1
  %113 = icmp eq %"class.blink::Attribute"* %111, %88
  br i1 %113, label %117, label %94

114:                                              ; preds = %94, %105
  %115 = icmp eq i32 %96, -1
  br i1 %115, label %117, label %116

116:                                              ; preds = %114
  call void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"* %24, %"class.blink::Element"* %37, %"class.blink::QualifiedName"* dereferenceable(8) %22) #9
  br label %261

117:                                              ; preds = %110, %114, %84
  %118 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %65, i64 0, i32 1, i32 0, i32 0
  %119 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %118, align 8
  %120 = icmp eq %"class.blink::CSSPropertyValueSet"* %119, null
  br i1 %120, label %121, label %128

121:                                              ; preds = %62, %117
  %122 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #9
  %123 = bitcast i8* %122 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %123, i8 zeroext 1) #9
  %124 = getelementptr inbounds i8, i8* %122, i64 -4
  %125 = bitcast i8* %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = or i16 %126, 1
  store atomic i16 %127, i16* %125 release, align 2
  br label %130

128:                                              ; preds = %117
  %129 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* nonnull %119) #9
  br label %130

130:                                              ; preds = %121, %128
  %131 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %129, %128 ], [ %123, %121 ]
  %132 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"* %131, i32 378, i32 56, i1 zeroext false) #9
  %133 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %131, i32 3, %"class.WTF::String"* null) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %134 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %131, i64 0, i32 0
  %135 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %134) #9
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %160, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 acquire, align 4
  %140 = and i32 %139, 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %158, label %142

142:                                              ; preds = %137
  %143 = load atomic i32, i32* %138 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %160

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i33
  %150 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #9
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !9

155:                                              ; preds = %146
  call void @llvm.trap() #9
  unreachable

156:                                              ; preds = %146
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %147, align 4
  br label %160

158:                                              ; preds = %137
  %159 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %135) #9
  br label %160

160:                                              ; preds = %130, %142, %156, %158
  %161 = phi %"class.WTF::StringImpl"* [ %159, %158 ], [ %135, %142 ], [ %135, %156 ], [ null, %130 ]
  %162 = ptrtoint %"class.WTF::StringImpl"* %161 to i64
  store i64 %162, i64* %27, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %24, %"class.blink::Element"* %37, %"class.blink::QualifiedName"* dereferenceable(8) %25, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #9
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #9
  br label %178

178:                                              ; preds = %160, %174, %177
  br i1 %136, label %192, label %179

179:                                              ; preds = %178
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #9
  br label %192

192:                                              ; preds = %191, %188, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %193 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0, i32 1
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 48
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %261

197:                                              ; preds = %192
  %198 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %199 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 2
  %200 = bitcast %"class.blink::Member"* %199 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %201 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %201, i64 0, i32 3, i32 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %203, %205
  br i1 %206, label %207, label %261

207:                                              ; preds = %197
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 3
  %209 = bitcast %"class.blink::Member.0"* %208 to %"class.blink::ElementData"**
  %210 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %209, align 8
  %211 = icmp eq %"class.blink::ElementData"* %210, null
  br i1 %211, label %258, label %212

212:                                              ; preds = %207
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %37) #9
  %213 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %209, align 8
  %214 = icmp eq %"class.blink::ElementData"* %213, null
  br i1 %214, label %215, label %217

215:                                              ; preds = %212
  %216 = load i32, i32* null, align 536870912
  br label %226

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %213, i64 0, i32 0, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %217
  %223 = bitcast %"class.blink::ElementData"* %213 to %"class.blink::UniqueElementData"*
  %224 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %223, i64 0, i32 2, i32 0, i32 0, i32 2
  %225 = load i32, i32* %224, align 4
  br label %230

226:                                              ; preds = %217, %215
  %227 = phi i32 [ %216, %215 ], [ %219, %217 ]
  %228 = lshr i32 %227, 1
  %229 = and i32 %228, 268435455
  br label %230

230:                                              ; preds = %226, %222
  %231 = phi i32 [ %229, %226 ], [ %225, %222 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %258, label %233

233:                                              ; preds = %230
  %234 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %37, %"class.blink::QualifiedName"* dereferenceable(8) %25) #9
  br i1 %234, label %235, label %255

235:                                              ; preds = %233
  %236 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %209, align 8
  %237 = icmp eq %"class.blink::ElementData"* %236, null
  br i1 %237, label %254, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %236, i64 0, i32 1, i32 0, i32 0
  %240 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %239, align 8
  %241 = icmp eq %"class.blink::CSSPropertyValueSet"* %240, null
  br i1 %241, label %254, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %240, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = icmp sgt i32 %244, -1
  br i1 %245, label %249, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %240, i64 7, i32 0
  %248 = load i32, i32* %247, align 4
  br label %251

249:                                              ; preds = %242
  %250 = and i32 %244, 268435455
  br label %251

251:                                              ; preds = %249, %246
  %252 = phi i32 [ %250, %249 ], [ %248, %246 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251, %238, %235
  br label %255

255:                                              ; preds = %233, %251, %254
  %256 = phi i32 [ 1, %254 ], [ 0, %251 ], [ 0, %233 ]
  %257 = icmp eq i32 %256, %231
  br i1 %257, label %258, label %261

258:                                              ; preds = %230, %207, %255
  call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %24, %"class.blink::Node"* %33, %"class.blink::EditingState"* %3, i32 1) #9
  %259 = load i8, i8* %31, align 1, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %261, label %269

261:                                              ; preds = %55, %55, %258, %192, %197, %255, %116, %32
  %262 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %33) #9
  %263 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %262, i64 0, i32 0
  %264 = icmp eq %"class.blink::ContainerNode"* %262, null
  %265 = icmp eq %"class.blink::Node"* %263, %13
  %266 = or i1 %264, %265
  %267 = icmp eq %"class.blink::Node"* %263, %16
  %268 = or i1 %267, %266
  br i1 %268, label %269, label %32

269:                                              ; preds = %261, %258, %9, %4
  ret void
}

declare zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand22ShouldSplitTextElementEPNS_7ElementEPNS_12EditingStyleE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Element"*, %"class.blink::EditingStyle"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::IgnorableEditingAbortState", align 1
  %5 = icmp eq %"class.blink::Element"* %1, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 48
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLElement"*
  %13 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #9
  call void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %4) #9
  %14 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %4, i64 0, i32 0
  %15 = call zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %2, %"class.blink::HTMLElement"* nonnull %12, %"class.blink::EditingState"* nonnull %14, i32 2, %"class.blink::EditingStyle"* null) #9
  call void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #9
  br label %16

16:                                               ; preds = %6, %3, %11
  %17 = phi i1 [ %15, %11 ], [ false, %6 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand23SplitTextElementAtStartERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #9
  %10 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %11 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %12 = icmp eq %"class.blink::Node"* %10, %11
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %16 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = sub nsw i32 %17, %19
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* %15, i32 %20) #9
  %21 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %13
  %27 = inttoptr i64 %22 to i8*
  %28 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %13, %26
  %30 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %9 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %48

34:                                               ; preds = %3
  %35 = bitcast %"class.blink::PositionTemplate"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = inttoptr i64 %36 to i8*
  %42 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #9
  br label %43

43:                                               ; preds = %34, %40
  %44 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %45 = bitcast i32* %44 to i64*
  %46 = bitcast i32* %9 to i64*
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  br label %48

48:                                               ; preds = %43, %29
  %49 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %50 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %51 = bitcast %"class.blink::Node"* %50 to %"class.blink::Text"*
  %52 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  call void @_ZN5blink20CompositeEditCommand30SplitTextNodeContainingElementEPNS_4TextEj(%"class.blink::CompositeEditCommand"* %49, %"class.blink::Text"* %51, i32 %53) #9
  %54 = bitcast %"class.blink::EphemeralRangeTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #9
  %55 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #9
  %56 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %56) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %6)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::ContainerNode"* @_ZN5blinkL24DummySpanAncestorForNodeEPKNS_4NodeE(%"class.blink::Node"*) unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %60, label %3

3:                                                ; preds = %1
  %4 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  br label %7

7:                                                ; preds = %3, %54
  %8 = phi %"class.blink::Node"* [ %0, %3 ], [ %56, %54 ]
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.blink::Node"* %8 to %"class.blink::Element"*
  %12 = and i32 %10, 60
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %54

14:                                               ; preds = %7
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %17 = bitcast %"class.blink::Member"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %24, label %54

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 3
  %26 = bitcast %"class.blink::Member.0"* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %24
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %11) #9
  %30 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %31 = icmp eq %"class.blink::ElementData"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = load i32, i32* null, align 536870912
  br label %43

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  br label %47

43:                                               ; preds = %34, %32
  %44 = phi i32 [ %33, %32 ], [ %36, %34 ]
  %45 = lshr i32 %44, 1
  %46 = and i32 %45, 268435455
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %46, %43 ], [ %42, %39 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %47
  %51 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %11, %"class.blink::QualifiedName"* dereferenceable(8) %6) #9
  %52 = zext i1 %51 to i32
  %53 = icmp eq i32 %48, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %7, %14, %50
  %55 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %8) #9
  %56 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %55, i64 0, i32 0
  %57 = icmp eq %"class.blink::ContainerNode"* %55, null
  br i1 %57, label %60, label %7

58:                                               ; preds = %47, %24, %50
  %59 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %8) #9
  br label %60

60:                                               ; preds = %54, %1, %58
  %61 = phi %"class.blink::ContainerNode"* [ %59, %58 ], [ null, %1 ], [ null, %54 ]
  ret %"class.blink::ContainerNode"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand21SplitTextElementAtEndERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ApplyStyleCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %8 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %9 = icmp eq %"class.blink::Node"* %7, %8
  %10 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %11 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %12 = bitcast %"class.blink::Node"* %11 to %"class.blink::Text"*
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  tail call void @_ZN5blink20CompositeEditCommand30SplitTextNodeContainingElementEPNS_4TextEj(%"class.blink::CompositeEditCommand"* %10, %"class.blink::Text"* %12, i32 %14) #9
  %15 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %16 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %15) #9
  %17 = icmp eq %"class.blink::ContainerNode"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %16, i64 0, i32 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %47, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 0, i32 0, i32 1
  %29 = bitcast %"class.blink::TraceWrapperV8Reference"* %28 to %"class.blink::Node"**
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 12
  %36 = icmp eq i32 %35, 4
  br i1 %36, label %37, label %47

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  %39 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  br i1 %9, label %40, label %43

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* nonnull %30, i32 %42) #9
  br label %44

43:                                               ; preds = %37
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  br label %44

44:                                               ; preds = %43, %40
  %45 = bitcast %"class.blink::EphemeralRangeTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #9
  %46 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %30) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %5)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  br label %47

47:                                               ; preds = %32, %22, %27, %44, %3, %18
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::EditingStyle"* @_ZN5blink12EditingStyle29ExtractAndRemoveTextDirectionENS_17SecureContextModeE(%"class.blink::EditingStyle"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand17RemoveInlineStyleEPNS_12EditingStyleERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::PositionTemplate", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.blink::PositionTemplate", align 8
  %15 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %16 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %19 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::EphemeralRangeTemplate"* %2) #9
  %20 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %23 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::EphemeralRangeTemplate"* %2) #9
  %24 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %25, i32 7) #9
  %26 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %29 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i32 1) #9
  %30 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %7) #9
  %31 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %7) #9
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %88, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %38, label %88

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1
  %40 = bitcast %"class.blink::Node"* %39 to i8*
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1, i32 0, i32 0, i32 1
  %45 = bitcast %"class.blink::TraceWrapperV8Reference"* %44 to %"class.blink::ParkableStringImpl"**
  %46 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %45, align 8
  %47 = icmp eq %"class.blink::ParkableStringImpl"* %46, null
  br i1 %47, label %70, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %49, align 8
  %51 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %50, null
  br i1 %51, label %52, label %59

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %46, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  br label %70

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %50, i64 0, i32 8
  %61 = load i32, i32* %60, align 4
  br label %70

62:                                               ; preds = %38
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1, i32 1
  %64 = bitcast i32* %63 to %"class.WTF::StringImpl"**
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %43, %52, %56, %59, %62, %67
  %71 = phi i32 [ 0, %43 ], [ %61, %59 ], [ %58, %56 ], [ 0, %52 ], [ %69, %67 ], [ 0, %62 ]
  %72 = icmp eq i32 %30, %71
  br i1 %72, label %73, label %88

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #9
  call void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7) #9
  %75 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %73
  %81 = inttoptr i64 %76 to i8*
  %82 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #9
  br label %83

83:                                               ; preds = %73, %80
  %84 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %85 = bitcast i32* %84 to i64*
  %86 = bitcast i32* %28 to i64*
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #9
  br label %88

88:                                               ; preds = %33, %4, %83, %70
  %89 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %89, i32 7) #9
  %90 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %93 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 16, i1 false)
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1) #9
  %94 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %9) #9
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %119, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %94, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 12
  %100 = icmp eq i32 %99, 4
  br i1 %100, label %101, label %119

101:                                              ; preds = %96
  %102 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %9) #9
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %119

104:                                              ; preds = %101
  %105 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #9
  call void @_ZN5blink33PreviousVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #9
  %106 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  store atomic i64 %107, i64* %108 monotonic, align 8
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %104
  %112 = inttoptr i64 %107 to i8*
  %113 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #9
  br label %114

114:                                              ; preds = %104, %111
  %115 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %116 = bitcast i32* %115 to i64*
  %117 = bitcast i32* %92 to i64*
  %118 = load i64, i64* %116, align 8
  store i64 %118, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #9
  br label %119

119:                                              ; preds = %101, %88, %114, %96
  %120 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  call void @_ZN5blink17ApplyStyleCommand29PushDownInlineStyleAroundNodeEPNS_12EditingStyleEPNS_4NodeEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::Node"* %120, %"class.blink::EditingState"* %3)
  %121 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %122 = load i8, i8* %121, align 1, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %338

124:                                              ; preds = %119
  %125 = load %"class.blink::Node"*, %"class.blink::Node"** %91, align 8
  call void @_ZN5blink17ApplyStyleCommand29PushDownInlineStyleAroundNodeEPNS_12EditingStyleEPNS_4NodeEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::Node"* %125, %"class.blink::EditingState"* %3)
  %126 = load i8, i8* %121, align 1, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %338

128:                                              ; preds = %124
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %130 = icmp eq %"class.blink::Node"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %128
  %132 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %5) #9
  br i1 %132, label %146, label %133

133:                                              ; preds = %131, %128
  %134 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = inttoptr i64 %135 to i8*
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #9
  br label %142

142:                                              ; preds = %133, %139
  %143 = bitcast i32* %28 to i64*
  %144 = bitcast i32* %18 to i64*
  %145 = load i64, i64* %143, align 8
  store i64 %145, i64* %144, align 8
  br label %146

146:                                              ; preds = %131, %142
  %147 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %148 = icmp eq %"class.blink::Node"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  %150 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %6) #9
  br i1 %150, label %164, label %151

151:                                              ; preds = %149, %146
  %152 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  store atomic i64 %153, i64* %154 monotonic, align 8
  %155 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %151
  %158 = inttoptr i64 %153 to i8*
  %159 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %158) #9
  br label %160

160:                                              ; preds = %151, %157
  %161 = bitcast i32* %92 to i64*
  %162 = bitcast i32* %22 to i64*
  %163 = load i64, i64* %161, align 8
  store i64 %163, i64* %162, align 8
  br label %164

164:                                              ; preds = %149, %160
  %165 = call %"class.blink::TreeScope"* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  %166 = icmp eq %"class.blink::TreeScope"* %165, null
  br i1 %166, label %338, label %167

167:                                              ; preds = %164
  %168 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #9
  %169 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  %171 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #9
  %172 = bitcast %"class.blink::PositionTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #9
  %173 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %12, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %12, i64 0, i32 1
  %175 = bitcast %"class.blink::PositionTemplate"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %12, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  %176 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %177 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %178 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  %179 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  %180 = bitcast %"class.blink::PositionTemplate"* %13 to i64*
  %181 = bitcast %"class.blink::PositionTemplate"* %11 to i64*
  %182 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 1
  %183 = bitcast i32* %182 to i64*
  %184 = bitcast i32* %170 to i64*
  %185 = bitcast %"class.blink::PositionTemplate"* %14 to i8*
  %186 = bitcast %"class.blink::PositionTemplate"* %14 to i64*
  %187 = bitcast %"class.blink::PositionTemplate"* %12 to i64*
  %188 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %14, i64 0, i32 1
  %189 = bitcast i32* %188 to i64*
  %190 = bitcast i32* %174 to i64*
  br label %191

191:                                              ; preds = %332, %167
  %192 = phi %"class.blink::Node"* [ %176, %167 ], [ %219, %332 ]
  %193 = icmp eq %"class.blink::Node"* %192, null
  br i1 %193, label %335, label %194

194:                                              ; preds = %191
  %195 = call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %192) #9
  br i1 %195, label %196, label %202

196:                                              ; preds = %194
  %197 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 5, i32 0, i32 0
  %198 = load %"class.blink::Node"*, %"class.blink::Node"** %197, align 8
  %199 = icmp eq %"class.blink::Node"* %198, null
  br i1 %199, label %200, label %218

200:                                              ; preds = %196
  %201 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %192) #9
  br label %218

202:                                              ; preds = %194
  %203 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %212, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 1
  %209 = bitcast %"class.blink::Node"* %208 to %"class.blink::Node"**
  %210 = load %"class.blink::Node"*, %"class.blink::Node"** %209, align 8
  %211 = icmp eq %"class.blink::Node"* %210, null
  br i1 %211, label %212, label %218

212:                                              ; preds = %207, %202
  %213 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 5, i32 0, i32 0
  %214 = load %"class.blink::Node"*, %"class.blink::Node"** %213, align 8
  %215 = icmp eq %"class.blink::Node"* %214, null
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %192) #9
  br label %218

218:                                              ; preds = %216, %212, %207, %200, %196
  %219 = phi %"class.blink::Node"* [ %201, %200 ], [ %198, %196 ], [ %217, %216 ], [ %214, %212 ], [ %210, %207 ]
  %220 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 1
  %221 = load i32, i32* %220, align 8
  %222 = and i32 %221, 48
  %223 = icmp eq i32 %222, 0
  %224 = bitcast %"class.blink::Node"* %192 to %"class.blink::HTMLElement"*
  br i1 %223, label %225, label %332

225:                                              ; preds = %218
  %226 = call zeroext i1 @_ZNK5blink17ApplyStyleCommand20ElementFullySelectedERKNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESA_(%"class.blink::ApplyStyleCommand"* undef, %"class.blink::HTMLElement"* nonnull dereferenceable(104) %224, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6)
  br i1 %226, label %227, label %332

227:                                              ; preds = %225
  %228 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal17PreviousPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %192, %"class.blink::Node"* null) #9
  %229 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 1
  %230 = bitcast %"class.blink::Node"* %229 to %"class.blink::Node"**
  %231 = load %"class.blink::Node"*, %"class.blink::Node"** %230, align 8
  %232 = icmp eq %"class.blink::Node"* %231, null
  br i1 %232, label %233, label %239

233:                                              ; preds = %227
  %234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 5, i32 0, i32 0
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %234, align 8
  %236 = icmp eq %"class.blink::Node"* %235, null
  br i1 %236, label %237, label %239

237:                                              ; preds = %233
  %238 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %192) #9
  br label %239

239:                                              ; preds = %227, %233, %237
  %240 = phi %"class.blink::Node"* [ %238, %237 ], [ %231, %227 ], [ %235, %233 ]
  %241 = bitcast %"class.blink::Node"* %192 to %"class.blink::Element"*
  %242 = load %"class.blink::Element"*, %"class.blink::Element"** %177, align 8
  %243 = icmp eq %"class.blink::Element"* %242, null
  br i1 %243, label %263, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 1, i32 2
  %246 = bitcast %"class.blink::Member"* %245 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %247 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %242, i64 0, i32 2, i32 0, i32 0
  %249 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %248, align 8
  %250 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %247, %249
  br i1 %250, label %268, label %251

251:                                              ; preds = %244
  %252 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %247, i64 0, i32 3, i32 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %249, i64 0, i32 3, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %253, %255
  br i1 %256, label %257, label %263

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %247, i64 0, i32 4, i32 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %249, i64 0, i32 4, i32 0, i32 0, i32 0
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %260, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %259, %261
  br i1 %262, label %268, label %263

263:                                              ; preds = %257, %251, %239
  %264 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %178, align 8
  %265 = icmp eq i1 (%"class.blink::Element"*)* %264, null
  br i1 %265, label %276, label %266

266:                                              ; preds = %263
  %267 = call zeroext i1 %264(%"class.blink::Element"* nonnull %241) #9
  br i1 %267, label %268, label %276

268:                                              ; preds = %244, %257, %266
  %269 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #9
  %270 = bitcast i8* %269 to %"class.blink::EditingStyle"*
  %271 = getelementptr inbounds i8, i8* %269, i64 -4
  %272 = bitcast i8* %271 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 32, i1 false) #9
  %273 = load atomic i16, i16* %272 monotonic, align 2
  %274 = or i16 %273, 1
  store atomic i16 %274, i16* %272 release, align 2
  %275 = load %"class.blink::Node"*, %"class.blink::Node"** %230, align 8
  br label %276

276:                                              ; preds = %263, %268, %266
  %277 = phi %"class.blink::EditingStyle"* [ %270, %268 ], [ null, %266 ], [ null, %263 ]
  %278 = phi %"class.blink::Node"* [ %275, %268 ], [ null, %266 ], [ null, %263 ]
  %279 = call zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* nonnull %224, %"class.blink::EditingState"* %3, i32 0, %"class.blink::EditingStyle"* %277)
  %280 = load i8, i8* %121, align 1, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %337

282:                                              ; preds = %276
  %283 = load i32, i32* %220, align 8
  %284 = and i32 %283, 256
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %320

286:                                              ; preds = %282
  %287 = load %"class.blink::Node"*, %"class.blink::Node"** %169, align 8
  %288 = icmp eq %"class.blink::Node"* %287, %192
  br i1 %288, label %289, label %303

289:                                              ; preds = %286
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #9
  %290 = icmp eq %"class.blink::Node"* %240, null
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %13, %"class.blink::Node"* nonnull dereferenceable(64) %240) #9
  %292 = load i64, i64* %180, align 8
  br label %294

293:                                              ; preds = %289
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 0, i64 16, i1 false) #9
  br label %294

294:                                              ; preds = %293, %291
  %295 = phi i64 [ 0, %293 ], [ %292, %291 ]
  store atomic i64 %295, i64* %181 monotonic, align 8
  %296 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %301, label %298

298:                                              ; preds = %294
  %299 = inttoptr i64 %295 to i8*
  %300 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %299) #9
  br label %301

301:                                              ; preds = %294, %298
  %302 = load i64, i64* %183, align 8
  store i64 %302, i64* %184, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #9
  br label %303

303:                                              ; preds = %301, %286
  %304 = load %"class.blink::Node"*, %"class.blink::Node"** %173, align 8
  %305 = icmp eq %"class.blink::Node"* %304, %192
  br i1 %305, label %306, label %320

306:                                              ; preds = %303
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #9
  %307 = icmp eq %"class.blink::Node"* %228, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %306
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %14, %"class.blink::Node"* nonnull dereferenceable(64) %228) #9
  %309 = load i64, i64* %186, align 8
  br label %311

310:                                              ; preds = %306
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 16, i1 false) #9
  br label %311

311:                                              ; preds = %310, %308
  %312 = phi i64 [ 0, %310 ], [ %309, %308 ]
  store atomic i64 %312, i64* %187 monotonic, align 8
  %313 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %318, label %315

315:                                              ; preds = %311
  %316 = inttoptr i64 %312 to i8*
  %317 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %316) #9
  br label %318

318:                                              ; preds = %311, %315
  %319 = load i64, i64* %189, align 8
  store i64 %319, i64* %190, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #9
  br label %320

320:                                              ; preds = %282, %303, %318
  %321 = icmp eq %"class.blink::EditingStyle"* %277, null
  %322 = icmp eq %"class.blink::Node"* %278, null
  %323 = or i1 %321, %322
  br i1 %323, label %332, label %324

324:                                              ; preds = %320, %328
  %325 = phi %"class.blink::Node"* [ %330, %328 ], [ %278, %320 ]
  call void @_ZN5blink17ApplyStyleCommand26ApplyInlineStyleToPushDownEPNS_4NodeEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* nonnull %325, %"class.blink::EditingStyle"* nonnull %277, %"class.blink::EditingState"* %3)
  %326 = load i8, i8* %121, align 1, !range !2
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %328, label %337

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %325, i64 0, i32 5, i32 0, i32 0
  %330 = load %"class.blink::Node"*, %"class.blink::Node"** %329, align 8
  %331 = icmp eq %"class.blink::Node"* %330, null
  br i1 %331, label %332, label %324

332:                                              ; preds = %328, %218, %320, %225
  %333 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %334 = icmp eq %"class.blink::Node"* %192, %333
  br i1 %334, label %335, label %191

335:                                              ; preds = %332, %191
  %336 = bitcast %"class.blink::EphemeralRangeTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %336) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %12) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %15)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %336) #9
  br label %337

337:                                              ; preds = %276, %324, %335
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #9
  br label %338

338:                                              ; preds = %124, %119, %164, %337
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand33MergeStartWithPreviousIfIdenticalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %9 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %54

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZN5blink12IsAtomicNodeEPKNS_4NodeE(%"class.blink::Node"* %8) #9
  br i1 %12, label %13, label %20

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %17, label %54

17:                                               ; preds = %13
  %18 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %8) #9
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0
  br label %20

20:                                               ; preds = %17, %11
  %21 = phi %"class.blink::Node"* [ %19, %17 ], [ %8, %11 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %54

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 4, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %54, label %30

30:                                               ; preds = %26
  %31 = tail call zeroext i1 @_ZN5blink20AreIdenticalElementsERKNS_4NodeES2_(%"class.blink::Node"* dereferenceable(64) %21, %"class.blink::Node"* nonnull dereferenceable(64) %28) #9
  br i1 %31, label %32, label %54

32:                                               ; preds = %30
  %33 = bitcast %"class.blink::Node"* %28 to %"class.blink::Element"*
  %34 = bitcast %"class.blink::Node"* %21 to %"class.blink::Element"*
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 1
  %36 = bitcast %"class.blink::Node"* %35 to %"class.blink::Node"**
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommand22MergeIdenticalElementsEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %38, %"class.blink::Element"* nonnull %33, %"class.blink::Element"* %34, %"class.blink::EditingState"* %3) #9
  %39 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %32
  %43 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %37) #9
  %44 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %21, %45
  %47 = select i1 %46, i32 %43, i32 0
  %48 = bitcast %"class.blink::EphemeralRangeTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #9
  %49 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::Node"* %21, i32 %43) #9
  %50 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %52 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* %2) #9
  %53 = add nsw i32 %52, %47
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* %51, i32 %53) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %5)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #9
  br label %54

54:                                               ; preds = %32, %42, %26, %30, %20, %13, %4
  %55 = phi i1 [ false, %4 ], [ false, %13 ], [ false, %20 ], [ true, %42 ], [ false, %32 ], [ false, %26 ], [ false, %30 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand27MergeEndWithNextIfIdenticalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %9 = tail call zeroext i1 @_ZN5blink12IsAtomicNodeEPKNS_4NodeE(%"class.blink::Node"* %8) #9
  br i1 %9, label %10, label %84

10:                                               ; preds = %4
  %11 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %2) #9
  %12 = icmp eq %"class.blink::Node"* %8, null
  br i1 %12, label %72, label %13

13:                                               ; preds = %10
  %14 = bitcast %"class.blink::Node"* %8 to i1 (%"class.blink::Node"*)***
  %15 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %15, i64 41
  %17 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::Node"* nonnull %8) #9
  br i1 %18, label %19, label %51

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1
  %21 = bitcast %"class.blink::Node"* %20 to i8*
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.blink::TraceWrapperV8Reference"* %25 to %"class.blink::ParkableStringImpl"**
  %27 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %26, align 8
  %28 = icmp eq %"class.blink::ParkableStringImpl"* %27, null
  br i1 %28, label %72, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %30, align 8
  %32 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %27, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %72

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %31, i64 0, i32 8
  %42 = load i32, i32* %41, align 4
  br label %72

43:                                               ; preds = %19
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 1
  %45 = bitcast i32* %44 to %"class.WTF::StringImpl"**
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %72, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  br label %72

51:                                               ; preds = %13
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1
  %58 = bitcast %"class.blink::Node"* %57 to %"class.blink::Node"**
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = icmp ne %"class.blink::Node"* %59, null
  %61 = icmp sgt i32 %11, 0
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %72

63:                                               ; preds = %56, %63
  %64 = phi %"class.blink::Node"* [ %68, %63 ], [ %59, %56 ]
  %65 = phi i32 [ %66, %63 ], [ 0, %56 ]
  %66 = add nuw nsw i32 %65, 1
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 0, i32 5, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp ne %"class.blink::Node"* %68, null
  %70 = icmp slt i32 %66, %11
  %71 = and i1 %70, %69
  br i1 %71, label %63, label %72

72:                                               ; preds = %63, %10, %24, %33, %37, %40, %43, %48, %51, %56
  %73 = phi i32 [ 0, %24 ], [ %42, %40 ], [ %39, %37 ], [ 0, %33 ], [ %50, %48 ], [ 0, %43 ], [ 0, %56 ], [ 0, %51 ], [ 0, %10 ], [ %66, %63 ]
  %74 = icmp sgt i32 %73, %11
  br i1 %74, label %146, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %77, i64 0, i32 5, i32 0, i32 0
  %79 = load %"class.blink::Node"*, %"class.blink::Node"** %78, align 8
  %80 = icmp eq %"class.blink::Node"* %79, null
  br i1 %80, label %81, label %146

81:                                               ; preds = %75
  %82 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %77) #9
  %83 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %82, i64 0, i32 0
  br label %84

84:                                               ; preds = %81, %4
  %85 = phi %"class.blink::Node"* [ %83, %81 ], [ %8, %4 ]
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %146

90:                                               ; preds = %84
  %91 = and i32 %87, 48
  %92 = icmp ne i32 %91, 0
  %93 = icmp eq %"class.blink::Node"* %85, null
  %94 = or i1 %93, %92
  br i1 %94, label %107, label %95

95:                                               ; preds = %90
  %96 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %97 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1, i32 2
  %100 = bitcast %"class.blink::Member"* %99 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %146, label %107

107:                                              ; preds = %90, %95
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 0, i32 5, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %146, label %111

111:                                              ; preds = %107
  %112 = tail call zeroext i1 @_ZN5blink20AreIdenticalElementsERKNS_4NodeES2_(%"class.blink::Node"* dereferenceable(64) %85, %"class.blink::Node"* nonnull dereferenceable(64) %109) #9
  br i1 %112, label %113, label %146

113:                                              ; preds = %111
  %114 = bitcast %"class.blink::Node"* %109 to %"class.blink::Element"*
  %115 = bitcast %"class.blink::Node"* %85 to %"class.blink::Element"*
  %116 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 1
  %117 = bitcast %"class.blink::Node"* %116 to %"class.blink::Node"**
  %118 = load %"class.blink::Node"*, %"class.blink::Node"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommand22MergeIdenticalElementsEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %119, %"class.blink::Element"* %115, %"class.blink::Element"* nonnull %114, %"class.blink::EditingState"* %3) #9
  %120 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %121 = load i8, i8* %120, align 1, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %146

123:                                              ; preds = %113
  %124 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %125 = icmp eq %"class.blink::Node"* %124, %85
  %126 = icmp eq %"class.blink::Node"* %118, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  %128 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %118) #9
  br label %136

129:                                              ; preds = %123
  %130 = tail call %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"* nonnull %109) #9
  %131 = bitcast %"class.blink::NodeList"* %130 to i32 (%"class.blink::NodeList"*)***
  %132 = load i32 (%"class.blink::NodeList"*)**, i32 (%"class.blink::NodeList"*)*** %131, align 8
  %133 = getelementptr inbounds i32 (%"class.blink::NodeList"*)*, i32 (%"class.blink::NodeList"*)** %132, i64 9
  %134 = load i32 (%"class.blink::NodeList"*)*, i32 (%"class.blink::NodeList"*)** %133, align 8
  %135 = tail call i32 %134(%"class.blink::NodeList"* %130) #9
  br label %136

136:                                              ; preds = %129, %127
  %137 = phi i32 [ %128, %127 ], [ %135, %129 ]
  %138 = bitcast %"class.blink::EphemeralRangeTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %138) #9
  %139 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #9
  br i1 %125, label %140, label %143

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %142 = load i32, i32* %141, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::Node"* nonnull %109, i32 %142) #9
  br label %144

143:                                              ; preds = %136
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  br label %144

144:                                              ; preds = %143, %140
  %145 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* nonnull %109, i32 %137) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7) #9
  call void @_ZN5blink17ApplyStyleCommand14UpdateStartEndERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %5)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %138) #9
  br label %146

146:                                              ; preds = %113, %75, %72, %144, %107, %111, %84, %95
  %147 = phi i1 [ false, %95 ], [ false, %84 ], [ true, %144 ], [ false, %113 ], [ false, %107 ], [ false, %111 ], [ false, %72 ], [ false, %75 ]
  ret i1 %147
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand27FixRangeAndApplyInlineStyleEPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* %2) #9
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %12 = tail call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %11) #9
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %43, label %14

14:                                               ; preds = %5
  %15 = icmp eq %"class.blink::Node"* %9, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1
  %23 = bitcast %"class.blink::Node"* %22 to %"class.blink::Node"**
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %21, %16, %14
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26, %21
  %31 = phi %"class.blink::Node"* [ %24, %21 ], [ %28, %26 ]
  %32 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  br label %37

33:                                               ; preds = %26
  %34 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %9) #9
  %35 = icmp eq %"class.blink::Node"* %34, null
  %36 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #9
  br i1 %35, label %42, label %37

37:                                               ; preds = %30, %33
  %38 = phi i8* [ %32, %30 ], [ %36, %33 ]
  %39 = phi %"class.blink::Node"* [ %31, %30 ], [ %34, %33 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %39) #9
  %40 = call signext i16 @_ZN5blink16ComparePositionsERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_(%"class.blink::PositionTemplate"* dereferenceable(16) %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  %41 = icmp slt i16 %40, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  br i1 %41, label %145, label %43

42:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #9
  br label %145

43:                                               ; preds = %5, %37
  %44 = phi %"class.blink::Node"* [ %39, %37 ], [ %9, %5 ]
  %45 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* %3) #9
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %49 = call i32 @_ZN5blink14CaretMaxOffsetEPKNS_4NodeE(%"class.blink::Node"* %48) #9
  %50 = icmp slt i32 %47, %49
  br i1 %50, label %58, label %51

51:                                               ; preds = %43
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 5, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %52) #9
  br label %58

58:                                               ; preds = %43, %56
  %59 = phi %"class.blink::Node"* [ %57, %56 ], [ %46, %43 ]
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  br label %61

61:                                               ; preds = %58, %51
  %62 = phi %"class.blink::Node"* [ %60, %58 ], [ %52, %51 ]
  %63 = phi %"class.blink::Node"* [ %59, %58 ], [ %54, %51 ]
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %65 = icmp eq %"class.blink::Node"* %64, null
  %66 = xor i1 %65, true
  %67 = icmp eq %"class.blink::Node"* %64, %62
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %115

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %115

75:                                               ; preds = %69
  %76 = icmp eq i32 %71, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %83, label %115

83:                                               ; preds = %75, %77
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 48
  %87 = icmp ne i32 %86, 0
  %88 = or i1 %65, %87
  br i1 %88, label %115, label %89

89:                                               ; preds = %83
  %90 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %91 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 1, i32 2
  %94 = bitcast %"class.blink::Member"* %93 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %97, %99
  br i1 %100, label %101, label %115

101:                                              ; preds = %89
  %102 = and i32 %85, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 1
  %106 = bitcast %"class.blink::Node"* %105 to %"class.blink::Node"**
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %109, label %115

109:                                              ; preds = %104, %101
  %110 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 5, i32 0, i32 0
  %111 = load %"class.blink::Node"*, %"class.blink::Node"** %110, align 8
  %112 = icmp eq %"class.blink::Node"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %62) #9
  br label %115

115:                                              ; preds = %61, %83, %69, %113, %109, %104, %89, %77
  %116 = phi %"class.blink::Node"* [ %63, %89 ], [ %63, %77 ], [ %114, %113 ], [ %111, %109 ], [ %107, %104 ], [ %63, %69 ], [ %63, %83 ], [ %63, %61 ]
  %117 = call %"class.blink::Element"* @_ZN5blink19RootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %44) #9
  %118 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %117, i64 0, i32 0, i32 0
  %119 = icmp eq %"class.blink::Node"* %44, %118
  br i1 %119, label %143, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.blink::EphemeralRangeTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #9
  %122 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"* %2, %"class.blink::PositionTemplate"* dereferenceable(16) %3) #9
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %7, %"class.blink::PositionTemplate"* dereferenceable(16) %2, %"class.blink::PositionTemplate"* dereferenceable(16) %3) #9
  br label %125

124:                                              ; preds = %120
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %7, %"class.blink::PositionTemplate"* dereferenceable(16) %3, %"class.blink::PositionTemplate"* dereferenceable(16) %2) #9
  br label %125

125:                                              ; preds = %124, %123
  %126 = icmp eq %"class.blink::Element"* %117, null
  br i1 %126, label %141, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %117, i64 0, i32 0
  %129 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %44) #9
  %130 = icmp eq %"class.blink::ContainerNode"* %129, %128
  br i1 %130, label %141, label %131

131:                                              ; preds = %127, %136
  %132 = phi %"class.blink::Node"* [ %138, %136 ], [ %44, %127 ]
  %133 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %132) #9
  %134 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %133, i64 0, i32 0
  %135 = call zeroext i1 @_ZN5blink20CompositeEditCommand28IsNodeVisiblyContainedWithinERNS_4NodeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::Node"* dereferenceable(64) %134, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %7) #9
  br i1 %135, label %136, label %141

136:                                              ; preds = %131
  %137 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %132) #9
  %138 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %137, i64 0, i32 0
  %139 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %138) #9
  %140 = icmp eq %"class.blink::ContainerNode"* %139, %128
  br i1 %140, label %141, label %131

141:                                              ; preds = %136, %131, %127, %125
  %142 = phi %"class.blink::Node"* [ %44, %125 ], [ %44, %127 ], [ %132, %131 ], [ %138, %136 ]
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #9
  br label %143

143:                                              ; preds = %115, %141
  %144 = phi %"class.blink::Node"* [ %142, %141 ], [ %44, %115 ]
  call void @_ZN5blink17ApplyStyleCommand27ApplyInlineStyleToNodeRangeEPNS_12EditingStyleEPNS_4NodeES4_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::Node"* %144, %"class.blink::Node"* %116, %"class.blink::EditingState"* %4)
  br label %145

145:                                              ; preds = %37, %42, %143
  ret void
}

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink19RootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20CompositeEditCommand28IsNodeVisiblyContainedWithinERNS_4NodeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::Node"* dereferenceable(64), %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand27ApplyInlineStyleToNodeRangeEPNS_12EditingStyleEPNS_4NodeES4_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::HeapVector.1318", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.blink::InlineRunToApplyStyle", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::StyleChange", align 8
  %11 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 8
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %530

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %16, i32 7) #9
  %17 = bitcast %"class.blink::HeapVector.1318"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.blink::HeapVector.1318", %"class.blink::HeapVector.1318"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::HeapVector.1318", %"class.blink::HeapVector.1318"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.blink::HeapVector.1318", %"class.blink::HeapVector.1318"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #9
  %21 = icmp eq %"class.blink::Node"* %2, null
  %22 = icmp eq %"class.blink::Node"* %2, %3
  %23 = or i1 %21, %22
  br i1 %23, label %462, label %24

24:                                               ; preds = %14
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.blink::InlineRunToApplyStyle"* %8 to i8*
  %28 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 3
  %32 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 5, i32 7, i32 0, i32 0
  %33 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  %34 = bitcast %"class.blink::PositionTemplate"* %31 to i8*
  %35 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 1
  %36 = bitcast %"class.blink::Member"* %35 to i64*
  %37 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 2
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  %39 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 4
  %40 = bitcast %"class.blink::Member.1324"* %39 to i64*
  %41 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 5
  %42 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.blink::StyleChange"* %41 to i64*
  %44 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 5, i32 1
  %45 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 5, i32 7
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 5, i32 8
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  %50 = bitcast %"class.WTF::String"* %48 to i64*
  %51 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %8, i64 0, i32 5, i32 9
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  %53 = bitcast %"class.WTF::String"* %51 to i64*
  %54 = getelementptr inbounds %"class.blink::HeapVector.1318", %"class.blink::HeapVector.1318"* %6, i64 0, i32 0
  %55 = icmp eq %"class.blink::Node"* %3, null
  %56 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %1, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %59 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %60 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %24, %400
  %63 = phi %"class.blink::Node"* [ %2, %24 ], [ %401, %400 ]
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 1
  %70 = bitcast %"class.blink::Node"* %69 to %"class.blink::Node"**
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %80

73:                                               ; preds = %68, %62
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 5, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  %79 = load i32, i32* %64, align 8
  br label %80

80:                                               ; preds = %68, %73, %77
  %81 = phi i32 [ %79, %77 ], [ %65, %73 ], [ %65, %68 ]
  %82 = phi %"class.blink::Node"* [ %78, %77 ], [ %75, %73 ], [ %71, %68 ]
  %83 = and i32 %81, 1
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 6, i32 0, i32 0
  br i1 %84, label %90, label %86

86:                                               ; preds = %80
  %87 = bitcast %"class.blink::NodeData"** %85 to %"class.blink::NodeRareData"**
  %88 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %88, i64 0, i32 1, i32 0, i32 0
  br label %92

90:                                               ; preds = %80
  %91 = bitcast %"class.blink::NodeData"** %85 to %"class.blink::NodeRenderingData"**
  br label %92

92:                                               ; preds = %86, %90
  %93 = phi %"class.blink::NodeRenderingData"** [ %89, %86 ], [ %91, %90 ]
  %94 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %94, i64 0, i32 1
  %96 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %95, align 8
  %97 = icmp eq %"class.blink::LayoutObject"* %96, null
  br i1 %97, label %400, label %98

98:                                               ; preds = %92
  %99 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  br i1 %99, label %100, label %400

100:                                              ; preds = %98
  %101 = load i32, i32* %64, align 8
  %102 = and i32 %101, 48
  %103 = icmp eq i32 %102, 0
  %104 = bitcast %"class.blink::Node"* %63 to %"class.blink::HTMLElement"*
  %105 = select i1 %103, %"class.blink::HTMLElement"* %104, %"class.blink::HTMLElement"* null
  %106 = call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  %107 = xor i1 %106, true
  %108 = icmp ne %"class.blink::HTMLElement"* %105, null
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %205

110:                                              ; preds = %100
  br i1 %55, label %114, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %105, i64 0, i32 0, i32 0, i32 0
  %113 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %3, %"class.blink::Node"* %112) #9
  br i1 %113, label %405, label %114

114:                                              ; preds = %110, %111
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 5, i32 0, i32 0
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %115, align 8
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  br label %120

120:                                              ; preds = %114, %118
  %121 = phi %"class.blink::Node"* [ %119, %118 ], [ %116, %114 ]
  %122 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %56, align 8
  %123 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %122, null
  br i1 %123, label %400, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %105, i64 0, i32 0
  %126 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %105, i64 0, i32 0, i32 3, i32 0, i32 0
  %127 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %126, align 8
  %128 = icmp eq %"class.blink::ElementData"* %127, null
  br i1 %128, label %133, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %127, i64 0, i32 1, i32 0, i32 0
  %131 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %130, align 8
  %132 = icmp eq %"class.blink::CSSPropertyValueSet"* %131, null
  br i1 %132, label %133, label %140

133:                                              ; preds = %124, %129
  %134 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #9
  %135 = bitcast i8* %134 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %135, i8 zeroext 1) #9
  %136 = getelementptr inbounds i8, i8* %134, i64 -4
  %137 = bitcast i8* %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = or i16 %138, 1
  store atomic i16 %139, i16* %137 release, align 2
  br label %142

140:                                              ; preds = %129
  %141 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* nonnull %131) #9
  br label %142

142:                                              ; preds = %133, %140
  %143 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %141, %140 ], [ %135, %133 ]
  %144 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %56, align 8
  %145 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %144, i64 0, i32 0
  call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %143, %"class.blink::CSSPropertyValueSet"* %145) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  %146 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %143, i64 0, i32 0
  %147 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %146) #9
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %172, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 acquire, align 4
  %152 = and i32 %151, 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %149
  %155 = load atomic i32, i32* %150 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %172

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i33
  %162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #9
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !9

167:                                              ; preds = %158
  call void @llvm.trap() #9
  unreachable

168:                                              ; preds = %158
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %159, align 4
  br label %172

170:                                              ; preds = %149
  %171 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %147) #9
  br label %172

172:                                              ; preds = %142, %154, %168, %170
  %173 = phi %"class.WTF::StringImpl"* [ %171, %170 ], [ %147, %154 ], [ %147, %168 ], [ null, %142 ]
  %174 = ptrtoint %"class.WTF::StringImpl"* %173 to i64
  store i64 %174, i64* %60, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %57, %"class.blink::Element"* %125, %"class.blink::QualifiedName"* dereferenceable(8) %58, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #9
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #9
  br label %190

190:                                              ; preds = %172, %186, %189
  br i1 %148, label %204, label %191

191:                                              ; preds = %190
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #9
  br label %204

204:                                              ; preds = %190, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  br label %400

205:                                              ; preds = %100
  %206 = call zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"* nonnull %63) #9
  br i1 %206, label %400, label %207

207:                                              ; preds = %205
  %208 = load i32, i32* %64, align 8
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %271, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 1
  %213 = bitcast %"class.blink::Node"* %212 to %"class.blink::Node"**
  %214 = load %"class.blink::Node"*, %"class.blink::Node"** %213, align 8
  %215 = icmp eq %"class.blink::Node"* %214, null
  br i1 %215, label %271, label %216

216:                                              ; preds = %211
  %217 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* nonnull %63, %"class.blink::Node"* %3) #9
  br i1 %217, label %400, label %218

218:                                              ; preds = %216
  %219 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  br i1 %219, label %220, label %400

220:                                              ; preds = %218
  %221 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 5, i32 0, i32 0
  %222 = load %"class.blink::Node"*, %"class.blink::Node"** %221, align 8
  %223 = icmp eq %"class.blink::Node"* %222, null
  br i1 %223, label %224, label %226

224:                                              ; preds = %220
  %225 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  br label %226

226:                                              ; preds = %220, %224
  %227 = phi %"class.blink::Node"* [ %225, %224 ], [ %222, %220 ]
  %228 = load i32, i32* %64, align 8
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %260, label %231

231:                                              ; preds = %226
  %232 = load %"class.blink::Node"*, %"class.blink::Node"** %213, align 8
  %233 = icmp eq %"class.blink::Node"* %232, null
  %234 = icmp eq %"class.blink::Node"* %232, %227
  %235 = or i1 %233, %234
  br i1 %235, label %260, label %236

236:                                              ; preds = %231, %255
  %237 = phi %"class.blink::Node"* [ %256, %255 ], [ %232, %231 ]
  %238 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %237) #9
  br i1 %238, label %239, label %400

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %237, i64 0, i32 1
  %241 = load i32, i32* %240, align 8
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %249, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %237, i64 1
  %246 = bitcast %"class.blink::Node"* %245 to %"class.blink::Node"**
  %247 = load %"class.blink::Node"*, %"class.blink::Node"** %246, align 8
  %248 = icmp eq %"class.blink::Node"* %247, null
  br i1 %248, label %249, label %255

249:                                              ; preds = %244, %239
  %250 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %237, i64 0, i32 5, i32 0, i32 0
  %251 = load %"class.blink::Node"*, %"class.blink::Node"** %250, align 8
  %252 = icmp eq %"class.blink::Node"* %251, null
  br i1 %252, label %253, label %255

253:                                              ; preds = %249
  %254 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %237) #9
  br label %255

255:                                              ; preds = %244, %249, %253
  %256 = phi %"class.blink::Node"* [ %254, %253 ], [ %251, %249 ], [ %247, %244 ]
  %257 = icmp eq %"class.blink::Node"* %256, null
  %258 = icmp eq %"class.blink::Node"* %256, %227
  %259 = or i1 %257, %258
  br i1 %259, label %260, label %236

260:                                              ; preds = %255, %231, %226
  %261 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %63) #9
  %262 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %261, i64 0, i32 0
  %263 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %262) #9
  br i1 %263, label %264, label %400

264:                                              ; preds = %260
  %265 = call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %63) #9
  br i1 %265, label %266, label %271

266:                                              ; preds = %264
  %267 = load %"class.blink::Node"*, %"class.blink::Node"** %221, align 8
  %268 = icmp eq %"class.blink::Node"* %267, null
  br i1 %268, label %269, label %400

269:                                              ; preds = %266
  %270 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %63) #9
  br label %400

271:                                              ; preds = %211, %207, %264
  %272 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 5, i32 0, i32 0
  %273 = load %"class.blink::Node"*, %"class.blink::Node"** %272, align 8
  %274 = icmp eq %"class.blink::Node"* %273, null
  %275 = icmp eq %"class.blink::Node"* %273, %3
  %276 = or i1 %274, %275
  br i1 %276, label %348, label %277

277:                                              ; preds = %271, %343
  %278 = phi %"class.blink::Node"* [ %344, %343 ], [ %273, %271 ]
  %279 = phi %"class.blink::Node"* [ %278, %343 ], [ %63, %271 ]
  %280 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* nonnull %278, %"class.blink::Node"* %3) #9
  br i1 %280, label %348, label %281

281:                                              ; preds = %277
  %282 = call zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"* nonnull %278) #9
  br i1 %282, label %283, label %298

283:                                              ; preds = %281
  %284 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %278, i64 0, i32 1
  %285 = load i32, i32* %284, align 8
  %286 = and i32 %285, 48
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %348

288:                                              ; preds = %283
  %289 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %290 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %278, i64 1, i32 2
  %291 = bitcast %"class.blink::Member"* %290 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %292 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %292, i64 0, i32 3, i32 0, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %289, i64 0, i32 3, i32 0, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %294, %296
  br i1 %297, label %298, label %348

298:                                              ; preds = %288, %281
  %299 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %278) #9
  br i1 %299, label %300, label %348

300:                                              ; preds = %298
  %301 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %278, i64 0, i32 5, i32 0, i32 0
  %302 = load %"class.blink::Node"*, %"class.blink::Node"** %301, align 8
  %303 = icmp eq %"class.blink::Node"* %302, null
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  %305 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %278) #9
  br label %306

306:                                              ; preds = %300, %304
  %307 = phi %"class.blink::Node"* [ %305, %304 ], [ %302, %300 ]
  %308 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %278, i64 0, i32 1
  %309 = load i32, i32* %308, align 8
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %343, label %312

312:                                              ; preds = %306
  %313 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %278, i64 1
  %314 = bitcast %"class.blink::Node"* %313 to %"class.blink::Node"**
  %315 = load %"class.blink::Node"*, %"class.blink::Node"** %314, align 8
  %316 = icmp eq %"class.blink::Node"* %315, null
  %317 = icmp eq %"class.blink::Node"* %315, %307
  %318 = or i1 %316, %317
  br i1 %318, label %343, label %319

319:                                              ; preds = %312, %338
  %320 = phi %"class.blink::Node"* [ %339, %338 ], [ %315, %312 ]
  %321 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %320) #9
  br i1 %321, label %322, label %348

322:                                              ; preds = %319
  %323 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %320, i64 0, i32 1
  %324 = load i32, i32* %323, align 8
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %332, label %327

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %320, i64 1
  %329 = bitcast %"class.blink::Node"* %328 to %"class.blink::Node"**
  %330 = load %"class.blink::Node"*, %"class.blink::Node"** %329, align 8
  %331 = icmp eq %"class.blink::Node"* %330, null
  br i1 %331, label %332, label %338

332:                                              ; preds = %327, %322
  %333 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %320, i64 0, i32 5, i32 0, i32 0
  %334 = load %"class.blink::Node"*, %"class.blink::Node"** %333, align 8
  %335 = icmp eq %"class.blink::Node"* %334, null
  br i1 %335, label %336, label %338

336:                                              ; preds = %332
  %337 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %320) #9
  br label %338

338:                                              ; preds = %327, %332, %336
  %339 = phi %"class.blink::Node"* [ %337, %336 ], [ %334, %332 ], [ %330, %327 ]
  %340 = icmp eq %"class.blink::Node"* %339, null
  %341 = icmp eq %"class.blink::Node"* %339, %307
  %342 = or i1 %340, %341
  br i1 %342, label %343, label %319

343:                                              ; preds = %338, %312, %306
  %344 = load %"class.blink::Node"*, %"class.blink::Node"** %301, align 8
  %345 = icmp eq %"class.blink::Node"* %344, null
  %346 = icmp eq %"class.blink::Node"* %344, %3
  %347 = or i1 %345, %346
  br i1 %347, label %348, label %277

348:                                              ; preds = %288, %277, %343, %298, %283, %319, %271
  %349 = phi %"class.blink::Node"* [ %63, %271 ], [ %279, %319 ], [ %279, %288 ], [ %279, %277 ], [ %278, %343 ], [ %279, %298 ], [ %279, %283 ]
  %350 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %349, i64 0, i32 5, i32 0, i32 0
  %351 = load %"class.blink::Node"*, %"class.blink::Node"** %350, align 8
  %352 = icmp eq %"class.blink::Node"* %351, null
  br i1 %352, label %353, label %359

353:                                              ; preds = %348
  %354 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %349) #9
  %355 = load %"class.blink::Node"*, %"class.blink::Node"** %350, align 8
  %356 = icmp eq %"class.blink::Node"* %355, null
  br i1 %356, label %357, label %359

357:                                              ; preds = %353
  %358 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %349) #9
  br label %359

359:                                              ; preds = %348, %353, %357
  %360 = phi %"class.blink::Node"* [ %354, %357 ], [ %354, %353 ], [ %351, %348 ]
  %361 = phi %"class.blink::Node"* [ %358, %357 ], [ %355, %353 ], [ %351, %348 ]
  %362 = call zeroext i1 @_ZN5blink17ApplyStyleCommand27ShouldApplyInlineStyleToRunEPNS_12EditingStyleEPNS_4NodeES4_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::Node"* nonnull %63, %"class.blink::Node"* %361)
  br i1 %362, label %363, label %400

363:                                              ; preds = %359
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %27) #9
  store %"class.blink::Node"* %63, %"class.blink::Node"** %28, align 8
  store %"class.blink::Node"* %349, %"class.blink::Node"** %29, align 8
  store %"class.blink::Node"* %361, %"class.blink::Node"** %30, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 38, i1 false) #9
  %364 = load i32, i32* %20, align 4
  %365 = load i32, i32* %19, align 8
  %366 = icmp eq i32 %364, %365
  br i1 %366, label %398, label %367, !prof !9

367:                                              ; preds = %363
  %368 = ptrtoint %"class.blink::Node"* %63 to i64
  %369 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %18, align 8
  %370 = zext i32 %364 to i64
  %371 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370
  %372 = bitcast %"class.blink::InlineRunToApplyStyle"* %371 to i64*
  store i64 %368, i64* %372, align 8
  %373 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 1
  %374 = load i64, i64* %36, align 8
  %375 = bitcast %"class.blink::Member"* %373 to i64*
  store i64 %374, i64* %375, align 8
  %376 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 2
  %377 = load i64, i64* %38, align 8
  %378 = bitcast %"class.blink::Member"* %376 to i64*
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 3
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %379, %"class.blink::PositionTemplate"* dereferenceable(16) %31) #9
  %380 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 4
  %381 = load i64, i64* %40, align 8
  %382 = bitcast %"class.blink::Member.1324"* %380 to i64*
  store i64 %381, i64* %382, align 8
  %383 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 5
  %384 = load i64, i64* %43, align 8
  %385 = bitcast %"class.blink::StyleChange"* %383 to i64*
  store i64 %384, i64* %385, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %386 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 5, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* align 8 %44, i64 6, i1 false) #9
  %387 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 5, i32 7
  %388 = load i64, i64* %47, align 8
  %389 = bitcast %"class.WTF::String"* %387 to i64*
  store i64 %388, i64* %389, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %390 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 5, i32 8
  %391 = load i64, i64* %50, align 8
  %392 = bitcast %"class.WTF::String"* %390 to i64*
  store i64 %391, i64* %392, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %49, align 8
  %393 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %369, i64 %370, i32 5, i32 9
  %394 = load i64, i64* %53, align 8
  %395 = bitcast %"class.WTF::String"* %393 to i64*
  store i64 %394, i64* %395, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::InlineRunToApplyStyle"* %371) #9
  %396 = load i32, i32* %20, align 4
  %397 = add i32 %396, 1
  store i32 %397, i32* %20, align 4
  br label %399

398:                                              ; preds = %363
  call void @_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1321"* nonnull %54, %"class.blink::InlineRunToApplyStyle"* nonnull dereferenceable(88) %8) #9
  br label %399

399:                                              ; preds = %367, %398
  call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* %41) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %27) #9
  br label %400

400:                                              ; preds = %236, %269, %266, %218, %359, %399, %216, %260, %205, %120, %204, %92, %98
  %401 = phi %"class.blink::Node"* [ %82, %98 ], [ %82, %92 ], [ %267, %266 ], [ %270, %269 ], [ %82, %218 ], [ %360, %399 ], [ %360, %359 ], [ %82, %216 ], [ %82, %260 ], [ %82, %205 ], [ %121, %120 ], [ %121, %204 ], [ %82, %236 ]
  %402 = icmp eq %"class.blink::Node"* %401, null
  %403 = icmp eq %"class.blink::Node"* %401, %3
  %404 = or i1 %402, %403
  br i1 %404, label %405, label %62

405:                                              ; preds = %400, %111
  %406 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %18, align 8
  %407 = load i32, i32* %20, align 4
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %406, i64 %408
  %410 = icmp eq i32 %407, 0
  br i1 %410, label %462, label %411

411:                                              ; preds = %405
  %412 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %4, i64 0, i32 0
  %413 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  %414 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %415 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %416 = bitcast i32* %415 to i64*
  br label %417

417:                                              ; preds = %411, %459
  %418 = phi %"class.blink::InlineRunToApplyStyle"* [ %406, %411 ], [ %460, %459 ]
  %419 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 0
  %420 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 1
  %421 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 2, i32 0, i32 0
  %422 = load %"class.blink::Node"*, %"class.blink::Node"** %421, align 8
  call void @_ZN5blink17ApplyStyleCommand35RemoveConflictingInlineStyleFromRunEPNS_12EditingStyleERNS_6MemberINS_4NodeEEES6_PS4_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::Member"* dereferenceable(8) %419, %"class.blink::Member"* dereferenceable(8) %420, %"class.blink::Node"* %422, %"class.blink::EditingState"* %4)
  %423 = load i8, i8* %412, align 1, !range !2
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %425, label %529

425:                                              ; preds = %417
  %426 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 0, i32 0, i32 0
  %427 = load %"class.blink::Node"*, %"class.blink::Node"** %426, align 8
  %428 = icmp eq %"class.blink::Node"* %427, null
  br i1 %428, label %459, label %429

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 1, i32 0, i32 0
  %431 = load %"class.blink::Node"*, %"class.blink::Node"** %430, align 8
  %432 = icmp eq %"class.blink::Node"* %431, null
  br i1 %432, label %459, label %433

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %427, i64 0, i32 1
  %435 = load i32, i32* %434, align 8
  %436 = and i32 %435, 256
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %459, label %438

438:                                              ; preds = %433
  %439 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %431, i64 0, i32 1
  %440 = load i32, i32* %439, align 8
  %441 = and i32 %440, 256
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %459, label %443

443:                                              ; preds = %438
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %413) #9
  %444 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 4
  call void @_ZN5blink17ApplyStyleCommand34PositionToComputeInlineStyleChangeEPNS_4NodeERNS_6MemberINS_15HTMLSpanElementEEEPNS_12EditingStateE(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* nonnull %427, %"class.blink::Member.1324"* dereferenceable(8) %444, %"class.blink::EditingState"* %4)
  %445 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 3
  %446 = load i64, i64* %414, align 8
  %447 = bitcast %"class.blink::PositionTemplate"* %445 to i64*
  store atomic i64 %446, i64* %447 monotonic, align 8
  %448 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %453, label %450

450:                                              ; preds = %443
  %451 = inttoptr i64 %446 to i8*
  %452 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %451) #9
  br label %453

453:                                              ; preds = %443, %450
  %454 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 0, i32 3, i32 1
  %455 = bitcast i32* %454 to i64*
  %456 = load i64, i64* %416, align 8
  store i64 %456, i64* %455, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %413) #9
  %457 = load i8, i8* %412, align 1, !range !2
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %459, label %529

459:                                              ; preds = %453, %438, %425, %429, %433
  %460 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %418, i64 1
  %461 = icmp eq %"class.blink::InlineRunToApplyStyle"* %460, %409
  br i1 %461, label %462, label %417

462:                                              ; preds = %459, %14, %405
  %463 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %463, i32 7) #9
  %464 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %18, align 8
  %465 = load i32, i32* %20, align 4
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %464, i64 %466
  %468 = icmp eq i32 %465, 0
  br i1 %468, label %529, label %469

469:                                              ; preds = %462
  %470 = bitcast %"class.blink::StyleChange"* %10 to i8*
  br label %480

471:                                              ; preds = %489
  %472 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %18, align 8
  %473 = load i32, i32* %20, align 4
  %474 = zext i32 %473 to i64
  %475 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %472, i64 %474
  %476 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %477 = icmp eq i32 %473, 0
  br i1 %477, label %529, label %478

478:                                              ; preds = %471
  %479 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %4, i64 0, i32 0
  br label %492

480:                                              ; preds = %469, %489
  %481 = phi %"class.blink::InlineRunToApplyStyle"* [ %464, %469 ], [ %490, %489 ]
  %482 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %481, i64 0, i32 3
  %483 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %482, i64 0, i32 0, i32 0, i32 0
  %484 = load %"class.blink::Node"*, %"class.blink::Node"** %483, align 8
  %485 = icmp eq %"class.blink::Node"* %484, null
  br i1 %485, label %489, label %486

486:                                              ; preds = %480
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %470) #9
  call void @_ZN5blink11StyleChangeC1EPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::StyleChange"* nonnull %10, %"class.blink::EditingStyle"* %1, %"class.blink::PositionTemplate"* dereferenceable(16) %482) #9
  %487 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %481, i64 0, i32 5
  %488 = call dereferenceable(40) %"class.blink::StyleChange"* @_ZN5blink11StyleChangeaSEOS0_(%"class.blink::StyleChange"* %487, %"class.blink::StyleChange"* nonnull dereferenceable(40) %10) #9
  call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %470) #9
  br label %489

489:                                              ; preds = %480, %486
  %490 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %481, i64 1
  %491 = icmp eq %"class.blink::InlineRunToApplyStyle"* %490, %467
  br i1 %491, label %471, label %480

492:                                              ; preds = %478, %526
  %493 = phi %"class.blink::InlineRunToApplyStyle"* [ %472, %478 ], [ %527, %526 ]
  %494 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %493, i64 0, i32 4, i32 0, i32 0
  %495 = load %"class.blink::HTMLSpanElement"*, %"class.blink::HTMLSpanElement"** %494, align 8
  %496 = icmp eq %"class.blink::HTMLSpanElement"* %495, null
  br i1 %496, label %501, label %497

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %495, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %476, %"class.blink::Node"* %498, %"class.blink::EditingState"* %4, i32 1) #9
  %499 = load i8, i8* %479, align 1, !range !2
  %500 = icmp eq i8 %499, 0
  br i1 %500, label %501, label %529

501:                                              ; preds = %497, %492
  %502 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %493, i64 0, i32 0, i32 0, i32 0
  %503 = load %"class.blink::Node"*, %"class.blink::Node"** %502, align 8
  %504 = icmp eq %"class.blink::Node"* %503, null
  br i1 %504, label %526, label %505

505:                                              ; preds = %501
  %506 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %493, i64 0, i32 1, i32 0, i32 0
  %507 = load %"class.blink::Node"*, %"class.blink::Node"** %506, align 8
  %508 = icmp eq %"class.blink::Node"* %507, null
  br i1 %508, label %526, label %509

509:                                              ; preds = %505
  %510 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %503, i64 0, i32 1
  %511 = load i32, i32* %510, align 8
  %512 = and i32 %511, 256
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %526, label %514

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %507, i64 0, i32 1
  %516 = load i32, i32* %515, align 8
  %517 = and i32 %516, 256
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %526, label %519

519:                                              ; preds = %514
  %520 = bitcast %"class.blink::InlineRunToApplyStyle"* %493 to i64*
  store atomic i64 0, i64* %520 monotonic, align 8
  %521 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %493, i64 0, i32 1, i32 0
  %522 = bitcast %"class.blink::MemberBase"* %521 to i64*
  store atomic i64 0, i64* %522 monotonic, align 8
  %523 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %493, i64 0, i32 5
  call void @_ZN5blink17ApplyStyleCommand22ApplyInlineStyleChangeEPNS_4NodeES2_RNS_11StyleChangeENS0_16AddStyledElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* nonnull %503, %"class.blink::Node"* nonnull %507, %"class.blink::StyleChange"* dereferenceable(40) %523, i32 0, %"class.blink::EditingState"* %4)
  %524 = load i8, i8* %479, align 1, !range !2
  %525 = icmp eq i8 %524, 0
  br i1 %525, label %526, label %529

526:                                              ; preds = %519, %514, %501, %505, %509
  %527 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %493, i64 1
  %528 = icmp eq %"class.blink::InlineRunToApplyStyle"* %527, %475
  br i1 %528, label %529, label %492

529:                                              ; preds = %453, %417, %526, %519, %497, %462, %471
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  br label %530

530:                                              ; preds = %5, %529
  ret void
}

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand27ShouldApplyInlineStyleToRunEPNS_12EditingStyleEPNS_4NodeES4_(%"class.blink::ApplyStyleCommand"* nocapture readonly, %"class.blink::EditingStyle"*, %"class.blink::Node"*, %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = icmp eq %"class.blink::Node"* %2, null
  %7 = icmp eq %"class.blink::Node"* %2, %3
  %8 = or i1 %6, %7
  br i1 %8, label %54, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %11 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  br label %12

12:                                               ; preds = %9, %49
  %13 = phi %"class.blink::Node"* [ %2, %9 ], [ %50, %49 ]
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1
  %20 = bitcast %"class.blink::Node"* %19 to %"class.blink::Node"**
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %34

23:                                               ; preds = %18, %12
  %24 = call zeroext i1 @_ZNK5blink12EditingStyle35StyleIsPresentInComputedStyleOfNodeEPNS_4NodeE(%"class.blink::EditingStyle"* %1, %"class.blink::Node"* nonnull %13) #9
  br i1 %24, label %25, label %54

25:                                               ; preds = %23
  %26 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %27 = icmp eq %"class.blink::Element"* %26, null
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::Node"* nonnull dereferenceable(64) %13) #9
  %29 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %30 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %29, i64 0, i32 2
  %31 = call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::QualifiedName"* dereferenceable(8) %30) #9
  %32 = icmp eq %"class.blink::Element"* %31, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br i1 %32, label %54, label %34

33:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %34

34:                                               ; preds = %18, %33, %28
  %35 = load i32, i32* %14, align 8
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1
  %40 = bitcast %"class.blink::Node"* %39 to %"class.blink::Node"**
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %49

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %13) #9
  br label %49

49:                                               ; preds = %38, %43, %47
  %50 = phi %"class.blink::Node"* [ %48, %47 ], [ %45, %43 ], [ %41, %38 ]
  %51 = icmp eq %"class.blink::Node"* %50, null
  %52 = icmp eq %"class.blink::Node"* %50, %3
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %12

54:                                               ; preds = %49, %23, %28, %4
  %55 = phi i1 [ false, %4 ], [ true, %28 ], [ true, %23 ], [ false, %49 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand35RemoveConflictingInlineStyleFromRunEPNS_12EditingStyleERNS_6MemberINS_4NodeEEES6_PS4_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::Member"* nocapture dereferenceable(8), %"class.blink::Member"* nocapture dereferenceable(8), %"class.blink::Node"* readnone, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %97, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %12 = bitcast %"class.blink::Member"* %2 to i64*
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::Member"* %3 to i64*
  br label %15

15:                                               ; preds = %10, %95
  %16 = phi %"class.blink::Node"* [ %8, %10 ], [ %47, %95 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 256
  %20 = icmp eq i32 %19, 0
  %21 = icmp eq %"class.blink::Node"* %16, %4
  %22 = or i1 %21, %20
  br i1 %22, label %97, label %23

23:                                               ; preds = %15
  %24 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #9
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25
  %30 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #9
  br label %46

31:                                               ; preds = %23
  %32 = load i32, i32* %17, align 8
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1
  %37 = bitcast %"class.blink::Node"* %36 to %"class.blink::Node"**
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %46

40:                                               ; preds = %35, %31
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #9
  br label %46

46:                                               ; preds = %44, %40, %35, %29, %25
  %47 = phi %"class.blink::Node"* [ %30, %29 ], [ %27, %25 ], [ %45, %44 ], [ %42, %40 ], [ %38, %35 ]
  %48 = load i32, i32* %17, align 8
  %49 = and i32 %48, 48
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %95

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::Node"* %16 to %"class.blink::HTMLElement"*
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 4, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %16) #9
  %58 = tail call zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* nonnull %52, %"class.blink::EditingState"* %5, i32 1, %"class.blink::EditingStyle"* null)
  %59 = load i8, i8* %11, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %97

61:                                               ; preds = %51
  %62 = load i32, i32* %17, align 8
  %63 = and i32 %62, 256
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %95

65:                                               ; preds = %61
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %67 = icmp eq %"class.blink::Node"* %66, %16
  br i1 %67, label %68, label %80

68:                                               ; preds = %65
  %69 = icmp eq %"class.blink::Node"* %54, null
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %54, i64 0, i32 5, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %57, i64 0, i32 1, i32 0, i32 0
  %72 = select i1 %69, %"class.blink::Node"** %71, %"class.blink::Node"** %70
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = ptrtoint %"class.blink::Node"* %73 to i64
  store atomic i64 %74, i64* %12 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %68
  %78 = bitcast %"class.blink::Node"* %73 to i8*
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #9
  br label %80

80:                                               ; preds = %77, %68, %65
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %82 = icmp eq %"class.blink::Node"* %81, %16
  br i1 %82, label %83, label %95

83:                                               ; preds = %80
  %84 = icmp eq %"class.blink::Node"* %56, null
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 4, i32 0, i32 0
  %86 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %57, i64 0, i32 2, i32 0, i32 0
  %87 = select i1 %84, %"class.blink::Node"** %86, %"class.blink::Node"** %85
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = ptrtoint %"class.blink::Node"* %88 to i64
  store atomic i64 %89, i64* %14 monotonic, align 8
  %90 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %83
  %93 = bitcast %"class.blink::Node"* %88 to i8*
  %94 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %93) #9
  br label %95

95:                                               ; preds = %61, %46, %80, %83, %92
  %96 = icmp eq %"class.blink::Node"* %47, null
  br i1 %96, label %97, label %15

97:                                               ; preds = %15, %95, %51, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand34PositionToComputeInlineStyleChangeEPNS_4NodeERNS_6MemberINS_15HTMLSpanElementEEEPNS_12EditingStateE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::ApplyStyleCommand"*, %"class.blink::Node"*, %"class.blink::Member.1324"* nocapture dereferenceable(8), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = tail call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %15 = ptrtoint %"class.blink::HTMLSpanElement"* %14 to i64
  %16 = bitcast %"class.blink::Member.1324"* %3 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::HTMLSpanElement"* %14 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #9
  %22 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.blink::HTMLSpanElement"*, %"class.blink::HTMLSpanElement"** %22, align 8
  br label %24

24:                                               ; preds = %11, %19
  %25 = phi %"class.blink::HTMLSpanElement"* [ %14, %11 ], [ %23, %19 ]
  %26 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* dereferenceable(64) %2) #9
  call void @_ZN5blink20CompositeEditCommand12InsertNodeAtEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %26, %"class.blink::Node"* %27, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, %"class.blink::EditingState"* %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %4, i64 0, i32 0
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #9
  br label %39

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %3, i64 0, i32 0, i32 0
  %36 = load %"class.blink::HTMLSpanElement"*, %"class.blink::HTMLSpanElement"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %37) #9
  br label %39

38:                                               ; preds = %5
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %2) #9
  br label %39

39:                                               ; preds = %38, %34, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::StyleChange"* @_ZN5blink11StyleChangeaSEOS0_(%"class.blink::StyleChange"*, %"class.blink::StyleChange"* dereferenceable(40)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::StyleChange"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %6 = bitcast %"class.blink::StyleChange"* %0 to i64*
  %7 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %23

23:                                               ; preds = %2, %19, %22
  %24 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 6, i1 false)
  %26 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %1, i64 0, i32 7
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %31 = bitcast %"class.WTF::String"* %26 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %23, %44, %47
  %49 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 8
  %50 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %1, i64 0, i32 8
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %52 = bitcast %"class.WTF::String"* %50 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %51, align 8
  %54 = bitcast %"class.WTF::String"* %49 to i64*
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  store i64 %53, i64* %54, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %71

71:                                               ; preds = %48, %67, %70
  %72 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %0, i64 0, i32 9
  %73 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %1, i64 0, i32 9
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = bitcast %"class.WTF::String"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %77 = bitcast %"class.WTF::String"* %72 to i64*
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  store i64 %76, i64* %77, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #9
  br label %94

94:                                               ; preds = %71, %90, %93
  ret %"class.blink::StyleChange"* %0
}

declare void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand22ApplyInlineStyleChangeEPNS_4NodeES2_RNS_11StyleChangeENS0_16AddStyledElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Node"*, %"class.blink::Node"* readnone, %"class.blink::StyleChange"* readonly dereferenceable(40), i32, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.WTF::StringBuilder", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::AtomicString", align 8
  %17 = alloca %"class.WTF::AtomicString", align 8
  %18 = alloca %"class.WTF::AtomicString", align 8
  %19 = icmp ne %"class.blink::Node"* %1, null
  %20 = icmp eq %"class.blink::Node"* %1, %2
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %102

22:                                               ; preds = %6
  %23 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %22, %97
  %28 = phi %"class.blink::Node"* [ %1, %22 ], [ %95, %97 ]
  %29 = phi %"class.blink::HTMLElement"* [ null, %22 ], [ %89, %97 ]
  %30 = phi %"class.blink::HTMLFontElement"* [ null, %22 ], [ %50, %97 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 48
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %27
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1, i32 2
  %38 = bitcast %"class.blink::Member"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  %45 = bitcast %"class.blink::Node"* %28 to %"class.blink::HTMLFontElement"*
  %46 = select i1 %44, %"class.blink::HTMLFontElement"* %45, %"class.blink::HTMLFontElement"* null
  br label %47

47:                                               ; preds = %27, %35
  %48 = phi %"class.blink::HTMLFontElement"* [ %46, %35 ], [ null, %27 ]
  %49 = icmp eq %"class.blink::HTMLFontElement"* %48, null
  %50 = select i1 %49, %"class.blink::HTMLFontElement"* %30, %"class.blink::HTMLFontElement"* %48
  %51 = icmp eq %"class.blink::HTMLElement"* %29, null
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 48
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 1, i32 2
  %61 = bitcast %"class.blink::Member"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br label %68

68:                                               ; preds = %47, %52, %57
  %69 = phi i1 [ false, %47 ], [ %67, %57 ], [ false, %52 ]
  %70 = bitcast %"class.blink::Node"* %28 to %"class.blink::HTMLElement"*
  br i1 %34, label %71, label %88

71:                                               ; preds = %68
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1, i32 2
  %74 = bitcast %"class.blink::Member"* %73 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br i1 %80, label %87, label %81

81:                                               ; preds = %71
  br i1 %69, label %88, label %82

82:                                               ; preds = %81
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1
  %84 = bitcast %"class.blink::Node"* %83 to %"class.blink::Node"**
  %85 = load %"class.blink::Node"*, %"class.blink::Node"** %84, align 8
  %86 = icmp eq %"class.blink::Node"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %82, %71
  br label %88

88:                                               ; preds = %82, %68, %87, %81
  %89 = phi %"class.blink::HTMLElement"* [ %70, %87 ], [ %29, %82 ], [ %29, %81 ], [ %29, %68 ]
  %90 = and i32 %32, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1
  %94 = bitcast %"class.blink::Node"* %93 to %"class.blink::Node"**
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1, i32 0, i32 0, i32 1
  %99 = bitcast %"class.blink::TraceWrapperV8Reference"* %98 to %"class.blink::Node"**
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = icmp eq %"class.blink::Node"* %95, %100
  br i1 %101, label %27, label %102

102:                                              ; preds = %97, %88, %92, %6
  %103 = phi %"class.blink::Node"* [ %2, %6 ], [ %28, %92 ], [ %28, %88 ], [ %100, %97 ]
  %104 = phi %"class.blink::Node"* [ %1, %6 ], [ %28, %92 ], [ %28, %88 ], [ %95, %97 ]
  %105 = phi %"class.blink::HTMLFontElement"* [ null, %6 ], [ %50, %92 ], [ %50, %88 ], [ %50, %97 ]
  %106 = phi %"class.blink::HTMLElement"* [ null, %6 ], [ %89, %92 ], [ %89, %88 ], [ %89, %97 ]
  %107 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 7, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %130

114:                                              ; preds = %110, %102
  %115 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 8, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %130

122:                                              ; preds = %118, %114
  %123 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 9, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %637, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %637, label %130

130:                                              ; preds = %126, %118, %110
  %131 = icmp eq %"class.blink::HTMLFontElement"* %105, null
  br i1 %131, label %381, label %132

132:                                              ; preds = %130
  br i1 %109, label %213, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %213, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %139 = getelementptr inbounds %"class.blink::HTMLFontElement", %"class.blink::HTMLFontElement"* %105, i64 0, i32 0, i32 0
  %140 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kColorAttrE, align 8
  %141 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #9
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %158

146:                                              ; preds = %137
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i33
  %150 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #9
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !9

155:                                              ; preds = %146
  tail call void @llvm.trap() #9
  unreachable

156:                                              ; preds = %146
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %147, align 4
  br label %158

158:                                              ; preds = %156, %137
  %159 = load atomic i32, i32* %142 acquire, align 4
  %160 = and i32 %159, 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %178, label %162

162:                                              ; preds = %158
  %163 = load atomic i32, i32* %142 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %180

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i33
  %170 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #9
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !9

175:                                              ; preds = %166
  tail call void @llvm.trap() #9
  unreachable

176:                                              ; preds = %166
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %167, align 4
  br label %180

178:                                              ; preds = %158
  %179 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %180

180:                                              ; preds = %162, %176, %178
  %181 = phi %"class.WTF::StringImpl"* [ %179, %178 ], [ %108, %162 ], [ %108, %176 ]
  %182 = ptrtoint %"class.WTF::StringImpl"* %181 to i64
  %183 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  store i64 %182, i64* %183, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %138, %"class.blink::Element"* %139, %"class.blink::QualifiedName"* dereferenceable(8) %140, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #9
  %184 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #9
  br label %200

200:                                              ; preds = %199, %196, %180
  %201 = load atomic i32, i32* %142 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %200
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %200
  %209 = phi i32 [ %207, %206 ], [ %205, %200 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %212

212:                                              ; preds = %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #9
  br label %213

213:                                              ; preds = %133, %132, %212
  %214 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 8, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %297, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %297, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %223 = getelementptr inbounds %"class.blink::HTMLFontElement", %"class.blink::HTMLFontElement"* %105, i64 0, i32 0, i32 0
  %224 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFaceAttrE, align 8
  %225 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #9
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %221
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i33
  %234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %233, i33 1) #9
  %235 = extractvalue { i33, i1 } %234, 1
  %236 = extractvalue { i33, i1 } %234, 0
  %237 = icmp slt i33 %236, 0
  %238 = or i1 %235, %237
  br i1 %238, label %239, label %240, !prof !9

239:                                              ; preds = %230
  call void @llvm.trap() #9
  unreachable

240:                                              ; preds = %230
  %241 = trunc i33 %236 to i32
  store i32 %241, i32* %231, align 4
  br label %242

242:                                              ; preds = %240, %221
  %243 = load atomic i32, i32* %226 acquire, align 4
  %244 = and i32 %243, 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %262, label %246

246:                                              ; preds = %242
  %247 = load atomic i32, i32* %226 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %264

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i33
  %254 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %253, i33 1) #9
  %255 = extractvalue { i33, i1 } %254, 1
  %256 = extractvalue { i33, i1 } %254, 0
  %257 = icmp slt i33 %256, 0
  %258 = or i1 %255, %257
  br i1 %258, label %259, label %260, !prof !9

259:                                              ; preds = %250
  call void @llvm.trap() #9
  unreachable

260:                                              ; preds = %250
  %261 = trunc i33 %256 to i32
  store i32 %261, i32* %251, align 4
  br label %264

262:                                              ; preds = %242
  %263 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %215) #9
  br label %264

264:                                              ; preds = %246, %260, %262
  %265 = phi %"class.WTF::StringImpl"* [ %263, %262 ], [ %215, %246 ], [ %215, %260 ]
  %266 = ptrtoint %"class.WTF::StringImpl"* %265 to i64
  %267 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %266, i64* %267, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %222, %"class.blink::Element"* %223, %"class.blink::QualifiedName"* dereferenceable(8) %224, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #9
  %268 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %264
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #9
  br label %284

284:                                              ; preds = %283, %280, %264
  %285 = load atomic i32, i32* %226 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %284
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %284
  %293 = phi i32 [ %291, %290 ], [ %289, %284 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #9
  br label %296

296:                                              ; preds = %292, %295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #9
  br label %297

297:                                              ; preds = %217, %213, %296
  %298 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 9, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %637, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %637, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %307 = getelementptr inbounds %"class.blink::HTMLFontElement", %"class.blink::HTMLFontElement"* %105, i64 0, i32 0, i32 0
  %308 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE, align 8
  %309 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #9
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %326

314:                                              ; preds = %305
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  %317 = zext i32 %316 to i33
  %318 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %317, i33 1) #9
  %319 = extractvalue { i33, i1 } %318, 1
  %320 = extractvalue { i33, i1 } %318, 0
  %321 = icmp slt i33 %320, 0
  %322 = or i1 %319, %321
  br i1 %322, label %323, label %324, !prof !9

323:                                              ; preds = %314
  call void @llvm.trap() #9
  unreachable

324:                                              ; preds = %314
  %325 = trunc i33 %320 to i32
  store i32 %325, i32* %315, align 4
  br label %326

326:                                              ; preds = %324, %305
  %327 = load atomic i32, i32* %310 acquire, align 4
  %328 = and i32 %327, 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %346, label %330

330:                                              ; preds = %326
  %331 = load atomic i32, i32* %310 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %348

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = zext i32 %336 to i33
  %338 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %337, i33 1) #9
  %339 = extractvalue { i33, i1 } %338, 1
  %340 = extractvalue { i33, i1 } %338, 0
  %341 = icmp slt i33 %340, 0
  %342 = or i1 %339, %341
  br i1 %342, label %343, label %344, !prof !9

343:                                              ; preds = %334
  call void @llvm.trap() #9
  unreachable

344:                                              ; preds = %334
  %345 = trunc i33 %340 to i32
  store i32 %345, i32* %335, align 4
  br label %348

346:                                              ; preds = %326
  %347 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %299) #9
  br label %348

348:                                              ; preds = %330, %344, %346
  %349 = phi %"class.WTF::StringImpl"* [ %347, %346 ], [ %299, %330 ], [ %299, %344 ]
  %350 = ptrtoint %"class.WTF::StringImpl"* %349 to i64
  %351 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %350, i64* %351, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %306, %"class.blink::Element"* %307, %"class.blink::QualifiedName"* dereferenceable(8) %308, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %352 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #9
  br label %368

368:                                              ; preds = %367, %364, %348
  %369 = load atomic i32, i32* %310 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  br i1 %371, label %374, label %376

374:                                              ; preds = %368
  %375 = add i32 %373, -1
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %374, %368
  %377 = phi i32 [ %375, %374 ], [ %373, %368 ]
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %376
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #9
  br label %380

380:                                              ; preds = %376, %379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #9
  br label %637

381:                                              ; preds = %130
  %382 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %383 = load %"class.blink::Document"*, %"class.blink::Document"** %382, align 8
  %384 = tail call %"class.blink::HTMLFontElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLFontElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %383) #9
  %385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %386 = icmp eq %"class.WTF::StringImpl"* %385, null
  br i1 %386, label %466, label %387

387:                                              ; preds = %381
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %466, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %"class.blink::HTMLFontElement", %"class.blink::HTMLFontElement"* %384, i64 0, i32 0, i32 0
  %393 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kColorAttrE, align 8
  %394 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394) #9
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %411

399:                                              ; preds = %391
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  %402 = zext i32 %401 to i33
  %403 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %402, i33 1) #9
  %404 = extractvalue { i33, i1 } %403, 1
  %405 = extractvalue { i33, i1 } %403, 0
  %406 = icmp slt i33 %405, 0
  %407 = or i1 %404, %406
  br i1 %407, label %408, label %409, !prof !9

408:                                              ; preds = %399
  tail call void @llvm.trap() #9
  unreachable

409:                                              ; preds = %399
  %410 = trunc i33 %405 to i32
  store i32 %410, i32* %400, align 4
  br label %411

411:                                              ; preds = %409, %391
  %412 = load atomic i32, i32* %395 acquire, align 4
  %413 = and i32 %412, 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %411
  %416 = load atomic i32, i32* %395 monotonic, align 4
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %433

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = zext i32 %421 to i33
  %423 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %422, i33 1) #9
  %424 = extractvalue { i33, i1 } %423, 1
  %425 = extractvalue { i33, i1 } %423, 0
  %426 = icmp slt i33 %425, 0
  %427 = or i1 %424, %426
  br i1 %427, label %428, label %429, !prof !9

428:                                              ; preds = %419
  tail call void @llvm.trap() #9
  unreachable

429:                                              ; preds = %419
  %430 = trunc i33 %425 to i32
  store i32 %430, i32* %420, align 4
  br label %433

431:                                              ; preds = %411
  %432 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %385) #9
  br label %433

433:                                              ; preds = %415, %429, %431
  %434 = phi %"class.WTF::StringImpl"* [ %432, %431 ], [ %385, %415 ], [ %385, %429 ]
  %435 = ptrtoint %"class.WTF::StringImpl"* %434 to i64
  %436 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  store i64 %435, i64* %436, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %392, %"class.blink::QualifiedName"* dereferenceable(8) %393, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #9
  %437 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %433
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #9
  br label %453

453:                                              ; preds = %452, %449, %433
  %454 = load atomic i32, i32* %395 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  br i1 %456, label %459, label %461

459:                                              ; preds = %453
  %460 = add i32 %458, -1
  store i32 %460, i32* %457, align 4
  br label %461

461:                                              ; preds = %459, %453
  %462 = phi i32 [ %460, %459 ], [ %458, %453 ]
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %465

464:                                              ; preds = %461
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %385) #9
  br label %465

465:                                              ; preds = %461, %464
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #9
  br label %466

466:                                              ; preds = %387, %381, %465
  %467 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 8, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %468, null
  br i1 %469, label %549, label %470

470:                                              ; preds = %466
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 1
  %472 = load i32, i32* %471, align 4
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %549, label %474

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"class.blink::HTMLFontElement", %"class.blink::HTMLFontElement"* %384, i64 0, i32 0, i32 0
  %476 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFaceAttrE, align 8
  %477 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %477) #9
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %494

482:                                              ; preds = %474
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = zext i32 %484 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #9
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !9

491:                                              ; preds = %482
  call void @llvm.trap() #9
  unreachable

492:                                              ; preds = %482
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %483, align 4
  br label %494

494:                                              ; preds = %492, %474
  %495 = load atomic i32, i32* %478 acquire, align 4
  %496 = and i32 %495, 4
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %514, label %498

498:                                              ; preds = %494
  %499 = load atomic i32, i32* %478 monotonic, align 4
  %500 = and i32 %499, 2
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %516

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  %505 = zext i32 %504 to i33
  %506 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %505, i33 1) #9
  %507 = extractvalue { i33, i1 } %506, 1
  %508 = extractvalue { i33, i1 } %506, 0
  %509 = icmp slt i33 %508, 0
  %510 = or i1 %507, %509
  br i1 %510, label %511, label %512, !prof !9

511:                                              ; preds = %502
  call void @llvm.trap() #9
  unreachable

512:                                              ; preds = %502
  %513 = trunc i33 %508 to i32
  store i32 %513, i32* %503, align 4
  br label %516

514:                                              ; preds = %494
  %515 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %468) #9
  br label %516

516:                                              ; preds = %498, %512, %514
  %517 = phi %"class.WTF::StringImpl"* [ %515, %514 ], [ %468, %498 ], [ %468, %512 ]
  %518 = ptrtoint %"class.WTF::StringImpl"* %517 to i64
  %519 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  store i64 %518, i64* %519, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %475, %"class.blink::QualifiedName"* dereferenceable(8) %476, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11) #9
  %520 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %516
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #9
  br label %536

536:                                              ; preds = %535, %532, %516
  %537 = load atomic i32, i32* %478 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %536
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %536
  %545 = phi i32 [ %543, %542 ], [ %541, %536 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %468) #9
  br label %548

548:                                              ; preds = %544, %547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %477) #9
  br label %549

549:                                              ; preds = %470, %466, %548
  %550 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 9, i32 0, i32 0
  %551 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %550, align 8
  %552 = icmp eq %"class.WTF::StringImpl"* %551, null
  br i1 %552, label %632, label %553

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %551, i64 0, i32 1
  %555 = load i32, i32* %554, align 4
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %632, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds %"class.blink::HTMLFontElement", %"class.blink::HTMLFontElement"* %384, i64 0, i32 0, i32 0
  %559 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE, align 8
  %560 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #9
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = load atomic i32, i32* %561 monotonic, align 4
  %563 = and i32 %562, 2
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %577

565:                                              ; preds = %557
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %551, i64 0, i32 0
  %567 = load i32, i32* %566, align 4
  %568 = zext i32 %567 to i33
  %569 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %568, i33 1) #9
  %570 = extractvalue { i33, i1 } %569, 1
  %571 = extractvalue { i33, i1 } %569, 0
  %572 = icmp slt i33 %571, 0
  %573 = or i1 %570, %572
  br i1 %573, label %574, label %575, !prof !9

574:                                              ; preds = %565
  call void @llvm.trap() #9
  unreachable

575:                                              ; preds = %565
  %576 = trunc i33 %571 to i32
  store i32 %576, i32* %566, align 4
  br label %577

577:                                              ; preds = %575, %557
  %578 = load atomic i32, i32* %561 acquire, align 4
  %579 = and i32 %578, 4
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %597, label %581

581:                                              ; preds = %577
  %582 = load atomic i32, i32* %561 monotonic, align 4
  %583 = and i32 %582, 2
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %599

585:                                              ; preds = %581
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %551, i64 0, i32 0
  %587 = load i32, i32* %586, align 4
  %588 = zext i32 %587 to i33
  %589 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %588, i33 1) #9
  %590 = extractvalue { i33, i1 } %589, 1
  %591 = extractvalue { i33, i1 } %589, 0
  %592 = icmp slt i33 %591, 0
  %593 = or i1 %590, %592
  br i1 %593, label %594, label %595, !prof !9

594:                                              ; preds = %585
  call void @llvm.trap() #9
  unreachable

595:                                              ; preds = %585
  %596 = trunc i33 %591 to i32
  store i32 %596, i32* %586, align 4
  br label %599

597:                                              ; preds = %577
  %598 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %551) #9
  br label %599

599:                                              ; preds = %581, %595, %597
  %600 = phi %"class.WTF::StringImpl"* [ %598, %597 ], [ %551, %581 ], [ %551, %595 ]
  %601 = ptrtoint %"class.WTF::StringImpl"* %600 to i64
  %602 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  store i64 %601, i64* %602, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %558, %"class.blink::QualifiedName"* dereferenceable(8) %559, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12) #9
  %603 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %604 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %603, align 8
  %605 = icmp eq %"class.WTF::StringImpl"* %604, null
  br i1 %605, label %619, label %606

606:                                              ; preds = %599
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = load atomic i32, i32* %607 monotonic, align 4
  %609 = and i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 0
  %612 = load i32, i32* %611, align 4
  br i1 %610, label %613, label %615

613:                                              ; preds = %606
  %614 = add i32 %612, -1
  store i32 %614, i32* %611, align 4
  br label %615

615:                                              ; preds = %613, %606
  %616 = phi i32 [ %614, %613 ], [ %612, %606 ]
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %619

618:                                              ; preds = %615
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %604) #9
  br label %619

619:                                              ; preds = %618, %615, %599
  %620 = load atomic i32, i32* %561 monotonic, align 4
  %621 = and i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %551, i64 0, i32 0
  %624 = load i32, i32* %623, align 4
  br i1 %622, label %625, label %627

625:                                              ; preds = %619
  %626 = add i32 %624, -1
  store i32 %626, i32* %623, align 4
  br label %627

627:                                              ; preds = %625, %619
  %628 = phi i32 [ %626, %625 ], [ %624, %619 ]
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %631

630:                                              ; preds = %627
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %551) #9
  br label %631

631:                                              ; preds = %627, %630
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #9
  br label %632

632:                                              ; preds = %553, %549, %631
  %633 = getelementptr inbounds %"class.blink::HTMLFontElement", %"class.blink::HTMLFontElement"* %384, i64 0, i32 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %633, %"class.blink::EditingState"* %5)
  %634 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %635 = load i8, i8* %634, align 1, !range !2
  %636 = icmp eq i8 %635, 0
  br i1 %636, label %637, label %1063

637:                                              ; preds = %301, %126, %297, %122, %380, %632
  %638 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 0, i32 0, i32 0
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8
  %640 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %640, label %977, label %641

641:                                              ; preds = %637
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = load atomic i32, i32* %642 monotonic, align 4
  %644 = and i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %647 = load i32, i32* %646, align 4
  br i1 %645, label %648, label %658

648:                                              ; preds = %641
  %649 = zext i32 %647 to i33
  %650 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %649, i33 1) #9
  %651 = extractvalue { i33, i1 } %650, 1
  %652 = extractvalue { i33, i1 } %650, 0
  %653 = icmp slt i33 %652, 0
  %654 = or i1 %651, %653
  br i1 %654, label %655, label %656, !prof !9

655:                                              ; preds = %648
  call void @llvm.trap() #9
  unreachable

656:                                              ; preds = %648
  %657 = trunc i33 %652 to i32
  store i32 %657, i32* %646, align 4
  br label %658

658:                                              ; preds = %641, %656
  %659 = phi i32 [ %657, %656 ], [ %647, %641 ]
  %660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 1
  %661 = load i32, i32* %660, align 4
  %662 = icmp eq i32 %661, 0
  %663 = load atomic i32, i32* %642 monotonic, align 4
  %664 = and i32 %663, 2
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %669

666:                                              ; preds = %658
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %668 = add i32 %659, -1
  store i32 %668, i32* %667, align 4
  br label %669

669:                                              ; preds = %666, %658
  %670 = phi i32 [ %668, %666 ], [ %659, %658 ]
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %673

672:                                              ; preds = %669
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %639) #9
  br i1 %662, label %977, label %674

673:                                              ; preds = %669
  br i1 %662, label %977, label %674

674:                                              ; preds = %672, %673
  %675 = icmp eq %"class.blink::HTMLElement"* %106, null
  br i1 %675, label %891, label %676

676:                                              ; preds = %674
  %677 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %106, i64 0, i32 0
  %678 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %679 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %678, align 8
  %680 = icmp eq %"class.blink::ElementData"* %679, null
  br i1 %680, label %811, label %681

681:                                              ; preds = %676
  %682 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %679, i64 0, i32 1, i32 0, i32 0
  %683 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %682, align 8
  %684 = icmp eq %"class.blink::CSSPropertyValueSet"* %683, null
  br i1 %684, label %811, label %685

685:                                              ; preds = %681
  %686 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* nonnull %683) #9
  %687 = bitcast %"class.WTF::StringBuilder"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %687) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %687, i8 -86, i64 48, i1 false)
  %688 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %688, align 8
  %689 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 1
  %690 = bitcast %union.anon.1371* %689 to i8*
  store i8 0, i8* %690, align 8
  %691 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 2
  store i32 0, i32* %691, align 8
  %692 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 3
  store i8 1, i8* %692, align 4
  %693 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %13, i64 0, i32 4
  store i8 0, i8* %693, align 1
  %694 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #9
  %695 = icmp eq %"class.WTF::StringImpl"* %686, null
  br i1 %695, label %696, label %700

696:                                              ; preds = %685
  %697 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %697, align 8
  %698 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %699 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %698, i64* %699, align 8
  br label %707

700:                                              ; preds = %685
  %701 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %686, %"class.WTF::StringImpl"** %701, align 8
  %702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 1
  %703 = load i32, i32* %702, align 4
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 1
  %705 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %706 = bitcast i8** %705 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %704, %"class.WTF::StringImpl"** %706, align 8
  br label %707

707:                                              ; preds = %696, %700
  %708 = phi i32 [ %703, %700 ], [ 0, %696 ]
  %709 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %708, i32* %709, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %694) #9
  br i1 %695, label %715, label %710

710:                                              ; preds = %707
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 1
  %712 = load i32, i32* %711, align 4
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %715, label %714

714:                                              ; preds = %710
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %13, i8 zeroext 32) #9
  br label %715

715:                                              ; preds = %707, %714, %710
  %716 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %716) #9
  %717 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8
  %718 = icmp eq %"class.WTF::StringImpl"* %717, null
  br i1 %718, label %736, label %719

719:                                              ; preds = %715
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %721 = load atomic i32, i32* %720 monotonic, align 4
  %722 = and i32 %721, 2
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %741

724:                                              ; preds = %719
  %725 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 0
  %726 = load i32, i32* %725, align 4
  %727 = zext i32 %726 to i33
  %728 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %727, i33 1) #9
  %729 = extractvalue { i33, i1 } %728, 1
  %730 = extractvalue { i33, i1 } %728, 0
  %731 = icmp slt i33 %730, 0
  %732 = or i1 %729, %731
  br i1 %732, label %733, label %734, !prof !9

733:                                              ; preds = %724
  call void @llvm.trap() #9
  unreachable

734:                                              ; preds = %724
  %735 = trunc i33 %730 to i32
  store i32 %735, i32* %725, align 4
  br label %741

736:                                              ; preds = %715
  %737 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %737, align 8
  %738 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %739 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %738, i64* %739, align 8
  %740 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 0, i32* %740, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  br label %760

741:                                              ; preds = %719, %734
  %742 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %717, %"class.WTF::StringImpl"** %742, align 8
  %743 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 1
  %744 = load i32, i32* %743, align 4
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 1
  %746 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %747 = bitcast i8** %746 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %745, %"class.WTF::StringImpl"** %747, align 8
  %748 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %744, i32* %748, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  %749 = load atomic i32, i32* %720 monotonic, align 4
  %750 = and i32 %749, 2
  %751 = icmp eq i32 %750, 0
  %752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 0
  %753 = load i32, i32* %752, align 4
  br i1 %751, label %754, label %756

754:                                              ; preds = %741
  %755 = add i32 %753, -1
  store i32 %755, i32* %752, align 4
  br label %756

756:                                              ; preds = %754, %741
  %757 = phi i32 [ %755, %754 ], [ %753, %741 ]
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %759, label %760

759:                                              ; preds = %756
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %717) #9
  br label %760

760:                                              ; preds = %736, %756, %759
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %716) #9
  %761 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %762 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %763 = bitcast %"class.WTF::AtomicString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %763) #9
  %764 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"* nonnull %13) #9
  %765 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %764, %"class.WTF::StringImpl"** %765, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %761, %"class.blink::Element"* %677, %"class.blink::QualifiedName"* dereferenceable(8) %762, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %16) #9
  %766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %765, align 8
  %767 = icmp eq %"class.WTF::StringImpl"* %766, null
  br i1 %767, label %781, label %768

768:                                              ; preds = %760
  %769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %770 = load atomic i32, i32* %769 monotonic, align 4
  %771 = and i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 0
  %774 = load i32, i32* %773, align 4
  br i1 %772, label %775, label %777

775:                                              ; preds = %768
  %776 = add i32 %774, -1
  store i32 %776, i32* %773, align 4
  br label %777

777:                                              ; preds = %775, %768
  %778 = phi i32 [ %776, %775 ], [ %774, %768 ]
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %780, label %781

780:                                              ; preds = %777
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %766) #9
  br label %781

781:                                              ; preds = %760, %777, %780
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %763) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %13) #9
  %782 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %688, align 8
  %783 = icmp eq %"class.WTF::StringImpl"* %782, null
  br i1 %783, label %797, label %784

784:                                              ; preds = %781
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %782, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %786 = load atomic i32, i32* %785 monotonic, align 4
  %787 = and i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %782, i64 0, i32 0
  %790 = load i32, i32* %789, align 4
  br i1 %788, label %791, label %793

791:                                              ; preds = %784
  %792 = add i32 %790, -1
  store i32 %792, i32* %789, align 4
  br label %793

793:                                              ; preds = %791, %784
  %794 = phi i32 [ %792, %791 ], [ %790, %784 ]
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %796, label %797

796:                                              ; preds = %793
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %782) #9
  br label %797

797:                                              ; preds = %781, %793, %796
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %687) #9
  br i1 %695, label %977, label %798

798:                                              ; preds = %797
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %800 = load atomic i32, i32* %799 monotonic, align 4
  %801 = and i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 0
  %804 = load i32, i32* %803, align 4
  br i1 %802, label %805, label %807

805:                                              ; preds = %798
  %806 = add i32 %804, -1
  store i32 %806, i32* %803, align 4
  br label %807

807:                                              ; preds = %805, %798
  %808 = phi i32 [ %806, %805 ], [ %804, %798 ]
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %977

810:                                              ; preds = %807
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %686) #9
  br label %977

811:                                              ; preds = %676, %681
  %812 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %813 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %814 = bitcast %"class.WTF::AtomicString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %814) #9
  %815 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8
  %816 = icmp eq %"class.WTF::StringImpl"* %815, null
  br i1 %816, label %856, label %817

817:                                              ; preds = %811
  %818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load atomic i32, i32* %818 monotonic, align 4
  %820 = and i32 %819, 2
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %822, label %834

822:                                              ; preds = %817
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 0
  %824 = load i32, i32* %823, align 4
  %825 = zext i32 %824 to i33
  %826 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %825, i33 1) #9
  %827 = extractvalue { i33, i1 } %826, 1
  %828 = extractvalue { i33, i1 } %826, 0
  %829 = icmp slt i33 %828, 0
  %830 = or i1 %827, %829
  br i1 %830, label %831, label %832, !prof !9

831:                                              ; preds = %822
  call void @llvm.trap() #9
  unreachable

832:                                              ; preds = %822
  %833 = trunc i33 %828 to i32
  store i32 %833, i32* %823, align 4
  br label %834

834:                                              ; preds = %817, %832
  %835 = load atomic i32, i32* %818 acquire, align 4
  %836 = and i32 %835, 4
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %854, label %838

838:                                              ; preds = %834
  %839 = load atomic i32, i32* %818 monotonic, align 4
  %840 = and i32 %839, 2
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %842, label %856

842:                                              ; preds = %838
  %843 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 0
  %844 = load i32, i32* %843, align 4
  %845 = zext i32 %844 to i33
  %846 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %845, i33 1) #9
  %847 = extractvalue { i33, i1 } %846, 1
  %848 = extractvalue { i33, i1 } %846, 0
  %849 = icmp slt i33 %848, 0
  %850 = or i1 %847, %849
  br i1 %850, label %851, label %852, !prof !9

851:                                              ; preds = %842
  call void @llvm.trap() #9
  unreachable

852:                                              ; preds = %842
  %853 = trunc i33 %848 to i32
  store i32 %853, i32* %843, align 4
  br label %856

854:                                              ; preds = %834
  %855 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %815) #9
  br label %856

856:                                              ; preds = %811, %838, %852, %854
  %857 = phi %"class.WTF::StringImpl"* [ %855, %854 ], [ %815, %838 ], [ %815, %852 ], [ null, %811 ]
  %858 = ptrtoint %"class.WTF::StringImpl"* %857 to i64
  %859 = bitcast %"class.WTF::AtomicString"* %17 to i64*
  store i64 %858, i64* %859, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %812, %"class.blink::Element"* %677, %"class.blink::QualifiedName"* dereferenceable(8) %813, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %17) #9
  %860 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %861 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %860, align 8
  %862 = icmp eq %"class.WTF::StringImpl"* %861, null
  br i1 %862, label %876, label %863

863:                                              ; preds = %856
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  br i1 %867, label %870, label %872

870:                                              ; preds = %863
  %871 = add i32 %869, -1
  store i32 %871, i32* %868, align 4
  br label %872

872:                                              ; preds = %870, %863
  %873 = phi i32 [ %871, %870 ], [ %869, %863 ]
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %876

875:                                              ; preds = %872
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %861) #9
  br label %876

876:                                              ; preds = %856, %872, %875
  br i1 %816, label %890, label %877

877:                                              ; preds = %876
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %879 = load atomic i32, i32* %878 monotonic, align 4
  %880 = and i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 0
  %883 = load i32, i32* %882, align 4
  br i1 %881, label %884, label %886

884:                                              ; preds = %877
  %885 = add i32 %883, -1
  store i32 %885, i32* %882, align 4
  br label %886

886:                                              ; preds = %884, %877
  %887 = phi i32 [ %885, %884 ], [ %883, %877 ]
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %890

889:                                              ; preds = %886
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %815) #9
  br label %890

890:                                              ; preds = %876, %886, %889
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %814) #9
  br label %977

891:                                              ; preds = %674
  %892 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %893 = load %"class.blink::Document"*, %"class.blink::Document"** %892, align 8
  %894 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %893) #9
  %895 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %894, i64 0, i32 0, i32 0
  %896 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %897 = bitcast %"class.WTF::AtomicString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %897) #9
  %898 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8
  %899 = icmp eq %"class.WTF::StringImpl"* %898, null
  br i1 %899, label %939, label %900

900:                                              ; preds = %891
  %901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %902 = load atomic i32, i32* %901 monotonic, align 4
  %903 = and i32 %902, 2
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %917

905:                                              ; preds = %900
  %906 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 0
  %907 = load i32, i32* %906, align 4
  %908 = zext i32 %907 to i33
  %909 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %908, i33 1) #9
  %910 = extractvalue { i33, i1 } %909, 1
  %911 = extractvalue { i33, i1 } %909, 0
  %912 = icmp slt i33 %911, 0
  %913 = or i1 %910, %912
  br i1 %913, label %914, label %915, !prof !9

914:                                              ; preds = %905
  call void @llvm.trap() #9
  unreachable

915:                                              ; preds = %905
  %916 = trunc i33 %911 to i32
  store i32 %916, i32* %906, align 4
  br label %917

917:                                              ; preds = %900, %915
  %918 = load atomic i32, i32* %901 acquire, align 4
  %919 = and i32 %918, 4
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %937, label %921

921:                                              ; preds = %917
  %922 = load atomic i32, i32* %901 monotonic, align 4
  %923 = and i32 %922, 2
  %924 = icmp eq i32 %923, 0
  br i1 %924, label %925, label %939

925:                                              ; preds = %921
  %926 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 0
  %927 = load i32, i32* %926, align 4
  %928 = zext i32 %927 to i33
  %929 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %928, i33 1) #9
  %930 = extractvalue { i33, i1 } %929, 1
  %931 = extractvalue { i33, i1 } %929, 0
  %932 = icmp slt i33 %931, 0
  %933 = or i1 %930, %932
  br i1 %933, label %934, label %935, !prof !9

934:                                              ; preds = %925
  call void @llvm.trap() #9
  unreachable

935:                                              ; preds = %925
  %936 = trunc i33 %931 to i32
  store i32 %936, i32* %926, align 4
  br label %939

937:                                              ; preds = %917
  %938 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %898) #9
  br label %939

939:                                              ; preds = %891, %921, %935, %937
  %940 = phi %"class.WTF::StringImpl"* [ %938, %937 ], [ %898, %921 ], [ %898, %935 ], [ null, %891 ]
  %941 = ptrtoint %"class.WTF::StringImpl"* %940 to i64
  %942 = bitcast %"class.WTF::AtomicString"* %18 to i64*
  store i64 %941, i64* %942, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %895, %"class.blink::QualifiedName"* dereferenceable(8) %896, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %18) #9
  %943 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %944 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %943, align 8
  %945 = icmp eq %"class.WTF::StringImpl"* %944, null
  br i1 %945, label %959, label %946

946:                                              ; preds = %939
  %947 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %944, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %948 = load atomic i32, i32* %947 monotonic, align 4
  %949 = and i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %944, i64 0, i32 0
  %952 = load i32, i32* %951, align 4
  br i1 %950, label %953, label %955

953:                                              ; preds = %946
  %954 = add i32 %952, -1
  store i32 %954, i32* %951, align 4
  br label %955

955:                                              ; preds = %953, %946
  %956 = phi i32 [ %954, %953 ], [ %952, %946 ]
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %958, label %959

958:                                              ; preds = %955
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %944) #9
  br label %959

959:                                              ; preds = %939, %955, %958
  br i1 %899, label %973, label %960

960:                                              ; preds = %959
  %961 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %962 = load atomic i32, i32* %961 monotonic, align 4
  %963 = and i32 %962, 2
  %964 = icmp eq i32 %963, 0
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 0
  %966 = load i32, i32* %965, align 4
  br i1 %964, label %967, label %969

967:                                              ; preds = %960
  %968 = add i32 %966, -1
  store i32 %968, i32* %965, align 4
  br label %969

969:                                              ; preds = %967, %960
  %970 = phi i32 [ %968, %967 ], [ %966, %960 ]
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %973

972:                                              ; preds = %969
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %898) #9
  br label %973

973:                                              ; preds = %959, %969, %972
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %897) #9
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %895, %"class.blink::EditingState"* %5)
  %974 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %975 = load i8, i8* %974, align 1, !range !2
  %976 = icmp eq i8 %975, 0
  br i1 %976, label %977, label %1063

977:                                              ; preds = %637, %810, %807, %797, %672, %890, %673, %973
  %978 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 1
  %979 = load i8, i8* %978, align 8, !range !2
  %980 = icmp eq i8 %979, 0
  br i1 %980, label %990, label %981

981:                                              ; preds = %977
  %982 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kBTagE, align 8
  %983 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %984 = load %"class.blink::Document"*, %"class.blink::Document"** %983, align 8
  %985 = call %"class.blink::HTMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %982, %"class.blink::Document"* dereferenceable(2848) %984) #9
  %986 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %985, i64 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %986, %"class.blink::EditingState"* %5)
  %987 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %988 = load i8, i8* %987, align 1, !range !2
  %989 = icmp eq i8 %988, 0
  br i1 %989, label %990, label %1063

990:                                              ; preds = %981, %977
  %991 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 2
  %992 = load i8, i8* %991, align 1, !range !2
  %993 = icmp eq i8 %992, 0
  br i1 %993, label %1003, label %994

994:                                              ; preds = %990
  %995 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kITagE, align 8
  %996 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %997 = load %"class.blink::Document"*, %"class.blink::Document"** %996, align 8
  %998 = call %"class.blink::HTMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %995, %"class.blink::Document"* dereferenceable(2848) %997) #9
  %999 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %998, i64 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %999, %"class.blink::EditingState"* %5)
  %1000 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %1001 = load i8, i8* %1000, align 1, !range !2
  %1002 = icmp eq i8 %1001, 0
  br i1 %1002, label %1003, label %1063

1003:                                             ; preds = %994, %990
  %1004 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 3
  %1005 = load i8, i8* %1004, align 2, !range !2
  %1006 = icmp eq i8 %1005, 0
  br i1 %1006, label %1016, label %1007

1007:                                             ; preds = %1003
  %1008 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kUTagE, align 8
  %1009 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1010 = load %"class.blink::Document"*, %"class.blink::Document"** %1009, align 8
  %1011 = call %"class.blink::HTMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %1008, %"class.blink::Document"* dereferenceable(2848) %1010) #9
  %1012 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1011, i64 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %1012, %"class.blink::EditingState"* %5)
  %1013 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %1014 = load i8, i8* %1013, align 1, !range !2
  %1015 = icmp eq i8 %1014, 0
  br i1 %1015, label %1016, label %1063

1016:                                             ; preds = %1007, %1003
  %1017 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 4
  %1018 = load i8, i8* %1017, align 1, !range !2
  %1019 = icmp eq i8 %1018, 0
  br i1 %1019, label %1029, label %1020

1020:                                             ; preds = %1016
  %1021 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrikeTagE, align 8
  %1022 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1023 = load %"class.blink::Document"*, %"class.blink::Document"** %1022, align 8
  %1024 = call %"class.blink::HTMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %1021, %"class.blink::Document"* dereferenceable(2848) %1023) #9
  %1025 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1024, i64 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %1025, %"class.blink::EditingState"* %5)
  %1026 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %1027 = load i8, i8* %1026, align 1, !range !2
  %1028 = icmp eq i8 %1027, 0
  br i1 %1028, label %1029, label %1063

1029:                                             ; preds = %1020, %1016
  %1030 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 5
  %1031 = load i8, i8* %1030, align 4, !range !2
  %1032 = icmp eq i8 %1031, 0
  br i1 %1032, label %1042, label %1033

1033:                                             ; preds = %1029
  %1034 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kSubTagE, align 8
  %1035 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1036 = load %"class.blink::Document"*, %"class.blink::Document"** %1035, align 8
  %1037 = call %"class.blink::HTMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %1034, %"class.blink::Document"* dereferenceable(2848) %1036) #9
  %1038 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1037, i64 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %1038, %"class.blink::EditingState"* %5)
  %1039 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %1040 = load i8, i8* %1039, align 1, !range !2
  %1041 = icmp eq i8 %1040, 0
  br i1 %1041, label %1055, label %1063

1042:                                             ; preds = %1029
  %1043 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %3, i64 0, i32 6
  %1044 = load i8, i8* %1043, align 1, !range !2
  %1045 = icmp eq i8 %1044, 0
  br i1 %1045, label %1055, label %1046

1046:                                             ; preds = %1042
  %1047 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kSupTagE, align 8
  %1048 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1049 = load %"class.blink::Document"*, %"class.blink::Document"** %1048, align 8
  %1050 = call %"class.blink::HTMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %1047, %"class.blink::Document"* dereferenceable(2848) %1049) #9
  %1051 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1050, i64 0, i32 0
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %1051, %"class.blink::EditingState"* %5)
  %1052 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %1053 = load i8, i8* %1052, align 1, !range !2
  %1054 = icmp eq i8 %1053, 0
  br i1 %1054, label %1055, label %1063

1055:                                             ; preds = %1033, %1046, %1042
  %1056 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %1057 = load %"class.blink::Element"*, %"class.blink::Element"** %1056, align 8
  %1058 = icmp ne %"class.blink::Element"* %1057, null
  %1059 = icmp eq i32 %4, 0
  %1060 = and i1 %1059, %1058
  br i1 %1060, label %1061, label %1063

1061:                                             ; preds = %1055
  %1062 = call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element20CloneWithoutChildrenEPNS_8DocumentE(%"class.blink::Element"* nonnull %1057, %"class.blink::Document"* null) #9
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %104, %"class.blink::Node"* %103, %"class.blink::Element"* %1062, %"class.blink::EditingState"* %5)
  br label %1063

1063:                                             ; preds = %981, %994, %1007, %1020, %1033, %1046, %1055, %1061, %632, %973
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17ApplyStyleCommand29IsStyledInlineElementToRemoveEPNS_7ElementE(%"class.blink::ApplyStyleCommand"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %30, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %14, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %2, %12, %18
  %25 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  %26 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %25, align 8
  %27 = icmp eq i1 (%"class.blink::Element"*)* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call zeroext i1 %26(%"class.blink::Element"* %1) #9
  br label %30

30:                                               ; preds = %6, %24, %28, %18
  %31 = phi i1 [ true, %18 ], [ false, %24 ], [ %29, %28 ], [ true, %6 ]
  ret i1 %31
}

declare zeroext i1 @_ZNK5blink12EditingStyle35StyleIsPresentInComputedStyleOfNodeEPNS_4NodeE(%"class.blink::EditingStyle"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, %"class.blink::EditingState"*, i32, %"class.blink::EditingStyle"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %8) #9
  %9 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %9) #9
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %71, label %12

12:                                               ; preds = %6
  %13 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %9) #9
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %13, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %14) #9
  br i1 %15, label %16, label %71

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %19 = load %"class.blink::Element"*, %"class.blink::Element"** %18, align 8
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %39, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %23, %25
  br i1 %26, label %45, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %33, %27, %16
  %40 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  %41 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %40, align 8
  %42 = icmp eq i1 (%"class.blink::Element"*)* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %39
  %44 = tail call zeroext i1 %41(%"class.blink::Element"* %17) #9
  br i1 %44, label %45, label %55

45:                                               ; preds = %21, %33, %43
  %46 = icmp eq i32 %4, 2
  br i1 %46, label %71, label %47

47:                                               ; preds = %45
  %48 = icmp eq %"class.blink::EditingStyle"* %5, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  tail call void @_ZN5blink12EditingStyle25MergeInlineStyleOfElementEPNS_11HTMLElementENS0_23CSSPropertyOverrideModeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* nonnull %5, %"class.blink::HTMLElement"* %2, i32 0, i32 0) #9
  br label %50

50:                                               ; preds = %47, %49
  %51 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %51, %"class.blink::Node"* %9, %"class.blink::EditingState"* %3, i32 1) #9
  %52 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  br label %71

55:                                               ; preds = %39, %43
  %56 = tail call zeroext i1 @_ZN5blink17ApplyStyleCommand29RemoveImplicitlyStyledElementEPNS_12EditingStyleEPNS_11HTMLElementENS0_22InlineStyleRemovalModeES2_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2, i32 %4, %"class.blink::EditingStyle"* %5, %"class.blink::EditingState"* %3)
  %57 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %71

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 256
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = tail call zeroext i1 @_ZN5blink17ApplyStyleCommand14RemoveCSSStyleEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2, %"class.blink::EditingState"* %3, i32 %4, %"class.blink::EditingStyle"* %5)
  %67 = or i1 %56, %66
  %68 = load i8, i8* %57, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = and i1 %67, %69
  ret i1 %70

71:                                               ; preds = %60, %55, %50, %45, %12, %6
  %72 = phi i1 [ false, %6 ], [ false, %12 ], [ true, %45 ], [ %54, %50 ], [ false, %55 ], [ %56, %60 ]
  ret i1 %72
}

declare void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink12EditingStyle25MergeInlineStyleOfElementEPNS_11HTMLElementENS0_23CSSPropertyOverrideModeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ApplyStyleCommand29RemoveImplicitlyStyledElementEPNS_12EditingStyleEPNS_11HTMLElementENS0_22InlineStyleRemovalModeES2_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, i32, %"class.blink::EditingStyle"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::Vector.1327", align 8
  %8 = icmp eq i32 %3, 2
  br i1 %8, label %9, label %13

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @_ZNK5blink12EditingStyle35ConflictsWithImplicitStyleOfElementEPNS_11HTMLElementEPS0_NS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2, %"class.blink::EditingStyle"* null, i32 1) #9
  br i1 %10, label %144, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK5blink12EditingStyle38ConflictsWithImplicitStyleOfAttributesEPNS_11HTMLElementE(%"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2) #9
  br label %144

13:                                               ; preds = %6
  %14 = icmp ne i32 %3, 1
  %15 = zext i1 %14 to i32
  %16 = tail call zeroext i1 @_ZNK5blink12EditingStyle35ConflictsWithImplicitStyleOfElementEPNS_11HTMLElementEPS0_NS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2, %"class.blink::EditingStyle"* %4, i32 %15) #9
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  tail call void @_ZN5blink17ApplyStyleCommand42ReplaceWithSpanOrRemoveIfWithoutAttributesEPNS_11HTMLElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::HTMLElement"* %2, %"class.blink::EditingState"* %5)
  %18 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br label %144

21:                                               ; preds = %13
  %22 = bitcast %"class.WTF::Vector.1327"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1327", %"class.WTF::Vector.1327"* %7, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::Vector.1327", %"class.WTF::Vector.1327"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false) #9
  %25 = icmp eq %"class.blink::EditingStyle"* %4, null
  %26 = zext i1 %25 to i32
  %27 = call zeroext i1 @_ZNK5blink12EditingStyle43ExtractConflictingImplicitStyleOfAttributesEPNS_11HTMLElementENS0_30ShouldPreserveWritingDirectionEPS0_RN3WTF6VectorINS_13QualifiedNameELj0ENS5_18PartitionAllocatorEEENS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* %2, i32 %26, %"class.blink::EditingStyle"* %4, %"class.WTF::Vector.1327"* nonnull dereferenceable(16) %7, i32 %15) #9
  br i1 %27, label %28, label %123

28:                                               ; preds = %21
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %23, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  br label %40

37:                                               ; preds = %40, %28
  %38 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  %39 = call zeroext i1 @_ZN5blink14IsEmptyFontTagEPKNS_7ElementENS_27ShouldStyleAttributeBeEmptyE(%"class.blink::Element"* %38, i32 1)
  br i1 %39, label %116, label %44

40:                                               ; preds = %34, %40
  %41 = phi %"class.blink::QualifiedName"* [ %29, %34 ], [ %42, %40 ]
  call void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"* %35, %"class.blink::Element"* %36, %"class.blink::QualifiedName"* dereferenceable(8) %41) #9
  %42 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %41, i64 1
  %43 = icmp eq %"class.blink::QualifiedName"* %42, %32
  br i1 %43, label %37, label %40

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = icmp eq %"class.blink::HTMLElement"* %2, null
  br i1 %46, label %122, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 48
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %122

52:                                               ; preds = %47
  %53 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 1, i32 2
  %57 = bitcast %"class.blink::Member"* %56 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %60, %62
  br i1 %63, label %64, label %122

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 1, i32 3
  %66 = bitcast %"class.blink::Member.0"* %65 to %"class.blink::ElementData"**
  %67 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %66, align 8
  %68 = icmp eq %"class.blink::ElementData"* %67, null
  br i1 %68, label %116, label %69

69:                                               ; preds = %64
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %38) #9
  %70 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %66, align 8
  %71 = icmp eq %"class.blink::ElementData"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i32, i32* null, align 536870912
  br label %83

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %70, i64 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::ElementData"* %70 to %"class.blink::UniqueElementData"*
  %81 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %80, i64 0, i32 2, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  br label %87

83:                                               ; preds = %74, %72
  %84 = phi i32 [ %73, %72 ], [ %76, %74 ]
  %85 = lshr i32 %84, 1
  %86 = and i32 %85, 268435455
  br label %87

87:                                               ; preds = %83, %79
  %88 = phi i32 [ %86, %83 ], [ %82, %79 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %116, label %90

90:                                               ; preds = %87
  %91 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %92 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %38, %"class.blink::QualifiedName"* dereferenceable(8) %91) #9
  br i1 %92, label %93, label %113

93:                                               ; preds = %90
  %94 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %66, align 8
  %95 = icmp eq %"class.blink::ElementData"* %94, null
  br i1 %95, label %112, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 0, i32 1, i32 0, i32 0
  %98 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %97, align 8
  %99 = icmp eq %"class.blink::CSSPropertyValueSet"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %98, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %98, i64 7, i32 0
  %106 = load i32, i32* %105, align 4
  br label %109

107:                                              ; preds = %100
  %108 = and i32 %102, 268435455
  br label %109

109:                                              ; preds = %107, %104
  %110 = phi i32 [ %108, %107 ], [ %106, %104 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109, %96, %93
  br label %113

113:                                              ; preds = %90, %109, %112
  %114 = phi i32 [ 1, %112 ], [ 0, %109 ], [ 0, %90 ]
  %115 = icmp eq i32 %114, %88
  br i1 %115, label %116, label %122

116:                                              ; preds = %87, %64, %113, %37
  %117 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %118 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %117, %"class.blink::Node"* %118, %"class.blink::EditingState"* %5, i32 1) #9
  %119 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %120 = load i8, i8* %119, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %116, %44, %47, %52, %113
  br label %123

123:                                              ; preds = %116, %21, %122
  %124 = phi i1 [ true, %122 ], [ false, %21 ], [ false, %116 ]
  %125 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %23, align 8
  %126 = icmp eq %"class.blink::QualifiedName"* %125, null
  br i1 %126, label %143, label %127, !prof !76

127:                                              ; preds = %123
  %128 = bitcast %"class.blink::QualifiedName"* %125 to i8*
  %129 = load i32, i32* %24, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %141, label %131, !prof !9

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %125, i64 %132
  br label %134

134:                                              ; preds = %134, %131
  %135 = phi %"class.blink::QualifiedName"* [ %136, %134 ], [ %125, %131 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %135) #9
  %136 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %135, i64 1
  %137 = icmp eq %"class.blink::QualifiedName"* %136, %133
  br i1 %137, label %138, label %134

138:                                              ; preds = %134
  store i32 0, i32* %24, align 4
  %139 = bitcast %"class.WTF::Vector.1327"* %7 to i8**
  %140 = load i8*, i8** %139, align 8
  br label %141

141:                                              ; preds = %138, %127
  %142 = phi i8* [ %140, %138 ], [ %128, %127 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %142) #9
  store %"class.blink::QualifiedName"* null, %"class.blink::QualifiedName"** %23, align 8
  br label %143

143:                                              ; preds = %123, %141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  br label %144

144:                                              ; preds = %17, %9, %11, %143
  %145 = phi i1 [ %124, %143 ], [ true, %9 ], [ %12, %11 ], [ %20, %17 ]
  ret i1 %145
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand42ReplaceWithSpanOrRemoveIfWithoutAttributesEPNS_11HTMLElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::HTMLElement"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %52, label %8

8:                                                ; preds = %3
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %4) #9
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load i32, i32* null, align 536870912
  br label %22

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %20 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %19, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %26

22:                                               ; preds = %13, %11
  %23 = phi i32 [ %12, %11 ], [ %15, %13 ]
  %24 = lshr i32 %23, 1
  %25 = and i32 %24, 268435455
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi i32 [ %25, %22 ], [ %21, %18 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %52, label %29

29:                                               ; preds = %26
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %31 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %30) #9
  br i1 %31, label %32, label %54

32:                                               ; preds = %29
  %33 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %34 = icmp eq %"class.blink::ElementData"* %33, null
  br i1 %34, label %51, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %36, align 8
  %38 = icmp eq %"class.blink::CSSPropertyValueSet"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %37, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, -1
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %37, i64 7, i32 0
  %45 = load i32, i32* %44, align 4
  br label %48

46:                                               ; preds = %39
  %47 = and i32 %41, 268435455
  br label %48

48:                                               ; preds = %46, %43
  %49 = phi i32 [ %47, %46 ], [ %45, %43 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %48, %35, %32
  br label %54

52:                                               ; preds = %26, %3
  %53 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  br label %58

54:                                               ; preds = %29, %48, %51
  %55 = phi i32 [ 1, %51 ], [ 0, %48 ], [ 0, %29 ]
  %56 = icmp eq i32 %55, %27
  %57 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  br i1 %56, label %58, label %61

58:                                               ; preds = %52, %54
  %59 = phi %"class.blink::CompositeEditCommand"* [ %53, %52 ], [ %57, %54 ]
  %60 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %59, %"class.blink::Node"* %60, %"class.blink::EditingState"* %2, i32 1) #9
  br label %63

61:                                               ; preds = %54
  %62 = tail call %"class.blink::HTMLSpanElement"* @_ZN5blink20CompositeEditCommand53ReplaceElementWithSpanPreservingChildrenAndAttributesEPNS_11HTMLElementE(%"class.blink::CompositeEditCommand"* %57, %"class.blink::HTMLElement"* %1) #9
  br label %63

63:                                               ; preds = %61, %58
  ret void
}

declare %"class.blink::HTMLSpanElement"* @_ZN5blink20CompositeEditCommand53ReplaceElementWithSpanPreservingChildrenAndAttributesEPNS_11HTMLElementE(%"class.blink::CompositeEditCommand"*, %"class.blink::HTMLElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle35ConflictsWithImplicitStyleOfElementEPNS_11HTMLElementEPS0_NS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, %"class.blink::EditingStyle"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle38ConflictsWithImplicitStyleOfAttributesEPNS_11HTMLElementE(%"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle43ExtractConflictingImplicitStyleOfAttributesEPNS_11HTMLElementENS0_30ShouldPreserveWritingDirectionEPS0_RN3WTF6VectorINS_13QualifiedNameELj0ENS5_18PartitionAllocatorEEENS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, i32, %"class.blink::EditingStyle"*, %"class.WTF::Vector.1327"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand17RemoveCSSPropertyEPNS_7ElementENS_13CSSPropertyIDE(%"class.blink::CompositeEditCommand"*, %"class.blink::Element"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZN5blink17ApplyStyleCommand41HighestAncestorWithConflictingInlineStyleEPNS_12EditingStyleEPNS_4NodeE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::IgnorableEditingAbortState", align 1
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = icmp eq %"class.blink::Node"* %2, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::Node"* nonnull dereferenceable(64) %2) #9
  %9 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink11IsTableCellEPKNS_4NodeE, i32 1) #9
  %10 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  %11 = icmp eq %"class.blink::Node"* %9, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = call %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #9
  br label %14

14:                                               ; preds = %12, %7
  %15 = phi %"class.blink::Element"* [ %13, %12 ], [ %10, %7 ]
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  %17 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %4, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %33
  %20 = phi %"class.blink::Node"* [ %2, %14 ], [ %35, %33 ]
  %21 = phi %"class.blink::HTMLElement"* [ null, %14 ], [ %31, %33 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 0
  %26 = bitcast %"class.blink::Node"* %20 to %"class.blink::HTMLElement"*
  br i1 %25, label %27, label %30

27:                                               ; preds = %19
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #9
  call void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %4) #9
  %28 = call zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* nonnull %26, %"class.blink::EditingState"* nonnull %18, i32 2, %"class.blink::EditingStyle"* null) #9
  call void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #9
  %29 = select i1 %28, %"class.blink::HTMLElement"* %26, %"class.blink::HTMLElement"* %21
  br label %30

30:                                               ; preds = %19, %27
  %31 = phi %"class.blink::HTMLElement"* [ %21, %19 ], [ %29, %27 ]
  %32 = icmp eq %"class.blink::Node"* %20, %16
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %20) #9
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0
  %36 = icmp eq %"class.blink::ContainerNode"* %34, null
  br i1 %36, label %37, label %19

37:                                               ; preds = %33, %30, %3
  %38 = phi %"class.blink::HTMLElement"* [ null, %3 ], [ %31, %30 ], [ %31, %33 ]
  ret %"class.blink::HTMLElement"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand26ApplyInlineStyleToPushDownEPNS_4NodeEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Node"*, %"class.blink::EditingStyle"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %9) #9
  %10 = icmp eq %"class.blink::EditingStyle"* %2, null
  br i1 %10, label %178, label %11

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"* nonnull %2) #9
  br i1 %12, label %178, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %178, label %31

31:                                               ; preds = %25
  %32 = and i32 %15, 48
  %33 = icmp ne i32 %32, 0
  %34 = icmp eq %"class.blink::Node"* %1, null
  %35 = or i1 %34, %33
  br i1 %35, label %48, label %36

36:                                               ; preds = %31
  %37 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %41 = bitcast %"class.blink::Member"* %40 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  br i1 %47, label %178, label %48

48:                                               ; preds = %31, %36
  br i1 %34, label %64, label %49

49:                                               ; preds = %48
  %50 = icmp eq i32 %32, 0
  %51 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLElement"*
  br i1 %50, label %52, label %64

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 3
  %54 = bitcast %"class.blink::Member.0"* %53 to %"class.blink::ElementData"**
  %55 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %54, align 8
  %56 = icmp eq %"class.blink::ElementData"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %58, align 8
  %60 = icmp eq %"class.blink::CSSPropertyValueSet"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = tail call %"class.blink::EditingStyle"* @_ZNK5blink12EditingStyle4CopyEv(%"class.blink::EditingStyle"* nonnull %2) #9
  tail call void @_ZN5blink12EditingStyle25MergeInlineStyleOfElementEPNS_11HTMLElementENS0_23CSSPropertyOverrideModeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %62, %"class.blink::HTMLElement"* nonnull %51, i32 0, i32 0) #9
  %63 = load i32, i32* %14, align 8
  br label %64

64:                                               ; preds = %52, %48, %49, %57, %61
  %65 = phi i32 [ %63, %61 ], [ %15, %57 ], [ %15, %49 ], [ %15, %48 ], [ %15, %52 ]
  %66 = phi i1 [ true, %61 ], [ true, %57 ], [ false, %49 ], [ false, %48 ], [ true, %52 ]
  %67 = phi %"class.blink::HTMLElement"* [ %51, %61 ], [ %51, %57 ], [ null, %49 ], [ null, %48 ], [ %51, %52 ]
  %68 = phi %"class.blink::EditingStyle"* [ %62, %61 ], [ %2, %57 ], [ %2, %49 ], [ %2, %48 ], [ %2, %52 ]
  %69 = and i32 %65, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %64
  %72 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %73 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %73, i64 0, i32 1, i32 0, i32 0
  br label %77

75:                                               ; preds = %64
  %76 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %77

77:                                               ; preds = %71, %75
  %78 = phi %"class.blink::NodeRenderingData"** [ %74, %71 ], [ %76, %75 ]
  %79 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %79, i64 0, i32 1
  %81 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %80, align 8
  %82 = bitcast %"class.blink::LayoutObject"* %81 to i1 (%"class.blink::LayoutObject"*)***
  %83 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %83, i64 24
  %85 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* %81) #9
  br i1 %86, label %99, label %87

87:                                               ; preds = %77
  br i1 %34, label %168, label %88

88:                                               ; preds = %87
  %89 = load i32, i32* %14, align 8
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %168, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %94 = bitcast %"class.blink::Node"* %93 to %"class.blink::Node"**
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  %97 = xor i1 %66, true
  %98 = or i1 %96, %97
  br i1 %98, label %168, label %100

99:                                               ; preds = %77
  br i1 %66, label %100, label %168

100:                                              ; preds = %92, %99
  %101 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %102 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %67, i64 0, i32 0
  %103 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %104 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #9
  %105 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %68, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %106, i64 0, i32 0
  %108 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %107) #9
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %133, label %110

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 acquire, align 4
  %113 = and i32 %112, 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %110
  %116 = load atomic i32, i32* %111 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %133

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #9
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !9

128:                                              ; preds = %119
  tail call void @llvm.trap() #9
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %133

131:                                              ; preds = %110
  %132 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %133

133:                                              ; preds = %100, %115, %129, %131
  %134 = phi %"class.WTF::StringImpl"* [ %132, %131 ], [ %108, %115 ], [ %108, %129 ], [ null, %100 ]
  %135 = ptrtoint %"class.WTF::StringImpl"* %134 to i64
  %136 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %135, i64* %136, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Element"* %102, %"class.blink::QualifiedName"* dereferenceable(8) %103, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %137 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #9
  br label %153

153:                                              ; preds = %133, %149, %152
  br i1 %109, label %167, label %154

154:                                              ; preds = %153
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %167

167:                                              ; preds = %153, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #9
  br label %178

168:                                              ; preds = %88, %87, %92, %99
  %169 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %81, i64 0, i32 4
  %170 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %169 to i96*
  %171 = load i96, i96* %170, align 4
  %172 = and i96 %171, 33554432
  %173 = icmp eq i96 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %168
  %175 = bitcast %"class.blink::LayoutObject"* %81 to %"class.blink::LayoutText"*
  %176 = tail call zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* %175) #9
  br i1 %176, label %178, label %177

177:                                              ; preds = %168, %174
  tail call void @_ZN5blink17ApplyStyleCommand22AddInlineStyleIfNeededEPNS_12EditingStyleEPNS_4NodeES4_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %68, %"class.blink::Node"* %1, %"class.blink::Node"* %1, %"class.blink::EditingState"* %3)
  br label %178

178:                                              ; preds = %167, %177, %174, %25, %4, %11, %36
  ret void
}

declare zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand22AddInlineStyleIfNeededEPNS_12EditingStyleEPNS_4NodeES4_PNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::Node"*, %"class.blink::Node"* readonly, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Member.1324", align 8
  %7 = alloca %"class.blink::StyleChange", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = icmp ne %"class.blink::Node"* %2, null
  %10 = icmp ne %"class.blink::Node"* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %40

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 256
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::Member.1324"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.blink::Member.1324", %"class.blink::Member.1324"* %6, i64 0, i32 0, i32 0
  store %"class.blink::HTMLSpanElement"* null, %"class.blink::HTMLSpanElement"** %24, align 8
  %25 = bitcast %"class.blink::StyleChange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 40, i1 false)
  %26 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  call void @_ZN5blink17ApplyStyleCommand34PositionToComputeInlineStyleChangeEPNS_4NodeERNS_6MemberINS_15HTMLSpanElementEEEPNS_12EditingStateE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* nonnull %2, %"class.blink::Member.1324"* nonnull dereferenceable(8) %6, %"class.blink::EditingState"* %4)
  call void @_ZN5blink11StyleChangeC1EPNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::StyleChange"* nonnull %7, %"class.blink::EditingStyle"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %4, i64 0, i32 0
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %22
  %31 = load %"class.blink::HTMLSpanElement"*, %"class.blink::HTMLSpanElement"** %24, align 8
  %32 = icmp eq %"class.blink::HTMLSpanElement"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %34, %"class.blink::Node"* %35, %"class.blink::EditingState"* %4, i32 1) #9
  %36 = load i8, i8* %27, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33, %30
  call void @_ZN5blink17ApplyStyleCommand22ApplyInlineStyleChangeEPNS_4NodeES2_RNS_11StyleChangeENS0_16AddStyledElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* nonnull %2, %"class.blink::Node"* nonnull %3, %"class.blink::StyleChange"* nonnull dereferenceable(40) %7, i32 1, %"class.blink::EditingState"* %4)
  br label %39

39:                                               ; preds = %33, %22, %38
  call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %40

40:                                               ; preds = %17, %12, %5, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ApplyStyleCommand29PushDownInlineStyleAroundNodeEPNS_12EditingStyleEPNS_4NodeEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"*, %"class.blink::EditingStyle"*, %"class.blink::Node"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"class.blink::HeapVector.1333", align 8
  %8 = alloca %"class.blink::Element"*, align 8
  %9 = tail call %"class.blink::HTMLElement"* @_ZN5blink17ApplyStyleCommand41HighestAncestorWithConflictingInlineStyleEPNS_12EditingStyleEPNS_4NodeE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::Node"* %2)
  %10 = icmp eq %"class.blink::HTMLElement"* %9, null
  br i1 %10, label %236, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #9
  %17 = bitcast %"class.blink::HeapVector.1333"* %7 to i8*
  %18 = getelementptr inbounds %"class.blink::HeapVector.1333", %"class.blink::HeapVector.1333"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %19 = bitcast %"class.blink::HeapVector.1333"* %7 to i8**
  %20 = getelementptr inbounds %"class.blink::HeapVector.1333", %"class.blink::HeapVector.1333"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.blink::HeapVector.1333", %"class.blink::HeapVector.1333"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = bitcast i32* %21 to i8*
  %23 = bitcast %"class.blink::Node"** %5 to i8*
  %24 = getelementptr inbounds %"class.blink::HeapVector.1333", %"class.blink::HeapVector.1333"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::HeapVector.1333", %"class.blink::HeapVector.1333"* %7, i64 0, i32 0
  %26 = bitcast %"class.blink::Element"** %8 to i8*
  %27 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 9
  %29 = bitcast %"class.blink::Element"** %8 to %"class.blink::Node"**
  %30 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %37 = bitcast i8* %18 to %"class.blink::Member"*
  %38 = getelementptr inbounds %"class.blink::HeapVector.1333", %"class.blink::HeapVector.1333"* %7, i64 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %233, %11
  %40 = phi %"class.blink::Node"* [ %12, %11 ], [ %230, %233 ]
  %41 = icmp eq %"class.blink::Node"* %40, null
  %42 = icmp eq %"class.blink::Node"* %40, %2
  %43 = or i1 %41, %42
  br i1 %43, label %235, label %44

44:                                               ; preds = %39
  %45 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* nonnull %40, %"class.blink::Node"* %2) #9
  br i1 %45, label %46, label %235

46:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #9
  store i8* %18, i8** %19, align 8
  store i32 11, i32* %20, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 92, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1
  %48 = bitcast %"class.blink::Node"* %47 to %"class.blink::Node"**
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  store %"class.blink::Node"* %49, %"class.blink::Node"** %5, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %79, label %51

51:                                               ; preds = %46, %76
  %52 = phi i32 [ %78, %76 ], [ 11, %46 ]
  %53 = phi i32 [ %77, %76 ], [ 0, %46 ]
  %54 = phi %"class.blink::Node"* [ %74, %76 ], [ %49, %46 ]
  %55 = icmp eq i32 %53, %52
  br i1 %55, label %70, label %56, !prof !9

56:                                               ; preds = %51
  %57 = ptrtoint %"class.blink::Node"* %54 to i64
  %58 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %59 = zext i32 %53 to i64
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %59
  %61 = bitcast %"class.blink::Member"* %60 to i64*
  store atomic i64 %57, i64* %61 monotonic, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %56
  %65 = bitcast %"class.blink::Node"* %54 to i8*
  %66 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #9
  br label %67

67:                                               ; preds = %64, %56
  %68 = load i32, i32* %21, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %21, align 4
  br label %71

70:                                               ; preds = %51
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1336"* nonnull %25, %"class.blink::Node"** nonnull dereferenceable(8) %5) #9
  br label %71

71:                                               ; preds = %70, %67
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %72, i64 0, i32 5, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  store %"class.blink::Node"* %74, %"class.blink::Node"** %5, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  %77 = load i32, i32* %21, align 4
  %78 = load i32, i32* %20, align 8
  br label %51

79:                                               ; preds = %71, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  store %"class.blink::Element"* null, %"class.blink::Element"** %8, align 8
  %80 = call zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"* nonnull %40) #9
  br i1 %80, label %81, label %128

81:                                               ; preds = %79
  %82 = bitcast %"class.blink::Node"* %40 to %"class.blink::Element"*
  %83 = load %"class.blink::Element"*, %"class.blink::Element"** %27, align 8
  %84 = icmp eq %"class.blink::Element"* %83, null
  br i1 %84, label %104, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1, i32 2
  %87 = bitcast %"class.blink::Member"* %86 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %83, i64 0, i32 2, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %88, %90
  br i1 %91, label %109, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 4, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 4, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %100, %102
  br i1 %103, label %109, label %104

104:                                              ; preds = %98, %92, %81
  %105 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %28, align 8
  %106 = icmp eq i1 (%"class.blink::Element"*)* %105, null
  br i1 %106, label %128, label %107

107:                                              ; preds = %104
  %108 = call zeroext i1 %105(%"class.blink::Element"* %82) #9
  br i1 %108, label %109, label %128

109:                                              ; preds = %85, %98, %107
  store %"class.blink::Node"* %40, %"class.blink::Node"** %29, align 8
  %110 = load i32, i32* %16, align 4
  %111 = load i32, i32* %15, align 8
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %127, label %113, !prof !9

113:                                              ; preds = %109
  %114 = ptrtoint %"class.blink::Node"* %40 to i64
  %115 = load %"class.blink::Member.36"*, %"class.blink::Member.36"** %14, align 8
  %116 = zext i32 %110 to i64
  %117 = getelementptr inbounds %"class.blink::Member.36", %"class.blink::Member.36"* %115, i64 %116
  %118 = bitcast %"class.blink::Member.36"* %117 to i64*
  store atomic i64 %114, i64* %118 monotonic, align 8
  %119 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %113
  %122 = bitcast %"class.blink::Node"* %40 to i8*
  %123 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %122) #9
  br label %124

124:                                              ; preds = %121, %113
  %125 = load i32, i32* %16, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %16, align 4
  br label %128

127:                                              ; preds = %109
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.40"* nonnull %30, %"class.blink::Element"** nonnull dereferenceable(8) %8) #9
  br label %128

128:                                              ; preds = %104, %127, %124, %107, %79
  %129 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #9
  %130 = bitcast i8* %129 to %"class.blink::EditingStyle"*
  %131 = getelementptr inbounds i8, i8* %129, i64 -4
  %132 = bitcast i8* %131 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 32, i1 false) #9
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = or i16 %133, 1
  store atomic i16 %134, i16* %132 release, align 2
  %135 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 48
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %128
  %140 = bitcast %"class.blink::Node"* %40 to %"class.blink::HTMLElement"*
  %141 = call zeroext i1 @_ZN5blink17ApplyStyleCommand28RemoveInlineStyleFromElementEPNS_12EditingStyleEPNS_11HTMLElementEPNS_12EditingStateENS0_22InlineStyleRemovalModeES2_(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::EditingStyle"* %1, %"class.blink::HTMLElement"* nonnull %140, %"class.blink::EditingState"* %3, i32 0, %"class.blink::EditingStyle"* %130)
  %142 = load i8, i8* %31, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %216

144:                                              ; preds = %128, %139
  %145 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %146 = load i32, i32* %21, align 4
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %145, i64 %147
  %149 = icmp eq i32 %146, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %151 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  br label %227

152:                                              ; preds = %144, %212
  %153 = phi %"class.blink::Member"* [ %214, %212 ], [ %145, %144 ]
  %154 = phi %"class.blink::Node"* [ %213, %212 ], [ %40, %144 ]
  %155 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %153, i64 0, i32 0, i32 0
  %156 = load %"class.blink::Node"*, %"class.blink::Node"** %155, align 8
  %157 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %156) #9
  %158 = icmp eq %"class.blink::ContainerNode"* %157, null
  br i1 %158, label %212, label %159

159:                                              ; preds = %152
  %160 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %156, %"class.blink::Node"* %2) #9
  br i1 %160, label %199, label %161

161:                                              ; preds = %159
  %162 = load i32, i32* %16, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %199, label %164

164:                                              ; preds = %161
  %165 = load %"class.blink::Member.36"*, %"class.blink::Member.36"** %14, align 8
  %166 = zext i32 %162 to i64
  %167 = getelementptr inbounds %"class.blink::Member.36", %"class.blink::Member.36"* %165, i64 %166
  br label %170

168:                                              ; preds = %195
  %169 = icmp eq %"class.blink::Member.36"* %198, %167
  br i1 %169, label %199, label %170

170:                                              ; preds = %164, %168
  %171 = phi %"class.blink::Member.36"* [ %198, %168 ], [ %165, %164 ]
  %172 = getelementptr inbounds %"class.blink::Member.36", %"class.blink::Member.36"* %171, i64 0, i32 0, i32 0
  %173 = load %"class.blink::Element"*, %"class.blink::Element"** %172, align 8
  %174 = call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element20CloneWithoutChildrenEPNS_8DocumentE(%"class.blink::Element"* %173, %"class.blink::Document"* null) #9
  call void @_ZN5blink7Element15removeAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %174, %"class.blink::QualifiedName"* dereferenceable(8) %32) #9
  %175 = load %"class.blink::Element"*, %"class.blink::Element"** %172, align 8
  call void @_ZN5blink7Element15removeAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %175, %"class.blink::QualifiedName"* dereferenceable(8) %33) #9
  %176 = load %"class.blink::Element"*, %"class.blink::Element"** %172, align 8
  %177 = icmp eq %"class.blink::Element"* %176, null
  br i1 %177, label %195, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %176, i64 0, i32 0, i32 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = and i32 %180, 48
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %176, i64 0, i32 0, i32 0
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %186 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %184, i64 1, i32 2
  %187 = bitcast %"class.blink::Member"* %186 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %188 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 3, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %190, %192
  br i1 %193, label %194, label %195

194:                                              ; preds = %183
  call void @_ZN5blink7Element15removeAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %176, %"class.blink::QualifiedName"* dereferenceable(8) %36) #9
  br label %195

195:                                              ; preds = %178, %170, %194, %183
  call void @_ZN5blink17ApplyStyleCommand28SurroundNodeRangeWithElementEPNS_4NodeES2_PNS_7ElementEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %156, %"class.blink::Node"* %156, %"class.blink::Element"* %174, %"class.blink::EditingState"* %3)
  %196 = load i8, i8* %31, align 1, !range !2
  %197 = icmp eq i8 %196, 0
  %198 = getelementptr inbounds %"class.blink::Member.36", %"class.blink::Member.36"* %171, i64 1
  br i1 %197, label %168, label %216

199:                                              ; preds = %168, %161, %159
  %200 = icmp ne %"class.blink::Node"* %156, %2
  %201 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %202 = icmp ne %"class.blink::Element"* %201, null
  %203 = or i1 %200, %202
  br i1 %203, label %204, label %207

204:                                              ; preds = %199
  call void @_ZN5blink17ApplyStyleCommand26ApplyInlineStyleToPushDownEPNS_4NodeEPNS_12EditingStyleEPNS_12EditingStateE(%"class.blink::ApplyStyleCommand"* %0, %"class.blink::Node"* %156, %"class.blink::EditingStyle"* %130, %"class.blink::EditingState"* %3)
  %205 = load i8, i8* %31, align 1, !range !2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %216

207:                                              ; preds = %204, %199
  %208 = icmp eq %"class.blink::Node"* %156, %2
  br i1 %208, label %211, label %209

209:                                              ; preds = %207
  %210 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %156, %"class.blink::Node"* %2) #9
  br i1 %210, label %211, label %212

211:                                              ; preds = %209, %207
  br label %212

212:                                              ; preds = %152, %211, %209
  %213 = phi %"class.blink::Node"* [ %154, %209 ], [ %156, %211 ], [ %154, %152 ]
  %214 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %153, i64 1
  %215 = icmp eq %"class.blink::Member"* %214, %148
  br i1 %215, label %216, label %152

216:                                              ; preds = %212, %204, %195, %139
  %217 = phi %"class.blink::Node"* [ %40, %139 ], [ %154, %195 ], [ %154, %204 ], [ %213, %212 ]
  %218 = phi i32 [ 1, %139 ], [ 1, %195 ], [ 1, %204 ], [ 0, %212 ]
  %219 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %220 = icmp eq i32 %219, 0
  %221 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  br i1 %220, label %227, label %222, !prof !9

222:                                              ; preds = %216
  %223 = icmp ne %"class.blink::Member"* %221, null
  %224 = icmp ne %"class.blink::Member"* %221, %37
  %225 = and i1 %223, %224
  br i1 %225, label %227, label %226

226:                                              ; preds = %222
  store i32 0, i32* %21, align 4
  br label %227

227:                                              ; preds = %150, %226, %222, %216
  %228 = phi %"class.blink::Member"* [ %151, %150 ], [ %221, %226 ], [ %221, %222 ], [ %221, %216 ]
  %229 = phi i32 [ 0, %150 ], [ %218, %226 ], [ %218, %222 ], [ %218, %216 ]
  %230 = phi %"class.blink::Node"* [ %40, %150 ], [ %217, %226 ], [ %217, %222 ], [ %217, %216 ]
  %231 = icmp eq %"class.blink::Member"* %228, %37
  br i1 %231, label %233, label %232, !prof !76

232:                                              ; preds = %227
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1337"* nonnull %38, %"class.blink::Member"* %228) #9
  br label %233

233:                                              ; preds = %227, %232
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #9
  %234 = icmp eq i32 %229, 0
  br i1 %234, label %39, label %235

235:                                              ; preds = %44, %39, %233
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  br label %236

236:                                              ; preds = %4, %235
  ret void
}

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element20CloneWithoutChildrenEPNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink7Element15removeAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink29NextVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink33PreviousVisuallyDistinctCandidateERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::TreeScope"* @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorTreeScopeERKS4_S6_(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal17PreviousPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand13SplitTextNodeEPNS_4TextEj(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand30SplitTextNodeContainingElementEPNS_4TextEj(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare i32 @_ZN5blink14CaretMinOffsetEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12IsAtomicNodeEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20AreIdenticalElementsERKNS_4NodeES2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand22MergeIdenticalElementsEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::Element"*, %"class.blink::Element"*, %"class.blink::EditingState"*) local_unnamed_addr #2

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand10AppendNodeEPNS_4NodeEPNS_13ContainerNodeEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::ContainerNode"*, %"class.blink::EditingState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !9

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand12InsertNodeAtEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #2

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand18InsertTextIntoNodeEPNS_4TextEjRKN3WTF6StringE(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ApplyStyleCommand5TraceEPNS_7VisitorE(%"class.blink::ApplyStyleCommand"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.671"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 4
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %14, %"class.blink::Visitor"* %1) #9
  %15 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 5
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %15, %"class.blink::Visitor"* %1) #9
  %16 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 7
  %17 = bitcast %"class.blink::Member.36"* %16 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %13
  %21 = inttoptr i64 %18 to i8*
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* nonnull %21, i8* nonnull %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %26

26:                                               ; preds = %13, %20
  %27 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZNK5blink20CompositeEditCommand5TraceEPNS_7VisitorE(%"class.blink::CompositeEditCommand"* %27, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink20CompositeEditCommand5TraceEPNS_7VisitorE(%"class.blink::CompositeEditCommand"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink20CompositeEditCommandD2Ev(%"class.blink::CompositeEditCommand"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ApplyStyleCommandD0Ev(%"class.blink::ApplyStyleCommand"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ApplyStyleCommand", %"class.blink::ApplyStyleCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandD2Ev(%"class.blink::CompositeEditCommand"* %2) #9
  ret void
}

declare void @_ZN5blink20CompositeEditCommand9SetParentEPS0_(%"class.blink::CompositeEditCommand"*, %"class.blink::CompositeEditCommand"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EditCommand19IsSimpleEditCommandEv(%"class.blink::EditCommand"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZNK5blink11EditCommand21TextDataForInputEventEv(%"class.blink::EditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand25IsReplaceSelectionCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand15IsTypingCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand21IsCommandGroupWrapperEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand20IsDragAndDropCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand20PreservesTypingStyleEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand14AppliedEditingEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand18DeleteTextFromNodeEPNS_4TextEjj(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !9

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle33ConflictsWithInlineStyleOfElementEPNS_11HTMLElementEPS0_PN3WTF6VectorINS_13CSSPropertyIDELj0ENS4_18PartitionAllocatorEEE(%"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, %"class.blink::EditingStyle"*, %"class.WTF::Vector.944"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* dereferenceable(16), i1 (%"class.blink::Node"*)*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink11IsTableCellEPKNS_4NodeE(%"class.blink::Node"*) #2

declare %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1336"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1336"* %0, i32 %5) #9
  %6 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %9
  %11 = bitcast %"class.blink::Node"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member"* %10 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #9
  br label %19

19:                                               ; preds = %2, %16
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1336"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1336"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1336"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !76

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 11
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.1336"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #9
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.1336"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 11, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member"*
  %33 = icmp eq %"class.blink::Member"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 12
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %37) #9
  %39 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %40 = icmp eq %"class.blink::Member"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 88, %34 ]
  %43 = phi %"class.blink::Member"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #9
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #9
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !9

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #9
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1336"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1336"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 12
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = icmp eq %"class.blink::Member"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member"*
  %10 = icmp eq %"class.blink::Member"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1336"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 11, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.1336"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 11, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !9

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #9
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #9
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #9
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1337"* %20, %"class.blink::Member"* %6) #9
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %44) #9
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %46) #9
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !76

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member"*
  %58 = icmp ne %"class.blink::Member"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #9
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #9
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.1336"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #9
  %87 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member"*
  %90 = icmp eq %"class.blink::Member"* %87, %89
  br i1 %90, label %93, label %91, !prof !76

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1337"* %92, %"class.blink::Member"* %87) #9
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.1336"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.1336", %"class.WTF::Vector.1336"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #9
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_4NodeEEELj11ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1337"*, %"class.blink::Member"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !9

22:                                               ; preds = %15
  %23 = bitcast %union.anon.1371* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.1371* %16 to %"class.WTF::Vector.1376"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1376"* %30, i16* nonnull dereferenceable(2) %3) #9
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !9

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1372"* %41, i8* nonnull dereferenceable(1) %4) #9
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1376"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1376"* %0, i32 %5) #9
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1376"* %0, i32 %5) #9
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1376"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !76

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1376"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1376"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1376"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1376"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1376"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1376"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !9

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1377"* %19, i16* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !76

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #9
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !76

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1377"* %53, i16* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1376"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1376", %"class.WTF::Vector.1376"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1377"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1372"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1372"* %0, i32 %5) #9
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1372"* %0, i32 %5) #9
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1372"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !76

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1372"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1372"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1372"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1372"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1372"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1372"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !9

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1373"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !76

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !76

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1373"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1372"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1372", %"class.WTF::Vector.1372"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1373"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12EditingStyleEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EditingStyle"*
  tail call void @_ZNK5blink12EditingStyle5TraceEPNS_7VisitorE(%"class.blink::EditingStyle"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink12EditingStyle5TraceEPNS_7VisitorE(%"class.blink::EditingStyle"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.700"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_fEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.698"*, %"class.blink::Node"** dereferenceable(8), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.700"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.698"* %0, %"struct.WTF::KeyValuePair.700"* null)
  %9 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.700"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #9
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !9

43:                                               ; preds = %10
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #9
  br label %45

45:                                               ; preds = %10, %43
  %46 = phi i8* [ %44, %43 ], [ %41, %10 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %11, i64 %38
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %99, label %56

56:                                               ; preds = %45
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  %58 = xor i32 %36, -1
  %59 = lshr i32 %36, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %56, %78
  %72 = phi %"class.blink::Node"* [ %54, %56 ], [ %88, %78 ]
  %73 = phi %"struct.WTF::KeyValuePair.700"* [ %52, %56 ], [ %86, %78 ]
  %74 = phi %"struct.WTF::KeyValuePair.700"* [ null, %56 ], [ %81, %78 ]
  %75 = phi i64 [ %38, %56 ], [ %85, %78 ]
  %76 = phi i64 [ 0, %56 ], [ %83, %78 ]
  %77 = icmp eq %"class.blink::Node"* %72, %57
  br i1 %77, label %161, label %78

78:                                               ; preds = %71
  %79 = icmp eq %"class.blink::Node"* %72, inttoptr (i64 -1 to %"class.blink::Node"*)
  %80 = select i1 %51, %"struct.WTF::KeyValuePair.700"* %74, %"struct.WTF::KeyValuePair.700"* %73
  %81 = select i1 %79, %"struct.WTF::KeyValuePair.700"* %80, %"struct.WTF::KeyValuePair.700"* %74
  %82 = icmp eq i64 %76, 0
  %83 = select i1 %82, i64 %70, i64 %76
  %84 = add i64 %83, %75
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %11, i64 %85
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %90, label %71

90:                                               ; preds = %78
  %91 = icmp eq %"struct.WTF::KeyValuePair.700"* %81, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %90
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_4NodeEEEEENS4_IfEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_fEEEEvRT1_(%"struct.WTF::KeyValuePair.700"* nonnull dereferenceable(16) %81) #9
  %93 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, 2147483647
  %96 = and i32 %95, 2147483647
  %97 = and i32 %94, -2147483648
  %98 = or i32 %96, %97
  store i32 %98, i32* %93, align 8
  br label %99

99:                                               ; preds = %45, %90, %92
  %100 = phi %"struct.WTF::KeyValuePair.700"* [ %81, %92 ], [ %86, %90 ], [ %52, %45 ]
  %101 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  %102 = ptrtoint %"class.blink::Node"* %101 to i64
  %103 = bitcast %"struct.WTF::KeyValuePair.700"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::Node"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #9
  br label %109

109:                                              ; preds = %99, %106
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %100, i64 0, i32 1
  %111 = bitcast float* %2 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = bitcast float* %110 to i32*
  store i32 %112, i32* %113, align 4
  %114 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %149, label %116

116:                                              ; preds = %109
  %117 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %118 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %117, i64 0, i32 1
  %119 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %118) #9
  %120 = icmp eq i8* %119, null
  br i1 %120, label %121, label %123, !prof !9

121:                                              ; preds = %116
  %122 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %118, i8* %122) #9
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi i8* [ %122, %121 ], [ %119, %116 ]
  %125 = bitcast i8* %124 to %"class.blink::ThreadState"**
  %126 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 9
  %128 = load i8, i8* %127, align 1, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %149, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 13
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  %134 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %135 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %134, align 8
  %136 = load atomic i64, i64* %103 monotonic, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %135, i64 0, i32 0, i32 0
  %140 = inttoptr i64 %136 to i8*
  %141 = bitcast %"class.blink::MarkingVisitor"* %135 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %142 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %142, i64 5
  %144 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %143, align 8
  tail call void %144(%"class.blink::Visitor"* %139, i8* nonnull %140, i8* %140, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  %145 = load i64, i64* %131, align 8
  br label %146

146:                                              ; preds = %138, %130
  %147 = phi i64 [ %133, %130 ], [ %145, %138 ]
  %148 = add i64 %147, -1
  store i64 %148, i64* %131, align 8
  br label %149

149:                                              ; preds = %109, %123, %146
  %150 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 3
  %154 = load i32, i32* %153, align 8
  %155 = add i32 %154, %152
  %156 = shl i32 %155, 1
  %157 = load i32, i32* %12, align 8
  %158 = icmp ult i32 %156, %157
  br i1 %158, label %161, label %159

159:                                              ; preds = %149
  %160 = tail call %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.698"* %0, %"struct.WTF::KeyValuePair.700"* %100)
  br label %161

161:                                              ; preds = %71, %149, %159
  %162 = phi i8 [ 1, %149 ], [ 1, %159 ], [ 0, %71 ]
  %163 = phi %"struct.WTF::KeyValuePair.700"* [ %100, %149 ], [ %160, %159 ], [ %73, %71 ]
  %164 = insertvalue { %"struct.WTF::KeyValuePair.700"*, i8 } undef, %"struct.WTF::KeyValuePair.700"* %163, 0
  %165 = insertvalue { %"struct.WTF::KeyValuePair.700"*, i8 } %164, i8 %162, 1
  ret { %"struct.WTF::KeyValuePair.700"*, i8 } %165
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.698"*, %"struct.WTF::KeyValuePair.700"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.698"* %0, i32 %32, %"struct.WTF::KeyValuePair.700"* %1)
  ret %"struct.WTF::KeyValuePair.700"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.698"*, i32, %"struct.WTF::KeyValuePair.700"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %9 = call %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.698"* %0, i32 %1, %"struct.WTF::KeyValuePair.700"* %2, i8* nonnull dereferenceable(1) %4)
  %10 = load i8, i8* %4, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %11, label %12, label %32

12:                                               ; preds = %8
  %13 = zext i32 %1 to i64
  %14 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %13) #9
  %15 = bitcast %"class.blink::HeapHashTableBacking"* %14 to %"struct.WTF::KeyValuePair.700"*
  br label %21

16:                                               ; preds = %3
  %17 = zext i32 %1 to i64
  %18 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %17) #9
  %19 = bitcast %"class.blink::HeapHashTableBacking"* %18 to %"struct.WTF::KeyValuePair.700"*
  %20 = icmp eq i32 %1, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %12, %16
  %22 = phi %"struct.WTF::KeyValuePair.700"* [ %15, %12 ], [ %19, %16 ]
  %23 = phi i64 [ %13, %12 ], [ %17, %16 ]
  br label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %27, %24 ], [ 0, %21 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %22, i64 %25
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_4NodeEEEEENS4_IfEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_fEEEEvRT1_(%"struct.WTF::KeyValuePair.700"* dereferenceable(16) %26) #9
  %27 = add nuw nsw i64 %25, 1
  %28 = icmp eq i64 %27, %23
  br i1 %28, label %29, label %24

29:                                               ; preds = %24, %16
  %30 = phi %"struct.WTF::KeyValuePair.700"* [ %19, %16 ], [ %22, %24 ]
  %31 = call %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.698"* %0, %"struct.WTF::KeyValuePair.700"* %30, i32 %1, %"struct.WTF::KeyValuePair.700"* %2)
  br label %32

32:                                               ; preds = %8, %29
  %33 = phi %"struct.WTF::KeyValuePair.700"* [ %31, %29 ], [ %9, %8 ]
  ret %"struct.WTF::KeyValuePair.700"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.698"*, i32, %"struct.WTF::KeyValuePair.700"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !9

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.700"* %32, null
  br i1 %33, label %91, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.700"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %91

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.700"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %50, %47 ], [ 0, %39 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %45, i64 %48
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_4NodeEEEEENS4_IfEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_fEEEEvRT1_(%"struct.WTF::KeyValuePair.700"* dereferenceable(16) %49) #9
  %50 = add nuw nsw i64 %48, 1
  %51 = icmp eq i64 %50, %43
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  br i1 %46, label %53, label %63

53:                                               ; preds = %81, %39, %52
  %54 = phi %"struct.WTF::KeyValuePair.700"* [ null, %52 ], [ null, %39 ], [ %70, %81 ]
  %55 = bitcast %"class.WTF::HashTable.698"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %55, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #9
  br label %61

61:                                               ; preds = %53, %58
  %62 = icmp eq i32 %1, 0
  br i1 %62, label %84, label %86

63:                                               ; preds = %52, %81
  %64 = phi i64 [ %82, %81 ], [ 0, %52 ]
  %65 = phi %"struct.WTF::KeyValuePair.700"* [ %70, %81 ], [ null, %52 ]
  %66 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %31, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %66, i64 %64
  %68 = icmp eq %"struct.WTF::KeyValuePair.700"* %67, %2
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %45, i64 %64
  %70 = select i1 %68, %"struct.WTF::KeyValuePair.700"* %69, %"struct.WTF::KeyValuePair.700"* %65
  %71 = bitcast %"struct.WTF::KeyValuePair.700"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  switch i64 %72, label %74 [
    i64 -1, label %73
    i64 0, label %73
  ]

73:                                               ; preds = %63, %63
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_4NodeEEEEENS4_IfEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_fEEEEvRT1_(%"struct.WTF::KeyValuePair.700"* dereferenceable(16) %69) #9
  br label %81

74:                                               ; preds = %63
  %75 = bitcast %"struct.WTF::KeyValuePair.700"* %69 to i64*
  store i64 %72, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %45, i64 %64, i32 1
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %66, i64 %64, i32 1
  %78 = bitcast float* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = bitcast float* %76 to i32*
  store i32 %79, i32* %80, align 8
  br label %81

81:                                               ; preds = %73, %74
  %82 = add nuw nsw i64 %64, 1
  %83 = icmp eq i64 %82, %43
  br i1 %83, label %53, label %63

84:                                               ; preds = %86, %61
  %85 = call %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.698"* %0, %"struct.WTF::KeyValuePair.700"* %42, i32 %1, %"struct.WTF::KeyValuePair.700"* %54)
  br label %91

86:                                               ; preds = %61, %86
  %87 = phi i64 [ %89, %86 ], [ 0, %61 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %42, i64 %87
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_4NodeEEEEENS4_IfEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_fEEEEvRT1_(%"struct.WTF::KeyValuePair.700"* dereferenceable(16) %88) #9
  %89 = add nuw nsw i64 %87, 1
  %90 = icmp eq i64 %89, %35
  br i1 %90, label %84, label %86

91:                                               ; preds = %34, %30, %84
  %92 = phi %"struct.WTF::KeyValuePair.700"* [ %85, %84 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.700"* %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.700"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.698"*, %"struct.WTF::KeyValuePair.700"*, i32, %"struct.WTF::KeyValuePair.700"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.698", align 8
  %6 = bitcast %"class.WTF::HashTable.698"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.698"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.700"* %1, %"struct.WTF::KeyValuePair.700"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.700"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.700"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.698"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.700"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.698"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #9
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.698"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.698"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #9
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #9
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.700"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.700"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.700"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.700"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.700"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.698"* nonnull %5, %"class.blink::Member"* dereferenceable(8) %67) #9
  %69 = extractvalue { %"struct.WTF::KeyValuePair.700"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.700"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %59, i64 %62, i32 1
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 8
  %76 = bitcast float* %72 to i32*
  store i32 %75, i32* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.700"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.700"* %69, %"struct.WTF::KeyValuePair.700"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.700"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.700"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_4NodeEEEEENS4_IfEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_fEEEEvRT1_(%"struct.WTF::KeyValuePair.700"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.WTF::KeyValuePair.700"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  store i32 2139095040, i32* %4, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #9
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !9

12:                                               ; preds = %7
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #9
  br label %14

14:                                               ; preds = %12, %7
  %15 = phi i8* [ %13, %12 ], [ %10, %7 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %25, align 8
  %27 = load atomic i64, i64* %2 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %26, i64 0, i32 0, i32 0
  %31 = inttoptr i64 %27 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %26 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %30, i8* nonnull %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  %36 = load i64, i64* %22, align 8
  br label %37

37:                                               ; preds = %29, %21
  %38 = phi i64 [ %24, %21 ], [ %36, %29 ]
  %39 = add i64 %38, -1
  store i64 %39, i64* %22, align 8
  br label %40

40:                                               ; preds = %1, %14, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.13, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_fEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IfEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_fEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IfEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([399 x i8], [399 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IfEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.700"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.700"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_fEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IfEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.700"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_fEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IfEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.698"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.700"*, %"struct.WTF::KeyValuePair.700"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.698", %"class.WTF::HashTable.698"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.700"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.700"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.700"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.700"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.700"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.700"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.700"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.700", %"struct.WTF::KeyValuePair.700"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.700"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.700"*, i8 } undef, %"struct.WTF::KeyValuePair.700"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.700"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.700"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !9

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLSpanElement"*
  tail call void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLSpanElement"* %51
}

declare void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.704"*, %"class.blink::HTMLElement"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.704"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.707"*, %"class.blink::Member.707"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.707", %"class.blink::Member.707"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.707"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.704"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !76

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.707"*, %"class.blink::Member.707"** %8, align 8
  %10 = icmp eq %"class.blink::Member.707"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1509"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1509"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.704"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1509", %"class.blink::HeapVectorBacking.1509"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.707"*, %"class.blink::Member.707"** %8, align 8
  %26 = icmp eq %"class.blink::Member.707"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.707"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !9

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.704"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.704"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.704"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.704"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1509"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1509"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.707"*, %"class.blink::Member.707"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1509"* %17, null
  %23 = icmp ne %"class.blink::Member.707"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.707"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !76

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.704"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1509", %"class.blink::HeapVectorBacking.1509"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.704"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.704"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.704", %"class.WTF::Vector.704"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1509", %"class.blink::HeapVectorBacking.1509"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HTMLElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1509"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HTMLElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.1509"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.1509"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.707"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.707", %"class.blink::Member.707"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.707"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HTMLElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

declare void @_ZN5blink12EditingStyleC1EPNS_13ContainerNodeENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"*, %"class.blink::ContainerNode"*, i32) unnamed_addr #2

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1321"*, %"class.blink::InlineRunToApplyStyle"* dereferenceable(88)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %6, align 8
  %8 = icmp ugt %"class.blink::InlineRunToApplyStyle"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %7, i64 %10
  %12 = icmp ugt %"class.blink::InlineRunToApplyStyle"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1321"* %0, i32 %22) #9
  %23 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::InlineRunToApplyStyle"* %1 to i64
  %26 = ptrtoint %"class.blink::InlineRunToApplyStyle"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 88
  %29 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1321"* %0, i32 %37) #9
  %38 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::InlineRunToApplyStyle"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::InlineRunToApplyStyle"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44
  %46 = bitcast %"class.blink::InlineRunToApplyStyle"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::InlineRunToApplyStyle"* %45 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 1
  %50 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 1
  %51 = bitcast %"class.blink::Member"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 2
  %55 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 2
  %56 = bitcast %"class.blink::Member"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.blink::Member"* %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 3
  %60 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %59, %"class.blink::PositionTemplate"* dereferenceable(16) %60) #9
  %61 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 4
  %62 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 4
  %63 = bitcast %"class.blink::Member.1324"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.1324"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 5
  %67 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 5
  %68 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.blink::StyleChange"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::StyleChange"* %66 to i64*
  store i64 %70, i64* %71, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %72 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 5, i32 1
  %73 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 5, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 6, i1 false) #9
  %74 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 5, i32 7
  %75 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 5, i32 7
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = bitcast %"class.WTF::String"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.WTF::String"* %74 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %80 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 5, i32 8
  %81 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 5, i32 8
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::String"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::String"* %80 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %86 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %41, i64 %44, i32 5, i32 9
  %87 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %42, i64 0, i32 5, i32 9
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = bitcast %"class.WTF::String"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.WTF::String"* %86 to i64*
  store i64 %90, i64* %91, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::InlineRunToApplyStyle"* %45) #9
  %92 = load i32, i32* %3, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::InlineRunToApplyStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %71, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !9

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %71, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = bitcast %"class.blink::InlineRunToApplyStyle"* %0 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %18
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %24, i8* nonnull %29, i8* %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %34

34:                                               ; preds = %18, %28
  %35 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::Member"* %35 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* nonnull %40, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %0, i64 0, i32 2
  %47 = bitcast %"class.blink::Member"* %46 to i64*
  %48 = load atomic i64, i64* %47 monotonic, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = inttoptr i64 %48 to i8*
  %52 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %24, i8* nonnull %51, i8* %51, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %56

56:                                               ; preds = %45, %50
  %57 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %0, i64 0, i32 3
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %57, %"class.blink::Visitor"* %24) #9
  %58 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %0, i64 0, i32 4
  %59 = bitcast %"class.blink::Member.1324"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %24, i8* nonnull %63, i8* %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLSpanElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %68

68:                                               ; preds = %56, %62
  %69 = load i64, i64* %19, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %19, align 8
  br label %71

71:                                               ; preds = %1, %11, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLSpanElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1321"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !76

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %8, align 8
  %10 = icmp eq %"class.blink::InlineRunToApplyStyle"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_21InlineRunToApplyStyleEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 88
  %15 = tail call %"class.blink::HeapVectorBacking.1523"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1523"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1321"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1523", %"class.blink::HeapVectorBacking.1523"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %8, align 8
  %26 = icmp eq %"class.blink::InlineRunToApplyStyle"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::InlineRunToApplyStyle"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 88
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !9

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1321"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21InlineRunToApplyStyleELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1321"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %69

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1321"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %66, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::InlineRunToApplyStyle"* [ %64, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::InlineRunToApplyStyle"* [ %63, %14 ], [ null, %4 ]
  %17 = bitcast %"class.blink::InlineRunToApplyStyle"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::InlineRunToApplyStyle"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 1
  %22 = bitcast %"class.blink::Member"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::Member"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 2
  %26 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 2
  %27 = bitcast %"class.blink::Member"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::Member"* %25 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 3
  %31 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %30, %"class.blink::PositionTemplate"* dereferenceable(16) %31) #9
  %32 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 4
  %33 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 4
  %34 = bitcast %"class.blink::Member.1324"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::Member.1324"* %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 5
  %38 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 5
  %39 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.blink::StyleChange"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::StyleChange"* %37 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  %43 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 5, i32 1
  %44 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 5, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 6, i1 false) #9
  %45 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 5, i32 7
  %46 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 5, i32 7
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::String"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.WTF::String"* %45 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  %51 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 5, i32 8
  %52 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 5, i32 8
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %54 = bitcast %"class.WTF::String"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.WTF::String"* %51 to i64*
  store i64 %55, i64* %56, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %53, align 8
  %57 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 0, i32 5, i32 9
  %58 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 0, i32 5, i32 9
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %60 = bitcast %"class.WTF::String"* %58 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.WTF::String"* %57 to i64*
  store i64 %61, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::InlineRunToApplyStyle"* %16) #9
  tail call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* %38) #9
  %63 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %16, i64 1
  %64 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %15, i64 1
  %65 = icmp eq %"class.blink::InlineRunToApplyStyle"* %64, %10
  br i1 %65, label %66, label %14

66:                                               ; preds = %14, %4
  %67 = bitcast %"class.blink::InlineRunToApplyStyle"* %6 to i8*
  %68 = mul nuw nsw i64 %9, 88
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %67, i64 %68) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %67) #9
  br label %158

69:                                               ; preds = %2
  %70 = zext i32 %1 to i64
  %71 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_21InlineRunToApplyStyleEEEmm(i64 %70) #9
  %72 = udiv i64 %71, 88
  %73 = tail call %"class.blink::HeapVectorBacking.1523"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %72) #9
  %74 = ptrtoint %"class.blink::HeapVectorBacking.1523"* %73 to i64
  %75 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::InlineRunToApplyStyle"*, %"class.blink::InlineRunToApplyStyle"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %76, i64 %79
  %81 = icmp eq i32 %78, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %69
  %83 = bitcast %"class.blink::InlineRunToApplyStyle"* %76 to i8*
  %84 = bitcast %"class.WTF::Vector.1321"* %0 to i8**
  br label %145

85:                                               ; preds = %69
  %86 = bitcast %"class.blink::HeapVectorBacking.1523"* %73 to %"class.blink::InlineRunToApplyStyle"*
  br label %87

87:                                               ; preds = %85, %87
  %88 = phi %"class.blink::InlineRunToApplyStyle"* [ %137, %87 ], [ %76, %85 ]
  %89 = phi %"class.blink::InlineRunToApplyStyle"* [ %136, %87 ], [ %86, %85 ]
  %90 = bitcast %"class.blink::InlineRunToApplyStyle"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::InlineRunToApplyStyle"* %89 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 1
  %94 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 1
  %95 = bitcast %"class.blink::Member"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.blink::Member"* %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 2
  %99 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 2
  %100 = bitcast %"class.blink::Member"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.blink::Member"* %98 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 3
  %104 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 3
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %103, %"class.blink::PositionTemplate"* dereferenceable(16) %104) #9
  %105 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 4
  %106 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 4
  %107 = bitcast %"class.blink::Member.1324"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.blink::Member.1324"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 5
  %111 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 5
  %112 = getelementptr inbounds %"class.blink::StyleChange", %"class.blink::StyleChange"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.blink::StyleChange"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.blink::StyleChange"* %110 to i64*
  store i64 %114, i64* %115, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %112, align 8
  %116 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 5, i32 1
  %117 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 5, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 6, i1 false) #9
  %118 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 5, i32 7
  %119 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 5, i32 7
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = bitcast %"class.WTF::String"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.WTF::String"* %118 to i64*
  store i64 %122, i64* %123, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %120, align 8
  %124 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 5, i32 8
  %125 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 5, i32 8
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %125, i64 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::String"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.WTF::String"* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %130 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 0, i32 5, i32 9
  %131 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 0, i32 5, i32 9
  %132 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %131, i64 0, i32 0, i32 0
  %133 = bitcast %"class.WTF::String"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.WTF::String"* %130 to i64*
  store i64 %134, i64* %135, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %132, align 8
  tail call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* %111) #9
  %136 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %89, i64 1
  %137 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %88, i64 1
  %138 = icmp eq %"class.blink::InlineRunToApplyStyle"* %137, %80
  br i1 %138, label %139, label %87

139:                                              ; preds = %87
  %140 = bitcast %"class.WTF::Vector.1321"* %0 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = load i32, i32* %77, align 4
  %143 = zext i32 %142 to i64
  %144 = mul nuw nsw i64 %143, 88
  br label %145

145:                                              ; preds = %82, %139
  %146 = phi i8** [ %84, %82 ], [ %140, %139 ]
  %147 = phi i64 [ 0, %82 ], [ %144, %139 ]
  %148 = phi i8* [ %83, %82 ], [ %141, %139 ]
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %148, i64 %147) #9
  %149 = load i8*, i8** %146, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %149) #9
  %150 = bitcast %"class.WTF::Vector.1321"* %0 to i64*
  store atomic i64 %74, i64* %150 monotonic, align 8
  %151 = trunc i64 %72 to i32
  %152 = getelementptr inbounds %"class.WTF::Vector.1321", %"class.WTF::Vector.1321"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %151, i32* %152, align 8
  %153 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"class.blink::HeapVectorBacking.1523", %"class.blink::HeapVectorBacking.1523"* %73, i64 0, i32 0
  %157 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %156) #9
  br label %158

158:                                              ; preds = %155, %145, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_21InlineRunToApplyStyleEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1525201
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1525201) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 88
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1523"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 88
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1523"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1523"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([152 x i8], [152 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_21InlineRunToApplyStyleENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %99, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::InlineRunToApplyStyle"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !9

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 88
  %51 = icmp ugt i64 %49, 87
  br i1 %51, label %52, label %99

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %52, %96
  %55 = phi i64 [ %97, %96 ], [ 0, %52 ]
  %56 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %30, i64 %55
  %57 = bitcast %"class.blink::InlineRunToApplyStyle"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %65

65:                                               ; preds = %60, %54
  %66 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %30, i64 %55, i32 1
  %67 = bitcast %"class.blink::Member"* %66 to i64*
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = inttoptr i64 %68 to i8*
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %0, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %75

75:                                               ; preds = %70, %65
  %76 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %30, i64 %55, i32 2
  %77 = bitcast %"class.blink::Member"* %76 to i64*
  %78 = load atomic i64, i64* %77 monotonic, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %75
  %81 = inttoptr i64 %78 to i8*
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %0, i8* nonnull %81, i8* nonnull %81, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %85

85:                                               ; preds = %80, %75
  %86 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %30, i64 %55, i32 3
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %86, %"class.blink::Visitor"* %0) #9
  %87 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %30, i64 %55, i32 4
  %88 = bitcast %"class.blink::Member.1324"* %87 to i64*
  %89 = load atomic i64, i64* %88 monotonic, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = inttoptr i64 %89 to i8*
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %94 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, i64 5
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %94, align 8
  tail call void %95(%"class.blink::Visitor"* %0, i8* nonnull %92, i8* nonnull %92, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLSpanElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %96

96:                                               ; preds = %85, %91
  %97 = add nuw nsw i64 %55, 1
  %98 = icmp ult i64 %97, %50
  br i1 %98, label %54, label %99

99:                                               ; preds = %96, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !9

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 88
  %22 = bitcast i8* %0 to %"class.blink::InlineRunToApplyStyle"*
  %23 = icmp ugt i64 %20, 87
  br i1 %23, label %24, label %31

24:                                               ; preds = %18, %24
  %25 = phi i64 [ %29, %24 ], [ 0, %18 ]
  %26 = phi i32 [ %28, %24 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::InlineRunToApplyStyle", %"class.blink::InlineRunToApplyStyle"* %22, i64 %25, i32 5
  tail call void @_ZN5blink11StyleChangeD2Ev(%"class.blink::StyleChange"* %27) #9
  %28 = add i32 %26, 1
  %29 = zext i32 %28 to i64
  %30 = icmp ugt i64 %21, %29
  br i1 %30, label %24, label %31

31:                                               ; preds = %24, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_21InlineRunToApplyStyleEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.40"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.40"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.36"*, %"class.blink::Member.36"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.36", %"class.blink::Member.36"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.36"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.40"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !76

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.36"*, %"class.blink::Member.36"** %8, align 8
  %10 = icmp eq %"class.blink::Member.36"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1536"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1536"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.40"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1536", %"class.blink::HeapVectorBacking.1536"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.36"*, %"class.blink::Member.36"** %8, align 8
  %26 = icmp eq %"class.blink::Member.36"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.36"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !9

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.40"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.40"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.40"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.40"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1536"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1536"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.36"*, %"class.blink::Member.36"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1536"* %17, null
  %23 = icmp ne %"class.blink::Member.36"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.36"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !76

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.40"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1536", %"class.blink::HeapVectorBacking.1536"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.40"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.40"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.40", %"class.WTF::Vector.40"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1536", %"class.blink::HeapVectorBacking.1536"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1536"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.1536"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.1536"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.36"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.36", %"class.blink::Member.36"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.36"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLFontElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLFontElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !9

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLFontElement"*
  tail call void @_ZN5blink15HTMLFontElementC1ERNS_8DocumentE(%"class.blink::HTMLFontElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLFontElement"* %51
}

declare void @_ZN5blink15HTMLFontElementC1ERNS_8DocumentE(%"class.blink::HTMLFontElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_11HTMLElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #9
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLElement"*
  %53 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %0, i64 0, i32 0
  %54 = bitcast i8* %51 to %"class.blink::Element"*
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %54, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %1, i32 1026) #9
  %55 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink11HTMLElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %51, i64 80
  %57 = bitcast i8* %56 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink11HTMLElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds i8, i8* %51, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  ret %"class.blink::HTMLElement"* %52
}

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1384"*, %"class.blink::Text"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1384"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1387"*, %"class.blink::Member.1387"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1387", %"class.blink::Member.1387"* %16, i64 %18
  %20 = bitcast %"class.blink::Text"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1387"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1384"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !76

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1387"*, %"class.blink::Member.1387"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1387"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4TextEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1548"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1548"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1548", %"class.blink::HeapVectorBacking.1548"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1387"*, %"class.blink::Member.1387"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1387"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1387"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !9

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1384"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4TextEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1384"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1384"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4TextEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1548"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1548"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1387"*, %"class.blink::Member.1387"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1548"* %17, null
  %23 = icmp ne %"class.blink::Member.1387"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1387"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !76

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1384"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1548", %"class.blink::HeapVectorBacking.1548"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.1384"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.1384"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1548", %"class.blink::HeapVectorBacking.1548"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4TextEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1548"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4TextEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.1548"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.1548"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1387"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1387", %"class.blink::Member.1387"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1387"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4TextEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4TextEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4TextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Text"*
  %4 = bitcast i8* %1 to void (%"class.blink::Text"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Text"*, %"class.blink::Visitor"*)**, void (%"class.blink::Text"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Text"*, %"class.blink::Visitor"*)*, void (%"class.blink::Text"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Text"*, %"class.blink::Visitor"*)*, void (%"class.blink::Text"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Text"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!5 = distinct !{!5, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!12 = distinct !{!12, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!15 = distinct !{!15, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!18 = distinct !{!18, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!21 = distinct !{!21, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!24 = distinct !{!24, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!30 = distinct !{!30, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!33 = distinct !{!33, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!36 = distinct !{!36, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!39 = distinct !{!39, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!42 = distinct !{!42, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!45 = distinct !{!45, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!48 = distinct !{!48, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!51 = distinct !{!51, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!54 = distinct !{!54, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!57 = distinct !{!57, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!60 = distinct !{!60, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!63 = distinct !{!63, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!66 = distinct !{!66, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!69 = distinct !{!69, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN5blink17ApplyStyleCommand13StartPositionEv: argument 0"}
!72 = distinct !{!72, !"_ZN5blink17ApplyStyleCommand13StartPositionEv"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN5blink17ApplyStyleCommand11EndPositionEv: argument 0"}
!75 = distinct !{!75, !"_ZN5blink17ApplyStyleCommand11EndPositionEv"}
!76 = !{!"branch_weights", i32 2000, i32 1}
