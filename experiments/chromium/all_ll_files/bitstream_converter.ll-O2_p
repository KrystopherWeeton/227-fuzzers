; ModuleID = '../../media/formats/mp4/bitstream_converter.cc'
source_filename = "../../media/formats/mp4/bitstream_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::mp4::BitstreamConverter::AnalysisResult" = type { %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.media::mp4::BitstreamConverter" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZTVN5media3mp418BitstreamConverterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.media::mp4::BitstreamConverter"*)* @_ZN5media3mp418BitstreamConverterD2Ev to i8*), i8* bitcast (void (%"class.media::mp4::BitstreamConverter"*)* @_ZN5media3mp418BitstreamConverterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5media3mp418BitstreamConverter14AnalysisResultC1Ev = hidden unnamed_addr alias void (%"struct.media::mp4::BitstreamConverter::AnalysisResult"*), void (%"struct.media::mp4::BitstreamConverter::AnalysisResult"*)* @_ZN5media3mp418BitstreamConverter14AnalysisResultC2Ev
@_ZN5media3mp418BitstreamConverter14AnalysisResultC1ERKS2_ = hidden unnamed_addr alias void (%"struct.media::mp4::BitstreamConverter::AnalysisResult"*, %"struct.media::mp4::BitstreamConverter::AnalysisResult"*), void (%"struct.media::mp4::BitstreamConverter::AnalysisResult"*, %"struct.media::mp4::BitstreamConverter::AnalysisResult"*)* @_ZN5media3mp418BitstreamConverter14AnalysisResultC2ERKS2_
@_ZN5media3mp418BitstreamConverter14AnalysisResultD1Ev = hidden unnamed_addr alias void (%"struct.media::mp4::BitstreamConverter::AnalysisResult"*), void (%"struct.media::mp4::BitstreamConverter::AnalysisResult"*)* @_ZN5media3mp418BitstreamConverter14AnalysisResultD2Ev
@_ZN5media3mp418BitstreamConverterD1Ev = hidden unnamed_addr alias void (%"class.media::mp4::BitstreamConverter"*), void (%"class.media::mp4::BitstreamConverter"*)* @_ZN5media3mp418BitstreamConverterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media3mp418BitstreamConverter14AnalysisResultC2Ev(%"struct.media::mp4::BitstreamConverter::AnalysisResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.media::mp4::BitstreamConverter::AnalysisResult", %"struct.media::mp4::BitstreamConverter::AnalysisResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"struct.media::mp4::BitstreamConverter::AnalysisResult", %"struct.media::mp4::BitstreamConverter::AnalysisResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media3mp418BitstreamConverter14AnalysisResultC2ERKS2_(%"struct.media::mp4::BitstreamConverter::AnalysisResult"* nocapture, %"struct.media::mp4::BitstreamConverter::AnalysisResult"* nocapture readonly dereferenceable(4)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.media::mp4::BitstreamConverter::AnalysisResult"* %1 to i16*
  %4 = bitcast %"struct.media::mp4::BitstreamConverter::AnalysisResult"* %0 to i16*
  %5 = load i16, i16* %3, align 1
  store i16 %5, i16* %4, align 1
  %6 = getelementptr inbounds %"struct.media::mp4::BitstreamConverter::AnalysisResult", %"struct.media::mp4::BitstreamConverter::AnalysisResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.media::mp4::BitstreamConverter::AnalysisResult", %"struct.media::mp4::BitstreamConverter::AnalysisResult"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast i8* %7 to i16*
  %9 = bitcast i8* %6 to i16*
  %10 = load i16, i16* %8, align 1
  store i16 %10, i16* %9, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media3mp418BitstreamConverter14AnalysisResultD2Ev(%"struct.media::mp4::BitstreamConverter::AnalysisResult"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media3mp418BitstreamConverterD2Ev(%"class.media::mp4::BitstreamConverter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5media3mp418BitstreamConverterD0Ev(%"class.media::mp4::BitstreamConverter"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #5
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
