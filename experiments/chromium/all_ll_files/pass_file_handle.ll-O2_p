; ModuleID = '../../ppapi/cpp/private/pass_file_handle.cc'
source_filename = "../../ppapi/cpp/private/pass_file_handle.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.pp::PassFileHandle" = type { i32 }

@_ZN2pp14PassFileHandleC1Ev = hidden unnamed_addr alias void (%"class.pp::PassFileHandle"*), void (%"class.pp::PassFileHandle"*)* @_ZN2pp14PassFileHandleC2Ev
@_ZN2pp14PassFileHandleC1Ei = hidden unnamed_addr alias void (%"class.pp::PassFileHandle"*, i32), void (%"class.pp::PassFileHandle"*, i32)* @_ZN2pp14PassFileHandleC2Ei
@_ZN2pp14PassFileHandleC1ERS0_ = hidden unnamed_addr alias void (%"class.pp::PassFileHandle"*, %"class.pp::PassFileHandle"*), void (%"class.pp::PassFileHandle"*, %"class.pp::PassFileHandle"*)* @_ZN2pp14PassFileHandleC2ERS0_
@_ZN2pp14PassFileHandleD1Ev = hidden unnamed_addr alias void (%"class.pp::PassFileHandle"*), void (%"class.pp::PassFileHandle"*)* @_ZN2pp14PassFileHandleD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2pp14PassFileHandleC2Ev(%"class.pp::PassFileHandle"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pp::PassFileHandle", %"class.pp::PassFileHandle"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2pp14PassFileHandleC2Ei(%"class.pp::PassFileHandle"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pp::PassFileHandle", %"class.pp::PassFileHandle"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2pp14PassFileHandleC2ERS0_(%"class.pp::PassFileHandle"* nocapture, %"class.pp::PassFileHandle"* nocapture dereferenceable(4)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.pp::PassFileHandle", %"class.pp::PassFileHandle"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.pp::PassFileHandle", %"class.pp::PassFileHandle"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 -1, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2pp14PassFileHandle7ReleaseEv(%"class.pp::PassFileHandle"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.pp::PassFileHandle", %"class.pp::PassFileHandle"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  store i32 -1, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp14PassFileHandleD2Ev(%"class.pp::PassFileHandle"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.pp::PassFileHandle", %"class.pp::PassFileHandle"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @close(i32 %3) #4
  store i32 -1, i32* %2, align 4
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp14PassFileHandle5CloseEv(%"class.pp::PassFileHandle"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.pp::PassFileHandle", %"class.pp::PassFileHandle"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @close(i32 %3) #4
  store i32 -1, i32* %2, align 4
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare i32 @close(i32) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
