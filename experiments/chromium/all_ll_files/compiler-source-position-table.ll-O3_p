; ModuleID = '../../v8/src/compiler/compiler-source-position-table.cc'
source_filename = "../../v8/src/compiler/compiler-source-position-table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::SourcePositionTable" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::SourcePositionTable::Decorator"*, %"class.v8::internal::SourcePosition", %"class.v8::internal::compiler::NodeAuxData" }
%"class.v8::internal::compiler::SourcePositionTable::Decorator" = type { %"class.v8::internal::compiler::GraphDecorator", %"class.v8::internal::compiler::SourcePositionTable"* }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.11" }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::SourcePosition"* }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal8compiler19SourcePositionTable9DecoratorD0Ev = comdat any

$_ZN2v88internal8compiler19SourcePositionTable9Decorator8DecorateEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler14GraphDecoratorD2Ev = comdat any

$_ZNSt3__16vectorIN2v88internal14SourcePositionENS2_13ZoneAllocatorIS3_EEE8__appendEmRKS3_ = comdat any

$_ZTVN2v88internal8compiler19SourcePositionTable9DecoratorE = comdat any

@.str = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"\22 : \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN2v88internal8compiler19SourcePositionTable9DecoratorE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::GraphDecorator"*)* @_ZN2v88internal8compiler14GraphDecoratorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::SourcePositionTable::Decorator"*)* @_ZN2v88internal8compiler19SourcePositionTable9DecoratorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::SourcePositionTable::Decorator"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler19SourcePositionTable9Decorator8DecorateEPNS1_4NodeE to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

@_ZN2v88internal8compiler19SourcePositionTableC1EPNS1_5GraphE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Graph"*), void (%"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Graph"*)* @_ZN2v88internal8compiler19SourcePositionTableC2EPNS1_5GraphE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19SourcePositionTableC2EPNS1_5GraphE(%"class.v8::internal::compiler::SourcePositionTable"* nocapture, %"class.v8::internal::compiler::Graph"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Graph"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3
  %6 = bitcast %"class.v8::internal::compiler::Graph"* %1 to i64*
  %7 = bitcast %"class.v8::internal::compiler::SourcePositionTable::Decorator"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  %8 = load i64, i64* %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %9 to i64*
  %11 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #9
  store i64 %8, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19SourcePositionTable12AddDecoratorEv(%"class.v8::internal::compiler::SourcePositionTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = ptrtoint %"class.v8::internal::compiler::SourcePositionTable"* %0 to i64
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 16
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %1
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 16) #9
  br label %17

15:                                               ; preds = %1
  %16 = add i64 %8, 16
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::SourcePositionTable::Decorator"*
  %20 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable::Decorator", %"class.v8::internal::compiler::SourcePositionTable::Decorator"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler19SourcePositionTable9DecoratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable::Decorator", %"class.v8::internal::compiler::SourcePositionTable::Decorator"* %19, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::compiler::SourcePositionTable"** %21 to i64*
  store i64 %6, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::SourcePositionTable::Decorator"* %19, %"class.v8::internal::compiler::SourcePositionTable::Decorator"** %23, align 8
  %24 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable::Decorator", %"class.v8::internal::compiler::SourcePositionTable::Decorator"* %19, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler5Graph12AddDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"* %24, %"class.v8::internal::compiler::GraphDecorator"* %25) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal8compiler5Graph12AddDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::GraphDecorator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19SourcePositionTable15RemoveDecoratorEv(%"class.v8::internal::compiler::SourcePositionTable"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::SourcePositionTable::Decorator"** %4 to %"class.v8::internal::compiler::GraphDecorator"**
  %6 = load %"class.v8::internal::compiler::GraphDecorator"*, %"class.v8::internal::compiler::GraphDecorator"** %5, align 8
  tail call void @_ZN2v88internal8compiler5Graph15RemoveDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"* %3, %"class.v8::internal::compiler::GraphDecorator"* %6) #9
  store %"class.v8::internal::compiler::SourcePositionTable::Decorator"* null, %"class.v8::internal::compiler::SourcePositionTable::Decorator"** %4, align 8
  ret void
}

declare void @_ZN2v88internal8compiler5Graph15RemoveDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::GraphDecorator"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::SourcePosition"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %14, %7
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to %"class.v8::internal::SourcePosition"*
  %18 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %17, i64 %7, i32 0
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %2, %16
  %21 = phi i64 [ %19, %16 ], [ 0, %2 ]
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19SourcePositionTable17SetSourcePositionEPNS1_4NodeENS0_14SourcePositionE(%"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Node"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SourcePosition", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::SourcePosition"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %16, %9
  %18 = inttoptr i64 %14 to %"class.v8::internal::SourcePosition"*
  br i1 %17, label %27, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %5, i64 0, i32 0, i32 0
  %21 = bitcast %"class.v8::internal::SourcePosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %4, i64 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = add nuw nsw i64 %9, 1
  %24 = sub nsw i64 %23, %16
  call void @_ZNSt3__16vectorIN2v88internal14SourcePositionENS2_13ZoneAllocatorIS3_EEE8__appendEmRKS3_(%"class.std::__1::vector.12"* %20, i64 %24, %"class.v8::internal::SourcePosition"* nonnull dereferenceable(8) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %25 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"** %25, align 8
  br label %27

27:                                               ; preds = %19, %3
  %28 = phi %"class.v8::internal::SourcePosition"* [ %18, %3 ], [ %26, %19 ]
  %29 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %28, i64 %9, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %2
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  store i64 %2, i64* %29, align 8
  br label %33

33:                                               ; preds = %27, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler19SourcePositionTable9PrintJsonERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::SourcePositionTable"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SourcePosition", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #9
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::SourcePosition"** %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !3
  %9 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %5 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !3
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = inttoptr i64 %10 to %"class.v8::internal::SourcePosition"*
  %16 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::SourcePosition"* %3 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %3, i64 0, i32 0
  br label %21

19:                                               ; preds = %38, %2
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  ret void

21:                                               ; preds = %42, %14
  %22 = phi %"class.v8::internal::SourcePosition"* [ %15, %14 ], [ %43, %42 ]
  %23 = phi i8 [ 0, %14 ], [ %39, %42 ]
  %24 = phi i64 [ 0, %14 ], [ %40, %42 ]
  %25 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %22, i64 %24, i32 0
  %26 = load i64, i64* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  store i64 %26, i64* %18, align 8
  %27 = and i64 %26, 140737488355327
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %21
  %30 = and i8 %23, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #9
  br label %34

34:                                               ; preds = %29, %32
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #9
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %24) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #9
  call void @_ZNK2v88internal14SourcePosition9PrintJsonERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::SourcePosition"* nonnull %3, %"class.std::__1::basic_ostream"* dereferenceable(160) %1) #9
  br label %38

38:                                               ; preds = %21, %34
  %39 = phi i8 [ 1, %34 ], [ %23, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %40 = add i64 %24, 1
  %41 = icmp eq i64 %40, %12
  br i1 %41, label %19, label %42

42:                                               ; preds = %38
  %43 = load %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"** %16, align 8
  br label %21
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare void @_ZNK2v88internal14SourcePosition9PrintJsonERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::SourcePosition"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #10
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #9
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler19SourcePositionTable9DecoratorD0Ev(%"class.v8::internal::compiler::SourcePositionTable::Decorator"*) unnamed_addr #7 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler19SourcePositionTable9Decorator8DecorateEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable::Decorator"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::SourcePosition", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable::Decorator", %"class.v8::internal::compiler::SourcePositionTable::Decorator"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %5, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %5, i64 0, i32 3
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 16777215
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.v8::internal::SourcePosition"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %8 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ugt i64 %19, %12
  %21 = inttoptr i64 %17 to %"class.v8::internal::SourcePosition"*
  br i1 %20, label %30, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %8, i64 0, i32 0, i32 0
  %24 = bitcast %"class.v8::internal::SourcePosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %3, i64 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = add nuw nsw i64 %12, 1
  %27 = sub nsw i64 %26, %19
  call void @_ZNSt3__16vectorIN2v88internal14SourcePositionENS2_13ZoneAllocatorIS3_EEE8__appendEmRKS3_(%"class.std::__1::vector.12"* %23, i64 %27, %"class.v8::internal::SourcePosition"* nonnull dereferenceable(8) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %28 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"** %28, align 8
  br label %30

30:                                               ; preds = %22, %2
  %31 = phi %"class.v8::internal::SourcePosition"* [ %21, %2 ], [ %29, %22 ]
  %32 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %31, i64 %12, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, %7
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  store i64 %7, i64* %32, align 8
  br label %36

36:                                               ; preds = %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14GraphDecoratorD2Ev(%"class.v8::internal::compiler::GraphDecorator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal14SourcePositionENS2_13ZoneAllocatorIS3_EEE8__appendEmRKS3_(%"class.std::__1::vector.12"*, i64, %"class.v8::internal::SourcePosition"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.v8::internal::SourcePosition"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::SourcePosition"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %132, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.v8::internal::SourcePosition"*
  %15 = inttoptr i64 %9 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %14, i64 %1
  %17 = icmp eq i64 %1, 0
  br i1 %17, label %130, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %2, i64 0, i32 0
  %20 = shl nsw i64 %1, 3
  %21 = add i64 %20, -8
  %22 = lshr exact i64 %21, 3
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp ult i64 %23, 4
  br i1 %24, label %25, label %47

25:                                               ; preds = %106, %47, %18
  %26 = phi %"class.v8::internal::SourcePosition"* [ %14, %47 ], [ %14, %18 ], [ %60, %106 ]
  %27 = ptrtoint %"class.v8::internal::SourcePosition"* %26 to i64
  %28 = add i64 %1, -1
  %29 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %14, i64 %28, i32 0
  %30 = ptrtoint i64* %29 to i64
  %31 = sub i64 %30, %27
  %32 = lshr i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 7
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %25, %36
  %37 = phi %"class.v8::internal::SourcePosition"* [ %41, %36 ], [ %26, %25 ]
  %38 = phi i64 [ %42, %36 ], [ %34, %25 ]
  %39 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %37, i64 0, i32 0
  %40 = load i64, i64* %19, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %37, i64 1
  %42 = add i64 %38, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %36, !llvm.loop !7

44:                                               ; preds = %36, %25
  %45 = phi %"class.v8::internal::SourcePosition"* [ %26, %25 ], [ %41, %36 ]
  %46 = icmp ult i64 %31, 56
  br i1 %46, label %108, label %110

47:                                               ; preds = %18
  %48 = shl nsw i64 %1, 3
  %49 = add i64 %48, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %14, i64 %51
  %53 = bitcast %"class.v8::internal::SourcePosition"* %2 to i8*
  %54 = getelementptr i8, i8* %53, i64 1
  %55 = icmp ugt i8* %54, %15
  %56 = icmp ugt %"class.v8::internal::SourcePosition"* %52, %2
  %57 = and i1 %55, %56
  br i1 %57, label %25, label %58

58:                                               ; preds = %47
  %59 = and i64 %23, 4611686018427387900
  %60 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %14, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %19, align 8, !alias.scope !9
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %19, align 8, !alias.scope !9
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %14, i64 %79, i32 0
  %82 = bitcast i64* %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !12, !noalias !9
  %83 = getelementptr i64, i64* %81, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !12, !noalias !9
  %85 = or i64 %79, 4
  %86 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %14, i64 %85, i32 0
  %87 = bitcast i64* %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !12, !noalias !9
  %88 = getelementptr i64, i64* %86, i64 2
  %89 = bitcast i64* %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !12, !noalias !9
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !14

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %14, i64 %94, i32 0
  %98 = load i64, i64* %19, align 8, !alias.scope !9
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast i64* %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !12, !noalias !9
  %104 = getelementptr i64, i64* %97, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !12, !noalias !9
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %23, %59
  br i1 %107, label %108, label %25

108:                                              ; preds = %44, %110, %106
  %109 = ptrtoint %"class.v8::internal::SourcePosition"* %16 to i64
  br label %130

110:                                              ; preds = %44, %110
  %111 = phi %"class.v8::internal::SourcePosition"* [ %128, %110 ], [ %45, %44 ]
  %112 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 0, i32 0
  %113 = load i64, i64* %19, align 8
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 1, i32 0
  %115 = load i64, i64* %19, align 8
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 2, i32 0
  %117 = load i64, i64* %19, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 3, i32 0
  %119 = load i64, i64* %19, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 4, i32 0
  %121 = load i64, i64* %19, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 5, i32 0
  %123 = load i64, i64* %19, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 6, i32 0
  %125 = load i64, i64* %19, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 7, i32 0
  %127 = load i64, i64* %19, align 8
  store i64 %127, i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %111, i64 8
  %129 = icmp eq %"class.v8::internal::SourcePosition"* %128, %16
  br i1 %129, label %108, label %110, !llvm.loop !16

130:                                              ; preds = %13, %108
  %131 = phi i64 [ %109, %108 ], [ %9, %13 ]
  store i64 %131, i64* %8, align 8
  ret void

132:                                              ; preds = %3
  %133 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %9, %134
  %136 = ashr exact i64 %135, 3
  %137 = add i64 %136, %1
  %138 = icmp ugt i64 %137, 268435455
  br i1 %138, label %139, label %141

139:                                              ; preds = %132
  %140 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %140) #11
  unreachable

141:                                              ; preds = %132
  %142 = sub i64 %6, %134
  %143 = ashr exact i64 %142, 3
  %144 = icmp ult i64 %143, 134217727
  br i1 %144, label %145, label %150

145:                                              ; preds = %141
  %146 = ashr exact i64 %142, 2
  %147 = icmp ult i64 %146, %137
  %148 = select i1 %147, i64 %137, i64 %146
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %168, label %150

150:                                              ; preds = %141, %145
  %151 = phi i64 [ %148, %145 ], [ 268435455, %141 ]
  %152 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %153 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %152, align 8
  %154 = shl i64 %151, 3
  %155 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %153, i64 0, i32 2
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %153, i64 0, i32 3
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %158, %156
  %160 = icmp ugt i64 %154, %159
  br i1 %160, label %161, label %163, !prof !2

161:                                              ; preds = %150
  %162 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %153, i64 %154) #9
  br label %165

163:                                              ; preds = %150
  %164 = add i64 %156, %154
  store i64 %164, i64* %155, align 8
  br label %165

165:                                              ; preds = %163, %161
  %166 = phi i64 [ %162, %161 ], [ %156, %163 ]
  %167 = inttoptr i64 %166 to %"class.v8::internal::SourcePosition"*
  br label %168

168:                                              ; preds = %165, %145
  %169 = phi i64 [ %151, %165 ], [ 0, %145 ]
  %170 = phi %"class.v8::internal::SourcePosition"* [ %167, %165 ], [ null, %145 ]
  %171 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %170, i64 %136
  %172 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %170, i64 %169
  %173 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %1
  %174 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %2, i64 0, i32 0
  %175 = shl nsw i64 %1, 3
  %176 = add i64 %175, -8
  %177 = lshr exact i64 %176, 3
  %178 = add nuw nsw i64 %177, 1
  %179 = icmp ult i64 %178, 4
  br i1 %179, label %243, label %180

180:                                              ; preds = %168
  %181 = bitcast %"class.v8::internal::SourcePosition"* %171 to i8*
  %182 = shl nsw i64 %1, 3
  %183 = add i64 %182, -8
  %184 = lshr exact i64 %183, 3
  %185 = add nsw i64 %136, %184
  %186 = add nsw i64 %185, 1
  %187 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %170, i64 %186
  %188 = bitcast %"class.v8::internal::SourcePosition"* %2 to i8*
  %189 = getelementptr i8, i8* %188, i64 1
  %190 = icmp ugt i8* %189, %181
  %191 = icmp ugt %"class.v8::internal::SourcePosition"* %187, %2
  %192 = and i1 %190, %191
  br i1 %192, label %243, label %193

193:                                              ; preds = %180
  %194 = and i64 %178, 4611686018427387900
  %195 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %194
  %196 = add nsw i64 %194, -4
  %197 = lshr exact i64 %196, 2
  %198 = add nuw nsw i64 %197, 1
  %199 = and i64 %198, 1
  %200 = icmp eq i64 %196, 0
  br i1 %200, label %228, label %201

201:                                              ; preds = %193
  %202 = sub nuw nsw i64 %198, %199
  %203 = load i64, i64* %174, align 8, !alias.scope !17
  %204 = insertelement <2 x i64> undef, i64 %203, i32 0
  %205 = shufflevector <2 x i64> %204, <2 x i64> undef, <2 x i32> zeroinitializer
  %206 = insertelement <2 x i64> undef, i64 %203, i32 0
  %207 = shufflevector <2 x i64> %206, <2 x i64> undef, <2 x i32> zeroinitializer
  %208 = load i64, i64* %174, align 8, !alias.scope !17
  %209 = insertelement <2 x i64> undef, i64 %208, i32 0
  %210 = shufflevector <2 x i64> %209, <2 x i64> undef, <2 x i32> zeroinitializer
  %211 = insertelement <2 x i64> undef, i64 %208, i32 0
  %212 = shufflevector <2 x i64> %211, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %213

213:                                              ; preds = %213, %201
  %214 = phi i64 [ 0, %201 ], [ %225, %213 ]
  %215 = phi i64 [ %202, %201 ], [ %226, %213 ]
  %216 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %214
  %217 = bitcast %"class.v8::internal::SourcePosition"* %216 to <2 x i64>*
  store <2 x i64> %205, <2 x i64>* %217, align 8, !alias.scope !20, !noalias !17
  %218 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %216, i64 2
  %219 = bitcast %"class.v8::internal::SourcePosition"* %218 to <2 x i64>*
  store <2 x i64> %207, <2 x i64>* %219, align 8, !alias.scope !20, !noalias !17
  %220 = or i64 %214, 4
  %221 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %220
  %222 = bitcast %"class.v8::internal::SourcePosition"* %221 to <2 x i64>*
  store <2 x i64> %210, <2 x i64>* %222, align 8, !alias.scope !20, !noalias !17
  %223 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %221, i64 2
  %224 = bitcast %"class.v8::internal::SourcePosition"* %223 to <2 x i64>*
  store <2 x i64> %212, <2 x i64>* %224, align 8, !alias.scope !20, !noalias !17
  %225 = add i64 %214, 8
  %226 = add i64 %215, -2
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %213, !llvm.loop !22

228:                                              ; preds = %213, %193
  %229 = phi i64 [ 0, %193 ], [ %225, %213 ]
  %230 = icmp eq i64 %199, 0
  br i1 %230, label %241, label %231

231:                                              ; preds = %228
  %232 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %229
  %233 = load i64, i64* %174, align 8, !alias.scope !17
  %234 = insertelement <2 x i64> undef, i64 %233, i32 0
  %235 = shufflevector <2 x i64> %234, <2 x i64> undef, <2 x i32> zeroinitializer
  %236 = insertelement <2 x i64> undef, i64 %233, i32 0
  %237 = shufflevector <2 x i64> %236, <2 x i64> undef, <2 x i32> zeroinitializer
  %238 = bitcast %"class.v8::internal::SourcePosition"* %232 to <2 x i64>*
  store <2 x i64> %235, <2 x i64>* %238, align 8, !alias.scope !20, !noalias !17
  %239 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %232, i64 2
  %240 = bitcast %"class.v8::internal::SourcePosition"* %239 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %240, align 8, !alias.scope !20, !noalias !17
  br label %241

241:                                              ; preds = %228, %231
  %242 = icmp eq i64 %178, %194
  br i1 %242, label %286, label %243

243:                                              ; preds = %241, %180, %168
  %244 = phi %"class.v8::internal::SourcePosition"* [ %171, %180 ], [ %171, %168 ], [ %195, %241 ]
  %245 = ptrtoint %"class.v8::internal::SourcePosition"* %244 to i64
  %246 = add i64 %136, %1
  %247 = add i64 %246, -1
  %248 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %170, i64 %247, i32 0
  %249 = ptrtoint i64* %248 to i64
  %250 = sub i64 %249, %245
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %263, label %255

255:                                              ; preds = %243, %255
  %256 = phi %"class.v8::internal::SourcePosition"* [ %260, %255 ], [ %244, %243 ]
  %257 = phi i64 [ %261, %255 ], [ %253, %243 ]
  %258 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %256, i64 0, i32 0
  %259 = load i64, i64* %174, align 8
  store i64 %259, i64* %258, align 8
  %260 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %256, i64 1
  %261 = add i64 %257, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %255, !llvm.loop !23

263:                                              ; preds = %255, %243
  %264 = phi %"class.v8::internal::SourcePosition"* [ %244, %243 ], [ %260, %255 ]
  %265 = icmp ult i64 %250, 56
  br i1 %265, label %286, label %266

266:                                              ; preds = %263, %266
  %267 = phi %"class.v8::internal::SourcePosition"* [ %284, %266 ], [ %264, %263 ]
  %268 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 0, i32 0
  %269 = load i64, i64* %174, align 8
  store i64 %269, i64* %268, align 8
  %270 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 1, i32 0
  %271 = load i64, i64* %174, align 8
  store i64 %271, i64* %270, align 8
  %272 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 2, i32 0
  %273 = load i64, i64* %174, align 8
  store i64 %273, i64* %272, align 8
  %274 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 3, i32 0
  %275 = load i64, i64* %174, align 8
  store i64 %275, i64* %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 4, i32 0
  %277 = load i64, i64* %174, align 8
  store i64 %277, i64* %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 5, i32 0
  %279 = load i64, i64* %174, align 8
  store i64 %279, i64* %278, align 8
  %280 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 6, i32 0
  %281 = load i64, i64* %174, align 8
  store i64 %281, i64* %280, align 8
  %282 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 7, i32 0
  %283 = load i64, i64* %174, align 8
  store i64 %283, i64* %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %267, i64 8
  %285 = icmp eq %"class.v8::internal::SourcePosition"* %173, %284
  br i1 %285, label %286, label %266, !llvm.loop !24

286:                                              ; preds = %263, %266, %241
  %287 = ptrtoint %"class.v8::internal::SourcePosition"* %172 to i64
  %288 = ptrtoint %"class.v8::internal::SourcePosition"* %173 to i64
  %289 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %290 = load %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"** %289, align 8
  %291 = ptrtoint %"class.v8::internal::SourcePosition"* %290 to i64
  %292 = load %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"** %7, align 8
  %293 = icmp eq %"class.v8::internal::SourcePosition"* %292, %290
  br i1 %293, label %446, label %294

294:                                              ; preds = %286
  %295 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %292, i64 -1, i32 0
  %296 = ptrtoint i64* %295 to i64
  %297 = sub i64 %296, %291
  %298 = lshr i64 %297, 3
  %299 = add nuw nsw i64 %298, 1
  %300 = icmp ult i64 %299, 4
  br i1 %300, label %390, label %301

301:                                              ; preds = %294
  %302 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %292, i64 -1, i32 0
  %303 = ptrtoint i64* %302 to i64
  %304 = sub i64 %303, %291
  %305 = lshr i64 %304, 3
  %306 = xor i64 %305, -1
  %307 = add nsw i64 %136, %306
  %308 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %170, i64 %307
  %309 = xor i64 %305, -1
  %310 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %292, i64 %309
  %311 = icmp ult %"class.v8::internal::SourcePosition"* %308, %292
  %312 = icmp ult %"class.v8::internal::SourcePosition"* %310, %171
  %313 = and i1 %311, %312
  br i1 %313, label %390, label %314

314:                                              ; preds = %301
  %315 = and i64 %299, 4611686018427387900
  %316 = sub nsw i64 0, %315
  %317 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %316
  %318 = sub nsw i64 0, %315
  %319 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %292, i64 %318
  %320 = add nsw i64 %315, -4
  %321 = lshr exact i64 %320, 2
  %322 = add nuw nsw i64 %321, 1
  %323 = and i64 %322, 1
  %324 = icmp eq i64 %320, 0
  br i1 %324, label %369, label %325

325:                                              ; preds = %314
  %326 = sub nuw nsw i64 %322, %323
  %327 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %292, i64 -1
  %328 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %292, i64 -1
  br label %329

329:                                              ; preds = %329, %325
  %330 = phi i64 [ 0, %325 ], [ %364, %329 ]
  %331 = phi i64 [ %326, %325 ], [ %365, %329 ]
  %332 = sub i64 0, %330
  %333 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %332
  %334 = sub i64 0, %330
  %335 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %327, i64 %334
  %336 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %335, i64 0, i32 0
  %337 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %333, i64 -1, i32 0
  %338 = getelementptr inbounds i64, i64* %336, i64 -1
  %339 = bitcast i64* %338 to <2 x i64>*
  %340 = load <2 x i64>, <2 x i64>* %339, align 8, !alias.scope !25
  %341 = getelementptr inbounds i64, i64* %336, i64 -3
  %342 = bitcast i64* %341 to <2 x i64>*
  %343 = load <2 x i64>, <2 x i64>* %342, align 8, !alias.scope !25
  %344 = getelementptr inbounds i64, i64* %337, i64 -1
  %345 = bitcast i64* %344 to <2 x i64>*
  store <2 x i64> %340, <2 x i64>* %345, align 8, !alias.scope !28, !noalias !25
  %346 = getelementptr inbounds i64, i64* %337, i64 -3
  %347 = bitcast i64* %346 to <2 x i64>*
  store <2 x i64> %343, <2 x i64>* %347, align 8, !alias.scope !28, !noalias !25
  %348 = sub nuw nsw i64 -4, %330
  %349 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %348
  %350 = sub nuw nsw i64 -4, %330
  %351 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %328, i64 %350
  %352 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %351, i64 0, i32 0
  %353 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %349, i64 -1, i32 0
  %354 = getelementptr inbounds i64, i64* %352, i64 -1
  %355 = bitcast i64* %354 to <2 x i64>*
  %356 = load <2 x i64>, <2 x i64>* %355, align 8, !alias.scope !25
  %357 = getelementptr inbounds i64, i64* %352, i64 -3
  %358 = bitcast i64* %357 to <2 x i64>*
  %359 = load <2 x i64>, <2 x i64>* %358, align 8, !alias.scope !25
  %360 = getelementptr inbounds i64, i64* %353, i64 -1
  %361 = bitcast i64* %360 to <2 x i64>*
  store <2 x i64> %356, <2 x i64>* %361, align 8, !alias.scope !28, !noalias !25
  %362 = getelementptr inbounds i64, i64* %353, i64 -3
  %363 = bitcast i64* %362 to <2 x i64>*
  store <2 x i64> %359, <2 x i64>* %363, align 8, !alias.scope !28, !noalias !25
  %364 = add i64 %330, 8
  %365 = add i64 %331, -2
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %367, label %329, !llvm.loop !30

367:                                              ; preds = %329
  %368 = sub nuw nsw i64 -8, %330
  br label %369

369:                                              ; preds = %367, %314
  %370 = phi i64 [ 0, %314 ], [ %368, %367 ]
  %371 = icmp eq i64 %323, 0
  br i1 %371, label %388, label %372

372:                                              ; preds = %369
  %373 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %171, i64 %370
  %374 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %292, i64 -1
  %375 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %374, i64 %370
  %376 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %375, i64 0, i32 0
  %377 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %373, i64 -1, i32 0
  %378 = getelementptr inbounds i64, i64* %376, i64 -1
  %379 = bitcast i64* %378 to <2 x i64>*
  %380 = load <2 x i64>, <2 x i64>* %379, align 8, !alias.scope !25
  %381 = getelementptr inbounds i64, i64* %376, i64 -3
  %382 = bitcast i64* %381 to <2 x i64>*
  %383 = load <2 x i64>, <2 x i64>* %382, align 8, !alias.scope !25
  %384 = getelementptr inbounds i64, i64* %377, i64 -1
  %385 = bitcast i64* %384 to <2 x i64>*
  store <2 x i64> %380, <2 x i64>* %385, align 8, !alias.scope !28, !noalias !25
  %386 = getelementptr inbounds i64, i64* %377, i64 -3
  %387 = bitcast i64* %386 to <2 x i64>*
  store <2 x i64> %383, <2 x i64>* %387, align 8, !alias.scope !28, !noalias !25
  br label %388

388:                                              ; preds = %369, %372
  %389 = icmp eq i64 %299, %315
  br i1 %389, label %446, label %390

390:                                              ; preds = %388, %301, %294
  %391 = phi %"class.v8::internal::SourcePosition"* [ %171, %301 ], [ %171, %294 ], [ %317, %388 ]
  %392 = phi %"class.v8::internal::SourcePosition"* [ %292, %301 ], [ %292, %294 ], [ %319, %388 ]
  %393 = getelementptr %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %392, i64 -1, i32 0
  %394 = ptrtoint i64* %393 to i64
  %395 = sub i64 %394, %291
  %396 = lshr i64 %395, 3
  %397 = add nuw nsw i64 %396, 1
  %398 = and i64 %397, 7
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %411, label %400

400:                                              ; preds = %390, %400
  %401 = phi %"class.v8::internal::SourcePosition"* [ %408, %400 ], [ %391, %390 ]
  %402 = phi %"class.v8::internal::SourcePosition"* [ %404, %400 ], [ %392, %390 ]
  %403 = phi i64 [ %409, %400 ], [ %398, %390 ]
  %404 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %402, i64 -1
  %405 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %404, i64 0, i32 0
  %406 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %401, i64 -1, i32 0
  %407 = load i64, i64* %405, align 8
  store i64 %407, i64* %406, align 8
  %408 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %401, i64 -1
  %409 = add i64 %403, -1
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %411, label %400, !llvm.loop !31

411:                                              ; preds = %400, %390
  %412 = phi %"class.v8::internal::SourcePosition"* [ undef, %390 ], [ %408, %400 ]
  %413 = phi %"class.v8::internal::SourcePosition"* [ %391, %390 ], [ %408, %400 ]
  %414 = phi %"class.v8::internal::SourcePosition"* [ %392, %390 ], [ %404, %400 ]
  %415 = icmp ult i64 %395, 56
  br i1 %415, label %446, label %416

416:                                              ; preds = %411, %416
  %417 = phi %"class.v8::internal::SourcePosition"* [ %444, %416 ], [ %413, %411 ]
  %418 = phi %"class.v8::internal::SourcePosition"* [ %440, %416 ], [ %414, %411 ]
  %419 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -1, i32 0
  %420 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -1, i32 0
  %421 = load i64, i64* %419, align 8
  store i64 %421, i64* %420, align 8
  %422 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -2, i32 0
  %423 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -2, i32 0
  %424 = load i64, i64* %422, align 8
  store i64 %424, i64* %423, align 8
  %425 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -3, i32 0
  %426 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -3, i32 0
  %427 = load i64, i64* %425, align 8
  store i64 %427, i64* %426, align 8
  %428 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -4, i32 0
  %429 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -4, i32 0
  %430 = load i64, i64* %428, align 8
  store i64 %430, i64* %429, align 8
  %431 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -5, i32 0
  %432 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -5, i32 0
  %433 = load i64, i64* %431, align 8
  store i64 %433, i64* %432, align 8
  %434 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -6, i32 0
  %435 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -6, i32 0
  %436 = load i64, i64* %434, align 8
  store i64 %436, i64* %435, align 8
  %437 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -7, i32 0
  %438 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -7, i32 0
  %439 = load i64, i64* %437, align 8
  store i64 %439, i64* %438, align 8
  %440 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %418, i64 -8
  %441 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %440, i64 0, i32 0
  %442 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -8, i32 0
  %443 = load i64, i64* %441, align 8
  store i64 %443, i64* %442, align 8
  %444 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %417, i64 -8
  %445 = icmp eq %"class.v8::internal::SourcePosition"* %440, %290
  br i1 %445, label %446, label %416, !llvm.loop !32

446:                                              ; preds = %411, %416, %388, %286
  %447 = phi %"class.v8::internal::SourcePosition"* [ %171, %286 ], [ %317, %388 ], [ %412, %411 ], [ %444, %416 ]
  %448 = ptrtoint %"class.v8::internal::SourcePosition"* %447 to i64
  store i64 %448, i64* %133, align 8
  store i64 %288, i64* %8, align 8
  store i64 %287, i64* %5, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK2v88internal8compiler11NodeAuxDataINS0_14SourcePositionEXadL_ZNS3_7UnknownEvEEE3endEv: argument 0"}
!5 = distinct !{!5, !"_ZNK2v88internal8compiler11NodeAuxDataINS0_14SourcePositionEXadL_ZNS3_7UnknownEvEEE3endEv"}
!6 = !{i8 0, i8 2}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !15}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !15}
!23 = distinct !{!23, !8}
!24 = distinct !{!24, !15}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !15}
!31 = distinct !{!31, !8}
!32 = distinct !{!32, !15}
