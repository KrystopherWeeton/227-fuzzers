; ModuleID = '../../v8/src/heap/cppgc-js/unified-heap-marking-verifier.cc'
source_filename = "../../v8/src/heap/cppgc-js/unified-heap-marking-verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::UnifiedHeapMarkingVerifier" = type { %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::VerificationState" }
%"class.cppgc::internal::MarkingVerifierBase" = type { %"class.cppgc::internal::ConservativeTracingVisitor", %"class.heap::base::StackVisitor", %"class.cppgc::internal::VerificationState"*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unordered_set.163", %"class.std::__1::unordered_set.163", %"class.std::__1::unordered_set.163"*, i64 }
%"class.cppgc::internal::ConservativeTracingVisitor" = type { i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::Visitor"* }
%"class.cppgc::internal::PageBackend" = type opaque
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.heap::base::StackVisitor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.cppgc::Visitor"* }
%"class.std::__1::unordered_set.163" = type { %"class.std::__1::__hash_table.164" }
%"class.std::__1::__hash_table.164" = type <{ %"class.std::__1::unique_ptr.165", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184", [4 x i8] }>
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base.168"** }
%"struct.std::__1::__hash_node_base.168" = type { %"struct.std::__1::__hash_node_base.168"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__bucket_list_deallocator.170" }
%"class.std::__1::__bucket_list_deallocator.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base.168" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { float }
%"class.cppgc::internal::VerificationState" = type { %"class.cppgc::internal::HeapObjectHeader"* }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.29", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.151", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.11" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.22" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::set.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.38", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.45", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.40" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.69", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.109", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.69" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.70" }
%"class.std::__1::shared_ptr.70" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.91" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.heap::base::Worklist.92" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.93" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.94" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.72", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.87", [4 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.heap::base::Worklist.90" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.95", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.92"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.91"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.93"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.94"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.90"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist.98"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist.98" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.102", i64 }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.112", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.124", %"class.std::__1::unique_ptr.131", i8, i8, [6 x i8] }>
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.126" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist.98" }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.143", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.std::__1::unique_ptr.145"*, %"class.std::__1::unique_ptr.145"*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::unique_ptr.145" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::unique_ptr.145"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i32* }
%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor" = type { %"class.v8::JSVisitor", %"class.cppgc::internal::VerificationState"* }
%"class.v8::JSVisitor" = type { %"class.cppgc::Visitor" }
%"class.cppgc::SourceLocation" = type { i8*, i8*, i64 }
%"class.v8::TracedReferenceBase" = type { i64* }

$_ZN5cppgc8internal19MarkingVerifierBaseD2Ev = comdat any

$_ZN2v88internal26UnifiedHeapMarkingVerifierD0Ev = comdat any

$_ZN5cppgc7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ = comdat any

$_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em = comdat any

$_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE = comdat any

$_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE = comdat any

$_ZN5cppgc7Visitor14VisitEphemeronEPKvS2_NS_15TraceDescriptorE = comdat any

$_ZN5cppgc7Visitor22HandleMovableReferenceEPPKv = comdat any

$_ZN5cppgc7VisitorD2Ev = comdat any

$_ZTVN2v88internal26UnifiedHeapMarkingVerifierE = comdat any

@_ZTVN2v88internal26UnifiedHeapMarkingVerifierE = linkonce_odr hidden unnamed_addr constant { [7 x i8*], [3 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*)* @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVerifier"*)* @_ZN2v88internal26UnifiedHeapMarkingVerifierD0Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)* @_ZN5cppgc8internal26ConservativeTracingVisitor35VisitFullyConstructedConservativelyERNS0_16HeapObjectHeaderE to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)* @_ZN5cppgc8internal19MarkingVerifierBase33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPNS0_26ConservativeTracingVisitorERKS2_E to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, i8*)* @_ZN5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv to i8*)], [3 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, i8*)* @_ZThn32_N5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv to i8*)] }, comdat, align 8
@_ZTVN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitorE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::Visitor"*)* @_ZN5cppgc7VisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"*)* @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitorD0Ev to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN5cppgc7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)* @_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor5VisitEPKvN5cppgc15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor9VisitWeakEPKvN5cppgc15TraceDescriptorEPFvRKNS5_14LivenessBrokerES4_ES4_ to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)* @_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"*)* @_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN5cppgc7Visitor14VisitEphemeronEPKvS2_NS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor18VisitWeakContainerEPKvN5cppgc15TraceDescriptorES6_PFvRKNS5_14LivenessBrokerES4_ES4_ to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8**)* @_ZN5cppgc7Visitor22HandleMovableReferenceEPPKv to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"*, %"class.v8::TracedReferenceBase"*)* @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor5VisitERKNS_19TracedReferenceBaseE to i8*)] }, align 8
@_ZTVN5cppgc8internal19MarkingVerifierBaseE = external unnamed_addr constant { [7 x i8*], [3 x i8*] }, align 8

@_ZN2v88internal26UnifiedHeapMarkingVerifierC1ERN5cppgc8internal8HeapBaseE = hidden unnamed_addr alias void (%"class.v8::internal::UnifiedHeapMarkingVerifier"*, %"class.cppgc::internal::HeapBase"*), void (%"class.v8::internal::UnifiedHeapMarkingVerifier"*, %"class.cppgc::internal::HeapBase"*)* @_ZN2v88internal26UnifiedHeapMarkingVerifierC2ERN5cppgc8internal8HeapBaseE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26UnifiedHeapMarkingVerifierC2ERN5cppgc8internal8HeapBaseE(%"class.v8::internal::UnifiedHeapMarkingVerifier"*, %"class.cppgc::internal::HeapBase"* dereferenceable(448)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVerifier", %"class.v8::internal::UnifiedHeapMarkingVerifier"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN2v88internal26UnifiedHeapMarkingVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVerifier", %"class.v8::internal::UnifiedHeapMarkingVerifier"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN2v88internal26UnifiedHeapMarkingVerifierE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVerifier", %"class.v8::internal::UnifiedHeapMarkingVerifier"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVerifier", %"class.v8::internal::UnifiedHeapMarkingVerifier"* %0, i64 0, i32 1
  %7 = tail call i8* @_Znwm(i64 16) #6
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to %"class.cppgc::internal::VerificationState"**
  store %"class.cppgc::internal::VerificationState"* %6, %"class.cppgc::internal::VerificationState"** %10, align 8
  %11 = bitcast i8* %7 to %"class.cppgc::Visitor"*
  tail call void @_ZN5cppgc8internal19MarkingVerifierBaseC2ERNS0_8HeapBaseERNS0_17VerificationStateENSt3__110unique_ptrINS_7VisitorENS6_14default_deleteIS8_EEEE(%"class.cppgc::internal::MarkingVerifierBase"* %5, %"class.cppgc::internal::HeapBase"* dereferenceable(448) %1, %"class.cppgc::internal::VerificationState"* dereferenceable(8) %6, %"class.cppgc::Visitor"* nonnull %11) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN2v88internal26UnifiedHeapMarkingVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN2v88internal26UnifiedHeapMarkingVerifierE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %12 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %6, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* null, %"class.cppgc::internal::HeapObjectHeader"** %12, align 8
  ret void
}

declare void @_ZN5cppgc8internal19MarkingVerifierBaseC2ERNS0_8HeapBaseERNS0_17VerificationStateENSt3__110unique_ptrINS_7VisitorENS6_14default_deleteIS8_EEEE(%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapBase"* dereferenceable(448), %"class.cppgc::internal::VerificationState"* dereferenceable(8), %"class.cppgc::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev(%"class.cppgc::internal::MarkingVerifierBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal19MarkingVerifierBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal19MarkingVerifierBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.168"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.std::__1::__hash_node_base.168"* [ %10, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %9, align 8
  %11 = bitcast %"struct.std::__1::__hash_node_base.168"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #6
  %12 = icmp eq %"struct.std::__1::__hash_node_base.168"* %10, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %14, align 8
  store %"struct.std::__1::__hash_node_base.168"** null, %"struct.std::__1::__hash_node_base.168"*** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base.168"** %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.std::__1::__hash_node_base.168"** %15 to i8*
  tail call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.168"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.168"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.168"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #6
  %28 = icmp eq %"struct.std::__1::__hash_node_base.168"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.168"** null, %"struct.std::__1::__hash_node_base.168"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.168"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.168"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #6
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.cppgc::Visitor"*, %"class.cppgc::Visitor"** %36, align 8
  store %"class.cppgc::Visitor"* null, %"class.cppgc::Visitor"** %36, align 8
  %38 = icmp eq %"class.cppgc::Visitor"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.cppgc::Visitor"* %37 to void (%"class.cppgc::Visitor"*)***
  %41 = load void (%"class.cppgc::Visitor"*)**, void (%"class.cppgc::Visitor"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.cppgc::Visitor"*)*, void (%"class.cppgc::Visitor"*)** %41, i64 1
  %43 = load void (%"class.cppgc::Visitor"*)*, void (%"class.cppgc::Visitor"*)** %42, align 8
  tail call void %43(%"class.cppgc::Visitor"* nonnull %37) #7
  br label %44

44:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26UnifiedHeapMarkingVerifierD0Ev(%"class.v8::internal::UnifiedHeapMarkingVerifier"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVerifier", %"class.v8::internal::UnifiedHeapMarkingVerifier"* %0, i64 0, i32 0
  tail call void @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev(%"class.cppgc::internal::MarkingVerifierBase"* %2) #7
  %3 = bitcast %"class.v8::internal::UnifiedHeapMarkingVerifier"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

declare void @_ZN5cppgc8internal26ConservativeTracingVisitor35VisitFullyConstructedConservativelyERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5cppgc8internal19MarkingVerifierBase33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPNS0_26ConservativeTracingVisitorERKS2_E(%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8), void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*) unnamed_addr #1

declare void @_ZN5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv(%"class.cppgc::internal::MarkingVerifierBase"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv(%"class.cppgc::internal::MarkingVerifierBase"*, i8*) unnamed_addr #0 align 2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitorD0Ev(%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_(%"class.cppgc::Visitor"*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em(%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor5VisitEPKvN5cppgc15TraceDescriptorE(%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* nocapture readonly, i8* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor", %"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* %0, i64 0, i32 1
  %6 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %5, align 8
  tail call void @_ZNK5cppgc8internal17VerificationState12VerifyMarkedEPKv(%"class.cppgc::internal::VerificationState"* %6, i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor9VisitWeakEPKvN5cppgc15TraceDescriptorEPFvRKNS5_14LivenessBrokerES4_ES4_(%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* nocapture readonly, i8* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, void (%"class.cppgc::LivenessBroker"*, i8*)* nocapture readnone, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor", %"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* %0, i64 0, i32 1
  %8 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %7, align 8
  tail call void @_ZNK5cppgc8internal17VerificationState12VerifyMarkedEPKv(%"class.cppgc::internal::VerificationState"* %8, i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE(%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE(%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor14VisitEphemeronEPKvS2_NS_15TraceDescriptorE(%"class.cppgc::Visitor"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor18VisitWeakContainerEPKvN5cppgc15TraceDescriptorES6_PFvRKNS5_14LivenessBrokerES4_ES4_(%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* nocapture readonly, i8* readnone, i8* nocapture readnone, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, void (%"class.cppgc::LivenessBroker"*, i8*)* nocapture readnone, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %9 = icmp eq i8* %1, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor", %"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* %0, i64 0, i32 1
  %12 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %11, align 8
  tail call void @_ZNK5cppgc8internal17VerificationState12VerifyMarkedEPKv(%"class.cppgc::internal::VerificationState"* %12, i8* %4) #7
  br label %13

13:                                               ; preds = %8, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor22HandleMovableReferenceEPPKv(%"class.cppgc::Visitor"*, i8**) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_130UnifiedHeapVerificationVisitor5VisitERKNS_19TracedReferenceBaseE(%"class.v8::internal::(anonymous namespace)::UnifiedHeapVerificationVisitor"* nocapture, %"class.v8::TracedReferenceBase"* nocapture dereferenceable(8)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7VisitorD2Ev(%"class.cppgc::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNK5cppgc8internal17VerificationState12VerifyMarkedEPKv(%"class.cppgc::internal::VerificationState"*, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
