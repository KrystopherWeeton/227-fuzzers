; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkBuffer.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkBuffer = type { %class.GrGpuBuffer, %struct.VkBuffer_T*, %struct.GrVkAlloc, %class.GrVkDescriptorSet* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.1, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.43", %"class.std::__1::shared_ptr.43", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.45", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.51" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.15", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.17" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.43" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.43", %"class.std::__1::vector.428", i8, %"class.std::__1::vector.436", %"class.std::__1::forward_list", %class.SkTHashMap.449, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { %"class.std::__1::unique_ptr.430"*, %"class.std::__1::unique_ptr.430"*, %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.std::__1::unique_ptr.430"* }
%"class.std::__1::vector.436" = type { %"class.std::__1::__vector_base.437" }
%"class.std::__1::__vector_base.437" = type { %"class.std::__1::unique_ptr.438"*, %"class.std::__1::unique_ptr.438"*, %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.std::__1::unique_ptr.438"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.449 = type { %class.SkTHashTable.450 }
%class.SkTHashTable.450 = type { i32, i32, %class.SkAutoTArray.451 }
%class.SkAutoTArray.451 = type { %"class.std::__1::unique_ptr.452" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.481" }
%"struct.std::__1::pair.481" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.43", %"class.std::__1::shared_ptr.44" }
%"class.std::__1::shared_ptr.44" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i64*, i64*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %class.sk_sp.125, %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.165", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.184" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.62", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.61 }
%class.sk_sp.61 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.72, %class.SkTArray.81, %class.SkTArray.83, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.65"*, i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.83, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.84 }
%class.sk_sp.84 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.72 = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.464" }
%"struct.std::__1::pair.464" = type { i32, %class.SkTArray.465* }
%class.SkTArray.465 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.81 = type { %"class.std::__1::unique_ptr.82"*, i64 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.465, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.83 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.97 }
%class.SkFibBlockSizes.97 = type { i32 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.125 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.137, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.153, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.129 }
%class.SkTHashTable.129 = type { i32, i32, %class.SkAutoTArray.130 }
%class.SkAutoTArray.130 = type { %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.137 = type { %class.SkTHashTable.138 }
%class.SkTHashTable.138 = type { i32, i32, %class.SkAutoTArray.139 }
%class.SkAutoTArray.139 = type { %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.146, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.146 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.147" }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.152, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.152 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.426 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.426 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.427, void (i8*)*, i8* }
%class.SkNVRefCnt.427 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.153 = type { %class.SkTHashTable.154 }
%class.SkTHashTable.154 = type { i32, i32, %class.SkAutoTArray.155 }
%class.SkAutoTArray.155 = type { %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.168, %class.sk_sp.168 }
%class.sk_sp.168 = type { %class.GrGpuBuffer* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.190 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.190 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.191, %class.sk_sp.335, %class.sk_sp.336, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.410, %class.SkSTArray.410, %class.SkTArray.413, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.420" }
%class.sk_sp.191 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.192", %"class.GrVkInterface::VkPtr.193", %"class.GrVkInterface::VkPtr.194", %"class.GrVkInterface::VkPtr.195", %"class.GrVkInterface::VkPtr.196", %"class.GrVkInterface::VkPtr.197", %"class.GrVkInterface::VkPtr.198", %"class.GrVkInterface::VkPtr.199", %"class.GrVkInterface::VkPtr.200", %"class.GrVkInterface::VkPtr.201", %"class.GrVkInterface::VkPtr.202", %"class.GrVkInterface::VkPtr.203", %"class.GrVkInterface::VkPtr.204", %"class.GrVkInterface::VkPtr.205", %"class.GrVkInterface::VkPtr.206", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.192" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.193" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.194" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.195" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.196" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.197" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.198" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.199" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.200" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.201" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.202" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.203" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.204" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.205" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.206" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.207" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.208" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.209" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.210" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.GrVkInterface::VkPtr.211" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.212" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.213" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.214" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.215" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.216" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.217" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.218" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.219" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.220" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.221" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.222" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.223" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.224" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.225" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.226" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.227" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.228" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.229" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.230" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.231" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.232" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.233" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.234" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.235" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.236" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.237" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.239" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.240" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.241" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.242" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.243" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.245" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.246" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.247" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.248" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.249" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.250" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.251" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.252" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.253" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.254" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.255" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.256" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%"class.GrVkInterface::VkPtr.257" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.258" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.259" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.260" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.261" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.262" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.263" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.264" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.265" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.266" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.267" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.268" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.269" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.270" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.271" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.273" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.274" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.275" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.276" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.277" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.278" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.279" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.280" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.281" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.282" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.283" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.286" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.287" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.289" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.290" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.291" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.292" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.321" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.323" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.324" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.328" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.329" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.331" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.333" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.335 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.336 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.344, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.337, %"class.std::__1::unique_ptr.338", i32, [4 x i8] }>
%class.SkTDArray.337 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.344 = type { %class.SkAlignedSTStorage.345, %class.SkTArray.346 }
%class.SkAlignedSTStorage.345 = type { [48 x i8] }
%class.SkTArray.346 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.347, %class.SkSTArray.349, %class.SkTArray.355, %class.SkSTArray.356, %class.SkMutex, %class.SkSTArray.356, %class.SkTDynamicHash.359, %class.SkTDynamicHash.368, %class.sk_sp.377, %class.SkSTArray.386, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.347 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.348, %class.GrVkRenderPass* }
%class.sk_sp.348 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type opaque
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.349 = type { %class.SkAlignedSTStorage.350, %class.SkTArray.351 }
%class.SkAlignedSTStorage.350 = type { [224 x i8] }
%class.SkTArray.351 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.352, i32, [4 x i8] }>
%class.SkSTArray.352 = type { %class.SkAlignedSTStorage.353, %class.SkTArray.354 }
%class.SkAlignedSTStorage.353 = type { [32 x i8] }
%class.SkTArray.354 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.355 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.356 = type { %class.SkAlignedSTStorage.357, %class.SkTArray.358 }
%class.SkAlignedSTStorage.357 = type { [32 x i8] }
%class.SkTArray.358 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.359 = type { %class.SkTHashTable.360 }
%class.SkTHashTable.360 = type { i32, i32, %class.SkAutoTArray.361 }
%class.SkAutoTArray.361 = type { %"class.std::__1::unique_ptr.362" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.368 = type { %class.SkTHashTable.369 }
%class.SkTHashTable.369 = type { i32, i32, %class.SkAutoTArray.370 }
%class.SkAutoTArray.370 = type { %"class.std::__1::unique_ptr.371" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.377 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.378, %class.SkTInternalLList }
%class.SkTHashTable.378 = type { i32, i32, %class.SkAutoTArray.379 }
%class.SkAutoTArray.379 = type { %"class.std::__1::unique_ptr.380" }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.386 = type { %class.SkAlignedSTStorage.387, %class.SkTArray.388 }
%class.SkAlignedSTStorage.387 = type { [32 x i8] }
%class.SkTArray.388 = type { %"class.std::__1::unique_ptr.389"*, i64 }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.392, %class.SkSTArray.393, %class.SkSTArray.396 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.392 = type { %class.GrVkDescriptorSet**, i64 }
%class.SkSTArray.393 = type { %class.SkAlignedSTStorage.394, %class.SkTArray.395 }
%class.SkAlignedSTStorage.394 = type { [16 x i8] }
%class.SkTArray.395 = type { i32*, i64 }
%class.SkSTArray.396 = type { %class.SkAlignedSTStorage.397, %class.SkTArray.398 }
%class.SkAlignedSTStorage.397 = type { [32 x i8] }
%class.SkTArray.398 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrResourceHandle = type { i32 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.402", %class.GrGpu* }
%"class.std::__1::vector.402" = type { %"class.std::__1::__vector_base.403" }
%"class.std::__1::__vector_base.403" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.405" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.404, i8*, i64 }
%class.sk_sp.404 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type opaque
%class.SkSTArray.410 = type { %class.SkAlignedSTStorage.411, %class.SkTArray.412 }
%class.SkAlignedSTStorage.411 = type { [8 x i8] }
%class.SkTArray.412 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.413 = type { %"class.std::__1::unique_ptr.414"*, i64 }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%struct.VkBuffer_T = type opaque
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.sk_sp.458 = type { %class.GrVkBuffer* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkTraceMemoryDump = type opaque

$_ZNK11GrGpuBuffer4sizeEv = comdat any

$_ZNK11GrGpuBuffer15getResourceTypeEv = comdat any

$_ZN11GrGpuBufferD2Ev = comdat any

$_ZN10GrVkBufferD0Ev = comdat any

$_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString = comdat any

$_ZNK11GrGpuBuffer15onGpuMemorySizeEv = comdat any

$_ZNK11GrGpuBuffer3refEv = comdat any

$_ZNK11GrGpuBuffer5unrefEv = comdat any

$_ZNK11GrGpuBuffer11isCpuBufferEv = comdat any

$_ZThn152_N10GrVkBufferD1Ev = comdat any

$_ZThn152_N10GrVkBufferD0Ev = comdat any

$_ZThn152_NK11GrGpuBuffer3refEv = comdat any

$_ZThn152_NK11GrGpuBuffer5unrefEv = comdat any

$_ZThn152_NK11GrGpuBuffer4sizeEv = comdat any

$_ZThn152_NK11GrGpuBuffer11isCpuBufferEv = comdat any

@_ZTV10GrVkBuffer = hidden unnamed_addr constant { [18 x i8*], [8 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZN11GrGpuBufferD2Ev to i8*), i8* bitcast (void (%class.GrVkBuffer*)* @_ZN10GrVkBufferD0Ev to i8*), i8* bitcast (void (%class.GrVkBuffer*)* @_ZN10GrVkBuffer9onReleaseEv to i8*), i8* bitcast (void (%class.GrVkBuffer*)* @_ZN10GrVkBuffer9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuBuffer*, %class.GrScratchKey*)* @_ZNK11GrGpuBuffer17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer15onGpuMemorySizeEv to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer4sizeEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer3refEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer5unrefEv to i8*), i8* bitcast (i1 (%class.GrGpuBuffer*)* @_ZNK11GrGpuBuffer11isCpuBufferEv to i8*), i8* bitcast (void (%class.GrVkBuffer*)* @_ZN10GrVkBuffer5onMapEv to i8*), i8* bitcast (void (%class.GrVkBuffer*)* @_ZN10GrVkBuffer7onUnmapEv to i8*), i8* bitcast (i1 (%class.GrVkBuffer*, i8*, i64)* @_ZN10GrVkBuffer12onUpdateDataEPKvm to i8*)], [8 x i8*] [i8* inttoptr (i64 -152 to i8*), i8* null, i8* bitcast (void (%class.GrVkBuffer*)* @_ZThn152_N10GrVkBufferD1Ev to i8*), i8* bitcast (void (%class.GrVkBuffer*)* @_ZThn152_N10GrVkBufferD0Ev to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer3refEv to i8*), i8* bitcast (void (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer5unrefEv to i8*), i8* bitcast (i64 (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer4sizeEv to i8*), i8* bitcast (i1 (%class.GrGpuBuffer*)* @_ZThn152_NK11GrGpuBuffer11isCpuBufferEv to i8*)] }, align 8
@.str = private unnamed_addr constant [14 x i8] c"Buffer Object\00", align 1

@_ZN10GrVkBufferC1EP7GrVkGpum15GrGpuBufferType15GrAccessPatternP10VkBuffer_TRK9GrVkAllocPK17GrVkDescriptorSet = hidden unnamed_addr alias void (%class.GrVkBuffer*, %class.GrVkGpu*, i64, i32, i32, %struct.VkBuffer_T*, %struct.GrVkAlloc*, %class.GrVkDescriptorSet*), void (%class.GrVkBuffer*, %class.GrVkGpu*, i64, i32, i32, %struct.VkBuffer_T*, %struct.GrVkAlloc*, %class.GrVkDescriptorSet*)* @_ZN10GrVkBufferC2EP7GrVkGpum15GrGpuBufferType15GrAccessPatternP10VkBuffer_TRK9GrVkAllocPK17GrVkDescriptorSet

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBufferC2EP7GrVkGpum15GrGpuBufferType15GrAccessPatternP10VkBuffer_TRK9GrVkAllocPK17GrVkDescriptorSet(%class.GrVkBuffer*, %class.GrVkGpu*, i64, i32, i32, %struct.VkBuffer_T*, %struct.GrVkAlloc* nocapture readonly dereferenceable(48), %class.GrVkDescriptorSet*) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  tail call void @_ZN11GrGpuBufferC2EP5GrGpum15GrGpuBufferType15GrAccessPattern(%class.GrGpuBuffer* %9, %class.GrGpu* %10, i64 %2, i32 %3, i32 %4) #9
  %11 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrVkBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrVkBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 1
  store %struct.VkBuffer_T* %5, %struct.VkBuffer_T** %13, align 8
  %14 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  %15 = bitcast %struct.GrVkAlloc* %14 to i8*
  %16 = bitcast %struct.GrVkAlloc* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 48, i1 false)
  %17 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 3
  store %class.GrVkDescriptorSet* %7, %class.GrVkDescriptorSet** %17, align 8
  %18 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource* %18, i1 zeroext true) #9
  ret void
}

declare void @_ZN11GrGpuBufferC2EP5GrGpum15GrGpuBufferType15GrAccessPattern(%class.GrGpuBuffer*, %class.GrGpu*, i64, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer4MakeEP7GrVkGpum15GrGpuBufferType15GrAccessPattern(%class.sk_sp.458* noalias nocapture sret, %class.GrVkGpu*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.VkDescriptorBufferInfo, align 8
  %7 = alloca %struct.VkWriteDescriptorSet, align 8
  %8 = alloca %struct.VkBuffer_T*, align 8
  %9 = alloca %struct.GrVkAlloc, align 8
  %10 = alloca %struct.VkBufferCreateInfo, align 8
  %11 = bitcast %struct.VkBuffer_T** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store %struct.VkBuffer_T* inttoptr (i64 -6148914691236517206 to %struct.VkBuffer_T*), %struct.VkBuffer_T** %8, align 8
  %12 = bitcast %struct.GrVkAlloc* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  %13 = getelementptr inbounds %struct.GrVkAlloc, %struct.GrVkAlloc* %9, i64 0, i32 5
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %struct.GrVkAlloc, %struct.GrVkAlloc* %9, i64 0, i32 6
  store i8 0, i8* %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 28, i1 false) #9
  %15 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 20
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = and i32 %4, -3
  %19 = icmp eq i32 %18, 0
  %20 = or i1 %19, %17
  br i1 %20, label %27, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %23 = load %class.GrVkCaps*, %class.GrVkCaps** %22, align 8
  %24 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %23, i64 0, i32 24
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = icmp eq i8 %25, 0
  br label %27

27:                                               ; preds = %21, %5
  %28 = phi i1 [ true, %5 ], [ %26, %21 ]
  %29 = bitcast %struct.VkBufferCreateInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %29) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 56, i1 false)
  %30 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 0
  store i32 12, i32* %30, align 8
  %31 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 2
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 3
  store i64 %2, i64* %32, align 8
  switch i32 %3, label %48 [
    i32 0, label %33
    i32 1, label %36
    i32 2, label %39
    i32 5, label %42
    i32 3, label %44
    i32 4, label %46
  ]

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 4
  store i32 128, i32* %34, align 8
  %35 = zext i1 %28 to i32
  br label %48

36:                                               ; preds = %27
  %37 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 4
  store i32 64, i32* %37, align 8
  %38 = zext i1 %28 to i32
  br label %48

39:                                               ; preds = %27
  %40 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 4
  store i32 256, i32* %40, align 8
  %41 = zext i1 %28 to i32
  br label %48

42:                                               ; preds = %27
  %43 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 4
  store i32 16, i32* %43, align 8
  br label %48

44:                                               ; preds = %27
  %45 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 4
  store i32 1, i32* %45, align 8
  br label %48

46:                                               ; preds = %27
  %47 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 4
  store i32 2, i32* %47, align 8
  br label %48

48:                                               ; preds = %27, %46, %44, %42, %39, %36, %33
  %49 = phi i32 [ 2, %27 ], [ 2, %46 ], [ 3, %44 ], [ 18, %42 ], [ 258, %39 ], [ 66, %36 ], [ 130, %33 ]
  %50 = phi i32 [ -1431655766, %27 ], [ 3, %46 ], [ 2, %44 ], [ 1, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ]
  br i1 %28, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 4
  store i32 %49, i32* %52, align 8
  br label %53

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 5
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 6
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %10, i64 0, i32 7
  store i32* null, i32** %56, align 8
  %57 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %58 = load %struct.GrVkInterface*, %struct.GrVkInterface** %57, align 8
  %59 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %58, i64 0, i32 1, i32 48, i32 0
  %60 = load i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)** %59, align 8
  %61 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %62 = load %struct.VkDevice_T*, %struct.VkDevice_T** %61, align 8
  %63 = call i32 %60(%struct.VkDevice_T* %62, %struct.VkBufferCreateInfo* nonnull %10, %struct.VkAllocationCallbacks* null, %struct.VkBuffer_T** nonnull %8) #9
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %53
  %66 = getelementptr inbounds %class.sk_sp.458, %class.sk_sp.458* %0, i64 0, i32 0
  store %class.GrVkBuffer* null, %class.GrVkBuffer** %66, align 8
  br label %130

67:                                               ; preds = %53
  %68 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %8, align 8
  %69 = call zeroext i1 @_ZN10GrVkMemory24AllocAndBindBufferMemoryEP7GrVkGpuP10VkBuffer_TN19GrVkMemoryAllocator11BufferUsageEP9GrVkAlloc(%class.GrVkGpu* %1, %struct.VkBuffer_T* %68, i32 %50, %struct.GrVkAlloc* nonnull %9) #9
  br i1 %69, label %77, label %70

70:                                               ; preds = %67
  %71 = load %struct.GrVkInterface*, %struct.GrVkInterface** %57, align 8
  %72 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %71, i64 0, i32 1, i32 49, i32 0
  %73 = load void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** %72, align 8
  %74 = load %struct.VkDevice_T*, %struct.VkDevice_T** %61, align 8
  %75 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %8, align 8
  call void %73(%struct.VkDevice_T* %74, %struct.VkBuffer_T* %75, %struct.VkAllocationCallbacks* null) #9
  %76 = getelementptr inbounds %class.sk_sp.458, %class.sk_sp.458* %0, i64 0, i32 0
  store %class.GrVkBuffer* null, %class.GrVkBuffer** %76, align 8
  br label %130

77:                                               ; preds = %67
  %78 = icmp eq i32 %3, 5
  %79 = bitcast %struct.VkBuffer_T** %8 to i64*
  br i1 %78, label %80, label %114

80:                                               ; preds = %77
  %81 = load i64, i64* %79, align 8
  %82 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 9
  %83 = call %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider23getUniformDescriptorSetEv(%class.GrVkResourceProvider* %82) #9
  %84 = icmp eq %class.GrVkDescriptorSet* %83, null
  br i1 %84, label %107, label %85

85:                                               ; preds = %80
  %86 = bitcast %struct.VkDescriptorBufferInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %6, i64 0, i32 1
  %88 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %6, i64 0, i32 2
  %89 = bitcast %struct.VkDescriptorBufferInfo* %6 to i64*
  store i64 %81, i64* %89, align 8
  store i64 0, i64* %87, align 8
  store i64 %2, i64* %88, align 8
  %90 = bitcast %struct.VkWriteDescriptorSet* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %90) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 64, i1 false) #9
  %91 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %7, i64 0, i32 0
  store i32 35, i32* %91, align 8
  %92 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %7, i64 0, i32 1
  store i8* null, i8** %92, align 8
  %93 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %83, i64 0, i32 1
  %94 = bitcast %struct.VkDescriptorSet_T** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %7, i64 0, i32 2
  %97 = bitcast %struct.VkDescriptorSet_T** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %7, i64 0, i32 3
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 6>, <4 x i32>* %99, align 8
  %100 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %7, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %100, align 8
  %101 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %7, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %6, %struct.VkDescriptorBufferInfo** %101, align 8
  %102 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %7, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %102, align 8
  %103 = load %struct.GrVkInterface*, %struct.GrVkInterface** %57, align 8
  %104 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %103, i64 0, i32 1, i32 77, i32 0
  %105 = load void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)** %104, align 8
  %106 = load %struct.VkDevice_T*, %struct.VkDevice_T** %61, align 8
  call void %105(%struct.VkDevice_T* %106, i32 1, %struct.VkWriteDescriptorSet* nonnull %7, i32 0, %struct.VkCopyDescriptorSet* null) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %90) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  br label %114

107:                                              ; preds = %80
  %108 = load %struct.GrVkInterface*, %struct.GrVkInterface** %57, align 8
  %109 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %108, i64 0, i32 1, i32 49, i32 0
  %110 = load void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** %109, align 8
  %111 = load %struct.VkDevice_T*, %struct.VkDevice_T** %61, align 8
  %112 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %8, align 8
  call void %110(%struct.VkDevice_T* %111, %struct.VkBuffer_T* %112, %struct.VkAllocationCallbacks* null) #9
  call void @_ZN10GrVkMemory16FreeBufferMemoryEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* %1, %struct.GrVkAlloc* nonnull dereferenceable(48) %9) #9
  %113 = getelementptr inbounds %class.sk_sp.458, %class.sk_sp.458* %0, i64 0, i32 0
  store %class.GrVkBuffer* null, %class.GrVkBuffer** %113, align 8
  br label %130

114:                                              ; preds = %77, %85
  %115 = phi %class.GrVkDescriptorSet* [ %83, %85 ], [ null, %77 ]
  %116 = call i8* @_Znwm(i64 248) #10
  %117 = load i64, i64* %79, align 8
  %118 = bitcast i8* %116 to %class.GrGpuBuffer*
  %119 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  call void @_ZN11GrGpuBufferC2EP5GrGpum15GrGpuBufferType15GrAccessPattern(%class.GrGpuBuffer* nonnull %118, %class.GrGpu* %119, i64 %2, i32 %3, i32 %4) #9
  %120 = bitcast i8* %116 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrVkBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds i8, i8* %116, i64 152
  %122 = bitcast i8* %121 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTV10GrVkBuffer, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds i8, i8* %116, i64 184
  %124 = bitcast i8* %123 to i64*
  store i64 %117, i64* %124, align 8
  %125 = getelementptr inbounds i8, i8* %116, i64 192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %12, i64 48, i1 false) #9
  %126 = getelementptr inbounds i8, i8* %116, i64 240
  %127 = bitcast i8* %126 to %class.GrVkDescriptorSet**
  store %class.GrVkDescriptorSet* %115, %class.GrVkDescriptorSet** %127, align 8
  %128 = bitcast i8* %116 to %class.GrGpuResource*
  call void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource* nonnull %128, i1 zeroext true) #9
  %129 = bitcast %class.sk_sp.458* %0 to i8**
  store i8* %116, i8** %129, align 8
  br label %130

130:                                              ; preds = %107, %114, %70, %65
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN10GrVkMemory24AllocAndBindBufferMemoryEP7GrVkGpuP10VkBuffer_TN19GrVkMemoryAllocator11BufferUsageEP9GrVkAlloc(%class.GrVkGpu*, %struct.VkBuffer_T*, i32, %struct.GrVkAlloc*) local_unnamed_addr #1

declare void @_ZN10GrVkMemory16FreeBufferMemoryEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer5vkMapEm(%class.GrVkBuffer*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %9 = bitcast %class.GrGpu** %8 to %class.GrVkGpu**
  %10 = load %class.GrVkGpu*, %class.GrVkGpu** %9, align 8
  %11 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  %12 = tail call i8* @_ZN10GrVkMemory8MapAllocEP7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* %10, %struct.GrVkAlloc* dereferenceable(48) %11) #9
  %13 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 2
  store i8* %12, i8** %13, align 8
  %14 = icmp eq i8* %12, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = load %class.GrVkGpu*, %class.GrVkGpu** %9, align 8
  tail call void @_ZN10GrVkMemory21InvalidateMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* %20, %struct.GrVkAlloc* dereferenceable(48) %11, i64 0, i64 %1) #9
  br label %21

21:                                               ; preds = %2, %7, %15, %19
  ret void
}

declare i8* @_ZN10GrVkMemory8MapAllocEP7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrVkGpu* @_ZNK10GrVkBuffer8getVkGpuEv(%class.GrVkBuffer* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %3 = bitcast %class.GrGpu** %2 to %class.GrVkGpu**
  %4 = load %class.GrVkGpu*, %class.GrVkGpu** %3, align 8
  ret %class.GrVkGpu* %4
}

declare void @_ZN10GrVkMemory21InvalidateMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48), i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer7vkUnmapEm(%class.GrVkBuffer*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %4 = bitcast %class.GrGpu** %3 to %class.GrVkGpu**
  %5 = load %class.GrVkGpu*, %class.GrVkGpu** %4, align 8
  %6 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  tail call void @_ZN10GrVkMemory16FlushMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* %5, %struct.GrVkAlloc* dereferenceable(48) %6, i64 0, i64 %1) #9
  tail call void @_ZN10GrVkMemory10UnmapAllocEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* %5, %struct.GrVkAlloc* dereferenceable(48) %6) #9
  ret void
}

declare void @_ZN10GrVkMemory16FlushMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48), i64, i64) local_unnamed_addr #1

declare void @_ZN10GrVkMemory10UnmapAllocEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer22copyCpuDataToGpuBufferEPKvm(%class.GrVkBuffer*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkBufferMemoryBarrier, align 8
  %5 = alloca %class.sk_sp.458, align 8
  %6 = alloca %class.sk_sp.404, align 8
  %7 = alloca %class.sk_sp.404, align 8
  %8 = alloca %class.sk_sp.404, align 8
  %9 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %10 = bitcast %class.GrGpu** %9 to %class.GrVkGpu**
  %11 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  %12 = icmp ult i64 %2, 65537
  %13 = and i64 %2, 3
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %40

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %11, i64 0, i32 3, i32 0
  %18 = load %class.GrVkCaps*, %class.GrVkCaps** %17, align 8
  %19 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %18, i64 0, i32 8
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %40

22:                                               ; preds = %16
  %23 = icmp eq %class.GrVkBuffer* %0, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic, !noalias !3
  br label %27

27:                                               ; preds = %22, %24
  %28 = getelementptr inbounds %class.sk_sp.458, %class.sk_sp.458* %5, i64 0, i32 0
  store %class.GrVkBuffer* %0, %class.GrVkBuffer** %28, align 8, !alias.scope !3
  %29 = call zeroext i1 @_ZN7GrVkGpu12updateBufferE5sk_spI10GrVkBufferEPKvmm(%class.GrVkGpu* %11, %class.sk_sp.458* nonnull %5, i8* %1, i64 0, i64 %2) #9
  %30 = load %class.GrVkBuffer*, %class.GrVkBuffer** %28, align 8
  %31 = icmp eq %class.GrVkBuffer* %30, null
  br i1 %31, label %94, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %30, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %94

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %33, i64 -1
  %39 = bitcast %class.GrIORef* %38 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %39, i32 0) #9
  br label %94

40:                                               ; preds = %16, %3
  %41 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %11, i64 0, i32 0, i32 5
  %42 = load %class.GrDirectContext*, %class.GrDirectContext** %41, align 8
  %43 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %42, i64 0, i32 6, i32 0, i32 0, i32 0
  %44 = load %class.GrResourceProvider*, %class.GrResourceProvider** %43, align 8
  %45 = bitcast %class.sk_sp.404* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %46 = getelementptr inbounds %class.sk_sp.404, %class.sk_sp.404* %6, i64 0, i32 0
  store %class.GrGpuBuffer* inttoptr (i64 -6148914691236517206 to %class.GrGpuBuffer*), %class.GrGpuBuffer** %46, align 8
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.404* nonnull sret %6, %class.GrResourceProvider* %44, i64 %2, i32 3, i32 0, i8* %1) #9
  %47 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %46, align 8
  %48 = icmp eq %class.GrGpuBuffer* %47, null
  br i1 %48, label %93, label %49

49:                                               ; preds = %40
  %50 = ptrtoint %class.GrGpuBuffer* %47 to i64
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %46, align 8
  %51 = bitcast %class.sk_sp.404* %7 to i64*
  store i64 %50, i64* %51, align 8
  %52 = icmp eq %class.GrVkBuffer* %0, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic, !noalias !6
  br label %56

56:                                               ; preds = %49, %53
  %57 = getelementptr inbounds %class.sk_sp.404, %class.sk_sp.404* %8, i64 0, i32 0
  %58 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0
  store %class.GrGpuBuffer* %58, %class.GrGpuBuffer** %57, align 8
  call void @_ZN7GrVkGpu10copyBufferE5sk_spI11GrGpuBufferES2_mmm(%class.GrVkGpu* %11, %class.sk_sp.404* nonnull %7, %class.sk_sp.404* nonnull %8, i64 0, i64 0, i64 %2) #9
  %59 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %57, align 8
  %60 = icmp eq %class.GrGpuBuffer* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %59, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %62, i64 -1
  %68 = bitcast %class.GrIORef* %67 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %68, i32 0) #9
  br label %69

69:                                               ; preds = %66, %61, %56
  %70 = getelementptr inbounds %class.sk_sp.404, %class.sk_sp.404* %7, i64 0, i32 0
  %71 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %70, align 8
  %72 = icmp eq %class.GrGpuBuffer* %71, null
  br i1 %72, label %81, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %71, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %74, i64 -1
  %80 = bitcast %class.GrIORef* %79 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %80, i32 0) #9
  br label %81

81:                                               ; preds = %69, %73, %78
  %82 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %46, align 8
  %83 = icmp eq %class.GrGpuBuffer* %82, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %82, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %85, i64 -1
  %91 = bitcast %class.GrIORef* %90 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %91, i32 0) #9
  br label %92

92:                                               ; preds = %81, %84, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  br label %94

93:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  br label %118

94:                                               ; preds = %37, %32, %27, %92
  %95 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 5
  %96 = load i32, i32* %95, align 4
  switch i32 %96, label %98 [
    i32 1, label %99
    i32 0, label %97
  ]

97:                                               ; preds = %94
  br label %99

98:                                               ; preds = %94
  call void @llvm.trap() #9
  unreachable

99:                                               ; preds = %94, %97
  %100 = phi i32 [ 4, %97 ], [ 2, %94 ]
  %101 = bitcast %struct.VkBufferMemoryBarrier* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %101) #9
  %102 = bitcast %struct.VkBufferMemoryBarrier* %4 to i64*
  store i64 -6148914694099828692, i64* %102, align 8
  %103 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 1
  store i8* null, i8** %103, align 8
  %104 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 2
  store i32 4096, i32* %104, align 8
  %105 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 3
  store i32 %100, i32* %105, align 4
  %106 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 4
  store i32 -1, i32* %106, align 8
  %107 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 5
  store i32 -1, i32* %107, align 4
  %108 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 6
  %109 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 1
  %110 = bitcast %struct.VkBuffer_T** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %struct.VkBuffer_T** %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 7
  store i64 0, i64* %113, align 8
  %114 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %4, i64 0, i32 8
  %115 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 3
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %114, align 8
  %117 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  call void @_ZNK7GrVkGpu22addBufferMemoryBarrierEjjbP21VkBufferMemoryBarrier(%class.GrVkGpu* %117, i32 4096, i32 4, i1 zeroext false, %struct.VkBufferMemoryBarrier* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %101) #9
  br label %118

118:                                              ; preds = %93, %99
  ret void
}

declare zeroext i1 @_ZN7GrVkGpu12updateBufferE5sk_spI10GrVkBufferEPKvmm(%class.GrVkGpu*, %class.sk_sp.458*, i8*, i64, i64) local_unnamed_addr #1

declare void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.404* sret, %class.GrResourceProvider*, i64, i32, i32, i8*) local_unnamed_addr #1

declare void @_ZN7GrVkGpu10copyBufferE5sk_spI11GrGpuBufferES2_mmm(%class.GrVkGpu*, %class.sk_sp.404*, %class.sk_sp.404*, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10GrVkBuffer16addMemoryBarrierEjjjjb(%class.GrVkBuffer* nocapture readonly, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.VkBufferMemoryBarrier, align 8
  %8 = bitcast %struct.VkBufferMemoryBarrier* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #9
  %9 = bitcast %struct.VkBufferMemoryBarrier* %7 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 0
  store i32 44, i32* %10, align 8
  %11 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 2
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 3
  store i32 %2, i32* %13, align 4
  %14 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 4
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 5
  store i32 -1, i32* %15, align 4
  %16 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 6
  %17 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 1
  %18 = bitcast %struct.VkBuffer_T** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %struct.VkBuffer_T** %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 7
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %struct.VkBufferMemoryBarrier, %struct.VkBufferMemoryBarrier* %7, i64 0, i32 8
  %23 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %26 = bitcast %class.GrGpu** %25 to %class.GrVkGpu**
  %27 = load %class.GrVkGpu*, %class.GrVkGpu** %26, align 8
  call void @_ZNK7GrVkGpu22addBufferMemoryBarrierEjjbP21VkBufferMemoryBarrier(%class.GrVkGpu* %27, i32 %3, i32 %4, i1 zeroext %5, %struct.VkBufferMemoryBarrier* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK11GrGpuBuffer4sizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare void @_ZNK7GrVkGpu22addBufferMemoryBarrierEjjbP21VkBufferMemoryBarrier(%class.GrVkGpu*, i32, i32, i1 zeroext, %struct.VkBufferMemoryBarrier*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer9vkReleaseEv(%class.GrVkBuffer*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  %5 = bitcast %class.GrGpu* %3 to %class.GrVkGpu*
  br i1 %4, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  tail call void @_ZN10GrVkMemory16FlushMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* nonnull %5, %struct.GrVkAlloc* dereferenceable(48) %13, i64 0, i64 %12) #9
  tail call void @_ZN10GrVkMemory10UnmapAllocEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* nonnull %5, %struct.GrVkAlloc* dereferenceable(48) %13) #9
  store i8* null, i8** %7, align 8
  br label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 3
  %16 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %15, align 8
  %17 = icmp eq %class.GrVkDescriptorSet* %16, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = bitcast %class.GrVkDescriptorSet* %16 to %class.GrManagedResource*
  %20 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = bitcast %class.GrVkDescriptorSet* %16 to %class.GrRecycledResource*
  %25 = bitcast %class.GrVkDescriptorSet* %16 to void (%class.GrRecycledResource*)***
  %26 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %26, i64 5
  %28 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %27, align 8
  tail call void %28(%class.GrRecycledResource* nonnull %24) #9
  br label %40

29:                                               ; preds = %18
  %30 = atomicrmw add i32* %20, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %40

32:                                               ; preds = %29
  %33 = bitcast %class.GrVkDescriptorSet* %16 to void (%class.GrManagedResource*)***
  %34 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %34, i64 4
  %36 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %35, align 8
  tail call void %36(%class.GrManagedResource* nonnull %19) #9
  %37 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %33, align 8
  %38 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %37, i64 1
  %39 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %38, align 8
  tail call void %39(%class.GrManagedResource* nonnull %19) #9
  br label %40

40:                                               ; preds = %23, %29, %32
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %15, align 8
  br label %41

41:                                               ; preds = %14, %40
  %42 = bitcast %class.GrGpu** %2 to %class.GrVkGpu**
  %43 = load %class.GrVkGpu*, %class.GrVkGpu** %42, align 8
  %44 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %43, i64 0, i32 1, i32 0
  %45 = load %struct.GrVkInterface*, %struct.GrVkInterface** %44, align 8
  %46 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %45, i64 0, i32 1, i32 49, i32 0
  %47 = load void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** %46, align 8
  %48 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %43, i64 0, i32 6
  %49 = load %struct.VkDevice_T*, %struct.VkDevice_T** %48, align 8
  %50 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 1
  %51 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %50, align 8
  tail call void %47(%struct.VkDevice_T* %49, %struct.VkBuffer_T* %51, %struct.VkAllocationCallbacks* null) #9
  store %struct.VkBuffer_T* null, %struct.VkBuffer_T** %50, align 8
  %52 = load %class.GrVkGpu*, %class.GrVkGpu** %42, align 8
  %53 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  tail call void @_ZN10GrVkMemory16FreeBufferMemoryEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* %52, %struct.GrVkAlloc* dereferenceable(48) %53) #9
  %54 = getelementptr inbounds %struct.GrVkAlloc, %struct.GrVkAlloc* %53, i64 0, i32 0
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %54, align 8
  %55 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2, i32 5
  store i64 0, i64* %55, align 8
  br label %56

56:                                               ; preds = %1, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer9onReleaseEv(%class.GrVkBuffer*) unnamed_addr #0 align 2 {
  tail call void @_ZN10GrVkBuffer9vkReleaseEv(%class.GrVkBuffer* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer9onAbandonEv(%class.GrVkBuffer*) unnamed_addr #0 align 2 {
  tail call void @_ZN10GrVkBuffer9vkReleaseEv(%class.GrVkBuffer* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer5onMapEv(%class.GrVkBuffer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  %5 = bitcast %class.GrGpu* %3 to %class.GrVkGpu*
  br i1 %4, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %6
  %14 = bitcast %class.GrGpu** %2 to %class.GrVkGpu**
  %15 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  %16 = tail call i8* @_ZN10GrVkMemory8MapAllocEP7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* nonnull %5, %struct.GrVkAlloc* dereferenceable(48) %15) #9
  %17 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 2
  store i8* %16, i8** %17, align 8
  %18 = icmp eq i8* %16, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = load %class.GrVkGpu*, %class.GrVkGpu** %14, align 8
  tail call void @_ZN10GrVkMemory21InvalidateMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* %24, %struct.GrVkAlloc* dereferenceable(48) %15, i64 0, i64 %8) #9
  br label %25

25:                                               ; preds = %23, %19, %13, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrVkBuffer7onUnmapEv(%class.GrVkBuffer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  %5 = bitcast %class.GrGpu* %3 to %class.GrVkGpu*
  br i1 %4, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  tail call void @_ZN10GrVkMemory16FlushMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* nonnull %5, %struct.GrVkAlloc* dereferenceable(48) %9, i64 0, i64 %8) #9
  tail call void @_ZN10GrVkMemory10UnmapAllocEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* nonnull %5, %struct.GrVkAlloc* dereferenceable(48) %9) #9
  br label %10

10:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10GrVkBuffer12onUpdateDataEPKvm(%class.GrVkBuffer*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0, i32 7
  %5 = load %class.GrGpu*, %class.GrGpu** %4, align 8
  %6 = icmp eq %class.GrGpu* %5, null
  %7 = bitcast %class.GrGpu* %5 to %class.GrVkGpu*
  br i1 %6, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %35, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrGpu** %4 to %class.GrVkGpu**
  %19 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 2
  %20 = tail call i8* @_ZN10GrVkMemory8MapAllocEP7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* nonnull %7, %struct.GrVkAlloc* dereferenceable(48) %19) #9
  %21 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 2
  store i8* %20, i8** %21, align 8
  %22 = icmp eq i8* %20, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = load %class.GrVkGpu*, %class.GrVkGpu** %18, align 8
  tail call void @_ZN10GrVkMemory21InvalidateMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* %28, %struct.GrVkAlloc* dereferenceable(48) %19, i64 0, i64 %2) #9
  %29 = load i8*, i8** %21, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %23, %27
  %32 = phi i8* [ %29, %27 ], [ %20, %23 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %1, i64 %2, i1 false)
  %33 = load %class.GrVkGpu*, %class.GrVkGpu** %18, align 8
  tail call void @_ZN10GrVkMemory16FlushMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* %33, %struct.GrVkAlloc* dereferenceable(48) %19, i64 0, i64 %2) #9
  tail call void @_ZN10GrVkMemory10UnmapAllocEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* %33, %struct.GrVkAlloc* dereferenceable(48) %19) #9
  store i8* null, i8** %21, align 8
  br label %35

34:                                               ; preds = %12
  tail call void @_ZN10GrVkBuffer22copyCpuDataToGpuBufferEPKvm(%class.GrVkBuffer* %0, i8* %1, i64 %2)
  br label %35

35:                                               ; preds = %17, %31, %34, %27, %8, %3
  %36 = phi i1 [ false, %3 ], [ false, %8 ], [ false, %27 ], [ true, %34 ], [ true, %31 ], [ false, %17 ]
  ret i1 %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkDescriptorSet_T** @_ZNK10GrVkBuffer20uniformDescriptorSetEv(%class.GrVkBuffer* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 3
  %3 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %2, align 8
  %4 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %3, i64 0, i32 1
  ret %struct.VkDescriptorSet_T** %4
}

declare void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK11GrGpuBuffer15getResourceTypeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrGpuBufferD2Ev(%class.GrGpuBuffer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %2) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10GrVkBufferD0Ev(%class.GrVkBuffer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 0, i32 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %2) #9
  %3 = bitcast %class.GrVkBuffer* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK11GrGpuBuffer17computeScratchKeyEP12GrScratchKey(%class.GrGpuBuffer*, %class.GrScratchKey*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK11GrGpuBuffer15onGpuMemorySizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrGpuBuffer3refEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrGpuBuffer5unrefEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %2, i64 -1
  %8 = bitcast %class.GrIORef* %7 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %8, i32 0) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK11GrGpuBuffer11isCpuBufferEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_N10GrVkBufferD1Ev(%class.GrVkBuffer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 -1, i32 0, i32 0, i32 6, i32 0, i32 0, i32 1, i32 0, i64 4
  %3 = bitcast i32* %2 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %3) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_N10GrVkBufferD0Ev(%class.GrVkBuffer*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %0, i64 -1, i32 0, i32 0, i32 6, i32 0, i32 0, i32 1, i32 0, i64 4
  %3 = bitcast i32* %2 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %3) #9
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_NK11GrGpuBuffer3refEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn152_NK11GrGpuBuffer5unrefEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %union.anon, %union.anon* %2, i64 0, i32 0, i64 0
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %union.anon, %union.anon* %2, i64 -1, i32 0, i64 5
  %8 = bitcast i32* %7 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %8, i32 0) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZThn152_NK11GrGpuBuffer4sizeEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %0, i64 -1, i32 0, i32 5
  %3 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %2, i64 4, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i64*
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn152_NK11GrGpuBuffer11isCpuBufferEv(%class.GrGpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider23getUniformDescriptorSetEv(%class.GrVkResourceProvider*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z9sk_ref_spI10GrVkBufferE5sk_spIT_EPS2_: argument 0"}
!5 = distinct !{!5, !"_Z9sk_ref_spI10GrVkBufferE5sk_spIT_EPS2_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI10GrVkBufferE5sk_spIT_EPS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI10GrVkBufferE5sk_spIT_EPS2_"}
