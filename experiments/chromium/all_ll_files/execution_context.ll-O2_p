; ModuleID = '../../third_party/blink/renderer/core/execution_context/execution_context.cc'
source_filename = "../../third_party/blink/renderer/core/execution_context/execution_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.132", i32, [4 x i8], %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.270", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.276", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.305", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.312", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.250", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i64 }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::Worklist.179"* }
%"class.blink::Worklist.179" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.228", %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.243", [4 x i8] }>
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { float }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.253", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.262" }
%"class.WTF::Vector.262" = type { %"class.WTF::VectorBuffer.263" }
%"class.WTF::VectorBuffer.263" = type { %"class.WTF::VectorBufferBase.264" }
%"class.WTF::VectorBufferBase.264" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.276" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.179"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.186"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.193"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.200"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.510" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.57" }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.47", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.318", %"class.blink::Member.335", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.344", %"class.blink::Member.473", %"class.blink::Member.497", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, %"class.blink::Member.2340" }
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::Supplement.2342"* }
%"class.blink::Supplement.2342" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.4" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::ContextLifecycleObserver"* }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.322" }
%"class.blink::WeakMember.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::Supplementable.4" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.5" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i8*, %"class.blink::Member.2236" }
%"class.blink::Member.2236" = type { %"class.blink::MemberBase.2237" }
%"class.blink::MemberBase.2237" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2238" }
%"class.blink::Member.2238" = type { %"class.blink::MemberBase.2239" }
%"class.blink::MemberBase.2239" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.38", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.44", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.14 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.14 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.27", %"class.std::__1::map.36"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.27" = type { %"class.std::__1::__tree.28" }
%"class.std::__1::__tree.28" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.36" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type <{ i32 (...)**, %class.scoped_refptr.51, %"class.base::UnguessableToken", i8, [7 x i8] }>
%class.scoped_refptr.51 = type { %"class.blink::scheduler::EventLoop"* }
%"class.blink::scheduler::EventLoop" = type { %"class.WTF::RefCounted.52", %"class.v8::Isolate"*, i8, %"class.WTF::Deque", %"class.std::__1::unique_ptr.62", %"class.WTF::HashSet.68" }
%"class.WTF::RefCounted.52" = type { %"class.base::RefCounted.53" }
%"class.base::RefCounted.53" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<base::OnceCallback<void ()>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<base::OnceCallback<void ()>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.v8::MicrotaskQueue"* }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.WTF::HashSet.68" = type { %"class.WTF::HashTable.69" }
%"class.WTF::HashTable.69" = type <{ %"class.blink::FrameOrWorkerScheduler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.72", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.78", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.78" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.blink::Member.88"*, i32, i32 }
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type { %"class.blink::Event", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.103", %"class.blink::WorldSafeV8Reference", %class.scoped_refptr.316 }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.97", %"class.blink::Member.97", %"class.blink::Member.99", %"class.blink::Member.101", %"class.base::TimeTicks" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.92" }
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { i64 }
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::EventTarget"* }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::Event"* }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.106", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.115", %class.scoped_refptr.118 }
%"class.blink::TraceWrapperV8Reference.115" = type { %"class.v8::TracedReference.116" }
%"class.v8::TracedReference.116" = type { %"class.v8::BasicTracedReference.117" }
%"class.v8::BasicTracedReference.117" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.118 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.119", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.119" = type { %"class.base::RefCounted.120" }
%"class.base::RefCounted.120" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.123" }
%"class.blink::HeapHashMap.123" = type { %"class.WTF::HashMap.126" }
%"class.WTF::HashMap.126" = type { %"class.WTF::HashTable.127" }
%"class.WTF::HashTable.127" = type <{ %"struct.WTF::KeyValuePair.129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.129" = type { %"class.blink::WeakMember.130", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.316 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type { %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.WTF::HashMap.324", %"class.WTF::HashSet.329", i8, %"class.blink::HeapMojoAssociatedRemote" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.328" = type { %"class.WTF::String", %"class.blink::URLRegistry"* }
%"class.blink::URLRegistry" = type opaque
%"class.WTF::HashSet.329" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.333" }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BlobURLStore, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BlobURLStore, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2242" }
%"class.mojo::AssociatedRemote.2242" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2243" }
%"class.mojo::internal::AssociatedInterfacePtrState.2243" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2244" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.394", i32 }>
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.397", %"class.absl::optional.398", %"class.absl::optional.403", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.417", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.439", %"class.std::__1::map.450", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.459", i8, %class.scoped_refptr.408, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.460" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.397" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.398" = type { %"class.absl::optional_internal::optional_data.399" }
%"class.absl::optional_internal::optional_data.399" = type { %"class.absl::optional_internal::optional_data_base.400" }
%"class.absl::optional_internal::optional_data_base.400" = type { %"class.absl::optional_internal::optional_data_dtor_base.401" }
%"class.absl::optional_internal::optional_data_dtor_base.401" = type { i8, %union.anon.402 }
%union.anon.402 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.403" = type { %"class.absl::optional_internal::optional_data.404" }
%"class.absl::optional_internal::optional_data.404" = type { %"class.absl::optional_internal::optional_data_base.405" }
%"class.absl::optional_internal::optional_data_base.405" = type { %"class.absl::optional_internal::optional_data_dtor_base.406" }
%"class.absl::optional_internal::optional_data_dtor_base.406" = type { i8, %union.anon.407 }
%union.anon.407 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.408, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.410" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.410" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.509", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.408, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.509" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.416 }
%class.scoped_refptr.416 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.420", %class.scoped_refptr.421 }
%"class.base::RepeatingCallback.420" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.421 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.422", [4 x i8] }>
%"class.base::RefCountedThreadSafe.422" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.432", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.438" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.438" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.439" = type { %"class.std::__1::__tree.440" }
%"class.std::__1::__tree.440" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.441", %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.450" = type { %"class.std::__1::__tree.451" }
%"class.std::__1::__tree.451" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.452", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::OnceCallback.459" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.408 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.409" }>
%"class.base::RefCountedThreadSafe.409" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.460" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.2244" = type { %"class.std::__1::__compressed_pair.2245" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.2246" }
%"struct.std::__1::__compressed_pair_elem.2246" = type { %"class.blink::mojom::blink::BlobURLStoreProxy"* }
%"class.blink::mojom::blink::BlobURLStoreProxy" = type { %"class.blink::mojom::blink::BlobURLStore", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BlobURLStore" = type { i32 (...)** }
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.337", i32, i32 }
%"class.blink::HeapHashMap.337" = type { %"class.WTF::HashMap.340" }
%"class.WTF::HashMap.340" = type { %"class.WTF::HashTable.341" }
%"class.WTF::HashTable.341" = type <{ %"struct.WTF::KeyValuePair.343"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.343" = type opaque
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.347" }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.350" }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352" }
%"class.WTF::VectorBufferBase.352" = type { %"class.mojo::StructPtr.353"*, i32, i32 }
%"class.mojo::StructPtr.353" = type { %"class.std::__1::unique_ptr.354" }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.357", %"class.WTF::HashMap.364", %"class.WTF::HashMap.369", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.374", i32, %"class.mojo::StructPtr.379", %"class.WTF::Vector.374" }
%"class.mojo::StructPtr.357" = type { %"class.std::__1::unique_ptr.358" }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.364" = type { %"class.WTF::HashTable.365" }
%"class.WTF::HashTable.365" = type <{ %"struct.WTF::KeyValuePair.368"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.368" = type opaque
%"class.WTF::HashMap.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"struct.WTF::KeyValuePair.373"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.373" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.379" = type { %"class.std::__1::unique_ptr.380" }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.374", i8, i8, [6 x i8] }>
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.464" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.477", %"class.WTF::HashSet.477", %"class.WTF::HashSet.477", %"class.WTF::HashMap.481", %"class.std::__1::unique_ptr.486", %"class.blink::Member", %"class.WTF::HashMap.492" }
%"class.WTF::HashSet.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"struct.WTF::KeyValuePair.485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.485" = type { i32, %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1812" }
%"class.base::time_internal::TimeBase.1812" = type { i64 }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.2264" }
%"class.WTF::Vector.2264" = type { %"class.WTF::VectorBuffer.2265" }
%"class.WTF::VectorBuffer.2265" = type { %"class.WTF::VectorBufferBase.2266" }
%"class.WTF::VectorBufferBase.2266" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.2267" }
%"class.absl::optional.2267" = type { %"class.absl::optional_internal::optional_data.2268" }
%"class.absl::optional_internal::optional_data.2268" = type { %"class.absl::optional_internal::optional_data_base.2269" }
%"class.absl::optional_internal::optional_data_base.2269" = type { %"class.absl::optional_internal::optional_data_dtor_base.2270" }
%"class.absl::optional_internal::optional_data_dtor_base.2270" = type { i8, %union.anon.2271 }
%union.anon.2271 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.335", i8, [7 x i8], %"class.WTF::Vector.350", %"class.blink::HeapVector.501", i8, [7 x i8], %"class.WTF::HashSet.44", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.501" = type { %"class.WTF::Vector.504" }
%"class.WTF::Vector.504" = type { %"class.WTF::VectorBuffer.505" }
%"class.WTF::VectorBuffer.505" = type { %"class.WTF::VectorBufferBase.506" }
%"class.WTF::VectorBufferBase.506" = type { %"class.blink::Member.507"*, i32, i32 }
%"class.blink::Member.507" = type opaque
%"class.blink::ExecutionContextCSPDelegate" = type { %"class.blink::ContentSecurityPolicyDelegate", %"class.blink::Member" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase" = type <{ %"class.std::__1::unique_ptr.394", i32, [4 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.316, %"class.blink::Member.519", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.523", %"class.blink::HeapHashMap.532", %"class.std::__1::unique_ptr.542", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.554", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.523" = type { %"class.WTF::HashMap.526" }
%"class.WTF::HashMap.526" = type { %"class.WTF::HashTable.527" }
%"class.WTF::HashTable.527" = type <{ %"struct.WTF::KeyValuePair.529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.529" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.532" = type { %"class.WTF::HashMap.535" }
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.538"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.538" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.539" }
%"class.blink::TraceWrapperV8Reference.539" = type { %"class.v8::TracedReference.540" }
%"class.v8::TracedReference.540" = type { %"class.v8::BasicTracedReference.541" }
%"class.v8::BasicTracedReference.541" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.545" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.554" = type { %"class.v8::Persistent.555" }
%"class.v8::Persistent.555" = type { %"class.v8::PersistentBase.556" }
%"class.v8::PersistentBase.556" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.564" }
%"class.blink::Persistent.564" = type { %"class.blink::PersistentBase.565" }
%"class.blink::PersistentBase.565" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.blink::ExecutionContextLifecycleStateObserver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8] }
%"class.mojo::StructPtr.567" = type { %"class.std::__1::unique_ptr.568" }
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::mojom::blink::InspectorIssueInfo"* }
%"class.blink::mojom::blink::InspectorIssueInfo" = type { i32, %"class.mojo::StructPtr.571" }
%"class.mojo::StructPtr.571" = type { %"class.std::__1::unique_ptr.572" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::mojom::blink::InspectorIssueDetails"* }
%"class.blink::mojom::blink::InspectorIssueDetails" = type { %"class.mojo::StructPtr.575", %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.616", %"class.mojo::StructPtr.623", %"class.mojo::StructPtr.632", %"class.mojo::StructPtr.639", %"class.mojo::StructPtr.646", %"class.mojo::StructPtr.653" }
%"class.mojo::StructPtr.575" = type { %"class.std::__1::unique_ptr.576" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* }
%"class.blink::mojom::blink::SameSiteCookieIssueDetails" = type { %"class.mojo::InlinedStructPtr.579", %"class.WTF::Vector.581", %"class.WTF::Vector.586", i32, %"class.absl::optional.591", %"class.absl::optional.591", %"class.mojo::InlinedStructPtr.602" }
%"class.mojo::InlinedStructPtr.579" = type <{ %"class.blink::mojom::blink::AffectedCookie", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedCookie" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { i32*, i32, i32 }
%"class.WTF::Vector.586" = type { %"class.WTF::VectorBuffer.587" }
%"class.WTF::VectorBuffer.587" = type { %"class.WTF::VectorBufferBase.588" }
%"class.WTF::VectorBufferBase.588" = type { i32*, i32, i32 }
%"class.absl::optional.591" = type { %"class.absl::optional_internal::optional_data.592" }
%"class.absl::optional_internal::optional_data.592" = type { %"class.absl::optional_internal::optional_data_base.593" }
%"class.absl::optional_internal::optional_data_base.593" = type { %"class.absl::optional_internal::optional_data_dtor_base.594" }
%"class.absl::optional_internal::optional_data_dtor_base.594" = type { i8, %union.anon.595 }
%union.anon.595 = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.596" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.blink::KURL"* }
%"class.mojo::InlinedStructPtr.602" = type <{ %"class.blink::mojom::blink::AffectedRequest", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedRequest" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.607" = type { %"class.std::__1::unique_ptr.608" }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.blink::mojom::blink::MixedContentIssueDetails"* }
%"class.blink::mojom::blink::MixedContentIssueDetails" = type { i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.602", %"class.mojo::InlinedStructPtr.611" }
%"class.mojo::InlinedStructPtr.611" = type <{ %"class.blink::mojom::blink::AffectedFrame", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedFrame" = type { %"class.WTF::String" }
%"class.mojo::StructPtr.616" = type { %"class.std::__1::unique_ptr.617" }
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* }
%"class.blink::mojom::blink::BlockedByResponseIssueDetails" = type { %"class.mojo::InlinedStructPtr.602", %"class.mojo::InlinedStructPtr.611", %"class.mojo::InlinedStructPtr.611", i32, [4 x i8] }
%"class.mojo::StructPtr.623" = type { %"class.std::__1::unique_ptr.624" }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* }
%"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails" = type <{ %"class.absl::optional.591", %"class.WTF::String", i8, [3 x i8], i32, %"class.mojo::InlinedStructPtr.611", %"class.mojo::InlinedStructPtr.627", i32, [4 x i8] }>
%"class.mojo::InlinedStructPtr.627" = type <{ %"class.blink::mojom::blink::AffectedLocation", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedLocation" = type { %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.632" = type { %"class.std::__1::unique_ptr.633" }
%"class.std::__1::unique_ptr.633" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* }
%"class.blink::mojom::blink::SharedArrayBufferIssueDetails" = type { %"class.mojo::InlinedStructPtr.627", i8, i32 }
%"class.mojo::StructPtr.639" = type { %"class.std::__1::unique_ptr.640" }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::mojom::blink::TrustedWebActivityIssueDetails"* }
%"class.blink::mojom::blink::TrustedWebActivityIssueDetails" = type { %"class.blink::KURL", i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.646" = type { %"class.std::__1::unique_ptr.647" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.blink::mojom::blink::HeavyAdIssueDetails"* }
%"class.blink::mojom::blink::HeavyAdIssueDetails" = type { i32, i32, %"class.mojo::InlinedStructPtr.611" }
%"class.mojo::StructPtr.653" = type { %"class.std::__1::unique_ptr.654" }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.blink::mojom::blink::LowTextContrastIssue"* }
%"class.blink::mojom::blink::LowTextContrastIssue" = type { i32, %"class.WTF::String", float, float, float, %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.103", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.668", %"class.WTF::Vector.670" }
%"class.blink::WeakMember.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.848", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.856", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.864", %"class.blink::FrameLoader", %"class.blink::Member.881", %"class.blink::Member.883", %"class.blink::Member.912", %"class.blink::Member.914", %"class.blink::Member.916", %"class.blink::Member.918", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.920", %class.scoped_refptr.1140, %"class.blink::Member.1141", %"class.blink::Member.1143", %"class.blink::Member.1159", %"class.blink::Member.1161", %"class.blink::Member.1163", %"class.blink::Member.1165", %"class.blink::Member.1167", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1171", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1192", %"class.std::__1::unique_ptr.1193", %"class.absl::optional.835", i32, [4 x i8], %"class.std::__1::unique_ptr.1199", %"class.blink::HeapMojoAssociatedRemote.1205", %"class.blink::HeapMojoAssociatedRemote.1208", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1213", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1218", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1221", %"class.blink::Member.1223", %"class.blink::Member.1225", %"class.blink::Member.1227", %"class.mojo::StructPtr.1230", %"class.blink::Member.1239", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1241", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::Member.683", i8, i32, i8, i32, %"class.blink::Member.817", %"class.blink::Member.706", %"class.blink::FrameLifecycle", %"class.blink::Member.677", %"class.blink::Member.677", %"class.blink::Member.677", %"class.blink::Member.677", %"class.blink::Member.677", %"class.blink::Member.677", %"class.blink::Member.819", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.828", i8, %"class.base::UnguessableToken", %"class.absl::optional.830", %"class.absl::optional.835", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.677", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.677", %"class.blink::Member.706", %"class.blink::Member.708", %"class.blink::Member.710", i8, %"class.WTF::Vector.712" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.699" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.687" }
%"class.blink::HeapVector.687" = type { %"class.WTF::Vector.690" }
%"class.WTF::Vector.690" = type { %"class.WTF::VectorBuffer.691" }
%"class.WTF::VectorBuffer.691" = type { %"class.WTF::VectorBufferBase.692", [32 x i8] }
%"class.WTF::VectorBufferBase.692" = type { %"struct.std::__1::pair.693"*, i32, i32 }
%"struct.std::__1::pair.693" = type { %"class.WTF::AtomicString", %"class.blink::Member.694" }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::HeapVector.696"* }
%"class.blink::HeapVector.696" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.WTF::Vector.702"* }
%"class.WTF::Vector.702" = type opaque
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.712" = type { %"class.WTF::VectorBuffer.713" }
%"class.WTF::VectorBuffer.713" = type { %"class.WTF::VectorBufferBase.714" }
%"class.WTF::VectorBufferBase.714" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.715", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.715" = type { %"class.base::StrongAlias.716" }
%"class.base::StrongAlias.716" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.809" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.717, %"class.std::__1::unique_ptr.394", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.408, i32 }>
%class.scoped_refptr.717 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.408, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.775", %"class.absl::optional.780", %"class.absl::optional.734", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.800", i8, [7 x i8], %class.scoped_refptr.408, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.422" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.408, %"class.std::__1::unique_ptr.718", %"class.absl::optional.728", %"struct.std::__1::atomic.312", i8, i8, i8, i8, i32, i32, %"class.absl::optional.734", %"class.std::__1::unique_ptr.739", i8, i64, %class.scoped_refptr.772, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.774" }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.408, i8, %"class.mojo::ScopedHandleBase.721", %class.scoped_refptr.722, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.723", i8*, %"class.base::WeakPtrFactory.724" }
%"class.mojo::ScopedHandleBase.721" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.722 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.723" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.724" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.728" = type { %"class.absl::optional_internal::optional_data.729" }
%"class.absl::optional_internal::optional_data.729" = type { %"class.absl::optional_internal::optional_data_base.730" }
%"class.absl::optional_internal::optional_data_base.730" = type { %"class.absl::optional_internal::optional_data_dtor_base.731" }
%"class.absl::optional_internal::optional_data_dtor_base.731" = type { i8, %union.anon.732 }
%union.anon.732 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.733", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.733" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.742", i8, i64, %class.scoped_refptr.743, %class.scoped_refptr.768 }
%"class.base::RepeatingCallback.742" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.743 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.744", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.746", %"class.std::__1::map.757", i8, [7 x i8] }>
%"class.base::RefCounted.744" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.745 }
%class.scoped_refptr.745 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.746" = type { %"class.std::__1::__tree.747" }
%"class.std::__1::__tree.747" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.748", %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.757" = type { %"class.std::__1::__tree.758" }
%"class.std::__1::__tree.758" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.759", %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.scoped_refptr.768 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.772 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.773 }
%class.scoped_refptr.773 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.774" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.775" = type { %"class.absl::optional_internal::optional_data.776" }
%"class.absl::optional_internal::optional_data.776" = type { %"class.absl::optional_internal::optional_data_base.777" }
%"class.absl::optional_internal::optional_data_base.777" = type { %"class.absl::optional_internal::optional_data_dtor_base.778" }
%"class.absl::optional_internal::optional_data_dtor_base.778" = type { i8, %union.anon.779 }
%union.anon.779 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.780" = type { %"class.absl::optional_internal::optional_data.781" }
%"class.absl::optional_internal::optional_data.781" = type { %"class.absl::optional_internal::optional_data_base.782" }
%"class.absl::optional_internal::optional_data_base.782" = type { %"class.absl::optional_internal::optional_data_dtor_base.783" }
%"class.absl::optional_internal::optional_data_dtor_base.783" = type { i8, [7 x i8], %union.anon.784 }
%union.anon.784 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.734" = type { %"class.absl::optional_internal::optional_data.735" }
%"class.absl::optional_internal::optional_data.735" = type { %"class.absl::optional_internal::optional_data_base.736" }
%"class.absl::optional_internal::optional_data_base.736" = type { %"class.absl::optional_internal::optional_data_dtor_base.737" }
%"class.absl::optional_internal::optional_data_dtor_base.737" = type { i8, %union.anon.738 }
%union.anon.738 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.785 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.785 = type { %"class.std::__1::map.788" }
%"class.std::__1::map.788" = type { %"class.std::__1::__tree.789" }
%"class.std::__1::__tree.789" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.790", %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.799"*, i64 }
%"class.std::__1::unique_ptr.799" = type opaque
%"class.std::__1::map.800" = type { %"class.std::__1::__tree.801" }
%"class.std::__1::__tree.801" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::Frame"* }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.669" }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.677", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.820" }
%"class.std::__1::vector.820" = type { %"class.std::__1::__vector_base.821" }
%"class.std::__1::__vector_base.821" = type { %"struct.std::__1::pair.822"*, %"struct.std::__1::pair.822"*, %"class.std::__1::__compressed_pair.823" }
%"struct.std::__1::pair.822" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::pair.822"* }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.830" = type { %"class.absl::optional_internal::optional_data.831" }
%"class.absl::optional_internal::optional_data.831" = type { %"class.absl::optional_internal::optional_data_base.832" }
%"class.absl::optional_internal::optional_data_base.832" = type { %"class.absl::optional_internal::optional_data_dtor_base.833" }
%"class.absl::optional_internal::optional_data_dtor_base.833" = type { i8, %union.anon.834 }
%union.anon.834 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.840 }
%class.scoped_refptr.840 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.841" }
%"class.blink::HeapHashSet.841" = type { %"class.WTF::HashSet.844" }
%"class.WTF::HashSet.844" = type { %"class.WTF::HashTable.845" }
%"class.WTF::HashTable.845" = type <{ %"class.blink::WeakMember.847"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.847" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.848" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.849" }
%"class.blink::HeapHashMap.849" = type { %"class.WTF::HashMap.852" }
%"class.WTF::HashMap.852" = type { %"class.WTF::HashTable.853" }
%"class.WTF::HashTable.853" = type <{ %"struct.WTF::KeyValuePair.855"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.855" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.862" }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2276", i64, %"class.std::__1::map.2277", i8*, i64, %"class.base::WeakPtrFactory.2286" }
%"class.base::RepeatingCallback.2276" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2277" = type { %"class.std::__1::__tree.2278" }
%"class.std::__1::__tree.2278" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2279", %"class.std::__1::__compressed_pair.2283" }
%"class.std::__1::__compressed_pair.2279" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.2283" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::WeakPtrFactory.2286" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.864" = type { %"class.WTF::HashSet.867" }
%"class.WTF::HashSet.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"class.blink::WeakMember.870"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.870" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.819", %"class.blink::Member.871", %"class.blink::Member.873", %"class.std::__1::unique_ptr.875", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.329" }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.12 }
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1946", %"class.blink::Member.819", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1951", i8, i32, %"class.blink::Color", %"class.absl::optional.1953", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1958", %"class.blink::Member.1960", %"class.blink::Member.1960", %"class.std::__1::unique_ptr.1963", i32, [4 x i8], %"class.WTF::HashSet.1966", %"class.blink::Member.1973", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1975", %"class.blink::HeapHashSet.1982", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1990", i8, %"class.blink::Member.1996", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2008", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2022", i8, %"class.std::__1::unique_ptr.2028", %"class.std::__1::unique_ptr.2144", %"class.WTF::Vector.2150", i32, %class.scoped_refptr.2155, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2156", %"class.blink::Member.2158", %"class.blink::Member.2160", %"class.blink::HeapHashSet.2162", %"class.blink::HeapHashSet.2169", %"class.std::__1::unique_ptr.2176", %"class.std::__1::unique_ptr.2182", %"class.WTF::Vector.1406" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1946" = type { %"class.WTF::HashTable.1947" }
%"class.WTF::HashTable.1947" = type <{ %class.scoped_refptr.1950*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1950 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1951" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1952", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1434, %"class.base::WeakPtrFactory.1435" }
%class.scoped_refptr.1434 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1435" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1952" = type { %"class.blink::MemberBase.882" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1953" = type { %"class.absl::optional_internal::optional_data.1954" }
%"class.absl::optional_internal::optional_data.1954" = type { %"class.absl::optional_internal::optional_data_base.1955" }
%"class.absl::optional_internal::optional_data_base.1955" = type { %"class.absl::optional_internal::optional_data_dtor_base.1956" }
%"class.absl::optional_internal::optional_data_dtor_base.1956" = type { i8, %union.anon.1957 }
%union.anon.1957 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1960" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::HeapHashSet.1962"* }
%"class.blink::HeapHashSet.1962" = type opaque
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"class.WTF::HashSet.1966"* }
%"class.WTF::HashSet.1966" = type { %"class.WTF::HashTable.1967" }
%"class.WTF::HashTable.1967" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1975" = type { %"class.WTF::HashSet.1978" }
%"class.WTF::HashSet.1978" = type { %"class.WTF::HashTable.1979" }
%"class.WTF::HashTable.1979" = type <{ %"class.blink::Member.1981"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1981" = type opaque
%"class.blink::HeapHashSet.1982" = type { %"class.WTF::HashSet.1985" }
%"class.WTF::HashSet.1985" = type { %"class.WTF::HashTable.1986" }
%"class.WTF::HashTable.1986" = type <{ %"class.blink::Member.1988"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1990" = type { %"class.std::__1::__compressed_pair.1991" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.1992" }
%"struct.std::__1::__compressed_pair_elem.1992" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1996" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2000", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2003" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2004", i32, i32 }
%"class.WTF::Vector.2004" = type { %"class.WTF::VectorBuffer.2005" }
%"class.WTF::VectorBuffer.2005" = type { %"class.WTF::VectorBufferBase.2006" }
%"class.WTF::VectorBufferBase.2006" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2008" = type { %"class.WTF::LinkedHashSet.2011" }
%"class.WTF::LinkedHashSet.2011" = type { %"class.WTF::HashMap.2012", %"class.WTF::VectorBackedLinkedList.2016" }
%"class.WTF::HashMap.2012" = type { %"class.WTF::HashTable.2013" }
%"class.WTF::HashTable.2013" = type <{ %"struct.WTF::KeyValuePair.2015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2015" = type opaque
%"class.WTF::VectorBackedLinkedList.2016" = type { %"class.WTF::Vector.2017", i32, i32 }
%"class.WTF::Vector.2017" = type { %"class.WTF::VectorBuffer.2018" }
%"class.WTF::VectorBuffer.2018" = type { %"class.WTF::VectorBufferBase.2019" }
%"class.WTF::VectorBufferBase.2019" = type { %"class.WTF::VectorBackedLinkedListNode.2020"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2020" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2022" = type { %"class.std::__1::__compressed_pair.2023" }
%"class.std::__1::__compressed_pair.2023" = type { %"struct.std::__1::__compressed_pair_elem.2024" }
%"struct.std::__1::__compressed_pair_elem.2024" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2028" = type { %"class.std::__1::__compressed_pair.2029" }
%"class.std::__1::__compressed_pair.2029" = type { %"struct.std::__1::__compressed_pair_elem.2030" }
%"struct.std::__1::__compressed_pair_elem.2030" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2031, %class.scoped_refptr.2031, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2121", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2126", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2031 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2032", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2039" }
%"class.WTF::RefCounted.2032" = type { %"class.base::RefCounted.2033" }
%"class.base::RefCounted.2033" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2034", i32, [4 x i8] }>
%"class.WTF::Vector.2034" = type { %"class.WTF::VectorBuffer.2035" }
%"class.WTF::VectorBuffer.2035" = type { %"class.WTF::VectorBufferBase.2036" }
%"class.WTF::VectorBufferBase.2036" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2039" = type { %"class.WTF::VectorBuffer.2040" }
%"class.WTF::VectorBuffer.2040" = type { %"class.WTF::VectorBufferBase.2041" }
%"class.WTF::VectorBufferBase.2041" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2045", %"class.std::__1::unique_ptr.2094", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2042, %class.scoped_refptr.2043, %class.scoped_refptr.2044 }
%class.scoped_refptr.2042 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2058", i8, i8, %class.scoped_refptr.2042, i32, i32 }
%"class.WTF::RefCounted.2058" = type { %"class.base::RefCounted.2059" }
%"class.base::RefCounted.2059" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2043 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2206" }
%"class.blink::PaintPropertyNode.2206" = type { %"class.WTF::RefCounted.2207", i8, i8, %class.scoped_refptr.2043, i32, i32 }
%"class.WTF::RefCounted.2207" = type { %"class.base::RefCounted.2208" }
%"class.base::RefCounted.2208" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2044 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2203" }
%"class.blink::PaintPropertyNode.2203" = type { %"class.WTF::RefCounted.2204", i8, i8, %class.scoped_refptr.2044, i32, i32 }
%"class.WTF::RefCounted.2204" = type { %"class.base::RefCounted.2205" }
%"class.base::RefCounted.2205" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2048", %"class.WTF::Vector.2053", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2048" = type { %"class.WTF::VectorBuffer.2049" }
%"class.WTF::VectorBuffer.2049" = type { %"class.WTF::VectorBufferBase.2050" }
%"class.WTF::VectorBufferBase.2050" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2053" = type { %"class.WTF::VectorBuffer.2054" }
%"class.WTF::VectorBuffer.2054" = type { %"class.WTF::VectorBufferBase.2055" }
%"class.WTF::VectorBufferBase.2055" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2073" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2066, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2067", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2060" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.2060" = type { %"class.std::__1::__compressed_pair.2061" }
%"class.std::__1::__compressed_pair.2061" = type { %"struct.std::__1::__compressed_pair_elem.2062" }
%"struct.std::__1::__compressed_pair_elem.2062" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2066 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2188", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2188" = type { %"class.WTF::RefCounted.2189", i8, i8, %class.scoped_refptr.2066, i32, i32 }
%"class.WTF::RefCounted.2189" = type { %"class.base::RefCounted.2190" }
%"class.base::RefCounted.2190" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2191" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2191" = type { %"class.absl::optional_internal::optional_data.2192" }
%"class.absl::optional_internal::optional_data.2192" = type { %"class.absl::optional_internal::optional_data_base.2193" }
%"class.absl::optional_internal::optional_data_base.2193" = type { %"class.absl::optional_internal::optional_data_dtor_base.2194" }
%"class.absl::optional_internal::optional_data_dtor_base.2194" = type { i8, %union.anon.2195 }
%union.anon.2195 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2196", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2196" = type { %"class.std::__1::__vector_base.2197" }
%"class.std::__1::__vector_base.2197" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2198" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2198" = type { %"struct.std::__1::__compressed_pair_elem.2199" }
%"struct.std::__1::__compressed_pair_elem.2199" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2067" = type { %"class.std::__1::__compressed_pair.2068" }
%"class.std::__1::__compressed_pair.2068" = type { %"struct.std::__1::__compressed_pair_elem.2069" }
%"struct.std::__1::__compressed_pair_elem.2069" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2073" = type { %"class.std::__1::__compressed_pair.2074" }
%"class.std::__1::__compressed_pair.2074" = type { %"struct.std::__1::__compressed_pair_elem.2075" }
%"struct.std::__1::__compressed_pair_elem.2075" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2076", %"class.std::__1::unique_ptr.2082", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2076" = type { %"class.std::__1::__compressed_pair.2077" }
%"class.std::__1::__compressed_pair.2077" = type { %"struct.std::__1::__compressed_pair_elem.2078" }
%"struct.std::__1::__compressed_pair_elem.2078" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2094" = type { %"class.std::__1::__compressed_pair.2095" }
%"class.std::__1::__compressed_pair.2095" = type { %"struct.std::__1::__compressed_pair_elem.2096" }
%"struct.std::__1::__compressed_pair_elem.2096" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2097", %"class.absl::optional.2097" }
%"class.absl::optional.2097" = type { %"class.absl::optional_internal::optional_data.2098" }
%"class.absl::optional_internal::optional_data.2098" = type { %"class.absl::optional_internal::optional_data_base.2099" }
%"class.absl::optional_internal::optional_data_base.2099" = type { %"class.absl::optional_internal::optional_data_dtor_base.2100" }
%"class.absl::optional_internal::optional_data_dtor_base.2100" = type { i8, [3 x i8], %union.anon.2101 }
%union.anon.2101 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2039"*, %"class.absl::optional.2107", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2107" = type { %"class.absl::optional_internal::optional_data.2108" }
%"class.absl::optional_internal::optional_data.2108" = type { %"class.absl::optional_internal::optional_data_base.2109" }
%"class.absl::optional_internal::optional_data_base.2109" = type { %"class.absl::optional_internal::optional_data_dtor_base.2110" }
%"class.absl::optional_internal::optional_data_dtor_base.2110" = type { i8, %union.anon.2111 }
%union.anon.2111 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2112", %"class.WTF::Vector.2116" }
%"class.WTF::Vector.2112" = type { %"class.WTF::VectorBuffer.2113" }
%"class.WTF::VectorBuffer.2113" = type { %"class.WTF::VectorBufferBase.672", [128 x i8] }
%"class.WTF::VectorBufferBase.672" = type { i32*, i32, i32 }
%"class.WTF::Vector.2116" = type { %"class.WTF::VectorBuffer.2117" }
%"class.WTF::VectorBuffer.2117" = type { %"class.WTF::VectorBufferBase.2118", [128 x i8] }
%"class.WTF::VectorBufferBase.2118" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2121" = type { %"class.WTF::VectorBuffer.2122" }
%"class.WTF::VectorBuffer.2122" = type { %"class.WTF::VectorBufferBase.2123" }
%"class.WTF::VectorBufferBase.2123" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2126" = type { %"class.WTF::HashTable.2127" }
%"class.WTF::HashTable.2127" = type <{ %"struct.WTF::KeyValuePair.2130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2130" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2131", %"class.WTF::Vector.2136" }
%"class.WTF::HashMap.2131" = type { %"class.WTF::HashTable.2132" }
%"class.WTF::HashTable.2132" = type <{ %"struct.WTF::KeyValuePair.2135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2135" = type opaque
%"class.WTF::Vector.2136" = type { %"class.WTF::VectorBuffer.2137" }
%"class.WTF::VectorBuffer.2137" = type { %"class.WTF::VectorBufferBase.2138" }
%"class.WTF::VectorBufferBase.2138" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2144" = type { %"class.std::__1::__compressed_pair.2145" }
%"class.std::__1::__compressed_pair.2145" = type { %"struct.std::__1::__compressed_pair_elem.2146" }
%"struct.std::__1::__compressed_pair_elem.2146" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2150" = type { %"class.WTF::VectorBuffer.2151" }
%"class.WTF::VectorBuffer.2151" = type { %"class.WTF::VectorBufferBase.2152" }
%"class.WTF::VectorBufferBase.2152" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2155 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2156" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2158" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2162" = type { %"class.WTF::HashSet.2165" }
%"class.WTF::HashSet.2165" = type { %"class.WTF::HashTable.2166" }
%"class.WTF::HashTable.2166" = type <{ %"class.blink::WeakMember.2168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2168" = type opaque
%"class.blink::HeapHashSet.2169" = type { %"class.WTF::HashSet.2172" }
%"class.WTF::HashSet.2172" = type { %"class.WTF::HashTable.2173" }
%"class.WTF::HashTable.2173" = type <{ %"class.blink::WeakMember.2175"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2175" = type opaque
%"class.std::__1::unique_ptr.2176" = type { %"class.std::__1::__compressed_pair.2177" }
%"class.std::__1::__compressed_pair.2177" = type { %"struct.std::__1::__compressed_pair_elem.2178" }
%"struct.std::__1::__compressed_pair_elem.2178" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2182" = type { %"class.std::__1::__compressed_pair.2183" }
%"class.std::__1::__compressed_pair.2183" = type { %"struct.std::__1::__compressed_pair_elem.2184" }
%"struct.std::__1::__compressed_pair_elem.2184" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1829", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1829" = type { %"class.absl::optional_internal::optional_data.1830" }
%"class.absl::optional_internal::optional_data.1830" = type { %"class.absl::optional_internal::optional_data_base.1831" }
%"class.absl::optional_internal::optional_data_base.1831" = type { %"class.absl::optional_internal::optional_data_dtor_base.1832" }
%"class.absl::optional_internal::optional_data_dtor_base.1832" = type { i8, %union.anon.1833 }
%union.anon.1833 = type { %"class.base::Time" }
%"class.WTF::Vector.1406" = type { %"class.WTF::VectorBuffer" }
%"class.blink::Member.883" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.896" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.885", %"class.blink::Member.885" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.885", %"class.blink::Member.887", %"class.blink::Member.885", %"class.blink::Member.885", %"class.blink::Member.889" }
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::Member.887", %"class.blink::Member.1322", %"class.blink::Member.1322", %"class.blink::Member.1344", %"class.blink::Member.1346", %"class.blink::Member.1348", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1353", %"class.blink::HeapVector.1355" }
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1398", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1406", %"class.WTF::Vector.1406", i8, i32, %"class.blink::Member.1409", %"class.blink::Member", %"class.blink::Member.1411", %"class.blink::Member.1413", %"class.blink::Member.1415", %"class.blink::Member.1417", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1419", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1425", %"class.blink::Member.1427", %"class.blink::Member.1361", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1429", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1337", %"class.blink::Member.883", %"class.blink::Member.1437", %"class.blink::Member.883", %"class.blink::Member.883", %"class.blink::Member.883", %"class.blink::UserActionElementSet", %"class.blink::Member.1446", double, double, i64, i64, %"class.blink::HeapHashSet.1448", %"class.blink::HeapHashSet.1455", i16, i8, %"class.blink::Member.1462", %"class.blink::Member.1464", %"class.blink::Member.1466", %"class.blink::Member.1468", %"class.blink::TextLinkColors", %"class.blink::Member.1470", i8, [7 x i8], %"class.blink::HeapHashMap.1472", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.883", %"class.WTF::Vector.1479", %"class.blink::Member.1484", %"class.blink::Member.1488", i8, %"class.blink::Member.883", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1490", %"class.blink::HeapVector.1492", %"class.std::__1::unique_ptr.1500", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1506", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1519", %"class.WTF::Vector.1521", i8, i8, %"class.std::__1::unique_ptr.1526", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1337", %"class.blink::HeapVector.1532", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1540", i8, i32, %"class.blink::Member.1542", %"class.blink::Member.1544", %"class.blink::Member.1546", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1548", %"class.WTF::HashMap.1550", %"class.blink::Member.1555", %"class.blink::Member.1557", %"class.blink::Member.1559", %"class.blink::Member.1561", %"class.blink::Member.1320", %"class.blink::Member.1320", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1563", i8, i32, %"class.blink::Member.1570", %"class.blink::Member.1572", i32, %"class.blink::Member.1574", %"class.blink::Member.1576", %"class.blink::Member.1578", %"class.std::__1::unique_ptr.1580", i64, %"class.std::__1::unique_ptr.1586", i32, i32, %"class.blink::Member.1592", %"class.blink::Member.1594", %"class.blink::Member.1596", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1598", %"class.WTF::Vector.1147", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1600", %"class.blink::Member.1607", %"class.std::__1::unique_ptr.1609", %"class.blink::Member.1615", i8, i8, %"class.WTF::String", %"class.blink::Member.1617", i8, [7 x i8], %"class.blink::HeapHashMap.1619", %"class.blink::HeapObserverSet.1626", %"class.blink::Member.1634", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1636", i32, i8, i8, %"class.blink::WeakMember.1638", %"class.blink::Member.1639" }
%"class.blink::Supplementable.1398" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1399" }
%"class.blink::HeapHashMap.1399" = type { %"class.WTF::HashMap.1402" }
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1405" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1654", %"class.blink::Member.1656", %"class.blink::Member.1660", %class.scoped_refptr.1434, %class.scoped_refptr.1434, %"class.blink::Member.1662", %"class.blink::Member.1664", %"class.blink::Member.1670", %"class.blink::Member.1674", %"class.blink::Member.1725", %"class.blink::HeapHashMap.1727", %"class.blink::HeapHashSet.1734", %"class.blink::HeapHashSet.1734", %"class.blink::HeapHashMap.1894", %"class.blink::HeapVector.1901", %"class.blink::Member.1909", %"class.blink::HeapTaskRunnerTimer.1911", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1913", %"class.WTF::Vector.1920", %"class.blink::HeapHashSet.1926", %"class.blink::HeapHashSet.1926", %"class.std::__1::unique_ptr.1932", %"class.base::WeakPtr.1719", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1938", %"class.blink::Member.1941", i8, i8, %"class.base::WeakPtrFactory.1943" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1668" }
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1678", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1680", %"class.WTF::HashSet.1685", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1689", %"class.std::__1::map.1696", %"class.std::__1::map.1707", %"class.std::__1::unique_ptr.1716", %"class.blink::Member.1664", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1723", %"class.mojo::InlinedStructPtr.1235", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1680" = type { %"class.WTF::HashTable.1681" }
%"class.WTF::HashTable.1681" = type <{ %"struct.WTF::KeyValuePair.1684"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1684" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1685" = type { %"class.WTF::HashTable.1686" }
%"class.WTF::HashTable.1686" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1689" = type { %"class.WTF::HashMap.1692" }
%"class.WTF::HashMap.1692" = type { %"class.WTF::HashTable.1693" }
%"class.WTF::HashTable.1693" = type <{ %"struct.WTF::KeyValuePair.1695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1695" = type opaque
%"class.std::__1::map.1696" = type { %"class.std::__1::__tree.1697" }
%"class.std::__1::__tree.1697" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1698", %"class.std::__1::__compressed_pair.1702" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.1702" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.1707" = type { %"class.std::__1::__tree.1708" }
%"class.std::__1::__tree.1708" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1709", %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unique_ptr.1716" = type { %"class.std::__1::__compressed_pair.1717" }
%"class.std::__1::__compressed_pair.1717" = type { %"struct.std::__1::__compressed_pair_elem.1718" }
%"struct.std::__1::__compressed_pair_elem.1718" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1719", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1723" = type { %"class.blink::MemberBase.1724" }
%"class.blink::MemberBase.1724" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1235" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1725" = type { %"class.blink::MemberBase.1726" }
%"class.blink::MemberBase.1726" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1727" = type { %"class.WTF::HashMap.1730" }
%"class.WTF::HashMap.1730" = type { %"class.WTF::HashTable.1731" }
%"class.WTF::HashTable.1731" = type <{ %"struct.WTF::KeyValuePair.1733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1733" = type opaque
%"class.blink::HeapHashSet.1734" = type { %"class.WTF::HashSet.1737" }
%"class.WTF::HashSet.1737" = type { %"class.WTF::HashTable.1738" }
%"class.WTF::HashTable.1738" = type <{ %"class.blink::WeakMember.1740"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1744", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1764", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1852", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1869", %"class.blink::ResourceResponse", %class.scoped_refptr.1871, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1744" = type { %"class.absl::optional_internal::optional_data.1745" }
%"class.absl::optional_internal::optional_data.1745" = type { %"class.absl::optional_internal::optional_data_base.1746" }
%"class.absl::optional_internal::optional_data_base.1746" = type { %"class.absl::optional_internal::optional_data_dtor_base.1747" }
%"class.absl::optional_internal::optional_data_dtor_base.1747" = type { i8, %union.anon.1748 }
%union.anon.1748 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1749", i8, %"class.absl::optional.1754", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1749" = type { %"class.absl::optional_internal::optional_data.1750" }
%"class.absl::optional_internal::optional_data.1750" = type { %"class.absl::optional_internal::optional_data_base.1751" }
%"class.absl::optional_internal::optional_data_base.1751" = type { %"class.absl::optional_internal::optional_data_dtor_base.1752" }
%"class.absl::optional_internal::optional_data_dtor_base.1752" = type { i8, [7 x i8], %union.anon.1753 }
%union.anon.1753 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1754" = type { %"class.absl::optional_internal::optional_data.1755" }
%"class.absl::optional_internal::optional_data.1755" = type { %"class.absl::optional_internal::optional_data_base.1756" }
%"class.absl::optional_internal::optional_data_base.1756" = type { %"class.absl::optional_internal::optional_data_dtor_base.1757" }
%"class.absl::optional_internal::optional_data_dtor_base.1757" = type { i8, %union.anon.1758 }
%union.anon.1758 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1759", %"class.WTF::Vector.374" }
%"class.WTF::Vector.1759" = type { %"class.WTF::VectorBuffer.1760" }
%"class.WTF::VectorBuffer.1760" = type { %"class.WTF::VectorBufferBase.1761" }
%"class.WTF::VectorBufferBase.1761" = type { i32*, i32, i32 }
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766" }
%"class.WTF::VectorBufferBase.1766" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1848" }
%"class.WTF::HashMap.1848" = type { %"class.WTF::HashTable.1849" }
%"class.WTF::HashTable.1849" = type <{ %"struct.WTF::KeyValuePair.1851"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1851" = type <{ %"class.blink::WeakMember.2335", i32, [4 x i8] }>
%"class.blink::WeakMember.2335" = type { %"class.blink::MemberBase.2336" }
%"class.blink::MemberBase.2336" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2337", [7 x i8], %"class.blink::Member.1907", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2337" = type { i8 }
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1741" }
%"class.blink::HeapHashSet.1852" = type { %"class.WTF::HashSet.1855" }
%"class.WTF::HashSet.1855" = type { %"class.WTF::HashTable.1856" }
%"class.WTF::HashTable.1856" = type <{ %"class.blink::WeakMember.1858"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1858" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1859", %"class.WTF::String", %"class.WTF::HashSet.1860", i8, i8, %class.scoped_refptr.118, %class.scoped_refptr.1865, %class.scoped_refptr.1867 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.1859" = type { i8 }
%"class.WTF::HashSet.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.std::__1::pair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1864" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1865 = type { %"class.base::RefCountedData.1866"* }
%"class.base::RefCountedData.1866" = type opaque
%class.scoped_refptr.1867 = type { %"class.base::RefCountedData.1868"* }
%"class.base::RefCountedData.1868" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.14, %class.scoped_refptr.14, %class.scoped_refptr.14, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1772, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1785", %"class.absl::optional.1790", %"class.absl::optional.1800", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.835", %"class.absl::optional.1800", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1800", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.835", %"class.absl::optional.1805", i8, %class.scoped_refptr.1810 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1767" }
%"class.WTF::HashMap.1767" = type { %"class.WTF::HashTable.1768" }
%"class.WTF::HashTable.1768" = type <{ %"struct.WTF::KeyValuePair.1771"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1771" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1772 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1773", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.1774", %class.scoped_refptr.1783, i8, %"class.url::Origin" }
%"class.base::RefCounted.1773" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.1774" = type { %"class.std::__1::vector.1775" }
%"class.std::__1::vector.1775" = type { %"class.std::__1::__vector_base.1776" }
%"class.std::__1::__vector_base.1776" = type { %"class.std::__1::unique_ptr.1777"*, %"class.std::__1::unique_ptr.1777"*, %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.2250" }
%"class.std::__1::__compressed_pair.2250" = type { %"struct.std::__1::__compressed_pair_elem.2251" }
%"struct.std::__1::__compressed_pair_elem.2251" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %"class.std::__1::unique_ptr.1777"* }
%class.scoped_refptr.1783 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1784", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1784" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1785" = type { %"class.absl::optional_internal::optional_data.1786" }
%"class.absl::optional_internal::optional_data.1786" = type { %"class.absl::optional_internal::optional_data_base.1787" }
%"class.absl::optional_internal::optional_data_base.1787" = type { %"class.absl::optional_internal::optional_data_dtor_base.1788" }
%"class.absl::optional_internal::optional_data_dtor_base.1788" = type { i8, %union.anon.1789 }
%union.anon.1789 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1790" = type { %"class.absl::optional_internal::optional_data.1791" }
%"class.absl::optional_internal::optional_data.1791" = type { %"class.absl::optional_internal::optional_data_base.1792" }
%"class.absl::optional_internal::optional_data_base.1792" = type { %"class.absl::optional_internal::optional_data_dtor_base.1793" }
%"class.absl::optional_internal::optional_data_dtor_base.1793" = type { i8, %union.anon.1794 }
%union.anon.1794 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1795", %"class.WTF::Vector.374", %"class.WTF::String" }
%"class.WTF::Vector.1795" = type { %"class.WTF::VectorBuffer.1796" }
%"class.WTF::VectorBuffer.1796" = type { %"class.WTF::VectorBufferBase.1797" }
%"class.WTF::VectorBufferBase.1797" = type { %class.scoped_refptr.14*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.398", %"class.absl::optional.398" }
%"class.absl::optional.1800" = type { %"class.absl::optional_internal::optional_data.1801" }
%"class.absl::optional_internal::optional_data.1801" = type { %"class.absl::optional_internal::optional_data_base.1802" }
%"class.absl::optional_internal::optional_data_base.1802" = type { %"class.absl::optional_internal::optional_data_dtor_base.1803" }
%"class.absl::optional_internal::optional_data_dtor_base.1803" = type { i8, %union.anon.1804 }
%union.anon.1804 = type { %"class.WTF::String" }
%"class.absl::optional.1805" = type { %"class.absl::optional_internal::optional_data.1806" }
%"class.absl::optional_internal::optional_data.1806" = type { %"class.absl::optional_internal::optional_data_base.1807" }
%"class.absl::optional_internal::optional_data_base.1807" = type { %"class.absl::optional_internal::optional_data_dtor_base.1808" }
%"class.absl::optional_internal::optional_data_dtor_base.1808" = type { i8, %union.anon.1809 }
%union.anon.1809 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%class.scoped_refptr.1810 = type { %"class.base::RefCountedData.1811"* }
%"class.base::RefCountedData.1811" = type { %"class.base::RefCountedThreadSafe.2255", %"class.base::internal::flat_tree.2256" }
%"class.base::RefCountedThreadSafe.2255" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2256" = type { %"class.std::__1::vector.2257" }
%"class.std::__1::vector.2257" = type { %"class.std::__1::__vector_base.2258" }
%"class.std::__1::__vector_base.2258" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2259" }
%"class.std::__1::__compressed_pair.2259" = type { %"struct.std::__1::__compressed_pair_elem.2260" }
%"struct.std::__1::__compressed_pair_elem.2260" = type { i32* }
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1813", %class.scoped_refptr.1827, %class.scoped_refptr.1828, %"struct.blink::CacheControlHeader", %"class.absl::optional.398", %"class.absl::optional.1829", %"class.absl::optional.1829", %"class.absl::optional.1829", i64, %"class.blink::KURL", %"class.WTF::Vector.1834", %"class.WTF::String", %"class.WTF::Vector.374", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.835", %"class.WTF::Vector.374", %"class.blink::KURL", %"class.absl::optional.1839" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1813" = type { %"class.absl::optional_internal::optional_data.1814" }
%"class.absl::optional_internal::optional_data.1814" = type { %"class.absl::optional_internal::optional_data_base.1815" }
%"class.absl::optional_internal::optional_data_base.1815" = type { %"class.absl::optional_internal::optional_data_dtor_base.1816" }
%"class.absl::optional_internal::optional_data_dtor_base.1816" = type { i8, %union.anon.1817 }
%union.anon.1817 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.374", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1818", %"class.WTF::Vector.1822" }
%"class.WTF::Vector.1818" = type { %"class.WTF::VectorBuffer.1819" }
%"class.WTF::VectorBuffer.1819" = type { %"class.WTF::VectorBufferBase.909" }
%"class.WTF::VectorBufferBase.909" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824" }
%"class.WTF::VectorBufferBase.1824" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1827 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1828 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1834" = type { %"class.WTF::VectorBuffer.1835" }
%"class.WTF::VectorBuffer.1835" = type { %"class.WTF::VectorBufferBase.1836" }
%"class.WTF::VectorBufferBase.1836" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1839" = type { %"class.absl::optional_internal::optional_data.1840" }
%"class.absl::optional_internal::optional_data.1840" = type { %"class.absl::optional_internal::optional_data_base.1841" }
%"class.absl::optional_internal::optional_data_base.1841" = type { %"class.absl::optional_internal::optional_data_dtor_base.1842" }
%"class.absl::optional_internal::optional_data_dtor_base.1842" = type { i8, %union.anon.1843 }
%union.anon.1843 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1871 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1872", i64, %"class.WTF::Vector.1874", %"class.WTF::Vector.1879" }
%"class.WTF::RefCounted.1872" = type { %"class.base::RefCounted.1873" }
%"class.base::RefCounted.1873" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1874" = type { %"class.WTF::VectorBuffer.1875" }
%"class.WTF::VectorBuffer.1875" = type { %"class.WTF::VectorBufferBase.1876" }
%"class.WTF::VectorBufferBase.1876" = type { i8*, i32, i32 }
%"class.WTF::Vector.1879" = type { %"class.WTF::VectorBuffer.1880" }
%"class.WTF::VectorBuffer.1880" = type { %"class.WTF::VectorBufferBase.1881" }
%"class.WTF::VectorBufferBase.1881" = type { %"class.std::__1::unique_ptr.1882"*, i32, i32 }
%"class.std::__1::unique_ptr.1882" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1885" }
%"class.std::__1::__tree.1885" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1886", %"class.std::__1::__compressed_pair.1890" }
%"class.std::__1::__compressed_pair.1886" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.1890" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.blink::HeapHashMap.1894" = type { %"class.WTF::HashMap.1897" }
%"class.WTF::HashMap.1897" = type { %"class.WTF::HashTable.1898" }
%"class.WTF::HashTable.1898" = type <{ %"struct.WTF::KeyValuePair.1900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1900" = type opaque
%"class.blink::HeapVector.1901" = type { %"class.WTF::Vector.1904" }
%"class.WTF::Vector.1904" = type { %"class.WTF::VectorBuffer.1905" }
%"class.WTF::VectorBuffer.1905" = type { %"class.WTF::VectorBufferBase.1906" }
%"class.WTF::VectorBufferBase.1906" = type { %"class.blink::Member.1907"*, i32, i32 }
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1911" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1912", { i64, i64 } }
%"class.blink::WeakMember.1912" = type { %"class.blink::MemberBase.1412" }
%"class.blink::HeapHashMap.1913" = type { %"class.WTF::HashMap.1916" }
%"class.WTF::HashMap.1916" = type { %"class.WTF::HashTable.1917" }
%"class.WTF::HashTable.1917" = type <{ %"struct.WTF::KeyValuePair.1919"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1919" = type opaque
%"class.WTF::Vector.1920" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1922" }
%"class.WTF::VectorBufferBase.1922" = type { %class.scoped_refptr.1923*, i32, i32 }
%class.scoped_refptr.1923 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1926" = type { %"class.WTF::HashSet.1929" }
%"class.WTF::HashSet.1929" = type { %"class.WTF::HashTable.1930" }
%"class.WTF::HashTable.1930" = type <{ %"class.blink::Member.1869"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1932" = type { %"class.std::__1::__compressed_pair.1933" }
%"class.std::__1::__compressed_pair.1933" = type { %"struct.std::__1::__compressed_pair_elem.1934" }
%"struct.std::__1::__compressed_pair_elem.1934" = type { %"class.WTF::HashSet.329"* }
%"class.base::WeakPtr.1719" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.1938" = type { %"class.blink::Member.1939" }
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1941" = type { %"class.blink::MemberBase.1942" }
%"class.blink::MemberBase.1942" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1943" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1363", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1365, %"class.WTF::Vector.1366", %"class.WTF::Vector.1366", %"class.blink::Member.885", %"class.blink::Member.1371", %"class.blink::HeapHashSet.1375", %"class.blink::Member.1320", %"class.WTF::HashSet.1382", %"class.WTF::TextPosition", %"class.blink::Member.1386", %"class.blink::HeapVector.1388", %"class.blink::Member.1395" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1365 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1373" }
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1375" = type { %"class.WTF::HashSet.1378" }
%"class.WTF::HashSet.1378" = type { %"class.WTF::HashTable.1379" }
%"class.WTF::HashTable.1379" = type <{ %"class.blink::WeakMember.1381"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1381" = type { %"class.blink::MemberBase.888" }
%"class.WTF::HashSet.1382" = type { %"class.WTF::HashTable.1383" }
%"class.WTF::HashTable.1383" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1388" = type { %"class.WTF::Vector.1391" }
%"class.WTF::Vector.1391" = type { %"class.WTF::VectorBuffer.1392" }
%"class.WTF::VectorBuffer.1392" = type { %"class.WTF::VectorBufferBase.1393" }
%"class.WTF::VectorBufferBase.1393" = type { %"class.blink::Member.1371"*, i32, i32 }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.118 }
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1320", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.885", %"class.blink::Member.885", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1439" }
%"class.blink::HeapHashMap.1439" = type { %"class.WTF::HashMap.1442" }
%"class.WTF::HashMap.1442" = type { %"class.WTF::HashTable.1443" }
%"class.WTF::HashTable.1443" = type <{ %"struct.WTF::KeyValuePair.1445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1445" = type opaque
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1448" = type { %"class.WTF::HashSet.1451" }
%"class.WTF::HashSet.1451" = type { %"class.WTF::HashTable.1452" }
%"class.WTF::HashTable.1452" = type <{ %"class.blink::WeakMember.1454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1454" = type opaque
%"class.blink::HeapHashSet.1455" = type { %"class.WTF::HashSet.1458" }
%"class.WTF::HashSet.1458" = type { %"class.WTF::HashTable.1459" }
%"class.WTF::HashTable.1459" = type <{ %"class.blink::WeakMember.1461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1461" = type opaque
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.887", %"class.blink::HeapVector.1355" }
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1472" = type { %"class.WTF::HashMap.1475" }
%"class.WTF::HashMap.1475" = type { %"class.WTF::HashTable.1476" }
%"class.WTF::HashTable.1476" = type <{ %"struct.WTF::KeyValuePair.1478"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1478" = type opaque
%"class.WTF::Vector.1479" = type { %"class.WTF::VectorBuffer.1480" }
%"class.WTF::VectorBuffer.1480" = type { %"class.WTF::VectorBufferBase.1481" }
%"class.WTF::VectorBufferBase.1481" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1492" = type { %"class.WTF::Vector.1495" }
%"class.WTF::Vector.1495" = type { %"class.WTF::VectorBuffer.1496" }
%"class.WTF::VectorBuffer.1496" = type { %"class.WTF::VectorBufferBase.1497" }
%"class.WTF::VectorBufferBase.1497" = type { %"class.blink::Member.1498"*, i32, i32 }
%"class.blink::Member.1498" = type opaque
%"class.std::__1::unique_ptr.1500" = type { %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1506" = type { %"class.WTF::HashSet.1509" }
%"class.WTF::HashSet.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"class.blink::WeakMember.1512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1512" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1513", i32, [4 x i8] }>
%"class.WTF::Vector.1513" = type { %"class.WTF::VectorBuffer.1514" }
%"class.WTF::VectorBuffer.1514" = type { %"class.WTF::VectorBufferBase.1515" }
%"class.WTF::VectorBufferBase.1515" = type { %"struct.std::__1::pair.1516"*, i32, i32 }
%"struct.std::__1::pair.1516" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1521" = type { %"class.WTF::VectorBuffer.1522" }
%"class.WTF::VectorBuffer.1522" = type { %"class.WTF::VectorBufferBase.1523" }
%"class.WTF::VectorBufferBase.1523" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1526" = type { %"class.std::__1::__compressed_pair.1527" }
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.1528" }
%"struct.std::__1::__compressed_pair_elem.1528" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1337" = type { %"class.WTF::Vector.1340" }
%"class.WTF::Vector.1340" = type { %"class.WTF::VectorBuffer.1341" }
%"class.WTF::VectorBuffer.1341" = type { %"class.WTF::VectorBufferBase.1342" }
%"class.WTF::VectorBufferBase.1342" = type { %"class.blink::Member.883"*, i32, i32 }
%"class.blink::HeapVector.1532" = type { %"class.WTF::Vector.1535" }
%"class.WTF::Vector.1535" = type { %"class.WTF::VectorBuffer.1536" }
%"class.WTF::VectorBuffer.1536" = type { %"class.WTF::VectorBufferBase.1537" }
%"class.WTF::VectorBufferBase.1537" = type { %"class.blink::Member.1538"*, i32, i32 }
%"class.blink::Member.1538" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1320" }
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1550" = type { %"class.WTF::HashTable.1551" }
%"class.WTF::HashTable.1551" = type <{ %"struct.WTF::KeyValuePair.1554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1554" = type opaque
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1436", { i64, i64 } }
%"class.blink::WeakMember.1436" = type { %"class.blink::MemberBase.1321" }
%"class.blink::HeapHashSet.1563" = type { %"class.WTF::HashSet.1566" }
%"class.WTF::HashSet.1566" = type { %"class.WTF::HashTable.1567" }
%"class.WTF::HashTable.1567" = type <{ %"class.blink::Member.1569"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1569" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1572" = type { %"class.blink::MemberBase.1573" }
%"class.blink::MemberBase.1573" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1580" = type { %"class.std::__1::__compressed_pair.1581" }
%"class.std::__1::__compressed_pair.1581" = type { %"struct.std::__1::__compressed_pair_elem.1582" }
%"struct.std::__1::__compressed_pair_elem.1582" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1586" = type { %"class.std::__1::__compressed_pair.1587" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.1588" }
%"struct.std::__1::__compressed_pair_elem.1588" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1147" = type { %"class.WTF::VectorBuffer.1148" }
%"class.WTF::VectorBuffer.1148" = type { %"class.WTF::VectorBufferBase.1149" }
%"class.WTF::VectorBufferBase.1149" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1600" = type { %"class.WTF::HashMap.1603" }
%"class.WTF::HashMap.1603" = type { %"class.WTF::HashTable.1604" }
%"class.WTF::HashTable.1604" = type <{ %"struct.WTF::KeyValuePair.1606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1606" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1609" = type { %"class.std::__1::__compressed_pair.1610" }
%"class.std::__1::__compressed_pair.1610" = type { %"struct.std::__1::__compressed_pair_elem.1611" }
%"struct.std::__1::__compressed_pair_elem.1611" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1619" = type { %"class.WTF::HashMap.1622" }
%"class.WTF::HashMap.1622" = type { %"class.WTF::HashTable.1623" }
%"class.WTF::HashTable.1623" = type <{ %"struct.WTF::KeyValuePair.1625"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1625" = type opaque
%"class.blink::HeapObserverSet.1626" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1627" }
%"class.blink::HeapHashSet.1627" = type { %"class.WTF::HashSet.1630" }
%"class.WTF::HashSet.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"class.blink::WeakMember.1633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1633" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1320", %"class.blink::HeapHashSet.1643", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1650", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1643" = type { %"class.WTF::HashSet.1646" }
%"class.WTF::HashSet.1646" = type { %"class.WTF::HashTable.1647" }
%"class.WTF::HashTable.1647" = type <{ %"class.blink::Member.1649"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1649" = type opaque
%"class.blink::HeapTaskRunnerTimer.1650" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1651", { i64, i64 } }
%"class.blink::WeakMember.1651" = type { %"class.blink::MemberBase.1637" }
%"class.blink::WeakMember.1638" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::Node"* }
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type { %"class.WTF::AtomicString", %"class.blink::Member.1333" }
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.883", i32, %"class.blink::HeapVector.1337" }
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1350" }
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::HeapHashMap.1352"* }
%"class.blink::HeapHashMap.1352" = type opaque
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1355" = type { %"class.WTF::Vector.1358" }
%"class.WTF::Vector.1358" = type { %"class.WTF::VectorBuffer.1359" }
%"class.WTF::VectorBuffer.1359" = type { %"class.WTF::VectorBufferBase.1360" }
%"class.WTF::VectorBufferBase.1360" = type { %"class.blink::Member.1361"*, i32, i32 }
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.893 }
%class.scoped_refptr.893 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.894", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.894" = type { %"class.base::RefCounted.895" }
%"class.base::RefCounted.895" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.900", %"class.blink::Member.902", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.900" = type { %"class.WTF::SingleThreadedBitField.901" }
%"class.WTF::SingleThreadedBitField.901" = type { i32 }
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.904 }
%class.scoped_refptr.904 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.905", %"class.WTF::AtomicString", %"class.WTF::Vector.907" }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.907" = type { %"class.WTF::VectorBuffer.908" }
%"class.WTF::VectorBuffer.908" = type { %"class.WTF::VectorBufferBase.909", [32 x i8] }
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.931", %"class.blink::HeapListHashSet.942", %"class.blink::HeapListHashSet.953", %"class.blink::HeapListHashSet.964", %"class.blink::HeapListHashSet.975", %"class.blink::HeapListHashSet.986", %"class.blink::HeapListHashSet.997", %"class.blink::HeapListHashSet.1008", %"class.blink::HeapListHashSet.1019", %"class.blink::HeapListHashSet.1030", %"class.blink::HeapListHashSet.1041", %"class.blink::HeapListHashSet.1052", %"class.blink::HeapListHashSet.1063", %"class.blink::HeapListHashSet.1074", %"class.blink::HeapListHashSet.1085", %"class.blink::HeapListHashSet.1096", %"class.blink::HeapListHashSet.1107", %"class.blink::HeapListHashSet.1118", %"class.blink::HeapListHashSet.1129" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.927", %"class.blink::Member.929", %"class.blink::Member.929", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.927" = type <{ %"class.blink::Member.929"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1143", %"class.blink::Member.929", %"class.blink::Member.929" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.931" = type { %"class.WTF::ListHashSet.base.941", [7 x i8] }
%"class.WTF::ListHashSet.base.941" = type <{ %"class.WTF::HashTable.936", %"class.blink::Member.938", %"class.blink::Member.938", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.936" = type <{ %"class.blink::Member.938"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::HeapListHashSetNode.940"* }
%"class.blink::HeapListHashSetNode.940" = type { %"class.blink::Member.1314", %"class.blink::Member.938", %"class.blink::Member.938" }
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.942" = type { %"class.WTF::ListHashSet.base.952", [7 x i8] }
%"class.WTF::ListHashSet.base.952" = type <{ %"class.WTF::HashTable.947", %"class.blink::Member.949", %"class.blink::Member.949", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.947" = type <{ %"class.blink::Member.949"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::HeapListHashSetNode.951"* }
%"class.blink::HeapListHashSetNode.951" = type { %"class.blink::Member.1310", %"class.blink::Member.949", %"class.blink::Member.949" }
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.953" = type { %"class.WTF::ListHashSet.base.963", [7 x i8] }
%"class.WTF::ListHashSet.base.963" = type <{ %"class.WTF::HashTable.958", %"class.blink::Member.960", %"class.blink::Member.960", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.958" = type <{ %"class.blink::Member.960"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::HeapListHashSetNode.962"* }
%"class.blink::HeapListHashSetNode.962" = type { %"class.blink::Member.1306", %"class.blink::Member.960", %"class.blink::Member.960" }
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.964" = type { %"class.WTF::ListHashSet.base.974", [7 x i8] }
%"class.WTF::ListHashSet.base.974" = type <{ %"class.WTF::HashTable.969", %"class.blink::Member.971", %"class.blink::Member.971", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.969" = type <{ %"class.blink::Member.971"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::HeapListHashSetNode.973"* }
%"class.blink::HeapListHashSetNode.973" = type { %"class.blink::Member.1302", %"class.blink::Member.971", %"class.blink::Member.971" }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.975" = type { %"class.WTF::ListHashSet.base.985", [7 x i8] }
%"class.WTF::ListHashSet.base.985" = type <{ %"class.WTF::HashTable.980", %"class.blink::Member.982", %"class.blink::Member.982", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.980" = type <{ %"class.blink::Member.982"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::HeapListHashSetNode.984"* }
%"class.blink::HeapListHashSetNode.984" = type { %"class.blink::Member.1298", %"class.blink::Member.982", %"class.blink::Member.982" }
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.986" = type { %"class.WTF::ListHashSet.base.996", [7 x i8] }
%"class.WTF::ListHashSet.base.996" = type <{ %"class.WTF::HashTable.991", %"class.blink::Member.993", %"class.blink::Member.993", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.991" = type <{ %"class.blink::Member.993"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::HeapListHashSetNode.995"* }
%"class.blink::HeapListHashSetNode.995" = type { %"class.blink::Member.1294", %"class.blink::Member.993", %"class.blink::Member.993" }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.997" = type { %"class.WTF::ListHashSet.base.1007", [7 x i8] }
%"class.WTF::ListHashSet.base.1007" = type <{ %"class.WTF::HashTable.1002", %"class.blink::Member.1004", %"class.blink::Member.1004", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1002" = type <{ %"class.blink::Member.1004"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::HeapListHashSetNode.1006"* }
%"class.blink::HeapListHashSetNode.1006" = type { %"class.blink::Member.1290", %"class.blink::Member.1004", %"class.blink::Member.1004" }
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1008" = type { %"class.WTF::ListHashSet.base.1018", [7 x i8] }
%"class.WTF::ListHashSet.base.1018" = type <{ %"class.WTF::HashTable.1013", %"class.blink::Member.1015", %"class.blink::Member.1015", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1013" = type <{ %"class.blink::Member.1015"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::HeapListHashSetNode.1017"* }
%"class.blink::HeapListHashSetNode.1017" = type { %"class.blink::Member.1286", %"class.blink::Member.1015", %"class.blink::Member.1015" }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1019" = type { %"class.WTF::ListHashSet.base.1029", [7 x i8] }
%"class.WTF::ListHashSet.base.1029" = type <{ %"class.WTF::HashTable.1024", %"class.blink::Member.1026", %"class.blink::Member.1026", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1024" = type <{ %"class.blink::Member.1026"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::HeapListHashSetNode.1028"* }
%"class.blink::HeapListHashSetNode.1028" = type { %"class.blink::Member.1282", %"class.blink::Member.1026", %"class.blink::Member.1026" }
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1030" = type { %"class.WTF::ListHashSet.base.1040", [7 x i8] }
%"class.WTF::ListHashSet.base.1040" = type <{ %"class.WTF::HashTable.1035", %"class.blink::Member.1037", %"class.blink::Member.1037", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1035" = type <{ %"class.blink::Member.1037"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::HeapListHashSetNode.1039"* }
%"class.blink::HeapListHashSetNode.1039" = type { %"class.blink::Member.1161", %"class.blink::Member.1037", %"class.blink::Member.1037" }
%"class.blink::HeapListHashSet.1041" = type { %"class.WTF::ListHashSet.base.1051", [7 x i8] }
%"class.WTF::ListHashSet.base.1051" = type <{ %"class.WTF::HashTable.1046", %"class.blink::Member.1048", %"class.blink::Member.1048", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1046" = type <{ %"class.blink::Member.1048"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::HeapListHashSetNode.1050"* }
%"class.blink::HeapListHashSetNode.1050" = type { %"class.blink::Member.1276", %"class.blink::Member.1048", %"class.blink::Member.1048" }
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1052" = type { %"class.WTF::ListHashSet.base.1062", [7 x i8] }
%"class.WTF::ListHashSet.base.1062" = type <{ %"class.WTF::HashTable.1057", %"class.blink::Member.1059", %"class.blink::Member.1059", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1057" = type <{ %"class.blink::Member.1059"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::HeapListHashSetNode.1061"* }
%"class.blink::HeapListHashSetNode.1061" = type { %"class.blink::Member.1272", %"class.blink::Member.1059", %"class.blink::Member.1059" }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1063" = type { %"class.WTF::ListHashSet.base.1073", [7 x i8] }
%"class.WTF::ListHashSet.base.1073" = type <{ %"class.WTF::HashTable.1068", %"class.blink::Member.1070", %"class.blink::Member.1070", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1068" = type <{ %"class.blink::Member.1070"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::HeapListHashSetNode.1072"* }
%"class.blink::HeapListHashSetNode.1072" = type { %"class.blink::Member.1268", %"class.blink::Member.1070", %"class.blink::Member.1070" }
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1074" = type { %"class.WTF::ListHashSet.base.1084", [7 x i8] }
%"class.WTF::ListHashSet.base.1084" = type <{ %"class.WTF::HashTable.1079", %"class.blink::Member.1081", %"class.blink::Member.1081", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1079" = type <{ %"class.blink::Member.1081"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::HeapListHashSetNode.1083"* }
%"class.blink::HeapListHashSetNode.1083" = type { %"class.blink::Member.1264", %"class.blink::Member.1081", %"class.blink::Member.1081" }
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1085" = type { %"class.WTF::ListHashSet.base.1095", [7 x i8] }
%"class.WTF::ListHashSet.base.1095" = type <{ %"class.WTF::HashTable.1090", %"class.blink::Member.1092", %"class.blink::Member.1092", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1090" = type <{ %"class.blink::Member.1092"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::HeapListHashSetNode.1094"* }
%"class.blink::HeapListHashSetNode.1094" = type { %"class.blink::Member.1260", %"class.blink::Member.1092", %"class.blink::Member.1092" }
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1096" = type { %"class.WTF::ListHashSet.base.1106", [7 x i8] }
%"class.WTF::ListHashSet.base.1106" = type <{ %"class.WTF::HashTable.1101", %"class.blink::Member.1103", %"class.blink::Member.1103", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1101" = type <{ %"class.blink::Member.1103"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::HeapListHashSetNode.1105"* }
%"class.blink::HeapListHashSetNode.1105" = type { %"class.blink::Member.1256", %"class.blink::Member.1103", %"class.blink::Member.1103" }
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1107" = type { %"class.WTF::ListHashSet.base.1117", [7 x i8] }
%"class.WTF::ListHashSet.base.1117" = type <{ %"class.WTF::HashTable.1112", %"class.blink::Member.1114", %"class.blink::Member.1114", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1112" = type <{ %"class.blink::Member.1114"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::HeapListHashSetNode.1116"* }
%"class.blink::HeapListHashSetNode.1116" = type { %"class.blink::Member.1252", %"class.blink::Member.1114", %"class.blink::Member.1114" }
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1118" = type { %"class.WTF::ListHashSet.base.1128", [7 x i8] }
%"class.WTF::ListHashSet.base.1128" = type <{ %"class.WTF::HashTable.1123", %"class.blink::Member.1125", %"class.blink::Member.1125", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1123" = type <{ %"class.blink::Member.1125"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::HeapListHashSetNode.1127"* }
%"class.blink::HeapListHashSetNode.1127" = type { %"class.blink::Member.1163", %"class.blink::Member.1125", %"class.blink::Member.1125" }
%"class.blink::HeapListHashSet.1129" = type { %"class.WTF::ListHashSet.base.1139", [7 x i8] }
%"class.WTF::ListHashSet.base.1139" = type <{ %"class.WTF::HashTable.1134", %"class.blink::Member.1136", %"class.blink::Member.1136", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1134" = type <{ %"class.blink::Member.1136"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::HeapListHashSetNode.1138"* }
%"class.blink::HeapListHashSetNode.1138" = type { %"class.blink::Member.1141", %"class.blink::Member.1136", %"class.blink::Member.1136" }
%class.scoped_refptr.1140 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.819", %"class.WTF::Vector.1147", i32, [4 x i8], %"class.blink::HeapHashMap.1152", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.1152" = type { %"class.WTF::HashMap.1155" }
%"class.WTF::HashMap.1155" = type { %"class.WTF::HashTable.1156" }
%"class.WTF::HashTable.1156" = type <{ %"struct.WTF::KeyValuePair.1158"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1158" = type opaque
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1169" }
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2289" }
%"class.mojo::Remote.2289" = type { %"class.mojo::internal::InterfacePtrState.2290" }
%"class.mojo::internal::InterfacePtrState.2290" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2291" }
%"class.std::__1::unique_ptr.2291" = type { %"class.std::__1::__compressed_pair.2292" }
%"class.std::__1::__compressed_pair.2292" = type { %"struct.std::__1::__compressed_pair_elem.2293" }
%"struct.std::__1::__compressed_pair_elem.2293" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1174, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1174 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1175", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1175" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1176" }
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1183, i8, [7 x i8] }>
%class.scoped_refptr.1183 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1184", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1185" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1192" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1193" = type { %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.835" = type { %"class.absl::optional_internal::optional_data.836" }
%"class.absl::optional_internal::optional_data.836" = type { %"class.absl::optional_internal::optional_data_base.837" }
%"class.absl::optional_internal::optional_data_base.837" = type { %"class.absl::optional_internal::optional_data_dtor_base.838" }
%"class.absl::optional_internal::optional_data_dtor_base.838" = type { i8, %union.anon.839 }
%union.anon.839 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote.1205" = type { %"class.blink::Member.1206" }
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2299" }
%"class.mojo::AssociatedRemote.2299" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2300" }
%"class.mojo::internal::AssociatedInterfacePtrState.2300" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2301" }
%"class.std::__1::unique_ptr.2301" = type { %"class.std::__1::__compressed_pair.2302" }
%"class.std::__1::__compressed_pair.2302" = type { %"struct.std::__1::__compressed_pair_elem.2303" }
%"struct.std::__1::__compressed_pair_elem.2303" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1208" = type { %"class.blink::Member.1209" }
%"class.blink::Member.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2309" }
%"class.mojo::AssociatedRemote.2309" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2310" }
%"class.mojo::internal::AssociatedInterfacePtrState.2310" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2311" }
%"class.std::__1::unique_ptr.2311" = type { %"class.std::__1::__compressed_pair.2312" }
%"class.std::__1::__compressed_pair.2312" = type { %"struct.std::__1::__compressed_pair_elem.2313" }
%"struct.std::__1::__compressed_pair_elem.2313" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1211" }
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2319", %"class.blink::Member.819", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2319" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2320" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.394" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2320" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1213" = type { %"class.blink::Member.1214" }
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2323", %"class.blink::Member.819", %"class.mojo::AssociatedReceiver.2324" }
%"class.blink::ThreadState::PrefinalizerRegistration.2323" = type { i8 }
%"class.mojo::AssociatedReceiver.2324" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2325" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2325" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1216" }
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2328", %"class.blink::Member.819", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2328" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.717, %"class.std::__1::unique_ptr.394", %"class.base::WeakPtrFactory.2329" }
%"class.base::WeakPtrFactory.2329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1218" = type { %"class.blink::Member.1219" }
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2332", %"class.blink::Member.819", %"class.mojo::AssociatedReceiver.2333" }
%"class.blink::ThreadState::PrefinalizerRegistration.2332" = type { i8 }
%"class.mojo::AssociatedReceiver.2333" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2334" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2334" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::HeapHashMap.1229"* }
%"class.blink::HeapHashMap.1229" = type opaque
%"class.mojo::StructPtr.1230" = type { %"class.std::__1::unique_ptr.1231" }
%"class.std::__1::unique_ptr.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1234", %"class.mojo::InlinedStructPtr.1235" }
%"class.mojo::InlinedStructPtr.1234" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1241" = type { %"class.absl::optional_internal::optional_data.1242" }
%"class.absl::optional_internal::optional_data.1242" = type { %"class.absl::optional_internal::optional_data_base.1243" }
%"class.absl::optional_internal::optional_data_base.1243" = type { %"class.absl::optional_internal::optional_data_dtor_base.1244" }
%"class.absl::optional_internal::optional_data_dtor_base.1244" = type { i8, %union.anon.1245 }
%union.anon.1245 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2209", i8* }
%"class.WTF::StringAppend.2209" = type { %"class.WTF::StringAppend.2210", i8* }
%"class.WTF::StringAppend.2210" = type { %"class.WTF::StringAppend.2211", i8* }
%"class.WTF::StringAppend.2211" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.2389" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::MemoryCache" = type { %"class.blink::MemoryCacheDumpClient", %"class.blink::MemoryPressureListener", %"class.blink::HeapHashMap.2214", i8, i8, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.base::TimeDelta", i64, %class.scoped_refptr.1434 }
%"class.blink::MemoryCacheDumpClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashMap.2214" = type { %"class.WTF::HashMap.2217" }
%"class.WTF::HashMap.2217" = type { %"class.WTF::HashTable.2218" }
%"class.WTF::HashTable.2218" = type <{ %"struct.WTF::KeyValuePair.2220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2220" = type opaque
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2360", %"class.blink::FreeList", %"class.WTF::Vector.2365" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2359" }
%"struct.std::__1::array.2359" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2360" = type { %"class.WTF::VectorBuffer.2361" }
%"class.WTF::VectorBuffer.2361" = type { %"class.WTF::VectorBufferBase.2362" }
%"class.WTF::VectorBufferBase.2362" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.2365" = type { %"class.WTF::VectorBuffer.2366" }
%"class.WTF::VectorBuffer.2366" = type { %"class.WTF::VectorBufferBase.2367" }
%"class.WTF::VectorBufferBase.2367" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2221", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2221" = type { %"class.std::__1::__vector_base.2222" }
%"class.std::__1::__vector_base.2222" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2223" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2223" = type { %"struct.std::__1::__compressed_pair_elem.2224" }
%"struct.std::__1::__compressed_pair_elem.2224" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.absl::optional.2228" = type { %"class.absl::optional_internal::optional_data.2229" }
%"class.absl::optional_internal::optional_data.2229" = type { %"class.absl::optional_internal::optional_data_base.2230" }
%"class.absl::optional_internal::optional_data_base.2230" = type { %"class.absl::optional_internal::optional_data_dtor_base.2231" }
%"class.absl::optional_internal::optional_data_dtor_base.2231" = type { i8, [7 x i8], %union.anon.2232 }
%union.anon.2232 = type { %"class.blink::MultiToken.2233" }
%"class.blink::MultiToken.2233" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.WTF::StringTypeAdapter.2392" = type { %"class.WTF::StringTypeAdapter.2393" }
%"class.WTF::StringTypeAdapter.2393" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev = comdat any

$_ZNK5blink16ExecutionContext8IsWindowEv = comdat any

$_ZNK5blink16ExecutionContext28IsWorkerOrWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext20IsWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext30IsMainThreadWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext28IsThreadedWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext22IsJSExecutionForbiddenEv = comdat any

$_ZNK5blink16ExecutionContext15IsContextThreadEv = comdat any

$_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv = comdat any

$_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv = comdat any

$_ZN5blink16ExecutionContext17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE = comdat any

$_ZNK5blink16ExecutionContext17GetV8CacheOptionsEv = comdat any

$_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv = comdat any

$_ZN5blink16ExecutionContext12GetProbeSinkEv = comdat any

$_ZNK5blink16ExecutionContext15GetTrustedTypesEv = comdat any

$_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE = comdat any

$_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ = comdat any

$_ZN5blink16ExecutionContext11UkmRecorderEv = comdat any

$_ZNK5blink16ExecutionContext11UkmSourceIDEv = comdat any

$_ZNK5blink16ExecutionContext30GetParentExecutionContextTokenEv = comdat any

$_ZN5blink16ExecutionContext17ToScriptWrappableEv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_18MojoBindingContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_18MojoBindingContextEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv = comdat any

$_ZN4mojo16InlinedStructPtrIN5blink5mojom5blink16AffectedLocationEE4SwapEPS5_ = comdat any

$_ZN5blink5mojom5blink16AffectedLocationaSERKS2_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_27ExecutionContextCSPDelegateEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_27ExecutionContextCSPDelegateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_27ExecutionContextCSPDelegateEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18OriginTrialContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18OriginTrialContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18OriginTrialContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18OriginTrialContextEE7GetNameEPKv = comdat any

$_ZN5blink18OriginTrialContextD2Ev = comdat any

$_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10ErrorEventEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10ErrorEventEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16PublicURLManagerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16PublicURLManagerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16PublicURLManagerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16PublicURLManagerEE7GetNameEPKv = comdat any

$_ZN5blink16PublicURLManagerD2Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESA_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink10TraceTraitINS_5AgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_16ExecutionContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_16ExecutionContextEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_27ExecutionContextCSPDelegateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_27ExecutionContextCSPDelegateEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18OriginTrialContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18OriginTrialContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16PublicURLManagerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16PublicURLManagerEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16ExecutionContextE = hidden unnamed_addr constant { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] } { [55 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*)* @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext8IsWindowEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext28IsWorkerOrWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext20IsWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext30IsMainThreadWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext28IsThreadedWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext22IsJSExecutionForbiddenEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext15IsContextThreadEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv to i8*), i8* bitcast (%"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::UserAgentMetadata"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZN5blink16ExecutionContext17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE to i8*), i8* bitcast (i32 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext17GetV8CacheOptionsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)* @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv to i8*), i8* bitcast (%"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext12GetProbeSinkEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext11UkmRecorderEv to i8*), i8* bitcast (i64 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext11UkmSourceIDEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.absl::optional.2228"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext30GetParentExecutionContextTokenEv to i8*), i8* bitcast (%"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext17ToScriptWrappableEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContextD2Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContextD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [9 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*)* @_ZThn32_NK5blink16ExecutionContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZThn32_N5blink16ExecutionContextD1Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZThn32_N5blink16ExecutionContextD0Ev to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [3 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink16ExecutionContext5TraceEPNS_7VisitorE to i8*)], [6 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink16ExecutionContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZThn104_N5blink16ExecutionContextD1Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZThn104_N5blink16ExecutionContextD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*)], [6 x i8*] [i8* inttoptr (i64 -112 to i8*), i8* null, i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*)* @_ZThn112_NK5blink16ExecutionContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZThn112_N5blink16ExecutionContextD1Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*)* @_ZThn112_N5blink16ExecutionContextD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [3 x i8*] [i8* inttoptr (i64 -120 to i8*), i8* null, i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*)] }, align 8
@.str = private unnamed_addr constant [66 x i8] c"A policy specified by a meta element must contain only one token.\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"The value '\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"' is not one of \00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"'always', 'default', 'never', 'origin-when-crossorigin', \00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [167 x i8] c"'no-referrer', 'no-referrer-when-downgrade', 'origin', 'origin-when-cross-origin', 'same-origin', 'strict-origin', 'strict-origin-when-cross-origin', or 'unsafe-url'.\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"Failed to set referrer policy: \00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c" The referrer policy has been left unchanged.\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase31is_shared_array_buffer_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase42is_shared_array_buffer_on_desktop_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase59is_shared_array_buffer_unrestricted_access_allowed_enabled_E = external local_unnamed_addr global i8, align 1
@.str.11 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase27is_document_policy_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase29is_trusted_dom_types_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink27ExecutionContextCSPDelegateEEEPKcv = private unnamed_addr constant [82 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ExecutionContextCSPDelegate]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_27ExecutionContextCSPDelegateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_27ExecutionContextCSPDelegateEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_27ExecutionContextCSPDelegateEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_27ExecutionContextCSPDelegateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18OriginTrialContextEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::OriginTrialContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18OriginTrialContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18OriginTrialContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18OriginTrialContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18OriginTrialContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18OriginTrialContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.17 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.22 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10ErrorEventEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ErrorEvent>, WTF::VectorTraits<blink::Member<blink::ErrorEvent> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16PublicURLManagerEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PublicURLManager]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16PublicURLManagerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16PublicURLManagerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16PublicURLManagerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16PublicURLManagerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16PublicURLManagerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink16PublicURLManagerE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.24 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink16ExecutionContextD1Ev = hidden unnamed_addr alias void (%"class.blink::ExecutionContext"*), void (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContextC2EPN2v87IsolateEPNS_5AgentE(%"class.blink::ExecutionContext"*, %"class.v8::Isolate"*, %"class.blink::Agent"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::HeapHashMap"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #16
  %7 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 2
  %10 = bitcast %"class.blink::HeapHashSet"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #16
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 1, i32 1
  %13 = bitcast %"class.blink::HeapHashMap.5"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #16
  %14 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %16 = bitcast i32 (...)*** %14 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 4, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 5
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6
  tail call void @_ZN5blink15SecurityContextC1EPNS_16ExecutionContextE(%"class.blink::SecurityContext"* %18, %"class.blink::ExecutionContext"* %0) #16
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::Agent"* %2, %"class.blink::Agent"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 8
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 9
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 20, i32 0, i32 0
  store %"class.blink::PublicURLManager"* null, %"class.blink::PublicURLManager"** %23, align 8
  %24 = bitcast %"class.blink::HeapVector"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 26, i1 false)
  %25 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_27ExecutionContextCSPDelegateEEEPhm(i64 16) #16
  %26 = bitcast i8* %25 to %"class.blink::ExecutionContextCSPDelegate"*
  tail call void @_ZN5blink27ExecutionContextCSPDelegateC1ERNS_16ExecutionContextE(%"class.blink::ExecutionContextCSPDelegate"* %26, %"class.blink::ExecutionContext"* dereferenceable(376) %0) #16
  %27 = getelementptr inbounds i8, i8* %25, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 21, i32 0, i32 0
  %32 = bitcast %"class.blink::ContentSecurityPolicyDelegate"** %31 to i8**
  store i8* %25, i8** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 22
  %34 = bitcast %"class.blink::DOMTimerCoordinator"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 20, i1 false) #16
  %35 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 22, i32 1
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 22, i32 2
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 23
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25
  %39 = bitcast %"class.std::__1::unique_ptr.344"* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18OriginTrialContextEEEPhm(i64 136) #16
  %41 = bitcast i8* %40 to %"class.blink::OriginTrialContext"*
  tail call void @_ZN5blink18OriginTrialContextC1EPNS_16ExecutionContextE(%"class.blink::OriginTrialContext"* %41, %"class.blink::ExecutionContext"* %0) #16
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26, i32 0, i32 0
  %47 = bitcast %"class.blink::OriginTrialContext"** %46 to i8**
  store i8* %40, i8** %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 27, i32 0, i32 0
  store %"class.blink::ContentSecurityPolicy"* null, %"class.blink::ContentSecurityPolicy"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 28
  store i8 0, i8* %49, align 8
  ret void
}

declare void @_ZN5blink15SecurityContextC1EPNS_16ExecutionContextE(%"class.blink::SecurityContext"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContextD2Ev(%"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::MojoBindingContext", %"class.blink::MojoBindingContext"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = bitcast i32 (...)*** %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 4, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink16ExecutionContextE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %9, align 8
  store %"class.blink::PolicyContainer"* null, %"class.blink::PolicyContainer"** %9, align 8
  %11 = icmp eq %"class.blink::PolicyContainer"* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::PolicyContainer", %"class.blink::PolicyContainer"* %10, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::PolicyContainer", %"class.blink::PolicyContainer"* %10, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.blink::mojom::blink::PolicyContainerHostProxy"*, %"class.blink::mojom::blink::PolicyContainerHostProxy"** %14, align 8
  store %"class.blink::mojom::blink::PolicyContainerHostProxy"* null, %"class.blink::mojom::blink::PolicyContainerHostProxy"** %14, align 8
  %16 = icmp eq %"class.blink::mojom::blink::PolicyContainerHostProxy"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::mojom::blink::PolicyContainerHostProxy"* %15 to void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)***
  %19 = load void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)**, void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)*, void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)** %19, i64 1
  %21 = load void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)*, void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)** %20, align 8
  tail call void %21(%"class.blink::mojom::blink::PolicyContainerHostProxy"* nonnull %15) #16
  br label %22

22:                                               ; preds = %17, %12
  %23 = bitcast %"class.mojo::AssociatedRemote"* %13 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %23) #16
  %24 = getelementptr inbounds %"class.blink::PolicyContainer", %"class.blink::PolicyContainer"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::mojom::blink::PolicyContainerPolicies"*, %"class.blink::mojom::blink::PolicyContainerPolicies"** %24, align 8
  store %"class.blink::mojom::blink::PolicyContainerPolicies"* null, %"class.blink::mojom::blink::PolicyContainerPolicies"** %24, align 8
  %26 = icmp eq %"class.blink::mojom::blink::PolicyContainerPolicies"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  tail call void @_ZN5blink5mojom5blink23PolicyContainerPoliciesD1Ev(%"class.blink::mojom::blink::PolicyContainerPolicies"* nonnull %25) #16
  %28 = bitcast %"class.blink::mojom::blink::PolicyContainerPolicies"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %22
  %30 = bitcast %"class.blink::PolicyContainer"* %10 to i8*
  tail call void @free(i8* %30) #16
  br label %31

31:                                               ; preds = %1, %29
  %32 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6
  tail call void @_ZN5blink15SecurityContextD1Ev(%"class.blink::SecurityContext"* %32) #16
  %33 = getelementptr inbounds %"class.blink::MojoBindingContext", %"class.blink::MojoBindingContext"* %3, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleNotifierD2Ev(%"class.blink::ContextLifecycleNotifier"* %33) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15SecurityContextD1Ev(%"class.blink::SecurityContext"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N5blink16ExecutionContextD1Ev(%"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 25
  %3 = bitcast %"class.std::__1::unique_ptr.344"* %2 to %"class.blink::ExecutionContext"*
  tail call void @_ZN5blink16ExecutionContextD2Ev(%"class.blink::ExecutionContext"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16ExecutionContextD1Ev(%"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 12
  %3 = bitcast i32* %2 to %"class.blink::ExecutionContext"*
  tail call void @_ZN5blink16ExecutionContextD2Ev(%"class.blink::ExecutionContext"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N5blink16ExecutionContextD1Ev(%"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 11, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::ExecutionContext"*
  tail call void @_ZN5blink16ExecutionContextD2Ev(%"class.blink::ExecutionContext"* %3) #16
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContextD0Ev(%"class.blink::ExecutionContext"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn32_N5blink16ExecutionContextD0Ev(%"class.blink::ExecutionContext"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16ExecutionContextD0Ev(%"class.blink::ExecutionContext"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn112_N5blink16ExecutionContextD0Ev(%"class.blink::ExecutionContext"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::HandleScope", align 8
  %3 = bitcast %"class.v8::HandleScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = bitcast %"class.v8::HandleScope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %2, %"class.v8::Isolate"* %6) #16
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::Context"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #16
  %16 = bitcast i64* %15 to %"class.v8::Context"*
  br label %17

17:                                               ; preds = %1, %10
  %18 = phi %"class.v8::Context"* [ %16, %10 ], [ null, %1 ]
  %19 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %18) #16
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  ret %"class.blink::ExecutionContext"* %19
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %0) #16
  ret %"class.blink::ExecutionContext"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext15ForCurrentRealmERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #16
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #16
  ret %"class.blink::ExecutionContext"* %8
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext15ForCurrentRealmERKN2v820PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 2
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #16
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* nonnull %7) #16
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi %"class.blink::ExecutionContext"* [ %10, %9 ], [ null, %1 ]
  ret %"class.blink::ExecutionContext"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext16ForRelevantRealmERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::FunctionCallbackInfo"* %0 to %"class.v8::Object"**
  %3 = load %"class.v8::Object"*, %"class.v8::Object"** %2, align 8
  %4 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %3) #16
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %4) #16
  ret %"class.blink::ExecutionContext"* %5
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext16ForRelevantRealmERKN2v820PropertyCallbackInfoINS1_5ValueEEE(%"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #16
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* nonnull %6) #16
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi %"class.blink::ExecutionContext"* [ %9, %8 ], [ null, %1 ]
  ret %"class.blink::ExecutionContext"* %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16ExecutionContext23SetIsInBackForwardCacheEb(%"class.blink::ExecutionContext"* nocapture, i1 zeroext) local_unnamed_addr #6 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 14
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext17SetLifecycleStateENS_5mojom19FrameLifecycleStateE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %66, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapObserverSet", %"class.blink::HeapObserverSet"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %14, i64 %17
  br i1 %12, label %31, label %19

19:                                               ; preds = %6
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"class.blink::WeakMember"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"class.blink::WeakMember"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %22, i64 1
  %27 = icmp eq %"class.blink::WeakMember"* %26, %18
  br i1 %27, label %31, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"class.blink::WeakMember"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"class.blink::WeakMember"* %29, %18
  br i1 %30, label %31, label %34

31:                                               ; preds = %25, %64, %54, %61, %28, %6
  %32 = icmp eq %"class.blink::HeapObserverSet"* %7, null
  br i1 %32, label %66, label %33

33:                                               ; preds = %31
  store i32 %9, i32* %8, align 4
  br label %66

34:                                               ; preds = %28, %64
  %35 = phi %"class.blink::WeakMember"* [ %58, %64 ], [ %29, %28 ]
  %36 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::ContextLifecycleObserver"*, %"class.blink::ContextLifecycleObserver"** %36, align 8
  %38 = bitcast %"class.blink::ContextLifecycleObserver"* %37 to i1 (%"class.blink::ContextLifecycleObserver"*)***
  %39 = load i1 (%"class.blink::ContextLifecycleObserver"*)**, i1 (%"class.blink::ContextLifecycleObserver"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::ContextLifecycleObserver"*)*, i1 (%"class.blink::ContextLifecycleObserver"*)** %39, i64 3
  %41 = load i1 (%"class.blink::ContextLifecycleObserver"*)*, i1 (%"class.blink::ContextLifecycleObserver"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::ContextLifecycleObserver"* %37) #16
  br i1 %42, label %43, label %54

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.blink::ContextLifecycleObserver", %"class.blink::ContextLifecycleObserver"* %37, i64 1
  %45 = bitcast %"class.blink::ContextLifecycleObserver"* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::ContextLifecycleObserver"* %37 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  %50 = bitcast %"class.blink::ContextLifecycleObserver"* %37 to void (%"class.blink::ExecutionContextLifecycleStateObserver"*, i32)***
  %51 = load void (%"class.blink::ExecutionContextLifecycleStateObserver"*, i32)**, void (%"class.blink::ExecutionContextLifecycleStateObserver"*, i32)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::ExecutionContextLifecycleStateObserver"*, i32)*, void (%"class.blink::ExecutionContextLifecycleStateObserver"*, i32)** %51, i64 6
  %53 = load void (%"class.blink::ExecutionContextLifecycleStateObserver"*, i32)*, void (%"class.blink::ExecutionContextLifecycleStateObserver"*, i32)** %52, align 8
  tail call void %53(%"class.blink::ExecutionContextLifecycleStateObserver"* %49, i32 %1) #16
  br label %54

54:                                               ; preds = %48, %43, %34
  %55 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %35, i64 1
  %56 = icmp eq %"class.blink::WeakMember"* %55, %18
  br i1 %56, label %31, label %57

57:                                               ; preds = %54, %61
  %58 = phi %"class.blink::WeakMember"* [ %62, %61 ], [ %55, %54 ]
  %59 = bitcast %"class.blink::WeakMember"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %64 [
    i64 -1, label %61
    i64 0, label %61
  ]

61:                                               ; preds = %57, %57
  %62 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 1
  %63 = icmp eq %"class.blink::WeakMember"* %62, %18
  br i1 %63, label %31, label %57

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::WeakMember"* %58, %18
  br i1 %65, label %31, label %34

66:                                               ; preds = %33, %31, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext22NotifyContextDestroyedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 13
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN5blink24ContextLifecycleNotifier22NotifyContextDestroyedEv(%"class.blink::ContextLifecycleNotifier"* %3) #16
  ret void
}

declare void @_ZN5blink24ContextLifecycleNotifier22NotifyContextDestroyedEv(%"class.blink::ContextLifecycleNotifier"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"class.blink::HeapObserverSet"* @_ZN5blink16ExecutionContext27ContextLifecycleObserverSetEv(%"class.blink::ExecutionContext"* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1
  ret %"class.blink::HeapObserverSet"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16ExecutionContext44ContextLifecycleStateObserverCountForTestingEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1
  %3 = getelementptr inbounds %"class.blink::HeapObserverSet", %"class.blink::HeapObserverSet"* %2, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %9, i64 %12
  br i1 %7, label %26, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"class.blink::WeakMember"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"class.blink::WeakMember"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %17, i64 1
  %22 = icmp eq %"class.blink::WeakMember"* %21, %13
  br i1 %22, label %26, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"class.blink::WeakMember"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"class.blink::WeakMember"* %24, %13
  br i1 %25, label %26, label %30

26:                                               ; preds = %20, %58, %47, %55, %23, %1
  %27 = phi i32 [ 0, %1 ], [ 0, %23 ], [ %48, %55 ], [ %48, %47 ], [ %48, %58 ], [ 0, %20 ]
  %28 = icmp eq %"class.blink::HeapObserverSet"* %2, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %26
  store i32 %4, i32* %3, align 4
  br label %60

30:                                               ; preds = %23, %58
  %31 = phi i32 [ %48, %58 ], [ 0, %23 ]
  %32 = phi %"class.blink::WeakMember"* [ %52, %58 ], [ %24, %23 ]
  %33 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::ContextLifecycleObserver"*, %"class.blink::ContextLifecycleObserver"** %33, align 8
  %35 = bitcast %"class.blink::ContextLifecycleObserver"* %34 to i1 (%"class.blink::ContextLifecycleObserver"*)***
  %36 = load i1 (%"class.blink::ContextLifecycleObserver"*)**, i1 (%"class.blink::ContextLifecycleObserver"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::ContextLifecycleObserver"*)*, i1 (%"class.blink::ContextLifecycleObserver"*)** %36, i64 3
  %38 = load i1 (%"class.blink::ContextLifecycleObserver"*)*, i1 (%"class.blink::ContextLifecycleObserver"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::ContextLifecycleObserver"* %34) #16
  br i1 %39, label %40, label %47

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::ContextLifecycleObserver", %"class.blink::ContextLifecycleObserver"* %34, i64 1
  %42 = bitcast %"class.blink::ContextLifecycleObserver"* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 1
  %45 = zext i1 %44 to i32
  %46 = add i32 %31, %45
  br label %47

47:                                               ; preds = %40, %30
  %48 = phi i32 [ %31, %30 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %32, i64 1
  %50 = icmp eq %"class.blink::WeakMember"* %49, %13
  br i1 %50, label %26, label %51

51:                                               ; preds = %47, %55
  %52 = phi %"class.blink::WeakMember"* [ %56, %55 ], [ %49, %47 ]
  %53 = bitcast %"class.blink::WeakMember"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  switch i64 %54, label %58 [
    i64 -1, label %55
    i64 0, label %55
  ]

55:                                               ; preds = %51, %51
  %56 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %52, i64 1
  %57 = icmp eq %"class.blink::WeakMember"* %56, %13
  br i1 %57, label %26, label %51

58:                                               ; preds = %51
  %59 = icmp eq %"class.blink::WeakMember"* %52, %13
  br i1 %59, label %26, label %30

60:                                               ; preds = %26, %29
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext32SharedArrayBufferTransferAllowedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %4 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %4, i64 42
  %6 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::ExecutionContext"* %0) #16
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_shared_array_buffer_enabled_E, align 1
  %9 = icmp ne i8 %8, 0
  %10 = or i1 %7, %9
  br i1 %10, label %63, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6, i32 2, i32 0
  %14 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #16
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  tail call void @llvm.trap() #16
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %11, %18, %33
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %36, align 8
  %37 = call zeroext i1 @_ZN5blink14SchemeRegistry48ShouldTreatURLSchemeAsAllowingSharedArrayBuffersERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %2) #16
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #16
  br label %53

53:                                               ; preds = %35, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  br i1 %37, label %63, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 4
  %56 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase36UnrestrictedSharedArrayBufferEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %55) #16
  %57 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase42is_shared_array_buffer_on_desktop_enabled_E, align 1
  %58 = icmp ne i8 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase59is_shared_array_buffer_unrestricted_access_allowed_enabled_E, align 1, !range !3
  %62 = icmp ne i8 %61, 0
  br label %63

63:                                               ; preds = %54, %60, %53, %1
  %64 = phi i1 [ true, %1 ], [ true, %53 ], [ true, %54 ], [ %62, %60 ]
  ret i1 %64
}

declare zeroext i1 @_ZN5blink14SchemeRegistry48ShouldTreatURLSchemeAsAllowingSharedArrayBuffersERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6, i32 2, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  ret %"class.blink::SecurityOrigin"* %3
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase36UnrestrictedSharedArrayBufferEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16ExecutionContext46CheckSharedArrayBufferTransferAllowedAndReportEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.mojo::StructPtr.567", align 8
  %4 = alloca %"class.mojo::StructPtr.567", align 8
  %5 = tail call zeroext i1 @_ZNK5blink16ExecutionContext32SharedArrayBufferTransferAllowedEv(%"class.blink::ExecutionContext"* %0)
  %6 = zext i1 %5 to i8
  br i1 %5, label %7, label %60

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 15
  %9 = load i8, i8* %8, align 2, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %91

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %13 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %13, i64 42
  %15 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ExecutionContext"* %0) #16
  br i1 %16, label %91, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6, i32 2, i32 0
  %20 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #16
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #16
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %17, %24, %39
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %42, align 8
  %43 = call zeroext i1 @_ZN5blink14SchemeRegistry48ShouldTreatURLSchemeAsAllowingSharedArrayBuffersERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %2) #16
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #16
  br label %59

59:                                               ; preds = %58, %55, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br i1 %43, label %91, label %60

60:                                               ; preds = %59, %1
  %61 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 15
  store i8 1, i8* %61, align 2
  %62 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %0) #16
  %63 = bitcast %"class.mojo::StructPtr.567"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #16
  %64 = getelementptr inbounds %"class.mojo::StructPtr.567", %"class.mojo::StructPtr.567"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::InspectorIssueInfo"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::InspectorIssueInfo"*), %"class.blink::mojom::blink::InspectorIssueInfo"** %64, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128CreateSharedArrayBufferIssueEPKNS_14SourceLocationE(%"class.mojo::StructPtr.567"* nonnull sret %3, %"class.blink::SourceLocation"* %62)
  %65 = load %"class.blink::mojom::blink::InspectorIssueInfo"*, %"class.blink::mojom::blink::InspectorIssueInfo"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueInfo", %"class.blink::mojom::blink::InspectorIssueInfo"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %67, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::mojom::blink::SharedArrayBufferIssueDetails", %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %69, i64 0, i32 1
  store i8 %6, i8* %70, align 8
  %71 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %66, align 8
  %72 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %71, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::mojom::blink::SharedArrayBufferIssueDetails", %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %73, i64 0, i32 2
  store i32 0, i32* %74, align 4
  %75 = bitcast %"class.mojo::StructPtr.567"* %4 to i64*
  %76 = getelementptr inbounds %"class.mojo::StructPtr.567", %"class.mojo::StructPtr.567"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.mojo::StructPtr.567"* %3 to i64*
  %78 = ptrtoint %"class.blink::mojom::blink::InspectorIssueInfo"* %65 to i64
  store i64 %78, i64* %75, align 8
  store i64 0, i64* %77, align 8
  %79 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)***
  %80 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)**, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)** %80, i64 30
  %82 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)** %81, align 8
  call void %82(%"class.blink::ExecutionContext"* %0, %"class.mojo::StructPtr.567"* nonnull %4) #16
  %83 = load %"class.blink::mojom::blink::InspectorIssueInfo"*, %"class.blink::mojom::blink::InspectorIssueInfo"** %76, align 8
  store %"class.blink::mojom::blink::InspectorIssueInfo"* null, %"class.blink::mojom::blink::InspectorIssueInfo"** %76, align 8
  %84 = icmp eq %"class.blink::mojom::blink::InspectorIssueInfo"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %60
  call void @_ZN5blink5mojom5blink18InspectorIssueInfoD1Ev(%"class.blink::mojom::blink::InspectorIssueInfo"* nonnull %83) #16
  %86 = bitcast %"class.blink::mojom::blink::InspectorIssueInfo"* %83 to i8*
  call void @_ZdlPv(i8* %86) #17
  br label %87

87:                                               ; preds = %85, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #16
  %88 = icmp eq %"class.blink::SourceLocation"* %62, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %62) #16
  %90 = bitcast %"class.blink::SourceLocation"* %62 to i8*
  call void @free(i8* %90) #16
  br label %91

91:                                               ; preds = %59, %7, %11, %89, %87
  ret i1 %5
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_128CreateSharedArrayBufferIssueEPKNS_14SourceLocationE(%"class.mojo::StructPtr.567"* noalias nocapture sret, %"class.blink::SourceLocation"* nocapture readonly) unnamed_addr #0 {
  %3 = alloca %"class.mojo::StructPtr.571", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.mojo::InlinedStructPtr.627", align 8
  %6 = tail call i8* @_Znwm(i64 64) #17, !noalias !4
  %7 = bitcast i8* %6 to %"class.blink::mojom::blink::InspectorIssueDetails"*
  tail call void @_ZN5blink5mojom5blink21InspectorIssueDetailsC1Ev(%"class.blink::mojom::blink::InspectorIssueDetails"* nonnull %7) #16, !noalias !4
  %8 = ptrtoint i8* %6 to i64
  %9 = tail call i8* @_Znwm(i64 40) #17, !noalias !7
  %10 = bitcast i8* %9 to %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*
  tail call void @_ZN5blink5mojom5blink29SharedArrayBufferIssueDetailsC1Ev(%"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* nonnull %10) #16, !noalias !7
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast %"class.mojo::InlinedStructPtr.627"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %5, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %5, i64 0, i32 0, i32 3
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %5, i64 0, i32 0
  %18 = bitcast %"class.mojo::InlinedStructPtr.627"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  call void @_ZN5blink5mojom5blink16AffectedLocationC1Ev(%"class.blink::mojom::blink::AffectedLocation"* nonnull %17) #16
  store i32 1, i32* %16, align 8, !alias.scope !10
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %5, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #16
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %28
  call void @llvm.trap() #16
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %38, %23, %2
  %41 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %42 = bitcast %"class.WTF::String"* %19 to i64*
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  store i64 %41, i64* %42, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #16
  br label %59

59:                                               ; preds = %40, %55, %58
  %60 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %1, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, -1
  store i32 %62, i32* %14, align 8
  %63 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %15, align 4
  %65 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %1, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #16
  %68 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %70 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %71 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 13
  %72 = icmp slt i32 %66, 0
  %73 = sub i32 0, %66
  %74 = select i1 %72, i32 %73, i32 %66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false) #16
  store i8* %68, i8** %69, align 8
  %75 = urem i32 %74, 10
  %76 = udiv i32 %74, 10
  %77 = trunc i32 %75 to i8
  %78 = or i8 %77, 48
  store i8 %78, i8* %68, align 4
  %79 = icmp ugt i32 %74, 9
  br i1 %79, label %80, label %102

80:                                               ; preds = %59
  %81 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  store i8* %81, i8** %69, align 8
  %82 = urem i32 %76, 10
  %83 = trunc i32 %82 to i8
  %84 = or i8 %83, 48
  store i8 %84, i8* %81, align 1
  %85 = icmp ugt i32 %74, 99
  br i1 %85, label %86, label %102

86:                                               ; preds = %80
  %87 = udiv i32 %74, 100
  %88 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %88, i8** %69, align 8
  %89 = urem i32 %87, 10
  %90 = trunc i32 %89 to i8
  %91 = or i8 %90, 48
  store i8 %91, i8* %88, align 2
  %92 = icmp ugt i32 %74, 999
  br i1 %92, label %93, label %102

93:                                               ; preds = %86, %93
  %94 = phi i32 [ %96, %93 ], [ %87, %86 ]
  %95 = load i8*, i8** %69, align 8
  %96 = udiv i32 %94, 10
  %97 = getelementptr inbounds i8, i8* %95, i64 -1
  store i8* %97, i8** %69, align 8
  %98 = urem i32 %96, 10
  %99 = trunc i32 %98 to i8
  %100 = or i8 %99, 48
  store i8 %100, i8* %97, align 1
  %101 = icmp ugt i32 %94, 99
  br i1 %101, label %93, label %102

102:                                              ; preds = %93, %86, %80, %59
  br i1 %72, label %103, label %106

103:                                              ; preds = %102
  %104 = load i8*, i8** %69, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 -1
  store i8* %105, i8** %69, align 8
  store i8 45, i8* %105, align 1
  br label %106

106:                                              ; preds = %102, %103
  %107 = bitcast i8** %69 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = ptrtoint i8* %71 to i64
  %110 = sub i64 %109, %108
  %111 = trunc i64 %110 to i32
  store i32 %111, i32* %70, align 8
  %112 = inttoptr i64 %108 to i8*
  %113 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %112, i32 %111) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #16
  %114 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %115 = bitcast %"class.mojo::InlinedStructPtr.627"* %5 to i64*
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  store i64 %114, i64* %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %106
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %130, %127, %106
  %132 = bitcast i8* %9 to %"class.mojo::InlinedStructPtr.627"*
  %133 = getelementptr inbounds i8, i8* %9, i64 24
  %134 = bitcast i8* %133 to i32*
  store i32 0, i32* %134, align 8
  %135 = bitcast i8* %9 to %"class.blink::mojom::blink::AffectedLocation"*
  call void @_ZN5blink5mojom5blink16AffectedLocationD1Ev(%"class.blink::mojom::blink::AffectedLocation"* nonnull %135) #16
  call void @_ZN5blink5mojom5blink16AffectedLocationC1Ev(%"class.blink::mojom::blink::AffectedLocation"* nonnull %135) #16
  call void @_ZN4mojo16InlinedStructPtrIN5blink5mojom5blink16AffectedLocationEE4SwapEPS5_(%"class.mojo::InlinedStructPtr.627"* nonnull %132, %"class.mojo::InlinedStructPtr.627"* nonnull %5) #16
  %136 = getelementptr inbounds i8, i8* %6, i64 32
  %137 = bitcast i8* %136 to %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"**
  %138 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %137, align 8
  store %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* null, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %137, align 8
  %139 = icmp eq %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %131
  call void @_ZN5blink5mojom5blink29SharedArrayBufferIssueDetailsD1Ev(%"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* nonnull %138) #16
  %141 = bitcast %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %138 to i8*
  call void @_ZdlPv(i8* %141) #17
  %142 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %137, align 8
  %143 = bitcast %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %142 to i8*
  br label %144

144:                                              ; preds = %131, %140
  %145 = phi i8* [ %143, %140 ], [ null, %131 ]
  %146 = phi %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* [ %142, %140 ], [ null, %131 ]
  %147 = bitcast i8* %136 to i64*
  store i64 %11, i64* %147, align 8
  %148 = bitcast %"class.mojo::StructPtr.571"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #16, !noalias !13
  %149 = call i8* @_Znwm(i64 16) #17, !noalias !13
  %150 = bitcast i8* %149 to %"class.blink::mojom::blink::InspectorIssueInfo"*
  %151 = bitcast %"class.mojo::StructPtr.571"* %3 to i64*
  %152 = getelementptr inbounds %"class.mojo::StructPtr.571", %"class.mojo::StructPtr.571"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %151, align 8, !noalias !13
  call void @_ZN5blink5mojom5blink18InspectorIssueInfoC1ENS0_18InspectorIssueCodeEN4mojo9StructPtrINS1_21InspectorIssueDetailsEEE(%"class.blink::mojom::blink::InspectorIssueInfo"* nonnull %150, i32 4, %"class.mojo::StructPtr.571"* nonnull %3) #16, !noalias !13
  %153 = ptrtoint i8* %149 to i64
  %154 = bitcast %"class.mojo::StructPtr.567"* %0 to i64*
  store i64 %153, i64* %154, align 8, !alias.scope !13
  %155 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %152, align 8, !noalias !13
  store %"class.blink::mojom::blink::InspectorIssueDetails"* null, %"class.blink::mojom::blink::InspectorIssueDetails"** %152, align 8, !noalias !13
  %156 = icmp eq %"class.blink::mojom::blink::InspectorIssueDetails"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %144
  call void @_ZN5blink5mojom5blink21InspectorIssueDetailsD1Ev(%"class.blink::mojom::blink::InspectorIssueDetails"* nonnull %155) #16, !noalias !13
  %158 = bitcast %"class.blink::mojom::blink::InspectorIssueDetails"* %155 to i8*
  call void @_ZdlPv(i8* %158) #17, !noalias !13
  br label %159

159:                                              ; preds = %144, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #16, !noalias !13
  call void @_ZN5blink5mojom5blink16AffectedLocationD1Ev(%"class.blink::mojom::blink::AffectedLocation"* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #16
  %160 = icmp eq %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %146, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %159
  call void @_ZN5blink5mojom5blink29SharedArrayBufferIssueDetailsD1Ev(%"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* nonnull %146) #16
  call void @_ZdlPv(i8* %145) #17
  br label %162

162:                                              ; preds = %161, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext34FileSharedArrayBufferCreationIssueEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.mojo::StructPtr.567", align 8
  %3 = alloca %"class.mojo::StructPtr.567", align 8
  %4 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 16
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %37

7:                                                ; preds = %1
  store i8 1, i8* %4, align 1
  %8 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %0) #16
  %9 = bitcast %"class.mojo::StructPtr.567"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.mojo::StructPtr.567", %"class.mojo::StructPtr.567"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::InspectorIssueInfo"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::InspectorIssueInfo"*), %"class.blink::mojom::blink::InspectorIssueInfo"** %10, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128CreateSharedArrayBufferIssueEPKNS_14SourceLocationE(%"class.mojo::StructPtr.567"* nonnull sret %2, %"class.blink::SourceLocation"* %8)
  %11 = load %"class.blink::mojom::blink::InspectorIssueInfo"*, %"class.blink::mojom::blink::InspectorIssueInfo"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueInfo", %"class.blink::mojom::blink::InspectorIssueInfo"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %13, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::mojom::blink::SharedArrayBufferIssueDetails", %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %15, i64 0, i32 1
  store i8 1, i8* %16, align 8
  %17 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %12, align 8
  %18 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %17, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::mojom::blink::SharedArrayBufferIssueDetails", %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %19, i64 0, i32 2
  store i32 1, i32* %20, align 4
  %21 = bitcast %"class.mojo::StructPtr.567"* %3 to i64*
  %22 = getelementptr inbounds %"class.mojo::StructPtr.567", %"class.mojo::StructPtr.567"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.mojo::StructPtr.567"* %2 to i64*
  %24 = ptrtoint %"class.blink::mojom::blink::InspectorIssueInfo"* %11 to i64
  store i64 %24, i64* %21, align 8
  store i64 0, i64* %23, align 8
  %25 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)***
  %26 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)**, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)** %26, i64 30
  %28 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.567"*)** %27, align 8
  call void %28(%"class.blink::ExecutionContext"* %0, %"class.mojo::StructPtr.567"* nonnull %3) #16
  %29 = load %"class.blink::mojom::blink::InspectorIssueInfo"*, %"class.blink::mojom::blink::InspectorIssueInfo"** %22, align 8
  store %"class.blink::mojom::blink::InspectorIssueInfo"* null, %"class.blink::mojom::blink::InspectorIssueInfo"** %22, align 8
  %30 = icmp eq %"class.blink::mojom::blink::InspectorIssueInfo"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %7
  call void @_ZN5blink5mojom5blink18InspectorIssueInfoD1Ev(%"class.blink::mojom::blink::InspectorIssueInfo"* nonnull %29) #16
  %32 = bitcast %"class.blink::mojom::blink::InspectorIssueInfo"* %29 to i8*
  call void @_ZdlPv(i8* %32) #17
  br label %33

33:                                               ; preds = %31, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %34 = icmp eq %"class.blink::SourceLocation"* %8, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %8) #16
  %36 = bitcast %"class.blink::SourceLocation"* %8 to i8*
  call void @free(i8* %36) #16
  br label %37

37:                                               ; preds = %35, %33, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext30ReportNavigatorUserAgentAccessEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %32

5:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %6 = bitcast %"class.blink::ExecutionContext"* %0 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %7 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %7, i64 18
  %9 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %8, align 8
  %10 = tail call dereferenceable(112) %"class.blink::KURL"* %9(%"class.blink::ExecutionContext"* %0) #16
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #16
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #16
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %5, %14, %29
  tail call void @_ZN5blink11AuditsIssue30ReportNavigatorUserAgentAccessEPNS_16ExecutionContextEN3WTF6StringE(%"class.blink::ExecutionContext"* %0, %"class.WTF::StringImpl"* %12) #16
  br label %32

32:                                               ; preds = %1, %31
  ret void
}

declare void @_ZN5blink11AuditsIssue30ReportNavigatorUserAgentAccessEPNS_16ExecutionContextEN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #16
  %7 = bitcast i8* %6 to %"class.blink::ConsoleMessage"*
  %8 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #16
  tail call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %7, i32 %1, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::SourceLocation"* %8) #16
  %9 = getelementptr inbounds i8, i8* %6, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %14 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %14, i64 52
  %16 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %15, align 8
  tail call void %16(%"class.blink::ExecutionContext"* %0, %"class.blink::ConsoleMessage"* %7, i1 zeroext %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 12
  %7 = bitcast i32* %6 to %"class.blink::ExecutionContext"*
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #16
  %9 = bitcast i8* %8 to %"class.blink::ConsoleMessage"*
  %10 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #16
  tail call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %9, i32 %1, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::SourceLocation"* %10) #16
  %11 = getelementptr inbounds i8, i8* %8, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = bitcast i32* %6 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %16 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %16, i64 52
  %18 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %17, align 8
  tail call void %18(%"class.blink::ExecutionContext"* %7, %"class.blink::ConsoleMessage"* %9, i1 zeroext %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext18DispatchErrorEventEPNS_10ErrorEventENS_20SanitizeScriptErrorsE(%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ErrorEvent"*, align 8
  store %"class.blink::ErrorEvent"* %1, %"class.blink::ErrorEvent"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  %8 = ptrtoint %"class.blink::ErrorEvent"* %1 to i64
  br i1 %7, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11, i32 0
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %30, label %16, !prof !2

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member.88"*, %"class.blink::Member.88"** %17, align 8
  %19 = zext i32 %12 to i64
  %20 = getelementptr inbounds %"class.blink::Member.88", %"class.blink::Member.88"* %18, i64 %19
  %21 = bitcast %"class.blink::Member.88"* %20 to i64*
  store atomic i64 %8, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.blink::ErrorEvent"* %1 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #16
  br label %27

27:                                               ; preds = %24, %16
  %28 = load i32, i32* %11, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %11, align 4
  br label %93

30:                                               ; preds = %9
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %10, %"class.blink::ErrorEvent"** nonnull dereferenceable(8) %4) #16
  br label %93

31:                                               ; preds = %3
  %32 = bitcast %"class.blink::ExecutionContext"* %0 to %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)***
  %33 = load %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)**, %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)*, %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)** %33, i64 32
  %35 = load %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)*, %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)** %34, align 8
  %36 = tail call %"class.blink::EventTarget"* %35(%"class.blink::ExecutionContext"* %0) #16
  %37 = icmp eq %"class.blink::EventTarget"* %36, null
  br i1 %37, label %53, label %38

38:                                               ; preds = %31
  %39 = icmp eq i32 %2, 1
  br i1 %39, label %40, label %45

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %1, i64 0, i32 5, i32 0
  %42 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %41, align 8
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %42) #16
  %44 = tail call %"class.blink::ErrorEvent"* @_ZN5blink10ErrorEvent20CreateSanitizedErrorEPNS_11ScriptStateE(%"class.blink::ScriptState"* %43) #16
  br label %45

45:                                               ; preds = %38, %40
  %46 = phi %"class.blink::ErrorEvent"* [ %44, %40 ], [ %1, %38 ]
  store i8 1, i8* %5, align 4
  %47 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %46, i64 0, i32 0
  %48 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* nonnull %36, %"class.blink::Event"* dereferenceable(104) %47) #16
  store i8 0, i8* %5, align 4
  %49 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %46, i64 0, i32 0, i32 2
  %50 = load i16, i16* %49, align 8
  %51 = and i16 %50, 32
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %45, %31
  %54 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)***
  %55 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)** %55, i64 28
  %57 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)** %56, align 8
  tail call void %57(%"class.blink::ExecutionContext"* %0, %"class.blink::ErrorEvent"* %1) #16
  br label %58

58:                                               ; preds = %45, %53
  %59 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11, i32 0
  %60 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %93, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %59, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Member.88"*, %"class.blink::Member.88"** %64, align 8
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds %"class.blink::Member.88", %"class.blink::Member.88"* %65, i64 %66
  %68 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)***
  br label %84

69:                                               ; preds = %84
  %70 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %93, label %73

73:                                               ; preds = %69
  %74 = load i32, i32* %60, align 4
  %75 = icmp eq i32 %74, 0
  %76 = bitcast %"class.WTF::Vector"* %59 to i8**
  br i1 %75, label %81, label %77

77:                                               ; preds = %73
  %78 = load i8*, i8** %76, align 8
  %79 = zext i32 %74 to i64
  %80 = shl nuw nsw i64 %79, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %78, i64 %80) #16
  store i32 0, i32* %60, align 4
  br label %81

81:                                               ; preds = %77, %73
  %82 = load i8*, i8** %76, align 8
  %83 = bitcast %"class.WTF::Vector"* %59 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store i32 0, i32* %70, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %82) #16
  br label %93

84:                                               ; preds = %63, %84
  %85 = phi %"class.blink::Member.88"* [ %65, %63 ], [ %91, %84 ]
  %86 = getelementptr inbounds %"class.blink::Member.88", %"class.blink::Member.88"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::ErrorEvent"*, %"class.blink::ErrorEvent"** %86, align 8
  %88 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)*** %68, align 8
  %89 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)** %88, i64 28
  %90 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*)** %89, align 8
  tail call void %90(%"class.blink::ExecutionContext"* %0, %"class.blink::ErrorEvent"* %87) #16
  %91 = getelementptr inbounds %"class.blink::Member.88", %"class.blink::Member.88"* %85, i64 1
  %92 = icmp eq %"class.blink::Member.88"* %91, %67
  br i1 %92, label %69, label %84

93:                                               ; preds = %81, %69, %30, %27, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16ExecutionContext26DispatchErrorEventInternalEPNS_10ErrorEventENS_20SanitizeScriptErrorsE(%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::ExecutionContext"* %0 to %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)***
  %5 = load %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)**, %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)*, %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)** %5, i64 32
  %7 = load %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)*, %"class.blink::EventTarget"* (%"class.blink::ExecutionContext"*)** %6, align 8
  %8 = tail call %"class.blink::EventTarget"* %7(%"class.blink::ExecutionContext"* %0) #16
  %9 = icmp eq %"class.blink::EventTarget"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %3
  %11 = icmp eq i32 %2, 1
  br i1 %11, label %12, label %17

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %1, i64 0, i32 5, i32 0
  %14 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %13, align 8
  %15 = tail call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %14) #16
  %16 = tail call %"class.blink::ErrorEvent"* @_ZN5blink10ErrorEvent20CreateSanitizedErrorEPNS_11ScriptStateE(%"class.blink::ScriptState"* %15) #16
  br label %17

17:                                               ; preds = %12, %10
  %18 = phi %"class.blink::ErrorEvent"* [ %16, %12 ], [ %1, %10 ]
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 9
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %18, i64 0, i32 0
  %21 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* nonnull %8, %"class.blink::Event"* dereferenceable(104) %20) #16
  store i8 0, i8* %19, align 4
  %22 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %18, i64 0, i32 0, i32 2
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 32
  %25 = icmp ne i16 %24, 0
  br label %26

26:                                               ; preds = %3, %17
  %27 = phi i1 [ %25, %17 ], [ false, %3 ]
  ret i1 %27
}

declare %"class.blink::ErrorEvent"* @_ZN5blink10ErrorEvent20CreateSanitizedErrorEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #1

declare %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink16ExecutionContext19GetLoaderFreezeModeEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = icmp ult i32 %8, 2
  %10 = select i1 %9, i8 0, i8 2
  ret i8 %10

11:                                               ; preds = %1
  ret i8 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext14IsLoadDeferredEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink16ExecutionContext20CircularSequentialIDEv(%"class.blink::ExecutionContext"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  %5 = icmp slt i32 %4, 0
  %6 = select i1 %5, i32 1, i32 %4
  store i32 %6, i32* %2, align 8
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %"class.blink::PublicURLManager"* @_ZN5blink16ExecutionContext19GetPublicURLManagerEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 20
  %3 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::PublicURLManager"*, %"class.blink::PublicURLManager"** %3, align 8
  %5 = icmp eq %"class.blink::PublicURLManager"* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16PublicURLManagerEEEPhm(i64 88) #16
  %8 = bitcast i8* %7 to %"class.blink::PublicURLManager"*
  tail call void @_ZN5blink16PublicURLManagerC1EPNS_16ExecutionContextE(%"class.blink::PublicURLManager"* %8, %"class.blink::ExecutionContext"* %0) #16
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.blink::Member.318"* %2 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  %17 = bitcast i8* %7 to %"class.blink::PublicURLManager"*
  br i1 %16, label %21, label %18

18:                                               ; preds = %6
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #16
  %20 = load %"class.blink::PublicURLManager"*, %"class.blink::PublicURLManager"** %3, align 8
  br label %21

21:                                               ; preds = %1, %18, %6
  %22 = phi %"class.blink::PublicURLManager"* [ %4, %1 ], [ %20, %18 ], [ %17, %6 ]
  ret %"class.blink::PublicURLManager"* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.blink::ContentSecurityPolicyDelegate"* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyDelegateEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 21, i32 0, i32 0
  %3 = load %"class.blink::ContentSecurityPolicyDelegate"*, %"class.blink::ContentSecurityPolicyDelegate"** %2, align 8
  ret %"class.blink::ContentSecurityPolicyDelegate"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::HandleScope", align 8
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 5
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = bitcast %"class.v8::HandleScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = bitcast %"class.v8::HandleScope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %2, %"class.v8::Isolate"* %4) #16
  %7 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %4) #16
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %4) #16
  %11 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %10) #16
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 2, i32 0
  %13 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %12, align 8
  %14 = icmp eq %"class.blink::DOMWrapperWorld"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %13, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #16
  br label %17

17:                                               ; preds = %15, %9, %1
  %18 = phi %"class.blink::DOMWrapperWorld"* [ null, %1 ], [ null, %9 ], [ %13, %15 ]
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret %"class.blink::DOMWrapperWorld"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext39GetContentSecurityPolicyForCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::HandleScope", align 8
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 5
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = bitcast %"class.v8::HandleScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false) #16
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %2, %"class.v8::Isolate"* %4) #16
  %6 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %4) #16
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %4) #16
  %10 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #16
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %10, i64 0, i32 2, i32 0
  %12 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %11, align 8
  %13 = icmp eq %"class.blink::DOMWrapperWorld"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %12, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #16
  br label %16

16:                                               ; preds = %1, %8, %14
  %17 = phi %"class.blink::DOMWrapperWorld"* [ null, %1 ], [ null, %8 ], [ %12, %14 ]
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  %18 = bitcast %"class.blink::ExecutionContext"* %0 to %"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)***
  %19 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)**, %"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)** %19, i64 17
  %21 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)** %20, align 8
  %22 = call %"class.blink::ContentSecurityPolicy"* %21(%"class.blink::ExecutionContext"* %0, %"class.blink::DOMWrapperWorld"* %17) #16
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %17, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %17, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #16
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %17) #16
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %17 to i8*
  call void @free(i8* %30) #16
  br label %31

31:                                               ; preds = %16, %24, %29
  ret %"class.blink::ContentSecurityPolicy"* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"* nocapture readonly, %"class.blink::DOMWrapperWorld"* nocapture readnone) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 27, i32 0, i32 0
  %4 = load %"class.blink::ContentSecurityPolicy"*, %"class.blink::ContentSecurityPolicy"** %3, align 8
  ret %"class.blink::ContentSecurityPolicy"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 27, i32 0, i32 0
  %3 = load %"class.blink::ContentSecurityPolicy"*, %"class.blink::ContentSecurityPolicy"** %2, align 8
  ret %"class.blink::ContentSecurityPolicy"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink16ExecutionContext24GetMutableSecurityOriginEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6, i32 2, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  ret %"class.blink::SecurityOrigin"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext24SetContentSecurityPolicyEPNS_21ContentSecurityPolicyE(%"class.blink::ExecutionContext"* nocapture, %"class.blink::ContentSecurityPolicy"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 27
  %4 = ptrtoint %"class.blink::ContentSecurityPolicy"* %1 to i64
  %5 = bitcast %"class.blink::Member.497"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ContentSecurityPolicy"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #16
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16ExecutionContext22SetRequireTrustedTypesEv(%"class.blink::ExecutionContext"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 28
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16ExecutionContext32SetRequireTrustedTypesForTestingEv(%"class.blink::ExecutionContext"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 28
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink16ExecutionContext15GetSandboxFlagsEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6
  %4 = tail call zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* %3, i32 %1) #16
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::Agent"*, %"class.blink::Agent"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Agent", %"class.blink::Agent"* %3, i64 0, i32 2
  ret %"class.base::UnguessableToken"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext22AllowWindowInteractionEv(%"class.blink::ExecutionContext"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 23
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext24ConsumeWindowInteractionEv(%"class.blink::ExecutionContext"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 23
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = add nsw i32 %3, -1
  store i32 %6, i32* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsWindowInteractionAllowedEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 23
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext15IsSecureContextERN3WTF6StringE(%"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink14SecurityOrigin36IsPotentiallyTrustworthyErrorMessageEv() #16
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %9 = bitcast %"class.WTF::String"* %1 to i64*
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %8, i64* %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #16
  br label %26

26:                                               ; preds = %6, %22, %25, %2
  %27 = phi i1 [ true, %2 ], [ false, %25 ], [ false, %22 ], [ false, %6 ]
  ret i1 %27
}

declare %"class.WTF::StringImpl"* @_ZN5blink14SecurityOrigin36IsPotentiallyTrustworthyErrorMessageEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::ExecutionContext"* %0 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %3 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %3, i64 18
  %5 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %4, align 8
  %6 = tail call dereferenceable(112) %"class.blink::KURL"* %5(%"class.blink::ExecutionContext"* %0) #16
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL24StrippedForUseAsReferrerEv(%"class.blink::KURL"* %6) #16
  ret %"class.WTF::StringImpl"* %7
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL24StrippedForUseAsReferrerEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext25ParseAndSetReferrerPolicyERKN3WTF6StringENS_20ReferrerPolicySourceE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.WTF::StringAppend.2210", align 8
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #16
  store i32 -1431655766, i32* %4, align 4
  switch i32 %2, label %488 [
    i32 0, label %11
    i32 1, label %16
  ]

11:                                               ; preds = %3
  %12 = call zeroext i1 @_ZN5blink14SecurityPolicy29ReferrerPolicyFromHeaderValueERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %1, i32 1, i32* nonnull %4) #16
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  br label %84

16:                                               ; preds = %3
  %17 = call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %1, i32 0, i32* nonnull %4) #16
  br i1 %17, label %18, label %35

18:                                               ; preds = %11, %16
  %19 = load i32, i32* %4, align 4
  %20 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 3
  %21 = bitcast %"class.blink::UseCounter"* %20 to void (%"class.blink::UseCounter"*, i32)***
  %22 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, i64 3
  %24 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %23, align 8
  call void %24(%"class.blink::UseCounter"* nonnull %20, i32 593) #16
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %25, align 8
  %27 = call i32 @_ZNK5blink15PolicyContainer17GetReferrerPolicyEv(%"class.blink::PolicyContainer"* %26) #16
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %33, label %29

29:                                               ; preds = %18
  %30 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %21, align 8
  %31 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %30, i64 3
  %32 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %31, align 8
  call void %32(%"class.blink::UseCounter"* nonnull %20, i32 243) #16
  br label %33

33:                                               ; preds = %18, %29
  %34 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %25, align 8
  call void @_ZN5blink15PolicyContainer20UpdateReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::PolicyContainer"* %34, i32 %19) #16
  br label %488

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #16
  br label %218

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  br i1 %45, label %59, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %82, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.WTF::StringImpl"* %46 to i8*
  %53 = zext i32 %49 to i64
  %54 = call i8* @memchr(i8* %52, i32 44, i64 %53) #19
  %55 = icmp eq i8* %54, null
  %56 = ptrtoint i8* %54 to i64
  %57 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %58 = sub i64 %56, %57
  br i1 %55, label %82, label %74

59:                                               ; preds = %41
  %60 = bitcast %"class.WTF::StringImpl"* %46 to i16*
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %82, label %64

64:                                               ; preds = %59
  %65 = zext i32 %62 to i64
  br label %66

66:                                               ; preds = %71, %64
  %67 = phi i64 [ %72, %71 ], [ 0, %64 ]
  %68 = getelementptr inbounds i16, i16* %60, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 44
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = add nuw nsw i64 %67, 1
  %73 = icmp eq i64 %72, %65
  br i1 %73, label %84, label %66

74:                                               ; preds = %66, %51
  %75 = phi i64 [ %58, %51 ], [ %67, %66 ]
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %84, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i64 65) #16
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #16
  br label %343

82:                                               ; preds = %47, %59, %51
  %83 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83) #16
  br label %89

84:                                               ; preds = %71, %13, %74
  %85 = phi %"class.WTF::StringImpl"* [ %37, %74 ], [ %15, %13 ], [ %37, %71 ]
  %86 = phi i8* [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), %74 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %13 ], [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), %71 ]
  %87 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #16
  %88 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %88, label %218, label %89

89:                                               ; preds = %82, %84
  %90 = phi i8* [ %83, %82 ], [ %87, %84 ]
  %91 = phi i8* [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), %82 ], [ %86, %84 ]
  %92 = phi %"class.WTF::StringImpl"* [ %37, %82 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %109

99:                                               ; preds = %89
  %100 = zext i32 %98 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #16
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %99
  call void @llvm.trap() #16
  unreachable

107:                                              ; preds = %99
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %97, align 4
  br label %109

109:                                              ; preds = %107, %89
  %110 = phi i32 [ %108, %107 ], [ %98, %89 ]
  %111 = load atomic i32, i32* %93 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %109
  %115 = zext i32 %110 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #16
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %114
  call void @llvm.trap() #16
  unreachable

122:                                              ; preds = %114
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %97, align 4
  br label %124

124:                                              ; preds = %122, %109
  %125 = phi i32 [ %123, %122 ], [ %110, %109 ]
  %126 = load atomic i32, i32* %93 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %124
  %130 = add i32 %125, -1
  store i32 %130, i32* %97, align 4
  br label %131

131:                                              ; preds = %129, %124
  %132 = phi i32 [ %130, %129 ], [ %125, %124 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16
  br label %135

135:                                              ; preds = %131, %134
  %136 = load atomic i32, i32* %93 monotonic, align 4, !noalias !16
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = load i32, i32* %97, align 4
  br i1 %138, label %140, label %150

140:                                              ; preds = %135
  %141 = zext i32 %139 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #16
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %140
  call void @llvm.trap() #16, !noalias !16
  unreachable

148:                                              ; preds = %140
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %97, align 4, !noalias !16
  br label %150

150:                                              ; preds = %135, %148
  %151 = phi i32 [ %149, %148 ], [ %139, %135 ]
  %152 = load atomic i32, i32* %93 monotonic, align 4, !noalias !16
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %165

155:                                              ; preds = %150
  %156 = zext i32 %151 to i33
  %157 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %156, i33 1) #16
  %158 = extractvalue { i33, i1 } %157, 1
  %159 = extractvalue { i33, i1 } %157, 0
  %160 = icmp slt i33 %159, 0
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %163, !prof !2

162:                                              ; preds = %155
  call void @llvm.trap() #16, !noalias !16
  unreachable

163:                                              ; preds = %155
  %164 = trunc i33 %159 to i32
  store i32 %164, i32* %97, align 4, !noalias !16
  br label %165

165:                                              ; preds = %163, %150
  %166 = phi i32 [ %164, %163 ], [ %151, %150 ]
  %167 = load atomic i32, i32* %93 monotonic, align 4, !noalias !16
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  %171 = add i32 %166, -1
  store i32 %171, i32* %97, align 4, !noalias !16
  br label %172

172:                                              ; preds = %170, %165
  %173 = phi i32 [ %171, %170 ], [ %166, %165 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16, !noalias !16
  br label %176

176:                                              ; preds = %175, %172
  %177 = load atomic i32, i32* %93 monotonic, align 4, !noalias !19
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = load i32, i32* %97, align 4
  br i1 %179, label %181, label %191

181:                                              ; preds = %176
  %182 = zext i32 %180 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #16
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !2

188:                                              ; preds = %181
  call void @llvm.trap() #16, !noalias !19
  unreachable

189:                                              ; preds = %181
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %97, align 4, !noalias !19
  br label %191

191:                                              ; preds = %176, %189
  %192 = phi i32 [ %190, %189 ], [ %180, %176 ]
  %193 = load atomic i32, i32* %93 monotonic, align 4, !noalias !19
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %206

196:                                              ; preds = %191
  %197 = zext i32 %192 to i33
  %198 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %197, i33 1) #16
  %199 = extractvalue { i33, i1 } %198, 1
  %200 = extractvalue { i33, i1 } %198, 0
  %201 = icmp slt i33 %200, 0
  %202 = or i1 %199, %201
  br i1 %202, label %203, label %204, !prof !2

203:                                              ; preds = %196
  call void @llvm.trap() #16, !noalias !19
  unreachable

204:                                              ; preds = %196
  %205 = trunc i33 %200 to i32
  store i32 %205, i32* %97, align 4, !noalias !19
  br label %206

206:                                              ; preds = %204, %191
  %207 = phi i32 [ %205, %204 ], [ %192, %191 ]
  %208 = ptrtoint i8* %91 to i64
  %209 = load atomic i32, i32* %93 monotonic, align 4, !noalias !19
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = add i32 %207, -1
  store i32 %213, i32* %97, align 4, !noalias !19
  br label %214

214:                                              ; preds = %212, %206
  %215 = phi i32 [ %213, %212 ], [ %207, %206 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %229

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16, !noalias !19
  br label %229

218:                                              ; preds = %39, %84
  %219 = phi i8* [ %40, %39 ], [ %87, %84 ]
  %220 = phi i8* [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), %39 ], [ %86, %84 ]
  %221 = ptrtoint i8* %220 to i64
  %222 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([12 x i8]* @.str.1 to i64), i64* %222, align 8, !alias.scope !22
  %223 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %223, align 8, !alias.scope !22
  %224 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 1
  %225 = bitcast i8** %224 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.2 to i64), i64* %225, align 8, !alias.scope !22
  %226 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1
  %227 = bitcast i8** %226 to i64*
  store i64 %221, i64* %227, align 8, !alias.scope !22
  %228 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.5, i64 0, i64 0), i8** %228, align 8, !alias.scope !22
  br label %282

229:                                              ; preds = %217, %214
  %230 = load atomic i32, i32* %93 monotonic, align 4, !noalias !22
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %246

233:                                              ; preds = %229
  %234 = load i32, i32* %97, align 4, !noalias !22
  %235 = zext i32 %234 to i33
  %236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #16
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !2

241:                                              ; preds = %233
  call void @llvm.trap() #16, !noalias !22
  unreachable

242:                                              ; preds = %233
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %97, align 4, !noalias !22
  %244 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([12 x i8]* @.str.1 to i64), i64* %244, align 8, !alias.scope !22
  %245 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %245, align 8, !alias.scope !22
  br label %250

246:                                              ; preds = %229
  %247 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([12 x i8]* @.str.1 to i64), i64* %247, align 8, !alias.scope !22
  %248 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %248, align 8, !alias.scope !22
  %249 = load i32, i32* %97, align 4, !noalias !22
  br label %250

250:                                              ; preds = %246, %242
  %251 = phi i32 [ %243, %242 ], [ %249, %246 ]
  %252 = phi %"class.WTF::StringImpl"** [ %245, %242 ], [ %248, %246 ]
  %253 = load atomic i32, i32* %93 monotonic, align 4, !noalias !22
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %266

256:                                              ; preds = %250
  %257 = zext i32 %251 to i33
  %258 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %257, i33 1) #16
  %259 = extractvalue { i33, i1 } %258, 1
  %260 = extractvalue { i33, i1 } %258, 0
  %261 = icmp slt i33 %260, 0
  %262 = or i1 %259, %261
  br i1 %262, label %263, label %264, !prof !2

263:                                              ; preds = %256
  call void @llvm.trap() #16, !noalias !22
  unreachable

264:                                              ; preds = %256
  %265 = trunc i33 %260 to i32
  store i32 %265, i32* %97, align 4, !noalias !22
  br label %266

266:                                              ; preds = %264, %250
  %267 = phi i32 [ %265, %264 ], [ %251, %250 ]
  %268 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 1
  %269 = bitcast i8** %268 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.2 to i64), i64* %269, align 8, !alias.scope !22
  %270 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1
  %271 = bitcast i8** %270 to i64*
  store i64 %208, i64* %271, align 8, !alias.scope !22
  %272 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.5, i64 0, i64 0), i8** %272, align 8, !alias.scope !22
  %273 = load atomic i32, i32* %93 monotonic, align 4, !noalias !22
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %278

276:                                              ; preds = %266
  %277 = add i32 %267, -1
  store i32 %277, i32* %97, align 4, !noalias !22
  br label %278

278:                                              ; preds = %276, %266
  %279 = phi i32 [ %277, %276 ], [ %267, %266 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16, !noalias !22
  br label %282

282:                                              ; preds = %218, %278, %281
  %283 = phi i1 [ true, %218 ], [ false, %278 ], [ false, %281 ]
  %284 = phi i8* [ %219, %218 ], [ %90, %278 ], [ %90, %281 ]
  %285 = phi %"class.WTF::StringImpl"* [ null, %218 ], [ %92, %278 ], [ %92, %281 ]
  %286 = phi %"class.WTF::StringImpl"** [ %223, %218 ], [ %252, %278 ], [ %252, %281 ]
  %287 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %286, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %303, label %290

290:                                              ; preds = %282
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  br i1 %294, label %297, label %299

297:                                              ; preds = %290
  %298 = add i32 %296, -1
  store i32 %298, i32* %295, align 4
  br label %299

299:                                              ; preds = %297, %290
  %300 = phi i32 [ %298, %297 ], [ %296, %290 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #16
  br label %303

303:                                              ; preds = %282, %299, %302
  br i1 %283, label %342, label %304

304:                                              ; preds = %303
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #16
  br label %317

317:                                              ; preds = %316, %313
  %318 = load atomic i32, i32* %305 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = load i32, i32* %309, align 4
  br i1 %320, label %322, label %324

322:                                              ; preds = %317
  %323 = add i32 %321, -1
  store i32 %323, i32* %309, align 4
  br label %324

324:                                              ; preds = %322, %317
  %325 = phi i32 [ %323, %322 ], [ %321, %317 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #16
  br label %328

328:                                              ; preds = %324, %327
  br i1 %283, label %342, label %329

329:                                              ; preds = %328
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  br i1 %333, label %336, label %338

336:                                              ; preds = %329
  %337 = add i32 %335, -1
  store i32 %337, i32* %334, align 4
  br label %338

338:                                              ; preds = %336, %329
  %339 = phi i32 [ %337, %336 ], [ %335, %329 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #16
  br label %342

342:                                              ; preds = %303, %328, %338, %341
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %284) #16
  br label %343

343:                                              ; preds = %342, %78
  %344 = phi %"class.WTF::StringImpl"* [ %81, %78 ], [ %287, %342 ]
  %345 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %345) #16
  store i32 6, i32* %7, align 4
  %346 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %346) #16
  store i32 3, i32* %8, align 4
  %347 = bitcast %"class.WTF::StringAppend.2210"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %347) #16
  %348 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %348, label %424, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  br i1 %353, label %356, label %366

356:                                              ; preds = %349
  %357 = zext i32 %355 to i33
  %358 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %357, i33 1) #16
  %359 = extractvalue { i33, i1 } %358, 1
  %360 = extractvalue { i33, i1 } %358, 0
  %361 = icmp slt i33 %360, 0
  %362 = or i1 %359, %361
  br i1 %362, label %363, label %364, !prof !2

363:                                              ; preds = %356
  call void @llvm.trap() #16
  unreachable

364:                                              ; preds = %356
  %365 = trunc i33 %360 to i32
  store i32 %365, i32* %354, align 4
  br label %366

366:                                              ; preds = %364, %349
  %367 = phi i32 [ %365, %364 ], [ %355, %349 ]
  %368 = load atomic i32, i32* %350 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %381

371:                                              ; preds = %366
  %372 = zext i32 %367 to i33
  %373 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %372, i33 1) #16
  %374 = extractvalue { i33, i1 } %373, 1
  %375 = extractvalue { i33, i1 } %373, 0
  %376 = icmp slt i33 %375, 0
  %377 = or i1 %374, %376
  br i1 %377, label %378, label %379, !prof !2

378:                                              ; preds = %371
  call void @llvm.trap() #16
  unreachable

379:                                              ; preds = %371
  %380 = trunc i33 %375 to i32
  store i32 %380, i32* %354, align 4
  br label %381

381:                                              ; preds = %379, %366
  %382 = phi i32 [ %380, %379 ], [ %367, %366 ]
  %383 = load atomic i32, i32* %350 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %388

386:                                              ; preds = %381
  %387 = add i32 %382, -1
  store i32 %387, i32* %354, align 4
  br label %388

388:                                              ; preds = %386, %381
  %389 = phi i32 [ %387, %386 ], [ %382, %381 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %388
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #16
  br label %392

392:                                              ; preds = %388, %391
  %393 = load atomic i32, i32* %350 monotonic, align 4, !noalias !25
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = load i32, i32* %354, align 4
  br i1 %395, label %397, label %407

397:                                              ; preds = %392
  %398 = zext i32 %396 to i33
  %399 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %398, i33 1) #16
  %400 = extractvalue { i33, i1 } %399, 1
  %401 = extractvalue { i33, i1 } %399, 0
  %402 = icmp slt i33 %401, 0
  %403 = or i1 %400, %402
  br i1 %403, label %404, label %405, !prof !2

404:                                              ; preds = %397
  call void @llvm.trap() #16, !noalias !25
  unreachable

405:                                              ; preds = %397
  %406 = trunc i33 %401 to i32
  store i32 %406, i32* %354, align 4, !noalias !25
  br label %407

407:                                              ; preds = %392, %405
  %408 = phi i32 [ %406, %405 ], [ %396, %392 ]
  %409 = bitcast %"class.WTF::StringAppend.2210"* %9 to i64*
  store i64 ptrtoint ([32 x i8]* @.str.6 to i64), i64* %409, align 8, !alias.scope !25
  %410 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %344, %"class.WTF::StringImpl"** %410, align 8, !alias.scope !25
  %411 = load atomic i32, i32* %350 monotonic, align 4, !noalias !25
  %412 = and i32 %411, 2
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %428

414:                                              ; preds = %407
  %415 = zext i32 %408 to i33
  %416 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %415, i33 1) #16
  %417 = extractvalue { i33, i1 } %416, 1
  %418 = extractvalue { i33, i1 } %416, 0
  %419 = icmp slt i33 %418, 0
  %420 = or i1 %417, %419
  br i1 %420, label %421, label %422, !prof !2

421:                                              ; preds = %414
  call void @llvm.trap() #16, !noalias !25
  unreachable

422:                                              ; preds = %414
  %423 = trunc i33 %418 to i32
  store i32 %423, i32* %354, align 4, !noalias !25
  br label %428

424:                                              ; preds = %343
  %425 = bitcast %"class.WTF::StringAppend.2210"* %9 to i64*
  store i64 ptrtoint ([32 x i8]* @.str.6 to i64), i64* %425, align 8, !alias.scope !25
  %426 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %426, align 8, !alias.scope !25
  %427 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8** %427, align 8, !alias.scope !25
  br label %440

428:                                              ; preds = %422, %407
  %429 = phi i32 [ %423, %422 ], [ %408, %407 ]
  %430 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8** %430, align 8, !alias.scope !25
  %431 = load atomic i32, i32* %350 monotonic, align 4, !noalias !25
  %432 = and i32 %431, 2
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %436

434:                                              ; preds = %428
  %435 = add i32 %429, -1
  store i32 %435, i32* %354, align 4, !noalias !25
  br label %436

436:                                              ; preds = %434, %428
  %437 = phi i32 [ %435, %434 ], [ %429, %428 ]
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %440

439:                                              ; preds = %436
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #16, !noalias !25
  br label %440

440:                                              ; preds = %424, %436, %439
  %441 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESA_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, %"class.WTF::StringAppend.2210"* nonnull dereferenceable(24) %9) #16
  %442 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %443 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %442, align 8
  %444 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %443, i64 52
  %445 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %444, align 8
  call void %445(%"class.blink::ExecutionContext"* %0, %"class.blink::ConsoleMessage"* %441, i1 zeroext false) #16
  %446 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %462, label %449

449:                                              ; preds = %440
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 0
  %455 = load i32, i32* %454, align 4
  br i1 %453, label %456, label %458

456:                                              ; preds = %449
  %457 = add i32 %455, -1
  store i32 %457, i32* %454, align 4
  br label %458

458:                                              ; preds = %456, %449
  %459 = phi i32 [ %457, %456 ], [ %455, %449 ]
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %447) #16
  br label %462

462:                                              ; preds = %440, %458, %461
  br i1 %348, label %476, label %463

463:                                              ; preds = %462
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = load atomic i32, i32* %464 monotonic, align 4
  %466 = and i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %469 = load i32, i32* %468, align 4
  br i1 %467, label %470, label %472

470:                                              ; preds = %463
  %471 = add i32 %469, -1
  store i32 %471, i32* %468, align 4
  br label %472

472:                                              ; preds = %470, %463
  %473 = phi i32 [ %471, %470 ], [ %469, %463 ]
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %477

475:                                              ; preds = %472
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #16
  br label %477

476:                                              ; preds = %462
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %347) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %346) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %345) #16
  br label %488

477:                                              ; preds = %472, %475
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %347) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %346) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %345) #16
  %478 = load atomic i32, i32* %464 monotonic, align 4
  %479 = and i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = load i32, i32* %468, align 4
  br i1 %480, label %482, label %484

482:                                              ; preds = %477
  %483 = add i32 %481, -1
  store i32 %483, i32* %468, align 4
  br label %484

484:                                              ; preds = %482, %477
  %485 = phi i32 [ %483, %482 ], [ %481, %477 ]
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %484
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #16
  br label %488

488:                                              ; preds = %487, %484, %476, %33, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #16
  ret void
}

declare zeroext i1 @_ZN5blink14SecurityPolicy29ReferrerPolicyFromHeaderValueERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext17SetReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 3
  %4 = icmp eq %"class.blink::UseCounter"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::UseCounter"* %3 to void (%"class.blink::UseCounter"*, i32)***
  %7 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %7, i64 3
  %9 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %8, align 8
  tail call void %9(%"class.blink::UseCounter"* nonnull %3, i32 593) #16
  br label %10

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %12 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %11, align 8
  %13 = tail call i32 @_ZNK5blink15PolicyContainer17GetReferrerPolicyEv(%"class.blink::PolicyContainer"* %12) #16
  %14 = icmp eq i32 %13, 1
  %15 = or i1 %4, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::UseCounter"* %3 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* nonnull %3, i32 243) #16
  br label %21

21:                                               ; preds = %10, %16
  %22 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %11, align 8
  tail call void @_ZN5blink15PolicyContainer20UpdateReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::PolicyContainer"* %22, i32 %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %8 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %9 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %13 = bitcast %"class.WTF::StringTypeAdapter.2389"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #16
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %9, i8* %15) #16
  %16 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #16
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %4, i8* %18) #16
  %19 = bitcast %"class.WTF::StringTypeAdapter.2389"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #16
  %21 = load i8*, i8** %20, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %3, i8* %21) #16
  %22 = bitcast %"class.WTF::StringTypeAdapter.2389"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #16
  %24 = load i8*, i8** %23, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %2, i8* %24) #16
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %29 = select i1 %27, %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"* %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #16
  br i1 %33, label %81, label %34

34:                                               ; preds = %1
  %35 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %36 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %37 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %36, i8** nonnull dereferenceable(8) %10) #16
  %38 = load i8*, i8** %10, align 8
  %39 = bitcast %"class.WTF::StringTypeAdapter.2389"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #16
  %40 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %8, i8* %40) #16
  %41 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringTypeAdapter.2389"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false) #16
  %43 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %7, i8* %43) #16
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2210"* %41, i8* %38) #16
  %44 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2210"* %41) #16
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %38, i64 %45
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2389"* nonnull %7, i8* %46) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #16
  %47 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.2209"* %12) #16
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %38, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2389"* nonnull %8, i8* %49) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #16
  %50 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %50, label %128, label %51

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #16
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #16
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %128

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #16
  br label %128

81:                                               ; preds = %1
  %82 = bitcast i16** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %11) #16
  %85 = load i16*, i16** %11, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.2389"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false) #16
  %87 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %6, i8* %87) #16
  %88 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %89 = bitcast %"class.WTF::StringTypeAdapter.2389"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #16
  %90 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %5, i8* %90) #16
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2210"* %88, i16* %85) #16
  %91 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2210"* %88) #16
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %85, i64 %92
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2389"* nonnull %5, i16* %93) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #16
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.2209"* %12) #16
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i16, i16* %85, i64 %95
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2389"* nonnull %6, i16* %96) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #16
  %97 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %97, label %128, label %98

98:                                               ; preds = %81
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %115

105:                                              ; preds = %98
  %106 = zext i32 %104 to i33
  %107 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %106, i33 1) #16
  %108 = extractvalue { i33, i1 } %107, 1
  %109 = extractvalue { i33, i1 } %107, 0
  %110 = icmp slt i33 %109, 0
  %111 = or i1 %108, %110
  br i1 %111, label %112, label %113, !prof !2

112:                                              ; preds = %105
  call void @llvm.trap() #16
  unreachable

113:                                              ; preds = %105
  %114 = trunc i33 %109 to i32
  store i32 %114, i32* %103, align 4
  br label %115

115:                                              ; preds = %98, %113
  %116 = phi i32 [ %114, %113 ], [ %104, %98 ]
  %117 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %118 = load atomic i32, i32* %99 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %123 = add i32 %116, -1
  store i32 %123, i32* %122, align 4
  br label %124

124:                                              ; preds = %121, %115
  %125 = phi i32 [ %123, %121 ], [ %116, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #16
  br label %128

128:                                              ; preds = %127, %124, %81, %80, %77, %34
  %129 = phi i8* [ %35, %34 ], [ %35, %77 ], [ %35, %80 ], [ %82, %81 ], [ %82, %124 ], [ %82, %127 ]
  %130 = phi i64 [ 0, %34 ], [ %70, %77 ], [ %70, %80 ], [ 0, %81 ], [ %117, %124 ], [ %117, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #16
  %131 = inttoptr i64 %130 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16ExecutionContext17GetReferrerPolicyEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %2, align 8
  %4 = tail call i32 @_ZNK5blink15PolicyContainer17GetReferrerPolicyEv(%"class.blink::PolicyContainer"* %3) #16
  ret i32 %4
}

declare i32 @_ZNK5blink15PolicyContainer17GetReferrerPolicyEv(%"class.blink::PolicyContainer"*) local_unnamed_addr #1

declare void @_ZN5blink15PolicyContainer20UpdateReferrerPolicyEN7network5mojom14ReferrerPolicyE(%"class.blink::PolicyContainer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16ExecutionContext12AddressSpaceEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %2, align 8
  %4 = tail call i32 @_ZNK5blink15PolicyContainer17GetIPAddressSpaceEv(%"class.blink::PolicyContainer"* %3) #16
  ret i32 %4
}

declare i32 @_ZNK5blink15PolicyContainer17GetIPAddressSpaceEv(%"class.blink::PolicyContainer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext15SetAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::ExecutionContext"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %3, align 8
  tail call void @_ZN5blink15PolicyContainer17SetIPAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::PolicyContainer"* %4, i32 %1) #16
  ret void
}

declare void @_ZN5blink15PolicyContainer17SetIPAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::PolicyContainer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext18SetPolicyContainerENSt3__110unique_ptrINS_15PolicyContainerENS1_14default_deleteIS3_EEEE(%"class.blink::ExecutionContext"* nocapture, %"class.blink::PolicyContainer"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::PolicyContainer"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.344"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::PolicyContainer"* %6, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::PolicyContainer", %"class.blink::PolicyContainer"* %6, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::PolicyContainer", %"class.blink::PolicyContainer"* %6, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::PolicyContainerHostProxy"*, %"class.blink::mojom::blink::PolicyContainerHostProxy"** %11, align 8
  store %"class.blink::mojom::blink::PolicyContainerHostProxy"* null, %"class.blink::mojom::blink::PolicyContainerHostProxy"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::PolicyContainerHostProxy"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::mojom::blink::PolicyContainerHostProxy"* %12 to void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)***
  %16 = load void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)**, void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)*, void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)** %16, i64 1
  %18 = load void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)*, void (%"class.blink::mojom::blink::PolicyContainerHostProxy"*)** %17, align 8
  tail call void %18(%"class.blink::mojom::blink::PolicyContainerHostProxy"* nonnull %12) #16
  br label %19

19:                                               ; preds = %14, %9
  %20 = bitcast %"class.mojo::AssociatedRemote"* %10 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %20) #16
  %21 = getelementptr inbounds %"class.blink::PolicyContainer", %"class.blink::PolicyContainer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::mojom::blink::PolicyContainerPolicies"*, %"class.blink::mojom::blink::PolicyContainerPolicies"** %21, align 8
  store %"class.blink::mojom::blink::PolicyContainerPolicies"* null, %"class.blink::mojom::blink::PolicyContainerPolicies"** %21, align 8
  %23 = icmp eq %"class.blink::mojom::blink::PolicyContainerPolicies"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  tail call void @_ZN5blink5mojom5blink23PolicyContainerPoliciesD1Ev(%"class.blink::mojom::blink::PolicyContainerPolicies"* nonnull %22) #16
  %25 = bitcast %"class.blink::mojom::blink::PolicyContainerPolicies"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"class.blink::PolicyContainer"* %6 to i8*
  tail call void @free(i8* %27) #16
  br label %28

28:                                               ; preds = %26, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::PolicyContainer"* @_ZN5blink16ExecutionContext19TakePolicyContainerEv(%"class.blink::ExecutionContext"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %2, align 8
  store %"class.blink::PolicyContainer"* null, %"class.blink::PolicyContainer"** %2, align 8
  ret %"class.blink::PolicyContainer"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE(%"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() #16
  tail call void @_ZN5blink11MemoryCache18RemoveURLFromCacheERKNS_4KURLE(%"class.blink::MemoryCache"* %3, %"class.blink::KURL"* dereferenceable(112) %1) #16
  ret void
}

declare %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() local_unnamed_addr #1

declare void @_ZN5blink11MemoryCache18RemoveURLFromCacheERKNS_4KURLE(%"class.blink::MemoryCache"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::SecurityContext"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZNK5blink15SecurityContext5TraceEPNS_7VisitorE(%"class.blink::SecurityContext"* %3, %"class.blink::Visitor"* %1) #16
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 7
  %10 = bitcast %"class.blink::Member.47"* %9 to i64*
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = inttoptr i64 %11 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5AgentEE5TraceEPNS_7VisitorEPKv) #16
  br label %19

19:                                               ; preds = %8, %13
  %20 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 20
  %21 = bitcast %"class.blink::Member.318"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %19
  %25 = inttoptr i64 %22 to i8*
  %26 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %1, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16PublicURLManagerEE5TraceEPNS_7VisitorEPKv) #16
  br label %30

30:                                               ; preds = %19, %24
  %31 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 11
  %32 = bitcast %"class.blink::HeapVector"* %31 to i64*
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = icmp eq i64 %33, 0
  %35 = bitcast %"class.blink::HeapVector"* %31 to i8**
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %37 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %37, i64 11
  %39 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8** %35) #16
  br i1 %34, label %46, label %40

40:                                               ; preds = %30
  %41 = inttoptr i64 %33 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #16
  br label %46

46:                                               ; preds = %30, %40
  %47 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 21
  %48 = bitcast %"class.blink::Member.335"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %117, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = and i64 %49, -131072
  %54 = inttoptr i64 %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 4138
  %56 = load i8, i8* %55, align 2
  %57 = icmp eq i8 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %54, i64 4160
  br label %98

60:                                               ; preds = %51
  %61 = getelementptr inbounds i8, i8* %54, i64 4096
  %62 = bitcast i8* %61 to %"class.blink::NormalPage"*
  %63 = getelementptr inbounds i8, i8* %54, i64 4400
  %64 = bitcast i8* %63 to i8**
  %65 = bitcast i8* %63 to i64*
  %66 = load i64, i64* %65, align 16
  %67 = sub i64 %49, %66
  %68 = lshr i64 %67, 3
  %69 = lshr i64 %67, 6
  %70 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %62, i64 0, i32 2, i32 0, i32 1, i64 %69
  %71 = load atomic i8, i8* %70 acquire, align 1
  %72 = trunc i64 %68 to i32
  %73 = and i32 %72, 7
  %74 = shl i32 2, %73
  %75 = trunc i32 %74 to i8
  %76 = add i8 %75, -1
  %77 = and i8 %76, %71
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %60, %79
  %80 = phi i64 [ %81, %79 ], [ %69, %60 ]
  %81 = add i64 %80, -1
  %82 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %62, i64 0, i32 2, i32 0, i32 1, i64 %81
  %83 = load atomic i8, i8* %82 acquire, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %79, label %85

85:                                               ; preds = %79, %60
  %86 = phi i64 [ %69, %60 ], [ %81, %79 ]
  %87 = phi i8 [ %77, %60 ], [ %83, %79 ]
  %88 = zext i8 %87 to i32
  %89 = tail call i32 @llvm.ctlz.i32(i32 %88, i1 true) #16, !range !28
  %90 = add nsw i32 %89, -24
  %91 = shl i64 %86, 3
  %92 = or i64 %91, 7
  %93 = sext i32 %90 to i64
  %94 = sub i64 %92, %93
  %95 = shl i64 %94, 3
  %96 = load i8*, i8** %64, align 16
  %97 = getelementptr inbounds i8, i8* %96, i64 %95
  br label %98

98:                                               ; preds = %85, %58
  %99 = phi i8* [ %59, %58 ], [ %97, %85 ]
  %100 = getelementptr inbounds i8, i8* %99, i64 8
  %101 = getelementptr inbounds i8, i8* %99, i64 4
  %102 = bitcast i8* %101 to i16*
  %103 = load atomic i16, i16* %102 acquire, align 2
  %104 = lshr i16 %103, 2
  %105 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %106 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %105, i64 0, i32 0
  %107 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %106, align 8
  %108 = zext i16 %104 to i64
  %109 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %107, i64 %108
  %110 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %109, align 8
  %111 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %110, i64 0, i32 0
  %112 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %111, align 8
  %113 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %114 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %114, i64 5
  %116 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %115, align 8
  tail call void %116(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* %100, void (%"class.blink::Visitor"*, i8*)* %112) #16
  br label %117

117:                                              ; preds = %46, %98
  %118 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 22
  tail call void @_ZNK5blink19DOMTimerCoordinator5TraceEPNS_7VisitorE(%"class.blink::DOMTimerCoordinator"* %118, %"class.blink::Visitor"* %1) #16
  %119 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26
  %120 = bitcast %"class.blink::Member.473"* %119 to i64*
  %121 = load atomic i64, i64* %120 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %117
  %124 = inttoptr i64 %121 to i8*
  %125 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %126 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %126, i64 5
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, align 8
  tail call void %128(%"class.blink::Visitor"* %1, i8* nonnull %124, i8* nonnull %124, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18OriginTrialContextEE5TraceEPNS_7VisitorEPKv) #16
  br label %129

129:                                              ; preds = %117, %123
  %130 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 27
  %131 = bitcast %"class.blink::Member.497"* %130 to i64*
  %132 = load atomic i64, i64* %131 monotonic, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %129
  %135 = inttoptr i64 %132 to i8*
  %136 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %137 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %137, i64 5
  %139 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %138, align 8
  tail call void %139(%"class.blink::Visitor"* %1, i8* nonnull %135, i8* nonnull %135, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv) #16
  br label %140

140:                                              ; preds = %129, %134
  %141 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink24ContextLifecycleNotifier5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleNotifier"* %141, %"class.blink::Visitor"* %1) #16
  %142 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1, i32 1, i32 1
  %143 = bitcast %"class.blink::HeapHashMap.5"* %142 to i64*
  %144 = load atomic i64, i64* %143 monotonic, align 8
  %145 = bitcast %"class.blink::HeapHashMap.5"* %142 to i8**
  %146 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %36, align 8
  %147 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %146, i64 11
  %148 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %147, align 8
  tail call void %148(%"class.blink::Visitor"* %1, i8** %145) #16
  %149 = icmp eq i64 %144, 0
  br i1 %149, label %156, label %150

150:                                              ; preds = %140
  %151 = inttoptr i64 %144 to i8*
  %152 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %153 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, i64 5
  %155 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %154, align 8
  tail call void %155(%"class.blink::Visitor"* %1, i8* nonnull %151, i8* nonnull %151, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_18MojoBindingContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %156

156:                                              ; preds = %140, %150
  %157 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 0, i32 1
  %158 = bitcast %"class.blink::HeapHashMap"* %157 to i64*
  %159 = load atomic i64, i64* %158 monotonic, align 8
  %160 = bitcast %"class.blink::HeapHashMap"* %157 to i8**
  %161 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %36, align 8
  %162 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %161, i64 11
  %163 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %162, align 8
  tail call void %163(%"class.blink::Visitor"* %1, i8** %160) #16
  %164 = icmp eq i64 %159, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %156
  %166 = inttoptr i64 %159 to i8*
  %167 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %168 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, i64 5
  %170 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %169, align 8
  tail call void %170(%"class.blink::Visitor"* %1, i8* nonnull %166, i8* nonnull %166, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_16ExecutionContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %171

171:                                              ; preds = %156, %165
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_NK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 25
  %4 = bitcast %"class.std::__1::unique_ptr.344"* %3 to %"class.blink::ExecutionContext"*
  tail call void @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 22
  %4 = bitcast %"class.blink::DOMTimerCoordinator"* %3 to %"class.blink::ExecutionContext"*
  tail call void @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 12
  %4 = bitcast i32* %3 to %"class.blink::ExecutionContext"*
  tail call void @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_NK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 11, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::ExecutionContext"*
  tail call void @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext18IsSameAgentClusterERKN4base16UnguessableTokenE(%"class.blink::ExecutionContext"* nocapture readonly, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::Agent"*, %"class.blink::Agent"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Agent", %"class.blink::Agent"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::Agent", %"class.blink::Agent"* %4, i64 0, i32 2, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = or i64 %8, %6
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ne i64 %17, 0
  %19 = icmp eq i64 %6, 0
  %20 = and i1 %19, %18
  br i1 %20, label %26, label %29

21:                                               ; preds = %11
  %22 = icmp eq i64 %6, %13
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %26

26:                                               ; preds = %23, %15
  %27 = phi i64 [ %25, %23 ], [ %17, %15 ]
  %28 = icmp eq i64 %8, %27
  br label %29

29:                                               ; preds = %15, %2, %26, %21
  %30 = phi i1 [ false, %15 ], [ false, %21 ], [ %28, %26 ], [ false, %2 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::MicrotaskQueue"* @_ZNK5blink16ExecutionContext17GetMicrotaskQueueEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::Agent"*, %"class.blink::Agent"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Agent", %"class.blink::Agent"* %3, i64 0, i32 1, i32 0
  %5 = load %"class.blink::scheduler::EventLoop"*, %"class.blink::scheduler::EventLoop"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::EventLoop", %"class.blink::scheduler::EventLoop"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.v8::MicrotaskQueue"*, %"class.v8::MicrotaskQueue"** %6, align 8
  ret %"class.v8::MicrotaskQueue"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 26, i32 0, i32 0
  %4 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink18OriginTrialContext16IsFeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* %4, i32 %1) #16
  ret i1 %5
}

declare zeroext i1 @_ZNK5blink18OriginTrialContext16IsFeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 11
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 22
  %5 = bitcast %"class.blink::HeapVector"* %4 to %"class.blink::OriginTrialContext"**
  %6 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink18OriginTrialContext16IsFeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::OriginTrialContext"* %6, i32 %1) #16
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #16
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6
  %7 = call zeroext i1 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureEPb(%"class.blink::SecurityContext"* %6, i32 %1, i8* nonnull %5) #16
  %8 = load i8, i8* %5, align 1, !range !3
  %9 = icmp ne i8 %8, 0
  %10 = icmp eq i32 %2, 0
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = zext i1 %7 to i32
  %14 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)**, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)** %15, i64 40
  %17 = load void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)** %16, align 8
  call void %17(%"class.blink::ExecutionContext"* %0, i32 %1, i32 %13, %"class.WTF::String"* dereferenceable(8) %3) #16
  br label %18

18:                                               ; preds = %12, %4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #16
  ret i1 %7
}

declare zeroext i1 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureEPb(%"class.blink::SecurityContext"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::PolicyValue", align 8
  %7 = alloca %"class.blink::PolicyValue", align 8
  call void @_ZN5blink11PolicyValue10CreateBoolEb(%"class.blink::PolicyValue"* nonnull sret %7, i1 zeroext true) #16
  %8 = bitcast %"class.blink::PolicyValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %9 = bitcast %"class.blink::PolicyValue"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 24, i1 false) #16
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase27is_document_policy_enabled_E, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6
  %14 = call i16 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueE(%"class.blink::SecurityContext"* %13, i32 %1, %"class.blink::PolicyValue"* nonnull byval(%"class.blink::PolicyValue") align 8 %6) #16
  %15 = and i16 %14, 256
  %16 = icmp ne i16 %15, 0
  %17 = icmp eq i32 %2, 0
  %18 = and i1 %17, %16
  %19 = and i16 %14, 1
  br i1 %18, label %20, label %26

20:                                               ; preds = %12
  %21 = zext i16 %19 to i32
  %22 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)***
  %23 = load void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)**, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)** %23, i64 41
  %25 = load void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)** %24, align 8
  call void %25(%"class.blink::ExecutionContext"* %0, i32 %1, i32 %21, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4) #16
  br label %26

26:                                               ; preds = %20, %12
  %27 = icmp ne i16 %19, 0
  br label %28

28:                                               ; preds = %5, %26
  %29 = phi i1 [ %27, %26 ], [ true, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueENS_13ReportOptionsERKN3WTF6StringES8_(%"class.blink::ExecutionContext"*, i32, %"class.blink::PolicyValue"* nocapture readonly byval(%"class.blink::PolicyValue") align 8, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase27is_document_policy_enabled_E, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 6
  %11 = tail call i16 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueE(%"class.blink::SecurityContext"* %10, i32 %1, %"class.blink::PolicyValue"* nonnull byval(%"class.blink::PolicyValue") align 8 %2) #16
  %12 = and i16 %11, 256
  %13 = icmp ne i16 %12, 0
  %14 = icmp eq i32 %3, 0
  %15 = and i1 %14, %13
  %16 = and i16 %11, 1
  br i1 %15, label %17, label %23

17:                                               ; preds = %9
  %18 = zext i16 %16 to i32
  %19 = bitcast %"class.blink::ExecutionContext"* %0 to void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)***
  %20 = load void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)**, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)** %20, i64 41
  %22 = load void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)** %21, align 8
  tail call void %22(%"class.blink::ExecutionContext"* %0, i32 %1, i32 %18, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #16
  br label %23

23:                                               ; preds = %9, %17
  %24 = icmp ne i16 %16, 0
  br label %25

25:                                               ; preds = %6, %23
  %26 = phi i1 [ %24, %23 ], [ true, %6 ]
  ret i1 %26
}

declare void @_ZN5blink11PolicyValue10CreateBoolEb(%"class.blink::PolicyValue"* sret, i1 zeroext) local_unnamed_addr #1

declare i16 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueE(%"class.blink::SecurityContext"*, i32, %"class.blink::PolicyValue"* byval(%"class.blink::PolicyValue") align 8) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv(%"class.blink::ExecutionContext"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 28
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_trusted_dom_types_enabled_E, align 1
  %6 = icmp ne i8 %5, 0
  %7 = and i1 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16ExecutionContext23addressSpaceForBindingsEv(%"class.blink::ExecutionContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %3, align 8
  %5 = tail call i32 @_ZNK5blink15PolicyContainer17GetIPAddressSpaceEv(%"class.blink::PolicyContainer"* %4) #16
  switch i32 %5, label %9 [
    i32 2, label %6
    i32 3, label %6
    i32 1, label %7
    i32 0, label %8
  ]

6:                                                ; preds = %1, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #16
  br label %10

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7) #16
  br label %10

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #16
  br label %10

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #16
  br label %10

10:                                               ; preds = %9, %8, %7, %6
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext8IsWindowEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext28IsWorkerOrWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext20IsWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext30IsMainThreadWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext28IsThreadedWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext22IsJSExecutionForbiddenEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext15IsContextThreadEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv(%"struct.blink::UserAgentMetadata"* noalias sret, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 152, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16ExecutionContext17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::ExecutionContext"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink16ExecutionContext17GetV8CacheOptionsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CoreProbeSink"* @_ZN5blink16ExecutionContext12GetProbeSinkEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CoreProbeSink"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TrustedTypePolicyFactory"* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::TrustedTypePolicyFactory"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ukm::UkmRecorder"* @_ZN5blink16ExecutionContext11UkmRecorderEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.ukm::UkmRecorder"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink16ExecutionContext11UkmSourceIDEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext30GetParentExecutionContextTokenEv(%"class.absl::optional.2228"* noalias sret, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.2228", %"class.absl::optional.2228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.absl::optional.2228", %"class.absl::optional.2228"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %union.anon.2232* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptWrappable"* @_ZN5blink16ExecutionContext17ToScriptWrappableEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScriptWrappable"* null
}

declare void @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

declare void @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleNotifierD2Ev(%"class.blink::ContextLifecycleNotifier"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_18MojoBindingContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_18MojoBindingContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #16
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_18MojoBindingContextEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_18MojoBindingContextEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.11"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %181, %20
  ret void

33:                                               ; preds = %181, %30
  %34 = phi i64 [ 0, %30 ], [ %182, %181 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.11"* %35 to i64*
  br i1 %28, label %37, label %109

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %181
    i64 0, label %181
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.2236"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %181, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = and i64 %42, -131072
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 4138
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 4160
  br label %91

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %47, i64 4096
  %55 = bitcast i8* %54 to %"class.blink::NormalPage"*
  %56 = getelementptr inbounds i8, i8* %47, i64 4400
  %57 = bitcast i8* %56 to i8**
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = sub i64 %42, %59
  %61 = lshr i64 %60, 3
  %62 = lshr i64 %60, 6
  %63 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %62
  %64 = load atomic i8, i8* %63 acquire, align 1
  %65 = trunc i64 %61 to i32
  %66 = and i32 %65, 7
  %67 = shl i32 2, %66
  %68 = trunc i32 %67 to i8
  %69 = add i8 %68, -1
  %70 = and i8 %69, %64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %53, %72
  %73 = phi i64 [ %74, %72 ], [ %62, %53 ]
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %74
  %76 = load atomic i8, i8* %75 acquire, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %72, label %78

78:                                               ; preds = %72, %53
  %79 = phi i64 [ %62, %53 ], [ %74, %72 ]
  %80 = phi i8 [ %70, %53 ], [ %76, %72 ]
  %81 = zext i8 %80 to i32
  %82 = tail call i32 @llvm.ctlz.i32(i32 %81, i1 true) #16, !range !28
  %83 = add nsw i32 %82, -24
  %84 = shl i64 %79, 3
  %85 = or i64 %84, 7
  %86 = sext i32 %83 to i64
  %87 = sub i64 %85, %86
  %88 = shl i64 %87, 3
  %89 = load i8*, i8** %57, align 16
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  br label %91

91:                                               ; preds = %78, %51
  %92 = phi i8* [ %52, %51 ], [ %90, %78 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = getelementptr inbounds i8, i8* %92, i64 4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 acquire, align 2
  %97 = lshr i16 %96, 2
  %98 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %99 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %98, i64 0, i32 0
  %100 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %99, align 8
  %101 = zext i16 %97 to i64
  %102 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %100, i64 %101
  %103 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %102, align 8
  %104 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %103, i64 0, i32 0
  %105 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %107 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %106, i64 5
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, align 8
  tail call void %108(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* %93, void (%"class.blink::Visitor"*, i8*)* %105) #16
  br label %181

109:                                              ; preds = %33
  %110 = load i64, i64* %36, align 8
  switch i64 %110, label %111 [
    i64 -1, label %181
    i64 0, label %181
  ]

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %34, i32 1
  %113 = bitcast %"class.blink::Member.2236"* %112 to i64*
  %114 = load atomic i64, i64* %113 monotonic, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %181, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %114 to i8*
  %118 = and i64 %114, -131072
  %119 = inttoptr i64 %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 4138
  %121 = load i8, i8* %120, align 2
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, i8* %119, i64 4160
  br label %163

125:                                              ; preds = %116
  %126 = getelementptr inbounds i8, i8* %119, i64 4096
  %127 = bitcast i8* %126 to %"class.blink::NormalPage"*
  %128 = getelementptr inbounds i8, i8* %119, i64 4400
  %129 = bitcast i8* %128 to i8**
  %130 = bitcast i8* %128 to i64*
  %131 = load i64, i64* %130, align 16
  %132 = sub i64 %114, %131
  %133 = lshr i64 %132, 3
  %134 = lshr i64 %132, 6
  %135 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %134
  %136 = load atomic i8, i8* %135 acquire, align 1
  %137 = trunc i64 %133 to i32
  %138 = and i32 %137, 7
  %139 = shl i32 2, %138
  %140 = trunc i32 %139 to i8
  %141 = add i8 %140, -1
  %142 = and i8 %141, %136
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %125, %144
  %145 = phi i64 [ %146, %144 ], [ %134, %125 ]
  %146 = add i64 %145, -1
  %147 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %146
  %148 = load atomic i8, i8* %147 acquire, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %144, label %150

150:                                              ; preds = %144, %125
  %151 = phi i64 [ %134, %125 ], [ %146, %144 ]
  %152 = phi i8 [ %142, %125 ], [ %148, %144 ]
  %153 = zext i8 %152 to i32
  %154 = tail call i32 @llvm.ctlz.i32(i32 %153, i1 true) #16, !range !28
  %155 = add nsw i32 %154, -24
  %156 = shl i64 %151, 3
  %157 = or i64 %156, 7
  %158 = sext i32 %155 to i64
  %159 = sub i64 %157, %158
  %160 = shl i64 %159, 3
  %161 = load i8*, i8** %129, align 16
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  br label %163

163:                                              ; preds = %150, %123
  %164 = phi i8* [ %124, %123 ], [ %162, %150 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 8
  %166 = getelementptr inbounds i8, i8* %164, i64 4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 acquire, align 2
  %169 = lshr i16 %168, 2
  %170 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %171 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %170, i64 0, i32 0
  %172 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %171, align 8
  %173 = zext i16 %169 to i64
  %174 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %172, i64 %173
  %175 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %175, i64 0, i32 0
  %177 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %176, align 8
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  tail call void %180(%"class.blink::Visitor"* %0, i8* nonnull %117, i8* %165, void (%"class.blink::Visitor"*, i8*)* %177) #16
  br label %181

181:                                              ; preds = %109, %109, %37, %37, %163, %111, %39, %91
  %182 = add nuw nsw i64 %34, 1
  %183 = icmp eq i64 %182, %23
  br i1 %183, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN5blink5mojom5blink21InspectorIssueDetailsC1Ev(%"class.blink::mojom::blink::InspectorIssueDetails"*) unnamed_addr #1

declare void @_ZN5blink5mojom5blink29SharedArrayBufferIssueDetailsC1Ev(%"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*) unnamed_addr #1

declare void @_ZN5blink5mojom5blink16AffectedLocationC1Ev(%"class.blink::mojom::blink::AffectedLocation"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16InlinedStructPtrIN5blink5mojom5blink16AffectedLocationEE4SwapEPS5_(%"class.mojo::InlinedStructPtr.627"*, %"class.mojo::InlinedStructPtr.627"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::mojom::blink::AffectedLocation", align 8
  %4 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %1, i64 0, i32 0
  %6 = bitcast %"class.blink::mojom::blink::AffectedLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %3, i64 0, i32 1
  %12 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #16
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %7, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #16
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #16
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %2
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #16
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %32, %36, %51
  %54 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %0, i64 0, i32 0, i32 2
  %55 = bitcast i32* %54 to i64*
  %56 = bitcast i32* %9 to i64*
  %57 = load i64, i64* %55, align 8
  store i64 %57, i64* %56, align 8
  %58 = tail call dereferenceable(24) %"class.blink::mojom::blink::AffectedLocation"* @_ZN5blink5mojom5blink16AffectedLocationaSERKS2_(%"class.blink::mojom::blink::AffectedLocation"* %4, %"class.blink::mojom::blink::AffectedLocation"* dereferenceable(24) %5) #16
  %59 = call dereferenceable(24) %"class.blink::mojom::blink::AffectedLocation"* @_ZN5blink5mojom5blink16AffectedLocationaSERKS2_(%"class.blink::mojom::blink::AffectedLocation"* %5, %"class.blink::mojom::blink::AffectedLocation"* nonnull dereferenceable(24) %3) #16
  call void @_ZN5blink5mojom5blink16AffectedLocationD1Ev(%"class.blink::mojom::blink::AffectedLocation"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %60 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %0, i64 0, i32 1
  %61 = getelementptr inbounds %"class.mojo::InlinedStructPtr.627", %"class.mojo::InlinedStructPtr.627"* %1, i64 0, i32 1
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  store i32 %63, i32* %60, align 4
  store i32 %62, i32* %61, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16AffectedLocationD1Ev(%"class.blink::mojom::blink::AffectedLocation"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::mojom::blink::AffectedLocation"* @_ZN5blink5mojom5blink16AffectedLocationaSERKS2_(%"class.blink::mojom::blink::AffectedLocation"*, %"class.blink::mojom::blink::AffectedLocation"* dereferenceable(24)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #16
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #16
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.blink::mojom::blink::AffectedLocation"* %0 to i64*
  %26 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #16
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #16
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #16
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #16
  br label %83

83:                                               ; preds = %64, %79, %82
  %84 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %0, i64 0, i32 2
  %85 = getelementptr inbounds %"class.blink::mojom::blink::AffectedLocation", %"class.blink::mojom::blink::AffectedLocation"* %1, i64 0, i32 2
  %86 = bitcast i32* %85 to i64*
  %87 = bitcast i32* %84 to i64*
  %88 = load i64, i64* %86, align 8
  store i64 %88, i64* %87, align 8
  ret %"class.blink::mojom::blink::AffectedLocation"* %0
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink29SharedArrayBufferIssueDetailsD1Ev(%"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare void @_ZN5blink5mojom5blink18InspectorIssueInfoC1ENS0_18InspectorIssueCodeEN4mojo9StructPtrINS1_21InspectorIssueDetailsEEE(%"class.blink::mojom::blink::InspectorIssueInfo"*, i32, %"class.mojo::StructPtr.571"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink21InspectorIssueDetailsD1Ev(%"class.blink::mojom::blink::InspectorIssueDetails"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18InspectorIssueInfoD1Ev(%"class.blink::mojom::blink::InspectorIssueInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)) #16
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0)) #16
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #14

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK5blink24ContextLifecycleNotifier5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #3

declare void @_ZN5blink27ExecutionContextCSPDelegateC1ERNS_16ExecutionContextE(%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_27ExecutionContextCSPDelegateEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_27ExecutionContextCSPDelegateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_27ExecutionContextCSPDelegateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_27ExecutionContextCSPDelegateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink27ExecutionContextCSPDelegateEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #12 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #16
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %21, i8* %22) #16
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #16
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #16
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27ExecutionContextCSPDelegateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ExecutionContextCSPDelegate"*
  tail call void @_ZNK5blink27ExecutionContextCSPDelegate5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextCSPDelegate"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_27ExecutionContextCSPDelegateEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink27ExecutionContextCSPDelegate5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink18OriginTrialContextC1EPNS_16ExecutionContextE(%"class.blink::OriginTrialContext"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18OriginTrialContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18OriginTrialContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18OriginTrialContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18OriginTrialContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18OriginTrialContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18OriginTrialContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::OriginTrialContext"*
  tail call void @_ZNK5blink18OriginTrialContext5TraceEPNS_7VisitorE(%"class.blink::OriginTrialContext"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18OriginTrialContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::OriginTrialContext"*
  tail call void @_ZN5blink18OriginTrialContextD2Ev(%"class.blink::OriginTrialContext"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18OriginTrialContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink18OriginTrialContext5TraceEPNS_7VisitorE(%"class.blink::OriginTrialContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18OriginTrialContextD2Ev(%"class.blink::OriginTrialContext"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.496"*, %"struct.WTF::KeyValuePair.496"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.496"* %3, null
  br i1 %4, label %23, label %5, !prof !29

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %18, %9
  %12 = phi i64 [ 0, %9 ], [ %19, %18 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.496", %"struct.WTF::KeyValuePair.496"* %3, i64 %12
  %14 = bitcast %"struct.WTF::KeyValuePair.496"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, inttoptr (i64 -1 to i8*)
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.496"* %13) #16
  br label %18

18:                                               ; preds = %17, %11
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, %10
  br i1 %20, label %21, label %11

21:                                               ; preds = %18, %5
  %22 = bitcast %"struct.WTF::KeyValuePair.496"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #16
  store %"struct.WTF::KeyValuePair.496"* null, %"struct.WTF::KeyValuePair.496"** %2, align 8
  br label %23

23:                                               ; preds = %1, %21
  %24 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.blink::TrialTokenValidator"*, %"class.blink::TrialTokenValidator"** %24, align 8
  store %"class.blink::TrialTokenValidator"* null, %"class.blink::TrialTokenValidator"** %24, align 8
  %26 = icmp eq %"class.blink::TrialTokenValidator"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::TrialTokenValidator"* %25 to void (%"class.blink::TrialTokenValidator"*)***
  %29 = load void (%"class.blink::TrialTokenValidator"*)**, void (%"class.blink::TrialTokenValidator"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::TrialTokenValidator"*)*, void (%"class.blink::TrialTokenValidator"*)** %29, i64 1
  %31 = load void (%"class.blink::TrialTokenValidator"*)*, void (%"class.blink::TrialTokenValidator"*)** %30, align 8
  tail call void %31(%"class.blink::TrialTokenValidator"* nonnull %25) #16
  br label %32

32:                                               ; preds = %23, %27
  %33 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 3, i32 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair.485"*, %"struct.WTF::KeyValuePair.485"** %33, align 8
  %35 = icmp eq %"struct.WTF::KeyValuePair.485"* %34, null
  br i1 %35, label %38, label %36, !prof !29

36:                                               ; preds = %32
  %37 = bitcast %"struct.WTF::KeyValuePair.485"* %34 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #16
  store %"struct.WTF::KeyValuePair.485"* null, %"struct.WTF::KeyValuePair.485"** %33, align 8
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %40, null
  br i1 %41, label %44, label %42, !prof !29

42:                                               ; preds = %38
  %43 = bitcast i32* %40 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #16
  store i32* null, i32** %39, align 8
  br label %44

44:                                               ; preds = %38, %42
  %45 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 1, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %50, label %48, !prof !29

48:                                               ; preds = %44
  %49 = bitcast i32* %46 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #16
  store i32* null, i32** %45, align 8
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = icmp eq i32* %52, null
  br i1 %53, label %56, label %54, !prof !29

54:                                               ; preds = %50
  %55 = bitcast i32* %52 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #16
  store i32* null, i32** %51, align 8
  br label %56

56:                                               ; preds = %50, %54
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.496"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.496", %"struct.WTF::KeyValuePair.496"* %0, i64 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.2264", %"class.WTF::Vector.2264"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %3, align 8
  %5 = icmp eq %"struct.blink::OriginTrialTokenResult"* %4, null
  br i1 %5, label %46, label %6, !prof !29

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::OriginTrialTokenResult"* %4 to i8*
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.496", %"struct.WTF::KeyValuePair.496"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %44, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %4, i64 %12
  br label %14

14:                                               ; preds = %38, %11
  %15 = phi %"struct.blink::OriginTrialTokenResult"* [ %39, %38 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %20) #16
  store i8 0, i8* %16, align 8
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #16
  br label %38

38:                                               ; preds = %37, %34, %21
  %39 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 1
  %40 = icmp eq %"struct.blink::OriginTrialTokenResult"* %39, %13
  br i1 %40, label %41, label %14

41:                                               ; preds = %38
  store i32 0, i32* %8, align 4
  %42 = bitcast %"class.WTF::Vector.2264"* %2 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %6
  %45 = phi i8* [ %43, %41 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #16
  store %"struct.blink::OriginTrialTokenResult"* null, %"struct.blink::OriginTrialTokenResult"** %3, align 8
  br label %46

46:                                               ; preds = %44, %1
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.496", %"struct.WTF::KeyValuePair.496"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %63

63:                                               ; preds = %46, %59, %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.496", %"struct.WTF::KeyValuePair.496"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #16
  br label %80

80:                                               ; preds = %63, %76, %79
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink23PolicyContainerPoliciesD1Ev(%"class.blink::mojom::blink::PolicyContainerPolicies"*) unnamed_addr #3

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::ErrorEvent"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #16
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.88"*, %"class.blink::Member.88"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.88", %"class.blink::Member.88"* %16, i64 %18
  %20 = bitcast %"class.blink::ErrorEvent"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.88"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !29

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.88"*, %"class.blink::Member.88"** %8, align 8
  %10 = icmp eq %"class.blink::Member.88"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10ErrorEventEEEEEmm(i64 %11) #16
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #16
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #16
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.88"*, %"class.blink::Member.88"** %8, align 8
  %26 = icmp eq %"class.blink::Member.88"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.88"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #16
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #16
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0)) #16
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10ErrorEventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #16
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #16
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10ErrorEventEEEEEmm(i64 %14) #16
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #16
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.88"*, %"class.blink::Member.88"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.88"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.88"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !29

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #16
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #16
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #16
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #16
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10ErrorEventEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.22, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10ErrorEventEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.88"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.88", %"class.blink::Member.88"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.88"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ErrorEventEE5TraceEPNS_7VisitorEPKv) #16
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10ErrorEventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ErrorEventEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ErrorEvent"*
  tail call void @_ZNK5blink10ErrorEvent5TraceEPNS_7VisitorE(%"class.blink::ErrorEvent"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink10ErrorEvent5TraceEPNS_7VisitorE(%"class.blink::ErrorEvent"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink16PublicURLManagerC1EPNS_16ExecutionContextE(%"class.blink::PublicURLManager"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16PublicURLManagerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16PublicURLManagerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16PublicURLManagerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16PublicURLManagerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16PublicURLManagerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16PublicURLManagerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PublicURLManager"*
  tail call void @_ZNK5blink16PublicURLManager5TraceEPNS_7VisitorE(%"class.blink::PublicURLManager"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16PublicURLManagerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::PublicURLManager"*
  tail call void @_ZN5blink16PublicURLManagerD2Ev(%"class.blink::PublicURLManager"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16PublicURLManagerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16PublicURLManager5TraceEPNS_7VisitorE(%"class.blink::PublicURLManager"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16PublicURLManagerD2Ev(%"class.blink::PublicURLManager"*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PublicURLManager", %"class.blink::PublicURLManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink16PublicURLManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PublicURLManager", %"class.blink::PublicURLManager"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %38, label %6, !prof !29

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PublicURLManager", %"class.blink::PublicURLManager"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %13
  %15 = bitcast %"class.WTF::String"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #16
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"class.WTF::String"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %38

38:                                               ; preds = %1, %36
  %39 = getelementptr inbounds %"class.blink::PublicURLManager", %"class.blink::PublicURLManager"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load %"struct.WTF::KeyValuePair.328"*, %"struct.WTF::KeyValuePair.328"** %39, align 8
  %41 = icmp eq %"struct.WTF::KeyValuePair.328"* %40, null
  br i1 %41, label %74, label %42, !prof !29

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::PublicURLManager", %"class.blink::PublicURLManager"* %0, i64 0, i32 2, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  br label %48

48:                                               ; preds = %69, %46
  %49 = phi i64 [ 0, %46 ], [ %70, %69 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.328", %"struct.WTF::KeyValuePair.328"* %40, i64 %49
  %51 = bitcast %"struct.WTF::KeyValuePair.328"* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %54 = ptrtoint i8* %52 to i64
  switch i64 %54, label %55 [
    i64 -1, label %69
    i64 0, label %69
  ]

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %52, i64 8
  %57 = bitcast i8* %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = bitcast i8* %52 to i32*
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %55
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i32 [ %64, %63 ], [ %62, %55 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #16
  br label %69

69:                                               ; preds = %68, %65, %48, %48
  %70 = add nuw nsw i64 %49, 1
  %71 = icmp eq i64 %70, %47
  br i1 %71, label %72, label %48

72:                                               ; preds = %69, %42
  %73 = bitcast %"struct.WTF::KeyValuePair.328"* %40 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #16
  store %"struct.WTF::KeyValuePair.328"* null, %"struct.WTF::KeyValuePair.328"** %39, align 8
  br label %74

74:                                               ; preds = %38, %72
  %75 = getelementptr inbounds %"class.blink::PublicURLManager", %"class.blink::PublicURLManager"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %75) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2389", %"class.WTF::StringTypeAdapter.2389"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.2209"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.2209"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.2209"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2209", %"class.WTF::StringAppend.2209"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2389", %"class.WTF::StringTypeAdapter.2389"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2209", %"class.WTF::StringAppend.2209"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2210"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2210"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2210"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2389", %"class.WTF::StringTypeAdapter.2389"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2211"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2211"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2211"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2389", %"class.WTF::StringTypeAdapter.2389"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2211", %"class.WTF::StringAppend.2211"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2389"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %4, i8* %13) #16
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2211", %"class.WTF::StringAppend.2211"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #16
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %45, i8* %46) #16
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #16
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2389"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2210"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2392", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2389"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2389"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %5, i8* %10) #16
  %11 = bitcast %"class.WTF::StringTypeAdapter.2389"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2389", %"class.WTF::StringTypeAdapter.2389"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #16
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %3, i8* %14) #16
  %15 = bitcast %"class.WTF::StringTypeAdapter.2392"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2392", %"class.WTF::StringTypeAdapter.2392"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2392", %"class.WTF::StringTypeAdapter.2392"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #16
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2392"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2389"* nonnull %3, i8* %1) #16
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2392", %"class.WTF::StringTypeAdapter.2392"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2393"* nonnull %34, i8* %37) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2211"* %6) #16
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2389"* nonnull %5, i8* %40) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2393"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2389"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2210"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2392", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2389"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2389"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %5, i8* %10) #16
  %11 = bitcast %"class.WTF::StringTypeAdapter.2389"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2389", %"class.WTF::StringTypeAdapter.2389"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #16
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %3, i8* %14) #16
  %15 = bitcast %"class.WTF::StringTypeAdapter.2392"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2392", %"class.WTF::StringTypeAdapter.2392"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2392", %"class.WTF::StringTypeAdapter.2392"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #16
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2392"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2389"* nonnull %3, i16* %1) #16
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2392", %"class.WTF::StringTypeAdapter.2392"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2393"* nonnull %34, i16* %37) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2211"* %6) #16
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2389"* nonnull %5, i16* %40) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2393"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESA_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend.2210"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #16
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2210"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #16
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #16
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #16
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2210"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2389", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2389"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #16
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %3, i8* %8) #16
  %9 = bitcast %"class.WTF::StringTypeAdapter.2389"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #16
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2389"* nonnull %2, i8* %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2210", %"class.WTF::StringAppend.2210"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2210"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #16
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2210"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #16
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #16
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #16
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2210"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #16
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2210"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #16
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #16
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #16
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #16
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZNK5blink15SecurityContext5TraceEPNS_7VisitorE(%"class.blink::SecurityContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5AgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Agent"*
  %4 = bitcast i8* %1 to void (%"class.blink::Agent"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Agent"*, %"class.blink::Visitor"*)**, void (%"class.blink::Agent"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Agent"*, %"class.blink::Visitor"*)*, void (%"class.blink::Agent"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::Agent"*, %"class.blink::Visitor"*)*, void (%"class.blink::Agent"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Agent"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink19DOMTimerCoordinator5TraceEPNS_7VisitorE(%"class.blink::DOMTimerCoordinator"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZNK5blink21ContentSecurityPolicy5TraceEPNS_7VisitorE(%"class.blink::ContentSecurityPolicy"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink21ContentSecurityPolicy5TraceEPNS_7VisitorE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_16ExecutionContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_16ExecutionContextEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #16
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_16ExecutionContextEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_16ExecutionContextEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %181, %20
  ret void

33:                                               ; preds = %181, %30
  %34 = phi i64 [ 0, %30 ], [ %182, %181 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %109

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %181
    i64 0, label %181
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.2340"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %181, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = and i64 %42, -131072
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 4138
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 4160
  br label %91

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %47, i64 4096
  %55 = bitcast i8* %54 to %"class.blink::NormalPage"*
  %56 = getelementptr inbounds i8, i8* %47, i64 4400
  %57 = bitcast i8* %56 to i8**
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = sub i64 %42, %59
  %61 = lshr i64 %60, 3
  %62 = lshr i64 %60, 6
  %63 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %62
  %64 = load atomic i8, i8* %63 acquire, align 1
  %65 = trunc i64 %61 to i32
  %66 = and i32 %65, 7
  %67 = shl i32 2, %66
  %68 = trunc i32 %67 to i8
  %69 = add i8 %68, -1
  %70 = and i8 %69, %64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %53, %72
  %73 = phi i64 [ %74, %72 ], [ %62, %53 ]
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %74
  %76 = load atomic i8, i8* %75 acquire, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %72, label %78

78:                                               ; preds = %72, %53
  %79 = phi i64 [ %62, %53 ], [ %74, %72 ]
  %80 = phi i8 [ %70, %53 ], [ %76, %72 ]
  %81 = zext i8 %80 to i32
  %82 = tail call i32 @llvm.ctlz.i32(i32 %81, i1 true) #16, !range !28
  %83 = add nsw i32 %82, -24
  %84 = shl i64 %79, 3
  %85 = or i64 %84, 7
  %86 = sext i32 %83 to i64
  %87 = sub i64 %85, %86
  %88 = shl i64 %87, 3
  %89 = load i8*, i8** %57, align 16
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  br label %91

91:                                               ; preds = %78, %51
  %92 = phi i8* [ %52, %51 ], [ %90, %78 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = getelementptr inbounds i8, i8* %92, i64 4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 acquire, align 2
  %97 = lshr i16 %96, 2
  %98 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %99 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %98, i64 0, i32 0
  %100 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %99, align 8
  %101 = zext i16 %97 to i64
  %102 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %100, i64 %101
  %103 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %102, align 8
  %104 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %103, i64 0, i32 0
  %105 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %107 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %106, i64 5
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, align 8
  tail call void %108(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* %93, void (%"class.blink::Visitor"*, i8*)* %105) #16
  br label %181

109:                                              ; preds = %33
  %110 = load i64, i64* %36, align 8
  switch i64 %110, label %111 [
    i64 -1, label %181
    i64 0, label %181
  ]

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %113 = bitcast %"class.blink::Member.2340"* %112 to i64*
  %114 = load atomic i64, i64* %113 monotonic, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %181, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %114 to i8*
  %118 = and i64 %114, -131072
  %119 = inttoptr i64 %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 4138
  %121 = load i8, i8* %120, align 2
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, i8* %119, i64 4160
  br label %163

125:                                              ; preds = %116
  %126 = getelementptr inbounds i8, i8* %119, i64 4096
  %127 = bitcast i8* %126 to %"class.blink::NormalPage"*
  %128 = getelementptr inbounds i8, i8* %119, i64 4400
  %129 = bitcast i8* %128 to i8**
  %130 = bitcast i8* %128 to i64*
  %131 = load i64, i64* %130, align 16
  %132 = sub i64 %114, %131
  %133 = lshr i64 %132, 3
  %134 = lshr i64 %132, 6
  %135 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %134
  %136 = load atomic i8, i8* %135 acquire, align 1
  %137 = trunc i64 %133 to i32
  %138 = and i32 %137, 7
  %139 = shl i32 2, %138
  %140 = trunc i32 %139 to i8
  %141 = add i8 %140, -1
  %142 = and i8 %141, %136
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %125, %144
  %145 = phi i64 [ %146, %144 ], [ %134, %125 ]
  %146 = add i64 %145, -1
  %147 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %146
  %148 = load atomic i8, i8* %147 acquire, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %144, label %150

150:                                              ; preds = %144, %125
  %151 = phi i64 [ %134, %125 ], [ %146, %144 ]
  %152 = phi i8 [ %142, %125 ], [ %148, %144 ]
  %153 = zext i8 %152 to i32
  %154 = tail call i32 @llvm.ctlz.i32(i32 %153, i1 true) #16, !range !28
  %155 = add nsw i32 %154, -24
  %156 = shl i64 %151, 3
  %157 = or i64 %156, 7
  %158 = sext i32 %155 to i64
  %159 = sub i64 %157, %158
  %160 = shl i64 %159, 3
  %161 = load i8*, i8** %129, align 16
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  br label %163

163:                                              ; preds = %150, %123
  %164 = phi i8* [ %124, %123 ], [ %162, %150 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 8
  %166 = getelementptr inbounds i8, i8* %164, i64 4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 acquire, align 2
  %169 = lshr i16 %168, 2
  %170 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %171 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %170, i64 0, i32 0
  %172 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %171, align 8
  %173 = zext i16 %169 to i64
  %174 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %172, i64 %173
  %175 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %175, i64 0, i32 0
  %177 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %176, align 8
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  tail call void %180(%"class.blink::Visitor"* %0, i8* nonnull %117, i8* %165, void (%"class.blink::Visitor"*, i8*)* %177) #16
  br label %181

181:                                              ; preds = %109, %109, %37, %37, %163, %111, %39, %91
  %182 = add nuw nsw i64 %34, 1
  %183 = icmp eq i64 %182, %23
  br i1 %183, label %32, label %33
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink5mojom5blink21InspectorIssueDetails3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink5mojom5blink21InspectorIssueDetails3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink5mojom5blink29SharedArrayBufferIssueDetails3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZN5blink5mojom5blink29SharedArrayBufferIssueDetails3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink5mojom5blink16AffectedLocation3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZN5blink5mojom5blink16AffectedLocation3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink5mojom5blink18InspectorIssueInfo3NewIJNS0_18InspectorIssueCodeEN4mojo9StructPtrINS1_21InspectorIssueDetailsEEEEEENS6_IS2_EEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZN5blink5mojom5blink18InspectorIssueInfo3NewIJNS0_18InspectorIssueCodeEN4mojo9StructPtrINS1_21InspectorIssueDetailsEEEEEENS6_IS2_EEDpOT_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!24 = distinct !{!24, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!27 = distinct !{!27, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!28 = !{i32 24, i32 33}
!29 = !{!"branch_weights", i32 2000, i32 1}
