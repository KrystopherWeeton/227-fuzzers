; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-tag.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-tag.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.LangTag = type { [4 x i8], i32 }
%struct.hb_language_impl_t = type opaque
%struct.hb_sorted_array_t = type { %struct.hb_array_t }
%struct.hb_array_t = type { %struct.LangTag*, i32, i32 }

$_ZNK17hb_sorted_array_tIK7LangTagE12bsearch_implIPKcEEbRKT_Pj = comdat any

@.str = private unnamed_addr constant [6 x i8] c"-hbsc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"-hbot\00", align 1
@_ZL12ot_languages = internal constant [1396 x %struct.LangTag] [%struct.LangTag { [4 x i8] c"aa\00\00", i32 1095127584 }, %struct.LangTag { [4 x i8] c"aae\00", i32 1397836064 }, %struct.LangTag { [4 x i8] c"aao\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"aat\00", i32 1397836064 }, %struct.LangTag { [4 x i8] c"ab\00\00", i32 1094863648 }, %struct.LangTag { [4 x i8] c"aba\00", i32 0 }, %struct.LangTag { [4 x i8] c"abh\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"abq\00", i32 1094861088 }, %struct.LangTag { [4 x i8] c"abs\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"abv\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"acf\00", i32 1178684960 }, %struct.LangTag { [4 x i8] c"acf\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"acm\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"acq\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"acr\00", i32 1094930976 }, %struct.LangTag { [4 x i8] c"acr\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"acw\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"acx\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"acy\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ada\00", i32 1145980704 }, %struct.LangTag { [4 x i8] c"adf\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"adp\00", i32 1146768928 }, %struct.LangTag { [4 x i8] c"aeb\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"aec\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"af\00\00", i32 1095125792 }, %struct.LangTag { [4 x i8] c"afb\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"afk\00", i32 0 }, %struct.LangTag { [4 x i8] c"afs\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"agu\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"agw\00", i32 0 }, %struct.LangTag { [4 x i8] c"ahg\00", i32 1095194400 }, %struct.LangTag { [4 x i8] c"aht\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"aig\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"aii\00", i32 1398227232 }, %struct.LangTag { [4 x i8] c"aii\00", i32 1398362656 }, %struct.LangTag { [4 x i8] c"aiw\00", i32 1095911712 }, %struct.LangTag { [4 x i8] c"ajp\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ak\00\00", i32 1095450912 }, %struct.LangTag { [4 x i8] c"akb\00", i32 1095451168 }, %struct.LangTag { [4 x i8] c"akb\00", i32 1112820512 }, %struct.LangTag { [4 x i8] c"aln\00", i32 1397836064 }, %struct.LangTag { [4 x i8] c"als\00", i32 1397836064 }, %struct.LangTag { [4 x i8] c"am\00\00", i32 1095583776 }, %struct.LangTag { [4 x i8] c"amf\00", i32 1212304928 }, %struct.LangTag { [4 x i8] c"amw\00", i32 1398362656 }, %struct.LangTag { [4 x i8] c"an\00\00", i32 1095911200 }, %struct.LangTag { [4 x i8] c"aoa\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"apa\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"apc\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"apd\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"apj\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"apk\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"apl\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"apm\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"apw\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"ar\00\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"arb\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ari\00", i32 0 }, %struct.LangTag { [4 x i8] c"ark\00", i32 0 }, %struct.LangTag { [4 x i8] c"arn\00", i32 1296125984 }, %struct.LangTag { [4 x i8] c"arq\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ars\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ary\00", i32 1297044000 }, %struct.LangTag { [4 x i8] c"ary\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"arz\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"as\00\00", i32 1095978272 }, %struct.LangTag { [4 x i8] c"atj\00", i32 1380143648 }, %struct.LangTag { [4 x i8] c"atv\00", i32 1095521312 }, %struct.LangTag { [4 x i8] c"auj\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"auz\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"av\00\00", i32 1096176160 }, %struct.LangTag { [4 x i8] c"avl\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ay\00\00", i32 1096371488 }, %struct.LangTag { [4 x i8] c"ayc\00", i32 1096371488 }, %struct.LangTag { [4 x i8] c"ayh\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ayl\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ayn\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ayp\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ayr\00", i32 1096371488 }, %struct.LangTag { [4 x i8] c"az\00\00", i32 1096434976 }, %struct.LangTag { [4 x i8] c"azb\00", i32 1096434208 }, %struct.LangTag { [4 x i8] c"azb\00", i32 1096434976 }, %struct.LangTag { [4 x i8] c"azd\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"azj\00", i32 1096434976 }, %struct.LangTag { [4 x i8] c"azn\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"azz\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"ba\00\00", i32 1112754208 }, %struct.LangTag { [4 x i8] c"bad\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"bag\00", i32 0 }, %struct.LangTag { [4 x i8] c"bah\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bai\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"bal\00", i32 1112295712 }, %struct.LangTag { [4 x i8] c"bau\00", i32 0 }, %struct.LangTag { [4 x i8] c"bbc\00", i32 1111638816 }, %struct.LangTag { [4 x i8] c"bbc\00", i32 1112820512 }, %struct.LangTag { [4 x i8] c"bbj\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"bbp\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"bbr\00", i32 0 }, %struct.LangTag { [4 x i8] c"bbz\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"bcc\00", i32 1112295712 }, %struct.LangTag { [4 x i8] c"bch\00", i32 0 }, %struct.LangTag { [4 x i8] c"bci\00", i32 1111577888 }, %struct.LangTag { [4 x i8] c"bcl\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"bcq\00", i32 1111705632 }, %struct.LangTag { [4 x i8] c"bcr\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"be\00\00", i32 1111837728 }, %struct.LangTag { [4 x i8] c"bea\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"beb\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"ber\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"bew\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bfl\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"bfq\00", i32 1111573536 }, %struct.LangTag { [4 x i8] c"bft\00", i32 1112298528 }, %struct.LangTag { [4 x i8] c"bfu\00", i32 1279346720 }, %struct.LangTag { [4 x i8] c"bfy\00", i32 1111574304 }, %struct.LangTag { [4 x i8] c"bg\00\00", i32 1111970336 }, %struct.LangTag { [4 x i8] c"bgn\00", i32 1112295712 }, %struct.LangTag { [4 x i8] c"bgp\00", i32 1112295712 }, %struct.LangTag { [4 x i8] c"bgq\00", i32 1111970080 }, %struct.LangTag { [4 x i8] c"bgq\00", i32 1380010528 }, %struct.LangTag { [4 x i8] c"bgr\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"bhb\00", i32 1112033568 }, %struct.LangTag { [4 x i8] c"bhk\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"bhr\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"bi\00\00", i32 1112101664 }, %struct.LangTag { [4 x i8] c"bi\00\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bil\00", i32 0 }, %struct.LangTag { [4 x i8] c"bin\00", i32 1162104608 }, %struct.LangTag { [4 x i8] c"biu\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"bjn\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"bjo\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"bjq\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"bjs\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bjt\00", i32 1112296992 }, %struct.LangTag { [4 x i8] c"bkf\00", i32 0 }, %struct.LangTag { [4 x i8] c"bko\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"bla\00", i32 1112229408 }, %struct.LangTag { [4 x i8] c"ble\00", i32 1112296992 }, %struct.LangTag { [4 x i8] c"blg\00", i32 1229078816 }, %struct.LangTag { [4 x i8] c"bli\00", i32 0 }, %struct.LangTag { [4 x i8] c"blk\00", i32 1112296224 }, %struct.LangTag { [4 x i8] c"blk\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"bln\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"blt\00", i32 0 }, %struct.LangTag { [4 x i8] c"bm\00\00", i32 1112359456 }, %struct.LangTag { [4 x i8] c"bmb\00", i32 0 }, %struct.LangTag { [4 x i8] c"bml\00", i32 0 }, %struct.LangTag { [4 x i8] c"bmm\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"bn\00\00", i32 1111838240 }, %struct.LangTag { [4 x i8] c"bo\00\00", i32 1414087200 }, %struct.LangTag { [4 x i8] c"bpd\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"bpl\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bpq\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bqi\00", i32 1280459552 }, %struct.LangTag { [4 x i8] c"bqk\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"br\00\00", i32 1112687904 }, %struct.LangTag { [4 x i8] c"bra\00", i32 1112688928 }, %struct.LangTag { [4 x i8] c"brc\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bri\00", i32 0 }, %struct.LangTag { [4 x i8] c"brm\00", i32 0 }, %struct.LangTag { [4 x i8] c"bs\00\00", i32 1112494880 }, %struct.LangTag { [4 x i8] c"bsh\00", i32 0 }, %struct.LangTag { [4 x i8] c"btb\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"btd\00", i32 1112818720 }, %struct.LangTag { [4 x i8] c"btd\00", i32 1112820512 }, %struct.LangTag { [4 x i8] c"bti\00", i32 0 }, %struct.LangTag { [4 x i8] c"btj\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"btm\00", i32 1112821024 }, %struct.LangTag { [4 x i8] c"btm\00", i32 1112820512 }, %struct.LangTag { [4 x i8] c"bto\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"bts\00", i32 1112822560 }, %struct.LangTag { [4 x i8] c"bts\00", i32 1112820512 }, %struct.LangTag { [4 x i8] c"btx\00", i32 1112823840 }, %struct.LangTag { [4 x i8] c"btx\00", i32 1112820512 }, %struct.LangTag { [4 x i8] c"btz\00", i32 1112824352 }, %struct.LangTag { [4 x i8] c"btz\00", i32 1112820512 }, %struct.LangTag { [4 x i8] c"bum\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"bve\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"bvu\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"bwe\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"bxk\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"bxo\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bxp\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"bxr\00", i32 1380078880 }, %struct.LangTag { [4 x i8] c"byn\00", i32 1112099872 }, %struct.LangTag { [4 x i8] c"byv\00", i32 1113151008 }, %struct.LangTag { [4 x i8] c"byv\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"bzc\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"bzj\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"bzk\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ca\00\00", i32 1128354848 }, %struct.LangTag { [4 x i8] c"caa\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"cac\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"caf\00", i32 1129468448 }, %struct.LangTag { [4 x i8] c"caf\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"cak\00", i32 1128352544 }, %struct.LangTag { [4 x i8] c"cak\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"cbk\00", i32 1128418080 }, %struct.LangTag { [4 x i8] c"cbk\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"cbl\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"ccl\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ccm\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"cco\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"ccq\00", i32 1095912224 }, %struct.LangTag { [4 x i8] c"cdo\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"ce\00\00", i32 1128809760 }, %struct.LangTag { [4 x i8] c"cek\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cey\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cfm\00", i32 1212238880 }, %struct.LangTag { [4 x i8] c"cfm\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"ch\00\00", i32 1128808736 }, %struct.LangTag { [4 x i8] c"chf\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"chg\00", i32 0 }, %struct.LangTag { [4 x i8] c"chh\00", i32 0 }, %struct.LangTag { [4 x i8] c"chj\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"chk\00", i32 1128811312 }, %struct.LangTag { [4 x i8] c"chn\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"chp\00", i32 1128812576 }, %struct.LangTag { [4 x i8] c"chp\00", i32 1396791584 }, %struct.LangTag { [4 x i8] c"chp\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"chq\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"chz\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"ciw\00", i32 1330266656 }, %struct.LangTag { [4 x i8] c"cjy\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"cka\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"ckb\00", i32 1263882784 }, %struct.LangTag { [4 x i8] c"ckn\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cks\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ckt\00", i32 1128811296 }, %struct.LangTag { [4 x i8] c"ckz\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"clc\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"cld\00", i32 1398362656 }, %struct.LangTag { [4 x i8] c"cle\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"clj\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"clt\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cmn\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"cmr\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cnb\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cnh\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cnk\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cnl\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"cnp\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"cnr\00", i32 1397899808 }, %struct.LangTag { [4 x i8] c"cnt\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"cnu\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"cnw\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"co\00\00", i32 1129272096 }, %struct.LangTag { [4 x i8] c"coa\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"cob\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"coq\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"cpa\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"cpe\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"cpf\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"cpi\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"cpx\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"cqd\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"cqu\00", i32 1364543520 }, %struct.LangTag { [4 x i8] c"cqu\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"cr\00\00", i32 1129465120 }, %struct.LangTag { [4 x i8] c"crh\00", i32 1129468960 }, %struct.LangTag { [4 x i8] c"cri\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"crj\00", i32 1162039840 }, %struct.LangTag { [4 x i8] c"crj\00", i32 1497584160 }, %struct.LangTag { [4 x i8] c"crj\00", i32 1129465120 }, %struct.LangTag { [4 x i8] c"crk\00", i32 1464029728 }, %struct.LangTag { [4 x i8] c"crk\00", i32 1497584160 }, %struct.LangTag { [4 x i8] c"crk\00", i32 1129465120 }, %struct.LangTag { [4 x i8] c"crl\00", i32 1162039840 }, %struct.LangTag { [4 x i8] c"crl\00", i32 1497584160 }, %struct.LangTag { [4 x i8] c"crl\00", i32 1129465120 }, %struct.LangTag { [4 x i8] c"crm\00", i32 1296257568 }, %struct.LangTag { [4 x i8] c"crm\00", i32 1279480352 }, %struct.LangTag { [4 x i8] c"crm\00", i32 1129465120 }, %struct.LangTag { [4 x i8] c"crp\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"crr\00", i32 0 }, %struct.LangTag { [4 x i8] c"crs\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"crt\00", i32 0 }, %struct.LangTag { [4 x i8] c"crx\00", i32 1129468448 }, %struct.LangTag { [4 x i8] c"crx\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"cs\00\00", i32 1129535776 }, %struct.LangTag { [4 x i8] c"csa\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"csh\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"csj\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"csl\00", i32 0 }, %struct.LangTag { [4 x i8] c"cso\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"csp\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"csv\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"csw\00", i32 1313034784 }, %struct.LangTag { [4 x i8] c"csw\00", i32 1313358624 }, %struct.LangTag { [4 x i8] c"csw\00", i32 1129465120 }, %struct.LangTag { [4 x i8] c"csy\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"ctc\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"ctd\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"cte\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"cth\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"ctl\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"cts\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"ctu\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"cu\00\00", i32 1129532448 }, %struct.LangTag { [4 x i8] c"cuc\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"cv\00\00", i32 1128813856 }, %struct.LangTag { [4 x i8] c"cvn\00", i32 1128482894 }, %struct.LangTag { [4 x i8] c"cwd\00", i32 1145262624 }, %struct.LangTag { [4 x i8] c"cwd\00", i32 1413698080 }, %struct.LangTag { [4 x i8] c"cwd\00", i32 1129465120 }, %struct.LangTag { [4 x i8] c"cy\00\00", i32 1464159264 }, %struct.LangTag { [4 x i8] c"czh\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"czo\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"czt\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"da\00\00", i32 1145130528 }, %struct.LangTag { [4 x i8] c"dao\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"dap\00", i32 1313428256 }, %struct.LangTag { [4 x i8] c"dcr\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"de\00\00", i32 1145394464 }, %struct.LangTag { [4 x i8] c"den\00", i32 1397506336 }, %struct.LangTag { [4 x i8] c"den\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"dep\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"dgo\00", i32 1145524000 }, %struct.LangTag { [4 x i8] c"dgo\00", i32 1145524768 }, %struct.LangTag { [4 x i8] c"dgr\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"dhd\00", i32 1296127776 }, %struct.LangTag { [4 x i8] c"dhv\00", i32 0 }, %struct.LangTag { [4 x i8] c"dib\00", i32 1145981728 }, %struct.LangTag { [4 x i8] c"dik\00", i32 1145981728 }, %struct.LangTag { [4 x i8] c"din\00", i32 1145981728 }, %struct.LangTag { [4 x i8] c"dip\00", i32 1145981728 }, %struct.LangTag { [4 x i8] c"diq\00", i32 1145655584 }, %struct.LangTag { [4 x i8] c"diq\00", i32 1515864352 }, %struct.LangTag { [4 x i8] c"diw\00", i32 1145981728 }, %struct.LangTag { [4 x i8] c"dje\00", i32 1145721376 }, %struct.LangTag { [4 x i8] c"djk\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"djr\00", i32 1145721392 }, %struct.LangTag { [4 x i8] c"dks\00", i32 1145981728 }, %struct.LangTag { [4 x i8] c"dng\00", i32 1146441248 }, %struct.LangTag { [4 x i8] c"dnk\00", i32 0 }, %struct.LangTag { [4 x i8] c"doi\00", i32 1145524768 }, %struct.LangTag { [4 x i8] c"drh\00", i32 1296975648 }, %struct.LangTag { [4 x i8] c"dri\00", i32 0 }, %struct.LangTag { [4 x i8] c"drw\00", i32 1146243360 }, %struct.LangTag { [4 x i8] c"drw\00", i32 1178685984 }, %struct.LangTag { [4 x i8] c"dsb\00", i32 1280524832 }, %struct.LangTag { [4 x i8] c"dty\00", i32 1313165344 }, %struct.LangTag { [4 x i8] c"dun\00", i32 0 }, %struct.LangTag { [4 x i8] c"dup\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"dv\00\00", i32 1145656864 }, %struct.LangTag { [4 x i8] c"dv\00\00", i32 1145591328 }, %struct.LangTag { [4 x i8] c"dwk\00", i32 1263880480 }, %struct.LangTag { [4 x i8] c"dwu\00", i32 1146440224 }, %struct.LangTag { [4 x i8] c"dwy\00", i32 1146440224 }, %struct.LangTag { [4 x i8] c"dyu\00", i32 1247104032 }, %struct.LangTag { [4 x i8] c"dz\00\00", i32 1146768928 }, %struct.LangTag { [4 x i8] c"dzn\00", i32 0 }, %struct.LangTag { [4 x i8] c"ecr\00", i32 0 }, %struct.LangTag { [4 x i8] c"ee\00\00", i32 1163347232 }, %struct.LangTag { [4 x i8] c"ekk\00", i32 1163151648 }, %struct.LangTag { [4 x i8] c"eky\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"el\00\00", i32 1162628128 }, %struct.LangTag { [4 x i8] c"emk\00", i32 1162693408 }, %struct.LangTag { [4 x i8] c"emk\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"emy\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"en\00\00", i32 1162757920 }, %struct.LangTag { [4 x i8] c"enb\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"enf\00", i32 1179534624 }, %struct.LangTag { [4 x i8] c"enh\00", i32 1414415648 }, %struct.LangTag { [4 x i8] c"eo\00\00", i32 1314148128 }, %struct.LangTag { [4 x i8] c"es\00\00", i32 1163087904 }, %struct.LangTag { [4 x i8] c"esg\00", i32 1196379680 }, %struct.LangTag { [4 x i8] c"esi\00", i32 1229998880 }, %struct.LangTag { [4 x i8] c"esk\00", i32 1229998880 }, %struct.LangTag { [4 x i8] c"et\00\00", i32 1163151648 }, %struct.LangTag { [4 x i8] c"eto\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"eu\00\00", i32 1163219232 }, %struct.LangTag { [4 x i8] c"euq\00", i32 0 }, %struct.LangTag { [4 x i8] c"eve\00", i32 1163284000 }, %struct.LangTag { [4 x i8] c"evn\00", i32 1163283232 }, %struct.LangTag { [4 x i8] c"ewo\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"eyo\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"fa\00\00", i32 1178685984 }, %struct.LangTag { [4 x i8] c"fab\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"fan\00", i32 1178684976 }, %struct.LangTag { [4 x i8] c"fan\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"far\00", i32 0 }, %struct.LangTag { [4 x i8] c"fat\00", i32 1178686496 }, %struct.LangTag { [4 x i8] c"fat\00", i32 1095450912 }, %struct.LangTag { [4 x i8] c"fbl\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"ff\00\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"ffm\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fi\00\00", i32 1179209248 }, %struct.LangTag { [4 x i8] c"fil\00", i32 1346980896 }, %struct.LangTag { [4 x i8] c"fj\00\00", i32 1179273504 }, %struct.LangTag { [4 x i8] c"flm\00", i32 1212238880 }, %struct.LangTag { [4 x i8] c"flm\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"fmp\00", i32 1179471904 }, %struct.LangTag { [4 x i8] c"fmp\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"fng\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"fo\00\00", i32 1179603744 }, %struct.LangTag { [4 x i8] c"fos\00", i32 0 }, %struct.LangTag { [4 x i8] c"fpe\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"fr\00\00", i32 1179795744 }, %struct.LangTag { [4 x i8] c"fub\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fuc\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fue\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fuf\00", i32 1179926816 }, %struct.LangTag { [4 x i8] c"fuf\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fuh\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fui\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fuq\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fur\00", i32 1179798560 }, %struct.LangTag { [4 x i8] c"fuv\00", i32 1179997728 }, %struct.LangTag { [4 x i8] c"fuv\00", i32 1179995168 }, %struct.LangTag { [4 x i8] c"fy\00\00", i32 1179797792 }, %struct.LangTag { [4 x i8] c"ga\00\00", i32 1230129440 }, %struct.LangTag { [4 x i8] c"gaa\00", i32 1195459616 }, %struct.LangTag { [4 x i8] c"gac\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gad\00", i32 0 }, %struct.LangTag { [4 x i8] c"gae\00", i32 0 }, %struct.LangTag { [4 x i8] c"gal\00", i32 0 }, %struct.LangTag { [4 x i8] c"gan\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"gar\00", i32 0 }, %struct.LangTag { [4 x i8] c"gaw\00", i32 0 }, %struct.LangTag { [4 x i8] c"gax\00", i32 1330794272 }, %struct.LangTag { [4 x i8] c"gaz\00", i32 1330794272 }, %struct.LangTag { [4 x i8] c"gbm\00", i32 1195464480 }, %struct.LangTag { [4 x i8] c"gce\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"gcf\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gcl\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gcr\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gd\00\00", i32 1195459872 }, %struct.LangTag { [4 x i8] c"gda\00", i32 1380010528 }, %struct.LangTag { [4 x i8] c"ggo\00", i32 1196379680 }, %struct.LangTag { [4 x i8] c"gha\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"ghk\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"gho\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"gib\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gil\00", i32 1195985968 }, %struct.LangTag { [4 x i8] c"gju\00", i32 1380010528 }, %struct.LangTag { [4 x i8] c"gkp\00", i32 1196118048 }, %struct.LangTag { [4 x i8] c"gkp\00", i32 1263553568 }, %struct.LangTag { [4 x i8] c"gl\00\00", i32 1195461664 }, %struct.LangTag { [4 x i8] c"gld\00", i32 1312902688 }, %struct.LangTag { [4 x i8] c"gmz\00", i32 0 }, %struct.LangTag { [4 x i8] c"gn\00\00", i32 1196769568 }, %struct.LangTag { [4 x i8] c"gnb\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"gno\00", i32 1196379680 }, %struct.LangTag { [4 x i8] c"gnw\00", i32 1196769568 }, %struct.LangTag { [4 x i8] c"gom\00", i32 1263487776 }, %struct.LangTag { [4 x i8] c"goq\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gox\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"gpe\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gro\00", i32 0 }, %struct.LangTag { [4 x i8] c"grr\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"grt\00", i32 1196576544 }, %struct.LangTag { [4 x i8] c"gru\00", i32 1397704480 }, %struct.LangTag { [4 x i8] c"gsw\00", i32 1095521056 }, %struct.LangTag { [4 x i8] c"gu\00\00", i32 1196771872 }, %struct.LangTag { [4 x i8] c"gua\00", i32 0 }, %struct.LangTag { [4 x i8] c"gug\00", i32 1196769568 }, %struct.LangTag { [4 x i8] c"gui\00", i32 1196769568 }, %struct.LangTag { [4 x i8] c"guk\00", i32 1196251680 }, %struct.LangTag { [4 x i8] c"gul\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"gun\00", i32 1196769568 }, %struct.LangTag { [4 x i8] c"gv\00\00", i32 1296980000 }, %struct.LangTag { [4 x i8] c"gwi\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"gyn\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ha\00\00", i32 1212241184 }, %struct.LangTag { [4 x i8] c"haa\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"hae\00", i32 1330794272 }, %struct.LangTag { [4 x i8] c"hai\00", i32 0 }, %struct.LangTag { [4 x i8] c"hak\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"hal\00", i32 0 }, %struct.LangTag { [4 x i8] c"har\00", i32 1213352224 }, %struct.LangTag { [4 x i8] c"hbn\00", i32 0 }, %struct.LangTag { [4 x i8] c"hca\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"he\00\00", i32 1230459424 }, %struct.LangTag { [4 x i8] c"hea\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hi\00\00", i32 1212763680 }, %struct.LangTag { [4 x i8] c"hji\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"hlt\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"hma\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmc\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmd\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hme\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmg\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmh\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmi\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmj\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hml\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmm\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmp\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmq\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmr\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"hms\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmw\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmy\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hmz\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hne\00", i32 1128810528 }, %struct.LangTag { [4 x i8] c"hnj\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hno\00", i32 1213088800 }, %struct.LangTag { [4 x i8] c"ho\00\00", i32 1213026080 }, %struct.LangTag { [4 x i8] c"ho\00\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"hoc\00", i32 1213145120 }, %struct.LangTag { [4 x i8] c"hoi\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"hoj\00", i32 1212240416 }, %struct.LangTag { [4 x i8] c"hoj\00", i32 1380010528 }, %struct.LangTag { [4 x i8] c"hr\00\00", i32 1213355552 }, %struct.LangTag { [4 x i8] c"hra\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"hrm\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hsb\00", i32 1431519776 }, %struct.LangTag { [4 x i8] c"hsn\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"ht\00\00", i32 1212238112 }, %struct.LangTag { [4 x i8] c"ht\00\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"hu\00\00", i32 1213550112 }, %struct.LangTag { [4 x i8] c"huj\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"hup\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"hus\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"hwc\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"hy\00\00", i32 1213809968 }, %struct.LangTag { [4 x i8] c"hy\00\00", i32 1213809952 }, %struct.LangTag { [4 x i8] c"hyw\00", i32 1213809952 }, %struct.LangTag { [4 x i8] c"hz\00\00", i32 1212502560 }, %struct.LangTag { [4 x i8] c"ia\00\00", i32 1229865248 }, %struct.LangTag { [4 x i8] c"iby\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"icr\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"id\00\00", i32 1229866016 }, %struct.LangTag { [4 x i8] c"id\00\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"ida\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"idb\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ie\00\00", i32 1229735200 }, %struct.LangTag { [4 x i8] c"ig\00\00", i32 1229082400 }, %struct.LangTag { [4 x i8] c"igb\00", i32 1161972000 }, %struct.LangTag { [4 x i8] c"ihb\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ii\00\00", i32 1497976096 }, %struct.LangTag { [4 x i8] c"ijc\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"ije\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"ijn\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"ijs\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"ik\00\00", i32 1229998880 }, %struct.LangTag { [4 x i8] c"ike\00", i32 1229870368 }, %struct.LangTag { [4 x i8] c"ikt\00", i32 1229870368 }, %struct.LangTag { [4 x i8] c"in\00\00", i32 1229866016 }, %struct.LangTag { [4 x i8] c"in\00\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"ing\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"inh\00", i32 1229866784 }, %struct.LangTag { [4 x i8] c"io\00\00", i32 1229213472 }, %struct.LangTag { [4 x i8] c"iri\00", i32 0 }, %struct.LangTag { [4 x i8] c"is\00\00", i32 1230195744 }, %struct.LangTag { [4 x i8] c"ism\00", i32 0 }, %struct.LangTag { [4 x i8] c"it\00\00", i32 1230258464 }, %struct.LangTag { [4 x i8] c"itz\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"iu\00\00", i32 1229870368 }, %struct.LangTag { [4 x i8] c"iw\00\00", i32 1230459424 }, %struct.LangTag { [4 x i8] c"ixl\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"ja\00\00", i32 1245793824 }, %struct.LangTag { [4 x i8] c"jac\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"jak\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"jam\00", i32 1245793568 }, %struct.LangTag { [4 x i8] c"jam\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"jan\00", i32 0 }, %struct.LangTag { [4 x i8] c"jax\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"jbe\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"jbn\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"jgo\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"ji\00\00", i32 1246316832 }, %struct.LangTag { [4 x i8] c"jii\00", i32 0 }, %struct.LangTag { [4 x i8] c"jkm\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"jkp\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"jud\00", i32 0 }, %struct.LangTag { [4 x i8] c"jul\00", i32 0 }, %struct.LangTag { [4 x i8] c"jv\00\00", i32 1245795872 }, %struct.LangTag { [4 x i8] c"jvd\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"jw\00\00", i32 1245795872 }, %struct.LangTag { [4 x i8] c"ka\00\00", i32 1262572576 }, %struct.LangTag { [4 x i8] c"kaa\00", i32 1263684384 }, %struct.LangTag { [4 x i8] c"kab\00", i32 1262567984 }, %struct.LangTag { [4 x i8] c"kab\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"kac\00", i32 0 }, %struct.LangTag { [4 x i8] c"kam\00", i32 1263354400 }, %struct.LangTag { [4 x i8] c"kar\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kbd\00", i32 1262567968 }, %struct.LangTag { [4 x i8] c"kby\00", i32 1263424032 }, %struct.LangTag { [4 x i8] c"kca\00", i32 1263029024 }, %struct.LangTag { [4 x i8] c"kca\00", i32 1263031072 }, %struct.LangTag { [4 x i8] c"kca\00", i32 1263031840 }, %struct.LangTag { [4 x i8] c"kcn\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"kdr\00", i32 1263684896 }, %struct.LangTag { [4 x i8] c"kdt\00", i32 1263884576 }, %struct.LangTag { [4 x i8] c"kea\00", i32 1262829856 }, %struct.LangTag { [4 x i8] c"kea\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"keb\00", i32 0 }, %struct.LangTag { [4 x i8] c"kek\00", i32 1262832416 }, %struct.LangTag { [4 x i8] c"kek\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"kex\00", i32 1263226400 }, %struct.LangTag { [4 x i8] c"kfa\00", i32 1263485984 }, %struct.LangTag { [4 x i8] c"kfr\00", i32 1262568224 }, %struct.LangTag { [4 x i8] c"kfx\00", i32 1263881248 }, %struct.LangTag { [4 x i8] c"kfy\00", i32 1263357472 }, %struct.LangTag { [4 x i8] c"kg\00\00", i32 1263488560 }, %struct.LangTag { [4 x i8] c"kge\00", i32 0 }, %struct.LangTag { [4 x i8] c"kha\00", i32 1263749408 }, %struct.LangTag { [4 x i8] c"khb\00", i32 1480737824 }, %struct.LangTag { [4 x i8] c"khk\00", i32 1296975648 }, %struct.LangTag { [4 x i8] c"khn\00", i32 0 }, %struct.LangTag { [4 x i8] c"khs\00", i32 0 }, %struct.LangTag { [4 x i8] c"kht\00", i32 1263031328 }, %struct.LangTag { [4 x i8] c"kht\00", i32 1263029792 }, %struct.LangTag { [4 x i8] c"khv\00", i32 0 }, %struct.LangTag { [4 x i8] c"ki\00\00", i32 1263094560 }, %struct.LangTag { [4 x i8] c"kis\00", i32 0 }, %struct.LangTag { [4 x i8] c"kiu\00", i32 1263097120 }, %struct.LangTag { [4 x i8] c"kiu\00", i32 1515864352 }, %struct.LangTag { [4 x i8] c"kj\00\00", i32 1263878432 }, %struct.LangTag { [4 x i8] c"kjb\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"kjh\00", i32 1263026464 }, %struct.LangTag { [4 x i8] c"kjp\00", i32 1263161376 }, %struct.LangTag { [4 x i8] c"kjp\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kjt\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kk\00\00", i32 1262574112 }, %struct.LangTag { [4 x i8] c"kkn\00", i32 0 }, %struct.LangTag { [4 x i8] c"kkz\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"kl\00\00", i32 1196576288 }, %struct.LangTag { [4 x i8] c"klm\00", i32 0 }, %struct.LangTag { [4 x i8] c"kln\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"km\00\00", i32 1263029536 }, %struct.LangTag { [4 x i8] c"kmb\00", i32 1296191008 }, %struct.LangTag { [4 x i8] c"kmn\00", i32 0 }, %struct.LangTag { [4 x i8] c"kmo\00", i32 0 }, %struct.LangTag { [4 x i8] c"kmr\00", i32 1263882784 }, %struct.LangTag { [4 x i8] c"kms\00", i32 0 }, %struct.LangTag { [4 x i8] c"kmv\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"kmw\00", i32 1263357728 }, %struct.LangTag { [4 x i8] c"kn\00\00", i32 1262571040 }, %struct.LangTag { [4 x i8] c"knc\00", i32 1263424032 }, %struct.LangTag { [4 x i8] c"kng\00", i32 1263488560 }, %struct.LangTag { [4 x i8] c"knj\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"knn\00", i32 1263487776 }, %struct.LangTag { [4 x i8] c"knr\00", i32 0 }, %struct.LangTag { [4 x i8] c"ko\00\00", i32 1263489568 }, %struct.LangTag { [4 x i8] c"ko\00\00", i32 1263487008 }, %struct.LangTag { [4 x i8] c"kod\00", i32 0 }, %struct.LangTag { [4 x i8] c"koh\00", i32 0 }, %struct.LangTag { [4 x i8] c"koi\00", i32 1263489056 }, %struct.LangTag { [4 x i8] c"koi\00", i32 1263488288 }, %struct.LangTag { [4 x i8] c"kop\00", i32 0 }, %struct.LangTag { [4 x i8] c"koy\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"koz\00", i32 0 }, %struct.LangTag { [4 x i8] c"kpe\00", i32 1263553568 }, %struct.LangTag { [4 x i8] c"kpl\00", i32 0 }, %struct.LangTag { [4 x i8] c"kpp\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kpv\00", i32 1263491616 }, %struct.LangTag { [4 x i8] c"kpv\00", i32 1263488288 }, %struct.LangTag { [4 x i8] c"kpy\00", i32 1264143136 }, %struct.LangTag { [4 x i8] c"kqs\00", i32 1263096608 }, %struct.LangTag { [4 x i8] c"kqy\00", i32 1263686688 }, %struct.LangTag { [4 x i8] c"kr\00\00", i32 1263424032 }, %struct.LangTag { [4 x i8] c"krc\00", i32 1262572064 }, %struct.LangTag { [4 x i8] c"krc\00", i32 1111575584 }, %struct.LangTag { [4 x i8] c"kri\00", i32 1263683872 }, %struct.LangTag { [4 x i8] c"kri\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"krk\00", i32 0 }, %struct.LangTag { [4 x i8] c"krm\00", i32 0 }, %struct.LangTag { [4 x i8] c"krn\00", i32 0 }, %struct.LangTag { [4 x i8] c"krt\00", i32 1263424032 }, %struct.LangTag { [4 x i8] c"kru\00", i32 1263883552 }, %struct.LangTag { [4 x i8] c"ks\00\00", i32 1263749152 }, %struct.LangTag { [4 x i8] c"ksh\00", i32 1263749168 }, %struct.LangTag { [4 x i8] c"ksi\00", i32 0 }, %struct.LangTag { [4 x i8] c"ksm\00", i32 0 }, %struct.LangTag { [4 x i8] c"kss\00", i32 1263096608 }, %struct.LangTag { [4 x i8] c"ksw\00", i32 1263752992 }, %struct.LangTag { [4 x i8] c"ksw\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"ktb\00", i32 1262830112 }, %struct.LangTag { [4 x i8] c"ktu\00", i32 1263488544 }, %struct.LangTag { [4 x i8] c"ktw\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"ku\00\00", i32 1263882784 }, %struct.LangTag { [4 x i8] c"kui\00", i32 0 }, %struct.LangTag { [4 x i8] c"kul\00", i32 0 }, %struct.LangTag { [4 x i8] c"kuu\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"kuw\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"kuy\00", i32 0 }, %struct.LangTag { [4 x i8] c"kv\00\00", i32 1263488288 }, %struct.LangTag { [4 x i8] c"kvb\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"kvl\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kvq\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kvr\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"kvt\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kvu\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kvy\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kw\00\00", i32 1129271840 }, %struct.LangTag { [4 x i8] c"kww\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"kwy\00", i32 1263488560 }, %struct.LangTag { [4 x i8] c"kxc\00", i32 1263358752 }, %struct.LangTag { [4 x i8] c"kxd\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"kxf\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kxk\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"kxl\00", i32 1263883552 }, %struct.LangTag { [4 x i8] c"kxu\00", i32 1263880480 }, %struct.LangTag { [4 x i8] c"ky\00\00", i32 1263096352 }, %struct.LangTag { [4 x i8] c"kyk\00", i32 0 }, %struct.LangTag { [4 x i8] c"kyu\00", i32 1264145696 }, %struct.LangTag { [4 x i8] c"kyu\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"la\00\00", i32 1279349792 }, %struct.LangTag { [4 x i8] c"lac\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"lad\00", i32 1247101984 }, %struct.LangTag { [4 x i8] c"lah\00", i32 0 }, %struct.LangTag { [4 x i8] c"lak\00", i32 0 }, %struct.LangTag { [4 x i8] c"lam\00", i32 0 }, %struct.LangTag { [4 x i8] c"laz\00", i32 0 }, %struct.LangTag { [4 x i8] c"lb\00\00", i32 1280596512 }, %struct.LangTag { [4 x i8] c"lbe\00", i32 1279347488 }, %struct.LangTag { [4 x i8] c"lbj\00", i32 1279544096 }, %struct.LangTag { [4 x i8] c"lbl\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"lce\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"lcf\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"ldi\00", i32 1263488560 }, %struct.LangTag { [4 x i8] c"ldk\00", i32 0 }, %struct.LangTag { [4 x i8] c"lg\00\00", i32 1280657184 }, %struct.LangTag { [4 x i8] c"li\00\00", i32 1279872288 }, %struct.LangTag { [4 x i8] c"lif\00", i32 1280131616 }, %struct.LangTag { [4 x i8] c"lir\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"liw\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"liy\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"lkb\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lko\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lks\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lld\00", i32 1279345696 }, %struct.LangTag { [4 x i8] c"lma\00", i32 0 }, %struct.LangTag { [4 x i8] c"lmb\00", i32 0 }, %struct.LangTag { [4 x i8] c"lmn\00", i32 1279348000 }, %struct.LangTag { [4 x i8] c"lmw\00", i32 0 }, %struct.LangTag { [4 x i8] c"ln\00\00", i32 1279872544 }, %struct.LangTag { [4 x i8] c"lna\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"lnl\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"lo\00\00", i32 1279348512 }, %struct.LangTag { [4 x i8] c"lou\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"lri\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lrm\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lrt\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"lsb\00", i32 0 }, %struct.LangTag { [4 x i8] c"lsm\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lt\00\00", i32 1280591904 }, %struct.LangTag { [4 x i8] c"ltg\00", i32 1280723232 }, %struct.LangTag { [4 x i8] c"lth\00", i32 0 }, %struct.LangTag { [4 x i8] c"lto\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lts\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lu\00\00", i32 1280655904 }, %struct.LangTag { [4 x i8] c"lus\00", i32 1296652832 }, %struct.LangTag { [4 x i8] c"lus\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"luy\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"luz\00", i32 1280459552 }, %struct.LangTag { [4 x i8] c"lv\00\00", i32 1280723232 }, %struct.LangTag { [4 x i8] c"lvi\00", i32 0 }, %struct.LangTag { [4 x i8] c"lvs\00", i32 1280723232 }, %struct.LangTag { [4 x i8] c"lwg\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"lzh\00", i32 1514689568 }, %struct.LangTag { [4 x i8] c"lzz\00", i32 1279351328 }, %struct.LangTag { [4 x i8] c"mai\00", i32 1297369120 }, %struct.LangTag { [4 x i8] c"maj\00", i32 0 }, %struct.LangTag { [4 x i8] c"mak\00", i32 1296781856 }, %struct.LangTag { [4 x i8] c"mam\00", i32 1296125216 }, %struct.LangTag { [4 x i8] c"mam\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"man\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"map\00", i32 0 }, %struct.LangTag { [4 x i8] c"maw\00", i32 0 }, %struct.LangTag { [4 x i8] c"max\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"max\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mbf\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mbn\00", i32 0 }, %struct.LangTag { [4 x i8] c"mch\00", i32 0 }, %struct.LangTag { [4 x i8] c"mcm\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mcr\00", i32 0 }, %struct.LangTag { [4 x i8] c"mct\00", i32 1112820000 }, %struct.LangTag { [4 x i8] c"mde\00", i32 0 }, %struct.LangTag { [4 x i8] c"mdf\00", i32 1297042208 }, %struct.LangTag { [4 x i8] c"mdy\00", i32 1296844064 }, %struct.LangTag { [4 x i8] c"men\00", i32 1296319776 }, %struct.LangTag { [4 x i8] c"meo\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"mfa\00", i32 1296449824 }, %struct.LangTag { [4 x i8] c"mfa\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"mfb\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"mfe\00", i32 1296450848 }, %struct.LangTag { [4 x i8] c"mfe\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mfp\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mg\00\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"mh\00\00", i32 1296123936 }, %struct.LangTag { [4 x i8] c"mhc\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"mhr\00", i32 1280131360 }, %struct.LangTag { [4 x i8] c"mhv\00", i32 1095912224 }, %struct.LangTag { [4 x i8] c"mi\00\00", i32 1297238304 }, %struct.LangTag { [4 x i8] c"min\00", i32 1296649760 }, %struct.LangTag { [4 x i8] c"min\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"miz\00", i32 0 }, %struct.LangTag { [4 x i8] c"mk\00\00", i32 1296778272 }, %struct.LangTag { [4 x i8] c"mkn\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mkr\00", i32 0 }, %struct.LangTag { [4 x i8] c"mku\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"ml\00\00", i32 1296124960 }, %struct.LangTag { [4 x i8] c"ml\00\00", i32 1296847392 }, %struct.LangTag { [4 x i8] c"mle\00", i32 0 }, %struct.LangTag { [4 x i8] c"mln\00", i32 0 }, %struct.LangTag { [4 x i8] c"mlq\00", i32 1296846368 }, %struct.LangTag { [4 x i8] c"mlq\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"mlr\00", i32 0 }, %struct.LangTag { [4 x i8] c"mmr\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"mn\00\00", i32 1296975648 }, %struct.LangTag { [4 x i8] c"mnc\00", i32 1296255008 }, %struct.LangTag { [4 x i8] c"mnd\00", i32 0 }, %struct.LangTag { [4 x i8] c"mng\00", i32 0 }, %struct.LangTag { [4 x i8] c"mnh\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"mnk\00", i32 1296974880 }, %struct.LangTag { [4 x i8] c"mnk\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"mnp\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"mns\00", i32 1296125472 }, %struct.LangTag { [4 x i8] c"mnw\00", i32 1297042976 }, %struct.LangTag { [4 x i8] c"mnx\00", i32 0 }, %struct.LangTag { [4 x i8] c"mo\00\00", i32 1297042464 }, %struct.LangTag { [4 x i8] c"mod\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mok\00", i32 0 }, %struct.LangTag { [4 x i8] c"mop\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"mor\00", i32 0 }, %struct.LangTag { [4 x i8] c"mpe\00", i32 1296124448 }, %struct.LangTag { [4 x i8] c"mqg\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"mr\00\00", i32 1296126496 }, %struct.LangTag { [4 x i8] c"mrh\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"mrj\00", i32 1213022496 }, %struct.LangTag { [4 x i8] c"ms\00\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"msc\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"msh\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"msi\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"msi\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mt\00\00", i32 1297371936 }, %struct.LangTag { [4 x i8] c"mth\00", i32 0 }, %struct.LangTag { [4 x i8] c"mtr\00", i32 1296127776 }, %struct.LangTag { [4 x i8] c"mts\00", i32 0 }, %struct.LangTag { [4 x i8] c"mud\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"mui\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"mun\00", i32 0 }, %struct.LangTag { [4 x i8] c"mup\00", i32 1380010528 }, %struct.LangTag { [4 x i8] c"muq\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"mvb\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"mve\00", i32 1296127776 }, %struct.LangTag { [4 x i8] c"mvf\00", i32 1296975648 }, %struct.LangTag { [4 x i8] c"mwk\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"mwq\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"mwr\00", i32 1296127776 }, %struct.LangTag { [4 x i8] c"mww\00", i32 1297569568 }, %struct.LangTag { [4 x i8] c"mww\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"my\00\00", i32 1112689952 }, %struct.LangTag { [4 x i8] c"mym\00", i32 1296387616 }, %struct.LangTag { [4 x i8] c"myq\00", i32 1296976672 }, %struct.LangTag { [4 x i8] c"myv\00", i32 1163024928 }, %struct.LangTag { [4 x i8] c"mzb\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"mzs\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"na\00\00", i32 1312904480 }, %struct.LangTag { [4 x i8] c"nag\00", i32 1312900896 }, %struct.LangTag { [4 x i8] c"nag\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"nan\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"nas\00", i32 0 }, %struct.LangTag { [4 x i8] c"naz\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nb\00\00", i32 1313821216 }, %struct.LangTag { [4 x i8] c"nch\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nci\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"ncj\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"ncl\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"ncr\00", i32 0 }, %struct.LangTag { [4 x i8] c"ncx\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nd\00\00", i32 1313096224 }, %struct.LangTag { [4 x i8] c"ndb\00", i32 0 }, %struct.LangTag { [4 x i8] c"ndg\00", i32 0 }, %struct.LangTag { [4 x i8] c"ne\00\00", i32 1313165344 }, %struct.LangTag { [4 x i8] c"nef\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ng\00\00", i32 1313097504 }, %struct.LangTag { [4 x i8] c"ngl\00", i32 1280136992 }, %struct.LangTag { [4 x i8] c"ngm\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ngo\00", i32 1398297632 }, %struct.LangTag { [4 x i8] c"ngr\00", i32 0 }, %struct.LangTag { [4 x i8] c"ngu\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhc\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhd\00", i32 1196769568 }, %struct.LangTag { [4 x i8] c"nhe\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhg\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhi\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhk\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhm\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhn\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhp\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhq\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nht\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhv\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhw\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhx\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhy\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nhz\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"niq\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"nis\00", i32 0 }, %struct.LangTag { [4 x i8] c"niv\00", i32 1195985952 }, %struct.LangTag { [4 x i8] c"njt\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"njz\00", i32 1313428256 }, %struct.LangTag { [4 x i8] c"nko\00", i32 0 }, %struct.LangTag { [4 x i8] c"nkx\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"nl\00\00", i32 1313621024 }, %struct.LangTag { [4 x i8] c"nla\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"nle\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"nln\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nlv\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nn\00\00", i32 1314475552 }, %struct.LangTag { [4 x i8] c"nn\00\00", i32 1313821216 }, %struct.LangTag { [4 x i8] c"nnh\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"nnz\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"no\00\00", i32 1313821216 }, %struct.LangTag { [4 x i8] c"nod\00", i32 1314144544 }, %struct.LangTag { [4 x i8] c"npi\00", i32 1313165344 }, %struct.LangTag { [4 x i8] c"npl\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nqo\00", i32 1313558304 }, %struct.LangTag { [4 x i8] c"nr\00\00", i32 1313096224 }, %struct.LangTag { [4 x i8] c"nsk\00", i32 1312903968 }, %struct.LangTag { [4 x i8] c"nsm\00", i32 0 }, %struct.LangTag { [4 x i8] c"nsu\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nto\00", i32 0 }, %struct.LangTag { [4 x i8] c"nue\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"nuu\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"nuz\00", i32 1312901152 }, %struct.LangTag { [4 x i8] c"nv\00\00", i32 1312904736 }, %struct.LangTag { [4 x i8] c"nv\00\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"nwe\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"ny\00\00", i32 1128810784 }, %struct.LangTag { [4 x i8] c"nyd\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"nyn\00", i32 1313557536 }, %struct.LangTag { [4 x i8] c"oc\00\00", i32 1329809696 }, %struct.LangTag { [4 x i8] c"oj\00\00", i32 1330266656 }, %struct.LangTag { [4 x i8] c"ojc\00", i32 1330266656 }, %struct.LangTag { [4 x i8] c"ojg\00", i32 1330266656 }, %struct.LangTag { [4 x i8] c"ojs\00", i32 1329812000 }, %struct.LangTag { [4 x i8] c"ojs\00", i32 1330266656 }, %struct.LangTag { [4 x i8] c"ojw\00", i32 1330266656 }, %struct.LangTag { [4 x i8] c"okd\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"oki\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"okm\00", i32 1263487008 }, %struct.LangTag { [4 x i8] c"okr\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"om\00\00", i32 1330794272 }, %struct.LangTag { [4 x i8] c"onx\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"oor\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"or\00\00", i32 1330792736 }, %struct.LangTag { [4 x i8] c"orc\00", i32 1330794272 }, %struct.LangTag { [4 x i8] c"orn\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"oro\00", i32 0 }, %struct.LangTag { [4 x i8] c"orr\00", i32 1229606688 }, %struct.LangTag { [4 x i8] c"ors\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"ory\00", i32 1330792736 }, %struct.LangTag { [4 x i8] c"os\00\00", i32 1330860832 }, %struct.LangTag { [4 x i8] c"otw\00", i32 1330266656 }, %struct.LangTag { [4 x i8] c"oua\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"pa\00\00", i32 1346457120 }, %struct.LangTag { [4 x i8] c"paa\00", i32 0 }, %struct.LangTag { [4 x i8] c"pal\00", i32 0 }, %struct.LangTag { [4 x i8] c"pap\00", i32 1346457648 }, %struct.LangTag { [4 x i8] c"pap\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pas\00", i32 0 }, %struct.LangTag { [4 x i8] c"pbt\00", i32 1346458400 }, %struct.LangTag { [4 x i8] c"pbu\00", i32 1346458400 }, %struct.LangTag { [4 x i8] c"pce\00", i32 1347176224 }, %struct.LangTag { [4 x i8] c"pck\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"pcm\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pdu\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"pea\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pel\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"pes\00", i32 1178685984 }, %struct.LangTag { [4 x i8] c"pey\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pga\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"pga\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pi\00\00", i32 1346456608 }, %struct.LangTag { [4 x i8] c"pih\00", i32 1346979872 }, %struct.LangTag { [4 x i8] c"pih\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pil\00", i32 0 }, %struct.LangTag { [4 x i8] c"pis\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pkh\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"pko\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"pl\00\00", i32 1347177248 }, %struct.LangTag { [4 x i8] c"plg\00", i32 0 }, %struct.LangTag { [4 x i8] c"plk\00", i32 0 }, %struct.LangTag { [4 x i8] c"pll\00", i32 1347176224 }, %struct.LangTag { [4 x i8] c"pln\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"plp\00", i32 1346457632 }, %struct.LangTag { [4 x i8] c"plt\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"pml\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"pmy\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"poc\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"poh\00", i32 1347373088 }, %struct.LangTag { [4 x i8] c"poh\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"pov\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"ppa\00", i32 1111574304 }, %struct.LangTag { [4 x i8] c"pre\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"prs\00", i32 1146243360 }, %struct.LangTag { [4 x i8] c"prs\00", i32 1178685984 }, %struct.LangTag { [4 x i8] c"ps\00\00", i32 1346458400 }, %struct.LangTag { [4 x i8] c"pse\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"pst\00", i32 1346458400 }, %struct.LangTag { [4 x i8] c"pt\00\00", i32 1347700512 }, %struct.LangTag { [4 x i8] c"pub\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"puz\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"pwo\00", i32 1347899168 }, %struct.LangTag { [4 x i8] c"pwo\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"pww\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"qu\00\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qub\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qub\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"quc\00", i32 1364542240 }, %struct.LangTag { [4 x i8] c"quc\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"qud\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qud\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"quf\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qug\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qug\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"quh\00", i32 1364543520 }, %struct.LangTag { [4 x i8] c"quh\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"quk\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qul\00", i32 1364543520 }, %struct.LangTag { [4 x i8] c"qul\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qum\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"qup\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qup\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qur\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qur\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qus\00", i32 1364543520 }, %struct.LangTag { [4 x i8] c"qus\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"quv\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"quw\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"quw\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qux\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qux\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"quy\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qva\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qva\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvc\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qve\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvh\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qvh\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvi\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qvi\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvj\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qvj\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvl\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qvl\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvm\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qvm\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvn\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qvn\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvo\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qvo\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvp\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qvp\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvs\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvw\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qvw\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qvz\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qvz\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qwa\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qwa\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qwc\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qwh\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qwh\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qws\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qws\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qwt\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"qxa\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qxa\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxc\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qxc\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxh\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qxh\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxl\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qxl\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxn\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qxn\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxo\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qxo\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxp\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxr\00", i32 1364609312 }, %struct.LangTag { [4 x i8] c"qxr\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxt\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qxt\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxu\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"qxw\00", i32 1364674592 }, %struct.LangTag { [4 x i8] c"qxw\00", i32 1364548128 }, %struct.LangTag { [4 x i8] c"rag\00", i32 1280657440 }, %struct.LangTag { [4 x i8] c"ral\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"rbb\00", i32 1347176224 }, %struct.LangTag { [4 x i8] c"rbl\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"rcf\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"rif\00", i32 1380533792 }, %struct.LangTag { [4 x i8] c"rif\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"rki\00", i32 1095912224 }, %struct.LangTag { [4 x i8] c"rm\00\00", i32 1380799264 }, %struct.LangTag { [4 x i8] c"rmc\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rmf\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rml\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rmn\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rmo\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rms\00", i32 0 }, %struct.LangTag { [4 x i8] c"rmw\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rmy\00", i32 1380800800 }, %struct.LangTag { [4 x i8] c"rmy\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rmz\00", i32 1095912224 }, %struct.LangTag { [4 x i8] c"rn\00\00", i32 1381322272 }, %struct.LangTag { [4 x i8] c"ro\00\00", i32 1380928800 }, %struct.LangTag { [4 x i8] c"rom\00", i32 1380931872 }, %struct.LangTag { [4 x i8] c"rop\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"rtc\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"ru\00\00", i32 1381323552 }, %struct.LangTag { [4 x i8] c"rue\00", i32 1381194016 }, %struct.LangTag { [4 x i8] c"rw\00\00", i32 1381318944 }, %struct.LangTag { [4 x i8] c"rwr\00", i32 1296127776 }, %struct.LangTag { [4 x i8] c"sa\00\00", i32 1396788768 }, %struct.LangTag { [4 x i8] c"sad\00", i32 0 }, %struct.LangTag { [4 x i8] c"sah\00", i32 1497451296 }, %struct.LangTag { [4 x i8] c"sam\00", i32 1346453792 }, %struct.LangTag { [4 x i8] c"say\00", i32 0 }, %struct.LangTag { [4 x i8] c"sc\00\00", i32 1397900320 }, %struct.LangTag { [4 x i8] c"scf\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"sch\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"sci\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"sck\00", i32 1396786208 }, %struct.LangTag { [4 x i8] c"scs\00", i32 1396921120 }, %struct.LangTag { [4 x i8] c"scs\00", i32 1397506336 }, %struct.LangTag { [4 x i8] c"scs\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"sd\00\00", i32 1397638176 }, %struct.LangTag { [4 x i8] c"sdc\00", i32 1397900320 }, %struct.LangTag { [4 x i8] c"sdh\00", i32 1263882784 }, %struct.LangTag { [4 x i8] c"sdn\00", i32 1397900320 }, %struct.LangTag { [4 x i8] c"sds\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"se\00\00", i32 1314082080 }, %struct.LangTag { [4 x i8] c"seh\00", i32 1397637408 }, %struct.LangTag { [4 x i8] c"sek\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"sez\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"sfm\00", i32 1213025824 }, %struct.LangTag { [4 x i8] c"sg\00\00", i32 1397182240 }, %struct.LangTag { [4 x i8] c"sgc\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"sgo\00", i32 0 }, %struct.LangTag { [4 x i8] c"sgw\00", i32 1128810272 }, %struct.LangTag { [4 x i8] c"shi\00", i32 1397246240 }, %struct.LangTag { [4 x i8] c"shi\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"shl\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"shu\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"shy\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"si\00\00", i32 1397639200 }, %struct.LangTag { [4 x i8] c"sib\00", i32 0 }, %struct.LangTag { [4 x i8] c"sig\00", i32 0 }, %struct.LangTag { [4 x i8] c"siz\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"sjd\00", i32 1263750432 }, %struct.LangTag { [4 x i8] c"sjo\00", i32 1397309984 }, %struct.LangTag { [4 x i8] c"sjs\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"sk\00\00", i32 1397446944 }, %struct.LangTag { [4 x i8] c"skg\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"skr\00", i32 1397902112 }, %struct.LangTag { [4 x i8] c"sks\00", i32 0 }, %struct.LangTag { [4 x i8] c"skw\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"sky\00", i32 0 }, %struct.LangTag { [4 x i8] c"sl\00\00", i32 1397511712 }, %struct.LangTag { [4 x i8] c"sla\00", i32 0 }, %struct.LangTag { [4 x i8] c"sm\00\00", i32 1397575456 }, %struct.LangTag { [4 x i8] c"sma\00", i32 1397968160 }, %struct.LangTag { [4 x i8] c"smj\00", i32 1280527648 }, %struct.LangTag { [4 x i8] c"sml\00", i32 0 }, %struct.LangTag { [4 x i8] c"smn\00", i32 1230196000 }, %struct.LangTag { [4 x i8] c"sms\00", i32 1397445408 }, %struct.LangTag { [4 x i8] c"smt\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"sn\00\00", i32 1397637424 }, %struct.LangTag { [4 x i8] c"snh\00", i32 0 }, %struct.LangTag { [4 x i8] c"so\00\00", i32 1397574688 }, %struct.LangTag { [4 x i8] c"sog\00", i32 0 }, %struct.LangTag { [4 x i8] c"spv\00", i32 1330792736 }, %struct.LangTag { [4 x i8] c"spy\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"sq\00\00", i32 1397836064 }, %struct.LangTag { [4 x i8] c"sr\00\00", i32 1397899808 }, %struct.LangTag { [4 x i8] c"srb\00", i32 0 }, %struct.LangTag { [4 x i8] c"src\00", i32 1397900320 }, %struct.LangTag { [4 x i8] c"srk\00", i32 0 }, %struct.LangTag { [4 x i8] c"srm\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"srn\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"sro\00", i32 1397900320 }, %struct.LangTag { [4 x i8] c"srs\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"ss\00\00", i32 1398233632 }, %struct.LangTag { [4 x i8] c"ssh\00", i32 1095909664 }, %struct.LangTag { [4 x i8] c"ssl\00", i32 0 }, %struct.LangTag { [4 x i8] c"ssm\00", i32 0 }, %struct.LangTag { [4 x i8] c"st\00\00", i32 1397707808 }, %struct.LangTag { [4 x i8] c"sta\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"stv\00", i32 1397311264 }, %struct.LangTag { [4 x i8] c"su\00\00", i32 1398099488 }, %struct.LangTag { [4 x i8] c"suq\00", i32 1398100512 }, %struct.LangTag { [4 x i8] c"sur\00", i32 0 }, %struct.LangTag { [4 x i8] c"sv\00\00", i32 1398162720 }, %struct.LangTag { [4 x i8] c"svc\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"sve\00", i32 0 }, %struct.LangTag { [4 x i8] c"sw\00\00", i32 1398229792 }, %struct.LangTag { [4 x i8] c"swb\00", i32 1129140768 }, %struct.LangTag { [4 x i8] c"swc\00", i32 1398229792 }, %struct.LangTag { [4 x i8] c"swh\00", i32 1398229792 }, %struct.LangTag { [4 x i8] c"swk\00", i32 0 }, %struct.LangTag { [4 x i8] c"swn\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"swv\00", i32 1296127776 }, %struct.LangTag { [4 x i8] c"syc\00", i32 1398362656 }, %struct.LangTag { [4 x i8] c"ta\00\00", i32 1413565728 }, %struct.LangTag { [4 x i8] c"taa\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"taj\00", i32 0 }, %struct.LangTag { [4 x i8] c"taq\00", i32 1414350880 }, %struct.LangTag { [4 x i8] c"taq\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"tas\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"tau\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"tcb\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"tce\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"tch\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"tcp\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"tcs\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"tcy\00", i32 1414876192 }, %struct.LangTag { [4 x i8] c"tcz\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"tdx\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"te\00\00", i32 1413827616 }, %struct.LangTag { [4 x i8] c"tec\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"tem\00", i32 1414352416 }, %struct.LangTag { [4 x i8] c"tez\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"tfn\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"tg\00\00", i32 1413564960 }, %struct.LangTag { [4 x i8] c"tgh\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"tgj\00", i32 1313428256 }, %struct.LangTag { [4 x i8] c"tgn\00", i32 0 }, %struct.LangTag { [4 x i8] c"tgr\00", i32 0 }, %struct.LangTag { [4 x i8] c"tgx\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"tgy\00", i32 0 }, %struct.LangTag { [4 x i8] c"th\00\00", i32 1414021408 }, %struct.LangTag { [4 x i8] c"tht\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"thv\00", i32 1414350880 }, %struct.LangTag { [4 x i8] c"thv\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"thz\00", i32 1414350880 }, %struct.LangTag { [4 x i8] c"thz\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"ti\00\00", i32 1413962016 }, %struct.LangTag { [4 x i8] c"tia\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"tig\00", i32 1413960224 }, %struct.LangTag { [4 x i8] c"tjo\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"tk\00\00", i32 1414221088 }, %struct.LangTag { [4 x i8] c"tkg\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"tkm\00", i32 0 }, %struct.LangTag { [4 x i8] c"tl\00\00", i32 1413958688 }, %struct.LangTag { [4 x i8] c"tmg\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"tmh\00", i32 1414350880 }, %struct.LangTag { [4 x i8] c"tmh\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"tmn\00", i32 0 }, %struct.LangTag { [4 x i8] c"tmw\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"tn\00\00", i32 1414414624 }, %struct.LangTag { [4 x i8] c"tna\00", i32 0 }, %struct.LangTag { [4 x i8] c"tne\00", i32 0 }, %struct.LangTag { [4 x i8] c"tnf\00", i32 1146243360 }, %struct.LangTag { [4 x i8] c"tnf\00", i32 1178685984 }, %struct.LangTag { [4 x i8] c"tng\00", i32 0 }, %struct.LangTag { [4 x i8] c"to\00\00", i32 1413959200 }, %struct.LangTag { [4 x i8] c"tod\00", i32 1414480944 }, %struct.LangTag { [4 x i8] c"toi\00", i32 1414416160 }, %struct.LangTag { [4 x i8] c"toj\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"tol\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"tor\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"tpi\00", i32 1414547744 }, %struct.LangTag { [4 x i8] c"tpi\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"tr\00\00", i32 1414679328 }, %struct.LangTag { [4 x i8] c"trf\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"trk\00", i32 0 }, %struct.LangTag { [4 x i8] c"tru\00", i32 1414873376 }, %struct.LangTag { [4 x i8] c"tru\00", i32 1398362656 }, %struct.LangTag { [4 x i8] c"ts\00\00", i32 1414743840 }, %struct.LangTag { [4 x i8] c"tsg\00", i32 0 }, %struct.LangTag { [4 x i8] c"tt\00\00", i32 1413567520 }, %struct.LangTag { [4 x i8] c"ttc\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"ttm\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"ttq\00", i32 1414350880 }, %struct.LangTag { [4 x i8] c"ttq\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"tua\00", i32 0 }, %struct.LangTag { [4 x i8] c"tul\00", i32 0 }, %struct.LangTag { [4 x i8] c"tuu\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"tuv\00", i32 0 }, %struct.LangTag { [4 x i8] c"tuy\00", i32 1262570528 }, %struct.LangTag { [4 x i8] c"tvy\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"tw\00\00", i32 1415006496 }, %struct.LangTag { [4 x i8] c"tw\00\00", i32 1095450912 }, %struct.LangTag { [4 x i8] c"txc\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"txy\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"ty\00\00", i32 1414026272 }, %struct.LangTag { [4 x i8] c"tyv\00", i32 1414878752 }, %struct.LangTag { [4 x i8] c"tzh\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"tzj\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"tzm\00", i32 1415204128 }, %struct.LangTag { [4 x i8] c"tzm\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"tzo\00", i32 1415204640 }, %struct.LangTag { [4 x i8] c"tzo\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"ubl\00", i32 1112099616 }, %struct.LangTag { [4 x i8] c"ug\00\00", i32 1431914272 }, %struct.LangTag { [4 x i8] c"uk\00\00", i32 1430999584 }, %struct.LangTag { [4 x i8] c"uki\00", i32 1263880480 }, %struct.LangTag { [4 x i8] c"uln\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"unr\00", i32 1297436192 }, %struct.LangTag { [4 x i8] c"ur\00\00", i32 1431454752 }, %struct.LangTag { [4 x i8] c"urk\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"usp\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"uz\00\00", i32 1431978528 }, %struct.LangTag { [4 x i8] c"uzn\00", i32 1431978528 }, %struct.LangTag { [4 x i8] c"uzs\00", i32 1431978528 }, %struct.LangTag { [4 x i8] c"vap\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"ve\00\00", i32 1447382560 }, %struct.LangTag { [4 x i8] c"vi\00\00", i32 1447646240 }, %struct.LangTag { [4 x i8] c"vic\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"vit\00", i32 0 }, %struct.LangTag { [4 x i8] c"vkk\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"vkp\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"vkt\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"vls\00", i32 1179403552 }, %struct.LangTag { [4 x i8] c"vmw\00", i32 1296124704 }, %struct.LangTag { [4 x i8] c"vo\00\00", i32 1448037408 }, %struct.LangTag { [4 x i8] c"wa\00\00", i32 1464618528 }, %struct.LangTag { [4 x i8] c"wag\00", i32 0 }, %struct.LangTag { [4 x i8] c"wbm\00", i32 1463885856 }, %struct.LangTag { [4 x i8] c"wbr\00", i32 1463895840 }, %struct.LangTag { [4 x i8] c"wbr\00", i32 1380010528 }, %struct.LangTag { [4 x i8] c"wea\00", i32 1263685152 }, %struct.LangTag { [4 x i8] c"wes\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"weu\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"wlc\00", i32 1129140768 }, %struct.LangTag { [4 x i8] c"wle\00", i32 1397311264 }, %struct.LangTag { [4 x i8] c"wlk\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"wni\00", i32 1129140768 }, %struct.LangTag { [4 x i8] c"wo\00\00", i32 1464616480 }, %struct.LangTag { [4 x i8] c"wry\00", i32 1296127776 }, %struct.LangTag { [4 x i8] c"wsg\00", i32 1196379680 }, %struct.LangTag { [4 x i8] c"wuu\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"xal\00", i32 1263291680 }, %struct.LangTag { [4 x i8] c"xal\00", i32 1414480928 }, %struct.LangTag { [4 x i8] c"xan\00", i32 1397050144 }, %struct.LangTag { [4 x i8] c"xbd\00", i32 0 }, %struct.LangTag { [4 x i8] c"xh\00\00", i32 1481134880 }, %struct.LangTag { [4 x i8] c"xmg\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"xmm\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"xmm\00", i32 1129336864 }, %struct.LangTag { [4 x i8] c"xmv\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"xmw\00", i32 1296844576 }, %struct.LangTag { [4 x i8] c"xnj\00", i32 1398297632 }, %struct.LangTag { [4 x i8] c"xnq\00", i32 1398297632 }, %struct.LangTag { [4 x i8] c"xnr\00", i32 1145524768 }, %struct.LangTag { [4 x i8] c"xpe\00", i32 1481655584 }, %struct.LangTag { [4 x i8] c"xpe\00", i32 1263553568 }, %struct.LangTag { [4 x i8] c"xsl\00", i32 1397967904 }, %struct.LangTag { [4 x i8] c"xsl\00", i32 1397506336 }, %struct.LangTag { [4 x i8] c"xsl\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"xst\00", i32 1397311264 }, %struct.LangTag { [4 x i8] c"xup\00", i32 1096042528 }, %struct.LangTag { [4 x i8] c"xwo\00", i32 1414480928 }, %struct.LangTag { [4 x i8] c"yaj\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"yak\00", i32 0 }, %struct.LangTag { [4 x i8] c"yba\00", i32 0 }, %struct.LangTag { [4 x i8] c"ybb\00", i32 1112362016 }, %struct.LangTag { [4 x i8] c"ybd\00", i32 1095912224 }, %struct.LangTag { [4 x i8] c"ydd\00", i32 1246316832 }, %struct.LangTag { [4 x i8] c"yi\00\00", i32 1246316832 }, %struct.LangTag { [4 x i8] c"yih\00", i32 1246316832 }, %struct.LangTag { [4 x i8] c"yim\00", i32 0 }, %struct.LangTag { [4 x i8] c"yo\00\00", i32 1497514272 }, %struct.LangTag { [4 x i8] c"yos\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"yua\00", i32 1297698336 }, %struct.LangTag { [4 x i8] c"yue\00", i32 1514686496 }, %struct.LangTag { [4 x i8] c"za\00\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zch\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zdj\00", i32 1129140768 }, %struct.LangTag { [4 x i8] c"zeh\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zen\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"zgb\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zgh\00", i32 1514620960 }, %struct.LangTag { [4 x i8] c"zgh\00", i32 1111642656 }, %struct.LangTag { [4 x i8] c"zgm\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zgn\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zh\00\00", i32 1514689312 }, %struct.LangTag { [4 x i8] c"zhd\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zhn\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zlj\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zlm\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"zln\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zlq\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zmi\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"zmz\00", i32 1111573552 }, %struct.LangTag { [4 x i8] c"znd\00", i32 0 }, %struct.LangTag { [4 x i8] c"zne\00", i32 1515078688 }, %struct.LangTag { [4 x i8] c"zom\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"zqe\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zsm\00", i32 1296849184 }, %struct.LangTag { [4 x i8] c"zu\00\00", i32 1515539488 }, %struct.LangTag { [4 x i8] c"zum\00", i32 1280459552 }, %struct.LangTag { [4 x i8] c"zyb\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zyg\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zyj\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zyn\00", i32 1514684704 }, %struct.LangTag { [4 x i8] c"zyp\00", i32 1363758624 }, %struct.LangTag { [4 x i8] c"zzj\00", i32 1514684704 }], align 16
@.str.2 = private unnamed_addr constant [12 x i8] c"x-hbot-%08x\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"-fonnapa\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"-polyton\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"-arevmda\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"-provenc\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"-fonipa\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"-geok\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"-syre\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"-syrj\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"-syrn\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"rt-lojban\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"do-hant-hk\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"do-hant-mo\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"jy-hant-hk\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"jy-hant-mo\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"mn-hant-hk\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"mn-hant-mo\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"np-hant-hk\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"np-hant-mo\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"px-hant-hk\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"px-hant-mo\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"sp-hant-hk\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"sp-hant-mo\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"zh-hant-hk\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"zh-hant-mo\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"zo-hant-hk\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"zo-hant-mo\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"do-hans\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"do-hant\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"jy-hans\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"jy-hant\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"mn-hans\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"mn-hant\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"np-hans\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"np-hant\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"px-hans\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"px-hant\00", align 1
@.str.46 = private unnamed_addr constant [8 x i8] c"sp-hans\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"sp-hant\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"zh-hans\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"zh-hant\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"zo-hans\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"zo-hant\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"do-\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"-hk\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"-mo\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"-tw\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"jy-\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"mn-\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"np-\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"px-\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"sp-\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"zh-\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"zo-\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"an-hant-hk\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c"an-hant-mo\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"an-hans\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"an-hant\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"a-latg\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"an-\00", align 1
@.str.79 = private unnamed_addr constant [11 x i8] c"ak-hant-hk\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"ak-hant-mo\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"sn-hant-hk\00", align 1
@.str.83 = private unnamed_addr constant [11 x i8] c"sn-hant-mo\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"ak-hans\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"ak-hant\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"sn-hans\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"sn-hant\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"ak-\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"sn-\00", align 1
@.str.93 = private unnamed_addr constant [8 x i8] c"-navajo\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"-hak\00", align 1
@.str.96 = private unnamed_addr constant [5 x i8] c"-lux\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"o-bok\00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"o-nyn\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c"o-\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"-md\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"uu-hant-hk\00", align 1
@.str.107 = private unnamed_addr constant [11 x i8] c"uu-hant-mo\00", align 1
@.str.109 = private unnamed_addr constant [8 x i8] c"uu-hans\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"uu-hant\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"uu-\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"ue-hans\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c"h-hant-hk\00", align 1
@.str.115 = private unnamed_addr constant [10 x i8] c"h-hant-mo\00", align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"h-min-nan\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"h-hans\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"h-hant\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"h-min\00", align 1
@.str.121 = private unnamed_addr constant [3 x i8] c"h-\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"alt\00", align 1
@.str.124 = private unnamed_addr constant [12 x i8] c"und-fonnapa\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.126 = private unnamed_addr constant [4 x i8] c"rki\00", align 1
@.str.127 = private unnamed_addr constant [4 x i8] c"ath\00", align 1
@.str.128 = private unnamed_addr constant [4 x i8] c"ber\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c"bik\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"btk\00", align 1
@.str.131 = private unnamed_addr constant [4 x i8] c"crp\00", align 1
@.str.132 = private unnamed_addr constant [4 x i8] c"crx\00", align 1
@.str.133 = private unnamed_addr constant [4 x i8] c"doi\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"din\00", align 1
@.str.135 = private unnamed_addr constant [4 x i8] c"prs\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"dz\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"et\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"fa\00", align 1
@.str.139 = private unnamed_addr constant [4 x i8] c"gon\00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c"hmn\00", align 1
@.str.141 = private unnamed_addr constant [4 x i8] c"hnd\00", align 1
@.str.142 = private unnamed_addr constant [4 x i8] c"hyw\00", align 1
@.str.143 = private unnamed_addr constant [4 x i8] c"iba\00", align 1
@.str.144 = private unnamed_addr constant [4 x i8] c"ijo\00", align 1
@.str.145 = private unnamed_addr constant [3 x i8] c"iu\00", align 1
@.str.146 = private unnamed_addr constant [3 x i8] c"ik\00", align 1
@.str.147 = private unnamed_addr constant [11 x i8] c"und-fonipa\00", align 1
@.str.148 = private unnamed_addr constant [8 x i8] c"ga-Latg\00", align 1
@.str.149 = private unnamed_addr constant [3 x i8] c"yi\00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c"kln\00", align 1
@.str.151 = private unnamed_addr constant [9 x i8] c"und-Geok\00", align 1
@.str.152 = private unnamed_addr constant [3 x i8] c"kr\00", align 1
@.str.153 = private unnamed_addr constant [4 x i8] c"okm\00", align 1
@.str.154 = private unnamed_addr constant [4 x i8] c"kok\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"kv\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"kpe\00", align 1
@.str.157 = private unnamed_addr constant [4 x i8] c"kar\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"uki\00", align 1
@.str.159 = private unnamed_addr constant [3 x i8] c"ku\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"luy\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"lv\00", align 1
@.str.162 = private unnamed_addr constant [4 x i8] c"mwr\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"mg\00", align 1
@.str.164 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.165 = private unnamed_addr constant [3 x i8] c"mn\00", align 1
@.str.166 = private unnamed_addr constant [4 x i8] c"man\00", align 1
@.str.167 = private unnamed_addr constant [6 x i8] c"ro-MD\00", align 1
@.str.168 = private unnamed_addr constant [4 x i8] c"myn\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"nah\00", align 1
@.str.170 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c"njz\00", align 1
@.str.172 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.173 = private unnamed_addr constant [3 x i8] c"oj\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"om\00", align 1
@.str.175 = private unnamed_addr constant [3 x i8] c"ps\00", align 1
@.str.176 = private unnamed_addr constant [11 x i8] c"el-polyton\00", align 1
@.str.177 = private unnamed_addr constant [4 x i8] c"pro\00", align 1
@.str.178 = private unnamed_addr constant [4 x i8] c"quh\00", align 1
@.str.179 = private unnamed_addr constant [3 x i8] c"qu\00", align 1
@.str.180 = private unnamed_addr constant [4 x i8] c"qvi\00", align 1
@.str.181 = private unnamed_addr constant [4 x i8] c"qwh\00", align 1
@.str.182 = private unnamed_addr constant [4 x i8] c"raj\00", align 1
@.str.183 = private unnamed_addr constant [4 x i8] c"rom\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"sq\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"sr\00", align 1
@.str.186 = private unnamed_addr constant [4 x i8] c"xnj\00", align 1
@.str.187 = private unnamed_addr constant [4 x i8] c"syr\00", align 1
@.str.188 = private unnamed_addr constant [9 x i8] c"und-Syre\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"und-Syrj\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"und-Syrn\00", align 1
@.str.191 = private unnamed_addr constant [4 x i8] c"tmh\00", align 1
@.str.192 = private unnamed_addr constant [4 x i8] c"xwo\00", align 1
@.str.193 = private unnamed_addr constant [6 x i8] c"zh-HK\00", align 1
@.str.194 = private unnamed_addr constant [8 x i8] c"zh-Hans\00", align 1
@.str.195 = private unnamed_addr constant [8 x i8] c"zh-Hant\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"zh-MO\00", align 1
@.str.197 = private unnamed_addr constant [4 x i8] c"zza\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_ot_tags_from_script(i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca [2 x i32], align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 2, i32* %4, align 4
  %7 = bitcast [2 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 0
  store i32 -1431655766, i32* %8, align 4
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 1
  store i32 -1431655766, i32* %9, align 4
  call void @hb_ot_tags_from_script_and_language(i32 %0, %struct.hb_language_impl_t* null, i32* nonnull %4, i32* nonnull %8, i32* null, i32* null)
  %10 = load i32, i32* %4, align 4
  %11 = icmp eq i32 %10, 0
  %12 = load i32, i32* %8, align 4
  %13 = select i1 %11, i32 1145457748, i32 %12
  store i32 %13, i32* %1, align 4
  %14 = icmp ugt i32 %10, 1
  %15 = load i32, i32* %9, align 4
  %16 = select i1 %14, i32 %15, i32 1145457748
  store i32 %16, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_ot_tags_from_script_and_language(i32, %struct.hb_language_impl_t*, i32*, i32*, i32*, i32*) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = icmp eq %struct.hb_language_impl_t* %1, null
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = icmp ne i32* %4, null
  %12 = icmp ne i32* %5, null
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %501

14:                                               ; preds = %10
  %15 = load i32, i32* %4, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %501, label %17

17:                                               ; preds = %14
  store i32 0, i32* %4, align 4
  br label %501

18:                                               ; preds = %6
  %19 = tail call i8* @hb_language_to_string(%struct.hb_language_impl_t* nonnull %1) #8
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 120
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 45
  %25 = and i1 %21, %24
  br i1 %25, label %57, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds i8, i8* %19, i64 1
  %28 = icmp eq i8 %23, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %26, %49
  %30 = phi i8 [ %50, %49 ], [ %20, %26 ]
  %31 = phi i8 [ %47, %49 ], [ %23, %26 ]
  %32 = phi i8* [ %46, %49 ], [ %27, %26 ]
  %33 = phi i8* [ %45, %49 ], [ null, %26 ]
  %34 = phi i8* [ %32, %49 ], [ %19, %26 ]
  %35 = icmp eq i8 %30, 45
  br i1 %35, label %36, label %44

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %34, i64 2
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 45
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = icmp eq i8 %31, 120
  %42 = icmp eq i8* %33, null
  %43 = select i1 %42, i8* %34, i8* %33
  br i1 %41, label %51, label %44

44:                                               ; preds = %40, %29, %36
  %45 = phi i8* [ %33, %36 ], [ %33, %29 ], [ %43, %40 ]
  %46 = getelementptr inbounds i8, i8* %32, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %32, align 1
  br label %29

51:                                               ; preds = %44, %40, %26
  %52 = phi i8* [ %27, %26 ], [ %32, %40 ], [ %46, %44 ]
  %53 = phi i8* [ null, %26 ], [ %43, %40 ], [ %45, %44 ]
  %54 = phi i8* [ null, %26 ], [ %32, %40 ], [ null, %44 ]
  %55 = icmp eq i8* %53, null
  %56 = select i1 %55, i8* %52, i8* %53
  br label %57

57:                                               ; preds = %18, %51
  %58 = phi i8* [ %56, %51 ], [ null, %18 ]
  %59 = phi i8* [ %54, %51 ], [ %19, %18 ]
  %60 = bitcast i32* %8 to [4 x i8]*
  %61 = icmp ne i8* %59, null
  %62 = icmp ne i32* %2, null
  %63 = and i1 %62, %61
  %64 = icmp ne i32* %3, null
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %275

66:                                               ; preds = %57
  %67 = load i32, i32* %2, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %275, label %69

69:                                               ; preds = %66
  %70 = tail call i8* @strstr(i8* nonnull %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #9
  %71 = icmp eq i8* %70, null
  br i1 %71, label %275, label %72

72:                                               ; preds = %69
  %73 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #8
  %74 = getelementptr inbounds [4 x i8], [4 x i8]* %60, i64 0, i64 1
  %75 = getelementptr inbounds [4 x i8], [4 x i8]* %60, i64 0, i64 2
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* %60, i64 0, i64 3
  store i32 -1431655766, i32* %8, align 4
  %77 = getelementptr inbounds i8, i8* %70, i64 5
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 45
  br i1 %79, label %87, label %80

80:                                               ; preds = %72
  %81 = and i8 %78, -33
  %82 = add i8 %81, -65
  %83 = icmp ult i8 %82, 26
  %84 = add i8 %78, -48
  %85 = icmp ult i8 %84, 10
  %86 = or i1 %85, %83
  br i1 %86, label %106, label %153

87:                                               ; preds = %72
  %88 = getelementptr inbounds i8, i8* %70, i64 6
  %89 = load i8, i8* %88, align 1
  %90 = add i8 %89, -48
  %91 = icmp ult i8 %90, 10
  br i1 %91, label %99, label %92

92:                                               ; preds = %87
  switch i8 %89, label %153 [
    i8 102, label %93
    i8 101, label %93
    i8 100, label %93
    i8 99, label %93
    i8 98, label %93
    i8 97, label %93
    i8 70, label %93
    i8 69, label %93
    i8 68, label %93
    i8 67, label %93
    i8 66, label %93
    i8 65, label %93
  ]

93:                                               ; preds = %92, %92, %92, %92, %92, %92, %92, %92, %92, %92, %92, %92
  %94 = add nsw i8 %89, -65
  %95 = icmp ult i8 %94, 26
  %96 = add nuw i8 %89, 32
  %97 = select i1 %95, i8 %96, i8 %89
  %98 = add i8 %97, -87
  br label %99

99:                                               ; preds = %93, %87
  %100 = phi i8 [ %98, %93 ], [ %90, %87 ]
  %101 = shl i8 %100, 4
  store i8 %101, i8* %73, align 4
  %102 = getelementptr inbounds i8, i8* %70, i64 7
  %103 = load i8, i8* %102, align 1
  %104 = add i8 %103, -48
  %105 = icmp ult i8 %104, 10
  br i1 %105, label %162, label %155

106:                                              ; preds = %80
  %107 = add i8 %78, -65
  %108 = icmp ult i8 %107, 26
  %109 = add i8 %78, 32
  %110 = select i1 %108, i8 %109, i8 %78
  store i8 %110, i8* %73, align 4
  %111 = getelementptr inbounds i8, i8* %70, i64 6
  %112 = load i8, i8* %111, align 1
  %113 = and i8 %112, -33
  %114 = add i8 %113, -65
  %115 = icmp ult i8 %114, 26
  %116 = add i8 %112, -48
  %117 = icmp ult i8 %116, 10
  %118 = or i1 %117, %115
  br i1 %118, label %249, label %124

119:                                              ; preds = %262
  %120 = add i8 %268, -65
  %121 = icmp ult i8 %120, 26
  %122 = add i8 %268, 32
  %123 = select i1 %121, i8 %122, i8 %268
  store i8 %123, i8* %76, align 1
  br label %134

124:                                              ; preds = %262, %249, %106
  %125 = phi i32 [ 1, %106 ], [ 2, %249 ], [ 3, %262 ]
  %126 = zext i32 %125 to i64
  %127 = getelementptr [4 x i8], [4 x i8]* %60, i64 0, i64 %126
  %128 = sub nuw nsw i32 4, %125
  %129 = zext i32 %128 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %127, i8 32, i64 %129, i1 false) #8
  %130 = load i8, i8* %73, align 4
  %131 = load i8, i8* %74, align 1
  %132 = load i8, i8* %75, align 2
  %133 = load i8, i8* %76, align 1
  br label %134

134:                                              ; preds = %246, %124, %119
  %135 = phi i8 [ %133, %124 ], [ %123, %119 ], [ %248, %246 ]
  %136 = phi i8 [ %132, %124 ], [ %266, %119 ], [ %220, %246 ]
  %137 = phi i8 [ %131, %124 ], [ %253, %119 ], [ %192, %246 ]
  %138 = phi i8 [ %130, %124 ], [ %110, %119 ], [ %164, %246 ]
  %139 = zext i8 %138 to i32
  %140 = shl nuw i32 %139, 24
  %141 = zext i8 %137 to i32
  %142 = shl nuw nsw i32 %141, 16
  %143 = zext i8 %136 to i32
  %144 = shl nuw nsw i32 %143, 8
  %145 = zext i8 %135 to i32
  %146 = or i32 %144, %145
  %147 = or i32 %146, %142
  %148 = or i32 %147, %140
  %149 = and i32 %148, -538976289
  %150 = icmp eq i32 %149, 1145457748
  %151 = xor i32 %148, 538976288
  %152 = select i1 %150, i32 %151, i32 %148
  store i32 %152, i32* %3, align 4
  store i32 1, i32* %2, align 4
  br label %153

153:                                              ; preds = %239, %225, %211, %197, %183, %169, %155, %134, %92, %80
  %154 = phi i1 [ true, %134 ], [ false, %80 ], [ false, %239 ], [ false, %225 ], [ false, %211 ], [ false, %197 ], [ false, %183 ], [ false, %169 ], [ false, %155 ], [ false, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #8
  br label %275

155:                                              ; preds = %99
  switch i8 %103, label %153 [
    i8 102, label %156
    i8 101, label %156
    i8 100, label %156
    i8 99, label %156
    i8 98, label %156
    i8 97, label %156
    i8 70, label %156
    i8 69, label %156
    i8 68, label %156
    i8 67, label %156
    i8 66, label %156
    i8 65, label %156
  ]

156:                                              ; preds = %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155
  %157 = add nsw i8 %103, -65
  %158 = icmp ult i8 %157, 26
  %159 = add nuw i8 %103, 32
  %160 = select i1 %158, i8 %159, i8 %103
  %161 = add i8 %160, -87
  br label %162

162:                                              ; preds = %156, %99
  %163 = phi i8 [ %161, %156 ], [ %104, %99 ]
  %164 = add i8 %163, %101
  store i8 %164, i8* %73, align 4
  %165 = getelementptr inbounds i8, i8* %70, i64 8
  %166 = load i8, i8* %165, align 1
  %167 = add i8 %166, -48
  %168 = icmp ult i8 %167, 10
  br i1 %168, label %176, label %169

169:                                              ; preds = %162
  switch i8 %166, label %153 [
    i8 102, label %170
    i8 101, label %170
    i8 100, label %170
    i8 99, label %170
    i8 98, label %170
    i8 97, label %170
    i8 70, label %170
    i8 69, label %170
    i8 68, label %170
    i8 67, label %170
    i8 66, label %170
    i8 65, label %170
  ]

170:                                              ; preds = %169, %169, %169, %169, %169, %169, %169, %169, %169, %169, %169, %169
  %171 = add nsw i8 %166, -65
  %172 = icmp ult i8 %171, 26
  %173 = add nuw i8 %166, 32
  %174 = select i1 %172, i8 %173, i8 %166
  %175 = add i8 %174, -87
  br label %176

176:                                              ; preds = %170, %162
  %177 = phi i8 [ %175, %170 ], [ %167, %162 ]
  %178 = shl i8 %177, 4
  store i8 %178, i8* %74, align 1
  %179 = getelementptr inbounds i8, i8* %70, i64 9
  %180 = load i8, i8* %179, align 1
  %181 = add i8 %180, -48
  %182 = icmp ult i8 %181, 10
  br i1 %182, label %190, label %183

183:                                              ; preds = %176
  switch i8 %180, label %153 [
    i8 102, label %184
    i8 101, label %184
    i8 100, label %184
    i8 99, label %184
    i8 98, label %184
    i8 97, label %184
    i8 70, label %184
    i8 69, label %184
    i8 68, label %184
    i8 67, label %184
    i8 66, label %184
    i8 65, label %184
  ]

184:                                              ; preds = %183, %183, %183, %183, %183, %183, %183, %183, %183, %183, %183, %183
  %185 = add nsw i8 %180, -65
  %186 = icmp ult i8 %185, 26
  %187 = add nuw i8 %180, 32
  %188 = select i1 %186, i8 %187, i8 %180
  %189 = add i8 %188, -87
  br label %190

190:                                              ; preds = %184, %176
  %191 = phi i8 [ %189, %184 ], [ %181, %176 ]
  %192 = add i8 %191, %178
  store i8 %192, i8* %74, align 1
  %193 = getelementptr inbounds i8, i8* %70, i64 10
  %194 = load i8, i8* %193, align 1
  %195 = add i8 %194, -48
  %196 = icmp ult i8 %195, 10
  br i1 %196, label %204, label %197

197:                                              ; preds = %190
  switch i8 %194, label %153 [
    i8 102, label %198
    i8 101, label %198
    i8 100, label %198
    i8 99, label %198
    i8 98, label %198
    i8 97, label %198
    i8 70, label %198
    i8 69, label %198
    i8 68, label %198
    i8 67, label %198
    i8 66, label %198
    i8 65, label %198
  ]

198:                                              ; preds = %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197
  %199 = add nsw i8 %194, -65
  %200 = icmp ult i8 %199, 26
  %201 = add nuw i8 %194, 32
  %202 = select i1 %200, i8 %201, i8 %194
  %203 = add i8 %202, -87
  br label %204

204:                                              ; preds = %198, %190
  %205 = phi i8 [ %203, %198 ], [ %195, %190 ]
  %206 = shl i8 %205, 4
  store i8 %206, i8* %75, align 2
  %207 = getelementptr inbounds i8, i8* %70, i64 11
  %208 = load i8, i8* %207, align 1
  %209 = add i8 %208, -48
  %210 = icmp ult i8 %209, 10
  br i1 %210, label %218, label %211

211:                                              ; preds = %204
  switch i8 %208, label %153 [
    i8 102, label %212
    i8 101, label %212
    i8 100, label %212
    i8 99, label %212
    i8 98, label %212
    i8 97, label %212
    i8 70, label %212
    i8 69, label %212
    i8 68, label %212
    i8 67, label %212
    i8 66, label %212
    i8 65, label %212
  ]

212:                                              ; preds = %211, %211, %211, %211, %211, %211, %211, %211, %211, %211, %211, %211
  %213 = add nsw i8 %208, -65
  %214 = icmp ult i8 %213, 26
  %215 = add nuw i8 %208, 32
  %216 = select i1 %214, i8 %215, i8 %208
  %217 = add i8 %216, -87
  br label %218

218:                                              ; preds = %212, %204
  %219 = phi i8 [ %217, %212 ], [ %209, %204 ]
  %220 = add i8 %219, %206
  store i8 %220, i8* %75, align 2
  %221 = getelementptr inbounds i8, i8* %70, i64 12
  %222 = load i8, i8* %221, align 1
  %223 = add i8 %222, -48
  %224 = icmp ult i8 %223, 10
  br i1 %224, label %232, label %225

225:                                              ; preds = %218
  switch i8 %222, label %153 [
    i8 102, label %226
    i8 101, label %226
    i8 100, label %226
    i8 99, label %226
    i8 98, label %226
    i8 97, label %226
    i8 70, label %226
    i8 69, label %226
    i8 68, label %226
    i8 67, label %226
    i8 66, label %226
    i8 65, label %226
  ]

226:                                              ; preds = %225, %225, %225, %225, %225, %225, %225, %225, %225, %225, %225, %225
  %227 = add nsw i8 %222, -65
  %228 = icmp ult i8 %227, 26
  %229 = add nuw i8 %222, 32
  %230 = select i1 %228, i8 %229, i8 %222
  %231 = add i8 %230, -87
  br label %232

232:                                              ; preds = %226, %218
  %233 = phi i8 [ %231, %226 ], [ %223, %218 ]
  %234 = shl i8 %233, 4
  store i8 %234, i8* %76, align 1
  %235 = getelementptr inbounds i8, i8* %70, i64 13
  %236 = load i8, i8* %235, align 1
  %237 = add i8 %236, -48
  %238 = icmp ult i8 %237, 10
  br i1 %238, label %246, label %239

239:                                              ; preds = %232
  switch i8 %236, label %153 [
    i8 102, label %240
    i8 101, label %240
    i8 100, label %240
    i8 99, label %240
    i8 98, label %240
    i8 97, label %240
    i8 70, label %240
    i8 69, label %240
    i8 68, label %240
    i8 67, label %240
    i8 66, label %240
    i8 65, label %240
  ]

240:                                              ; preds = %239, %239, %239, %239, %239, %239, %239, %239, %239, %239, %239, %239
  %241 = add nsw i8 %236, -65
  %242 = icmp ult i8 %241, 26
  %243 = add nuw i8 %236, 32
  %244 = select i1 %242, i8 %243, i8 %236
  %245 = add i8 %244, -87
  br label %246

246:                                              ; preds = %240, %232
  %247 = phi i8 [ %245, %240 ], [ %237, %232 ]
  %248 = add i8 %247, %234
  store i8 %248, i8* %76, align 1
  br label %134

249:                                              ; preds = %106
  %250 = add i8 %112, -65
  %251 = icmp ult i8 %250, 26
  %252 = add i8 %112, 32
  %253 = select i1 %251, i8 %252, i8 %112
  store i8 %253, i8* %74, align 1
  %254 = getelementptr inbounds i8, i8* %70, i64 7
  %255 = load i8, i8* %254, align 1
  %256 = and i8 %255, -33
  %257 = add i8 %256, -65
  %258 = icmp ult i8 %257, 26
  %259 = add i8 %255, -48
  %260 = icmp ult i8 %259, 10
  %261 = or i1 %260, %258
  br i1 %261, label %262, label %124

262:                                              ; preds = %249
  %263 = add i8 %255, -65
  %264 = icmp ult i8 %263, 26
  %265 = add i8 %255, 32
  %266 = select i1 %264, i8 %265, i8 %255
  store i8 %266, i8* %75, align 2
  %267 = getelementptr inbounds i8, i8* %70, i64 8
  %268 = load i8, i8* %267, align 1
  %269 = and i8 %268, -33
  %270 = add i8 %269, -65
  %271 = icmp ult i8 %270, 26
  %272 = add i8 %268, -48
  %273 = icmp ult i8 %272, 10
  %274 = or i1 %273, %271
  br i1 %274, label %119, label %124

275:                                              ; preds = %57, %66, %69, %153
  %276 = phi i1 [ false, %66 ], [ false, %57 ], [ %154, %153 ], [ false, %69 ]
  %277 = xor i1 %276, true
  %278 = bitcast i32* %7 to [4 x i8]*
  %279 = icmp ne i32* %4, null
  %280 = and i1 %279, %61
  %281 = icmp ne i32* %5, null
  %282 = and i1 %281, %280
  br i1 %282, label %283, label %492

283:                                              ; preds = %275
  %284 = load i32, i32* %4, align 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %492, label %286

286:                                              ; preds = %283
  %287 = tail call i8* @strstr(i8* nonnull %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #9
  %288 = icmp eq i8* %287, null
  br i1 %288, label %492, label %289

289:                                              ; preds = %286
  %290 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %290) #8
  %291 = getelementptr inbounds [4 x i8], [4 x i8]* %278, i64 0, i64 1
  %292 = getelementptr inbounds [4 x i8], [4 x i8]* %278, i64 0, i64 2
  %293 = getelementptr inbounds [4 x i8], [4 x i8]* %278, i64 0, i64 3
  store i32 -1431655766, i32* %7, align 4
  %294 = getelementptr inbounds i8, i8* %287, i64 5
  %295 = load i8, i8* %294, align 1
  %296 = icmp eq i8 %295, 45
  br i1 %296, label %304, label %297

297:                                              ; preds = %289
  %298 = and i8 %295, -33
  %299 = add i8 %298, -65
  %300 = icmp ult i8 %299, 26
  %301 = add i8 %295, -48
  %302 = icmp ult i8 %301, 10
  %303 = or i1 %302, %300
  br i1 %303, label %323, label %370

304:                                              ; preds = %289
  %305 = getelementptr inbounds i8, i8* %287, i64 6
  %306 = load i8, i8* %305, align 1
  %307 = add i8 %306, -48
  %308 = icmp ult i8 %307, 10
  br i1 %308, label %316, label %309

309:                                              ; preds = %304
  switch i8 %306, label %370 [
    i8 102, label %310
    i8 101, label %310
    i8 100, label %310
    i8 99, label %310
    i8 98, label %310
    i8 97, label %310
    i8 70, label %310
    i8 69, label %310
    i8 68, label %310
    i8 67, label %310
    i8 66, label %310
    i8 65, label %310
  ]

310:                                              ; preds = %309, %309, %309, %309, %309, %309, %309, %309, %309, %309, %309, %309
  %311 = add nsw i8 %306, -65
  %312 = icmp ult i8 %311, 26
  %313 = add nuw i8 %306, 32
  %314 = select i1 %312, i8 %313, i8 %306
  %315 = add i8 %314, -87
  br label %316

316:                                              ; preds = %310, %304
  %317 = phi i8 [ %315, %310 ], [ %307, %304 ]
  %318 = shl i8 %317, 4
  store i8 %318, i8* %290, align 4
  %319 = getelementptr inbounds i8, i8* %287, i64 7
  %320 = load i8, i8* %319, align 1
  %321 = add i8 %320, -48
  %322 = icmp ult i8 %321, 10
  br i1 %322, label %379, label %372

323:                                              ; preds = %297
  %324 = add i8 %295, -97
  %325 = icmp ult i8 %324, 26
  %326 = add i8 %295, -32
  %327 = select i1 %325, i8 %326, i8 %295
  store i8 %327, i8* %290, align 4
  %328 = getelementptr inbounds i8, i8* %287, i64 6
  %329 = load i8, i8* %328, align 1
  %330 = and i8 %329, -33
  %331 = add i8 %330, -65
  %332 = icmp ult i8 %331, 26
  %333 = add i8 %329, -48
  %334 = icmp ult i8 %333, 10
  %335 = or i1 %334, %332
  br i1 %335, label %466, label %341

336:                                              ; preds = %479
  %337 = add i8 %485, -97
  %338 = icmp ult i8 %337, 26
  %339 = add i8 %485, -32
  %340 = select i1 %338, i8 %339, i8 %485
  store i8 %340, i8* %293, align 1
  br label %351

341:                                              ; preds = %479, %466, %323
  %342 = phi i32 [ 1, %323 ], [ 2, %466 ], [ 3, %479 ]
  %343 = zext i32 %342 to i64
  %344 = getelementptr [4 x i8], [4 x i8]* %278, i64 0, i64 %343
  %345 = sub nuw nsw i32 4, %342
  %346 = zext i32 %345 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %344, i8 32, i64 %346, i1 false) #8
  %347 = load i8, i8* %290, align 4
  %348 = load i8, i8* %291, align 1
  %349 = load i8, i8* %292, align 2
  %350 = load i8, i8* %293, align 1
  br label %351

351:                                              ; preds = %463, %341, %336
  %352 = phi i8 [ %350, %341 ], [ %340, %336 ], [ %465, %463 ]
  %353 = phi i8 [ %349, %341 ], [ %483, %336 ], [ %437, %463 ]
  %354 = phi i8 [ %348, %341 ], [ %470, %336 ], [ %409, %463 ]
  %355 = phi i8 [ %347, %341 ], [ %327, %336 ], [ %381, %463 ]
  %356 = zext i8 %355 to i32
  %357 = shl nuw i32 %356, 24
  %358 = zext i8 %354 to i32
  %359 = shl nuw nsw i32 %358, 16
  %360 = zext i8 %353 to i32
  %361 = shl nuw nsw i32 %360, 8
  %362 = zext i8 %352 to i32
  %363 = or i32 %361, %362
  %364 = or i32 %363, %359
  %365 = or i32 %364, %357
  %366 = and i32 %365, -538976289
  %367 = icmp eq i32 %366, 1145457748
  %368 = xor i32 %365, 538976288
  %369 = select i1 %367, i32 %368, i32 %365
  store i32 %369, i32* %5, align 4
  store i32 1, i32* %4, align 4
  br label %370

370:                                              ; preds = %456, %442, %428, %414, %400, %386, %372, %351, %309, %297
  %371 = phi i1 [ true, %351 ], [ false, %297 ], [ false, %456 ], [ false, %442 ], [ false, %428 ], [ false, %414 ], [ false, %400 ], [ false, %386 ], [ false, %372 ], [ false, %309 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %290) #8
  br label %492

372:                                              ; preds = %316
  switch i8 %320, label %370 [
    i8 102, label %373
    i8 101, label %373
    i8 100, label %373
    i8 99, label %373
    i8 98, label %373
    i8 97, label %373
    i8 70, label %373
    i8 69, label %373
    i8 68, label %373
    i8 67, label %373
    i8 66, label %373
    i8 65, label %373
  ]

373:                                              ; preds = %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372
  %374 = add nsw i8 %320, -65
  %375 = icmp ult i8 %374, 26
  %376 = add nuw i8 %320, 32
  %377 = select i1 %375, i8 %376, i8 %320
  %378 = add i8 %377, -87
  br label %379

379:                                              ; preds = %373, %316
  %380 = phi i8 [ %378, %373 ], [ %321, %316 ]
  %381 = add i8 %380, %318
  store i8 %381, i8* %290, align 4
  %382 = getelementptr inbounds i8, i8* %287, i64 8
  %383 = load i8, i8* %382, align 1
  %384 = add i8 %383, -48
  %385 = icmp ult i8 %384, 10
  br i1 %385, label %393, label %386

386:                                              ; preds = %379
  switch i8 %383, label %370 [
    i8 102, label %387
    i8 101, label %387
    i8 100, label %387
    i8 99, label %387
    i8 98, label %387
    i8 97, label %387
    i8 70, label %387
    i8 69, label %387
    i8 68, label %387
    i8 67, label %387
    i8 66, label %387
    i8 65, label %387
  ]

387:                                              ; preds = %386, %386, %386, %386, %386, %386, %386, %386, %386, %386, %386, %386
  %388 = add nsw i8 %383, -65
  %389 = icmp ult i8 %388, 26
  %390 = add nuw i8 %383, 32
  %391 = select i1 %389, i8 %390, i8 %383
  %392 = add i8 %391, -87
  br label %393

393:                                              ; preds = %387, %379
  %394 = phi i8 [ %392, %387 ], [ %384, %379 ]
  %395 = shl i8 %394, 4
  store i8 %395, i8* %291, align 1
  %396 = getelementptr inbounds i8, i8* %287, i64 9
  %397 = load i8, i8* %396, align 1
  %398 = add i8 %397, -48
  %399 = icmp ult i8 %398, 10
  br i1 %399, label %407, label %400

400:                                              ; preds = %393
  switch i8 %397, label %370 [
    i8 102, label %401
    i8 101, label %401
    i8 100, label %401
    i8 99, label %401
    i8 98, label %401
    i8 97, label %401
    i8 70, label %401
    i8 69, label %401
    i8 68, label %401
    i8 67, label %401
    i8 66, label %401
    i8 65, label %401
  ]

401:                                              ; preds = %400, %400, %400, %400, %400, %400, %400, %400, %400, %400, %400, %400
  %402 = add nsw i8 %397, -65
  %403 = icmp ult i8 %402, 26
  %404 = add nuw i8 %397, 32
  %405 = select i1 %403, i8 %404, i8 %397
  %406 = add i8 %405, -87
  br label %407

407:                                              ; preds = %401, %393
  %408 = phi i8 [ %406, %401 ], [ %398, %393 ]
  %409 = add i8 %408, %395
  store i8 %409, i8* %291, align 1
  %410 = getelementptr inbounds i8, i8* %287, i64 10
  %411 = load i8, i8* %410, align 1
  %412 = add i8 %411, -48
  %413 = icmp ult i8 %412, 10
  br i1 %413, label %421, label %414

414:                                              ; preds = %407
  switch i8 %411, label %370 [
    i8 102, label %415
    i8 101, label %415
    i8 100, label %415
    i8 99, label %415
    i8 98, label %415
    i8 97, label %415
    i8 70, label %415
    i8 69, label %415
    i8 68, label %415
    i8 67, label %415
    i8 66, label %415
    i8 65, label %415
  ]

415:                                              ; preds = %414, %414, %414, %414, %414, %414, %414, %414, %414, %414, %414, %414
  %416 = add nsw i8 %411, -65
  %417 = icmp ult i8 %416, 26
  %418 = add nuw i8 %411, 32
  %419 = select i1 %417, i8 %418, i8 %411
  %420 = add i8 %419, -87
  br label %421

421:                                              ; preds = %415, %407
  %422 = phi i8 [ %420, %415 ], [ %412, %407 ]
  %423 = shl i8 %422, 4
  store i8 %423, i8* %292, align 2
  %424 = getelementptr inbounds i8, i8* %287, i64 11
  %425 = load i8, i8* %424, align 1
  %426 = add i8 %425, -48
  %427 = icmp ult i8 %426, 10
  br i1 %427, label %435, label %428

428:                                              ; preds = %421
  switch i8 %425, label %370 [
    i8 102, label %429
    i8 101, label %429
    i8 100, label %429
    i8 99, label %429
    i8 98, label %429
    i8 97, label %429
    i8 70, label %429
    i8 69, label %429
    i8 68, label %429
    i8 67, label %429
    i8 66, label %429
    i8 65, label %429
  ]

429:                                              ; preds = %428, %428, %428, %428, %428, %428, %428, %428, %428, %428, %428, %428
  %430 = add nsw i8 %425, -65
  %431 = icmp ult i8 %430, 26
  %432 = add nuw i8 %425, 32
  %433 = select i1 %431, i8 %432, i8 %425
  %434 = add i8 %433, -87
  br label %435

435:                                              ; preds = %429, %421
  %436 = phi i8 [ %434, %429 ], [ %426, %421 ]
  %437 = add i8 %436, %423
  store i8 %437, i8* %292, align 2
  %438 = getelementptr inbounds i8, i8* %287, i64 12
  %439 = load i8, i8* %438, align 1
  %440 = add i8 %439, -48
  %441 = icmp ult i8 %440, 10
  br i1 %441, label %449, label %442

442:                                              ; preds = %435
  switch i8 %439, label %370 [
    i8 102, label %443
    i8 101, label %443
    i8 100, label %443
    i8 99, label %443
    i8 98, label %443
    i8 97, label %443
    i8 70, label %443
    i8 69, label %443
    i8 68, label %443
    i8 67, label %443
    i8 66, label %443
    i8 65, label %443
  ]

443:                                              ; preds = %442, %442, %442, %442, %442, %442, %442, %442, %442, %442, %442, %442
  %444 = add nsw i8 %439, -65
  %445 = icmp ult i8 %444, 26
  %446 = add nuw i8 %439, 32
  %447 = select i1 %445, i8 %446, i8 %439
  %448 = add i8 %447, -87
  br label %449

449:                                              ; preds = %443, %435
  %450 = phi i8 [ %448, %443 ], [ %440, %435 ]
  %451 = shl i8 %450, 4
  store i8 %451, i8* %293, align 1
  %452 = getelementptr inbounds i8, i8* %287, i64 13
  %453 = load i8, i8* %452, align 1
  %454 = add i8 %453, -48
  %455 = icmp ult i8 %454, 10
  br i1 %455, label %463, label %456

456:                                              ; preds = %449
  switch i8 %453, label %370 [
    i8 102, label %457
    i8 101, label %457
    i8 100, label %457
    i8 99, label %457
    i8 98, label %457
    i8 97, label %457
    i8 70, label %457
    i8 69, label %457
    i8 68, label %457
    i8 67, label %457
    i8 66, label %457
    i8 65, label %457
  ]

457:                                              ; preds = %456, %456, %456, %456, %456, %456, %456, %456, %456, %456, %456, %456
  %458 = add nsw i8 %453, -65
  %459 = icmp ult i8 %458, 26
  %460 = add nuw i8 %453, 32
  %461 = select i1 %459, i8 %460, i8 %453
  %462 = add i8 %461, -87
  br label %463

463:                                              ; preds = %457, %449
  %464 = phi i8 [ %462, %457 ], [ %454, %449 ]
  %465 = add i8 %464, %451
  store i8 %465, i8* %293, align 1
  br label %351

466:                                              ; preds = %323
  %467 = add i8 %329, -97
  %468 = icmp ult i8 %467, 26
  %469 = add i8 %329, -32
  %470 = select i1 %468, i8 %469, i8 %329
  store i8 %470, i8* %291, align 1
  %471 = getelementptr inbounds i8, i8* %287, i64 7
  %472 = load i8, i8* %471, align 1
  %473 = and i8 %472, -33
  %474 = add i8 %473, -65
  %475 = icmp ult i8 %474, 26
  %476 = add i8 %472, -48
  %477 = icmp ult i8 %476, 10
  %478 = or i1 %477, %475
  br i1 %478, label %479, label %341

479:                                              ; preds = %466
  %480 = add i8 %472, -97
  %481 = icmp ult i8 %480, 26
  %482 = add i8 %472, -32
  %483 = select i1 %481, i8 %482, i8 %472
  store i8 %483, i8* %292, align 2
  %484 = getelementptr inbounds i8, i8* %287, i64 8
  %485 = load i8, i8* %484, align 1
  %486 = and i8 %485, -33
  %487 = add i8 %486, -65
  %488 = icmp ult i8 %487, 26
  %489 = add i8 %485, -48
  %490 = icmp ult i8 %489, 10
  %491 = or i1 %490, %488
  br i1 %491, label %336, label %341

492:                                              ; preds = %275, %283, %286, %370
  %493 = phi i1 [ false, %283 ], [ false, %275 ], [ %371, %370 ], [ false, %286 ]
  %494 = xor i1 %493, true
  %495 = and i1 %279, %494
  %496 = and i1 %281, %495
  br i1 %496, label %497, label %501

497:                                              ; preds = %492
  %498 = load i32, i32* %4, align 4
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %501, label %500

500:                                              ; preds = %497
  tail call fastcc void @_ZL24hb_ot_tags_from_languagePKcS0_PjS1_(i8* %19, i8* %58, i32* nonnull %4, i32* nonnull %5)
  br label %501

501:                                              ; preds = %492, %500, %497, %14, %10, %17
  %502 = phi i1 [ true, %17 ], [ true, %14 ], [ true, %10 ], [ %277, %497 ], [ %277, %500 ], [ %277, %492 ]
  %503 = icmp ne i32* %2, null
  %504 = and i1 %503, %502
  %505 = icmp ne i32* %3, null
  %506 = and i1 %505, %504
  br i1 %506, label %507, label %547

507:                                              ; preds = %501
  %508 = load i32, i32* %2, align 4
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %547, label %510

510:                                              ; preds = %507
  switch i32 %0, label %532 [
    i32 1113943655, label %519
    i32 1147500129, label %511
    i32 1198877298, label %512
    i32 1198879349, label %513
    i32 1265525857, label %514
    i32 1298954605, label %515
    i32 1332902241, label %516
    i32 1415671148, label %517
    i32 1415933045, label %518
    i32 1299803506, label %524
  ]

511:                                              ; preds = %510
  br label %519

512:                                              ; preds = %510
  br label %519

513:                                              ; preds = %510
  br label %519

514:                                              ; preds = %510
  br label %519

515:                                              ; preds = %510
  br label %519

516:                                              ; preds = %510
  br label %519

517:                                              ; preds = %510
  br label %519

518:                                              ; preds = %510
  br label %519

519:                                              ; preds = %510, %511, %512, %513, %514, %515, %516, %517, %518
  %520 = phi i32 [ 1651402546, %510 ], [ 1684370994, %511 ], [ 1735029298, %512 ], [ 1735750194, %513 ], [ 1802396722, %514 ], [ 1835822386, %515 ], [ 1869773106, %516 ], [ 1953328178, %517 ], [ 1952803890, %518 ]
  %521 = or i32 %520, 51
  store i32 %521, i32* %3, align 4
  %522 = load i32, i32* %2, align 4
  %523 = icmp ugt i32 %522, 1
  br i1 %523, label %524, label %545

524:                                              ; preds = %510, %519
  %525 = phi i32 [ 1, %519 ], [ 0, %510 ]
  %526 = phi i32 [ %520, %519 ], [ 1836674354, %510 ]
  %527 = add nuw nsw i32 %525, 1
  %528 = zext i32 %525 to i64
  %529 = getelementptr inbounds i32, i32* %3, i64 %528
  store i32 %526, i32* %529, align 4
  %530 = load i32, i32* %2, align 4
  %531 = icmp ugt i32 %530, %527
  br i1 %531, label %532, label %545

532:                                              ; preds = %510, %524
  %533 = phi i32 [ %527, %524 ], [ 0, %510 ]
  switch i32 %0, label %538 [
    i32 0, label %545
    i32 1214870113, label %540
    i32 1281453935, label %534
    i32 1500080489, label %535
    i32 1315663727, label %536
    i32 1449224553, label %537
  ]

534:                                              ; preds = %532
  br label %540

535:                                              ; preds = %532
  br label %540

536:                                              ; preds = %532
  br label %540

537:                                              ; preds = %532
  br label %540

538:                                              ; preds = %532
  %539 = or i32 %0, 536870912
  br label %540

540:                                              ; preds = %538, %537, %536, %535, %534, %532
  %541 = phi i32 [ 1818324768, %534 ], [ 2036932640, %535 ], [ 1852534560, %536 ], [ 1986095392, %537 ], [ %539, %538 ], [ 1801547361, %532 ]
  %542 = add nuw nsw i32 %533, 1
  %543 = zext i32 %533 to i64
  %544 = getelementptr inbounds i32, i32* %3, i64 %543
  store i32 %541, i32* %544, align 4
  br label %545

545:                                              ; preds = %519, %524, %532, %540
  %546 = phi i32 [ %527, %524 ], [ %542, %540 ], [ %533, %532 ], [ 1, %519 ]
  store i32 %546, i32* %2, align 4
  br label %547

547:                                              ; preds = %507, %545, %501
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @hb_ot_tag_to_script(i32) local_unnamed_addr #2 {
  %2 = and i32 %0, 254
  %3 = or i32 %2, 1
  %4 = icmp eq i32 %3, 51
  br i1 %4, label %5, label %17, !prof !2

5:                                                ; preds = %1
  %6 = and i32 %0, -206
  switch i32 %6, label %16 [
    i32 1651402546, label %37
    i32 1684370994, label %7
    i32 1735029298, label %8
    i32 1735750194, label %9
    i32 1802396722, label %10
    i32 1835822386, label %11
    i32 1869773106, label %12
    i32 1953328178, label %13
    i32 1952803890, label %14
    i32 1836674354, label %15
  ]

7:                                                ; preds = %5
  br label %37

8:                                                ; preds = %5
  br label %37

9:                                                ; preds = %5
  br label %37

10:                                               ; preds = %5
  br label %37

11:                                               ; preds = %5
  br label %37

12:                                               ; preds = %5
  br label %37

13:                                               ; preds = %5
  br label %37

14:                                               ; preds = %5
  br label %37

15:                                               ; preds = %5
  br label %37

16:                                               ; preds = %5
  br label %37

17:                                               ; preds = %1
  %18 = icmp eq i32 %0, 1145457748
  br i1 %18, label %37, label %19, !prof !2

19:                                               ; preds = %17
  %20 = and i32 %0, 65280
  %21 = icmp eq i32 %20, 8192
  br i1 %21, label %22, label %26, !prof !2

22:                                               ; preds = %19
  %23 = lshr i32 %0, 8
  %24 = and i32 %23, 65280
  %25 = or i32 %24, %0
  br label %26

26:                                               ; preds = %22, %19
  %27 = phi i32 [ %25, %22 ], [ %0, %19 ]
  %28 = and i32 %27, 255
  %29 = icmp eq i32 %28, 32
  br i1 %29, label %30, label %34, !prof !2

30:                                               ; preds = %26
  %31 = lshr i32 %27, 8
  %32 = and i32 %31, 255
  %33 = or i32 %32, %27
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi i32 [ %33, %30 ], [ %27, %26 ]
  %36 = and i32 %35, -536870913
  br label %37

37:                                               ; preds = %34, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %5
  %38 = phi i32 [ 1517976186, %16 ], [ 1299803506, %15 ], [ 1415933045, %14 ], [ 1415671148, %13 ], [ 1332902241, %12 ], [ 1298954605, %11 ], [ 1265525857, %10 ], [ 1198879349, %9 ], [ 1198877298, %8 ], [ 1147500129, %7 ], [ 1113943655, %5 ], [ %36, %34 ], [ 0, %17 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_tag_from_language(%struct.hb_language_impl_t*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca [1 x i32], align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 1, i32* %2, align 4
  %5 = bitcast [1 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  %6 = getelementptr inbounds [1 x i32], [1 x i32]* %3, i64 0, i64 0
  store i32 -1431655766, i32* %6, align 4
  call void @hb_ot_tags_from_script_and_language(i32 1517976186, %struct.hb_language_impl_t* %0, i32* null, i32* null, i32* nonnull %2, i32* nonnull %6)
  %7 = load i32, i32* %2, align 4
  %8 = icmp eq i32 %7, 0
  %9 = load i32, i32* %6, align 4
  %10 = select i1 %8, i32 1684434036, i32 %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret i32 %10
}

declare i8* @hb_language_to_string(%struct.hb_language_impl_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL24hb_ot_tags_from_languagePKcS0_PjS1_(i8*, i8*, i32*, i32*) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hb_sorted_array_t, align 8
  store i8* %0, i8** %6, align 8
  br label %8

8:                                                ; preds = %14, %4
  %9 = phi i8* [ %0, %4 ], [ %15, %14 ]
  %10 = tail call i8* @strstr(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #9
  %11 = icmp ne i8* %10, null
  %12 = icmp ult i8* %10, %1
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %24

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, -33
  %18 = add i8 %17, -65
  %19 = icmp ult i8 %18, 26
  %20 = add i8 %16, -48
  %21 = icmp ult i8 %20, 10
  %22 = or i1 %21, %19
  br i1 %22, label %8, label %23

23:                                               ; preds = %14
  store i32 1095782472, i32* %3, align 4
  br label %1745

24:                                               ; preds = %8, %30
  %25 = phi i8* [ %31, %30 ], [ %0, %8 ]
  %26 = tail call i8* @strstr(i8* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #9
  %27 = icmp ne i8* %26, null
  %28 = icmp ult i8* %26, %1
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %26, i64 8
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, -33
  %34 = add i8 %33, -65
  %35 = icmp ult i8 %34, 26
  %36 = add i8 %32, -48
  %37 = icmp ult i8 %36, 10
  %38 = or i1 %37, %35
  br i1 %38, label %24, label %39

39:                                               ; preds = %30
  store i32 1346851360, i32* %3, align 4
  br label %1745

40:                                               ; preds = %24, %46
  %41 = phi i8* [ %47, %46 ], [ %0, %24 ]
  %42 = tail call i8* @strstr(i8* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)) #9
  %43 = icmp ne i8* %42, null
  %44 = icmp ult i8* %42, %1
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %56

46:                                               ; preds = %40
  %47 = getelementptr inbounds i8, i8* %42, i64 8
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, -33
  %50 = add i8 %49, -65
  %51 = icmp ult i8 %50, 26
  %52 = add i8 %48, -48
  %53 = icmp ult i8 %52, 10
  %54 = or i1 %53, %51
  br i1 %54, label %40, label %55

55:                                               ; preds = %46
  store i32 1213809952, i32* %3, align 4
  br label %1745

56:                                               ; preds = %40, %62
  %57 = phi i8* [ %63, %62 ], [ %0, %40 ]
  %58 = tail call i8* @strstr(i8* %57, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #9
  %59 = icmp ne i8* %58, null
  %60 = icmp ult i8* %58, %1
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %58, i64 8
  %64 = load i8, i8* %63, align 1
  %65 = and i8 %64, -33
  %66 = add i8 %65, -65
  %67 = icmp ult i8 %66, 26
  %68 = add i8 %64, -48
  %69 = icmp ult i8 %68, 10
  %70 = or i1 %69, %67
  br i1 %70, label %56, label %71

71:                                               ; preds = %62
  store i32 1347571488, i32* %3, align 4
  br label %1745

72:                                               ; preds = %56, %78
  %73 = phi i8* [ %79, %78 ], [ %0, %56 ]
  %74 = tail call i8* @strstr(i8* %73, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)) #9
  %75 = icmp ne i8* %74, null
  %76 = icmp ult i8* %74, %1
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %88

78:                                               ; preds = %72
  %79 = getelementptr inbounds i8, i8* %74, i64 7
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, -33
  %82 = add i8 %81, -65
  %83 = icmp ult i8 %82, 26
  %84 = add i8 %80, -48
  %85 = icmp ult i8 %84, 10
  %86 = or i1 %85, %83
  br i1 %86, label %72, label %87

87:                                               ; preds = %78
  store i32 1230000200, i32* %3, align 4
  br label %1745

88:                                               ; preds = %72, %94
  %89 = phi i8* [ %95, %94 ], [ %0, %72 ]
  %90 = tail call i8* @strstr(i8* %89, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #9
  %91 = icmp ne i8* %90, null
  %92 = icmp ult i8* %90, %1
  %93 = and i1 %91, %92
  br i1 %93, label %94, label %104

94:                                               ; preds = %88
  %95 = getelementptr inbounds i8, i8* %90, i64 5
  %96 = load i8, i8* %95, align 1
  %97 = and i8 %96, -33
  %98 = add i8 %97, -65
  %99 = icmp ult i8 %98, 26
  %100 = add i8 %96, -48
  %101 = icmp ult i8 %100, 10
  %102 = or i1 %101, %99
  br i1 %102, label %88, label %103

103:                                              ; preds = %94
  store i32 1262961952, i32* %3, align 4
  br label %1745

104:                                              ; preds = %88, %110
  %105 = phi i8* [ %111, %110 ], [ %0, %88 ]
  %106 = tail call i8* @strstr(i8* %105, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)) #9
  %107 = icmp ne i8* %106, null
  %108 = icmp ult i8* %106, %1
  %109 = and i1 %107, %108
  br i1 %109, label %110, label %120

110:                                              ; preds = %104
  %111 = getelementptr inbounds i8, i8* %106, i64 5
  %112 = load i8, i8* %111, align 1
  %113 = and i8 %112, -33
  %114 = add i8 %113, -65
  %115 = icmp ult i8 %114, 26
  %116 = add i8 %112, -48
  %117 = icmp ult i8 %116, 10
  %118 = or i1 %117, %115
  br i1 %118, label %104, label %119

119:                                              ; preds = %110
  store i32 1398362693, i32* %3, align 4
  br label %1745

120:                                              ; preds = %104, %126
  %121 = phi i8* [ %127, %126 ], [ %0, %104 ]
  %122 = tail call i8* @strstr(i8* %121, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #9
  %123 = icmp ne i8* %122, null
  %124 = icmp ult i8* %122, %1
  %125 = and i1 %123, %124
  br i1 %125, label %126, label %136

126:                                              ; preds = %120
  %127 = getelementptr inbounds i8, i8* %122, i64 5
  %128 = load i8, i8* %127, align 1
  %129 = and i8 %128, -33
  %130 = add i8 %129, -65
  %131 = icmp ult i8 %130, 26
  %132 = add i8 %128, -48
  %133 = icmp ult i8 %132, 10
  %134 = or i1 %133, %131
  br i1 %134, label %120, label %135

135:                                              ; preds = %126
  store i32 1398362698, i32* %3, align 4
  br label %1745

136:                                              ; preds = %120, %142
  %137 = phi i8* [ %143, %142 ], [ %0, %120 ]
  %138 = tail call i8* @strstr(i8* %137, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #9
  %139 = icmp ne i8* %138, null
  %140 = icmp ult i8* %138, %1
  %141 = and i1 %139, %140
  br i1 %141, label %142, label %152

142:                                              ; preds = %136
  %143 = getelementptr inbounds i8, i8* %138, i64 5
  %144 = load i8, i8* %143, align 1
  %145 = and i8 %144, -33
  %146 = add i8 %145, -65
  %147 = icmp ult i8 %146, 26
  %148 = add i8 %144, -48
  %149 = icmp ult i8 %148, 10
  %150 = or i1 %149, %147
  br i1 %150, label %136, label %151

151:                                              ; preds = %142
  store i32 1398362702, i32* %3, align 4
  br label %1745

152:                                              ; preds = %136
  %153 = load i8, i8* %0, align 1
  %154 = sext i8 %153 to i32
  switch i32 %154, label %1648 [
    i32 97, label %155
    i32 99, label %160
    i32 103, label %873
    i32 104, label %970
    i32 105, label %1149
    i32 108, label %1167
    i32 109, label %1175
    i32 110, label %1265
    i32 114, label %1368
    i32 119, label %1388
    i32 121, label %1478
    i32 122, label %1486
  ]

155:                                              ; preds = %152
  %156 = getelementptr inbounds i8, i8* %0, i64 1
  %157 = tail call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)) #9
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %1648

159:                                              ; preds = %155
  store i32 1245859616, i32* %3, align 4
  br label %1745

160:                                              ; preds = %152
  %161 = getelementptr inbounds i8, i8* %0, i64 1
  %162 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i64 10) #9
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %160
  %165 = getelementptr inbounds i8, i8* %0, i64 11
  %166 = load i8, i8* %165, align 1
  switch i8 %166, label %168 [
    i8 0, label %167
    i8 45, label %167
  ]

167:                                              ; preds = %164, %164
  store i32 1514686496, i32* %3, align 4
  br label %1745

168:                                              ; preds = %164, %160
  %169 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i64 10) #9
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %180

171:                                              ; preds = %168
  %172 = getelementptr inbounds i8, i8* %0, i64 11
  %173 = load i8, i8* %172, align 1
  switch i8 %173, label %180 [
    i8 45, label %174
    i8 0, label %174
  ]

174:                                              ; preds = %171, %171
  %175 = load i32, i32* %2, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %1745, label %177

177:                                              ; preds = %174
  store i32 1514689613, i32* %3, align 4
  %178 = load i32, i32* %2, align 4
  %179 = icmp ugt i32 %178, 1
  br i1 %179, label %1614, label %1745

180:                                              ; preds = %171, %168
  %181 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10) #9
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %180
  %184 = getelementptr inbounds i8, i8* %0, i64 11
  %185 = load i8, i8* %184, align 1
  switch i8 %185, label %187 [
    i8 0, label %186
    i8 45, label %186
  ]

186:                                              ; preds = %183, %183
  store i32 1514686496, i32* %3, align 4
  br label %1745

187:                                              ; preds = %183, %180
  %188 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i64 10) #9
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %199

190:                                              ; preds = %187
  %191 = getelementptr inbounds i8, i8* %0, i64 11
  %192 = load i8, i8* %191, align 1
  switch i8 %192, label %199 [
    i8 45, label %193
    i8 0, label %193
  ]

193:                                              ; preds = %190, %190
  %194 = load i32, i32* %2, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %1745, label %196

196:                                              ; preds = %193
  store i32 1514689613, i32* %3, align 4
  %197 = load i32, i32* %2, align 4
  %198 = icmp ugt i32 %197, 1
  br i1 %198, label %1612, label %1745

199:                                              ; preds = %190, %187
  %200 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i64 10) #9
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %206

202:                                              ; preds = %199
  %203 = getelementptr inbounds i8, i8* %0, i64 11
  %204 = load i8, i8* %203, align 1
  switch i8 %204, label %206 [
    i8 0, label %205
    i8 45, label %205
  ]

205:                                              ; preds = %202, %202
  store i32 1514686496, i32* %3, align 4
  br label %1745

206:                                              ; preds = %202, %199
  %207 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i64 10) #9
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %218

209:                                              ; preds = %206
  %210 = getelementptr inbounds i8, i8* %0, i64 11
  %211 = load i8, i8* %210, align 1
  switch i8 %211, label %218 [
    i8 45, label %212
    i8 0, label %212
  ]

212:                                              ; preds = %209, %209
  %213 = load i32, i32* %2, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %1745, label %215

215:                                              ; preds = %212
  store i32 1514689613, i32* %3, align 4
  %216 = load i32, i32* %2, align 4
  %217 = icmp ugt i32 %216, 1
  br i1 %217, label %1610, label %1745

218:                                              ; preds = %209, %206
  %219 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i64 10) #9
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %225

221:                                              ; preds = %218
  %222 = getelementptr inbounds i8, i8* %0, i64 11
  %223 = load i8, i8* %222, align 1
  switch i8 %223, label %225 [
    i8 0, label %224
    i8 45, label %224
  ]

224:                                              ; preds = %221, %221
  store i32 1514686496, i32* %3, align 4
  br label %1745

225:                                              ; preds = %221, %218
  %226 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 10) #9
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %237

228:                                              ; preds = %225
  %229 = getelementptr inbounds i8, i8* %0, i64 11
  %230 = load i8, i8* %229, align 1
  switch i8 %230, label %237 [
    i8 45, label %231
    i8 0, label %231
  ]

231:                                              ; preds = %228, %228
  %232 = load i32, i32* %2, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %1745, label %234

234:                                              ; preds = %231
  store i32 1514689613, i32* %3, align 4
  %235 = load i32, i32* %2, align 4
  %236 = icmp ugt i32 %235, 1
  br i1 %236, label %1608, label %1745

237:                                              ; preds = %228, %225
  %238 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i64 10) #9
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %244

240:                                              ; preds = %237
  %241 = getelementptr inbounds i8, i8* %0, i64 11
  %242 = load i8, i8* %241, align 1
  switch i8 %242, label %244 [
    i8 0, label %243
    i8 45, label %243
  ]

243:                                              ; preds = %240, %240
  store i32 1514686496, i32* %3, align 4
  br label %1745

244:                                              ; preds = %240, %237
  %245 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i64 10) #9
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %256

247:                                              ; preds = %244
  %248 = getelementptr inbounds i8, i8* %0, i64 11
  %249 = load i8, i8* %248, align 1
  switch i8 %249, label %256 [
    i8 45, label %250
    i8 0, label %250
  ]

250:                                              ; preds = %247, %247
  %251 = load i32, i32* %2, align 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %1745, label %253

253:                                              ; preds = %250
  store i32 1514689613, i32* %3, align 4
  %254 = load i32, i32* %2, align 4
  %255 = icmp ugt i32 %254, 1
  br i1 %255, label %1606, label %1745

256:                                              ; preds = %247, %244
  %257 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i64 10) #9
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %263

259:                                              ; preds = %256
  %260 = getelementptr inbounds i8, i8* %0, i64 11
  %261 = load i8, i8* %260, align 1
  switch i8 %261, label %263 [
    i8 0, label %262
    i8 45, label %262
  ]

262:                                              ; preds = %259, %259
  store i32 1514686496, i32* %3, align 4
  br label %1745

263:                                              ; preds = %259, %256
  %264 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i64 10) #9
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %275

266:                                              ; preds = %263
  %267 = getelementptr inbounds i8, i8* %0, i64 11
  %268 = load i8, i8* %267, align 1
  switch i8 %268, label %275 [
    i8 45, label %269
    i8 0, label %269
  ]

269:                                              ; preds = %266, %266
  %270 = load i32, i32* %2, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %1745, label %272

272:                                              ; preds = %269
  store i32 1514689613, i32* %3, align 4
  %273 = load i32, i32* %2, align 4
  %274 = icmp ugt i32 %273, 1
  br i1 %274, label %1604, label %1745

275:                                              ; preds = %266, %263
  %276 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i64 10) #9
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %282

278:                                              ; preds = %275
  %279 = getelementptr inbounds i8, i8* %0, i64 11
  %280 = load i8, i8* %279, align 1
  switch i8 %280, label %282 [
    i8 0, label %281
    i8 45, label %281
  ]

281:                                              ; preds = %278, %278
  store i32 1514686496, i32* %3, align 4
  br label %1745

282:                                              ; preds = %278, %275
  %283 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i64 10) #9
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %294

285:                                              ; preds = %282
  %286 = getelementptr inbounds i8, i8* %0, i64 11
  %287 = load i8, i8* %286, align 1
  switch i8 %287, label %294 [
    i8 45, label %288
    i8 0, label %288
  ]

288:                                              ; preds = %285, %285
  %289 = load i32, i32* %2, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %1745, label %291

291:                                              ; preds = %288
  store i32 1514689613, i32* %3, align 4
  %292 = load i32, i32* %2, align 4
  %293 = icmp ugt i32 %292, 1
  br i1 %293, label %1602, label %1745

294:                                              ; preds = %285, %282
  %295 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i64 10) #9
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %301

297:                                              ; preds = %294
  %298 = getelementptr inbounds i8, i8* %0, i64 11
  %299 = load i8, i8* %298, align 1
  switch i8 %299, label %301 [
    i8 0, label %300
    i8 45, label %300
  ]

300:                                              ; preds = %297, %297
  store i32 1514686496, i32* %3, align 4
  br label %1745

301:                                              ; preds = %297, %294
  %302 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i64 10) #9
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %313

304:                                              ; preds = %301
  %305 = getelementptr inbounds i8, i8* %0, i64 11
  %306 = load i8, i8* %305, align 1
  switch i8 %306, label %313 [
    i8 45, label %307
    i8 0, label %307
  ]

307:                                              ; preds = %304, %304
  %308 = load i32, i32* %2, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %1745, label %310

310:                                              ; preds = %307
  store i32 1514689613, i32* %3, align 4
  %311 = load i32, i32* %2, align 4
  %312 = icmp ugt i32 %311, 1
  br i1 %312, label %1600, label %1745

313:                                              ; preds = %304, %301
  %314 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i64 7) #9
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %320

316:                                              ; preds = %313
  %317 = getelementptr inbounds i8, i8* %0, i64 8
  %318 = load i8, i8* %317, align 1
  switch i8 %318, label %320 [
    i8 0, label %319
    i8 45, label %319
  ]

319:                                              ; preds = %316, %316
  store i32 1514689312, i32* %3, align 4
  br label %1745

320:                                              ; preds = %316, %313
  %321 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i64 7) #9
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %327

323:                                              ; preds = %320
  %324 = getelementptr inbounds i8, i8* %0, i64 8
  %325 = load i8, i8* %324, align 1
  switch i8 %325, label %327 [
    i8 0, label %326
    i8 45, label %326
  ]

326:                                              ; preds = %323, %323
  store i32 1514689568, i32* %3, align 4
  br label %1745

327:                                              ; preds = %323, %320
  %328 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i64 7) #9
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %334

330:                                              ; preds = %327
  %331 = getelementptr inbounds i8, i8* %0, i64 8
  %332 = load i8, i8* %331, align 1
  switch i8 %332, label %334 [
    i8 0, label %333
    i8 45, label %333
  ]

333:                                              ; preds = %330, %330
  store i32 1514689312, i32* %3, align 4
  br label %1745

334:                                              ; preds = %330, %327
  %335 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i64 7) #9
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %341

337:                                              ; preds = %334
  %338 = getelementptr inbounds i8, i8* %0, i64 8
  %339 = load i8, i8* %338, align 1
  switch i8 %339, label %341 [
    i8 0, label %340
    i8 45, label %340
  ]

340:                                              ; preds = %337, %337
  store i32 1514689568, i32* %3, align 4
  br label %1745

341:                                              ; preds = %337, %334
  %342 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i64 7) #9
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %348

344:                                              ; preds = %341
  %345 = getelementptr inbounds i8, i8* %0, i64 8
  %346 = load i8, i8* %345, align 1
  switch i8 %346, label %348 [
    i8 0, label %347
    i8 45, label %347
  ]

347:                                              ; preds = %344, %344
  store i32 1514689312, i32* %3, align 4
  br label %1745

348:                                              ; preds = %344, %341
  %349 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), i64 7) #9
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %355

351:                                              ; preds = %348
  %352 = getelementptr inbounds i8, i8* %0, i64 8
  %353 = load i8, i8* %352, align 1
  switch i8 %353, label %355 [
    i8 0, label %354
    i8 45, label %354
  ]

354:                                              ; preds = %351, %351
  store i32 1514689568, i32* %3, align 4
  br label %1745

355:                                              ; preds = %351, %348
  %356 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), i64 7) #9
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %362

358:                                              ; preds = %355
  %359 = getelementptr inbounds i8, i8* %0, i64 8
  %360 = load i8, i8* %359, align 1
  switch i8 %360, label %362 [
    i8 0, label %361
    i8 45, label %361
  ]

361:                                              ; preds = %358, %358
  store i32 1514689312, i32* %3, align 4
  br label %1745

362:                                              ; preds = %358, %355
  %363 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i64 7) #9
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %369

365:                                              ; preds = %362
  %366 = getelementptr inbounds i8, i8* %0, i64 8
  %367 = load i8, i8* %366, align 1
  switch i8 %367, label %369 [
    i8 0, label %368
    i8 45, label %368
  ]

368:                                              ; preds = %365, %365
  store i32 1514689568, i32* %3, align 4
  br label %1745

369:                                              ; preds = %365, %362
  %370 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i64 7) #9
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %376

372:                                              ; preds = %369
  %373 = getelementptr inbounds i8, i8* %0, i64 8
  %374 = load i8, i8* %373, align 1
  switch i8 %374, label %376 [
    i8 0, label %375
    i8 45, label %375
  ]

375:                                              ; preds = %372, %372
  store i32 1514689312, i32* %3, align 4
  br label %1745

376:                                              ; preds = %372, %369
  %377 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i64 7) #9
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %383

379:                                              ; preds = %376
  %380 = getelementptr inbounds i8, i8* %0, i64 8
  %381 = load i8, i8* %380, align 1
  switch i8 %381, label %383 [
    i8 0, label %382
    i8 45, label %382
  ]

382:                                              ; preds = %379, %379
  store i32 1514689568, i32* %3, align 4
  br label %1745

383:                                              ; preds = %379, %376
  %384 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i64 0, i64 0), i64 7) #9
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %390

386:                                              ; preds = %383
  %387 = getelementptr inbounds i8, i8* %0, i64 8
  %388 = load i8, i8* %387, align 1
  switch i8 %388, label %390 [
    i8 0, label %389
    i8 45, label %389
  ]

389:                                              ; preds = %386, %386
  store i32 1514689312, i32* %3, align 4
  br label %1745

390:                                              ; preds = %386, %383
  %391 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i64 7) #9
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %397

393:                                              ; preds = %390
  %394 = getelementptr inbounds i8, i8* %0, i64 8
  %395 = load i8, i8* %394, align 1
  switch i8 %395, label %397 [
    i8 0, label %396
    i8 45, label %396
  ]

396:                                              ; preds = %393, %393
  store i32 1514689568, i32* %3, align 4
  br label %1745

397:                                              ; preds = %393, %390
  %398 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0), i64 7) #9
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %404

400:                                              ; preds = %397
  %401 = getelementptr inbounds i8, i8* %0, i64 8
  %402 = load i8, i8* %401, align 1
  switch i8 %402, label %404 [
    i8 0, label %403
    i8 45, label %403
  ]

403:                                              ; preds = %400, %400
  store i32 1514689312, i32* %3, align 4
  br label %1745

404:                                              ; preds = %400, %397
  %405 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i64 7) #9
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %411

407:                                              ; preds = %404
  %408 = getelementptr inbounds i8, i8* %0, i64 8
  %409 = load i8, i8* %408, align 1
  switch i8 %409, label %411 [
    i8 0, label %410
    i8 45, label %410
  ]

410:                                              ; preds = %407, %407
  store i32 1514689568, i32* %3, align 4
  br label %1745

411:                                              ; preds = %407, %404
  %412 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i64 7) #9
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %418

414:                                              ; preds = %411
  %415 = getelementptr inbounds i8, i8* %0, i64 8
  %416 = load i8, i8* %415, align 1
  switch i8 %416, label %418 [
    i8 0, label %417
    i8 45, label %417
  ]

417:                                              ; preds = %414, %414
  store i32 1514689312, i32* %3, align 4
  br label %1745

418:                                              ; preds = %414, %411
  %419 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), i64 7) #9
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %425

421:                                              ; preds = %418
  %422 = getelementptr inbounds i8, i8* %0, i64 8
  %423 = load i8, i8* %422, align 1
  switch i8 %423, label %425 [
    i8 0, label %424
    i8 45, label %424
  ]

424:                                              ; preds = %421, %421
  store i32 1514689568, i32* %3, align 4
  br label %1745

425:                                              ; preds = %421, %418
  %426 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i64 0, i64 0), i64 3) #9
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %481

428:                                              ; preds = %425, %434
  %429 = phi i8* [ %435, %434 ], [ %0, %425 ]
  %430 = tail call i8* @strstr(i8* %429, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %431 = icmp ne i8* %430, null
  %432 = icmp ult i8* %430, %1
  %433 = and i1 %431, %432
  br i1 %433, label %434, label %444

434:                                              ; preds = %428
  %435 = getelementptr inbounds i8, i8* %430, i64 3
  %436 = load i8, i8* %435, align 1
  %437 = and i8 %436, -33
  %438 = add i8 %437, -65
  %439 = icmp ult i8 %438, 26
  %440 = add i8 %436, -48
  %441 = icmp ult i8 %440, 10
  %442 = or i1 %441, %439
  br i1 %442, label %428, label %443

443:                                              ; preds = %434
  store i32 1514686496, i32* %3, align 4
  br label %1745

444:                                              ; preds = %428, %450
  %445 = phi i8* [ %451, %450 ], [ %0, %428 ]
  %446 = tail call i8* @strstr(i8* %445, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %447 = icmp ne i8* %446, null
  %448 = icmp ult i8* %446, %1
  %449 = and i1 %447, %448
  br i1 %449, label %450, label %465

450:                                              ; preds = %444
  %451 = getelementptr inbounds i8, i8* %446, i64 3
  %452 = load i8, i8* %451, align 1
  %453 = and i8 %452, -33
  %454 = add i8 %453, -65
  %455 = icmp ult i8 %454, 26
  %456 = add i8 %452, -48
  %457 = icmp ult i8 %456, 10
  %458 = or i1 %457, %455
  br i1 %458, label %444, label %459

459:                                              ; preds = %450
  %460 = load i32, i32* %2, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %1745, label %462

462:                                              ; preds = %459
  store i32 1514689613, i32* %3, align 4
  %463 = load i32, i32* %2, align 4
  %464 = icmp ugt i32 %463, 1
  br i1 %464, label %1584, label %1745

465:                                              ; preds = %444, %471
  %466 = phi i8* [ %472, %471 ], [ %0, %444 ]
  %467 = tail call i8* @strstr(i8* %466, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %468 = icmp ne i8* %467, null
  %469 = icmp ult i8* %467, %1
  %470 = and i1 %468, %469
  br i1 %470, label %471, label %481

471:                                              ; preds = %465
  %472 = getelementptr inbounds i8, i8* %467, i64 3
  %473 = load i8, i8* %472, align 1
  %474 = and i8 %473, -33
  %475 = add i8 %474, -65
  %476 = icmp ult i8 %475, 26
  %477 = add i8 %473, -48
  %478 = icmp ult i8 %477, 10
  %479 = or i1 %478, %476
  br i1 %479, label %465, label %480

480:                                              ; preds = %471
  store i32 1514689568, i32* %3, align 4
  br label %1745

481:                                              ; preds = %465, %425
  %482 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), i64 3) #9
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %537

484:                                              ; preds = %481, %490
  %485 = phi i8* [ %491, %490 ], [ %0, %481 ]
  %486 = tail call i8* @strstr(i8* %485, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %487 = icmp ne i8* %486, null
  %488 = icmp ult i8* %486, %1
  %489 = and i1 %487, %488
  br i1 %489, label %490, label %500

490:                                              ; preds = %484
  %491 = getelementptr inbounds i8, i8* %486, i64 3
  %492 = load i8, i8* %491, align 1
  %493 = and i8 %492, -33
  %494 = add i8 %493, -65
  %495 = icmp ult i8 %494, 26
  %496 = add i8 %492, -48
  %497 = icmp ult i8 %496, 10
  %498 = or i1 %497, %495
  br i1 %498, label %484, label %499

499:                                              ; preds = %490
  store i32 1514686496, i32* %3, align 4
  br label %1745

500:                                              ; preds = %484, %506
  %501 = phi i8* [ %507, %506 ], [ %0, %484 ]
  %502 = tail call i8* @strstr(i8* %501, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %503 = icmp ne i8* %502, null
  %504 = icmp ult i8* %502, %1
  %505 = and i1 %503, %504
  br i1 %505, label %506, label %521

506:                                              ; preds = %500
  %507 = getelementptr inbounds i8, i8* %502, i64 3
  %508 = load i8, i8* %507, align 1
  %509 = and i8 %508, -33
  %510 = add i8 %509, -65
  %511 = icmp ult i8 %510, 26
  %512 = add i8 %508, -48
  %513 = icmp ult i8 %512, 10
  %514 = or i1 %513, %511
  br i1 %514, label %500, label %515

515:                                              ; preds = %506
  %516 = load i32, i32* %2, align 4
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %1745, label %518

518:                                              ; preds = %515
  store i32 1514689613, i32* %3, align 4
  %519 = load i32, i32* %2, align 4
  %520 = icmp ugt i32 %519, 1
  br i1 %520, label %1586, label %1745

521:                                              ; preds = %500, %527
  %522 = phi i8* [ %528, %527 ], [ %0, %500 ]
  %523 = tail call i8* @strstr(i8* %522, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %524 = icmp ne i8* %523, null
  %525 = icmp ult i8* %523, %1
  %526 = and i1 %524, %525
  br i1 %526, label %527, label %537

527:                                              ; preds = %521
  %528 = getelementptr inbounds i8, i8* %523, i64 3
  %529 = load i8, i8* %528, align 1
  %530 = and i8 %529, -33
  %531 = add i8 %530, -65
  %532 = icmp ult i8 %531, 26
  %533 = add i8 %529, -48
  %534 = icmp ult i8 %533, 10
  %535 = or i1 %534, %532
  br i1 %535, label %521, label %536

536:                                              ; preds = %527
  store i32 1514689568, i32* %3, align 4
  br label %1745

537:                                              ; preds = %521, %481
  %538 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0), i64 3) #9
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %593

540:                                              ; preds = %537, %546
  %541 = phi i8* [ %547, %546 ], [ %0, %537 ]
  %542 = tail call i8* @strstr(i8* %541, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %543 = icmp ne i8* %542, null
  %544 = icmp ult i8* %542, %1
  %545 = and i1 %543, %544
  br i1 %545, label %546, label %556

546:                                              ; preds = %540
  %547 = getelementptr inbounds i8, i8* %542, i64 3
  %548 = load i8, i8* %547, align 1
  %549 = and i8 %548, -33
  %550 = add i8 %549, -65
  %551 = icmp ult i8 %550, 26
  %552 = add i8 %548, -48
  %553 = icmp ult i8 %552, 10
  %554 = or i1 %553, %551
  br i1 %554, label %540, label %555

555:                                              ; preds = %546
  store i32 1514686496, i32* %3, align 4
  br label %1745

556:                                              ; preds = %540, %562
  %557 = phi i8* [ %563, %562 ], [ %0, %540 ]
  %558 = tail call i8* @strstr(i8* %557, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %559 = icmp ne i8* %558, null
  %560 = icmp ult i8* %558, %1
  %561 = and i1 %559, %560
  br i1 %561, label %562, label %577

562:                                              ; preds = %556
  %563 = getelementptr inbounds i8, i8* %558, i64 3
  %564 = load i8, i8* %563, align 1
  %565 = and i8 %564, -33
  %566 = add i8 %565, -65
  %567 = icmp ult i8 %566, 26
  %568 = add i8 %564, -48
  %569 = icmp ult i8 %568, 10
  %570 = or i1 %569, %567
  br i1 %570, label %556, label %571

571:                                              ; preds = %562
  %572 = load i32, i32* %2, align 4
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %1745, label %574

574:                                              ; preds = %571
  store i32 1514689613, i32* %3, align 4
  %575 = load i32, i32* %2, align 4
  %576 = icmp ugt i32 %575, 1
  br i1 %576, label %1588, label %1745

577:                                              ; preds = %556, %583
  %578 = phi i8* [ %584, %583 ], [ %0, %556 ]
  %579 = tail call i8* @strstr(i8* %578, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %580 = icmp ne i8* %579, null
  %581 = icmp ult i8* %579, %1
  %582 = and i1 %580, %581
  br i1 %582, label %583, label %593

583:                                              ; preds = %577
  %584 = getelementptr inbounds i8, i8* %579, i64 3
  %585 = load i8, i8* %584, align 1
  %586 = and i8 %585, -33
  %587 = add i8 %586, -65
  %588 = icmp ult i8 %587, 26
  %589 = add i8 %585, -48
  %590 = icmp ult i8 %589, 10
  %591 = or i1 %590, %588
  br i1 %591, label %577, label %592

592:                                              ; preds = %583
  store i32 1514689568, i32* %3, align 4
  br label %1745

593:                                              ; preds = %577, %537
  %594 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), i64 3) #9
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %649

596:                                              ; preds = %593, %602
  %597 = phi i8* [ %603, %602 ], [ %0, %593 ]
  %598 = tail call i8* @strstr(i8* %597, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %599 = icmp ne i8* %598, null
  %600 = icmp ult i8* %598, %1
  %601 = and i1 %599, %600
  br i1 %601, label %602, label %612

602:                                              ; preds = %596
  %603 = getelementptr inbounds i8, i8* %598, i64 3
  %604 = load i8, i8* %603, align 1
  %605 = and i8 %604, -33
  %606 = add i8 %605, -65
  %607 = icmp ult i8 %606, 26
  %608 = add i8 %604, -48
  %609 = icmp ult i8 %608, 10
  %610 = or i1 %609, %607
  br i1 %610, label %596, label %611

611:                                              ; preds = %602
  store i32 1514686496, i32* %3, align 4
  br label %1745

612:                                              ; preds = %596, %618
  %613 = phi i8* [ %619, %618 ], [ %0, %596 ]
  %614 = tail call i8* @strstr(i8* %613, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %615 = icmp ne i8* %614, null
  %616 = icmp ult i8* %614, %1
  %617 = and i1 %615, %616
  br i1 %617, label %618, label %633

618:                                              ; preds = %612
  %619 = getelementptr inbounds i8, i8* %614, i64 3
  %620 = load i8, i8* %619, align 1
  %621 = and i8 %620, -33
  %622 = add i8 %621, -65
  %623 = icmp ult i8 %622, 26
  %624 = add i8 %620, -48
  %625 = icmp ult i8 %624, 10
  %626 = or i1 %625, %623
  br i1 %626, label %612, label %627

627:                                              ; preds = %618
  %628 = load i32, i32* %2, align 4
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %1745, label %630

630:                                              ; preds = %627
  store i32 1514689613, i32* %3, align 4
  %631 = load i32, i32* %2, align 4
  %632 = icmp ugt i32 %631, 1
  br i1 %632, label %1590, label %1745

633:                                              ; preds = %612, %639
  %634 = phi i8* [ %640, %639 ], [ %0, %612 ]
  %635 = tail call i8* @strstr(i8* %634, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %636 = icmp ne i8* %635, null
  %637 = icmp ult i8* %635, %1
  %638 = and i1 %636, %637
  br i1 %638, label %639, label %649

639:                                              ; preds = %633
  %640 = getelementptr inbounds i8, i8* %635, i64 3
  %641 = load i8, i8* %640, align 1
  %642 = and i8 %641, -33
  %643 = add i8 %642, -65
  %644 = icmp ult i8 %643, 26
  %645 = add i8 %641, -48
  %646 = icmp ult i8 %645, 10
  %647 = or i1 %646, %644
  br i1 %647, label %633, label %648

648:                                              ; preds = %639
  store i32 1514689568, i32* %3, align 4
  br label %1745

649:                                              ; preds = %633, %593
  %650 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i64 3) #9
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %705

652:                                              ; preds = %649, %658
  %653 = phi i8* [ %659, %658 ], [ %0, %649 ]
  %654 = tail call i8* @strstr(i8* %653, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %655 = icmp ne i8* %654, null
  %656 = icmp ult i8* %654, %1
  %657 = and i1 %655, %656
  br i1 %657, label %658, label %668

658:                                              ; preds = %652
  %659 = getelementptr inbounds i8, i8* %654, i64 3
  %660 = load i8, i8* %659, align 1
  %661 = and i8 %660, -33
  %662 = add i8 %661, -65
  %663 = icmp ult i8 %662, 26
  %664 = add i8 %660, -48
  %665 = icmp ult i8 %664, 10
  %666 = or i1 %665, %663
  br i1 %666, label %652, label %667

667:                                              ; preds = %658
  store i32 1514686496, i32* %3, align 4
  br label %1745

668:                                              ; preds = %652, %674
  %669 = phi i8* [ %675, %674 ], [ %0, %652 ]
  %670 = tail call i8* @strstr(i8* %669, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %671 = icmp ne i8* %670, null
  %672 = icmp ult i8* %670, %1
  %673 = and i1 %671, %672
  br i1 %673, label %674, label %689

674:                                              ; preds = %668
  %675 = getelementptr inbounds i8, i8* %670, i64 3
  %676 = load i8, i8* %675, align 1
  %677 = and i8 %676, -33
  %678 = add i8 %677, -65
  %679 = icmp ult i8 %678, 26
  %680 = add i8 %676, -48
  %681 = icmp ult i8 %680, 10
  %682 = or i1 %681, %679
  br i1 %682, label %668, label %683

683:                                              ; preds = %674
  %684 = load i32, i32* %2, align 4
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %1745, label %686

686:                                              ; preds = %683
  store i32 1514689613, i32* %3, align 4
  %687 = load i32, i32* %2, align 4
  %688 = icmp ugt i32 %687, 1
  br i1 %688, label %1592, label %1745

689:                                              ; preds = %668, %695
  %690 = phi i8* [ %696, %695 ], [ %0, %668 ]
  %691 = tail call i8* @strstr(i8* %690, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %692 = icmp ne i8* %691, null
  %693 = icmp ult i8* %691, %1
  %694 = and i1 %692, %693
  br i1 %694, label %695, label %705

695:                                              ; preds = %689
  %696 = getelementptr inbounds i8, i8* %691, i64 3
  %697 = load i8, i8* %696, align 1
  %698 = and i8 %697, -33
  %699 = add i8 %698, -65
  %700 = icmp ult i8 %699, 26
  %701 = add i8 %697, -48
  %702 = icmp ult i8 %701, 10
  %703 = or i1 %702, %700
  br i1 %703, label %689, label %704

704:                                              ; preds = %695
  store i32 1514689568, i32* %3, align 4
  br label %1745

705:                                              ; preds = %689, %649
  %706 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0), i64 3) #9
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %708, label %761

708:                                              ; preds = %705, %714
  %709 = phi i8* [ %715, %714 ], [ %0, %705 ]
  %710 = tail call i8* @strstr(i8* %709, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %711 = icmp ne i8* %710, null
  %712 = icmp ult i8* %710, %1
  %713 = and i1 %711, %712
  br i1 %713, label %714, label %724

714:                                              ; preds = %708
  %715 = getelementptr inbounds i8, i8* %710, i64 3
  %716 = load i8, i8* %715, align 1
  %717 = and i8 %716, -33
  %718 = add i8 %717, -65
  %719 = icmp ult i8 %718, 26
  %720 = add i8 %716, -48
  %721 = icmp ult i8 %720, 10
  %722 = or i1 %721, %719
  br i1 %722, label %708, label %723

723:                                              ; preds = %714
  store i32 1514686496, i32* %3, align 4
  br label %1745

724:                                              ; preds = %708, %730
  %725 = phi i8* [ %731, %730 ], [ %0, %708 ]
  %726 = tail call i8* @strstr(i8* %725, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %727 = icmp ne i8* %726, null
  %728 = icmp ult i8* %726, %1
  %729 = and i1 %727, %728
  br i1 %729, label %730, label %745

730:                                              ; preds = %724
  %731 = getelementptr inbounds i8, i8* %726, i64 3
  %732 = load i8, i8* %731, align 1
  %733 = and i8 %732, -33
  %734 = add i8 %733, -65
  %735 = icmp ult i8 %734, 26
  %736 = add i8 %732, -48
  %737 = icmp ult i8 %736, 10
  %738 = or i1 %737, %735
  br i1 %738, label %724, label %739

739:                                              ; preds = %730
  %740 = load i32, i32* %2, align 4
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %1745, label %742

742:                                              ; preds = %739
  store i32 1514689613, i32* %3, align 4
  %743 = load i32, i32* %2, align 4
  %744 = icmp ugt i32 %743, 1
  br i1 %744, label %1594, label %1745

745:                                              ; preds = %724, %751
  %746 = phi i8* [ %752, %751 ], [ %0, %724 ]
  %747 = tail call i8* @strstr(i8* %746, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %748 = icmp ne i8* %747, null
  %749 = icmp ult i8* %747, %1
  %750 = and i1 %748, %749
  br i1 %750, label %751, label %761

751:                                              ; preds = %745
  %752 = getelementptr inbounds i8, i8* %747, i64 3
  %753 = load i8, i8* %752, align 1
  %754 = and i8 %753, -33
  %755 = add i8 %754, -65
  %756 = icmp ult i8 %755, 26
  %757 = add i8 %753, -48
  %758 = icmp ult i8 %757, 10
  %759 = or i1 %758, %756
  br i1 %759, label %745, label %760

760:                                              ; preds = %751
  store i32 1514689568, i32* %3, align 4
  br label %1745

761:                                              ; preds = %745, %705
  %762 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), i64 3) #9
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %764, label %817

764:                                              ; preds = %761, %770
  %765 = phi i8* [ %771, %770 ], [ %0, %761 ]
  %766 = tail call i8* @strstr(i8* %765, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %767 = icmp ne i8* %766, null
  %768 = icmp ult i8* %766, %1
  %769 = and i1 %767, %768
  br i1 %769, label %770, label %780

770:                                              ; preds = %764
  %771 = getelementptr inbounds i8, i8* %766, i64 3
  %772 = load i8, i8* %771, align 1
  %773 = and i8 %772, -33
  %774 = add i8 %773, -65
  %775 = icmp ult i8 %774, 26
  %776 = add i8 %772, -48
  %777 = icmp ult i8 %776, 10
  %778 = or i1 %777, %775
  br i1 %778, label %764, label %779

779:                                              ; preds = %770
  store i32 1514686496, i32* %3, align 4
  br label %1745

780:                                              ; preds = %764, %786
  %781 = phi i8* [ %787, %786 ], [ %0, %764 ]
  %782 = tail call i8* @strstr(i8* %781, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %783 = icmp ne i8* %782, null
  %784 = icmp ult i8* %782, %1
  %785 = and i1 %783, %784
  br i1 %785, label %786, label %801

786:                                              ; preds = %780
  %787 = getelementptr inbounds i8, i8* %782, i64 3
  %788 = load i8, i8* %787, align 1
  %789 = and i8 %788, -33
  %790 = add i8 %789, -65
  %791 = icmp ult i8 %790, 26
  %792 = add i8 %788, -48
  %793 = icmp ult i8 %792, 10
  %794 = or i1 %793, %791
  br i1 %794, label %780, label %795

795:                                              ; preds = %786
  %796 = load i32, i32* %2, align 4
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %1745, label %798

798:                                              ; preds = %795
  store i32 1514689613, i32* %3, align 4
  %799 = load i32, i32* %2, align 4
  %800 = icmp ugt i32 %799, 1
  br i1 %800, label %1596, label %1745

801:                                              ; preds = %780, %807
  %802 = phi i8* [ %808, %807 ], [ %0, %780 ]
  %803 = tail call i8* @strstr(i8* %802, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %804 = icmp ne i8* %803, null
  %805 = icmp ult i8* %803, %1
  %806 = and i1 %804, %805
  br i1 %806, label %807, label %817

807:                                              ; preds = %801
  %808 = getelementptr inbounds i8, i8* %803, i64 3
  %809 = load i8, i8* %808, align 1
  %810 = and i8 %809, -33
  %811 = add i8 %810, -65
  %812 = icmp ult i8 %811, 26
  %813 = add i8 %809, -48
  %814 = icmp ult i8 %813, 10
  %815 = or i1 %814, %812
  br i1 %815, label %801, label %816

816:                                              ; preds = %807
  store i32 1514689568, i32* %3, align 4
  br label %1745

817:                                              ; preds = %801, %761
  %818 = tail call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0), i64 3) #9
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %820, label %1648

820:                                              ; preds = %817, %826
  %821 = phi i8* [ %827, %826 ], [ %0, %817 ]
  %822 = tail call i8* @strstr(i8* %821, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %823 = icmp ne i8* %822, null
  %824 = icmp ult i8* %822, %1
  %825 = and i1 %823, %824
  br i1 %825, label %826, label %836

826:                                              ; preds = %820
  %827 = getelementptr inbounds i8, i8* %822, i64 3
  %828 = load i8, i8* %827, align 1
  %829 = and i8 %828, -33
  %830 = add i8 %829, -65
  %831 = icmp ult i8 %830, 26
  %832 = add i8 %828, -48
  %833 = icmp ult i8 %832, 10
  %834 = or i1 %833, %831
  br i1 %834, label %820, label %835

835:                                              ; preds = %826
  store i32 1514686496, i32* %3, align 4
  br label %1745

836:                                              ; preds = %820, %842
  %837 = phi i8* [ %843, %842 ], [ %0, %820 ]
  %838 = tail call i8* @strstr(i8* %837, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %839 = icmp ne i8* %838, null
  %840 = icmp ult i8* %838, %1
  %841 = and i1 %839, %840
  br i1 %841, label %842, label %857

842:                                              ; preds = %836
  %843 = getelementptr inbounds i8, i8* %838, i64 3
  %844 = load i8, i8* %843, align 1
  %845 = and i8 %844, -33
  %846 = add i8 %845, -65
  %847 = icmp ult i8 %846, 26
  %848 = add i8 %844, -48
  %849 = icmp ult i8 %848, 10
  %850 = or i1 %849, %847
  br i1 %850, label %836, label %851

851:                                              ; preds = %842
  %852 = load i32, i32* %2, align 4
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %1745, label %854

854:                                              ; preds = %851
  store i32 1514689613, i32* %3, align 4
  %855 = load i32, i32* %2, align 4
  %856 = icmp ugt i32 %855, 1
  br i1 %856, label %1598, label %1745

857:                                              ; preds = %836, %863
  %858 = phi i8* [ %864, %863 ], [ %0, %836 ]
  %859 = tail call i8* @strstr(i8* %858, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %860 = icmp ne i8* %859, null
  %861 = icmp ult i8* %859, %1
  %862 = and i1 %860, %861
  br i1 %862, label %863, label %1648

863:                                              ; preds = %857
  %864 = getelementptr inbounds i8, i8* %859, i64 3
  %865 = load i8, i8* %864, align 1
  %866 = and i8 %865, -33
  %867 = add i8 %866, -65
  %868 = icmp ult i8 %867, 26
  %869 = add i8 %865, -48
  %870 = icmp ult i8 %869, 10
  %871 = or i1 %870, %868
  br i1 %871, label %857, label %872

872:                                              ; preds = %863
  store i32 1514689568, i32* %3, align 4
  br label %1745

873:                                              ; preds = %152
  %874 = getelementptr inbounds i8, i8* %0, i64 1
  %875 = tail call i32 @strncmp(i8* %874, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0), i64 10) #9
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %881

877:                                              ; preds = %873
  %878 = getelementptr inbounds i8, i8* %0, i64 11
  %879 = load i8, i8* %878, align 1
  switch i8 %879, label %881 [
    i8 0, label %880
    i8 45, label %880
  ]

880:                                              ; preds = %877, %877
  store i32 1514686496, i32* %3, align 4
  br label %1745

881:                                              ; preds = %877, %873
  %882 = tail call i32 @strncmp(i8* %874, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0), i64 10) #9
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %884, label %893

884:                                              ; preds = %881
  %885 = getelementptr inbounds i8, i8* %0, i64 11
  %886 = load i8, i8* %885, align 1
  switch i8 %886, label %893 [
    i8 45, label %887
    i8 0, label %887
  ]

887:                                              ; preds = %884, %884
  %888 = load i32, i32* %2, align 4
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %1745, label %890

890:                                              ; preds = %887
  store i32 1514689613, i32* %3, align 4
  %891 = load i32, i32* %2, align 4
  %892 = icmp ugt i32 %891, 1
  br i1 %892, label %1618, label %1745

893:                                              ; preds = %884, %881
  %894 = tail call i32 @strncmp(i8* %874, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), i64 7) #9
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %896, label %900

896:                                              ; preds = %893
  %897 = getelementptr inbounds i8, i8* %0, i64 8
  %898 = load i8, i8* %897, align 1
  switch i8 %898, label %900 [
    i8 0, label %899
    i8 45, label %899
  ]

899:                                              ; preds = %896, %896
  store i32 1514689312, i32* %3, align 4
  br label %1745

900:                                              ; preds = %896, %893
  %901 = tail call i32 @strncmp(i8* %874, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), i64 7) #9
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %903, label %907

903:                                              ; preds = %900
  %904 = getelementptr inbounds i8, i8* %0, i64 8
  %905 = load i8, i8* %904, align 1
  switch i8 %905, label %907 [
    i8 0, label %906
    i8 45, label %906
  ]

906:                                              ; preds = %903, %903
  store i32 1514689568, i32* %3, align 4
  br label %1745

907:                                              ; preds = %903, %900
  %908 = tail call i32 @strncmp(i8* %874, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i64 6) #9
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %914

910:                                              ; preds = %907
  %911 = getelementptr inbounds i8, i8* %0, i64 7
  %912 = load i8, i8* %911, align 1
  switch i8 %912, label %914 [
    i8 0, label %913
    i8 45, label %913
  ]

913:                                              ; preds = %910, %910
  store i32 1230132256, i32* %3, align 4
  br label %1745

914:                                              ; preds = %910, %907
  %915 = tail call i32 @strncmp(i8* %874, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i64 0, i64 0), i64 3) #9
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %917, label %1648

917:                                              ; preds = %914, %923
  %918 = phi i8* [ %924, %923 ], [ %0, %914 ]
  %919 = tail call i8* @strstr(i8* %918, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %920 = icmp ne i8* %919, null
  %921 = icmp ult i8* %919, %1
  %922 = and i1 %920, %921
  br i1 %922, label %923, label %933

923:                                              ; preds = %917
  %924 = getelementptr inbounds i8, i8* %919, i64 3
  %925 = load i8, i8* %924, align 1
  %926 = and i8 %925, -33
  %927 = add i8 %926, -65
  %928 = icmp ult i8 %927, 26
  %929 = add i8 %925, -48
  %930 = icmp ult i8 %929, 10
  %931 = or i1 %930, %928
  br i1 %931, label %917, label %932

932:                                              ; preds = %923
  store i32 1514686496, i32* %3, align 4
  br label %1745

933:                                              ; preds = %917, %939
  %934 = phi i8* [ %940, %939 ], [ %0, %917 ]
  %935 = tail call i8* @strstr(i8* %934, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %936 = icmp ne i8* %935, null
  %937 = icmp ult i8* %935, %1
  %938 = and i1 %936, %937
  br i1 %938, label %939, label %954

939:                                              ; preds = %933
  %940 = getelementptr inbounds i8, i8* %935, i64 3
  %941 = load i8, i8* %940, align 1
  %942 = and i8 %941, -33
  %943 = add i8 %942, -65
  %944 = icmp ult i8 %943, 26
  %945 = add i8 %941, -48
  %946 = icmp ult i8 %945, 10
  %947 = or i1 %946, %944
  br i1 %947, label %933, label %948

948:                                              ; preds = %939
  %949 = load i32, i32* %2, align 4
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %1745, label %951

951:                                              ; preds = %948
  store i32 1514689613, i32* %3, align 4
  %952 = load i32, i32* %2, align 4
  %953 = icmp ugt i32 %952, 1
  br i1 %953, label %1616, label %1745

954:                                              ; preds = %933, %960
  %955 = phi i8* [ %961, %960 ], [ %0, %933 ]
  %956 = tail call i8* @strstr(i8* %955, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %957 = icmp ne i8* %956, null
  %958 = icmp ult i8* %956, %1
  %959 = and i1 %957, %958
  br i1 %959, label %960, label %1648

960:                                              ; preds = %954
  %961 = getelementptr inbounds i8, i8* %956, i64 3
  %962 = load i8, i8* %961, align 1
  %963 = and i8 %962, -33
  %964 = add i8 %963, -65
  %965 = icmp ult i8 %964, 26
  %966 = add i8 %962, -48
  %967 = icmp ult i8 %966, 10
  %968 = or i1 %967, %965
  br i1 %968, label %954, label %969

969:                                              ; preds = %960
  store i32 1514689568, i32* %3, align 4
  br label %1745

970:                                              ; preds = %152
  %971 = getelementptr inbounds i8, i8* %0, i64 1
  %972 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i64 0, i64 0), i64 10) #9
  %973 = icmp eq i32 %972, 0
  br i1 %973, label %974, label %978

974:                                              ; preds = %970
  %975 = getelementptr inbounds i8, i8* %0, i64 11
  %976 = load i8, i8* %975, align 1
  switch i8 %976, label %978 [
    i8 0, label %977
    i8 45, label %977
  ]

977:                                              ; preds = %974, %974
  store i32 1514686496, i32* %3, align 4
  br label %1745

978:                                              ; preds = %974, %970
  %979 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0), i64 10) #9
  %980 = icmp eq i32 %979, 0
  br i1 %980, label %981, label %990

981:                                              ; preds = %978
  %982 = getelementptr inbounds i8, i8* %0, i64 11
  %983 = load i8, i8* %982, align 1
  switch i8 %983, label %990 [
    i8 45, label %984
    i8 0, label %984
  ]

984:                                              ; preds = %981, %981
  %985 = load i32, i32* %2, align 4
  %986 = icmp eq i32 %985, 0
  br i1 %986, label %1745, label %987

987:                                              ; preds = %984
  store i32 1514689613, i32* %3, align 4
  %988 = load i32, i32* %2, align 4
  %989 = icmp ugt i32 %988, 1
  br i1 %989, label %1626, label %1745

990:                                              ; preds = %981, %978
  %991 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), i64 10) #9
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %993, label %997

993:                                              ; preds = %990
  %994 = getelementptr inbounds i8, i8* %0, i64 11
  %995 = load i8, i8* %994, align 1
  switch i8 %995, label %997 [
    i8 0, label %996
    i8 45, label %996
  ]

996:                                              ; preds = %993, %993
  store i32 1514686496, i32* %3, align 4
  br label %1745

997:                                              ; preds = %993, %990
  %998 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i64 0, i64 0), i64 10) #9
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1009

1000:                                             ; preds = %997
  %1001 = getelementptr inbounds i8, i8* %0, i64 11
  %1002 = load i8, i8* %1001, align 1
  switch i8 %1002, label %1009 [
    i8 45, label %1003
    i8 0, label %1003
  ]

1003:                                             ; preds = %1000, %1000
  %1004 = load i32, i32* %2, align 4
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1745, label %1006

1006:                                             ; preds = %1003
  store i32 1514689613, i32* %3, align 4
  %1007 = load i32, i32* %2, align 4
  %1008 = icmp ugt i32 %1007, 1
  br i1 %1008, label %1624, label %1745

1009:                                             ; preds = %1000, %997
  %1010 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i64 7) #9
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %1012, label %1016

1012:                                             ; preds = %1009
  %1013 = getelementptr inbounds i8, i8* %0, i64 8
  %1014 = load i8, i8* %1013, align 1
  switch i8 %1014, label %1016 [
    i8 0, label %1015
    i8 45, label %1015
  ]

1015:                                             ; preds = %1012, %1012
  store i32 1514689312, i32* %3, align 4
  br label %1745

1016:                                             ; preds = %1012, %1009
  %1017 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i64 0, i64 0), i64 7) #9
  %1018 = icmp eq i32 %1017, 0
  br i1 %1018, label %1019, label %1023

1019:                                             ; preds = %1016
  %1020 = getelementptr inbounds i8, i8* %0, i64 8
  %1021 = load i8, i8* %1020, align 1
  switch i8 %1021, label %1023 [
    i8 0, label %1022
    i8 45, label %1022
  ]

1022:                                             ; preds = %1019, %1019
  store i32 1514689568, i32* %3, align 4
  br label %1745

1023:                                             ; preds = %1019, %1016
  %1024 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i64 0, i64 0), i64 7) #9
  %1025 = icmp eq i32 %1024, 0
  br i1 %1025, label %1026, label %1030

1026:                                             ; preds = %1023
  %1027 = getelementptr inbounds i8, i8* %0, i64 8
  %1028 = load i8, i8* %1027, align 1
  switch i8 %1028, label %1030 [
    i8 0, label %1029
    i8 45, label %1029
  ]

1029:                                             ; preds = %1026, %1026
  store i32 1514689312, i32* %3, align 4
  br label %1745

1030:                                             ; preds = %1026, %1023
  %1031 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), i64 7) #9
  %1032 = icmp eq i32 %1031, 0
  br i1 %1032, label %1033, label %1037

1033:                                             ; preds = %1030
  %1034 = getelementptr inbounds i8, i8* %0, i64 8
  %1035 = load i8, i8* %1034, align 1
  switch i8 %1035, label %1037 [
    i8 0, label %1036
    i8 45, label %1036
  ]

1036:                                             ; preds = %1033, %1033
  store i32 1514689568, i32* %3, align 4
  br label %1745

1037:                                             ; preds = %1033, %1030
  %1038 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i64 0, i64 0), i64 3) #9
  %1039 = icmp eq i32 %1038, 0
  br i1 %1039, label %1040, label %1093

1040:                                             ; preds = %1037, %1046
  %1041 = phi i8* [ %1047, %1046 ], [ %0, %1037 ]
  %1042 = tail call i8* @strstr(i8* %1041, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %1043 = icmp ne i8* %1042, null
  %1044 = icmp ult i8* %1042, %1
  %1045 = and i1 %1043, %1044
  br i1 %1045, label %1046, label %1056

1046:                                             ; preds = %1040
  %1047 = getelementptr inbounds i8, i8* %1042, i64 3
  %1048 = load i8, i8* %1047, align 1
  %1049 = and i8 %1048, -33
  %1050 = add i8 %1049, -65
  %1051 = icmp ult i8 %1050, 26
  %1052 = add i8 %1048, -48
  %1053 = icmp ult i8 %1052, 10
  %1054 = or i1 %1053, %1051
  br i1 %1054, label %1040, label %1055

1055:                                             ; preds = %1046
  store i32 1514686496, i32* %3, align 4
  br label %1745

1056:                                             ; preds = %1040, %1062
  %1057 = phi i8* [ %1063, %1062 ], [ %0, %1040 ]
  %1058 = tail call i8* @strstr(i8* %1057, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %1059 = icmp ne i8* %1058, null
  %1060 = icmp ult i8* %1058, %1
  %1061 = and i1 %1059, %1060
  br i1 %1061, label %1062, label %1077

1062:                                             ; preds = %1056
  %1063 = getelementptr inbounds i8, i8* %1058, i64 3
  %1064 = load i8, i8* %1063, align 1
  %1065 = and i8 %1064, -33
  %1066 = add i8 %1065, -65
  %1067 = icmp ult i8 %1066, 26
  %1068 = add i8 %1064, -48
  %1069 = icmp ult i8 %1068, 10
  %1070 = or i1 %1069, %1067
  br i1 %1070, label %1056, label %1071

1071:                                             ; preds = %1062
  %1072 = load i32, i32* %2, align 4
  %1073 = icmp eq i32 %1072, 0
  br i1 %1073, label %1745, label %1074

1074:                                             ; preds = %1071
  store i32 1514689613, i32* %3, align 4
  %1075 = load i32, i32* %2, align 4
  %1076 = icmp ugt i32 %1075, 1
  br i1 %1076, label %1620, label %1745

1077:                                             ; preds = %1056, %1083
  %1078 = phi i8* [ %1084, %1083 ], [ %0, %1056 ]
  %1079 = tail call i8* @strstr(i8* %1078, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %1080 = icmp ne i8* %1079, null
  %1081 = icmp ult i8* %1079, %1
  %1082 = and i1 %1080, %1081
  br i1 %1082, label %1083, label %1093

1083:                                             ; preds = %1077
  %1084 = getelementptr inbounds i8, i8* %1079, i64 3
  %1085 = load i8, i8* %1084, align 1
  %1086 = and i8 %1085, -33
  %1087 = add i8 %1086, -65
  %1088 = icmp ult i8 %1087, 26
  %1089 = add i8 %1085, -48
  %1090 = icmp ult i8 %1089, 10
  %1091 = or i1 %1090, %1088
  br i1 %1091, label %1077, label %1092

1092:                                             ; preds = %1083
  store i32 1514689568, i32* %3, align 4
  br label %1745

1093:                                             ; preds = %1077, %1037
  %1094 = tail call i32 @strncmp(i8* %971, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i64 0, i64 0), i64 3) #9
  %1095 = icmp eq i32 %1094, 0
  br i1 %1095, label %1096, label %1648

1096:                                             ; preds = %1093, %1102
  %1097 = phi i8* [ %1103, %1102 ], [ %0, %1093 ]
  %1098 = tail call i8* @strstr(i8* %1097, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %1099 = icmp ne i8* %1098, null
  %1100 = icmp ult i8* %1098, %1
  %1101 = and i1 %1099, %1100
  br i1 %1101, label %1102, label %1112

1102:                                             ; preds = %1096
  %1103 = getelementptr inbounds i8, i8* %1098, i64 3
  %1104 = load i8, i8* %1103, align 1
  %1105 = and i8 %1104, -33
  %1106 = add i8 %1105, -65
  %1107 = icmp ult i8 %1106, 26
  %1108 = add i8 %1104, -48
  %1109 = icmp ult i8 %1108, 10
  %1110 = or i1 %1109, %1107
  br i1 %1110, label %1096, label %1111

1111:                                             ; preds = %1102
  store i32 1514686496, i32* %3, align 4
  br label %1745

1112:                                             ; preds = %1096, %1118
  %1113 = phi i8* [ %1119, %1118 ], [ %0, %1096 ]
  %1114 = tail call i8* @strstr(i8* %1113, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %1115 = icmp ne i8* %1114, null
  %1116 = icmp ult i8* %1114, %1
  %1117 = and i1 %1115, %1116
  br i1 %1117, label %1118, label %1133

1118:                                             ; preds = %1112
  %1119 = getelementptr inbounds i8, i8* %1114, i64 3
  %1120 = load i8, i8* %1119, align 1
  %1121 = and i8 %1120, -33
  %1122 = add i8 %1121, -65
  %1123 = icmp ult i8 %1122, 26
  %1124 = add i8 %1120, -48
  %1125 = icmp ult i8 %1124, 10
  %1126 = or i1 %1125, %1123
  br i1 %1126, label %1112, label %1127

1127:                                             ; preds = %1118
  %1128 = load i32, i32* %2, align 4
  %1129 = icmp eq i32 %1128, 0
  br i1 %1129, label %1745, label %1130

1130:                                             ; preds = %1127
  store i32 1514689613, i32* %3, align 4
  %1131 = load i32, i32* %2, align 4
  %1132 = icmp ugt i32 %1131, 1
  br i1 %1132, label %1622, label %1745

1133:                                             ; preds = %1112, %1139
  %1134 = phi i8* [ %1140, %1139 ], [ %0, %1112 ]
  %1135 = tail call i8* @strstr(i8* %1134, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %1136 = icmp ne i8* %1135, null
  %1137 = icmp ult i8* %1135, %1
  %1138 = and i1 %1136, %1137
  br i1 %1138, label %1139, label %1648

1139:                                             ; preds = %1133
  %1140 = getelementptr inbounds i8, i8* %1135, i64 3
  %1141 = load i8, i8* %1140, align 1
  %1142 = and i8 %1141, -33
  %1143 = add i8 %1142, -65
  %1144 = icmp ult i8 %1143, 26
  %1145 = add i8 %1141, -48
  %1146 = icmp ult i8 %1145, 10
  %1147 = or i1 %1146, %1144
  br i1 %1147, label %1133, label %1148

1148:                                             ; preds = %1139
  store i32 1514689568, i32* %3, align 4
  br label %1745

1149:                                             ; preds = %152
  %1150 = getelementptr inbounds i8, i8* %0, i64 1
  %1151 = tail call i32 @strcmp(i8* %1150, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i64 0, i64 0)) #9
  %1152 = icmp eq i32 %1151, 0
  br i1 %1152, label %1153, label %1159

1153:                                             ; preds = %1149
  %1154 = load i32, i32* %2, align 4
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1745, label %1156

1156:                                             ; preds = %1153
  store i32 1312904736, i32* %3, align 4
  %1157 = load i32, i32* %2, align 4
  %1158 = icmp ugt i32 %1157, 1
  br i1 %1158, label %1628, label %1745

1159:                                             ; preds = %1149
  %1160 = tail call i32 @strcmp(i8* %1150, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0)) #9
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1162, label %1163

1162:                                             ; preds = %1159
  store i32 1514689312, i32* %3, align 4
  br label %1745

1163:                                             ; preds = %1159
  %1164 = tail call i32 @strcmp(i8* %1150, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.96, i64 0, i64 0)) #9
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1166, label %1648

1166:                                             ; preds = %1163
  store i32 1280596512, i32* %3, align 4
  br label %1745

1167:                                             ; preds = %152
  %1168 = getelementptr inbounds i8, i8* %0, i64 1
  %1169 = tail call i32 @strncmp(i8* %1168, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0), i64 7) #9
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1171, label %1648

1171:                                             ; preds = %1167
  %1172 = getelementptr inbounds i8, i8* %0, i64 8
  %1173 = load i8, i8* %1172, align 1
  switch i8 %1173, label %1648 [
    i8 0, label %1174
    i8 45, label %1174
  ]

1174:                                             ; preds = %1171, %1171
  store i32 1514689312, i32* %3, align 4
  br label %1745

1175:                                             ; preds = %152
  %1176 = getelementptr inbounds i8, i8* %0, i64 1
  %1177 = tail call i32 @strncmp(i8* %1176, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i64 10) #9
  %1178 = icmp eq i32 %1177, 0
  br i1 %1178, label %1179, label %1183

1179:                                             ; preds = %1175
  %1180 = getelementptr inbounds i8, i8* %0, i64 11
  %1181 = load i8, i8* %1180, align 1
  switch i8 %1181, label %1183 [
    i8 0, label %1182
    i8 45, label %1182
  ]

1182:                                             ; preds = %1179, %1179
  store i32 1514686496, i32* %3, align 4
  br label %1745

1183:                                             ; preds = %1179, %1175
  %1184 = tail call i32 @strncmp(i8* %1176, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 10) #9
  %1185 = icmp eq i32 %1184, 0
  br i1 %1185, label %1186, label %1195

1186:                                             ; preds = %1183
  %1187 = getelementptr inbounds i8, i8* %0, i64 11
  %1188 = load i8, i8* %1187, align 1
  switch i8 %1188, label %1195 [
    i8 45, label %1189
    i8 0, label %1189
  ]

1189:                                             ; preds = %1186, %1186
  %1190 = load i32, i32* %2, align 4
  %1191 = icmp eq i32 %1190, 0
  br i1 %1191, label %1745, label %1192

1192:                                             ; preds = %1189
  store i32 1514689613, i32* %3, align 4
  %1193 = load i32, i32* %2, align 4
  %1194 = icmp ugt i32 %1193, 1
  br i1 %1194, label %1632, label %1745

1195:                                             ; preds = %1186, %1183
  %1196 = tail call i32 @strncmp(i8* %1176, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), i64 7) #9
  %1197 = icmp eq i32 %1196, 0
  br i1 %1197, label %1198, label %1202

1198:                                             ; preds = %1195
  %1199 = getelementptr inbounds i8, i8* %0, i64 8
  %1200 = load i8, i8* %1199, align 1
  switch i8 %1200, label %1202 [
    i8 0, label %1201
    i8 45, label %1201
  ]

1201:                                             ; preds = %1198, %1198
  store i32 1514689312, i32* %3, align 4
  br label %1745

1202:                                             ; preds = %1198, %1195
  %1203 = tail call i32 @strncmp(i8* %1176, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i64 7) #9
  %1204 = icmp eq i32 %1203, 0
  br i1 %1204, label %1205, label %1209

1205:                                             ; preds = %1202
  %1206 = getelementptr inbounds i8, i8* %0, i64 8
  %1207 = load i8, i8* %1206, align 1
  switch i8 %1207, label %1209 [
    i8 0, label %1208
    i8 45, label %1208
  ]

1208:                                             ; preds = %1205, %1205
  store i32 1514689568, i32* %3, align 4
  br label %1745

1209:                                             ; preds = %1205, %1202
  %1210 = tail call i32 @strncmp(i8* %1176, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), i64 3) #9
  %1211 = icmp eq i32 %1210, 0
  br i1 %1211, label %1212, label %1648

1212:                                             ; preds = %1209, %1218
  %1213 = phi i8* [ %1219, %1218 ], [ %0, %1209 ]
  %1214 = tail call i8* @strstr(i8* %1213, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %1215 = icmp ne i8* %1214, null
  %1216 = icmp ult i8* %1214, %1
  %1217 = and i1 %1215, %1216
  br i1 %1217, label %1218, label %1228

1218:                                             ; preds = %1212
  %1219 = getelementptr inbounds i8, i8* %1214, i64 3
  %1220 = load i8, i8* %1219, align 1
  %1221 = and i8 %1220, -33
  %1222 = add i8 %1221, -65
  %1223 = icmp ult i8 %1222, 26
  %1224 = add i8 %1220, -48
  %1225 = icmp ult i8 %1224, 10
  %1226 = or i1 %1225, %1223
  br i1 %1226, label %1212, label %1227

1227:                                             ; preds = %1218
  store i32 1514686496, i32* %3, align 4
  br label %1745

1228:                                             ; preds = %1212, %1234
  %1229 = phi i8* [ %1235, %1234 ], [ %0, %1212 ]
  %1230 = tail call i8* @strstr(i8* %1229, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %1231 = icmp ne i8* %1230, null
  %1232 = icmp ult i8* %1230, %1
  %1233 = and i1 %1231, %1232
  br i1 %1233, label %1234, label %1249

1234:                                             ; preds = %1228
  %1235 = getelementptr inbounds i8, i8* %1230, i64 3
  %1236 = load i8, i8* %1235, align 1
  %1237 = and i8 %1236, -33
  %1238 = add i8 %1237, -65
  %1239 = icmp ult i8 %1238, 26
  %1240 = add i8 %1236, -48
  %1241 = icmp ult i8 %1240, 10
  %1242 = or i1 %1241, %1239
  br i1 %1242, label %1228, label %1243

1243:                                             ; preds = %1234
  %1244 = load i32, i32* %2, align 4
  %1245 = icmp eq i32 %1244, 0
  br i1 %1245, label %1745, label %1246

1246:                                             ; preds = %1243
  store i32 1514689613, i32* %3, align 4
  %1247 = load i32, i32* %2, align 4
  %1248 = icmp ugt i32 %1247, 1
  br i1 %1248, label %1630, label %1745

1249:                                             ; preds = %1228, %1255
  %1250 = phi i8* [ %1256, %1255 ], [ %0, %1228 ]
  %1251 = tail call i8* @strstr(i8* %1250, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %1252 = icmp ne i8* %1251, null
  %1253 = icmp ult i8* %1251, %1
  %1254 = and i1 %1252, %1253
  br i1 %1254, label %1255, label %1648

1255:                                             ; preds = %1249
  %1256 = getelementptr inbounds i8, i8* %1251, i64 3
  %1257 = load i8, i8* %1256, align 1
  %1258 = and i8 %1257, -33
  %1259 = add i8 %1258, -65
  %1260 = icmp ult i8 %1259, 26
  %1261 = add i8 %1257, -48
  %1262 = icmp ult i8 %1261, 10
  %1263 = or i1 %1262, %1260
  br i1 %1263, label %1249, label %1264

1264:                                             ; preds = %1255
  store i32 1514689568, i32* %3, align 4
  br label %1745

1265:                                             ; preds = %152
  %1266 = getelementptr inbounds i8, i8* %0, i64 1
  %1267 = tail call i32 @strncmp(i8* %1266, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0), i64 10) #9
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1273

1269:                                             ; preds = %1265
  %1270 = getelementptr inbounds i8, i8* %0, i64 11
  %1271 = load i8, i8* %1270, align 1
  switch i8 %1271, label %1273 [
    i8 0, label %1272
    i8 45, label %1272
  ]

1272:                                             ; preds = %1269, %1269
  store i32 1514686496, i32* %3, align 4
  br label %1745

1273:                                             ; preds = %1269, %1265
  %1274 = tail call i32 @strncmp(i8* %1266, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0), i64 10) #9
  %1275 = icmp eq i32 %1274, 0
  br i1 %1275, label %1276, label %1285

1276:                                             ; preds = %1273
  %1277 = getelementptr inbounds i8, i8* %0, i64 11
  %1278 = load i8, i8* %1277, align 1
  switch i8 %1278, label %1285 [
    i8 45, label %1279
    i8 0, label %1279
  ]

1279:                                             ; preds = %1276, %1276
  %1280 = load i32, i32* %2, align 4
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1745, label %1282

1282:                                             ; preds = %1279
  store i32 1514689613, i32* %3, align 4
  %1283 = load i32, i32* %2, align 4
  %1284 = icmp ugt i32 %1283, 1
  br i1 %1284, label %1638, label %1745

1285:                                             ; preds = %1276, %1273
  %1286 = tail call i32 @strncmp(i8* %1266, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), i64 7) #9
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1288, label %1292

1288:                                             ; preds = %1285
  %1289 = getelementptr inbounds i8, i8* %0, i64 8
  %1290 = load i8, i8* %1289, align 1
  switch i8 %1290, label %1292 [
    i8 0, label %1291
    i8 45, label %1291
  ]

1291:                                             ; preds = %1288, %1288
  store i32 1514689312, i32* %3, align 4
  br label %1745

1292:                                             ; preds = %1288, %1285
  %1293 = tail call i32 @strncmp(i8* %1266, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), i64 7) #9
  %1294 = icmp eq i32 %1293, 0
  br i1 %1294, label %1295, label %1299

1295:                                             ; preds = %1292
  %1296 = getelementptr inbounds i8, i8* %0, i64 8
  %1297 = load i8, i8* %1296, align 1
  switch i8 %1297, label %1299 [
    i8 0, label %1298
    i8 45, label %1298
  ]

1298:                                             ; preds = %1295, %1295
  store i32 1514689568, i32* %3, align 4
  br label %1745

1299:                                             ; preds = %1295, %1292
  %1300 = tail call i32 @strncmp(i8* %1266, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i64 0, i64 0), i64 3) #9
  %1301 = icmp eq i32 %1300, 0
  br i1 %1301, label %1302, label %1355

1302:                                             ; preds = %1299, %1308
  %1303 = phi i8* [ %1309, %1308 ], [ %0, %1299 ]
  %1304 = tail call i8* @strstr(i8* %1303, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %1305 = icmp ne i8* %1304, null
  %1306 = icmp ult i8* %1304, %1
  %1307 = and i1 %1305, %1306
  br i1 %1307, label %1308, label %1318

1308:                                             ; preds = %1302
  %1309 = getelementptr inbounds i8, i8* %1304, i64 3
  %1310 = load i8, i8* %1309, align 1
  %1311 = and i8 %1310, -33
  %1312 = add i8 %1311, -65
  %1313 = icmp ult i8 %1312, 26
  %1314 = add i8 %1310, -48
  %1315 = icmp ult i8 %1314, 10
  %1316 = or i1 %1315, %1313
  br i1 %1316, label %1302, label %1317

1317:                                             ; preds = %1308
  store i32 1514686496, i32* %3, align 4
  br label %1745

1318:                                             ; preds = %1302, %1324
  %1319 = phi i8* [ %1325, %1324 ], [ %0, %1302 ]
  %1320 = tail call i8* @strstr(i8* %1319, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %1321 = icmp ne i8* %1320, null
  %1322 = icmp ult i8* %1320, %1
  %1323 = and i1 %1321, %1322
  br i1 %1323, label %1324, label %1339

1324:                                             ; preds = %1318
  %1325 = getelementptr inbounds i8, i8* %1320, i64 3
  %1326 = load i8, i8* %1325, align 1
  %1327 = and i8 %1326, -33
  %1328 = add i8 %1327, -65
  %1329 = icmp ult i8 %1328, 26
  %1330 = add i8 %1326, -48
  %1331 = icmp ult i8 %1330, 10
  %1332 = or i1 %1331, %1329
  br i1 %1332, label %1318, label %1333

1333:                                             ; preds = %1324
  %1334 = load i32, i32* %2, align 4
  %1335 = icmp eq i32 %1334, 0
  br i1 %1335, label %1745, label %1336

1336:                                             ; preds = %1333
  store i32 1514689613, i32* %3, align 4
  %1337 = load i32, i32* %2, align 4
  %1338 = icmp ugt i32 %1337, 1
  br i1 %1338, label %1634, label %1745

1339:                                             ; preds = %1318, %1345
  %1340 = phi i8* [ %1346, %1345 ], [ %0, %1318 ]
  %1341 = tail call i8* @strstr(i8* %1340, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %1342 = icmp ne i8* %1341, null
  %1343 = icmp ult i8* %1341, %1
  %1344 = and i1 %1342, %1343
  br i1 %1344, label %1345, label %1355

1345:                                             ; preds = %1339
  %1346 = getelementptr inbounds i8, i8* %1341, i64 3
  %1347 = load i8, i8* %1346, align 1
  %1348 = and i8 %1347, -33
  %1349 = add i8 %1348, -65
  %1350 = icmp ult i8 %1349, 26
  %1351 = add i8 %1347, -48
  %1352 = icmp ult i8 %1351, 10
  %1353 = or i1 %1352, %1350
  br i1 %1353, label %1339, label %1354

1354:                                             ; preds = %1345
  store i32 1514689568, i32* %3, align 4
  br label %1745

1355:                                             ; preds = %1339, %1299
  %1356 = tail call i32 @strcmp(i8* %1266, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i64 0, i64 0)) #9
  %1357 = icmp eq i32 %1356, 0
  br i1 %1357, label %1358, label %1359

1358:                                             ; preds = %1355
  store i32 1313821216, i32* %3, align 4
  br label %1745

1359:                                             ; preds = %1355
  %1360 = tail call i32 @strcmp(i8* %1266, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0)) #9
  %1361 = icmp eq i32 %1360, 0
  br i1 %1361, label %1362, label %1648

1362:                                             ; preds = %1359
  %1363 = load i32, i32* %2, align 4
  %1364 = icmp eq i32 %1363, 0
  br i1 %1364, label %1745, label %1365

1365:                                             ; preds = %1362
  store i32 1314475552, i32* %3, align 4
  %1366 = load i32, i32* %2, align 4
  %1367 = icmp ugt i32 %1366, 1
  br i1 %1367, label %1636, label %1745

1368:                                             ; preds = %152
  %1369 = getelementptr inbounds i8, i8* %0, i64 1
  %1370 = tail call i32 @strncmp(i8* %1369, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i64 0, i64 0), i64 2) #9
  %1371 = icmp eq i32 %1370, 0
  br i1 %1371, label %1372, label %1648

1372:                                             ; preds = %1368, %1378
  %1373 = phi i8* [ %1379, %1378 ], [ %0, %1368 ]
  %1374 = tail call i8* @strstr(i8* %1373, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0)) #9
  %1375 = icmp ne i8* %1374, null
  %1376 = icmp ult i8* %1374, %1
  %1377 = and i1 %1375, %1376
  br i1 %1377, label %1378, label %1648

1378:                                             ; preds = %1372
  %1379 = getelementptr inbounds i8, i8* %1374, i64 3
  %1380 = load i8, i8* %1379, align 1
  %1381 = and i8 %1380, -33
  %1382 = add i8 %1381, -65
  %1383 = icmp ult i8 %1382, 26
  %1384 = add i8 %1380, -48
  %1385 = icmp ult i8 %1384, 10
  %1386 = or i1 %1385, %1383
  br i1 %1386, label %1372, label %1387

1387:                                             ; preds = %1378
  store i32 1297042464, i32* %3, align 4
  br label %1745

1388:                                             ; preds = %152
  %1389 = getelementptr inbounds i8, i8* %0, i64 1
  %1390 = tail call i32 @strncmp(i8* %1389, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i64 0, i64 0), i64 10) #9
  %1391 = icmp eq i32 %1390, 0
  br i1 %1391, label %1392, label %1396

1392:                                             ; preds = %1388
  %1393 = getelementptr inbounds i8, i8* %0, i64 11
  %1394 = load i8, i8* %1393, align 1
  switch i8 %1394, label %1396 [
    i8 0, label %1395
    i8 45, label %1395
  ]

1395:                                             ; preds = %1392, %1392
  store i32 1514686496, i32* %3, align 4
  br label %1745

1396:                                             ; preds = %1392, %1388
  %1397 = tail call i32 @strncmp(i8* %1389, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i64 0, i64 0), i64 10) #9
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1399, label %1408

1399:                                             ; preds = %1396
  %1400 = getelementptr inbounds i8, i8* %0, i64 11
  %1401 = load i8, i8* %1400, align 1
  switch i8 %1401, label %1408 [
    i8 45, label %1402
    i8 0, label %1402
  ]

1402:                                             ; preds = %1399, %1399
  %1403 = load i32, i32* %2, align 4
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1745, label %1405

1405:                                             ; preds = %1402
  store i32 1514689613, i32* %3, align 4
  %1406 = load i32, i32* %2, align 4
  %1407 = icmp ugt i32 %1406, 1
  br i1 %1407, label %1642, label %1745

1408:                                             ; preds = %1399, %1396
  %1409 = tail call i32 @strncmp(i8* %1389, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.109, i64 0, i64 0), i64 7) #9
  %1410 = icmp eq i32 %1409, 0
  br i1 %1410, label %1411, label %1415

1411:                                             ; preds = %1408
  %1412 = getelementptr inbounds i8, i8* %0, i64 8
  %1413 = load i8, i8* %1412, align 1
  switch i8 %1413, label %1415 [
    i8 0, label %1414
    i8 45, label %1414
  ]

1414:                                             ; preds = %1411, %1411
  store i32 1514689312, i32* %3, align 4
  br label %1745

1415:                                             ; preds = %1411, %1408
  %1416 = tail call i32 @strncmp(i8* %1389, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i64 0, i64 0), i64 7) #9
  %1417 = icmp eq i32 %1416, 0
  br i1 %1417, label %1418, label %1422

1418:                                             ; preds = %1415
  %1419 = getelementptr inbounds i8, i8* %0, i64 8
  %1420 = load i8, i8* %1419, align 1
  switch i8 %1420, label %1422 [
    i8 0, label %1421
    i8 45, label %1421
  ]

1421:                                             ; preds = %1418, %1418
  store i32 1514689568, i32* %3, align 4
  br label %1745

1422:                                             ; preds = %1418, %1415
  %1423 = tail call i32 @strncmp(i8* %1389, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i64 0, i64 0), i64 3) #9
  %1424 = icmp eq i32 %1423, 0
  br i1 %1424, label %1425, label %1648

1425:                                             ; preds = %1422, %1431
  %1426 = phi i8* [ %1432, %1431 ], [ %0, %1422 ]
  %1427 = tail call i8* @strstr(i8* %1426, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %1428 = icmp ne i8* %1427, null
  %1429 = icmp ult i8* %1427, %1
  %1430 = and i1 %1428, %1429
  br i1 %1430, label %1431, label %1441

1431:                                             ; preds = %1425
  %1432 = getelementptr inbounds i8, i8* %1427, i64 3
  %1433 = load i8, i8* %1432, align 1
  %1434 = and i8 %1433, -33
  %1435 = add i8 %1434, -65
  %1436 = icmp ult i8 %1435, 26
  %1437 = add i8 %1433, -48
  %1438 = icmp ult i8 %1437, 10
  %1439 = or i1 %1438, %1436
  br i1 %1439, label %1425, label %1440

1440:                                             ; preds = %1431
  store i32 1514686496, i32* %3, align 4
  br label %1745

1441:                                             ; preds = %1425, %1447
  %1442 = phi i8* [ %1448, %1447 ], [ %0, %1425 ]
  %1443 = tail call i8* @strstr(i8* %1442, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %1444 = icmp ne i8* %1443, null
  %1445 = icmp ult i8* %1443, %1
  %1446 = and i1 %1444, %1445
  br i1 %1446, label %1447, label %1462

1447:                                             ; preds = %1441
  %1448 = getelementptr inbounds i8, i8* %1443, i64 3
  %1449 = load i8, i8* %1448, align 1
  %1450 = and i8 %1449, -33
  %1451 = add i8 %1450, -65
  %1452 = icmp ult i8 %1451, 26
  %1453 = add i8 %1449, -48
  %1454 = icmp ult i8 %1453, 10
  %1455 = or i1 %1454, %1452
  br i1 %1455, label %1441, label %1456

1456:                                             ; preds = %1447
  %1457 = load i32, i32* %2, align 4
  %1458 = icmp eq i32 %1457, 0
  br i1 %1458, label %1745, label %1459

1459:                                             ; preds = %1456
  store i32 1514689613, i32* %3, align 4
  %1460 = load i32, i32* %2, align 4
  %1461 = icmp ugt i32 %1460, 1
  br i1 %1461, label %1640, label %1745

1462:                                             ; preds = %1441, %1468
  %1463 = phi i8* [ %1469, %1468 ], [ %0, %1441 ]
  %1464 = tail call i8* @strstr(i8* %1463, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %1465 = icmp ne i8* %1464, null
  %1466 = icmp ult i8* %1464, %1
  %1467 = and i1 %1465, %1466
  br i1 %1467, label %1468, label %1648

1468:                                             ; preds = %1462
  %1469 = getelementptr inbounds i8, i8* %1464, i64 3
  %1470 = load i8, i8* %1469, align 1
  %1471 = and i8 %1470, -33
  %1472 = add i8 %1471, -65
  %1473 = icmp ult i8 %1472, 26
  %1474 = add i8 %1470, -48
  %1475 = icmp ult i8 %1474, 10
  %1476 = or i1 %1475, %1473
  br i1 %1476, label %1462, label %1477

1477:                                             ; preds = %1468
  store i32 1514689568, i32* %3, align 4
  br label %1745

1478:                                             ; preds = %152
  %1479 = getelementptr inbounds i8, i8* %0, i64 1
  %1480 = tail call i32 @strncmp(i8* %1479, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i64 0, i64 0), i64 7) #9
  %1481 = icmp eq i32 %1480, 0
  br i1 %1481, label %1482, label %1648

1482:                                             ; preds = %1478
  %1483 = getelementptr inbounds i8, i8* %0, i64 8
  %1484 = load i8, i8* %1483, align 1
  switch i8 %1484, label %1648 [
    i8 0, label %1485
    i8 45, label %1485
  ]

1485:                                             ; preds = %1482, %1482
  store i32 1514689312, i32* %3, align 4
  br label %1745

1486:                                             ; preds = %152
  %1487 = getelementptr inbounds i8, i8* %0, i64 1
  %1488 = tail call i32 @strncmp(i8* %1487, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i64 0, i64 0), i64 9) #9
  %1489 = icmp eq i32 %1488, 0
  br i1 %1489, label %1490, label %1494

1490:                                             ; preds = %1486
  %1491 = getelementptr inbounds i8, i8* %0, i64 10
  %1492 = load i8, i8* %1491, align 1
  switch i8 %1492, label %1494 [
    i8 0, label %1493
    i8 45, label %1493
  ]

1493:                                             ; preds = %1490, %1490
  store i32 1514686496, i32* %3, align 4
  br label %1745

1494:                                             ; preds = %1490, %1486
  %1495 = tail call i32 @strncmp(i8* %1487, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i64 0, i64 0), i64 9) #9
  %1496 = icmp eq i32 %1495, 0
  br i1 %1496, label %1497, label %1506

1497:                                             ; preds = %1494
  %1498 = getelementptr inbounds i8, i8* %0, i64 10
  %1499 = load i8, i8* %1498, align 1
  switch i8 %1499, label %1506 [
    i8 45, label %1500
    i8 0, label %1500
  ]

1500:                                             ; preds = %1497, %1497
  %1501 = load i32, i32* %2, align 4
  %1502 = icmp eq i32 %1501, 0
  br i1 %1502, label %1745, label %1503

1503:                                             ; preds = %1500
  store i32 1514689613, i32* %3, align 4
  %1504 = load i32, i32* %2, align 4
  %1505 = icmp ugt i32 %1504, 1
  br i1 %1505, label %1646, label %1745

1506:                                             ; preds = %1497, %1494
  %1507 = tail call i32 @strcmp(i8* %1487, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i64 0, i64 0)) #9
  %1508 = icmp eq i32 %1507, 0
  br i1 %1508, label %1509, label %1510

1509:                                             ; preds = %1506
  store i32 1514689312, i32* %3, align 4
  br label %1745

1510:                                             ; preds = %1506
  %1511 = tail call i32 @strncmp(i8* %1487, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0), i64 6) #9
  %1512 = icmp eq i32 %1511, 0
  br i1 %1512, label %1513, label %1517

1513:                                             ; preds = %1510
  %1514 = getelementptr inbounds i8, i8* %0, i64 7
  %1515 = load i8, i8* %1514, align 1
  switch i8 %1515, label %1517 [
    i8 0, label %1516
    i8 45, label %1516
  ]

1516:                                             ; preds = %1513, %1513
  store i32 1514689312, i32* %3, align 4
  br label %1745

1517:                                             ; preds = %1513, %1510
  %1518 = tail call i32 @strncmp(i8* %1487, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i64 0, i64 0), i64 6) #9
  %1519 = icmp eq i32 %1518, 0
  br i1 %1519, label %1520, label %1524

1520:                                             ; preds = %1517
  %1521 = getelementptr inbounds i8, i8* %0, i64 7
  %1522 = load i8, i8* %1521, align 1
  switch i8 %1522, label %1524 [
    i8 0, label %1523
    i8 45, label %1523
  ]

1523:                                             ; preds = %1520, %1520
  store i32 1514689568, i32* %3, align 4
  br label %1745

1524:                                             ; preds = %1520, %1517
  %1525 = tail call i32 @strcmp(i8* %1487, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0)) #9
  %1526 = icmp eq i32 %1525, 0
  br i1 %1526, label %1527, label %1528

1527:                                             ; preds = %1524
  store i32 1514689312, i32* %3, align 4
  br label %1745

1528:                                             ; preds = %1524
  %1529 = tail call i32 @strncmp(i8* %1487, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.121, i64 0, i64 0), i64 2) #9
  %1530 = icmp eq i32 %1529, 0
  br i1 %1530, label %1531, label %1648

1531:                                             ; preds = %1528, %1537
  %1532 = phi i8* [ %1538, %1537 ], [ %0, %1528 ]
  %1533 = tail call i8* @strstr(i8* %1532, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)) #9
  %1534 = icmp ne i8* %1533, null
  %1535 = icmp ult i8* %1533, %1
  %1536 = and i1 %1534, %1535
  br i1 %1536, label %1537, label %1547

1537:                                             ; preds = %1531
  %1538 = getelementptr inbounds i8, i8* %1533, i64 3
  %1539 = load i8, i8* %1538, align 1
  %1540 = and i8 %1539, -33
  %1541 = add i8 %1540, -65
  %1542 = icmp ult i8 %1541, 26
  %1543 = add i8 %1539, -48
  %1544 = icmp ult i8 %1543, 10
  %1545 = or i1 %1544, %1542
  br i1 %1545, label %1531, label %1546

1546:                                             ; preds = %1537
  store i32 1514686496, i32* %3, align 4
  br label %1745

1547:                                             ; preds = %1531, %1553
  %1548 = phi i8* [ %1554, %1553 ], [ %0, %1531 ]
  %1549 = tail call i8* @strstr(i8* %1548, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #9
  %1550 = icmp ne i8* %1549, null
  %1551 = icmp ult i8* %1549, %1
  %1552 = and i1 %1550, %1551
  br i1 %1552, label %1553, label %1568

1553:                                             ; preds = %1547
  %1554 = getelementptr inbounds i8, i8* %1549, i64 3
  %1555 = load i8, i8* %1554, align 1
  %1556 = and i8 %1555, -33
  %1557 = add i8 %1556, -65
  %1558 = icmp ult i8 %1557, 26
  %1559 = add i8 %1555, -48
  %1560 = icmp ult i8 %1559, 10
  %1561 = or i1 %1560, %1558
  br i1 %1561, label %1547, label %1562

1562:                                             ; preds = %1553
  %1563 = load i32, i32* %2, align 4
  %1564 = icmp eq i32 %1563, 0
  br i1 %1564, label %1745, label %1565

1565:                                             ; preds = %1562
  store i32 1514689613, i32* %3, align 4
  %1566 = load i32, i32* %2, align 4
  %1567 = icmp ugt i32 %1566, 1
  br i1 %1567, label %1644, label %1745

1568:                                             ; preds = %1547, %1574
  %1569 = phi i8* [ %1575, %1574 ], [ %0, %1547 ]
  %1570 = tail call i8* @strstr(i8* %1569, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)) #9
  %1571 = icmp ne i8* %1570, null
  %1572 = icmp ult i8* %1570, %1
  %1573 = and i1 %1571, %1572
  br i1 %1573, label %1574, label %1648

1574:                                             ; preds = %1568
  %1575 = getelementptr inbounds i8, i8* %1570, i64 3
  %1576 = load i8, i8* %1575, align 1
  %1577 = and i8 %1576, -33
  %1578 = add i8 %1577, -65
  %1579 = icmp ult i8 %1578, 26
  %1580 = add i8 %1576, -48
  %1581 = icmp ult i8 %1580, 10
  %1582 = or i1 %1581, %1579
  br i1 %1582, label %1568, label %1583

1583:                                             ; preds = %1574
  store i32 1514689568, i32* %3, align 4
  br label %1745

1584:                                             ; preds = %462
  %1585 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1585, align 4
  br label %1745

1586:                                             ; preds = %518
  %1587 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1587, align 4
  br label %1745

1588:                                             ; preds = %574
  %1589 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1589, align 4
  br label %1745

1590:                                             ; preds = %630
  %1591 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1591, align 4
  br label %1745

1592:                                             ; preds = %686
  %1593 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1593, align 4
  br label %1745

1594:                                             ; preds = %742
  %1595 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1595, align 4
  br label %1745

1596:                                             ; preds = %798
  %1597 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1597, align 4
  br label %1745

1598:                                             ; preds = %854
  %1599 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1599, align 4
  br label %1745

1600:                                             ; preds = %310
  %1601 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1601, align 4
  br label %1745

1602:                                             ; preds = %291
  %1603 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1603, align 4
  br label %1745

1604:                                             ; preds = %272
  %1605 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1605, align 4
  br label %1745

1606:                                             ; preds = %253
  %1607 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1607, align 4
  br label %1745

1608:                                             ; preds = %234
  %1609 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1609, align 4
  br label %1745

1610:                                             ; preds = %215
  %1611 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1611, align 4
  br label %1745

1612:                                             ; preds = %196
  %1613 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1613, align 4
  br label %1745

1614:                                             ; preds = %177
  %1615 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1615, align 4
  br label %1745

1616:                                             ; preds = %951
  %1617 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1617, align 4
  br label %1745

1618:                                             ; preds = %890
  %1619 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1619, align 4
  br label %1745

1620:                                             ; preds = %1074
  %1621 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1621, align 4
  br label %1745

1622:                                             ; preds = %1130
  %1623 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1623, align 4
  br label %1745

1624:                                             ; preds = %1006
  %1625 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1625, align 4
  br label %1745

1626:                                             ; preds = %987
  %1627 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1627, align 4
  br label %1745

1628:                                             ; preds = %1156
  %1629 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1096042528, i32* %1629, align 4
  br label %1745

1630:                                             ; preds = %1246
  %1631 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1631, align 4
  br label %1745

1632:                                             ; preds = %1192
  %1633 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1633, align 4
  br label %1745

1634:                                             ; preds = %1336
  %1635 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1635, align 4
  br label %1745

1636:                                             ; preds = %1365
  %1637 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1313821216, i32* %1637, align 4
  br label %1745

1638:                                             ; preds = %1282
  %1639 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1639, align 4
  br label %1745

1640:                                             ; preds = %1459
  %1641 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1641, align 4
  br label %1745

1642:                                             ; preds = %1405
  %1643 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1643, align 4
  br label %1745

1644:                                             ; preds = %1565
  %1645 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1645, align 4
  br label %1745

1646:                                             ; preds = %1503
  %1647 = getelementptr inbounds i32, i32* %3, i64 1
  store i32 1514686496, i32* %1647, align 4
  br label %1745

1648:                                             ; preds = %1568, %1462, %1372, %1249, %1133, %954, %857, %1528, %1482, %1478, %1422, %1368, %1359, %1209, %1171, %1167, %1163, %1093, %914, %817, %155, %152
  %1649 = tail call i8* @strchr(i8* %0, i32 45) #9
  %1650 = icmp ne i8* %1649, null
  br i1 %1650, label %1651, label %1676

1651:                                             ; preds = %1648
  %1652 = ptrtoint i8* %1 to i64
  %1653 = ptrtoint i8* %0 to i64
  %1654 = sub i64 %1652, %1653
  %1655 = icmp sgt i64 %1654, 5
  br i1 %1655, label %1656, label %1676

1656:                                             ; preds = %1651
  %1657 = getelementptr inbounds i8, i8* %1649, i64 1
  %1658 = tail call i8* @strchr(i8* %1657, i32 45) #9
  %1659 = icmp eq i8* %1658, null
  br i1 %1659, label %1665, label %1660

1660:                                             ; preds = %1656
  %1661 = ptrtoint i8* %1658 to i64
  %1662 = ptrtoint i8* %1649 to i64
  %1663 = xor i64 %1662, -1
  %1664 = add i64 %1661, %1663
  br label %1667

1665:                                             ; preds = %1656
  %1666 = tail call i64 @strlen(i8* %1657) #9
  br label %1667

1667:                                             ; preds = %1665, %1660
  %1668 = phi i64 [ %1664, %1660 ], [ %1666, %1665 ]
  %1669 = icmp eq i64 %1668, 3
  br i1 %1669, label %1670, label %1676

1670:                                             ; preds = %1667
  %1671 = load i8, i8* %1657, align 1
  %1672 = and i8 %1671, -33
  %1673 = add i8 %1672, -65
  %1674 = icmp ult i8 %1673, 26
  br i1 %1674, label %1675, label %1676

1675:                                             ; preds = %1670
  store i8* %1657, i8** %6, align 8
  br label %1676

1676:                                             ; preds = %1667, %1670, %1675, %1651, %1648
  %1677 = bitcast %struct.hb_sorted_array_t* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1677) #8
  %1678 = getelementptr inbounds %struct.hb_sorted_array_t, %struct.hb_sorted_array_t* %7, i64 0, i32 0, i32 0
  store %struct.LangTag* getelementptr inbounds ([1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 0), %struct.LangTag** %1678, align 8
  %1679 = getelementptr inbounds %struct.hb_sorted_array_t, %struct.hb_sorted_array_t* %7, i64 0, i32 0, i32 1
  %1680 = bitcast i32* %1679 to i64*
  store i64 1396, i64* %1680, align 8
  %1681 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1681) #8
  store i32 -1431655766, i32* %5, align 4
  %1682 = call zeroext i1 @_ZNK17hb_sorted_array_tIK7LangTagE12bsearch_implIPKcEEbRKT_Pj(%struct.hb_sorted_array_t* nonnull %7, i8** nonnull dereferenceable(8) %6, i32* nonnull %5) #8
  br i1 %1682, label %1683, label %1731

1683:                                             ; preds = %1676
  %1684 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1681) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1677) #8
  %1685 = zext i32 %1684 to i64
  br label %1686

1686:                                             ; preds = %1689, %1683
  %1687 = phi i64 [ %1696, %1689 ], [ %1685, %1683 ]
  %1688 = icmp eq i64 %1687, 0
  br i1 %1688, label %1697, label %1689

1689:                                             ; preds = %1686
  %1690 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %1687, i32 0, i64 0
  %1691 = add i64 %1687, 4294967295
  %1692 = and i64 %1691, 4294967295
  %1693 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %1692, i32 0, i64 0
  %1694 = call i32 @strcmp(i8* %1690, i8* %1693) #9
  %1695 = icmp eq i32 %1694, 0
  %1696 = add nsw i64 %1687, -1
  br i1 %1695, label %1686, label %1697

1697:                                             ; preds = %1686, %1689
  %1698 = load i32, i32* %2, align 4
  %1699 = icmp eq i32 %1698, 0
  br i1 %1699, label %1745, label %1700

1700:                                             ; preds = %1697
  %1701 = and i64 %1687, 4294967295
  %1702 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %1701, i32 0, i64 0
  br label %1703

1703:                                             ; preds = %1700, %1718
  %1704 = phi i64 [ 0, %1700 ], [ %1720, %1718 ]
  %1705 = phi i32 [ 0, %1700 ], [ %1721, %1718 ]
  %1706 = add i64 %1704, %1687
  %1707 = trunc i64 %1706 to i32
  %1708 = icmp ult i32 %1707, 1396
  br i1 %1708, label %1709, label %1727

1709:                                             ; preds = %1703
  %1710 = and i64 %1706, 4294967295
  %1711 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %1710, i32 1
  %1712 = load i32, i32* %1711, align 4
  %1713 = icmp eq i32 %1712, 0
  br i1 %1713, label %1725, label %1714

1714:                                             ; preds = %1709
  %1715 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %1710, i32 0, i64 0
  %1716 = call i32 @strcmp(i8* %1715, i8* %1702) #9
  %1717 = icmp eq i32 %1716, 0
  br i1 %1717, label %1718, label %1729

1718:                                             ; preds = %1714
  %1719 = getelementptr inbounds i32, i32* %3, i64 %1704
  store i32 %1712, i32* %1719, align 4
  %1720 = add nuw nsw i64 %1704, 1
  %1721 = add nuw nsw i32 %1705, 1
  %1722 = load i32, i32* %2, align 4
  %1723 = zext i32 %1722 to i64
  %1724 = icmp ult i64 %1720, %1723
  br i1 %1724, label %1703, label %1745

1725:                                             ; preds = %1709
  %1726 = trunc i64 %1704 to i32
  br label %1745

1727:                                             ; preds = %1703
  %1728 = trunc i64 %1704 to i32
  br label %1745

1729:                                             ; preds = %1714
  %1730 = trunc i64 %1704 to i32
  br label %1745

1731:                                             ; preds = %1676
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1681) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1677) #8
  %1732 = load i8*, i8** %6, align 8
  br i1 %1650, label %1736, label %1733

1733:                                             ; preds = %1731
  %1734 = call i64 @strlen(i8* %1732) #9
  %1735 = getelementptr inbounds i8, i8* %1732, i64 %1734
  br label %1736

1736:                                             ; preds = %1731, %1733
  %1737 = phi i8* [ %1735, %1733 ], [ %1649, %1731 ]
  %1738 = ptrtoint i8* %1737 to i64
  %1739 = ptrtoint i8* %1732 to i64
  %1740 = sub i64 %1738, %1739
  %1741 = icmp eq i64 %1740, 3
  br i1 %1741, label %1742, label %1745

1742:                                             ; preds = %1736
  %1743 = call i32 @hb_tag_from_string(i8* %1732, i32 3) #8
  %1744 = and i32 %1743, -538976257
  store i32 %1744, i32* %3, align 4
  br label %1745

1745:                                             ; preds = %1718, %1736, %1697, %1729, %1727, %1725, %1562, %1565, %1644, %1500, %1503, %1646, %1456, %1459, %1640, %1402, %1405, %1642, %1362, %1365, %1636, %1333, %1336, %1634, %1279, %1282, %1638, %1243, %1246, %1630, %1189, %1192, %1632, %1153, %1156, %1628, %1127, %1130, %1622, %1071, %1074, %1620, %1003, %1006, %1624, %984, %987, %1626, %948, %951, %1616, %887, %890, %1618, %851, %854, %1598, %795, %798, %1596, %739, %742, %1594, %683, %686, %1592, %627, %630, %1590, %571, %574, %1588, %515, %518, %1586, %459, %462, %1584, %307, %310, %1600, %288, %291, %1602, %269, %272, %1604, %250, %253, %1606, %231, %234, %1608, %212, %215, %1610, %193, %196, %1612, %174, %177, %1614, %159, %872, %835, %816, %779, %760, %723, %704, %667, %648, %611, %592, %555, %536, %499, %480, %443, %424, %417, %410, %403, %396, %389, %382, %375, %368, %361, %354, %347, %340, %333, %326, %319, %300, %281, %262, %243, %224, %205, %186, %167, %969, %932, %913, %906, %899, %880, %1148, %1111, %1092, %1055, %1036, %1029, %1022, %1015, %996, %977, %1166, %1162, %1174, %1264, %1227, %1208, %1201, %1182, %1358, %1354, %1317, %1298, %1291, %1272, %1387, %1477, %1440, %1421, %1414, %1395, %1485, %1583, %1546, %1527, %1523, %1516, %1509, %1493, %151, %135, %119, %103, %87, %71, %55, %39, %23, %1742
  %1746 = phi i32 [ 1, %159 ], [ 1, %872 ], [ 1, %835 ], [ 1, %816 ], [ 1, %779 ], [ 1, %760 ], [ 1, %723 ], [ 1, %704 ], [ 1, %667 ], [ 1, %648 ], [ 1, %611 ], [ 1, %592 ], [ 1, %555 ], [ 1, %536 ], [ 1, %499 ], [ 1, %480 ], [ 1, %443 ], [ 1, %424 ], [ 1, %417 ], [ 1, %410 ], [ 1, %403 ], [ 1, %396 ], [ 1, %389 ], [ 1, %382 ], [ 1, %375 ], [ 1, %368 ], [ 1, %361 ], [ 1, %354 ], [ 1, %347 ], [ 1, %340 ], [ 1, %333 ], [ 1, %326 ], [ 1, %319 ], [ 1, %300 ], [ 1, %281 ], [ 1, %262 ], [ 1, %243 ], [ 1, %224 ], [ 1, %205 ], [ 1, %186 ], [ 1, %167 ], [ 1, %969 ], [ 1, %932 ], [ 1, %913 ], [ 1, %906 ], [ 1, %899 ], [ 1, %880 ], [ 1, %1148 ], [ 1, %1111 ], [ 1, %1092 ], [ 1, %1055 ], [ 1, %1036 ], [ 1, %1029 ], [ 1, %1022 ], [ 1, %1015 ], [ 1, %996 ], [ 1, %977 ], [ 1, %1166 ], [ 1, %1162 ], [ 1, %1174 ], [ 1, %1264 ], [ 1, %1227 ], [ 1, %1208 ], [ 1, %1201 ], [ 1, %1182 ], [ 1, %1358 ], [ 1, %1354 ], [ 1, %1317 ], [ 1, %1298 ], [ 1, %1291 ], [ 1, %1272 ], [ 1, %1387 ], [ 1, %1477 ], [ 1, %1440 ], [ 1, %1421 ], [ 1, %1414 ], [ 1, %1395 ], [ 1, %1485 ], [ 1, %1583 ], [ 1, %1546 ], [ 1, %1527 ], [ 1, %1523 ], [ 1, %1516 ], [ 1, %1509 ], [ 1, %1493 ], [ 1, %151 ], [ 1, %135 ], [ 1, %119 ], [ 1, %103 ], [ 1, %87 ], [ 1, %71 ], [ 1, %55 ], [ 1, %39 ], [ 1, %23 ], [ 1, %1742 ], [ 0, %174 ], [ 1, %177 ], [ 2, %1614 ], [ 0, %193 ], [ 1, %196 ], [ 2, %1612 ], [ 0, %212 ], [ 1, %215 ], [ 2, %1610 ], [ 0, %231 ], [ 1, %234 ], [ 2, %1608 ], [ 0, %250 ], [ 1, %253 ], [ 2, %1606 ], [ 0, %269 ], [ 1, %272 ], [ 2, %1604 ], [ 0, %288 ], [ 1, %291 ], [ 2, %1602 ], [ 0, %307 ], [ 1, %310 ], [ 2, %1600 ], [ 0, %459 ], [ 1, %462 ], [ 2, %1584 ], [ 0, %515 ], [ 1, %518 ], [ 2, %1586 ], [ 0, %571 ], [ 1, %574 ], [ 2, %1588 ], [ 0, %627 ], [ 1, %630 ], [ 2, %1590 ], [ 0, %683 ], [ 1, %686 ], [ 2, %1592 ], [ 0, %739 ], [ 1, %742 ], [ 2, %1594 ], [ 0, %795 ], [ 1, %798 ], [ 2, %1596 ], [ 0, %851 ], [ 1, %854 ], [ 2, %1598 ], [ 0, %887 ], [ 1, %890 ], [ 2, %1618 ], [ 0, %948 ], [ 1, %951 ], [ 2, %1616 ], [ 0, %984 ], [ 1, %987 ], [ 2, %1626 ], [ 0, %1003 ], [ 1, %1006 ], [ 2, %1624 ], [ 0, %1071 ], [ 1, %1074 ], [ 2, %1620 ], [ 0, %1127 ], [ 1, %1130 ], [ 2, %1622 ], [ 0, %1153 ], [ 1, %1156 ], [ 2, %1628 ], [ 0, %1189 ], [ 1, %1192 ], [ 2, %1632 ], [ 0, %1243 ], [ 1, %1246 ], [ 2, %1630 ], [ 0, %1279 ], [ 1, %1282 ], [ 2, %1638 ], [ 0, %1333 ], [ 1, %1336 ], [ 2, %1634 ], [ 0, %1362 ], [ 1, %1365 ], [ 2, %1636 ], [ 0, %1402 ], [ 1, %1405 ], [ 2, %1642 ], [ 0, %1456 ], [ 1, %1459 ], [ 2, %1640 ], [ 0, %1500 ], [ 1, %1503 ], [ 2, %1646 ], [ 0, %1562 ], [ 1, %1565 ], [ 2, %1644 ], [ 0, %1697 ], [ %1726, %1725 ], [ %1728, %1727 ], [ %1730, %1729 ], [ 0, %1736 ], [ %1721, %1718 ]
  store i32 %1746, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_language_impl_t* @hb_ot_tag_to_language(i32) local_unnamed_addr #0 {
  %2 = alloca [20 x i8], align 16
  %3 = icmp eq i32 %0, 1684434036
  br i1 %3, label %143, label %4

4:                                                ; preds = %1
  switch i32 %0, label %83 [
    i32 1095521312, label %79
    i32 1095782472, label %5
    i32 1095909664, label %6
    i32 1095912224, label %7
    i32 1096042528, label %8
    i32 1111642656, label %9
    i32 1112099616, label %10
    i32 1112820512, label %11
    i32 1129336864, label %12
    i32 1129468448, label %13
    i32 1145524768, label %14
    i32 1145981728, label %15
    i32 1146243360, label %16
    i32 1146768928, label %17
    i32 1163151648, label %18
    i32 1178685984, label %19
    i32 1196379680, label %20
    i32 1213025824, label %21
    i32 1213088800, label %22
    i32 1213809952, label %23
    i32 1229078816, label %24
    i32 1229606688, label %25
    i32 1229870368, label %26
    i32 1229998880, label %27
    i32 1230000200, label %28
    i32 1230132256, label %29
    i32 1246316832, label %30
    i32 1262570528, label %31
    i32 1262961952, label %32
    i32 1263424032, label %33
    i32 1263487008, label %34
    i32 1263487776, label %35
    i32 1263488288, label %36
    i32 1263553568, label %37
    i32 1263685152, label %38
    i32 1263880480, label %39
    i32 1263882784, label %40
    i32 1280657440, label %41
    i32 1280723232, label %42
    i32 1296127776, label %43
    i32 1296844576, label %44
    i32 1296849184, label %45
    i32 1296975648, label %46
    i32 1296976672, label %47
    i32 1297042464, label %48
    i32 1297698336, label %49
    i32 1312901152, label %50
    i32 1313165344, label %51
    i32 1313428256, label %52
    i32 1313821216, label %53
    i32 1330266656, label %54
    i32 1330794272, label %55
    i32 1346458400, label %56
    i32 1346851360, label %57
    i32 1347571488, label %58
    i32 1364543520, label %59
    i32 1364548128, label %60
    i32 1364609312, label %61
    i32 1364674592, label %62
    i32 1380010528, label %63
    i32 1380931872, label %64
    i32 1397836064, label %65
    i32 1397899808, label %66
    i32 1398297632, label %67
    i32 1398362656, label %68
    i32 1398362693, label %69
    i32 1398362698, label %70
    i32 1398362702, label %71
    i32 1414350880, label %72
    i32 1414480928, label %73
    i32 1514686496, label %74
    i32 1514689312, label %75
    i32 1514689568, label %76
    i32 1514689613, label %77
    i32 1515864352, label %78
  ]

5:                                                ; preds = %4
  br label %79

6:                                                ; preds = %4
  br label %79

7:                                                ; preds = %4
  br label %79

8:                                                ; preds = %4
  br label %79

9:                                                ; preds = %4
  br label %79

10:                                               ; preds = %4
  br label %79

11:                                               ; preds = %4
  br label %79

12:                                               ; preds = %4
  br label %79

13:                                               ; preds = %4
  br label %79

14:                                               ; preds = %4
  br label %79

15:                                               ; preds = %4
  br label %79

16:                                               ; preds = %4
  br label %79

17:                                               ; preds = %4
  br label %79

18:                                               ; preds = %4
  br label %79

19:                                               ; preds = %4
  br label %79

20:                                               ; preds = %4
  br label %79

21:                                               ; preds = %4
  br label %79

22:                                               ; preds = %4
  br label %79

23:                                               ; preds = %4
  br label %79

24:                                               ; preds = %4
  br label %79

25:                                               ; preds = %4
  br label %79

26:                                               ; preds = %4
  br label %79

27:                                               ; preds = %4
  br label %79

28:                                               ; preds = %4
  br label %79

29:                                               ; preds = %4
  br label %79

30:                                               ; preds = %4
  br label %79

31:                                               ; preds = %4
  br label %79

32:                                               ; preds = %4
  br label %79

33:                                               ; preds = %4
  br label %79

34:                                               ; preds = %4
  br label %79

35:                                               ; preds = %4
  br label %79

36:                                               ; preds = %4
  br label %79

37:                                               ; preds = %4
  br label %79

38:                                               ; preds = %4
  br label %79

39:                                               ; preds = %4
  br label %79

40:                                               ; preds = %4
  br label %79

41:                                               ; preds = %4
  br label %79

42:                                               ; preds = %4
  br label %79

43:                                               ; preds = %4
  br label %79

44:                                               ; preds = %4
  br label %79

45:                                               ; preds = %4
  br label %79

46:                                               ; preds = %4
  br label %79

47:                                               ; preds = %4
  br label %79

48:                                               ; preds = %4
  br label %79

49:                                               ; preds = %4
  br label %79

50:                                               ; preds = %4
  br label %79

51:                                               ; preds = %4
  br label %79

52:                                               ; preds = %4
  br label %79

53:                                               ; preds = %4
  br label %79

54:                                               ; preds = %4
  br label %79

55:                                               ; preds = %4
  br label %79

56:                                               ; preds = %4
  br label %79

57:                                               ; preds = %4
  br label %79

58:                                               ; preds = %4
  br label %79

59:                                               ; preds = %4
  br label %79

60:                                               ; preds = %4
  br label %79

61:                                               ; preds = %4
  br label %79

62:                                               ; preds = %4
  br label %79

63:                                               ; preds = %4
  br label %79

64:                                               ; preds = %4
  br label %79

65:                                               ; preds = %4
  br label %79

66:                                               ; preds = %4
  br label %79

67:                                               ; preds = %4
  br label %79

68:                                               ; preds = %4
  br label %79

69:                                               ; preds = %4
  br label %79

70:                                               ; preds = %4
  br label %79

71:                                               ; preds = %4
  br label %79

72:                                               ; preds = %4
  br label %79

73:                                               ; preds = %4
  br label %79

74:                                               ; preds = %4
  br label %79

75:                                               ; preds = %4
  br label %79

76:                                               ; preds = %4
  br label %79

77:                                               ; preds = %4
  br label %79

78:                                               ; preds = %4
  br label %79

79:                                               ; preds = %4, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33, %34, %35, %36, %37, %38, %39, %40, %41, %42, %43, %44, %45, %46, %47, %48, %49, %50, %51, %52, %53, %54, %55, %56, %57, %58, %59, %60, %61, %62, %63, %64, %65, %66, %67, %68, %69, %70, %71, %72, %73, %74, %75, %76, %77, %78
  %80 = phi i8* [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.124, i64 0, i64 0), %5 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), %6 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.126, i64 0, i64 0), %7 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i64 0, i64 0), %8 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i64 0, i64 0), %9 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i64 0, i64 0), %10 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i64 0, i64 0), %11 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.131, i64 0, i64 0), %12 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.132, i64 0, i64 0), %13 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i64 0, i64 0), %14 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0), %15 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.135, i64 0, i64 0), %16 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i64 0, i64 0), %17 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), %18 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i64 0, i64 0), %19 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.139, i64 0, i64 0), %20 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.140, i64 0, i64 0), %21 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i64 0, i64 0), %22 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.142, i64 0, i64 0), %23 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.143, i64 0, i64 0), %24 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.144, i64 0, i64 0), %25 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.145, i64 0, i64 0), %26 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), %27 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.147, i64 0, i64 0), %28 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0), %29 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i64 0, i64 0), %30 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.150, i64 0, i64 0), %31 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i64 0, i64 0), %32 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.152, i64 0, i64 0), %33 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.153, i64 0, i64 0), %34 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.154, i64 0, i64 0), %35 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i64 0, i64 0), %36 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i64 0, i64 0), %37 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i64 0, i64 0), %38 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i64 0, i64 0), %39 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.159, i64 0, i64 0), %40 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i64 0, i64 0), %41 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i64 0, i64 0), %42 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.162, i64 0, i64 0), %43 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.163, i64 0, i64 0), %44 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.164, i64 0, i64 0), %45 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165, i64 0, i64 0), %46 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.166, i64 0, i64 0), %47 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i64 0, i64 0), %48 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.168, i64 0, i64 0), %49 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i64 0, i64 0), %50 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), %51 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0), %52 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i64 0, i64 0), %53 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.173, i64 0, i64 0), %54 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0), %55 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.175, i64 0, i64 0), %56 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i64 0, i64 0), %57 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.177, i64 0, i64 0), %58 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.178, i64 0, i64 0), %59 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.179, i64 0, i64 0), %60 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.180, i64 0, i64 0), %61 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.181, i64 0, i64 0), %62 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.182, i64 0, i64 0), %63 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.183, i64 0, i64 0), %64 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i64 0, i64 0), %65 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i64 0, i64 0), %66 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.186, i64 0, i64 0), %67 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.187, i64 0, i64 0), %68 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.188, i64 0, i64 0), %69 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i64 0, i64 0), %70 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.190, i64 0, i64 0), %71 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i64 0, i64 0), %72 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.192, i64 0, i64 0), %73 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.193, i64 0, i64 0), %74 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.194, i64 0, i64 0), %75 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i64 0, i64 0), %76 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i64 0, i64 0), %77 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197, i64 0, i64 0), %78 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0), %4 ]
  %81 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* %80, i32 -1) #8
  %82 = icmp eq %struct.hb_language_impl_t* %81, null
  br i1 %82, label %83, label %143

83:                                               ; preds = %4, %79
  br label %89

84:                                               ; preds = %89
  %85 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %94, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, %0
  %88 = or i64 %90, 2
  br i1 %87, label %95, label %145

89:                                               ; preds = %155, %83
  %90 = phi i64 [ 0, %83 ], [ %154, %155 ]
  %91 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %90, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, %0
  %94 = or i64 %90, 1
  br i1 %93, label %95, label %84

95:                                               ; preds = %150, %145, %84, %89
  %96 = phi i64 [ %90, %89 ], [ %94, %84 ], [ %88, %145 ], [ %149, %150 ]
  %97 = and i64 %96, 4294967295
  %98 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %97, i32 0, i64 0
  %99 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* %98, i32 -1) #8
  br label %143

100:                                              ; preds = %155
  %101 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %101) #8
  %102 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 1
  %103 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 2
  %104 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 3
  %105 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 4
  %106 = lshr i32 %0, 24
  %107 = trunc i32 %106 to i8
  %108 = and i8 %107, -33
  %109 = add i8 %108, -65
  %110 = icmp ult i8 %109, 26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %101, i8 -86, i64 20, i1 false)
  br i1 %110, label %111, label %139

111:                                              ; preds = %100
  %112 = lshr i32 %0, 16
  %113 = trunc i32 %112 to i8
  %114 = and i8 %113, -33
  %115 = add i8 %114, -65
  %116 = icmp ult i8 %115, 26
  br i1 %116, label %117, label %139

117:                                              ; preds = %111
  %118 = lshr i32 %0, 8
  %119 = trunc i32 %118 to i8
  %120 = and i8 %119, -33
  %121 = add i8 %120, -65
  %122 = icmp ult i8 %121, 26
  %123 = and i32 %0, 255
  %124 = icmp eq i32 %123, 32
  %125 = and i1 %124, %122
  br i1 %125, label %126, label %139

126:                                              ; preds = %117
  %127 = add i8 %107, -65
  %128 = icmp ult i8 %127, 26
  %129 = add i8 %107, 32
  %130 = select i1 %128, i8 %129, i8 %107
  store i8 %130, i8* %101, align 16
  %131 = add i8 %113, -65
  %132 = icmp ult i8 %131, 26
  %133 = add i8 %113, 32
  %134 = select i1 %132, i8 %133, i8 %113
  store i8 %134, i8* %102, align 1
  %135 = add i8 %119, -65
  %136 = icmp ult i8 %135, 26
  %137 = add i8 %119, 32
  %138 = select i1 %136, i8 %137, i8 %119
  store i8 %138, i8* %103, align 2
  store i8 45, i8* %104, align 1
  br label %139

139:                                              ; preds = %126, %117, %111, %100
  %140 = phi i8* [ %105, %126 ], [ %101, %117 ], [ %101, %111 ], [ %101, %100 ]
  %141 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %140, i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %0) #8
  %142 = call %struct.hb_language_impl_t* @hb_language_from_string(i8* nonnull %101, i32 -1) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %101) #8
  br label %143

143:                                              ; preds = %1, %79, %139, %95
  %144 = phi %struct.hb_language_impl_t* [ %99, %95 ], [ %142, %139 ], [ %81, %79 ], [ null, %1 ]
  ret %struct.hb_language_impl_t* %144

145:                                              ; preds = %84
  %146 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %88, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, %0
  %149 = or i64 %90, 3
  br i1 %148, label %95, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds [1396 x %struct.LangTag], [1396 x %struct.LangTag]* @_ZL12ot_languages, i64 0, i64 %149, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, %0
  %154 = add nuw nsw i64 %90, 4
  br i1 %153, label %95, label %155

155:                                              ; preds = %150
  %156 = icmp eq i64 %154, 1396
  br i1 %156, label %100, label %89
}

declare %struct.hb_language_impl_t* @hb_language_from_string(i8*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_ot_tags_to_script_and_language(i32, i32, i32*, %struct.hb_language_impl_t**) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca [1 x i32], align 4
  %7 = and i32 %0, 254
  %8 = or i32 %7, 1
  %9 = icmp eq i32 %8, 51
  br i1 %9, label %10, label %22, !prof !2

10:                                               ; preds = %4
  %11 = and i32 %0, -206
  switch i32 %11, label %21 [
    i32 1651402546, label %42
    i32 1684370994, label %12
    i32 1735029298, label %13
    i32 1735750194, label %14
    i32 1802396722, label %15
    i32 1835822386, label %16
    i32 1869773106, label %17
    i32 1953328178, label %18
    i32 1952803890, label %19
    i32 1836674354, label %20
  ]

12:                                               ; preds = %10
  br label %42

13:                                               ; preds = %10
  br label %42

14:                                               ; preds = %10
  br label %42

15:                                               ; preds = %10
  br label %42

16:                                               ; preds = %10
  br label %42

17:                                               ; preds = %10
  br label %42

18:                                               ; preds = %10
  br label %42

19:                                               ; preds = %10
  br label %42

20:                                               ; preds = %10
  br label %42

21:                                               ; preds = %10
  br label %42

22:                                               ; preds = %4
  %23 = icmp eq i32 %0, 1145457748
  br i1 %23, label %42, label %24, !prof !2

24:                                               ; preds = %22
  %25 = and i32 %0, 65280
  %26 = icmp eq i32 %25, 8192
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %24
  %28 = lshr i32 %0, 8
  %29 = and i32 %28, 65280
  %30 = or i32 %29, %0
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ %30, %27 ], [ %0, %24 ]
  %33 = and i32 %32, 255
  %34 = icmp eq i32 %33, 32
  br i1 %34, label %35, label %39, !prof !2

35:                                               ; preds = %31
  %36 = lshr i32 %32, 8
  %37 = and i32 %36, 255
  %38 = or i32 %37, %32
  br label %39

39:                                               ; preds = %35, %31
  %40 = phi i32 [ %38, %35 ], [ %32, %31 ]
  %41 = and i32 %40, -536870913
  br label %42

42:                                               ; preds = %10, %12, %13, %14, %15, %16, %17, %18, %19, %20, %21, %22, %39
  %43 = phi i32 [ 1517976186, %21 ], [ 1299803506, %20 ], [ 1415933045, %19 ], [ 1415671148, %18 ], [ 1332902241, %17 ], [ 1298954605, %16 ], [ 1265525857, %15 ], [ 1198879349, %14 ], [ 1198877298, %13 ], [ 1147500129, %12 ], [ 1113943655, %10 ], [ %41, %39 ], [ 0, %22 ]
  %44 = icmp eq i32* %2, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  store i32 %43, i32* %2, align 4
  br label %46

46:                                               ; preds = %42, %45
  %47 = icmp eq %struct.hb_language_impl_t** %3, null
  br i1 %47, label %164, label %48

48:                                               ; preds = %46
  %49 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #8
  store i32 1, i32* %5, align 4
  %50 = bitcast [1 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #8
  %51 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 0
  store i32 -1431655766, i32* %51, align 4
  call void @hb_ot_tags_from_script_and_language(i32 %43, %struct.hb_language_impl_t* null, i32* nonnull %5, i32* nonnull %51, i32* null, i32* null)
  %52 = call %struct.hb_language_impl_t* @hb_ot_tag_to_language(i32 %1)
  store %struct.hb_language_impl_t* %52, %struct.hb_language_impl_t** %3, align 8
  %53 = load i32, i32* %5, align 4
  %54 = icmp ne i32 %53, 0
  %55 = load i32, i32* %51, align 4
  %56 = icmp eq i32 %55, %0
  %57 = and i1 %54, %56
  br i1 %57, label %163, label %58

58:                                               ; preds = %48
  %59 = call i8* @hb_language_to_string(%struct.hb_language_impl_t* %52) #8
  %60 = call i64 @strlen(i8* %59) #9
  %61 = add i64 %60, 16
  %62 = call noalias i8* @malloc(i64 %61) #8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %58
  store %struct.hb_language_impl_t* null, %struct.hb_language_impl_t** %3, align 8
  br label %163

65:                                               ; preds = %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 %59, i64 %60, i1 false)
  %66 = load i8, i8* %59, align 1
  %67 = icmp eq i8 %66, 120
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = getelementptr inbounds i8, i8* %59, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 45
  br i1 %71, label %77, label %72

72:                                               ; preds = %68, %65
  %73 = add i64 %60, 1
  %74 = getelementptr inbounds i8, i8* %62, i64 %60
  store i8 45, i8* %74, align 1
  %75 = add i64 %60, 2
  %76 = getelementptr inbounds i8, i8* %62, i64 %73
  store i8 120, i8* %76, align 1
  br label %77

77:                                               ; preds = %68, %72
  %78 = phi i64 [ %75, %72 ], [ %60, %68 ]
  %79 = add i64 %78, 1
  %80 = getelementptr inbounds i8, i8* %62, i64 %78
  store i8 45, i8* %80, align 1
  %81 = add i64 %78, 2
  %82 = getelementptr inbounds i8, i8* %62, i64 %79
  store i8 104, i8* %82, align 1
  %83 = add i64 %78, 3
  %84 = getelementptr inbounds i8, i8* %62, i64 %81
  store i8 98, i8* %84, align 1
  %85 = add i64 %78, 4
  %86 = getelementptr inbounds i8, i8* %62, i64 %83
  store i8 115, i8* %86, align 1
  %87 = add i64 %78, 5
  %88 = getelementptr inbounds i8, i8* %62, i64 %85
  store i8 99, i8* %88, align 1
  %89 = add i64 %78, 6
  %90 = getelementptr inbounds i8, i8* %62, i64 %87
  store i8 45, i8* %90, align 1
  %91 = lshr i32 %0, 28
  %92 = trunc i32 %91 to i8
  %93 = icmp ult i8 %92, 10
  %94 = or i8 %92, 48
  %95 = add nuw nsw i8 %92, 87
  %96 = select i1 %93, i8 %94, i8 %95
  %97 = add i64 %78, 7
  %98 = getelementptr inbounds i8, i8* %62, i64 %89
  store i8 %96, i8* %98, align 1
  %99 = lshr i32 %0, 24
  %100 = trunc i32 %99 to i8
  %101 = and i8 %100, 15
  %102 = icmp ult i8 %101, 10
  %103 = or i8 %101, 48
  %104 = add nuw nsw i8 %101, 87
  %105 = select i1 %102, i8 %103, i8 %104
  %106 = add i64 %78, 8
  %107 = getelementptr inbounds i8, i8* %62, i64 %97
  store i8 %105, i8* %107, align 1
  %108 = lshr i32 %0, 20
  %109 = trunc i32 %108 to i8
  %110 = and i8 %109, 15
  %111 = icmp ult i8 %110, 10
  %112 = or i8 %110, 48
  %113 = add nuw nsw i8 %110, 87
  %114 = select i1 %111, i8 %112, i8 %113
  %115 = add i64 %78, 9
  %116 = getelementptr inbounds i8, i8* %62, i64 %106
  store i8 %114, i8* %116, align 1
  %117 = lshr i32 %0, 16
  %118 = trunc i32 %117 to i8
  %119 = and i8 %118, 15
  %120 = icmp ult i8 %119, 10
  %121 = or i8 %119, 48
  %122 = add nuw nsw i8 %119, 87
  %123 = select i1 %120, i8 %121, i8 %122
  %124 = add i64 %78, 10
  %125 = getelementptr inbounds i8, i8* %62, i64 %115
  store i8 %123, i8* %125, align 1
  %126 = lshr i32 %0, 12
  %127 = trunc i32 %126 to i8
  %128 = and i8 %127, 15
  %129 = icmp ult i8 %128, 10
  %130 = or i8 %128, 48
  %131 = add nuw nsw i8 %128, 87
  %132 = select i1 %129, i8 %130, i8 %131
  %133 = add i64 %78, 11
  %134 = getelementptr inbounds i8, i8* %62, i64 %124
  store i8 %132, i8* %134, align 1
  %135 = lshr i32 %0, 8
  %136 = trunc i32 %135 to i8
  %137 = and i8 %136, 15
  %138 = icmp ult i8 %137, 10
  %139 = or i8 %137, 48
  %140 = add nuw nsw i8 %137, 87
  %141 = select i1 %138, i8 %139, i8 %140
  %142 = add i64 %78, 12
  %143 = getelementptr inbounds i8, i8* %62, i64 %133
  store i8 %141, i8* %143, align 1
  %144 = lshr i32 %0, 4
  %145 = trunc i32 %144 to i8
  %146 = and i8 %145, 15
  %147 = icmp ult i8 %146, 10
  %148 = or i8 %146, 48
  %149 = add nuw nsw i8 %146, 87
  %150 = select i1 %147, i8 %148, i8 %149
  %151 = add i64 %78, 13
  %152 = getelementptr inbounds i8, i8* %62, i64 %142
  store i8 %150, i8* %152, align 1
  %153 = trunc i32 %0 to i8
  %154 = and i8 %153, 15
  %155 = icmp ult i8 %154, 10
  %156 = or i8 %154, 48
  %157 = add nuw nsw i8 %154, 87
  %158 = select i1 %155, i8 %156, i8 %157
  %159 = getelementptr inbounds i8, i8* %62, i64 %151
  store i8 %158, i8* %159, align 1
  %160 = trunc i64 %78 to i32
  %161 = add i32 %160, 14
  %162 = call %struct.hb_language_impl_t* @hb_language_from_string(i8* nonnull %62, i32 %161) #8
  store %struct.hb_language_impl_t* %162, %struct.hb_language_impl_t** %3, align 8
  call void @free(i8* nonnull %62) #8
  br label %163

163:                                              ; preds = %64, %77, %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  br label %164

164:                                              ; preds = %46, %163
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

declare i32 @hb_tag_from_string(i8*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17hb_sorted_array_tIK7LangTagE12bsearch_implIPKcEEbRKT_Pj(%struct.hb_sorted_array_t*, i8** dereferenceable(8), i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.hb_sorted_array_t, %struct.hb_sorted_array_t* %0, i64 0, i32 0, i32 0
  %5 = load %struct.LangTag*, %struct.LangTag** %4, align 8
  %6 = getelementptr inbounds %struct.hb_sorted_array_t, %struct.hb_sorted_array_t* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, -1
  %9 = icmp slt i32 %7, 1
  br i1 %9, label %92, label %10

10:                                               ; preds = %3
  %11 = load i8*, i8** %1, align 8
  %12 = tail call i8* @strchr(i8* %11, i32 45) #9
  %13 = icmp eq i8* %12, null
  %14 = ptrtoint i8* %12 to i64
  %15 = ptrtoint i8* %11 to i64
  %16 = sub i64 %14, %15
  br i1 %13, label %19, label %17

17:                                               ; preds = %10
  %18 = trunc i64 %16 to i32
  br label %57

19:                                               ; preds = %10
  %20 = tail call i64 @strlen(i8* %11) #9
  %21 = trunc i64 %20 to i32
  br label %22

22:                                               ; preds = %53, %19
  %23 = phi i32 [ %55, %53 ], [ %8, %19 ]
  %24 = phi i32 [ %54, %53 ], [ 0, %19 ]
  %25 = add i32 %24, %23
  %26 = lshr i32 %25, 1
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = getelementptr inbounds %struct.LangTag, %struct.LangTag* %5, i64 0, i32 0, i64 %28
  %30 = tail call i8* @strchr(i8* %29, i32 45) #9
  %31 = icmp eq i8* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %22
  %33 = ptrtoint i8* %30 to i64
  %34 = ptrtoint i8* %29 to i64
  %35 = sub i64 %33, %34
  %36 = and i64 %35, 4294967295
  br label %39

37:                                               ; preds = %22
  %38 = tail call i64 @strlen(i8* %29) #9
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i64 [ %36, %32 ], [ %38, %37 ]
  %41 = trunc i64 %40 to i32
  %42 = icmp ult i32 %21, %41
  %43 = select i1 %42, i64 %40, i64 %20
  %44 = and i64 %43, 4294967295
  %45 = tail call i32 @strncmp(i8* %11, i8* %29, i64 %44) #9
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %39
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %92, label %49

49:                                               ; preds = %47
  %50 = add nuw nsw i32 %26, 1
  br label %53

51:                                               ; preds = %39
  %52 = add nsw i32 %26, -1
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi i32 [ %24, %51 ], [ %50, %49 ]
  %55 = phi i32 [ %52, %51 ], [ %23, %49 ]
  %56 = icmp sgt i32 %54, %55
  br i1 %56, label %92, label %22

57:                                               ; preds = %88, %17
  %58 = phi i32 [ %90, %88 ], [ %8, %17 ]
  %59 = phi i32 [ %89, %88 ], [ 0, %17 ]
  %60 = add i32 %59, %58
  %61 = lshr i32 %60, 1
  %62 = zext i32 %61 to i64
  %63 = shl nuw nsw i64 %62, 3
  %64 = getelementptr inbounds %struct.LangTag, %struct.LangTag* %5, i64 0, i32 0, i64 %63
  %65 = tail call i8* @strchr(i8* %64, i32 45) #9
  %66 = icmp eq i8* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %57
  %68 = ptrtoint i8* %65 to i64
  %69 = ptrtoint i8* %64 to i64
  %70 = sub i64 %68, %69
  %71 = and i64 %70, 4294967295
  br label %74

72:                                               ; preds = %57
  %73 = tail call i64 @strlen(i8* %64) #9
  br label %74

74:                                               ; preds = %72, %67
  %75 = phi i64 [ %71, %67 ], [ %73, %72 ]
  %76 = trunc i64 %75 to i32
  %77 = icmp ult i32 %18, %76
  %78 = select i1 %77, i64 %75, i64 %16
  %79 = and i64 %78, 4294967295
  %80 = tail call i32 @strncmp(i8* %11, i8* %64, i64 %79) #9
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %74
  %83 = add nsw i32 %61, -1
  br label %88

84:                                               ; preds = %74
  %85 = icmp eq i32 %80, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %84
  %87 = add nuw nsw i32 %61, 1
  br label %88

88:                                               ; preds = %86, %82
  %89 = phi i32 [ %59, %82 ], [ %87, %86 ]
  %90 = phi i32 [ %83, %82 ], [ %58, %86 ]
  %91 = icmp sgt i32 %89, %90
  br i1 %91, label %92, label %57

92:                                               ; preds = %84, %88, %47, %53, %3
  %93 = phi i32 [ 0, %3 ], [ %26, %47 ], [ %54, %53 ], [ %61, %84 ], [ %89, %88 ]
  %94 = phi i1 [ false, %3 ], [ true, %47 ], [ false, %53 ], [ true, %84 ], [ false, %88 ]
  store i32 %93, i32* %2, align 4
  ret i1 %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
