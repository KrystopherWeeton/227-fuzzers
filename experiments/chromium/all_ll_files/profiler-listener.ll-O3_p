; ModuleID = '../../v8/src/profiler/profiler-listener.cc'
source_filename = "../../v8/src/profiler/profiler-listener.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.865", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.878", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.888", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.899", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.974", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1020"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1027", i32, i8, i8, i32, i32, %"class.std::__1::vector.1033", %"class.std::__1::vector.1033", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1040", i64, %"class.std::__1::unordered_map.1041", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1097", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1135", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1169", %"class.std::__1::vector.1173", %"class.std::__1::vector.1173", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.1603" }
%"struct.std::__1::__compressed_pair_elem.1603" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.738", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.762", %"class.v8::internal::Handle.774", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.757" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.740", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.752", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.740" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.748" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.743" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.741", %union.anon.742 }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%union.anon.742 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::Optional.752" = type { %"class.v8::base::internal::OptionalBase.753" }
%"class.v8::base::internal::OptionalBase.753" = type { %"struct.v8::base::internal::OptionalStorage.754" }
%"struct.v8::base::internal::OptionalStorage.754" = type { %"struct.v8::base::internal::OptionalStorageBase.755" }
%"struct.v8::base::internal::OptionalStorageBase.755" = type { i8, %union.anon.756 }
%union.anon.756 = type { i8 }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.762" = type { %"class.std::__1::__deque_base.763" }
%"class.std::__1::__deque_base.763" = type { %"struct.std::__1::__split_buffer.764", i64, %"class.std::__1::__compressed_pair.770" }
%"struct.std::__1::__split_buffer.764" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.765" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::Handle.774" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.777" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.794", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.800", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.800", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.800" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.788", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::vector.808", %"class.std::__1::unique_ptr.815", %"class.std::__1::vector.822", %"class.std::__1::unique_ptr.829", i64, %"class.std::__1::vector.835", %"class.std::__1::vector.843", %"class.std::__1::vector.851", i8, i8, i32 }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.v8::internal::GlobalHandles::NodeSpace.818"* }
%"class.v8::internal::GlobalHandles::NodeSpace.818" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.824" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"struct.std::__1::pair.837"*, %"struct.std::__1::pair.837"*, %"class.std::__1::__compressed_pair.838" }
%"struct.std::__1::pair.837" = type opaque
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::pair.837"* }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.std::__1::pair.845"*, %"struct.std::__1::pair.845"*, %"class.std::__1::__compressed_pair.846" }
%"struct.std::__1::pair.845" = type opaque
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::pair.845"* }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.853" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.858", %"class.std::__1::vector.865" }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i64**, i64**, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.872" }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.878" = type { %"struct.std::__1::__atomic_base.879" }
%"struct.std::__1::__atomic_base.879" = type { %"struct.std::__1::__cxx_atomic_impl.880" }
%"struct.std::__1::__cxx_atomic_impl.880" = type { %"struct.std::__1::__cxx_atomic_base_impl.881" }
%"struct.std::__1::__cxx_atomic_base_impl.881" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.888" = type { %"struct.std::__1::__atomic_base.889" }
%"struct.std::__1::__atomic_base.889" = type { %"struct.std::__1::__cxx_atomic_impl.890" }
%"struct.std::__1::__cxx_atomic_impl.890" = type { %"struct.std::__1::__cxx_atomic_base_impl.891" }
%"struct.std::__1::__cxx_atomic_base_impl.891" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.895 }
%union.anon.895 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.899" = type { %"class.std::__1::__hash_table.900" }
%"class.std::__1::__hash_table.900" = type <{ %"class.std::__1::unique_ptr.901", %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.916", %"class.std::__1::__compressed_pair.919", [4 x i8] }>
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903", %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::__hash_node_base.904"** }
%"struct.std::__1::__hash_node_base.904" = type { %"struct.std::__1::__hash_node_base.904"* }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.std::__1::__bucket_list_deallocator.906" }
%"class.std::__1::__bucket_list_deallocator.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"struct.std::__1::__hash_node_base.904" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::Handle.931", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.932", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.931" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"class.std::__1::unique_ptr.947", %"class.std::__1::unique_ptr.953", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.959", %"class.std::__1::vector.965", %"struct.std::__1::pair.973" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"class.std::__1::unique_ptr.941"*, %"class.std::__1::unique_ptr.941"*, %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::unique_ptr.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.std::__1::unique_ptr.941"* }
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type { %"class.v8::base::CustomMatcherTemplateHashMapImpl", %"class.v8::base::Mutex" }
%"class.v8::base::CustomMatcherTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::HashEqualityThenKeyMatcher", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::HashEqualityThenKeyMatcher" = type { i1 (i8*, i8*)* }
%"struct.v8::base::TemplateHashMapEntry" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"* }
%"struct.std::__1::pair.973" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.977", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.977" = type { %"class.std::__1::__hash_table.978" }
%"class.std::__1::__hash_table.978" = type <{ %"class.std::__1::unique_ptr.979", %"class.std::__1::__compressed_pair.989", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.998", [4 x i8] }>
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981", %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.982"** }
%"struct.std::__1::__hash_node_base.982" = type { %"struct.std::__1::__hash_node_base.982"* }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.std::__1::__bucket_list_deallocator.984" }
%"class.std::__1::__bucket_list_deallocator.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::__hash_node_base.982" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1006" }
%"class.std::__1::deque.1006" = type { %"class.std::__1::__deque_base.1007" }
%"class.std::__1::__deque_base.1007" = type { %"struct.std::__1::__split_buffer.1008", i64, %"class.std::__1::__compressed_pair.1015" }
%"struct.std::__1::__split_buffer.1008" = type { %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"class.std::__1::__compressed_pair.1010" }
%"struct.std::__1::pair.1009" = type opaque
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"struct.std::__1::pair.1009"** }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { %"class.v8::internal::Handle.741"*, %"class.v8::internal::Handle.741"*, %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.v8::internal::Handle.741"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.883", i32, %"class.v8::Local.0" }
%"class.v8::Local.883" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.858", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1033" = type { %"class.std::__1::__vector_base.1034" }
%"class.std::__1::__vector_base.1034" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1040" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1041" = type { %"class.std::__1::__hash_table.1042" }
%"class.std::__1::__hash_table.1042" = type <{ %"class.std::__1::unique_ptr.1043", %"class.std::__1::__compressed_pair.1053", %"class.std::__1::__compressed_pair.1058", %"class.std::__1::__compressed_pair.1061", [4 x i8] }>
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045", %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"struct.std::__1::__hash_node_base.1046"** }
%"struct.std::__1::__hash_node_base.1046" = type { %"struct.std::__1::__hash_node_base.1046"* }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.std::__1::__bucket_list_deallocator.1048" }
%"class.std::__1::__bucket_list_deallocator.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"struct.std::__1::__hash_node_base.1046" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1065", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1094", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1095", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1065" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1090, %union.anon.1092, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1090 = type { i64 }
%union.anon.1092 = type { i64 }
%"class.std::__1::weak_ptr.1094" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1095" = type { %"class.v8::PersistentBase.1096" }
%"class.v8::PersistentBase.1096" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1066", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1066" = type { %"class.std::__1::__hash_table.1067" }
%"class.std::__1::__hash_table.1067" = type <{ %"class.std::__1::unique_ptr.1068", %"class.std::__1::__compressed_pair.1078", %"class.std::__1::__compressed_pair.1083", %"class.std::__1::__compressed_pair.1086", [4 x i8] }>
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070", %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::__hash_node_base.1071"** }
%"struct.std::__1::__hash_node_base.1071" = type { %"struct.std::__1::__hash_node_base.1071"* }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"class.std::__1::__bucket_list_deallocator.1073" }
%"class.std::__1::__bucket_list_deallocator.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"struct.std::__1::__hash_node_base.1071" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1126", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1102", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1106", %"class.std::__1::unique_ptr.1112", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1118", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1102" = type { %"struct.std::__1::__atomic_base.1103" }
%"struct.std::__1::__atomic_base.1103" = type { %"struct.std::__1::__cxx_atomic_impl.1104" }
%"struct.std::__1::__cxx_atomic_impl.1104" = type { %"struct.std::__1::__cxx_atomic_base_impl.1105" }
%"struct.std::__1::__cxx_atomic_base_impl.1105" = type { i32 }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.858" }
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1118" = type { %"class.std::__1::__vector_base.1119" }
%"class.std::__1::__vector_base.1119" = type { %"struct.std::__1::pair.1120"*, %"struct.std::__1::pair.1120"*, %"class.std::__1::__compressed_pair.1121" }
%"struct.std::__1::pair.1120" = type opaque
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"struct.std::__1::pair.1120"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.884", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.884" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1143" }
%"class.std::__1::unordered_map.1143" = type { %"class.std::__1::__hash_table.1144" }
%"class.std::__1::__hash_table.1144" = type <{ %"class.std::__1::unique_ptr.1145", %"class.std::__1::__compressed_pair.1155", %"class.std::__1::__compressed_pair.1160", %"class.std::__1::__compressed_pair.1163", [4 x i8] }>
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147", %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"struct.std::__1::__hash_node_base.1148"** }
%"struct.std::__1::__hash_node_base.1148" = type { %"struct.std::__1::__hash_node_base.1148"* }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.std::__1::__bucket_list_deallocator.1150" }
%"class.std::__1::__bucket_list_deallocator.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.std::__1::__hash_node_base.1148" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1169" = type { %"struct.std::__1::__atomic_base.1170" }
%"struct.std::__1::__atomic_base.1170" = type { %"struct.std::__1::__cxx_atomic_impl.1171" }
%"struct.std::__1::__cxx_atomic_impl.1171" = type { %"struct.std::__1::__cxx_atomic_base_impl.1172" }
%"struct.std::__1::__cxx_atomic_base_impl.1172" = type { %"class.std::__1::vector.1173"* }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1175" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::ProfilerListener" = type <{ %"class.v8::internal::CodeEventListener", %"struct.v8::internal::WeakCodeRegistry::Listener", %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::WeakCodeRegistry"*, i32, [4 x i8] }>
%"struct.v8::internal::WeakCodeRegistry::Listener" = type { i32 (...)** }
%"class.v8::internal::CodeEventObserver" = type { i32 (...)** }
%"class.v8::internal::WeakCodeRegistry" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.1180" }
%"class.std::__1::vector.1180" = type { %"class.std::__1::__vector_base.1181" }
%"class.std::__1::__vector_base.1181" = type { %"class.v8::internal::CodeEntry"**, %"class.v8::internal::CodeEntry"**, %"class.std::__1::__compressed_pair.1259" }
%"class.v8::internal::CodeEntry" = type { %"struct.std::__1::atomic.1182", i8*, i8*, i32, i32, i32, i32, %"class.std::__1::unique_ptr.1187", %"class.std::__1::unique_ptr.1200", i64, i64* }
%"struct.std::__1::atomic.1182" = type { %"struct.std::__1::__atomic_base.1183" }
%"struct.std::__1::__atomic_base.1183" = type { %"struct.std::__1::__atomic_base.1184" }
%"struct.std::__1::__atomic_base.1184" = type { %"struct.std::__1::__cxx_atomic_impl.1185" }
%"struct.std::__1::__cxx_atomic_impl.1185" = type { %"struct.std::__1::__cxx_atomic_base_impl.1186" }
%"struct.std::__1::__cxx_atomic_base_impl.1186" = type { i32 }
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.v8::internal::SourcePositionTable"* }
%"class.v8::internal::SourcePositionTable" = type { %"class.std::__1::vector.1190" }
%"class.std::__1::vector.1190" = type { %"class.std::__1::__vector_base.1191" }
%"class.std::__1::__vector_base.1191" = type { %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"*, %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"*, %"class.std::__1::__compressed_pair.1192" }
%"struct.v8::internal::SourcePositionTable::SourcePositionTuple" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* }
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"struct.v8::internal::CodeEntry::RareData"* }
%"struct.v8::internal::CodeEntry::RareData" = type { i8*, i8*, i32, [4 x i8], %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_set.1227", %"class.std::__1::vector.1249" }
%"class.std::__1::unordered_map.1203" = type { %"class.std::__1::__hash_table.1204" }
%"class.std::__1::__hash_table.1204" = type <{ %"class.std::__1::unique_ptr.1205", %"class.std::__1::__compressed_pair.1215", %"class.std::__1::__compressed_pair.1220", %"class.std::__1::__compressed_pair.1223", [4 x i8] }>
%"class.std::__1::unique_ptr.1205" = type { %"class.std::__1::__compressed_pair.1206" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207", %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"struct.std::__1::__hash_node_base.1208"** }
%"struct.std::__1::__hash_node_base.1208" = type { %"struct.std::__1::__hash_node_base.1208"* }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.std::__1::__bucket_list_deallocator.1210" }
%"class.std::__1::__bucket_list_deallocator.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"struct.std::__1::__hash_node_base.1208" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_set.1227" = type { %"class.std::__1::__hash_table.1228" }
%"class.std::__1::__hash_table.1228" = type <{ %"class.std::__1::unique_ptr.1229", %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1244", %"class.std::__1::__compressed_pair.1246", [4 x i8] }>
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231", %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"struct.std::__1::__hash_node_base.1232"** }
%"struct.std::__1::__hash_node_base.1232" = type { %"struct.std::__1::__hash_node_base.1232"* }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.std::__1::__bucket_list_deallocator.1234" }
%"class.std::__1::__bucket_list_deallocator.1234" = type { %"class.std::__1::__compressed_pair.1235" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"struct.std::__1::__hash_node_base.1232" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.1249" = type { %"class.std::__1::__vector_base.1250" }
%"class.std::__1::__vector_base.1250" = type { %"struct.v8::CpuProfileDeoptFrame"*, %"struct.v8::CpuProfileDeoptFrame"*, %"class.std::__1::__compressed_pair.1251" }
%"struct.v8::CpuProfileDeoptFrame" = type { i32, i64 }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"struct.v8::CpuProfileDeoptFrame"* }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.v8::internal::CodeEntry"** }
%"class.v8::internal::CodeEventsContainer" = type { %union.anon.1265 }
%union.anon.1265 = type { %"class.v8::internal::CodeMoveEventRecord", [40 x i8] }
%"class.v8::internal::CodeMoveEventRecord" = type { %"class.v8::internal::CodeEventRecord", i64, i64 }
%"class.v8::internal::CodeEventRecord" = type { i32, i32 }
%"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef" = type { %"class.v8::internal::SharedFunctionInfo" }
%"class.std::__1::unique_ptr.1306" = type { %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.v8::internal::CodeEntry"* }
%"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef" = type { %"class.v8::internal::AbstractCode" }
%"class.v8::internal::AbstractCode" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::SourcePositionTableIterator" = type { %"class.v8::internal::Vector.1290", %"class.v8::internal::Handle.1274", i32, [4 x i8], %"struct.v8::internal::PositionTableEntry", i32, i32 }
%"class.v8::internal::Vector.1290" = type { i8*, i64 }
%"class.v8::internal::Handle.1274" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.v8::internal::Handle<v8::internal::Script>::ObjectRef" = type { %"class.v8::internal::Script" }
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::vector.1292" = type { %"class.std::__1::__vector_base.1293" }
%"class.std::__1::__vector_base.1293" = type { %"struct.v8::internal::SourcePositionInfo"*, %"struct.v8::internal::SourcePositionInfo"*, %"class.std::__1::__compressed_pair.1294" }
%"struct.v8::internal::SourcePositionInfo" = type { %"class.v8::internal::SourcePosition", %"class.v8::internal::Handle.740", %"class.v8::internal::Handle.1273", i32, i32 }
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.v8::internal::Handle.1273" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"struct.v8::internal::SourcePositionInfo"* }
%"class.std::__1::vector.1299" = type { %"class.std::__1::__vector_base.1300" }
%"class.std::__1::__vector_base.1300" = type { %"struct.v8::internal::CodeEntryAndLineNumber"*, %"struct.v8::internal::CodeEntryAndLineNumber"*, %"class.std::__1::__compressed_pair.1301" }
%"struct.v8::internal::CodeEntryAndLineNumber" = type { %"class.v8::internal::CodeEntry"*, i32 }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"struct.v8::internal::CodeEntryAndLineNumber"* }
%"class.v8::internal::baseline::BytecodeOffsetIterator" = type <{ %"class.v8::internal::Handle.1274", i8*, i32, i32, i64, i64, i32, [4 x i8], %"class.v8::internal::BytecodeArray", %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::LocalHeap"*, %"class.v8::base::Optional.1279", [6 x i8] }>
%"class.v8::internal::BytecodeArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::interpreter::BytecodeArrayIterator" = type { %"class.v8::internal::Handle.1278", i8*, i8*, i8*, i8, i32, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::Handle.1278" = type { %"class.v8::internal::HandleBase" }
%"class.v8::base::Optional.1279" = type { %"class.v8::base::internal::OptionalBase.1280" }
%"class.v8::base::internal::OptionalBase.1280" = type { %"struct.v8::base::internal::OptionalStorage.1281" }
%"struct.v8::base::internal::OptionalStorage.1281" = type { %"struct.v8::base::internal::OptionalStorageBase.1282" }
%"struct.v8::base::internal::OptionalStorageBase.1282" = type { i8, %union.anon.1283 }
%union.anon.1283 = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.1504", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1593" }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1335", %"class.std::__1::unique_ptr.1519", %"class.std::__1::shared_ptr.1532", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1533", %"class.std::__1::unique_ptr.1539", %"class.std::__1::unique_ptr.1545", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1550", %"class.std::__1::vector.1559", %"class.std::__1::unique_ptr.1567", %"class.std::__1::vector.1573", %"class.std::__1::unique_ptr.1580", i8, %"class.std::__1::unique_ptr.1586", i8, i8, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1329", i32, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::shared_ptr.676" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1313" }
%"class.std::__1::__tree.1313" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1314", %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1321" }
%"class.std::__1::set.1321" = type { %"class.std::__1::__tree.1322" }
%"class.std::__1::__tree.1322" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1323", %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.1329" = type { %"class.std::__1::__vector_base.1330" }
%"class.std::__1::__vector_base.1330" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1335" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1336", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1342", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1356", %"class.std::__1::vector.1364", %"class.std::__1::vector.1371", %"class.std::__1::vector.1378", %"class.std::__1::vector.1385", %"class.std::__1::vector.1392", %"class.std::__1::vector.1399", %"class.std::__1::vector.1406", %"class.std::__1::vector.1413", %"class.std::__1::vector.1420", %"class.std::__1::vector.1433", %"class.std::__1::unordered_map.1440", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1501" }
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1342" = type { %"class.std::__1::__vector_base.1343" }
%"class.std::__1::__vector_base.1343" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1351" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1350, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1344" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1350 = type { i32 }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1356" = type { %"class.std::__1::__vector_base.1357" }
%"class.std::__1::__vector_base.1357" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1359" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1358 }
%union.anon.1358 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1364" = type { %"class.std::__1::__vector_base.1365" }
%"class.std::__1::__vector_base.1365" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1366" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { i8* }
%"class.std::__1::vector.1371" = type { %"class.std::__1::__vector_base.1372" }
%"class.std::__1::__vector_base.1372" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { i32* }
%"class.std::__1::vector.1378" = type { %"class.std::__1::__vector_base.1379" }
%"class.std::__1::__vector_base.1379" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1380" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1385" = type { %"class.std::__1::__vector_base.1386" }
%"class.std::__1::__vector_base.1386" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1387" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1387" = type { %"struct.std::__1::__compressed_pair_elem.1388" }
%"struct.std::__1::__compressed_pair_elem.1388" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1392" = type { %"class.std::__1::__vector_base.1393" }
%"class.std::__1::__vector_base.1393" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1394" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1399" = type { %"class.std::__1::__vector_base.1400" }
%"class.std::__1::__vector_base.1400" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1401" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1406" = type { %"class.std::__1::__vector_base.1407" }
%"class.std::__1::__vector_base.1407" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1408" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1413" = type { %"class.std::__1::__vector_base.1414" }
%"class.std::__1::__vector_base.1414" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1415" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1420" = type { %"class.std::__1::__vector_base.1421" }
%"class.std::__1::__vector_base.1421" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1428" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1422", i32, [4 x i8] }>
%"class.std::__1::vector.1422" = type { %"class.std::__1::__vector_base.1423" }
%"class.std::__1::__vector_base.1423" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"class.std::__1::__compressed_pair.1428" = type { %"struct.std::__1::__compressed_pair_elem.1429" }
%"struct.std::__1::__compressed_pair_elem.1429" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1433" = type { %"class.std::__1::__vector_base.1434" }
%"class.std::__1::__vector_base.1434" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1435" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.1436" }
%"struct.std::__1::__compressed_pair_elem.1436" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1440" = type { %"class.std::__1::__hash_table.1441" }
%"class.std::__1::__hash_table.1441" = type <{ %"class.std::__1::unique_ptr.1442", %"class.std::__1::__compressed_pair.1452", %"class.std::__1::__compressed_pair.1457", %"class.std::__1::__compressed_pair.1462", [4 x i8] }>
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444", %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"struct.std::__1::__hash_node_base.1445"** }
%"struct.std::__1::__hash_node_base.1445" = type { %"struct.std::__1::__hash_node_base.1445"* }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.std::__1::__bucket_list_deallocator.1447" }
%"class.std::__1::__bucket_list_deallocator.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"struct.std::__1::__hash_node_base.1445" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1468" }
%"class.std::__1::unordered_map.1468" = type { %"class.std::__1::__hash_table.1469" }
%"class.std::__1::__hash_table.1469" = type <{ %"class.std::__1::unique_ptr.1470", %"class.std::__1::__compressed_pair.1480", %"class.std::__1::__compressed_pair.1485", %"class.std::__1::__compressed_pair.1488", [4 x i8] }>
%"class.std::__1::unique_ptr.1470" = type { %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472", %"struct.std::__1::__compressed_pair_elem.1474" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"struct.std::__1::__hash_node_base.1473"** }
%"struct.std::__1::__hash_node_base.1473" = type { %"struct.std::__1::__hash_node_base.1473"* }
%"struct.std::__1::__compressed_pair_elem.1474" = type { %"class.std::__1::__bucket_list_deallocator.1475" }
%"class.std::__1::__bucket_list_deallocator.1475" = type { %"class.std::__1::__compressed_pair.1476" }
%"class.std::__1::__compressed_pair.1476" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1480" = type { %"struct.std::__1::__compressed_pair_elem.1481" }
%"struct.std::__1::__compressed_pair_elem.1481" = type { %"struct.std::__1::__hash_node_base.1473" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1494" }
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.std::__1::unordered_map.1497"* }
%"class.std::__1::unordered_map.1497" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1501" = type { %"class.std::__1::__compressed_pair.1502" }
%"class.std::__1::__compressed_pair.1502" = type { %"struct.std::__1::__compressed_pair_elem.1503" }
%"struct.std::__1::__compressed_pair_elem.1503" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.1510" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.1504", i64 }
%"class.std::__1::unique_ptr.1510" = type { %"class.std::__1::__compressed_pair.1511" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.1512" }
%"struct.std::__1::__compressed_pair_elem.1512" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.90", %"class.std::__1::vector.1522", %"class.std::__1::vector.90", %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.1522" = type { %"class.std::__1::__vector_base.1523" }
%"class.std::__1::__vector_base.1523" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1532" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1539" = type { %"class.std::__1::__compressed_pair.1540" }
%"class.std::__1::__compressed_pair.1540" = type { %"struct.std::__1::__compressed_pair_elem.1541" }
%"struct.std::__1::__compressed_pair_elem.1541" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.1545" = type { %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"class.std::__1::map.1550" = type { %"class.std::__1::__tree.1551" }
%"class.std::__1::__tree.1551" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1552", %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1552" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.1559" = type { %"class.std::__1::__vector_base.1560" }
%"class.std::__1::__vector_base.1560" = type { %"class.std::__1::unique_ptr.1561"*, %"class.std::__1::unique_ptr.1561"*, %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::unique_ptr.1561" = type opaque
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.std::__1::unique_ptr.1561"* }
%"class.std::__1::unique_ptr.1567" = type { %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1573" = type { %"class.std::__1::__vector_base.1574" }
%"class.std::__1::__vector_base.1574" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1575" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.1576" }
%"struct.std::__1::__compressed_pair_elem.1576" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1580" = type { %"class.std::__1::__compressed_pair.1581" }
%"class.std::__1::__compressed_pair.1581" = type { %"struct.std::__1::__compressed_pair_elem.1582" }
%"struct.std::__1::__compressed_pair_elem.1582" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.1586" = type { %"class.std::__1::__compressed_pair.1587" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.1588" }
%"struct.std::__1::__compressed_pair_elem.1588" = type { %"class.std::__1::map.1589"* }
%"class.std::__1::map.1589" = type opaque
%"class.std::__1::unique_ptr.1504" = type { %"class.std::__1::__compressed_pair.1505" }
%"class.std::__1::__compressed_pair.1505" = type { %"struct.std::__1::__compressed_pair_elem.1506" }
%"struct.std::__1::__compressed_pair_elem.1506" = type { i8* }
%"struct.std::__1::atomic.1593" = type { %"struct.std::__1::__atomic_base.1594" }
%"struct.std::__1::__atomic_base.1594" = type { %"struct.std::__1::__atomic_base.1595" }
%"struct.std::__1::__atomic_base.1595" = type { %"struct.std::__1::__cxx_atomic_impl.1596" }
%"struct.std::__1::__cxx_atomic_impl.1596" = type { %"struct.std::__1::__cxx_atomic_base_impl.1597" }
%"struct.std::__1::__cxx_atomic_base_impl.1597" = type { i32 }
%"class.v8::internal::Handle<v8::internal::Code>::ObjectRef" = type { %"class.v8::internal::Code" }
%"class.v8::internal::CodeDeoptEventRecord" = type <{ %"class.v8::internal::CodeEventRecord", i64, i8*, i32, [4 x i8], i64, i32, [4 x i8], %"struct.v8::CpuProfileDeoptFrame"*, i32, [4 x i8] }>
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }

$_ZN2v88internal12AbstractCode19SourcePositionTableENS0_18SharedFunctionInfoE = comdat any

$_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_ = comdat any

$_ZNK2v88internal18SharedFunctionInfo4NameEv = comdat any

$_ZN2v88internal16ProfilerListener27SharedFunctionInfoMoveEventEmm = comdat any

$_ZN2v88internal16ProfilerListener17CodeMovingGCEventEv = comdat any

$_ZN2v88internal16ProfilerListener25CodeDependencyChangeEventENS0_6HandleINS0_4CodeEEENS2_INS0_18SharedFunctionInfoEEEPKc = comdat any

$_ZN2v88internal17CodeEventListener27is_listening_to_code_eventsEv = comdat any

$_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS7_JS7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZN2v88internal9CodeEntry8RareDataD2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIiJRiS8_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm = comdat any

@_ZTVN2v88internal16ProfilerListenerE = hidden unnamed_addr constant { [23 x i8*], [3 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ProfilerListener"*)* @_ZN2v88internal16ProfilerListenerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*)* @_ZN2v88internal16ProfilerListenerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i32, i64*, i8*)* @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEEPKc to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i32, i64*, i64*)* @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_4NameEEE to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i32, i64*, i64*, i64*)* @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEE to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i32, i64*, i64*, i64*, i32, i32)* @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEEii to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i32, %"class.v8::internal::wasm::WasmCode"*, i8*, i64, i8*, i32, i32)* @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsEPKNS0_4wasm8WasmCodeENS0_6VectorIKcEEPS9_ii to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64*, i64)* @_ZN2v88internal16ProfilerListener13CallbackEventENS0_6HandleINS0_4NameEEEm to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64*, i64)* @_ZN2v88internal16ProfilerListener19GetterCallbackEventENS0_6HandleINS0_4NameEEEm to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64*, i64)* @_ZN2v88internal16ProfilerListener19SetterCallbackEventENS0_6HandleINS0_4NameEEEm to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64*, i64*)* @_ZN2v88internal16ProfilerListener21RegExpCodeCreateEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_6StringEEE to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64, i64)* @_ZN2v88internal16ProfilerListener13CodeMoveEventENS0_12AbstractCodeES2_ to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64, i64)* @_ZN2v88internal16ProfilerListener27SharedFunctionInfoMoveEventEmm to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64, i64)* @_ZN2v88internal16ProfilerListener22NativeContextMoveEventEmm to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*)* @_ZN2v88internal16ProfilerListener17CodeMovingGCEventEv to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64*, i64*)* @_ZN2v88internal16ProfilerListener19CodeDisableOptEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_18SharedFunctionInfoEEE to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64*, i8, i64, i32, i1)* @_ZN2v88internal16ProfilerListener14CodeDeoptEventENS0_6HandleINS0_4CodeEEENS0_14DeoptimizeKindEmib to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, i64*, i64*, i8*)* @_ZN2v88internal16ProfilerListener25CodeDependencyChangeEventENS0_6HandleINS0_4CodeEEENS2_INS0_18SharedFunctionInfoEEEPKc to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*)* @_ZN2v88internal16ProfilerListener18WeakCodeClearEventEv to i8*), i8* bitcast (i1 (%"class.v8::internal::CodeEventListener"*)* @_ZN2v88internal17CodeEventListener27is_listening_to_code_eventsEv to i8*), i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, %"class.v8::internal::CodeEntry"*)* @_ZN2v88internal16ProfilerListener20OnHeapObjectDeletionEPNS0_9CodeEntryE to i8*)], [3 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::ProfilerListener"*, %"class.v8::internal::CodeEntry"*)* @_ZThn8_N2v88internal16ProfilerListener20OnHeapObjectDeletionEPNS0_9CodeEntryE to i8*)] }, align 8
@_ZN2v88internal9CodeEntry18kEmptyResourceNameE = external local_unnamed_addr constant i8*, align 8
@.str = private unnamed_addr constant [5 x i8] c"get \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"set \00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"RegExp: \00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE = external local_unnamed_addr constant [3 x [197 x i8]], align 16

@_ZN2v88internal16ProfilerListenerC1EPNS0_7IsolateEPNS0_17CodeEventObserverERNS0_14StringsStorageERNS0_16WeakCodeRegistryENS_22CpuProfilingNamingModeE = hidden unnamed_addr alias void (%"class.v8::internal::ProfilerListener"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::WeakCodeRegistry"*, i32), void (%"class.v8::internal::ProfilerListener"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::WeakCodeRegistry"*, i32)* @_ZN2v88internal16ProfilerListenerC2EPNS0_7IsolateEPNS0_17CodeEventObserverERNS0_14StringsStorageERNS0_16WeakCodeRegistryENS_22CpuProfilingNamingModeE
@_ZN2v88internal16ProfilerListenerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::ProfilerListener"*), void (%"class.v8::internal::ProfilerListener"*)* @_ZN2v88internal16ProfilerListenerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal16ProfilerListenerC2EPNS0_7IsolateEPNS0_17CodeEventObserverERNS0_14StringsStorageERNS0_16WeakCodeRegistryENS_22CpuProfilingNamingModeE(%"class.v8::internal::ProfilerListener"* nocapture, %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::StringsStorage"* dereferenceable(64), %"class.v8::internal::WeakCodeRegistry"* dereferenceable(32), i32) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.v8::internal::ProfilerListener"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*], [3 x i8*] }, { [23 x i8*], [3 x i8*] }* @_ZTVN2v88internal16ProfilerListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*], [3 x i8*] }, { [23 x i8*], [3 x i8*] }* @_ZTVN2v88internal16ProfilerListenerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 2
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  store %"class.v8::internal::CodeEventObserver"* %2, %"class.v8::internal::CodeEventObserver"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  store %"class.v8::internal::StringsStorage"* %3, %"class.v8::internal::StringsStorage"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  store %"class.v8::internal::WeakCodeRegistry"* %4, %"class.v8::internal::WeakCodeRegistry"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 6
  store i32 %5, i32* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListenerD2Ev(%"class.v8::internal::ProfilerListener"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListenerD0Ev(%"class.v8::internal::ProfilerListener"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::ProfilerListener"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEEPKc(%"class.v8::internal::ProfilerListener"* nocapture readonly, i32, i64*, i8*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::Code", align 8
  %6 = alloca %"class.v8::internal::Code", align 8
  %7 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %8 = bitcast %"class.v8::internal::CodeEventsContainer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = load i64, i64* %2, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 162
  br i1 %20, label %21, label %35

21:                                               ; preds = %4
  %22 = bitcast %"class.v8::internal::Code"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %23, align 8
  %24 = add i64 %10, 27
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 536870912
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29, !prof !2

29:                                               ; preds = %21
  %30 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %5) #13
  br label %33

31:                                               ; preds = %21
  %32 = add i64 %10, 63
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i64 [ %30, %29 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %37

35:                                               ; preds = %4
  %36 = add i64 %10, 33
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %39 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %39, align 8
  %40 = call i8* @_Znwm(i64 72) #12
  %41 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %42 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %41, align 8
  %43 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %42, i8* %3) #13
  %44 = load i64, i64* bitcast (i8** @_ZN2v88internal9CodeEntry18kEmptyResourceNameE to i64*), align 8
  %45 = or i32 %1, 438016
  %46 = bitcast i8* %40 to i32*
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %40, i64 8
  %48 = bitcast i8* %47 to i8**
  store i8* %43, i8** %48, align 8
  %49 = getelementptr inbounds i8, i8* %40, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %44, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %40, i64 24
  %52 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 2
  %53 = bitcast i64* %52 to %"class.v8::internal::CodeEntry"**
  %54 = bitcast i64* %52 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 48, i1 false)
  store i8* %40, i8** %54, align 8
  %55 = load i64, i64* %2, align 8
  %56 = and i64 %55, -4294967296
  %57 = add i64 %55, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %56, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp eq i16 %64, 162
  %66 = bitcast i8* %40 to %"class.v8::internal::CodeEntry"*
  br i1 %65, label %67, label %85

67:                                               ; preds = %37
  %68 = bitcast %"class.v8::internal::Code"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  %69 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %69, align 8
  %70 = add i64 %55, 27
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 536870912
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75, !prof !2

75:                                               ; preds = %67
  %76 = call i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"* nonnull %6) #13
  %77 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %53, align 8
  br label %82

78:                                               ; preds = %67
  %79 = add i64 %55, 19
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  br label %82

82:                                               ; preds = %78, %75
  %83 = phi %"class.v8::internal::CodeEntry"* [ %77, %75 ], [ %66, %78 ]
  %84 = phi i32 [ %76, %75 ], [ %81, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #13
  br label %90

85:                                               ; preds = %37
  %86 = add i64 %55, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = ashr i32 %88, 1
  br label %90

90:                                               ; preds = %82, %85
  %91 = phi %"class.v8::internal::CodeEntry"* [ %83, %82 ], [ %66, %85 ]
  %92 = phi i32 [ %84, %82 ], [ %89, %85 ]
  %93 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 1
  %94 = bitcast [40 x i8]* %93 to i32*
  store i32 %92, i32* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  %96 = load %"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::WeakCodeRegistry"** %95, align 8
  call void @_ZN2v88internal16WeakCodeRegistry5TrackEPNS0_9CodeEntryENS0_6HandleINS0_12AbstractCodeEEE(%"class.v8::internal::WeakCodeRegistry"* %96, %"class.v8::internal::CodeEntry"* %91, i64* %2) #13
  %97 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %98 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %97, align 8
  %99 = bitcast %"class.v8::internal::CodeEventObserver"* %98 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %100 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %99, align 8
  %101 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %100, align 8
  call void %101(%"class.v8::internal::CodeEventObserver"* %98, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN2v88internal16WeakCodeRegistry5TrackEPNS0_9CodeEntryENS0_6HandleINS0_12AbstractCodeEEE(%"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::CodeEntry"*, i64*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_4NameEEE(%"class.v8::internal::ProfilerListener"* nocapture readonly, i32, i64*, i64*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::Code", align 8
  %6 = alloca %"class.v8::internal::Code", align 8
  %7 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %8 = bitcast %"class.v8::internal::CodeEventsContainer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = load i64, i64* %2, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 162
  br i1 %20, label %21, label %35

21:                                               ; preds = %4
  %22 = bitcast %"class.v8::internal::Code"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %23, align 8
  %24 = add i64 %10, 27
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 536870912
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29, !prof !2

29:                                               ; preds = %21
  %30 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %5) #13
  br label %33

31:                                               ; preds = %21
  %32 = add i64 %10, 63
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i64 [ %30, %29 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %37

35:                                               ; preds = %4
  %36 = add i64 %10, 33
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %39 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %39, align 8
  %40 = call i8* @_Znwm(i64 72) #12
  %41 = load i64, i64* %3, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %43 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %42, align 8
  %44 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %43, i64 %41) #13
  %45 = load i64, i64* bitcast (i8** @_ZN2v88internal9CodeEntry18kEmptyResourceNameE to i64*), align 8
  %46 = or i32 %1, 438016
  %47 = bitcast i8* %40 to i32*
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %40, i64 8
  %49 = bitcast i8* %48 to i8**
  store i8* %44, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %40, i64 16
  %51 = bitcast i8* %50 to i64*
  store i64 %45, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %40, i64 24
  %53 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 2
  %54 = bitcast i64* %53 to %"class.v8::internal::CodeEntry"**
  %55 = bitcast i64* %53 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 48, i1 false)
  store i8* %40, i8** %55, align 8
  %56 = load i64, i64* %2, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp eq i16 %65, 162
  %67 = bitcast i8* %40 to %"class.v8::internal::CodeEntry"*
  br i1 %66, label %68, label %86

68:                                               ; preds = %37
  %69 = bitcast %"class.v8::internal::Code"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %70, align 8
  %71 = add i64 %56, 27
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 536870912
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76, !prof !2

76:                                               ; preds = %68
  %77 = call i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"* nonnull %6) #13
  %78 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %54, align 8
  br label %83

79:                                               ; preds = %68
  %80 = add i64 %56, 19
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %79, %76
  %84 = phi %"class.v8::internal::CodeEntry"* [ %78, %76 ], [ %67, %79 ]
  %85 = phi i32 [ %77, %76 ], [ %82, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  br label %91

86:                                               ; preds = %37
  %87 = add i64 %56, 3
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = ashr i32 %89, 1
  br label %91

91:                                               ; preds = %83, %86
  %92 = phi %"class.v8::internal::CodeEntry"* [ %84, %83 ], [ %67, %86 ]
  %93 = phi i32 [ %85, %83 ], [ %90, %86 ]
  %94 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 1
  %95 = bitcast [40 x i8]* %94 to i32*
  store i32 %93, i32* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  %97 = load %"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::WeakCodeRegistry"** %96, align 8
  call void @_ZN2v88internal16WeakCodeRegistry5TrackEPNS0_9CodeEntryENS0_6HandleINS0_12AbstractCodeEEE(%"class.v8::internal::WeakCodeRegistry"* %97, %"class.v8::internal::CodeEntry"* %92, i64* %2) #13
  %98 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %99 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %98, align 8
  %100 = bitcast %"class.v8::internal::CodeEventObserver"* %99 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %101 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %100, align 8
  %102 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %101, align 8
  call void %102(%"class.v8::internal::CodeEventObserver"* %99, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEE(%"class.v8::internal::ProfilerListener"* nocapture readonly, i32, i64*, i64*, i64*) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8::internal::Code", align 8
  %7 = alloca %"class.v8::internal::Code", align 8
  %8 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %10 = bitcast %"class.v8::internal::CodeEventsContainer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %11, align 8
  %12 = load i64, i64* %2, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 162
  br i1 %22, label %23, label %37

23:                                               ; preds = %5
  %24 = bitcast %"class.v8::internal::Code"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %25, align 8
  %26 = add i64 %12, 27
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 536870912
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31, !prof !2

31:                                               ; preds = %23
  %32 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %6) #13
  br label %35

33:                                               ; preds = %23
  %34 = add i64 %12, 63
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i64 [ %32, %31 ], [ %34, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %39

37:                                               ; preds = %5
  %38 = add i64 %12, 33
  br label %39

39:                                               ; preds = %35, %37
  %40 = phi i64 [ %36, %35 ], [ %38, %37 ]
  %41 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %8, i64 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %41, align 8
  %42 = call i8* @_Znwm(i64 72) #12
  %43 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = load i64, i64* %3, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %9, i64 0, i32 0
  %47 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %46) #13
  %48 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %49 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %48, align 8
  %50 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %49, i8* %47) #13
  %51 = load i64, i64* %4, align 8
  %52 = load i64, i64* %3, align 8
  %53 = call i64 @_ZN2v88internal16ProfilerListener15InferScriptNameENS0_4NameENS0_18SharedFunctionInfoE(%"class.v8::internal::ProfilerListener"* undef, i64 %51, i64 %52)
  %54 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %48, align 8
  %55 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %54, i64 %53) #13
  %56 = or i32 %1, 438016
  %57 = bitcast i8* %42 to i32*
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %42, i64 8
  %59 = bitcast i8* %58 to i8**
  store i8* %50, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %42, i64 16
  %61 = bitcast i8* %60 to i8**
  store i8* %55, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %42, i64 24
  %63 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %8, i64 0, i32 0, i32 0, i32 2
  %64 = bitcast i64* %63 to %"class.v8::internal::CodeEntry"**
  %65 = bitcast i64* %63 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 48, i1 false)
  store i8* %42, i8** %65, align 8
  %66 = icmp eq i8* %47, null
  %67 = bitcast i8* %42 to %"class.v8::internal::CodeEntry"*
  br i1 %66, label %70, label %68

68:                                               ; preds = %39
  call void @_ZdaPv(i8* nonnull %47) #12
  %69 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %64, align 8
  br label %70

70:                                               ; preds = %39, %68
  %71 = phi %"class.v8::internal::CodeEntry"* [ %67, %39 ], [ %69, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  %72 = load i64, i64* %3, align 8
  call void @_ZN2v88internal9CodeEntry16FillFunctionInfoENS0_18SharedFunctionInfoE(%"class.v8::internal::CodeEntry"* %71, i64 %72) #13
  %73 = load i64, i64* %2, align 8
  %74 = and i64 %73, -4294967296
  %75 = add i64 %73, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %74, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = icmp eq i16 %82, 162
  br i1 %83, label %84, label %102

84:                                               ; preds = %70
  %85 = bitcast %"class.v8::internal::Code"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  %86 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %86, align 8
  %87 = add i64 %73, 27
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 536870912
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92, !prof !2

92:                                               ; preds = %84
  %93 = call i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"* nonnull %7) #13
  %94 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %64, align 8
  br label %99

95:                                               ; preds = %84
  %96 = add i64 %73, 19
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %95, %92
  %100 = phi %"class.v8::internal::CodeEntry"* [ %94, %92 ], [ %71, %95 ]
  %101 = phi i32 [ %93, %92 ], [ %98, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  br label %107

102:                                              ; preds = %70
  %103 = add i64 %73, 3
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = ashr i32 %105, 1
  br label %107

107:                                              ; preds = %99, %102
  %108 = phi %"class.v8::internal::CodeEntry"* [ %100, %99 ], [ %71, %102 ]
  %109 = phi i32 [ %101, %99 ], [ %106, %102 ]
  %110 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %8, i64 0, i32 0, i32 1
  %111 = bitcast [40 x i8]* %110 to i32*
  store i32 %109, i32* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  %113 = load %"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::WeakCodeRegistry"** %112, align 8
  call void @_ZN2v88internal16WeakCodeRegistry5TrackEPNS0_9CodeEntryENS0_6HandleINS0_12AbstractCodeEEE(%"class.v8::internal::WeakCodeRegistry"* %113, %"class.v8::internal::CodeEntry"* %108, i64* %2) #13
  %114 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %115 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %114, align 8
  %116 = bitcast %"class.v8::internal::CodeEventObserver"* %115 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %117 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %116, align 8
  %118 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %117, align 8
  call void %118(%"class.v8::internal::CodeEventObserver"* %115, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #13
  ret void
}

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal16ProfilerListener15InferScriptNameENS0_4NameENS0_18SharedFunctionInfoE(%"class.v8::internal::ProfilerListener"* nocapture readnone, i64, i64) local_unnamed_addr #2 align 2 {
  %4 = and i64 %1, -4294967296
  %5 = add i64 %1, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp ult i16 %12, 64
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = add i64 %1, 7
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %94

19:                                               ; preds = %3, %14
  %20 = and i64 %2, -4294967296
  %21 = add i64 %2, 15
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %20, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 100
  br i1 %34, label %35, label %43

35:                                               ; preds = %19
  %36 = add i64 %25, 11
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %20, %39
  %41 = add i64 %40, -1
  %42 = inttoptr i64 %41 to i32*
  br label %43

43:                                               ; preds = %19, %35
  %44 = phi i32* [ %27, %19 ], [ %42, %35 ]
  %45 = phi i64 [ %25, %19 ], [ %40, %35 ]
  %46 = and i64 %45, -4294967296
  %47 = load atomic i32, i32* %44 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %46, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp eq i16 %52, 112
  br i1 %53, label %54, label %94

54:                                               ; preds = %43
  %55 = load atomic i32, i32* %22 acquire, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %20, %56
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %20, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp eq i16 %65, 100
  br i1 %66, label %67, label %73

67:                                               ; preds = %54
  %68 = add i64 %57, 11
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %20, %71
  br label %73

73:                                               ; preds = %54, %67
  %74 = phi i64 [ %72, %67 ], [ %57, %54 ]
  %75 = and i64 %74, -4294967296
  %76 = add i64 %74, 51
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = and i64 %79, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %73
  %84 = add i64 %80, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = icmp ult i16 %91, 65
  br i1 %92, label %94, label %93

93:                                               ; preds = %73, %83
  br label %94

94:                                               ; preds = %93, %83, %43, %14
  %95 = phi i64 [ %1, %14 ], [ %1, %43 ], [ %1, %93 ], [ %80, %83 ]
  ret i64 %95
}

declare void @_ZN2v88internal9CodeEntry16FillFunctionInfoENS0_18SharedFunctionInfoE(%"class.v8::internal::CodeEntry"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEEii(%"class.v8::internal::ProfilerListener"* nocapture readonly, i32, i64*, i64*, i64*, i32, i32) unnamed_addr #2 align 2 {
  %8 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %9 = alloca %"class.std::__1::unique_ptr.1306", align 8
  %10 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %11 = alloca %"class.v8::internal::Code", align 8
  %12 = alloca %"class.v8::internal::Code", align 8
  %13 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %14 = alloca %"class.std::__1::unordered_map.1203", align 8
  %15 = alloca %"class.std::__1::unordered_set.1227", align 8
  %16 = alloca %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", align 8
  %17 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %18 = alloca %"class.v8::internal::SourcePositionTableIterator", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", align 8
  %21 = alloca %"class.std::__1::vector.1292", align 8
  %22 = alloca %"class.v8::internal::SourcePosition", align 8
  %23 = alloca %"class.std::__1::vector.1299", align 8
  %24 = alloca %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", align 8
  %25 = alloca %"struct.v8::internal::SourcePositionInfo", align 8
  %26 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %27 = alloca %"class.std::__1::unordered_set.1227", align 8
  %28 = alloca %"class.std::__1::unordered_map.1203", align 8
  %29 = bitcast %"class.v8::internal::CodeEventsContainer"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = load i64, i64* %2, align 8
  %32 = and i64 %31, -4294967296
  %33 = add i64 %31, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 162
  br i1 %41, label %42, label %56

42:                                               ; preds = %7
  %43 = bitcast %"class.v8::internal::Code"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %31, i64* %44, align 8
  %45 = add i64 %31, 27
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 536870912
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50, !prof !2

50:                                               ; preds = %42
  %51 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %12) #13
  br label %54

52:                                               ; preds = %42
  %53 = add i64 %31, 63
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %51, %50 ], [ %53, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %58

56:                                               ; preds = %7
  %57 = add i64 %31, 33
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %60 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %13, i64 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %60, align 8
  %61 = bitcast %"class.std::__1::unordered_map.1203"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #13
  %62 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0, i32 3
  %63 = bitcast %"class.std::__1::__compressed_pair.1223"* %62 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %63, align 8
  %64 = bitcast %"class.std::__1::unordered_set.1227"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0, i32 3
  %66 = bitcast %"class.std::__1::__compressed_pair.1246"* %65 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %66, align 8
  %67 = load i64, i64* %3, align 8
  %68 = and i64 %67, -4294967296
  %69 = add i64 %67, 15
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 acquire, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = add i64 %73, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %68, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 100
  br i1 %82, label %83, label %91

83:                                               ; preds = %58
  %84 = add i64 %73, 11
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %68, %87
  %89 = add i64 %88, -1
  %90 = inttoptr i64 %89 to i32*
  br label %91

91:                                               ; preds = %58, %83
  %92 = phi i32* [ %75, %58 ], [ %90, %83 ]
  %93 = phi i64 [ %73, %58 ], [ %88, %83 ]
  %94 = and i64 %93, -4294967296
  %95 = load atomic i32, i32* %92 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %94, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp eq i16 %100, 112
  br i1 %101, label %102, label %662

102:                                              ; preds = %91
  %103 = load i64, i64* %3, align 8
  %104 = and i64 %103, -4294967296
  %105 = add i64 %103, 15
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 acquire, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = add i64 %109, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %104, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load atomic i16, i16* %116 monotonic, align 2
  %118 = icmp eq i16 %117, 100
  br i1 %118, label %119, label %125

119:                                              ; preds = %102
  %120 = add i64 %109, 11
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %104, %123
  br label %125

125:                                              ; preds = %102, %119
  %126 = phi i64 [ %124, %119 ], [ %109, %102 ]
  %127 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 2
  %128 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 4
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %129, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %125
  %133 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %126) #13
  br label %147

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 1
  %138 = load i64*, i64** %137, align 8
  %139 = icmp eq i64* %136, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %134
  %141 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %128) #13
  br label %142

142:                                              ; preds = %140, %134
  %143 = phi i64* [ %141, %140 ], [ %136, %134 ]
  %144 = ptrtoint i64* %143 to i64
  %145 = add i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  store i64* %146, i64** %135, align 8
  store i64 %126, i64* %143, align 8
  br label %147

147:                                              ; preds = %142, %132
  %148 = phi i64* [ %133, %132 ], [ %143, %142 ]
  %149 = call i8* @_ZN2v88internal8MallocednwEm(i64 24) #13
  %150 = bitcast i8* %149 to %"class.v8::internal::SourcePositionTable"*
  %151 = ptrtoint i8* %149 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false)
  %152 = load i64, i64* %148, align 8
  %153 = add i64 %152, 47
  %154 = inttoptr i64 %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, 16
  %157 = icmp ne i32 %156, 0
  %158 = load i64, i64* %2, align 8
  %159 = and i64 %158, -4294967296
  %160 = add i64 %158, -1
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %159, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load atomic i16, i16* %166 monotonic, align 2
  %168 = icmp eq i16 %167, 162
  br i1 %168, label %169, label %174

169:                                              ; preds = %147
  %170 = add i64 %158, 27
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 15
  br label %174

174:                                              ; preds = %147, %169
  %175 = phi i32 [ %173, %169 ], [ 10, %147 ]
  %176 = icmp eq i32 %175, 11
  %177 = bitcast %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #13
  %178 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %158, i64* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AbstractCode>::ObjectRef"* %16, i64 0, i32 0
  %180 = load i64, i64* %3, align 8
  %181 = call i64 @_ZN2v88internal12AbstractCode19SourcePositionTableENS0_18SharedFunctionInfoE(%"class.v8::internal::AbstractCode"* nonnull %179, i64 %180)
  %182 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %182, i64 0, i32 31, i32 4
  %184 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %183, align 8
  %185 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %174
  %187 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %184, i64 %181) #13
  br label %201

188:                                              ; preds = %174
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %182, i64 0, i32 31, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %182, i64 0, i32 31, i32 1
  %192 = load i64*, i64** %191, align 8
  %193 = icmp eq i64* %190, %192
  br i1 %193, label %194, label %196

194:                                              ; preds = %188
  %195 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %182) #13
  br label %196

196:                                              ; preds = %194, %188
  %197 = phi i64* [ %195, %194 ], [ %190, %188 ]
  %198 = ptrtoint i64* %197 to i64
  %199 = add i64 %198, 8
  %200 = inttoptr i64 %199 to i64*
  store i64* %200, i64** %189, align 8
  store i64 %181, i64* %197, align 8
  br label %201

201:                                              ; preds = %186, %196
  %202 = phi i64* [ %187, %186 ], [ %197, %196 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #13
  br i1 %176, label %203, label %262

203:                                              ; preds = %201
  %204 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #13
  %205 = load i64, i64* %3, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %17, i64 0, i32 0
  %208 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %209 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %207, %"class.v8::internal::Isolate"* %208)
  %210 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %210, i64 0, i32 31, i32 4
  %212 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %211, align 8
  %213 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %203
  %215 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %212, i64 %209) #13
  br label %229

216:                                              ; preds = %203
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %210, i64 0, i32 31, i32 0
  %218 = load i64*, i64** %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %210, i64 0, i32 31, i32 1
  %220 = load i64*, i64** %219, align 8
  %221 = icmp eq i64* %218, %220
  br i1 %221, label %222, label %224

222:                                              ; preds = %216
  %223 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %210) #13
  br label %224

224:                                              ; preds = %222, %216
  %225 = phi i64* [ %223, %222 ], [ %218, %216 ]
  %226 = ptrtoint i64* %225 to i64
  %227 = add i64 %226, 8
  %228 = inttoptr i64 %227 to i64*
  store i64* %228, i64** %217, align 8
  store i64 %209, i64* %225, align 8
  br label %229

229:                                              ; preds = %214, %224
  %230 = phi i64* [ %215, %214 ], [ %225, %224 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #13
  %231 = load i64, i64* %2, align 8
  %232 = and i64 %231, -4294967296
  %233 = add i64 %231, 11
  %234 = inttoptr i64 %233 to i32*
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %232, %236
  %238 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %238, i64 0, i32 31, i32 4
  %240 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %239, align 8
  %241 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %240, null
  br i1 %241, label %244, label %242

242:                                              ; preds = %229
  %243 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %240, i64 %237) #13
  br label %257

244:                                              ; preds = %229
  %245 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %238, i64 0, i32 31, i32 0
  %246 = load i64*, i64** %245, align 8
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %238, i64 0, i32 31, i32 1
  %248 = load i64*, i64** %247, align 8
  %249 = icmp eq i64* %246, %248
  br i1 %249, label %250, label %252

250:                                              ; preds = %244
  %251 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %238) #13
  br label %252

252:                                              ; preds = %250, %244
  %253 = phi i64* [ %251, %250 ], [ %246, %244 ]
  %254 = ptrtoint i64* %253 to i64
  %255 = add i64 %254, 8
  %256 = inttoptr i64 %255 to i64*
  store i64* %256, i64** %245, align 8
  store i64 %237, i64* %253, align 8
  br label %257

257:                                              ; preds = %242, %252
  %258 = phi i64* [ %243, %242 ], [ %253, %252 ]
  %259 = call i8* @_Znwm(i64 120) #12
  %260 = bitcast i8* %259 to %"class.v8::internal::baseline::BytecodeOffsetIterator"*
  call void @_ZN2v88internal8baseline22BytecodeOffsetIteratorC1ENS0_6HandleINS0_9ByteArrayEEENS3_INS0_13BytecodeArrayEEE(%"class.v8::internal::baseline::BytecodeOffsetIterator"* nonnull %260, i64* %258, i64* %230) #13
  %261 = ptrtoint i8* %259 to i64
  br label %262

262:                                              ; preds = %257, %201
  %263 = phi i64 [ %261, %257 ], [ 0, %201 ]
  %264 = bitcast %"class.v8::internal::SourcePositionTableIterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %264) #13
  call void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_6HandleINS0_9ByteArrayEEENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nonnull %18, i64* %202, i32 0, i32 0) #13
  %265 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %18, i64 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, -1
  br i1 %267, label %320, label %268

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %18, i64 0, i32 4, i32 2
  %270 = bitcast i32* %19 to i8*
  %271 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %18, i64 0, i32 4, i32 0
  %272 = inttoptr i64 %263 to %"class.v8::internal::baseline::BytecodeOffsetIterator"*
  %273 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 6
  %274 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 5
  %275 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 4
  %276 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 1
  %277 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 3
  %278 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 9, i32 3
  %279 = bitcast i8** %278 to i64*
  %280 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 9, i32 1
  %281 = bitcast i8** %280 to i64*
  %282 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 9, i32 5
  %283 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 9, i32 4
  %284 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %272, i64 0, i32 9, i32 2
  %285 = bitcast %"class.std::__1::vector.1292"* %21 to i8*
  %286 = bitcast %"class.v8::internal::SourcePosition"* %22 to i8*
  %287 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %22, i64 0, i32 0
  %288 = getelementptr inbounds %"class.std::__1::vector.1292", %"class.std::__1::vector.1292"* %21, i64 0, i32 0, i32 0
  %289 = bitcast %"class.std::__1::vector.1299"* %23 to i8*
  %290 = getelementptr inbounds %"class.std::__1::vector.1292", %"class.std::__1::vector.1292"* %21, i64 0, i32 0, i32 1
  %291 = bitcast %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %24 to i8*
  %292 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %24, i64 0, i32 0
  %294 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %295 = load i8*, i8** @_ZN2v88internal9CodeEntry18kEmptyResourceNameE, align 8
  %296 = bitcast %"struct.v8::internal::SourcePositionInfo"* %25 to i8*
  %297 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %26 to i8*
  %298 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %26, i64 0, i32 0
  %300 = bitcast %"class.v8::internal::SharedFunctionInfo"* %8 to i8*
  %301 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 6
  %303 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %25, i64 0, i32 3
  %304 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %25, i64 0, i32 4
  %305 = bitcast %"class.std::__1::unique_ptr.1306"* %9 to i8*
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.1306", %"class.std::__1::unique_ptr.1306"* %9, i64 0, i32 0, i32 0, i32 0
  %307 = bitcast %"class.std::__1::unique_ptr.1306"* %9 to i8**
  %308 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0
  %309 = getelementptr inbounds %"class.std::__1::vector.1299", %"class.std::__1::vector.1299"* %23, i64 0, i32 0, i32 1
  %310 = getelementptr inbounds %"class.std::__1::vector.1299", %"class.std::__1::vector.1299"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %311 = bitcast %"struct.v8::internal::CodeEntryAndLineNumber"** %309 to i64*
  %312 = bitcast %"class.std::__1::vector.1299"* %23 to i64*
  %313 = bitcast %"struct.v8::internal::CodeEntryAndLineNumber"** %310 to i64*
  %314 = getelementptr inbounds %"class.std::__1::vector.1299", %"class.std::__1::vector.1299"* %23, i64 0, i32 0, i32 0
  %315 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0
  %316 = bitcast %"struct.v8::internal::SourcePositionInfo"** %290 to i64*
  %317 = bitcast %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %20 to i8*
  %318 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %20, i64 0, i32 0
  br label %325

320:                                              ; preds = %659, %262
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %264) #13
  %321 = icmp eq i64 %263, 0
  br i1 %321, label %662, label %322

322:                                              ; preds = %320
  %323 = inttoptr i64 %263 to %"class.v8::internal::baseline::BytecodeOffsetIterator"*
  call void @_ZN2v88internal8baseline22BytecodeOffsetIteratorD1Ev(%"class.v8::internal::baseline::BytecodeOffsetIterator"* nonnull %323) #13
  %324 = inttoptr i64 %263 to i8*
  call void @_ZdlPv(i8* %324) #12
  br label %662

325:                                              ; preds = %268, %659
  %326 = load i64, i64* %269, align 8
  %327 = lshr i64 %326, 1
  %328 = trunc i64 %327 to i32
  %329 = and i32 %328, 1073741823
  %330 = add nsw i32 %329, -1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %270) #13
  %331 = lshr i64 %326, 31
  %332 = trunc i64 %331 to i32
  %333 = and i32 %332, 65535
  %334 = add nsw i32 %333, -1
  store i32 %334, i32* %19, align 4
  %335 = load i32, i32* %271, align 8
  br i1 %176, label %336, label %410

336:                                              ; preds = %325
  %337 = load i32, i32* %273, align 8
  %338 = icmp slt i32 %337, %335
  br i1 %338, label %341, label %339

339:                                              ; preds = %336
  %340 = load i64, i64* %275, align 8
  br label %407

341:                                              ; preds = %336
  %342 = load i64, i64* %274, align 8
  %343 = load i8*, i8** %276, align 8
  %344 = load i32, i32* %277, align 4
  br label %345

345:                                              ; preds = %405, %341
  %346 = phi i32 [ %344, %341 ], [ %371, %405 ]
  %347 = phi i64 [ %342, %341 ], [ %374, %405 ]
  store i64 %347, i64* %275, align 8
  %348 = add i32 %346, 1
  store i32 %348, i32* %277, align 4
  %349 = sext i32 %346 to i64
  %350 = getelementptr inbounds i8, i8* %343, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = icmp sgt i8 %351, -1
  br i1 %353, label %370, label %354

354:                                              ; preds = %345
  %355 = sext i32 %348 to i64
  %356 = and i32 %352, 127
  %357 = add nsw i64 %355, 1
  %358 = trunc i64 %357 to i32
  store i32 %358, i32* %277, align 4
  %359 = getelementptr inbounds i8, i8* %343, i64 %355
  %360 = load i8, i8* %359, align 1
  %361 = and i8 %360, 127
  %362 = zext i8 %361 to i32
  %363 = shl nuw nsw i32 %362, 7
  %364 = or i32 %363, %356
  %365 = icmp slt i8 %360, 0
  br i1 %365, label %988, label %366

366:                                              ; preds = %1008, %998, %988, %354
  %367 = phi i64 [ %357, %354 ], [ %989, %988 ], [ %999, %998 ], [ %1009, %1008 ]
  %368 = phi i32 [ %364, %354 ], [ %996, %988 ], [ %1006, %998 ], [ %1015, %1008 ]
  %369 = trunc i64 %367 to i32
  br label %370

370:                                              ; preds = %366, %345
  %371 = phi i32 [ %348, %345 ], [ %369, %366 ]
  %372 = phi i32 [ %352, %345 ], [ %368, %366 ]
  %373 = sext i32 %372 to i64
  %374 = add i64 %347, %373
  store i64 %374, i64* %274, align 8
  %375 = load i64, i64* %279, align 8
  %376 = load i64, i64* %281, align 8
  %377 = sub i64 %375, %376
  %378 = load i32, i32* %282, align 4
  %379 = trunc i64 %377 to i32
  %380 = sub i32 %379, %378
  store i32 %380, i32* %273, align 8
  %381 = inttoptr i64 %375 to i8*
  %382 = load i8, i8* %381, align 1
  %383 = load i8, i8* %283, align 8
  %384 = lshr i8 %383, 1
  %385 = zext i8 %384 to i64
  %386 = zext i8 %382 to i64
  %387 = getelementptr inbounds [3 x [197 x i8]], [3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE, i64 0, i64 %385, i64 %386
  %388 = load i8, i8* %387, align 1
  %389 = zext i8 %388 to i64
  %390 = getelementptr inbounds i8, i8* %381, i64 %389
  store i8* %390, i8** %278, align 8
  %391 = load i8*, i8** %284, align 8
  %392 = icmp ult i8* %390, %391
  br i1 %392, label %393, label %405

393:                                              ; preds = %370
  %394 = load i8, i8* %390, align 1
  %395 = icmp ult i8 %394, 4
  br i1 %395, label %396, label %402

396:                                              ; preds = %393
  %397 = zext i8 %394 to i32
  %398 = shl nuw nsw i32 %397, 3
  %399 = lshr i32 67240962, %398
  %400 = trunc i32 %399 to i8
  store i8 %400, i8* %283, align 8
  %401 = getelementptr inbounds i8, i8* %390, i64 1
  store i8* %401, i8** %278, align 8
  br label %403

402:                                              ; preds = %393
  store i8 1, i8* %283, align 8
  br label %403

403:                                              ; preds = %396, %402
  %404 = phi i32 [ 0, %402 ], [ 1, %396 ]
  store i32 %404, i32* %282, align 4
  br label %405

405:                                              ; preds = %403, %370
  %406 = icmp slt i32 %380, %335
  br i1 %406, label %345, label %407

407:                                              ; preds = %405, %339
  %408 = phi i64 [ %340, %339 ], [ %347, %405 ]
  %409 = trunc i64 %408 to i32
  br label %410

410:                                              ; preds = %407, %325
  %411 = phi i32 [ %409, %407 ], [ %335, %325 ]
  %412 = icmp eq i32 %333, 0
  br i1 %412, label %413, label %418

413:                                              ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317) #13
  %414 = load i64, i64* %148, align 8
  store i64 %414, i64* %318, align 8
  %415 = call i32 @_ZNK2v88internal6Script13GetLineNumberEi(%"class.v8::internal::Script"* nonnull %319, i32 %330) #13
  %416 = add nsw i32 %415, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317) #13
  %417 = load i32, i32* %19, align 4
  call void @_ZN2v88internal19SourcePositionTable11SetPositionEiii(%"class.v8::internal::SourcePositionTable"* %150, i32 %411, i32 %416, i32 %417) #13
  br label %659

418:                                              ; preds = %410
  %419 = load i64, i64* %2, align 8
  %420 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %421 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %420, i64 0, i32 31, i32 4
  %422 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %421, align 8
  %423 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %422, null
  br i1 %423, label %426, label %424

424:                                              ; preds = %418
  %425 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %422, i64 %419) #13
  br label %439

426:                                              ; preds = %418
  %427 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %420, i64 0, i32 31, i32 0
  %428 = load i64*, i64** %427, align 8
  %429 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %420, i64 0, i32 31, i32 1
  %430 = load i64*, i64** %429, align 8
  %431 = icmp eq i64* %428, %430
  br i1 %431, label %432, label %434

432:                                              ; preds = %426
  %433 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %420) #13
  br label %434

434:                                              ; preds = %432, %426
  %435 = phi i64* [ %433, %432 ], [ %428, %426 ]
  %436 = ptrtoint i64* %435 to i64
  %437 = add i64 %436, 8
  %438 = inttoptr i64 %437 to i64*
  store i64* %438, i64** %427, align 8
  store i64 %419, i64* %435, align 8
  br label %439

439:                                              ; preds = %424, %434
  %440 = phi i64* [ %425, %424 ], [ %435, %434 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %285) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #13
  %441 = load i64, i64* %269, align 8
  store i64 %441, i64* %287, align 8
  call void @_ZNK2v88internal14SourcePosition13InliningStackENS0_6HandleINS0_4CodeEEE(%"class.std::__1::vector.1292"* nonnull sret %21, %"class.v8::internal::SourcePosition"* nonnull %22, i64* %440) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #13
  %442 = load %"struct.v8::internal::SourcePositionInfo"*, %"struct.v8::internal::SourcePositionInfo"** %288, align 8
  %443 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %442, i64 0, i32 3
  %444 = load i32, i32* %443, align 8
  %445 = add nsw i32 %444, 1
  %446 = load i32, i32* %19, align 4
  call void @_ZN2v88internal19SourcePositionTable11SetPositionEiii(%"class.v8::internal::SourcePositionTable"* %150, i32 %411, i32 %445, i32 %446) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 0, i64 24, i1 false) #13
  %447 = load %"struct.v8::internal::SourcePositionInfo"*, %"struct.v8::internal::SourcePositionInfo"** %288, align 8
  %448 = load %"struct.v8::internal::SourcePositionInfo"*, %"struct.v8::internal::SourcePositionInfo"** %290, align 8
  %449 = icmp eq %"struct.v8::internal::SourcePositionInfo"* %447, %448
  br i1 %449, label %450, label %464

450:                                              ; preds = %656, %439
  %451 = call { %"struct.std::__1::__hash_node_base.1208"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIiJRiS8_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1204"* nonnull %315, i32* nonnull dereferenceable(4) %19, i32* nonnull dereferenceable(4) %19, %"class.std::__1::vector.1299"* nonnull dereferenceable(24) %23) #13
  %452 = load %"struct.v8::internal::CodeEntryAndLineNumber"*, %"struct.v8::internal::CodeEntryAndLineNumber"** %314, align 8
  %453 = icmp eq %"struct.v8::internal::CodeEntryAndLineNumber"* %452, null
  br i1 %453, label %457, label %454

454:                                              ; preds = %450
  %455 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %452 to i64
  store i64 %455, i64* %311, align 8
  %456 = bitcast %"struct.v8::internal::CodeEntryAndLineNumber"* %452 to i8*
  call void @_ZdlPv(i8* %456) #12
  br label %457

457:                                              ; preds = %450, %454
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #13
  %458 = load %"struct.v8::internal::SourcePositionInfo"*, %"struct.v8::internal::SourcePositionInfo"** %288, align 8
  %459 = icmp eq %"struct.v8::internal::SourcePositionInfo"* %458, null
  br i1 %459, label %463, label %460

460:                                              ; preds = %457
  %461 = ptrtoint %"struct.v8::internal::SourcePositionInfo"* %458 to i64
  store i64 %461, i64* %316, align 8
  %462 = bitcast %"struct.v8::internal::SourcePositionInfo"* %458 to i8*
  call void @_ZdlPv(i8* %462) #12
  br label %463

463:                                              ; preds = %457, %460
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %285) #13
  br label %659

464:                                              ; preds = %439, %656
  %465 = phi %"struct.v8::internal::SourcePositionInfo"* [ %657, %656 ], [ %447, %439 ]
  %466 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %465, i64 0, i32 0, i32 0
  %467 = load i64, i64* %466, align 8
  %468 = and i64 %467, 2147483646
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %656, label %470

470:                                              ; preds = %464
  %471 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %465, i64 0, i32 2, i32 0, i32 0
  %472 = load i64*, i64** %471, align 8
  %473 = icmp eq i64* %472, null
  br i1 %473, label %656, label %474

474:                                              ; preds = %470
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #13
  %475 = load i64, i64* %472, align 8
  store i64 %475, i64* %292, align 8
  %476 = load i64, i64* %466, align 8
  %477 = lshr i64 %476, 1
  %478 = trunc i64 %477 to i32
  %479 = and i32 %478, 1073741823
  %480 = add nsw i32 %479, -1
  %481 = call i32 @_ZNK2v88internal6Script13GetLineNumberEi(%"class.v8::internal::Script"* nonnull %293, i32 %480) #13
  %482 = add nsw i32 %481, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #13
  %483 = load i64*, i64** %471, align 8
  %484 = load i64, i64* %483, align 8
  %485 = and i64 %484, -4294967296
  %486 = add i64 %484, 7
  %487 = inttoptr i64 %486 to i32*
  %488 = load i32, i32* %487, align 4
  %489 = zext i32 %488 to i64
  %490 = or i64 %485, %489
  %491 = and i64 %489, 1
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %508, label %493

493:                                              ; preds = %474
  %494 = add i64 %490, -1
  %495 = inttoptr i64 %494 to i32*
  %496 = load atomic i32, i32* %495 monotonic, align 4
  %497 = zext i32 %496 to i64
  %498 = or i64 %485, %497
  %499 = add i64 %498, 7
  %500 = inttoptr i64 %499 to i16*
  %501 = load atomic i16, i16* %500 monotonic, align 2
  %502 = icmp ult i16 %501, 65
  br i1 %502, label %503, label %508

503:                                              ; preds = %493
  %504 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %294, align 8
  %505 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %504, i64 %490) #13
  %506 = load i64*, i64** %471, align 8
  %507 = load i64, i64* %506, align 8
  br label %508

508:                                              ; preds = %493, %474, %503
  %509 = phi i64 [ %507, %503 ], [ %484, %474 ], [ %484, %493 ]
  %510 = phi i8* [ %505, %503 ], [ %295, %474 ], [ %295, %493 ]
  %511 = ptrtoint i8* %510 to i64
  %512 = add i64 %509, 47
  %513 = inttoptr i64 %512 to i32*
  %514 = load i32, i32* %513, align 4
  %515 = lshr i32 %514, 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %296) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #13
  %516 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %465, i64 0, i32 1, i32 0, i32 0
  %517 = load i64*, i64** %516, align 8
  %518 = load i64, i64* %517, align 8
  store i64 %518, i64* %298, align 8
  %519 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %299) #13
  %520 = add nsw i32 %519, 1
  %521 = sext i32 %520 to i64
  %522 = shl nsw i64 %521, 1
  %523 = and i64 %522, -140735340871682
  %524 = load i64*, i64** %516, align 8
  call void @_ZN2v88internal18SourcePositionInfoC1ENS0_14SourcePositionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"struct.v8::internal::SourcePositionInfo"* nonnull %25, i64 %523, i64* %524) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #13
  %525 = load i64*, i64** %516, align 8
  %526 = load i64, i64* %525, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300)
  store i64 %526, i64* %301, align 8
  %527 = load i32, i32* %302, align 8
  switch i32 %527, label %538 [
    i32 1, label %528
    i32 0, label %534
  ]

528:                                              ; preds = %508
  %529 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %8) #13
  %530 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %294, align 8
  %531 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %530, i8* %529) #13
  %532 = icmp eq i8* %529, null
  br i1 %532, label %539, label %533

533:                                              ; preds = %528
  call void @_ZdaPv(i8* nonnull %529) #12
  br label %539

534:                                              ; preds = %508
  %535 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %8) #13
  %536 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %294, align 8
  %537 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %536, i64 %535) #13
  br label %539

538:                                              ; preds = %508
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

539:                                              ; preds = %528, %533, %534
  %540 = phi i8* [ %537, %534 ], [ %531, %528 ], [ %531, %533 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300)
  %541 = ptrtoint i8* %540 to i64
  %542 = load i32, i32* %303, align 8
  %543 = add nsw i32 %542, 1
  %544 = load i32, i32* %304, align 4
  %545 = add nsw i32 %544, 1
  %546 = call i8* @_Znwm(i64 72) #12
  %547 = bitcast i8* %546 to %"class.v8::internal::CodeEntry"*
  %548 = shl i32 %515, 31
  %549 = or i32 %548, %1
  %550 = or i32 %549, 438016
  %551 = bitcast i8* %546 to i32*
  store i32 %550, i32* %551, align 4
  %552 = getelementptr inbounds i8, i8* %546, i64 8
  %553 = bitcast i8* %552 to i64*
  store i64 %541, i64* %553, align 8
  %554 = getelementptr inbounds i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to i64*
  store i64 %511, i64* %555, align 8
  %556 = getelementptr inbounds i8, i8* %546, i64 24
  %557 = bitcast i8* %556 to i32*
  store i32 %543, i32* %557, align 8
  %558 = getelementptr inbounds i8, i8* %546, i64 28
  %559 = bitcast i8* %558 to i32*
  store i32 %545, i32* %559, align 4
  %560 = getelementptr inbounds i8, i8* %546, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %560, i8 0, i64 40, i1 false) #13
  %561 = load i64*, i64** %516, align 8
  %562 = load i64, i64* %561, align 8
  call void @_ZN2v88internal9CodeEntry16FillFunctionInfoENS0_18SharedFunctionInfoE(%"class.v8::internal::CodeEntry"* nonnull %547, i64 %562) #13
  %563 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %294, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305)
  store i8* %546, i8** %307, align 8
  %564 = call %"struct.std::__1::__hash_node_base.1232"* @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.1228"* nonnull %308, %"class.std::__1::unique_ptr.1306"* nonnull dereferenceable(8) %9) #13
  %565 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %564, null
  %566 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %306, align 8
  br i1 %565, label %571, label %567

567:                                              ; preds = %539
  call void @_ZN2v88internal9CodeEntry14ReleaseStringsERNS0_14StringsStorageE(%"class.v8::internal::CodeEntry"* %566, %"class.v8::internal::StringsStorage"* dereferenceable(64) %563) #13
  %568 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %564, i64 2
  %569 = bitcast %"struct.std::__1::__hash_node_base.1232"* %568 to %"class.v8::internal::CodeEntry"**
  %570 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %569, align 8
  br label %573

571:                                              ; preds = %539
  %572 = call { %"struct.std::__1::__hash_node_base.1232"*, i8 } @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS7_JS7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1228"* nonnull %308, %"class.std::__1::unique_ptr.1306"* nonnull dereferenceable(8) %9, %"class.std::__1::unique_ptr.1306"* nonnull dereferenceable(8) %9) #13
  br label %573

573:                                              ; preds = %571, %567
  %574 = phi %"class.v8::internal::CodeEntry"* [ %570, %567 ], [ %566, %571 ]
  %575 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %306, align 8
  store %"class.v8::internal::CodeEntry"* null, %"class.v8::internal::CodeEntry"** %306, align 8
  %576 = icmp eq %"class.v8::internal::CodeEntry"* %575, null
  br i1 %576, label %600, label %577

577:                                              ; preds = %573
  %578 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %575, i64 0, i32 8, i32 0, i32 0, i32 0
  %579 = load %"struct.v8::internal::CodeEntry::RareData"*, %"struct.v8::internal::CodeEntry::RareData"** %578, align 8
  store %"struct.v8::internal::CodeEntry::RareData"* null, %"struct.v8::internal::CodeEntry::RareData"** %578, align 8
  %580 = icmp eq %"struct.v8::internal::CodeEntry::RareData"* %579, null
  br i1 %580, label %583, label %581

581:                                              ; preds = %577
  call void @_ZN2v88internal9CodeEntry8RareDataD2Ev(%"struct.v8::internal::CodeEntry::RareData"* nonnull %579) #13
  %582 = bitcast %"struct.v8::internal::CodeEntry::RareData"* %579 to i8*
  call void @_ZdlPv(i8* %582) #12
  br label %583

583:                                              ; preds = %581, %577
  %584 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %575, i64 0, i32 7, i32 0, i32 0, i32 0
  %585 = load %"class.v8::internal::SourcePositionTable"*, %"class.v8::internal::SourcePositionTable"** %584, align 8
  store %"class.v8::internal::SourcePositionTable"* null, %"class.v8::internal::SourcePositionTable"** %584, align 8
  %586 = icmp eq %"class.v8::internal::SourcePositionTable"* %585, null
  br i1 %586, label %598, label %587

587:                                              ; preds = %583
  %588 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %585, i64 0, i32 0, i32 0, i32 0
  %589 = load %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"*, %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %588, align 8
  %590 = icmp eq %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %589, null
  br i1 %590, label %596, label %591

591:                                              ; preds = %587
  %592 = ptrtoint %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %589 to i64
  %593 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %585, i64 0, i32 0, i32 0, i32 1
  %594 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %593 to i64*
  store i64 %592, i64* %594, align 8
  %595 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %589 to i8*
  call void @_ZdlPv(i8* %595) #12
  br label %596

596:                                              ; preds = %591, %587
  %597 = bitcast %"class.v8::internal::SourcePositionTable"* %585 to i8*
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %597) #13
  br label %598

598:                                              ; preds = %596, %583
  %599 = bitcast %"class.v8::internal::CodeEntry"* %575 to i8*
  call void @_ZdlPv(i8* %599) #12
  br label %600

600:                                              ; preds = %573, %598
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305)
  %601 = load %"struct.v8::internal::CodeEntryAndLineNumber"*, %"struct.v8::internal::CodeEntryAndLineNumber"** %309, align 8
  %602 = load %"struct.v8::internal::CodeEntryAndLineNumber"*, %"struct.v8::internal::CodeEntryAndLineNumber"** %310, align 8
  %603 = icmp ult %"struct.v8::internal::CodeEntryAndLineNumber"* %601, %602
  %604 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %602 to i64
  br i1 %603, label %605, label %610

605:                                              ; preds = %600
  %606 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %601, i64 0, i32 0
  store %"class.v8::internal::CodeEntry"* %574, %"class.v8::internal::CodeEntry"** %606, align 8
  %607 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %601, i64 0, i32 1
  store i32 %482, i32* %607, align 8
  %608 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %601, i64 1
  %609 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %608 to i64
  store i64 %609, i64* %311, align 8
  br label %655

610:                                              ; preds = %600
  %611 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %601 to i64
  %612 = load i64, i64* %312, align 8
  %613 = sub i64 %611, %612
  %614 = ashr exact i64 %613, 4
  %615 = add nsw i64 %614, 1
  %616 = icmp ugt i64 %615, 1152921504606846975
  br i1 %616, label %617, label %619

617:                                              ; preds = %610
  %618 = bitcast %"class.std::__1::vector.1299"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %618) #14
  unreachable

619:                                              ; preds = %610
  %620 = sub i64 %604, %612
  %621 = ashr exact i64 %620, 4
  %622 = icmp ult i64 %621, 576460752303423487
  br i1 %622, label %623, label %631

623:                                              ; preds = %619
  %624 = ashr exact i64 %620, 3
  %625 = icmp ult i64 %624, %615
  %626 = select i1 %625, i64 %615, i64 %624
  %627 = icmp eq i64 %626, 0
  br i1 %627, label %636, label %628

628:                                              ; preds = %623
  %629 = icmp ugt i64 %626, 1152921504606846975
  br i1 %629, label %630, label %631

630:                                              ; preds = %628
  call void @abort() #14
  unreachable

631:                                              ; preds = %628, %619
  %632 = phi i64 [ %626, %628 ], [ 1152921504606846975, %619 ]
  %633 = shl i64 %632, 4
  %634 = call i8* @_Znwm(i64 %633) #12
  %635 = bitcast i8* %634 to %"struct.v8::internal::CodeEntryAndLineNumber"*
  br label %636

636:                                              ; preds = %631, %623
  %637 = phi i64 [ %632, %631 ], [ 0, %623 ]
  %638 = phi i8* [ %634, %631 ], [ null, %623 ]
  %639 = phi %"struct.v8::internal::CodeEntryAndLineNumber"* [ %635, %631 ], [ null, %623 ]
  %640 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %639, i64 %614
  %641 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %639, i64 %637
  %642 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %641 to i64
  %643 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %640, i64 0, i32 0
  store %"class.v8::internal::CodeEntry"* %574, %"class.v8::internal::CodeEntry"** %643, align 8
  %644 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %639, i64 %614, i32 1
  store i32 %482, i32* %644, align 8
  %645 = getelementptr inbounds %"struct.v8::internal::CodeEntryAndLineNumber", %"struct.v8::internal::CodeEntryAndLineNumber"* %640, i64 1
  %646 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %645 to i64
  %647 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %639 to i64
  %648 = icmp sgt i64 %613, 0
  br i1 %648, label %649, label %651

649:                                              ; preds = %636
  %650 = inttoptr i64 %612 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %638, i8* align 8 %650, i64 %613, i1 false) #13
  br label %651

651:                                              ; preds = %649, %636
  store i64 %647, i64* %312, align 8
  store i64 %646, i64* %311, align 8
  store i64 %642, i64* %313, align 8
  %652 = icmp eq i64 %612, 0
  br i1 %652, label %655, label %653

653:                                              ; preds = %651
  %654 = inttoptr i64 %612 to i8*
  call void @_ZdlPv(i8* %654) #12
  br label %655

655:                                              ; preds = %653, %651, %605
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %296) #13
  br label %656

656:                                              ; preds = %470, %464, %655
  %657 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %465, i64 1
  %658 = icmp eq %"struct.v8::internal::SourcePositionInfo"* %657, %448
  br i1 %658, label %450, label %464

659:                                              ; preds = %463, %413
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %270) #13
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* nonnull %18) #13
  %660 = load i32, i32* %265, align 8
  %661 = icmp eq i32 %660, -1
  br i1 %661, label %320, label %325

662:                                              ; preds = %322, %320, %91
  %663 = phi i64 [ 0, %91 ], [ %151, %320 ], [ %151, %322 ]
  %664 = phi i1 [ false, %91 ], [ %157, %320 ], [ %157, %322 ]
  %665 = call i8* @_Znwm(i64 72) #12
  %666 = load i64, i64* %3, align 8
  %667 = bitcast %"class.v8::internal::SharedFunctionInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %667)
  %668 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %666, i64* %668, align 8
  %669 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 6
  %670 = load i32, i32* %669, align 8
  switch i32 %670, label %683 [
    i32 1, label %671
    i32 0, label %678
  ]

671:                                              ; preds = %662
  %672 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %10) #13
  %673 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %674 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %673, align 8
  %675 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %674, i8* %672) #13
  %676 = icmp eq i8* %672, null
  br i1 %676, label %684, label %677

677:                                              ; preds = %671
  call void @_ZdaPv(i8* nonnull %672) #12
  br label %684

678:                                              ; preds = %662
  %679 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %10) #13
  %680 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %681 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %680, align 8
  %682 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %681, i64 %679) #13
  br label %684

683:                                              ; preds = %662
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

684:                                              ; preds = %671, %677, %678
  %685 = phi i8* [ %682, %678 ], [ %675, %671 ], [ %675, %677 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %667)
  %686 = load i64, i64* %4, align 8
  %687 = load i64, i64* %3, align 8
  %688 = call i64 @_ZN2v88internal16ProfilerListener15InferScriptNameENS0_4NameENS0_18SharedFunctionInfoE(%"class.v8::internal::ProfilerListener"* undef, i64 %686, i64 %687)
  %689 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %690 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %689, align 8
  %691 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %690, i64 %688) #13
  %692 = zext i1 %664 to i32
  %693 = shl nuw i32 %692, 31
  %694 = or i32 %693, %1
  %695 = or i32 %694, 438016
  %696 = bitcast i8* %665 to i32*
  store i32 %695, i32* %696, align 4
  %697 = getelementptr inbounds i8, i8* %665, i64 8
  %698 = bitcast i8* %697 to i8**
  store i8* %685, i8** %698, align 8
  %699 = getelementptr inbounds i8, i8* %665, i64 16
  %700 = bitcast i8* %699 to i8**
  store i8* %691, i8** %700, align 8
  %701 = getelementptr inbounds i8, i8* %665, i64 24
  %702 = bitcast i8* %701 to i32*
  store i32 %5, i32* %702, align 8
  %703 = getelementptr inbounds i8, i8* %665, i64 28
  %704 = bitcast i8* %703 to i32*
  store i32 %6, i32* %704, align 4
  %705 = getelementptr inbounds i8, i8* %665, i64 32
  %706 = bitcast i8* %705 to i32*
  store i32 0, i32* %706, align 8
  %707 = getelementptr inbounds i8, i8* %665, i64 36
  %708 = bitcast i8* %707 to i32*
  store i32 0, i32* %708, align 4
  %709 = getelementptr inbounds i8, i8* %665, i64 40
  %710 = bitcast i8* %709 to i64*
  store i64 %663, i64* %710, align 8
  %711 = getelementptr inbounds i8, i8* %665, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %711, i8 0, i64 24, i1 false) #13
  %712 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %13, i64 0, i32 0, i32 0, i32 2
  %713 = bitcast i64* %712 to %"class.v8::internal::CodeEntry"**
  %714 = bitcast i64* %712 to i8**
  store i8* %665, i8** %714, align 8
  %715 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %716 = load i64, i64* %715, align 8
  %717 = icmp eq i64 %716, 0
  %718 = bitcast i8* %665 to %"class.v8::internal::CodeEntry"*
  br i1 %717, label %869, label %719

719:                                              ; preds = %684
  %720 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %721 = bitcast %"class.std::__1::unordered_set.1227"* %15 to i64*
  %722 = load i64, i64* %721, align 8
  store %"struct.std::__1::__hash_node_base.1232"** null, %"struct.std::__1::__hash_node_base.1232"*** %720, align 8
  %723 = bitcast %"class.std::__1::unordered_set.1227"* %27 to i64*
  store i64 %722, i64* %723, align 8
  %724 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %725 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %726 = load i64, i64* %724, align 8
  store i64 %726, i64* %725, align 8
  store i64 0, i64* %724, align 8
  %727 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %27, i64 0, i32 0, i32 1
  %728 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0, i32 1
  %729 = bitcast %"class.std::__1::__compressed_pair.1239"* %728 to i64*
  %730 = bitcast %"class.std::__1::__compressed_pair.1239"* %727 to i64*
  %731 = load i64, i64* %729, align 8
  store i64 %731, i64* %730, align 8
  %732 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %733 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %27, i64 0, i32 0, i32 2, i32 0, i32 0
  %734 = load i64, i64* %732, align 8
  store i64 %734, i64* %733, align 8
  %735 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %27, i64 0, i32 0, i32 3
  %736 = bitcast %"class.std::__1::__compressed_pair.1246"* %735 to i32*
  %737 = load i32, i32* %66, align 8
  store i32 %737, i32* %736, align 8
  %738 = icmp eq i64 %734, 0
  %739 = inttoptr i64 %722 to %"struct.std::__1::__hash_node_base.1232"**
  br i1 %738, label %760, label %740

740:                                              ; preds = %719
  %741 = inttoptr i64 %731 to %"struct.std::__1::__hash_node_base.1232"*
  %742 = getelementptr inbounds %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1239"* %727, i64 0, i32 0, i32 0
  %743 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %741, i64 1
  %744 = bitcast %"struct.std::__1::__hash_node_base.1232"* %743 to i64*
  %745 = load i64, i64* %744, align 8
  %746 = call i64 @llvm.ctpop.i64(i64 %726) #13, !range !3
  %747 = icmp ugt i64 %746, 1
  br i1 %747, label %751, label %748

748:                                              ; preds = %740
  %749 = add i64 %726, -1
  %750 = and i64 %745, %749
  br label %755

751:                                              ; preds = %740
  %752 = icmp ult i64 %745, %726
  br i1 %752, label %755, label %753

753:                                              ; preds = %751
  %754 = urem i64 %745, %726
  br label %755

755:                                              ; preds = %753, %751, %748
  %756 = phi i64 [ %750, %748 ], [ %754, %753 ], [ %745, %751 ]
  %757 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %739, i64 %756
  store %"struct.std::__1::__hash_node_base.1232"* %742, %"struct.std::__1::__hash_node_base.1232"** %757, align 8
  %758 = bitcast %"class.std::__1::__compressed_pair.1239"* %728 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %758, i8 0, i64 16, i1 false) #13
  %759 = load i64, i64* %715, align 8
  br label %760

760:                                              ; preds = %719, %755
  %761 = phi i64 [ %716, %719 ], [ %759, %755 ]
  %762 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = bitcast %"class.std::__1::unordered_map.1203"* %14 to i64*
  %764 = load i64, i64* %763, align 8
  store %"struct.std::__1::__hash_node_base.1208"** null, %"struct.std::__1::__hash_node_base.1208"*** %762, align 8
  %765 = bitcast %"class.std::__1::unordered_map.1203"* %28 to i64*
  store i64 %764, i64* %765, align 8
  %766 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %767 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %768 = load i64, i64* %766, align 8
  store i64 %768, i64* %767, align 8
  store i64 0, i64* %766, align 8
  %769 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %28, i64 0, i32 0, i32 1
  %770 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0, i32 1
  %771 = bitcast %"class.std::__1::__compressed_pair.1215"* %770 to i64*
  %772 = bitcast %"class.std::__1::__compressed_pair.1215"* %769 to i64*
  %773 = load i64, i64* %771, align 8
  store i64 %773, i64* %772, align 8
  %774 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %28, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 %761, i64* %774, align 8
  %775 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %28, i64 0, i32 0, i32 3
  %776 = bitcast %"class.std::__1::__compressed_pair.1223"* %775 to i32*
  %777 = load i32, i32* %63, align 8
  store i32 %777, i32* %776, align 8
  %778 = icmp eq i64 %761, 0
  %779 = inttoptr i64 %764 to %"struct.std::__1::__hash_node_base.1208"**
  br i1 %778, label %799, label %780

780:                                              ; preds = %760
  %781 = inttoptr i64 %773 to %"struct.std::__1::__hash_node_base.1208"*
  %782 = getelementptr inbounds %"class.std::__1::__compressed_pair.1215", %"class.std::__1::__compressed_pair.1215"* %769, i64 0, i32 0, i32 0
  %783 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %781, i64 1
  %784 = bitcast %"struct.std::__1::__hash_node_base.1208"* %783 to i64*
  %785 = load i64, i64* %784, align 8
  %786 = call i64 @llvm.ctpop.i64(i64 %768) #13, !range !3
  %787 = icmp ugt i64 %786, 1
  br i1 %787, label %791, label %788

788:                                              ; preds = %780
  %789 = add i64 %768, -1
  %790 = and i64 %785, %789
  br label %795

791:                                              ; preds = %780
  %792 = icmp ult i64 %785, %768
  br i1 %792, label %795, label %793

793:                                              ; preds = %791
  %794 = urem i64 %785, %768
  br label %795

795:                                              ; preds = %793, %791, %788
  %796 = phi i64 [ %790, %788 ], [ %794, %793 ], [ %785, %791 ]
  %797 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %779, i64 %796
  store %"struct.std::__1::__hash_node_base.1208"* %782, %"struct.std::__1::__hash_node_base.1208"** %797, align 8
  %798 = bitcast %"class.std::__1::__compressed_pair.1215"* %770 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %798, i8 0, i64 16, i1 false) #13
  br label %799

799:                                              ; preds = %760, %795
  call void @_ZN2v88internal9CodeEntry15SetInlineStacksENSt3__113unordered_setINS2_10unique_ptrIS1_NS2_14default_deleteIS1_EEEENS1_6HasherENS1_6EqualsENS2_9allocatorIS7_EEEENS2_13unordered_mapIiNS2_6vectorINS0_22CodeEntryAndLineNumberENSA_ISF_EEEENS2_4hashIiEENS2_8equal_toIiEENSA_INS2_4pairIKiSH_EEEEEE(%"class.v8::internal::CodeEntry"* nonnull %718, %"class.std::__1::unordered_set.1227"* nonnull %27, %"class.std::__1::unordered_map.1203"* nonnull %28) #13
  %800 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %28, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %801 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %800, align 8
  %802 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %801, null
  br i1 %802, label %819, label %803

803:                                              ; preds = %799, %816
  %804 = phi %"struct.std::__1::__hash_node_base.1208"* [ %806, %816 ], [ %801, %799 ]
  %805 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %804, i64 0, i32 0
  %806 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %805, align 8
  %807 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %804, i64 3
  %808 = bitcast %"struct.std::__1::__hash_node_base.1208"* %807 to %"struct.v8::internal::CodeEntryAndLineNumber"**
  %809 = load %"struct.v8::internal::CodeEntryAndLineNumber"*, %"struct.v8::internal::CodeEntryAndLineNumber"** %808, align 8
  %810 = icmp eq %"struct.v8::internal::CodeEntryAndLineNumber"* %809, null
  br i1 %810, label %816, label %811

811:                                              ; preds = %803
  %812 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %809 to i64
  %813 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %804, i64 4
  %814 = bitcast %"struct.std::__1::__hash_node_base.1208"* %813 to i64*
  store i64 %812, i64* %814, align 8
  %815 = bitcast %"struct.v8::internal::CodeEntryAndLineNumber"* %809 to i8*
  call void @_ZdlPv(i8* %815) #12
  br label %816

816:                                              ; preds = %811, %803
  %817 = bitcast %"struct.std::__1::__hash_node_base.1208"* %804 to i8*
  call void @_ZdlPv(i8* %817) #12
  %818 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %806, null
  br i1 %818, label %819, label %803

819:                                              ; preds = %816, %799
  %820 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %821 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %820, align 8
  store %"struct.std::__1::__hash_node_base.1208"** null, %"struct.std::__1::__hash_node_base.1208"*** %820, align 8
  %822 = icmp eq %"struct.std::__1::__hash_node_base.1208"** %821, null
  br i1 %822, label %825, label %823

823:                                              ; preds = %819
  %824 = bitcast %"struct.std::__1::__hash_node_base.1208"** %821 to i8*
  call void @_ZdlPv(i8* %824) #12
  br label %825

825:                                              ; preds = %819, %823
  %826 = getelementptr inbounds %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1239"* %727, i64 0, i32 0, i32 0, i32 0
  %827 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %826, align 8
  %828 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %827, null
  br i1 %828, label %863, label %829

829:                                              ; preds = %825, %860
  %830 = phi %"struct.std::__1::__hash_node_base.1232"* [ %832, %860 ], [ %827, %825 ]
  %831 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %830, i64 0, i32 0
  %832 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %831, align 8
  %833 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %830, i64 2
  %834 = bitcast %"struct.std::__1::__hash_node_base.1232"* %833 to %"class.v8::internal::CodeEntry"**
  %835 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %834, align 8
  store %"class.v8::internal::CodeEntry"* null, %"class.v8::internal::CodeEntry"** %834, align 8
  %836 = icmp eq %"class.v8::internal::CodeEntry"* %835, null
  br i1 %836, label %860, label %837

837:                                              ; preds = %829
  %838 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %835, i64 0, i32 8, i32 0, i32 0, i32 0
  %839 = load %"struct.v8::internal::CodeEntry::RareData"*, %"struct.v8::internal::CodeEntry::RareData"** %838, align 8
  store %"struct.v8::internal::CodeEntry::RareData"* null, %"struct.v8::internal::CodeEntry::RareData"** %838, align 8
  %840 = icmp eq %"struct.v8::internal::CodeEntry::RareData"* %839, null
  br i1 %840, label %843, label %841

841:                                              ; preds = %837
  call void @_ZN2v88internal9CodeEntry8RareDataD2Ev(%"struct.v8::internal::CodeEntry::RareData"* nonnull %839) #13
  %842 = bitcast %"struct.v8::internal::CodeEntry::RareData"* %839 to i8*
  call void @_ZdlPv(i8* %842) #12
  br label %843

843:                                              ; preds = %841, %837
  %844 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %835, i64 0, i32 7, i32 0, i32 0, i32 0
  %845 = load %"class.v8::internal::SourcePositionTable"*, %"class.v8::internal::SourcePositionTable"** %844, align 8
  store %"class.v8::internal::SourcePositionTable"* null, %"class.v8::internal::SourcePositionTable"** %844, align 8
  %846 = icmp eq %"class.v8::internal::SourcePositionTable"* %845, null
  br i1 %846, label %858, label %847

847:                                              ; preds = %843
  %848 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %845, i64 0, i32 0, i32 0, i32 0
  %849 = load %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"*, %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %848, align 8
  %850 = icmp eq %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %849, null
  br i1 %850, label %856, label %851

851:                                              ; preds = %847
  %852 = ptrtoint %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %849 to i64
  %853 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %845, i64 0, i32 0, i32 0, i32 1
  %854 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %853 to i64*
  store i64 %852, i64* %854, align 8
  %855 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %849 to i8*
  call void @_ZdlPv(i8* %855) #12
  br label %856

856:                                              ; preds = %851, %847
  %857 = bitcast %"class.v8::internal::SourcePositionTable"* %845 to i8*
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %857) #13
  br label %858

858:                                              ; preds = %856, %843
  %859 = bitcast %"class.v8::internal::CodeEntry"* %835 to i8*
  call void @_ZdlPv(i8* %859) #12
  br label %860

860:                                              ; preds = %829, %858
  %861 = bitcast %"struct.std::__1::__hash_node_base.1232"* %830 to i8*
  call void @_ZdlPv(i8* %861) #12
  %862 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %832, null
  br i1 %862, label %863, label %829

863:                                              ; preds = %860, %825
  %864 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %864, align 8
  store %"struct.std::__1::__hash_node_base.1232"** null, %"struct.std::__1::__hash_node_base.1232"*** %864, align 8
  %866 = icmp eq %"struct.std::__1::__hash_node_base.1232"** %865, null
  br i1 %866, label %869, label %867

867:                                              ; preds = %863
  %868 = bitcast %"struct.std::__1::__hash_node_base.1232"** %865 to i8*
  call void @_ZdlPv(i8* %868) #12
  br label %869

869:                                              ; preds = %867, %863, %684
  %870 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %713, align 8
  %871 = load i64, i64* %3, align 8
  call void @_ZN2v88internal9CodeEntry16FillFunctionInfoENS0_18SharedFunctionInfoE(%"class.v8::internal::CodeEntry"* %870, i64 %871) #13
  %872 = load i64, i64* %2, align 8
  %873 = and i64 %872, -4294967296
  %874 = add i64 %872, -1
  %875 = inttoptr i64 %874 to i32*
  %876 = load atomic i32, i32* %875 monotonic, align 4
  %877 = zext i32 %876 to i64
  %878 = or i64 %873, %877
  %879 = add i64 %878, 7
  %880 = inttoptr i64 %879 to i16*
  %881 = load atomic i16, i16* %880 monotonic, align 2
  %882 = icmp eq i16 %881, 162
  br i1 %882, label %883, label %901

883:                                              ; preds = %869
  %884 = bitcast %"class.v8::internal::Code"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %884) #13
  %885 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %872, i64* %885, align 8
  %886 = add i64 %872, 27
  %887 = inttoptr i64 %886 to i32*
  %888 = load atomic i32, i32* %887 monotonic, align 4
  %889 = and i32 %888, 536870912
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %894, label %891, !prof !2

891:                                              ; preds = %883
  %892 = call i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"* nonnull %11) #13
  %893 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %713, align 8
  br label %898

894:                                              ; preds = %883
  %895 = add i64 %872, 19
  %896 = inttoptr i64 %895 to i32*
  %897 = load i32, i32* %896, align 4
  br label %898

898:                                              ; preds = %894, %891
  %899 = phi %"class.v8::internal::CodeEntry"* [ %893, %891 ], [ %870, %894 ]
  %900 = phi i32 [ %892, %891 ], [ %897, %894 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %884) #13
  br label %906

901:                                              ; preds = %869
  %902 = add i64 %872, 3
  %903 = inttoptr i64 %902 to i32*
  %904 = load i32, i32* %903, align 4
  %905 = ashr i32 %904, 1
  br label %906

906:                                              ; preds = %898, %901
  %907 = phi %"class.v8::internal::CodeEntry"* [ %899, %898 ], [ %870, %901 ]
  %908 = phi i32 [ %900, %898 ], [ %905, %901 ]
  %909 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %13, i64 0, i32 0, i32 1
  %910 = bitcast [40 x i8]* %909 to i32*
  store i32 %908, i32* %910, align 8
  %911 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  %912 = load %"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::WeakCodeRegistry"** %911, align 8
  call void @_ZN2v88internal16WeakCodeRegistry5TrackEPNS0_9CodeEntryENS0_6HandleINS0_12AbstractCodeEEE(%"class.v8::internal::WeakCodeRegistry"* %912, %"class.v8::internal::CodeEntry"* %907, i64* %2) #13
  %913 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %914 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %913, align 8
  %915 = bitcast %"class.v8::internal::CodeEventObserver"* %914 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %916 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %915, align 8
  %917 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %916, align 8
  call void %917(%"class.v8::internal::CodeEventObserver"* %914, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %13) #13
  %918 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %919 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %918, align 8
  %920 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %919, null
  br i1 %920, label %955, label %921

921:                                              ; preds = %906, %952
  %922 = phi %"struct.std::__1::__hash_node_base.1232"* [ %924, %952 ], [ %919, %906 ]
  %923 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %922, i64 0, i32 0
  %924 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %923, align 8
  %925 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %922, i64 2
  %926 = bitcast %"struct.std::__1::__hash_node_base.1232"* %925 to %"class.v8::internal::CodeEntry"**
  %927 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %926, align 8
  store %"class.v8::internal::CodeEntry"* null, %"class.v8::internal::CodeEntry"** %926, align 8
  %928 = icmp eq %"class.v8::internal::CodeEntry"* %927, null
  br i1 %928, label %952, label %929

929:                                              ; preds = %921
  %930 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %927, i64 0, i32 8, i32 0, i32 0, i32 0
  %931 = load %"struct.v8::internal::CodeEntry::RareData"*, %"struct.v8::internal::CodeEntry::RareData"** %930, align 8
  store %"struct.v8::internal::CodeEntry::RareData"* null, %"struct.v8::internal::CodeEntry::RareData"** %930, align 8
  %932 = icmp eq %"struct.v8::internal::CodeEntry::RareData"* %931, null
  br i1 %932, label %935, label %933

933:                                              ; preds = %929
  call void @_ZN2v88internal9CodeEntry8RareDataD2Ev(%"struct.v8::internal::CodeEntry::RareData"* nonnull %931) #13
  %934 = bitcast %"struct.v8::internal::CodeEntry::RareData"* %931 to i8*
  call void @_ZdlPv(i8* %934) #12
  br label %935

935:                                              ; preds = %933, %929
  %936 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %927, i64 0, i32 7, i32 0, i32 0, i32 0
  %937 = load %"class.v8::internal::SourcePositionTable"*, %"class.v8::internal::SourcePositionTable"** %936, align 8
  store %"class.v8::internal::SourcePositionTable"* null, %"class.v8::internal::SourcePositionTable"** %936, align 8
  %938 = icmp eq %"class.v8::internal::SourcePositionTable"* %937, null
  br i1 %938, label %950, label %939

939:                                              ; preds = %935
  %940 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %937, i64 0, i32 0, i32 0, i32 0
  %941 = load %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"*, %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %940, align 8
  %942 = icmp eq %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %941, null
  br i1 %942, label %948, label %943

943:                                              ; preds = %939
  %944 = ptrtoint %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %941 to i64
  %945 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %937, i64 0, i32 0, i32 0, i32 1
  %946 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %945 to i64*
  store i64 %944, i64* %946, align 8
  %947 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %941 to i8*
  call void @_ZdlPv(i8* %947) #12
  br label %948

948:                                              ; preds = %943, %939
  %949 = bitcast %"class.v8::internal::SourcePositionTable"* %937 to i8*
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %949) #13
  br label %950

950:                                              ; preds = %948, %935
  %951 = bitcast %"class.v8::internal::CodeEntry"* %927 to i8*
  call void @_ZdlPv(i8* %951) #12
  br label %952

952:                                              ; preds = %921, %950
  %953 = bitcast %"struct.std::__1::__hash_node_base.1232"* %922 to i8*
  call void @_ZdlPv(i8* %953) #12
  %954 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %924, null
  br i1 %954, label %955, label %921

955:                                              ; preds = %952, %906
  %956 = getelementptr inbounds %"class.std::__1::unordered_set.1227", %"class.std::__1::unordered_set.1227"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %957 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %956, align 8
  store %"struct.std::__1::__hash_node_base.1232"** null, %"struct.std::__1::__hash_node_base.1232"*** %956, align 8
  %958 = icmp eq %"struct.std::__1::__hash_node_base.1232"** %957, null
  br i1 %958, label %961, label %959

959:                                              ; preds = %955
  %960 = bitcast %"struct.std::__1::__hash_node_base.1232"** %957 to i8*
  call void @_ZdlPv(i8* %960) #12
  br label %961

961:                                              ; preds = %955, %959
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #13
  %962 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %963 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %962, align 8
  %964 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %963, null
  br i1 %964, label %981, label %965

965:                                              ; preds = %961, %978
  %966 = phi %"struct.std::__1::__hash_node_base.1208"* [ %968, %978 ], [ %963, %961 ]
  %967 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %966, i64 0, i32 0
  %968 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %967, align 8
  %969 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %966, i64 3
  %970 = bitcast %"struct.std::__1::__hash_node_base.1208"* %969 to %"struct.v8::internal::CodeEntryAndLineNumber"**
  %971 = load %"struct.v8::internal::CodeEntryAndLineNumber"*, %"struct.v8::internal::CodeEntryAndLineNumber"** %970, align 8
  %972 = icmp eq %"struct.v8::internal::CodeEntryAndLineNumber"* %971, null
  br i1 %972, label %978, label %973

973:                                              ; preds = %965
  %974 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %971 to i64
  %975 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %966, i64 4
  %976 = bitcast %"struct.std::__1::__hash_node_base.1208"* %975 to i64*
  store i64 %974, i64* %976, align 8
  %977 = bitcast %"struct.v8::internal::CodeEntryAndLineNumber"* %971 to i8*
  call void @_ZdlPv(i8* %977) #12
  br label %978

978:                                              ; preds = %973, %965
  %979 = bitcast %"struct.std::__1::__hash_node_base.1208"* %966 to i8*
  call void @_ZdlPv(i8* %979) #12
  %980 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %968, null
  br i1 %980, label %981, label %965

981:                                              ; preds = %978, %961
  %982 = getelementptr inbounds %"class.std::__1::unordered_map.1203", %"class.std::__1::unordered_map.1203"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %983 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %982, align 8
  store %"struct.std::__1::__hash_node_base.1208"** null, %"struct.std::__1::__hash_node_base.1208"*** %982, align 8
  %984 = icmp eq %"struct.std::__1::__hash_node_base.1208"** %983, null
  br i1 %984, label %987, label %985

985:                                              ; preds = %981
  %986 = bitcast %"struct.std::__1::__hash_node_base.1208"** %983 to i8*
  call void @_ZdlPv(i8* %986) #12
  br label %987

987:                                              ; preds = %985, %981
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #13
  ret void

988:                                              ; preds = %354
  %989 = add nsw i64 %355, 2
  %990 = trunc i64 %989 to i32
  store i32 %990, i32* %277, align 4
  %991 = getelementptr inbounds i8, i8* %343, i64 %357
  %992 = load i8, i8* %991, align 1
  %993 = and i8 %992, 127
  %994 = zext i8 %993 to i32
  %995 = shl nuw nsw i32 %994, 14
  %996 = or i32 %995, %364
  %997 = icmp slt i8 %992, 0
  br i1 %997, label %998, label %366

998:                                              ; preds = %988
  %999 = add nsw i64 %355, 3
  %1000 = trunc i64 %999 to i32
  store i32 %1000, i32* %277, align 4
  %1001 = getelementptr inbounds i8, i8* %343, i64 %989
  %1002 = load i8, i8* %1001, align 1
  %1003 = and i8 %1002, 127
  %1004 = zext i8 %1003 to i32
  %1005 = shl nuw nsw i32 %1004, 21
  %1006 = or i32 %1005, %996
  %1007 = icmp slt i8 %1002, 0
  br i1 %1007, label %1008, label %366

1008:                                             ; preds = %998
  %1009 = add nsw i64 %355, 4
  %1010 = trunc i64 %1009 to i32
  store i32 %1010, i32* %277, align 4
  %1011 = getelementptr inbounds i8, i8* %343, i64 %999
  %1012 = load i8, i8* %1011, align 1
  %1013 = zext i8 %1012 to i32
  %1014 = shl i32 %1013, 28
  %1015 = or i32 %1014, %1006
  br label %366
}

declare i8* @_ZN2v88internal8MallocednwEm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal12AbstractCode19SourcePositionTableENS0_18SharedFunctionInfoE(%"class.v8::internal::AbstractCode"*, i64) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::AbstractCode", %"class.v8::internal::AbstractCode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 162
  br i1 %15, label %16, label %79

16:                                               ; preds = %2
  %17 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %5, 27
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 15
  %23 = icmp eq i32 %22, 11
  br i1 %23, label %24, label %71

24:                                               ; preds = %16
  %25 = and i64 %1, -262144
  %26 = or i64 %25, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %3, %"class.v8::internal::Isolate"* %30) #13
  %32 = and i64 %31, -4294967296
  %33 = add i64 %31, 15
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 acquire, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = and i64 %36, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %24
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %32, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp eq i16 %48, 132
  br i1 %49, label %77, label %50

50:                                               ; preds = %40, %24
  %51 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %52 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %51, i64 0, i32 0, i32 1
  %55 = load i8, i8* %54, align 8, !range !4
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %51, i64 0, i32 1, i64 0
  br label %67

59:                                               ; preds = %53, %50
  %60 = and i64 %31, -262144
  %61 = or i64 %60, 16
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 16
  %64 = add i64 %63, -41416
  %65 = inttoptr i64 %64 to %"class.v8::internal::Isolate"*
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %67

67:                                               ; preds = %59, %57
  %68 = phi i64* [ %66, %59 ], [ %58, %57 ]
  %69 = getelementptr inbounds i64, i64* %68, i64 107
  %70 = load i64, i64* %69, align 8
  br label %77

71:                                               ; preds = %16
  %72 = add i64 %5, 11
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %6, %75
  br label %77

77:                                               ; preds = %40, %67, %71
  %78 = phi i64 [ %76, %71 ], [ %70, %67 ], [ %37, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  br label %118

79:                                               ; preds = %2
  %80 = add i64 %5, 15
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 acquire, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %6, %83
  %85 = and i64 %83, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %79
  %88 = add i64 %84, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %6, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp eq i16 %95, 132
  br i1 %96, label %118, label %97

97:                                               ; preds = %87, %79
  %98 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %99 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 0, i32 1
  %102 = load i8, i8* %101, align 8, !range !4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 1, i64 0
  br label %114

106:                                              ; preds = %100, %97
  %107 = and i64 %5, -262144
  %108 = or i64 %107, 16
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 16
  %111 = add i64 %110, -41416
  %112 = inttoptr i64 %111 to %"class.v8::internal::Isolate"*
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %114

114:                                              ; preds = %106, %104
  %115 = phi i64* [ %113, %106 ], [ %105, %104 ]
  %116 = getelementptr inbounds i64, i64* %115, i64 107
  %117 = load i64, i64* %116, align 8
  br label %118

118:                                              ; preds = %114, %87, %77
  %119 = phi i64 [ %78, %77 ], [ %117, %114 ], [ %84, %87 ]
  ret i64 %119
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 100
  br i1 %19, label %20, label %55

20:                                               ; preds = %2
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %22, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 133
  br i1 %41, label %42, label %55

42:                                               ; preds = %20
  %43 = load i64, i64* %3, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 15
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %44, %53
  br label %120

55:                                               ; preds = %2, %20
  %56 = load i64, i64* %3, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 3
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %114, label %65

65:                                               ; preds = %55
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %57, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 133
  br i1 %74, label %120, label %75

75:                                               ; preds = %65
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %57, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 94
  br i1 %82, label %83, label %114

83:                                               ; preds = %75
  %84 = load i64, i64* %3, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 acquire, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %83
  %99 = add i64 %95, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %85, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 133
  br i1 %107, label %120, label %108

108:                                              ; preds = %98, %83
  %109 = add i64 %95, 3
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %85, %112
  br label %120

114:                                              ; preds = %75, %55
  %115 = add i64 %62, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %57, %118
  br label %120

120:                                              ; preds = %114, %108, %98, %65, %42
  %121 = phi i64 [ %54, %42 ], [ %119, %114 ], [ %62, %65 ], [ %113, %108 ], [ %95, %98 ]
  ret i64 %121
}

declare void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_6HandleINS0_9ByteArrayEEENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"*, i64*, i32, i32) unnamed_addr #6

declare i32 @_ZNK2v88internal6Script13GetLineNumberEi(%"class.v8::internal::Script"*, i32) local_unnamed_addr #6

declare void @_ZN2v88internal19SourcePositionTable11SetPositionEiii(%"class.v8::internal::SourcePositionTable"*, i32, i32, i32) local_unnamed_addr #6

declare void @_ZNK2v88internal14SourcePosition13InliningStackENS0_6HandleINS0_4CodeEEE(%"class.std::__1::vector.1292"* sret, %"class.v8::internal::SourcePosition"*, i64*) local_unnamed_addr #6

declare i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #6

declare void @_ZN2v88internal18SourcePositionInfoC1ENS0_14SourcePositionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"struct.v8::internal::SourcePositionInfo"*, i64, i64*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal16ProfilerListener15GetFunctionNameENS0_18SharedFunctionInfoE(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %19 [
    i32 1, label %7
    i32 0, label %14
  ]

7:                                                ; preds = %2
  %8 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #13
  %9 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %10 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %9, align 8
  %11 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %10, i8* %8) #13
  %12 = icmp eq i8* %8, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %7
  call void @_ZdaPv(i8* nonnull %8) #12
  br label %20

14:                                               ; preds = %2
  %15 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3)
  %16 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %17 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %16, align 8
  %18 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %17, i64 %15) #13
  br label %20

19:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

20:                                               ; preds = %13, %7, %14
  %21 = phi i8* [ %18, %14 ], [ %11, %7 ], [ %11, %13 ]
  ret i8* %21
}

declare void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"*) local_unnamed_addr #6

declare void @_ZN2v88internal9CodeEntry15SetInlineStacksENSt3__113unordered_setINS2_10unique_ptrIS1_NS2_14default_deleteIS1_EEEENS1_6HasherENS1_6EqualsENS2_9allocatorIS7_EEEENS2_13unordered_mapIiNS2_6vectorINS0_22CodeEntryAndLineNumberENSA_ISF_EEEENS2_4hashIiEENS2_8equal_toIiEENSA_INS2_4pairIKiSH_EEEEEE(%"class.v8::internal::CodeEntry"*, %"class.std::__1::unordered_set.1227"*, %"class.std::__1::unordered_map.1203"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsEPKNS0_4wasm8WasmCodeENS0_6VectorIKcEEPS9_ii(%"class.v8::internal::ProfilerListener"* nocapture readonly, i32, %"class.v8::internal::wasm::WasmCode"* nocapture readonly, i8* nocapture readonly, i64, i8*, i32, i32) unnamed_addr #2 align 2 {
  %9 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %10 = bitcast %"class.v8::internal::CodeEventsContainer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %2, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %9, i64 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %15, align 8
  %16 = tail call i8* @_Znwm(i64 72) #12
  %17 = add i64 %4, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %8
  %20 = tail call i8* @_Znam(i64 %17) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 0, i64 %17, i1 false) #13
  %21 = icmp eq i64 %4, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %19, %8
  %23 = phi i8* [ %20, %19 ], [ null, %8 ]
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %3, i64 %4, i1 false) #13
  br label %24

24:                                               ; preds = %22, %19
  %25 = phi i8* [ %20, %19 ], [ %23, %22 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 %4
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %28 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %27, align 8
  %29 = tail call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %28, i8* %25) #13
  %30 = icmp eq i8* %25, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void @_ZdaPv(i8* nonnull %25) #12
  br label %32

32:                                               ; preds = %24, %31
  %33 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %27, align 8
  %34 = tail call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %33, i8* %5) #13
  %35 = add nsw i32 %6, 1
  %36 = or i32 %1, -1878610176
  %37 = bitcast i8* %16 to i32*
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %16, i64 8
  %39 = bitcast i8* %38 to i8**
  store i8* %29, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %16, i64 16
  %41 = bitcast i8* %40 to i8**
  store i8* %34, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %16, i64 24
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %16, i64 28
  %45 = bitcast i8* %44 to i32*
  store i32 %35, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %16, i64 32
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %16, i64 36
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %9, i64 0, i32 0, i32 0, i32 2
  %51 = bitcast i64* %50 to i8**
  %52 = getelementptr inbounds i8, i8* %16, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false)
  store i8* %16, i8** %51, align 8
  store i32 %7, i32* %47, align 8
  store i32 %6, i32* %49, align 4
  %53 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %2, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %9, i64 0, i32 0, i32 1
  %56 = bitcast [40 x i8]* %55 to i32*
  store i32 %54, i32* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %58 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %57, align 8
  %59 = bitcast %"class.v8::internal::CodeEventObserver"* %58 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %60 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %59, align 8
  %61 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %60, align 8
  call void %61(%"class.v8::internal::CodeEventObserver"* %58, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal16ProfilerListener7GetNameENS0_6VectorIKcEE(%"class.v8::internal::ProfilerListener"* nocapture readonly, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = add i64 %2, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znam(i64 %4) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 0, i64 %4, i1 false) #13
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3, %6
  %10 = phi i8* [ %7, %6 ], [ null, %3 ]
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %1, i64 %2, i1 false) #13
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i8* [ %7, %6 ], [ %10, %9 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 %2
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %15 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %14, align 8
  %16 = tail call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %15, i8* %12) #13
  %17 = icmp eq i8* %12, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  tail call void @_ZdaPv(i8* nonnull %12) #12
  br label %19

19:                                               ; preds = %11, %18
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener13CallbackEventENS0_6HandleINS0_4NameEEEm(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64*, i64) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %5 = bitcast %"class.v8::internal::CodeEventsContainer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = tail call i8* @_Znwm(i64 72) #12
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %11 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %10, align 8
  %12 = tail call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %11, i64 %9) #13
  %13 = load i64, i64* bitcast (i8** @_ZN2v88internal9CodeEntry18kEmptyResourceNameE to i64*), align 8
  %14 = bitcast i8* %8 to i32*
  store i32 438025, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 24
  %20 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast i64* %20 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false)
  store i8* %8, i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 1
  %23 = bitcast [40 x i8]* %22 to i32*
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %25 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %24, align 8
  %26 = bitcast %"class.v8::internal::CodeEventObserver"* %25 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %27 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %26, align 8
  %28 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %27, align 8
  call void %28(%"class.v8::internal::CodeEventObserver"* %25, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener19GetterCallbackEventENS0_6HandleINS0_4NameEEEm(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64*, i64) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %5 = bitcast %"class.v8::internal::CodeEventsContainer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = tail call i8* @_Znwm(i64 72) #12
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %11 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %10, align 8
  %12 = tail call i8* @_ZN2v88internal14StringsStorage11GetConsNameEPKcNS0_4NameE(%"class.v8::internal::StringsStorage"* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 %9) #13
  %13 = load i64, i64* bitcast (i8** @_ZN2v88internal9CodeEntry18kEmptyResourceNameE to i64*), align 8
  %14 = bitcast i8* %8 to i32*
  store i32 438025, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 24
  %20 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast i64* %20 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false)
  store i8* %8, i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 1
  %23 = bitcast [40 x i8]* %22 to i32*
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %25 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %24, align 8
  %26 = bitcast %"class.v8::internal::CodeEventObserver"* %25 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %27 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %26, align 8
  %28 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %27, align 8
  call void %28(%"class.v8::internal::CodeEventObserver"* %25, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener19SetterCallbackEventENS0_6HandleINS0_4NameEEEm(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64*, i64) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %5 = bitcast %"class.v8::internal::CodeEventsContainer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = tail call i8* @_Znwm(i64 72) #12
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %11 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %10, align 8
  %12 = tail call i8* @_ZN2v88internal14StringsStorage11GetConsNameEPKcNS0_4NameE(%"class.v8::internal::StringsStorage"* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 %9) #13
  %13 = load i64, i64* bitcast (i8** @_ZN2v88internal9CodeEntry18kEmptyResourceNameE to i64*), align 8
  %14 = bitcast i8* %8 to i32*
  store i32 438025, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 24
  %20 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast i64* %20 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false)
  store i8* %8, i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 1
  %23 = bitcast [40 x i8]* %22 to i32*
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %25 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %24, align 8
  %26 = bitcast %"class.v8::internal::CodeEventObserver"* %25 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %27 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %26, align 8
  %28 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %27, align 8
  call void %28(%"class.v8::internal::CodeEventObserver"* %25, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener21RegExpCodeCreateEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_6StringEEE(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64*, i64*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = alloca %"class.v8::internal::Code", align 8
  %6 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %7 = bitcast %"class.v8::internal::CodeEventsContainer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %8, align 8
  %9 = load i64, i64* %1, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 162
  br i1 %19, label %20, label %34

20:                                               ; preds = %3
  %21 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %22, align 8
  %23 = add i64 %9, 27
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 536870912
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28, !prof !2

28:                                               ; preds = %20
  %29 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %4) #13
  br label %32

30:                                               ; preds = %20
  %31 = add i64 %9, 63
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i64 [ %29, %28 ], [ %31, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %36

34:                                               ; preds = %3
  %35 = add i64 %9, 33
  br label %36

36:                                               ; preds = %32, %34
  %37 = phi i64 [ %33, %32 ], [ %35, %34 ]
  %38 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %6, i64 0, i32 0, i32 0, i32 1
  store i64 %37, i64* %38, align 8
  %39 = call i8* @_Znwm(i64 72) #12
  %40 = load i64, i64* %2, align 8
  %41 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 4
  %42 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %41, align 8
  %43 = call i8* @_ZN2v88internal14StringsStorage11GetConsNameEPKcNS0_4NameE(%"class.v8::internal::StringsStorage"* %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 %40) #13
  %44 = load i64, i64* bitcast (i8** @_ZN2v88internal9CodeEntry18kEmptyResourceNameE to i64*), align 8
  %45 = bitcast i8* %39 to i32*
  store i32 438031, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %39, i64 8
  %47 = bitcast i8* %46 to i8**
  store i8* %43, i8** %47, align 8
  %48 = getelementptr inbounds i8, i8* %39, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 %44, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %39, i64 24
  %51 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %6, i64 0, i32 0, i32 0, i32 2
  %52 = bitcast i64* %51 to %"class.v8::internal::CodeEntry"**
  %53 = bitcast i64* %51 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 48, i1 false)
  store i8* %39, i8** %53, align 8
  %54 = load i64, i64* %1, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 162
  %65 = bitcast i8* %39 to %"class.v8::internal::CodeEntry"*
  br i1 %64, label %66, label %84

66:                                               ; preds = %36
  %67 = bitcast %"class.v8::internal::Code"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %54, i64* %68, align 8
  %69 = add i64 %54, 27
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 536870912
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74, !prof !2

74:                                               ; preds = %66
  %75 = call i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"* nonnull %5) #13
  %76 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %52, align 8
  br label %81

77:                                               ; preds = %66
  %78 = add i64 %54, 19
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  br label %81

81:                                               ; preds = %77, %74
  %82 = phi %"class.v8::internal::CodeEntry"* [ %76, %74 ], [ %65, %77 ]
  %83 = phi i32 [ %75, %74 ], [ %80, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  br label %89

84:                                               ; preds = %36
  %85 = add i64 %54, 3
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = ashr i32 %87, 1
  br label %89

89:                                               ; preds = %81, %84
  %90 = phi %"class.v8::internal::CodeEntry"* [ %82, %81 ], [ %65, %84 ]
  %91 = phi i32 [ %83, %81 ], [ %88, %84 ]
  %92 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %6, i64 0, i32 0, i32 1
  %93 = bitcast [40 x i8]* %92 to i32*
  store i32 %91, i32* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  %95 = load %"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::WeakCodeRegistry"** %94, align 8
  call void @_ZN2v88internal16WeakCodeRegistry5TrackEPNS0_9CodeEntryENS0_6HandleINS0_12AbstractCodeEEE(%"class.v8::internal::WeakCodeRegistry"* %95, %"class.v8::internal::CodeEntry"* %90, i64* %1) #13
  %96 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %97 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %96, align 8
  %98 = bitcast %"class.v8::internal::CodeEventObserver"* %97 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %99 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %98, align 8
  %100 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %99, align 8
  call void %100(%"class.v8::internal::CodeEventObserver"* %97, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener13CodeMoveEventENS0_12AbstractCodeES2_(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64, i64) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = alloca %"class.v8::internal::Code", align 8
  %6 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %7 = bitcast %"class.v8::internal::CodeEventsContainer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 2, i32* %8, align 8
  %9 = and i64 %1, -4294967296
  %10 = add i64 %1, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 162
  br i1 %18, label %19, label %33

19:                                               ; preds = %3
  %20 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %21, align 8
  %22 = add i64 %1, 27
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 536870912
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27, !prof !2

27:                                               ; preds = %19
  %28 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %4) #13
  br label %31

29:                                               ; preds = %19
  %30 = add i64 %1, 63
  br label %31

31:                                               ; preds = %29, %27
  %32 = phi i64 [ %28, %27 ], [ %30, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %35

33:                                               ; preds = %3
  %34 = add i64 %1, 33
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %37 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %6, i64 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %37, align 8
  %38 = and i64 %2, -4294967296
  %39 = add i64 %2, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 162
  br i1 %47, label %48, label %62

48:                                               ; preds = %35
  %49 = bitcast %"class.v8::internal::Code"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  %50 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %50, align 8
  %51 = add i64 %2, 27
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 536870912
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56, !prof !2

56:                                               ; preds = %48
  %57 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %5) #13
  br label %60

58:                                               ; preds = %48
  %59 = add i64 %2, 63
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi i64 [ %57, %56 ], [ %59, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %64

62:                                               ; preds = %35
  %63 = add i64 %2, 33
  br label %64

64:                                               ; preds = %60, %62
  %65 = phi i64 [ %61, %60 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %6, i64 0, i32 0, i32 0, i32 2
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %68 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %67, align 8
  %69 = bitcast %"class.v8::internal::CodeEventObserver"* %68 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %70 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %69, align 8
  %71 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %70, align 8
  call void %71(%"class.v8::internal::CodeEventObserver"* %68, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener22NativeContextMoveEventEmm(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64, i64) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %5 = bitcast %"class.v8::internal::CodeEventsContainer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 7, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %4, i64 0, i32 0, i32 0, i32 2
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %10 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %9, align 8
  %11 = bitcast %"class.v8::internal::CodeEventObserver"* %10 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %12 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %11, align 8
  %13 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %12, align 8
  call void %13(%"class.v8::internal::CodeEventObserver"* %10, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener19CodeDisableOptEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64*, i64*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %6 = bitcast %"class.v8::internal::CodeEventsContainer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 3, i32* %7, align 8
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 162
  br i1 %18, label %19, label %33

19:                                               ; preds = %3
  %20 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %21, align 8
  %22 = add i64 %8, 27
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 536870912
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27, !prof !2

27:                                               ; preds = %19
  %28 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %4) #13
  br label %31

29:                                               ; preds = %19
  %30 = add i64 %8, 63
  br label %31

31:                                               ; preds = %29, %27
  %32 = phi i64 [ %28, %27 ], [ %30, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %35

33:                                               ; preds = %3
  %34 = add i64 %8, 33
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %37 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %5, i64 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* %2, align 8
  %39 = add i64 %38, 27
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 19
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 15
  %45 = call i8* @_ZN2v88internal16GetBailoutReasonENS0_13BailoutReasonE(i8 zeroext %44) #13
  %46 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %5, i64 0, i32 0, i32 0, i32 2
  %47 = bitcast i64* %46 to i8**
  store i8* %45, i8** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %49 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %48, align 8
  %50 = bitcast %"class.v8::internal::CodeEventObserver"* %49 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %51 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %50, align 8
  %52 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %51, align 8
  call void %52(%"class.v8::internal::CodeEventObserver"* %49, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #13
  ret void
}

declare i8* @_ZN2v88internal16GetBailoutReasonENS0_13BailoutReasonE(i8 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener14CodeDeoptEventENS0_6HandleINS0_4CodeEEENS0_14DeoptimizeKindEmib(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64*, i8 zeroext, i64, i32, i1 zeroext) unnamed_addr #2 align 2 {
  %7 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  br i1 %5, label %49, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::internal::CodeEventsContainer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 4, i32* %11, align 8
  %12 = bitcast %"class.v8::internal::CodeEventsContainer"* %7 to %"class.v8::internal::CodeDeoptEventRecord"*
  %13 = load i64, i64* %1, align 8
  %14 = tail call { i64, i64 } @_ZN2v88internal11Deoptimizer12GetDeoptInfoENS0_4CodeEm(i64 %13, i64 %3) #13
  %15 = extractvalue { i64, i64 } %14, 1
  %16 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = load i64, i64* %1, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = add i64 %17, 27
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 536870912
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24, !prof !2

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %8, i64 0, i32 0
  %26 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %25) #13
  br label %29

27:                                               ; preds = %9
  %28 = add i64 %17, 63
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi i64 [ %26, %24 ], [ %28, %27 ]
  %31 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 1
  store i64 %30, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %32 = trunc i64 %15 to i8
  %33 = call i8* @_ZN2v88internal24DeoptimizeReasonToStringENS0_16DeoptimizeReasonE(i8 zeroext %32) #13
  %34 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 0, i32 2
  %35 = bitcast i64* %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = lshr i64 %15, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 1
  %39 = bitcast [40 x i8]* %38 to i32*
  store i32 %37, i32* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 1, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 %3, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %7, i64 0, i32 0, i32 1, i64 16
  %43 = bitcast i8* %42 to i32*
  store i32 %4, i32* %43, align 8
  call void @_ZN2v88internal16ProfilerListener24AttachDeoptInlinedFramesENS0_6HandleINS0_4CodeEEEPNS0_20CodeDeoptEventRecordE(%"class.v8::internal::ProfilerListener"* %0, i64* %1, %"class.v8::internal::CodeDeoptEventRecord"* nonnull %12)
  %44 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %45 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %44, align 8
  %46 = bitcast %"class.v8::internal::CodeEventObserver"* %45 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %47 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %46, align 8
  %48 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %47, align 8
  call void %48(%"class.v8::internal::CodeEventObserver"* %45, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #13
  br label %49

49:                                               ; preds = %6, %29
  ret void
}

declare { i64, i64 } @_ZN2v88internal11Deoptimizer12GetDeoptInfoENS0_4CodeEm(i64, i64) local_unnamed_addr #6

declare i8* @_ZN2v88internal24DeoptimizeReasonToStringENS0_16DeoptimizeReasonE(i8 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener24AttachDeoptInlinedFramesENS0_6HandleINS0_4CodeEEEPNS0_20CodeDeoptEventRecordE(%"class.v8::internal::ProfilerListener"* nocapture readonly, i64*, %"class.v8::internal::CodeDeoptEventRecord"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::SourcePosition", align 8
  %5 = alloca %"class.v8::internal::RelocIterator", align 8
  %6 = alloca %"class.std::__1::vector.1292", align 8
  %7 = getelementptr inbounds %"class.v8::internal::CodeDeoptEventRecord", %"class.v8::internal::CodeDeoptEventRecord"* %2, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.v8::internal::SourcePosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.v8::internal::SourcePosition", %"class.v8::internal::SourcePosition"* %4, i64 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::CodeDeoptEventRecord", %"class.v8::internal::CodeDeoptEventRecord"* %2, i64 0, i32 8
  store %"struct.v8::CpuProfileDeoptFrame"* null, %"struct.v8::CpuProfileDeoptFrame"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CodeDeoptEventRecord", %"class.v8::internal::CodeDeoptEventRecord"* %2, i64 0, i32 9
  store i32 0, i32* %12, align 8
  %13 = bitcast %"class.v8::internal::RelocIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #13
  %14 = load i64, i64* %1, align 8
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %5, i64 %14, i32 360448) #13
  %15 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %5, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %119

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %5, i64 0, i32 2, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %5, i64 0, i32 2, i32 2
  br label %21

21:                                               ; preds = %18, %116
  %22 = load i8, i8* %19, align 8
  switch i8 %22, label %116 [
    i8 15, label %23
    i8 18, label %34
  ]

23:                                               ; preds = %21
  %24 = load i64, i64* %20, align 8
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %5) #13
  %25 = load i64, i64* %20, align 8
  %26 = shl i64 %24, 32
  %27 = add i64 %26, 4294967296
  %28 = ashr exact i64 %27, 31
  %29 = and i64 %28, -140735340871682
  %30 = shl i64 %25, 32
  %31 = add i64 %30, 4294967296
  %32 = ashr exact i64 %31, 1
  %33 = or i64 %32, %29
  store i64 %33, i64* %10, align 8
  br label %116

34:                                               ; preds = %21
  %35 = load i64, i64* %20, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %8, %36
  br i1 %37, label %38, label %116

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 2
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31
  %42 = bitcast %"struct.v8::internal::HandleScopeData"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 8
  %49 = bitcast %"class.std::__1::vector.1292"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #13
  call void @_ZNK2v88internal14SourcePosition13InliningStackENS0_6HandleINS0_4CodeEEE(%"class.std::__1::vector.1292"* nonnull sret %6, %"class.v8::internal::SourcePosition"* nonnull %4, i64* %1) #13
  %50 = getelementptr inbounds %"class.std::__1::vector.1292", %"class.std::__1::vector.1292"* %6, i64 0, i32 0, i32 1
  %51 = bitcast %"struct.v8::internal::SourcePositionInfo"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.1292"* %6 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 5
  %57 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %56, i64 16)
  %58 = extractvalue { i64, i1 } %57, 1
  %59 = extractvalue { i64, i1 } %57, 0
  %60 = select i1 %58, i64 -1, i64 %59
  %61 = call i8* @_Znam(i64 %60) #12
  %62 = bitcast i8* %61 to %"struct.v8::CpuProfileDeoptFrame"*
  %63 = inttoptr i64 %54 to %"struct.v8::internal::SourcePositionInfo"*
  %64 = inttoptr i64 %52 to %"struct.v8::internal::SourcePositionInfo"*
  %65 = icmp eq %"struct.v8::internal::SourcePositionInfo"* %63, %64
  br i1 %65, label %66, label %87

66:                                               ; preds = %112, %38
  %67 = phi i32 [ 0, %38 ], [ %113, %112 ]
  %68 = bitcast %"struct.v8::CpuProfileDeoptFrame"** %11 to i8**
  store i8* %61, i8** %68, align 8
  store i32 %67, i32* %12, align 8
  %69 = icmp eq i64 %54, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  store i64 %54, i64* %51, align 8
  %71 = inttoptr i64 %54 to i8*
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %66, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #13
  %73 = icmp eq %"class.v8::internal::Isolate"* %40, null
  br i1 %73, label %119, label %74

74:                                               ; preds = %72
  %75 = inttoptr i64 %43 to i64*
  %76 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %41, i64 0, i32 0
  %77 = load i64*, i64** %76, align 8
  store i64 %43, i64* %42, align 8
  %78 = load i32, i32* %46, align 8
  %79 = add nsw i32 %78, -1
  store i32 %79, i32* %46, align 8
  %80 = load i64*, i64** %44, align 8
  %81 = icmp eq i64* %80, %45
  br i1 %81, label %84, label %82

82:                                               ; preds = %74
  store i64* %45, i64** %44, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %40) #13
  %83 = load i64*, i64** %76, align 8
  br label %84

84:                                               ; preds = %82, %74
  %85 = phi i64* [ %83, %82 ], [ %75, %74 ]
  %86 = phi i64* [ %45, %82 ], [ %77, %74 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %85, i64* %86) #13
  br label %119

87:                                               ; preds = %38, %112
  %88 = phi i32 [ %113, %112 ], [ 0, %38 ]
  %89 = phi %"struct.v8::internal::SourcePositionInfo"* [ %114, %112 ], [ %63, %38 ]
  %90 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %89, i64 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = lshr i64 %91, 1
  %93 = trunc i64 %92 to i32
  %94 = and i32 %93, 1073741823
  %95 = add nsw i32 %94, -1
  %96 = icmp eq i32 %94, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %89, i64 0, i32 2, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %99, null
  br i1 %100, label %112, label %101

101:                                              ; preds = %97
  %102 = load i64, i64* %99, align 8
  %103 = add i64 %102, 31
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = ashr i32 %105, 1
  %107 = sext i32 %95 to i64
  %108 = add nsw i32 %88, 1
  %109 = sext i32 %88 to i64
  %110 = getelementptr inbounds %"struct.v8::CpuProfileDeoptFrame", %"struct.v8::CpuProfileDeoptFrame"* %62, i64 %109, i32 0
  store i32 %106, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::CpuProfileDeoptFrame", %"struct.v8::CpuProfileDeoptFrame"* %62, i64 %109, i32 1
  store i64 %107, i64* %111, align 8
  br label %112

112:                                              ; preds = %97, %87, %101
  %113 = phi i32 [ %108, %101 ], [ %88, %87 ], [ %88, %97 ]
  %114 = getelementptr inbounds %"struct.v8::internal::SourcePositionInfo", %"struct.v8::internal::SourcePositionInfo"* %89, i64 1
  %115 = icmp eq %"struct.v8::internal::SourcePositionInfo"* %114, %64
  br i1 %115, label %66, label %87

116:                                              ; preds = %21, %23, %34
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %5) #13
  %117 = load i8, i8* %15, align 8, !range !4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %21, label %119

119:                                              ; preds = %116, %3, %72, %84
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener18WeakCodeClearEventEv(%"class.v8::internal::ProfilerListener"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::WeakCodeRegistry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal16WeakCodeRegistry5SweepEPNS1_8ListenerE(%"class.v8::internal::WeakCodeRegistry"* %3, %"struct.v8::internal::WeakCodeRegistry::Listener"* %4) #13
  ret void
}

declare void @_ZN2v88internal16WeakCodeRegistry5SweepEPNS1_8ListenerE(%"class.v8::internal::WeakCodeRegistry"*, %"struct.v8::internal::WeakCodeRegistry::Listener"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener20OnHeapObjectDeletionEPNS0_9CodeEntryE(%"class.v8::internal::ProfilerListener"* nocapture readonly, %"class.v8::internal::CodeEntry"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %4 = bitcast %"class.v8::internal::CodeEventsContainer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 6, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.v8::internal::CodeEntry"**
  store %"class.v8::internal::CodeEntry"* %1, %"class.v8::internal::CodeEntry"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 3
  %9 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %8, align 8
  %10 = bitcast %"class.v8::internal::CodeEventObserver"* %9 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %11 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %10, align 8
  %12 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %11, align 8
  call void %12(%"class.v8::internal::CodeEventObserver"* %9, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2v88internal16ProfilerListener20OnHeapObjectDeletionEPNS0_9CodeEntryE(%"class.v8::internal::ProfilerListener"* nocapture readonly, %"class.v8::internal::CodeEntry"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::CodeEventsContainer", align 8
  %4 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 -1, i32 6
  %5 = bitcast %"class.v8::internal::CodeEventsContainer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 6, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CodeEventsContainer", %"class.v8::internal::CodeEventsContainer"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to %"class.v8::internal::CodeEntry"**
  store %"class.v8::internal::CodeEntry"* %1, %"class.v8::internal::CodeEntry"** %8, align 8
  %9 = getelementptr inbounds i32, i32* %4, i64 6
  %10 = bitcast i32* %9 to %"class.v8::internal::CodeEventObserver"**
  %11 = load %"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventObserver"** %10, align 8
  %12 = bitcast %"class.v8::internal::CodeEventObserver"* %11 to void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)***
  %13 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)**, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*** %12, align 8
  %14 = load void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)*, void (%"class.v8::internal::CodeEventObserver"*, %"class.v8::internal::CodeEventsContainer"*)** %13, align 8
  call void %14(%"class.v8::internal::CodeEventObserver"* %11, %"class.v8::internal::CodeEventsContainer"* nonnull dereferenceable(64) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ProfilerListener14CodeSweepEventEv(%"class.v8::internal::ProfilerListener"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::WeakCodeRegistry"*, %"class.v8::internal::WeakCodeRegistry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ProfilerListener", %"class.v8::internal::ProfilerListener"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal16WeakCodeRegistry5SweepEPNS1_8ListenerE(%"class.v8::internal::WeakCodeRegistry"* %3, %"struct.v8::internal::WeakCodeRegistry::Listener"* %4) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #7 comdat align 2 {
  %2 = alloca %"class.v8::internal::ScopeInfo", align 8
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = alloca %"class.v8::internal::ScopeInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = and i64 %11, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %1
  %16 = add i64 %12, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 178
  br i1 %24, label %25, label %29

25:                                               ; preds = %15
  %26 = bitcast %"class.v8::internal::ScopeInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %27, align 8
  %28 = call zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br i1 %28, label %53, label %31

29:                                               ; preds = %1, %15
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %29, %25
  %32 = load i64, i64* %5, align 8
  %33 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %34 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 1, i64 0
  br label %49

41:                                               ; preds = %35, %31
  %42 = and i64 %32, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %49

49:                                               ; preds = %39, %41
  %50 = phi i64* [ %48, %41 ], [ %40, %39 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 9
  %52 = load i64, i64* %51, align 8
  br label %103

53:                                               ; preds = %29, %25
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 acquire, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %103, label %63

63:                                               ; preds = %53
  %64 = add i64 %60, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %55, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp eq i16 %71, 178
  br i1 %72, label %73, label %103

73:                                               ; preds = %63
  %74 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  %75 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %75, align 8
  %76 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::ScopeInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %79 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %79, align 8
  %80 = call i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  br label %103

81:                                               ; preds = %73
  %82 = load i64, i64* %5, align 8
  %83 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %84 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 0, i32 1
  %87 = load i8, i8* %86, align 8, !range !4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 1, i64 0
  br label %99

91:                                               ; preds = %85, %81
  %92 = and i64 %82, -262144
  %93 = or i64 %92, 16
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 16
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %99

99:                                               ; preds = %89, %91
  %100 = phi i64* [ %98, %91 ], [ %90, %89 ]
  %101 = getelementptr inbounds i64, i64* %100, i64 9
  %102 = load i64, i64* %101, align 8
  br label %103

103:                                              ; preds = %53, %77, %99, %63, %49
  %104 = phi i64 [ %52, %49 ], [ %80, %77 ], [ %102, %99 ], [ %60, %63 ], [ %60, %53 ]
  ret i64 %104
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #8

declare void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, i64, i32) unnamed_addr #6

declare void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ProfilerListener27SharedFunctionInfoMoveEventEmm(%"class.v8::internal::ProfilerListener"*, i64, i64) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ProfilerListener17CodeMovingGCEventEv(%"class.v8::internal::ProfilerListener"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ProfilerListener25CodeDependencyChangeEventENS0_6HandleINS0_4CodeEEENS2_INS0_18SharedFunctionInfoEEEPKc(%"class.v8::internal::ProfilerListener"*, i64*, i64*, i8*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal17CodeEventListener27is_listening_to_code_eventsEv(%"class.v8::internal::CodeEventListener"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

declare i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"*, i8*) local_unnamed_addr #6

declare i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"*) local_unnamed_addr #6

declare i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"*, i64) local_unnamed_addr #6

declare void @_ZN2v88internal9CodeEntry14ReleaseStringsERNS0_14StringsStorageE(%"class.v8::internal::CodeEntry"*, %"class.v8::internal::StringsStorage"* dereferenceable(64)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1232"* @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.1228"*, %"class.std::__1::unique_ptr.1306"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.1306", %"class.std::__1::unique_ptr.1306"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %3, align 8
  %5 = tail call i32 @_ZNK2v88internal9CodeEntry7GetHashEv(%"class.v8::internal::CodeEntry"* %4) #13
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %75, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %25, null
  br i1 %26, label %75, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %29, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br i1 %12, label %33, label %56

33:                                               ; preds = %31, %52
  %34 = phi %"struct.std::__1::__hash_node_base.1232"* [ %54, %52 ], [ %29, %31 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1232"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %46, label %39

39:                                               ; preds = %33
  %40 = icmp ult i64 %37, %8
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %52, label %75

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %34, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.1232"* %47 to %"class.v8::internal::CodeEntry"**
  %49 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %48, align 8
  %50 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %3, align 8
  %51 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %49, %"class.v8::internal::CodeEntry"* %50) #13
  br i1 %51, label %75, label %52

52:                                               ; preds = %46, %43
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %34, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %54, null
  br i1 %55, label %75, label %33

56:                                               ; preds = %31, %71
  %57 = phi %"struct.std::__1::__hash_node_base.1232"* [ %73, %71 ], [ %29, %31 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1232"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %6
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = and i64 %60, %32
  %64 = icmp eq i64 %63, %21
  br i1 %64, label %71, label %75

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %57, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.1232"* %66 to %"class.v8::internal::CodeEntry"**
  %68 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %67, align 8
  %69 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %3, align 8
  %70 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %68, %"class.v8::internal::CodeEntry"* %69) #13
  br i1 %70, label %75, label %71

71:                                               ; preds = %62, %65
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %57, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %73, null
  br i1 %74, label %75, label %56

75:                                               ; preds = %65, %71, %62, %46, %52, %43, %27, %2, %20
  %76 = phi %"struct.std::__1::__hash_node_base.1232"* [ null, %20 ], [ null, %2 ], [ null, %27 ], [ %34, %46 ], [ null, %52 ], [ null, %43 ], [ %57, %65 ], [ null, %71 ], [ null, %62 ]
  ret %"struct.std::__1::__hash_node_base.1232"* %76
}

declare i32 @_ZNK2v88internal9CodeEntry7GetHashEv(%"class.v8::internal::CodeEntry"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1232"*, i8 } @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS7_JS7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1228"*, %"class.std::__1::unique_ptr.1306"* dereferenceable(8), %"class.std::__1::unique_ptr.1306"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.1306", %"class.std::__1::unique_ptr.1306"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %4, align 8
  %6 = tail call i32 @_ZNK2v88internal9CodeEntry7GetHashEv(%"class.v8::internal::CodeEntry"* %5) #13
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %72, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %26, null
  br i1 %27, label %72, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br i1 %13, label %30, label %53

30:                                               ; preds = %28, %47
  %31 = phi %"struct.std::__1::__hash_node_base.1232"* [ %33, %47 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %33, null
  br i1 %34, label %72, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1232"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %9
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %9
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %22
  br i1 %46, label %47, label %72

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.1232"* %48 to %"class.v8::internal::CodeEntry"**
  %50 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %49, align 8
  %51 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %4, align 8
  %52 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %50, %"class.v8::internal::CodeEntry"* %51) #13
  br i1 %52, label %161, label %30

53:                                               ; preds = %28, %66
  %54 = phi %"struct.std::__1::__hash_node_base.1232"* [ %56, %66 ], [ %26, %28 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1232"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %7
  %63 = and i64 %61, %29
  %64 = icmp eq i64 %63, %22
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %56, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.1232"* %67 to %"class.v8::internal::CodeEntry"**
  %69 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %68, align 8
  %70 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %4, align 8
  %71 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %69, %"class.v8::internal::CodeEntry"* %70) #13
  br i1 %71, label %161, label %53

72:                                               ; preds = %58, %53, %44, %30, %21, %3
  %73 = phi i64 [ %22, %21 ], [ undef, %3 ], [ %22, %30 ], [ %22, %44 ], [ %22, %53 ], [ %22, %58 ]
  %74 = tail call i8* @_Znwm(i64 24) #12, !noalias !5
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.1306", %"class.std::__1::unique_ptr.1306"* %2, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.std::__1::unique_ptr.1306"* %2 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !5
  store %"class.v8::internal::CodeEntry"* null, %"class.v8::internal::CodeEntry"** %76, align 8, !noalias !5
  %79 = bitcast i8* %75 to i64*
  store i64 %78, i64* %79, align 8, !noalias !5
  %80 = getelementptr inbounds i8, i8* %74, i64 8
  %81 = bitcast i8* %80 to i64*
  store i64 %7, i64* %81, align 8, !noalias !5
  %82 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1232"**
  store %"struct.std::__1::__hash_node_base.1232"* null, %"struct.std::__1::__hash_node_base.1232"** %82, align 8, !noalias !5
  %83 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  %86 = uitofp i64 %85 to float
  %87 = uitofp i64 %9 to float
  %88 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 3, i32 0, i32 0
  %89 = load float, float* %88, align 4
  %90 = fmul float %89, %87
  %91 = fcmp olt float %90, %86
  %92 = or i1 %10, %91
  br i1 %92, label %93, label %116

93:                                               ; preds = %72
  %94 = shl i64 %9, 1
  %95 = icmp ult i64 %9, 3
  %96 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %97 = icmp ugt i64 %96, 1
  %98 = or i1 %95, %97
  %99 = zext i1 %98 to i64
  %100 = or i64 %94, %99
  %101 = fdiv float %86, %89
  %102 = tail call float @llvm.ceil.f32(float %101) #13
  %103 = fptoui float %102 to i64
  %104 = icmp ult i64 %100, %103
  %105 = select i1 %104, i64 %103, i64 %100
  tail call void @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1228"* %0, i64 %105)
  %106 = load i64, i64* %8, align 8
  %107 = tail call i64 @llvm.ctpop.i64(i64 %106) #13, !range !3
  %108 = icmp ugt i64 %107, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %93
  %110 = add i64 %106, 4294967295
  %111 = and i64 %110, %7
  br label %116

112:                                              ; preds = %93
  %113 = icmp ugt i64 %106, %7
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %7, %106
  br label %116

116:                                              ; preds = %114, %112, %109, %72
  %117 = phi i64 [ %9, %72 ], [ %106, %109 ], [ %106, %112 ], [ %106, %114 ]
  %118 = phi i64 [ %73, %72 ], [ %111, %109 ], [ %7, %112 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %120, i64 %118
  %122 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %122, null
  br i1 %123, label %124, label %150

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = bitcast %"struct.std::__1::__hash_node_base.1232"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i8* %74 to i64*
  store i64 %127, i64* %128, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base.1232"* %125 to i8**
  store i8* %74, i8** %129, align 8
  store %"struct.std::__1::__hash_node_base.1232"* %125, %"struct.std::__1::__hash_node_base.1232"** %121, align 8
  %130 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %82, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %130, null
  br i1 %131, label %157, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %130, i64 1
  %134 = bitcast %"struct.std::__1::__hash_node_base.1232"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = tail call i64 @llvm.ctpop.i64(i64 %117) #13, !range !3
  %137 = icmp ugt i64 %136, 1
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = add i64 %117, -1
  %140 = and i64 %135, %139
  br label %145

141:                                              ; preds = %132
  %142 = icmp ult i64 %135, %117
  br i1 %142, label %145, label %143

143:                                              ; preds = %141
  %144 = urem i64 %135, %117
  br label %145

145:                                              ; preds = %138, %141, %143
  %146 = phi i64 [ %140, %138 ], [ %144, %143 ], [ %135, %141 ]
  %147 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %119, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %147, i64 %146
  %149 = bitcast %"struct.std::__1::__hash_node_base.1232"** %148 to i8**
  br label %155

150:                                              ; preds = %116
  %151 = bitcast %"struct.std::__1::__hash_node_base.1232"* %122 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast i8* %74 to i64*
  store i64 %152, i64* %153, align 8
  %154 = bitcast %"struct.std::__1::__hash_node_base.1232"* %122 to i8**
  br label %155

155:                                              ; preds = %145, %150
  %156 = phi i8** [ %154, %150 ], [ %149, %145 ]
  store i8* %74, i8** %156, align 8
  br label %157

157:                                              ; preds = %155, %124
  %158 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1232"*
  %159 = load i64, i64* %83, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %83, align 8
  br label %161

161:                                              ; preds = %66, %47, %157
  %162 = phi i8 [ 1, %157 ], [ 0, %47 ], [ 0, %66 ]
  %163 = phi %"struct.std::__1::__hash_node_base.1232"* [ %158, %157 ], [ %33, %47 ], [ %56, %66 ]
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1232"*, i8 } undef, %"struct.std::__1::__hash_node_base.1232"* %163, 0
  %165 = insertvalue { %"struct.std::__1::__hash_node_base.1232"*, i8 } %164, i8 %162, 1
  ret { %"struct.std::__1::__hash_node_base.1232"*, i8 } %165
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1228"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1228"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1228"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1228"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %201, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1228"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1232"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1232"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1234", %"class.std::__1::__bucket_list_deallocator.1234"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1232"* null, %"struct.std::__1::__hash_node_base.1232"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !8

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %38, null
  br i1 %39, label %209, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1232"* null, %"struct.std::__1::__hash_node_base.1232"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1232"* null, %"struct.std::__1::__hash_node_base.1232"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1232"* null, %"struct.std::__1::__hash_node_base.1232"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1232"* null, %"struct.std::__1::__hash_node_base.1232"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1232"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1232"* %36, %"struct.std::__1::__hash_node_base.1232"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %75, null
  br i1 %76, label %209, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %142

79:                                               ; preds = %77, %124
  %80 = phi %"struct.std::__1::__hash_node_base.1232"* [ %128, %124 ], [ %75, %77 ]
  %81 = phi i64 [ %126, %124 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1232"* [ %125, %124 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1232"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %95, null
  br i1 %96, label %123, label %130

97:                                               ; preds = %103
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %107, i64 2
  %99 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %136, align 8
  %100 = bitcast %"struct.std::__1::__hash_node_base.1232"* %98 to %"class.v8::internal::CodeEntry"**
  %101 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %100, align 8
  %102 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %99, %"class.v8::internal::CodeEntry"* %101) #13
  br i1 %102, label %103, label %109

103:                                              ; preds = %134, %97
  %104 = phi %"struct.std::__1::__hash_node_base.1232"** [ %106, %97 ], [ %131, %134 ]
  %105 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %107, null
  br i1 %108, label %109, label %97

109:                                              ; preds = %97, %103, %134, %130
  %110 = phi %"struct.std::__1::__hash_node_base.1232"* [ %80, %130 ], [ %80, %134 ], [ %105, %103 ], [ %105, %97 ]
  %111 = bitcast %"struct.std::__1::__hash_node_base.1232"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.1232"* %82 to i64*
  store i64 %112, i64* %113, align 8
  %114 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %114, i64 %90
  %116 = bitcast %"struct.std::__1::__hash_node_base.1232"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %111, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %119, i64 %90
  %121 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %121, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1232"* %80, %"struct.std::__1::__hash_node_base.1232"** %122, align 8
  br label %124

123:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1232"* %82, %"struct.std::__1::__hash_node_base.1232"** %94, align 8
  br label %124

124:                                              ; preds = %123, %109, %89
  %125 = phi %"struct.std::__1::__hash_node_base.1232"* [ %80, %123 ], [ %82, %109 ], [ %80, %89 ]
  %126 = phi i64 [ %90, %123 ], [ %81, %109 ], [ %81, %89 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %125, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %128, null
  br i1 %129, label %209, label %79

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %80, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %132, null
  br i1 %133, label %109, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %80, i64 2
  %136 = bitcast %"struct.std::__1::__hash_node_base.1232"* %135 to %"class.v8::internal::CodeEntry"**
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %132, i64 2
  %138 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %136, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.1232"* %137 to %"class.v8::internal::CodeEntry"**
  %140 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %139, align 8
  %141 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %138, %"class.v8::internal::CodeEntry"* %140) #13
  br i1 %141, label %103, label %109

142:                                              ; preds = %77, %195
  %143 = phi %"struct.std::__1::__hash_node_base.1232"* [ %199, %195 ], [ %75, %77 ]
  %144 = phi i64 [ %197, %195 ], [ %71, %77 ]
  %145 = phi %"struct.std::__1::__hash_node_base.1232"* [ %196, %195 ], [ %38, %77 ]
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %143, i64 1
  %147 = bitcast %"struct.std::__1::__hash_node_base.1232"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, %78
  %150 = icmp eq i64 %149, %144
  br i1 %150, label %195, label %151

151:                                              ; preds = %142
  %152 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %152, i64 %149
  %154 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %154, null
  br i1 %155, label %168, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %143, i64 0, i32 0
  %158 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %157, align 8
  %159 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %158, null
  br i1 %159, label %181, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %143, i64 2
  %162 = bitcast %"struct.std::__1::__hash_node_base.1232"* %161 to %"class.v8::internal::CodeEntry"**
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %158, i64 2
  %164 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %162, align 8
  %165 = bitcast %"struct.std::__1::__hash_node_base.1232"* %163 to %"class.v8::internal::CodeEntry"**
  %166 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %165, align 8
  %167 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %164, %"class.v8::internal::CodeEntry"* %166) #13
  br i1 %167, label %175, label %181

168:                                              ; preds = %151
  store %"struct.std::__1::__hash_node_base.1232"* %145, %"struct.std::__1::__hash_node_base.1232"** %153, align 8
  br label %195

169:                                              ; preds = %175
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %179, i64 2
  %171 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %162, align 8
  %172 = bitcast %"struct.std::__1::__hash_node_base.1232"* %170 to %"class.v8::internal::CodeEntry"**
  %173 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %172, align 8
  %174 = tail call zeroext i1 @_ZNK2v88internal9CodeEntry16IsSameFunctionAsEPKS1_(%"class.v8::internal::CodeEntry"* %171, %"class.v8::internal::CodeEntry"* %173) #13
  br i1 %174, label %175, label %181

175:                                              ; preds = %160, %169
  %176 = phi %"struct.std::__1::__hash_node_base.1232"** [ %178, %169 ], [ %157, %160 ]
  %177 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %177, i64 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %179, null
  br i1 %180, label %181, label %169

181:                                              ; preds = %175, %169, %160, %156
  %182 = phi %"struct.std::__1::__hash_node_base.1232"* [ %143, %156 ], [ %143, %160 ], [ %177, %169 ], [ %177, %175 ]
  %183 = bitcast %"struct.std::__1::__hash_node_base.1232"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"struct.std::__1::__hash_node_base.1232"* %145 to i64*
  store i64 %184, i64* %185, align 8
  %186 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %186, i64 %149
  %188 = bitcast %"struct.std::__1::__hash_node_base.1232"** %187 to i64**
  %189 = load i64*, i64** %188, align 8
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %183, align 8
  %191 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %11, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %191, i64 %149
  %193 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %192, align 8
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %193, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1232"* %143, %"struct.std::__1::__hash_node_base.1232"** %194, align 8
  br label %195

195:                                              ; preds = %142, %181, %168
  %196 = phi %"struct.std::__1::__hash_node_base.1232"* [ %143, %168 ], [ %145, %181 ], [ %143, %142 ]
  %197 = phi i64 [ %149, %168 ], [ %144, %181 ], [ %144, %142 ]
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %196, i64 0, i32 0
  %199 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %198, align 8
  %200 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %199, null
  br i1 %200, label %209, label %142

201:                                              ; preds = %2
  %202 = getelementptr inbounds %"class.std::__1::__hash_table.1228", %"class.std::__1::__hash_table.1228"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %202, align 8
  store %"struct.std::__1::__hash_node_base.1232"** null, %"struct.std::__1::__hash_node_base.1232"*** %202, align 8
  %204 = icmp eq %"struct.std::__1::__hash_node_base.1232"** %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %201
  %206 = bitcast %"struct.std::__1::__hash_node_base.1232"** %203 to i8*
  tail call void @_ZdlPv(i8* %206) #12
  br label %207

207:                                              ; preds = %201, %205
  %208 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1234", %"class.std::__1::__bucket_list_deallocator.1234"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %208, align 8
  br label %209

209:                                              ; preds = %195, %124, %70, %35, %207
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare i8* @_ZN2v88internal14StringsStorage11GetConsNameEPKcNS0_4NameE(%"class.v8::internal::StringsStorage"*, i8*, i64) local_unnamed_addr #6

declare i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #6

declare i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #6

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #6

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #6

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CodeEntry8RareDataD2Ev(%"struct.v8::internal::CodeEntry::RareData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::CodeEntry::RareData", %"struct.v8::internal::CodeEntry::RareData"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"struct.v8::CpuProfileDeoptFrame"*, %"struct.v8::CpuProfileDeoptFrame"** %2, align 8
  %4 = icmp eq %"struct.v8::CpuProfileDeoptFrame"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.v8::CpuProfileDeoptFrame"* %3 to i64
  %7 = getelementptr inbounds %"struct.v8::internal::CodeEntry::RareData", %"struct.v8::internal::CodeEntry::RareData"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast %"struct.v8::CpuProfileDeoptFrame"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.v8::CpuProfileDeoptFrame"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.v8::internal::CodeEntry::RareData", %"struct.v8::internal::CodeEntry::RareData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %12, null
  br i1 %13, label %48, label %14

14:                                               ; preds = %10, %45
  %15 = phi %"struct.std::__1::__hash_node_base.1232"* [ %17, %45 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.1232"*, %"struct.std::__1::__hash_node_base.1232"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1232", %"struct.std::__1::__hash_node_base.1232"* %15, i64 2
  %19 = bitcast %"struct.std::__1::__hash_node_base.1232"* %18 to %"class.v8::internal::CodeEntry"**
  %20 = load %"class.v8::internal::CodeEntry"*, %"class.v8::internal::CodeEntry"** %19, align 8
  store %"class.v8::internal::CodeEntry"* null, %"class.v8::internal::CodeEntry"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CodeEntry"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %20, i64 0, i32 8, i32 0, i32 0, i32 0
  %24 = load %"struct.v8::internal::CodeEntry::RareData"*, %"struct.v8::internal::CodeEntry::RareData"** %23, align 8
  store %"struct.v8::internal::CodeEntry::RareData"* null, %"struct.v8::internal::CodeEntry::RareData"** %23, align 8
  %25 = icmp eq %"struct.v8::internal::CodeEntry::RareData"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  tail call void @_ZN2v88internal9CodeEntry8RareDataD2Ev(%"struct.v8::internal::CodeEntry::RareData"* nonnull %24) #13
  %27 = bitcast %"struct.v8::internal::CodeEntry::RareData"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %"class.v8::internal::CodeEntry", %"class.v8::internal::CodeEntry"* %20, i64 0, i32 7, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::SourcePositionTable"*, %"class.v8::internal::SourcePositionTable"** %29, align 8
  store %"class.v8::internal::SourcePositionTable"* null, %"class.v8::internal::SourcePositionTable"** %29, align 8
  %31 = icmp eq %"class.v8::internal::SourcePositionTable"* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"*, %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %33, align 8
  %35 = icmp eq %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %34 to i64
  %38 = getelementptr inbounds %"class.v8::internal::SourcePositionTable", %"class.v8::internal::SourcePositionTable"* %30, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"struct.v8::internal::SourcePositionTable::SourcePositionTuple"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %36, %32
  %42 = bitcast %"class.v8::internal::SourcePositionTable"* %30 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %42) #13
  br label %43

43:                                               ; preds = %28, %41
  %44 = bitcast %"class.v8::internal::CodeEntry"* %20 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %14, %43
  %46 = bitcast %"struct.std::__1::__hash_node_base.1232"* %15 to i8*
  tail call void @_ZdlPv(i8* %46) #12
  %47 = icmp eq %"struct.std::__1::__hash_node_base.1232"* %17, null
  br i1 %47, label %48, label %14

48:                                               ; preds = %45, %10
  %49 = getelementptr inbounds %"struct.v8::internal::CodeEntry::RareData", %"struct.v8::internal::CodeEntry::RareData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.1232"**, %"struct.std::__1::__hash_node_base.1232"*** %49, align 8
  store %"struct.std::__1::__hash_node_base.1232"** null, %"struct.std::__1::__hash_node_base.1232"*** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base.1232"** %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.std::__1::__hash_node_base.1232"** %50 to i8*
  tail call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %48, %52
  %55 = getelementptr inbounds %"struct.v8::internal::CodeEntry::RareData", %"struct.v8::internal::CodeEntry::RareData"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %56, null
  br i1 %57, label %74, label %58

58:                                               ; preds = %54, %71
  %59 = phi %"struct.std::__1::__hash_node_base.1208"* [ %61, %71 ], [ %56, %54 ]
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %59, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %59, i64 3
  %63 = bitcast %"struct.std::__1::__hash_node_base.1208"* %62 to %"struct.v8::internal::CodeEntryAndLineNumber"**
  %64 = load %"struct.v8::internal::CodeEntryAndLineNumber"*, %"struct.v8::internal::CodeEntryAndLineNumber"** %63, align 8
  %65 = icmp eq %"struct.v8::internal::CodeEntryAndLineNumber"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %58
  %67 = ptrtoint %"struct.v8::internal::CodeEntryAndLineNumber"* %64 to i64
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %59, i64 4
  %69 = bitcast %"struct.std::__1::__hash_node_base.1208"* %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = bitcast %"struct.v8::internal::CodeEntryAndLineNumber"* %64 to i8*
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %66, %58
  %72 = bitcast %"struct.std::__1::__hash_node_base.1208"* %59 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  %73 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %61, null
  br i1 %73, label %74, label %58

74:                                               ; preds = %71, %54
  %75 = getelementptr inbounds %"struct.v8::internal::CodeEntry::RareData", %"struct.v8::internal::CodeEntry::RareData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %75, align 8
  store %"struct.std::__1::__hash_node_base.1208"** null, %"struct.std::__1::__hash_node_base.1208"*** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.1208"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"struct.std::__1::__hash_node_base.1208"** %76 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %74, %78
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN2v88internal8baseline22BytecodeOffsetIteratorD1Ev(%"class.v8::internal::baseline::BytecodeOffsetIterator"*) unnamed_addr #11

declare void @_ZN2v88internal8baseline22BytecodeOffsetIteratorC1ENS0_6HandleINS0_9ByteArrayEEENS3_INS0_13BytecodeArrayEEE(%"class.v8::internal::baseline::BytecodeOffsetIterator"*, i64*, i64*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1208"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIiJRiS8_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1204"*, i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::__1::vector.1299"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %5 = load i32, i32* %1, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %69, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %25, null
  br i1 %26, label %69, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br i1 %12, label %29, label %51

29:                                               ; preds = %27, %46
  %30 = phi %"struct.std::__1::__hash_node_base.1208"* [ %32, %46 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1208"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %8
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.1208"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %5
  br i1 %50, label %166, label %29

51:                                               ; preds = %27, %64
  %52 = phi %"struct.std::__1::__hash_node_base.1208"* [ %54, %64 ], [ %25, %27 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.1208"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %6
  %61 = and i64 %59, %28
  %62 = icmp eq i64 %61, %21
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1208"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %5
  br i1 %68, label %166, label %51

69:                                               ; preds = %56, %51, %43, %29, %20, %4
  %70 = phi i64 [ %21, %20 ], [ undef, %4 ], [ %21, %29 ], [ %21, %43 ], [ %21, %51 ], [ %21, %56 ]
  %71 = tail call i8* @_Znwm(i64 48) #12, !noalias !10
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %2, align 4, !noalias !10
  store i32 %74, i32* %73, align 8, !noalias !10
  %75 = getelementptr inbounds i8, i8* %71, i64 24
  %76 = bitcast %"class.std::__1::vector.1299"* %3 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !noalias !10
  %78 = bitcast i8* %75 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 8, !noalias !10
  %79 = getelementptr inbounds %"class.std::__1::vector.1299", %"class.std::__1::vector.1299"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"struct.v8::internal::CodeEntryAndLineNumber"** %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !10
  %82 = getelementptr inbounds i8, i8* %71, i64 40
  %83 = bitcast i8* %82 to i64*
  store i64 %81, i64* %83, align 8, !noalias !10
  %84 = bitcast %"class.std::__1::vector.1299"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #13, !noalias !10
  %85 = getelementptr inbounds i8, i8* %71, i64 8
  %86 = bitcast i8* %85 to i64*
  store i64 %6, i64* %86, align 8, !noalias !10
  %87 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1208"**
  store %"struct.std::__1::__hash_node_base.1208"* null, %"struct.std::__1::__hash_node_base.1208"** %87, align 8, !noalias !10
  %88 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  %91 = uitofp i64 %90 to float
  %92 = uitofp i64 %8 to float
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 3, i32 0, i32 0
  %94 = load float, float* %93, align 4
  %95 = fmul float %94, %92
  %96 = fcmp olt float %95, %91
  %97 = or i1 %9, %96
  br i1 %97, label %98, label %121

98:                                               ; preds = %69
  %99 = shl i64 %8, 1
  %100 = icmp ult i64 %8, 3
  %101 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %102 = icmp ugt i64 %101, 1
  %103 = or i1 %100, %102
  %104 = zext i1 %103 to i64
  %105 = or i64 %99, %104
  %106 = fdiv float %91, %94
  %107 = tail call float @llvm.ceil.f32(float %106) #13
  %108 = fptoui float %107 to i64
  %109 = icmp ult i64 %105, %108
  %110 = select i1 %109, i64 %108, i64 %105
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE6rehashEm(%"class.std::__1::__hash_table.1204"* %0, i64 %110)
  %111 = load i64, i64* %7, align 8
  %112 = tail call i64 @llvm.ctpop.i64(i64 %111) #13, !range !3
  %113 = icmp ugt i64 %112, 1
  br i1 %113, label %117, label %114

114:                                              ; preds = %98
  %115 = add i64 %111, -1
  %116 = and i64 %115, %6
  br label %121

117:                                              ; preds = %98
  %118 = icmp ugt i64 %111, %6
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = urem i64 %6, %111
  br label %121

121:                                              ; preds = %119, %117, %114, %69
  %122 = phi i64 [ %8, %69 ], [ %111, %114 ], [ %111, %117 ], [ %111, %119 ]
  %123 = phi i64 [ %70, %69 ], [ %116, %114 ], [ %6, %117 ], [ %120, %119 ]
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %125, i64 %123
  %127 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %127, null
  br i1 %128, label %129, label %155

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 1, i32 0, i32 0
  %131 = bitcast %"struct.std::__1::__hash_node_base.1208"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast i8* %71 to i64*
  store i64 %132, i64* %133, align 8
  %134 = bitcast %"struct.std::__1::__hash_node_base.1208"* %130 to i8**
  store i8* %71, i8** %134, align 8
  store %"struct.std::__1::__hash_node_base.1208"* %130, %"struct.std::__1::__hash_node_base.1208"** %126, align 8
  %135 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %87, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %135, null
  br i1 %136, label %162, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %135, i64 1
  %139 = bitcast %"struct.std::__1::__hash_node_base.1208"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = tail call i64 @llvm.ctpop.i64(i64 %122) #13, !range !3
  %142 = icmp ugt i64 %141, 1
  br i1 %142, label %146, label %143

143:                                              ; preds = %137
  %144 = add i64 %122, -1
  %145 = and i64 %140, %144
  br label %150

146:                                              ; preds = %137
  %147 = icmp ult i64 %140, %122
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = urem i64 %140, %122
  br label %150

150:                                              ; preds = %143, %146, %148
  %151 = phi i64 [ %145, %143 ], [ %149, %148 ], [ %140, %146 ]
  %152 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %124, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %152, i64 %151
  %154 = bitcast %"struct.std::__1::__hash_node_base.1208"** %153 to i8**
  br label %160

155:                                              ; preds = %121
  %156 = bitcast %"struct.std::__1::__hash_node_base.1208"* %127 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast i8* %71 to i64*
  store i64 %157, i64* %158, align 8
  %159 = bitcast %"struct.std::__1::__hash_node_base.1208"* %127 to i8**
  br label %160

160:                                              ; preds = %150, %155
  %161 = phi i8** [ %159, %155 ], [ %154, %150 ]
  store i8* %71, i8** %161, align 8
  br label %162

162:                                              ; preds = %160, %129
  %163 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1208"*
  %164 = load i64, i64* %88, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %88, align 8
  br label %166

166:                                              ; preds = %64, %46, %162
  %167 = phi i8 [ 1, %162 ], [ 0, %46 ], [ 0, %64 ]
  %168 = phi %"struct.std::__1::__hash_node_base.1208"* [ %163, %162 ], [ %32, %46 ], [ %54, %64 ]
  %169 = insertvalue { %"struct.std::__1::__hash_node_base.1208"*, i8 } undef, %"struct.std::__1::__hash_node_base.1208"* %168, 0
  %170 = insertvalue { %"struct.std::__1::__hash_node_base.1208"*, i8 } %169, i8 %167, 1
  ret { %"struct.std::__1::__hash_node_base.1208"*, i8 } %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE6rehashEm(%"class.std::__1::__hash_table.1204"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1204"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1204"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.1204"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1204"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1208"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1208"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1210", %"class.std::__1::__bucket_list_deallocator.1210"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1208"* null, %"struct.std::__1::__hash_node_base.1208"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !13

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1208"* null, %"struct.std::__1::__hash_node_base.1208"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1208"* null, %"struct.std::__1::__hash_node_base.1208"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1208"* null, %"struct.std::__1::__hash_node_base.1208"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1208"* null, %"struct.std::__1::__hash_node_base.1208"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1208"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1208"* %36, %"struct.std::__1::__hash_node_base.1208"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1208"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1208"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1208"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1208"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1208"* %103 to i32*
  %105 = load i32, i32* %130, align 4
  %106 = load i32, i32* %104, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1208"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1208"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1208"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1208"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1208"* %80, %"struct.std::__1::__hash_node_base.1208"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1208"* %82, %"struct.std::__1::__hash_node_base.1208"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1208"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1208"* %129 to i32*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1208"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1208"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1208"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1208"* %146 to i32*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1208"* %134, %"struct.std::__1::__hash_node_base.1208"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1208"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1208"* %155 to i32*
  %157 = load i32, i32* %147, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1208"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1208"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1208"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1208"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1208"* %132, %"struct.std::__1::__hash_node_base.1208"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1208"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1208", %"struct.std::__1::__hash_node_base.1208"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1208"*, %"struct.std::__1::__hash_node_base.1208"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1208"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1204", %"class.std::__1::__hash_table.1204"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1208"**, %"struct.std::__1::__hash_node_base.1208"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1208"** null, %"struct.std::__1::__hash_node_base.1208"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1208"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1208"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1210", %"class.std::__1::__bucket_list_deallocator.1210"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i64 0, i64 65}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE21__construct_node_hashIS7_JEEENS1_INS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSA_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_10unique_ptrIN2v88internal9CodeEntryENS_14default_deleteIS4_EEEENS4_6HasherENS4_6EqualsENS_9allocatorIS7_EEE21__construct_node_hashIS7_JEEENS1_INS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSA_ISG_EEEEEEmOT_DpOT0_"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE21__construct_node_hashIRiJS8_EEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_6vectorIN2v88internal22CodeEntryAndLineNumberENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS6_IS9_EEE21__construct_node_hashIRiJS8_EEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISP_EEEEEEmOT_DpOT0_"}
!13 = distinct !{!13, !9}
