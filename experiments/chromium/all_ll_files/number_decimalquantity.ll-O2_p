; ModuleID = '../../third_party/icu/source/i18n/number_decimalquantity.cpp'
source_filename = "../../third_party/icu/source/i18n/number_decimalquantity.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::IFixedDecimal" = type { i32 (...)** }
%"class.icu_69::number::impl::DecimalQuantity" = type <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, %union.anon, i8, i8, [6 x i8] }>
%union.anon = type { %struct.anon }
%struct.anon = type { i8*, i32 }
%"class.icu_69::number::impl::DecNum" = type { %"class.icu_69::MaybeStackHeaderAndArray", %struct.decContext, [4 x i8] }
%"class.icu_69::MaybeStackHeaderAndArray" = type <{ %struct.decNumber*, i32, i8, [3 x i8], %struct.decNumber, [34 x i8], [2 x i8] }>
%struct.decNumber = type { i32, i32, i8, [1 x i8] }
%struct.decContext = type { i32, i32, i32, i32, i32, i32, i8 }
%"class.icu_69::MaybeStackArray.2" = type <{ i8*, i32, i8, [20 x i8], [7 x i8] }>
%"class.icu_69::double_conversion::StringToDoubleConverter" = type <{ i32, [4 x i8], double, double, i8*, i8*, i16, [6 x i8] }>
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.1, [32 x i8] }
%struct.anon.1 = type { i16, i32, i32, i16* }
%struct.anon.0 = type { i16, [27 x i16] }
%"class.icu_69::MaybeStackArray.4" = type <{ i8*, i32, i8, [30 x i8], [5 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

$_ZTSN6icu_697UMemoryE = comdat any

$_ZTIN6icu_697UMemoryE = comdat any

@_ZTVN6icu_696number4impl15DecimalQuantityE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN6icu_696number4impl15DecimalQuantityE to i8*), i8* bitcast (void (%"class.icu_69::number::impl::DecimalQuantity"*)* @_ZN6icu_696number4impl15DecimalQuantityD2Ev to i8*), i8* bitcast (void (%"class.icu_69::number::impl::DecimalQuantity"*)* @_ZN6icu_696number4impl15DecimalQuantityD0Ev to i8*), i8* bitcast (double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)* @_ZNK6icu_696number4impl15DecimalQuantity16getPluralOperandENS_13PluralOperandE to i8*), i8* bitcast (i1 (%"class.icu_69::number::impl::DecimalQuantity"*)* @_ZNK6icu_696number4impl15DecimalQuantity5isNaNEv to i8*), i8* bitcast (i1 (%"class.icu_69::number::impl::DecimalQuantity"*)* @_ZNK6icu_696number4impl15DecimalQuantity10isInfiniteEv to i8*), i8* bitcast (i1 (%"class.icu_69::number::impl::DecimalQuantity"*)* @_ZNK6icu_696number4impl15DecimalQuantity15hasIntegerValueEv to i8*)] }, align 8
@.str = private unnamed_addr constant [25 x i8] c"9.223372036854775808E+18\00", align 1
@_ZN12_GLOBAL__N_118DOUBLE_MULTIPLIERSE = internal unnamed_addr constant [22 x double] [double 1.000000e+00, double 1.000000e+01, double 1.000000e+02, double 1.000000e+03, double 1.000000e+04, double 1.000000e+05, double 1.000000e+06, double 1.000000e+07, double 1.000000e+08, double 1.000000e+09, double 1.000000e+10, double 1.000000e+11, double 1.000000e+12, double 1.000000e+13, double 1.000000e+14, double 1.000000e+15, double 1.000000e+16, double 1.000000e+17, double 1.000000e+18, double 1.000000e+19, double 1.000000e+20, double 1.000000e+21], align 16
@_ZZNK6icu_696number4impl15DecimalQuantity10fitsInLongEbE9INT64_BCD = internal unnamed_addr constant [19 x i8] c"\09\02\02\03\03\07\02\00\03\06\08\05\04\07\07\05\08\00\08", align 16
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [5 x i16] [i16 48, i16 69, i16 43, i16 48, i16 0], align 2
@.str.4 = private unnamed_addr constant [12 x i16] [i16 45, i16 50, i16 49, i16 52, i16 55, i16 52, i16 56, i16 51, i16 54, i16 52, i16 56, i16 0], align 2
@.str.5 = private unnamed_addr constant [39 x i16] [i16 90, i16 101, i16 114, i16 111, i16 32, i16 112, i16 114, i16 101, i16 99, i16 105, i16 115, i16 105, i16 111, i16 110, i16 32, i16 98, i16 117, i16 116, i16 32, i16 119, i16 101, i16 32, i16 97, i16 114, i16 101, i16 32, i16 105, i16 110, i16 32, i16 98, i16 121, i16 116, i16 101, i16 32, i16 109, i16 111, i16 100, i16 101, i16 0], align 2
@.str.6 = private unnamed_addr constant [39 x i16] [i16 80, i16 114, i16 101, i16 99, i16 105, i16 115, i16 105, i16 111, i16 110, i16 32, i16 101, i16 120, i16 99, i16 101, i16 101, i16 100, i16 115, i16 32, i16 108, i16 101, i16 110, i16 103, i16 116, i16 104, i16 32, i16 111, i16 102, i16 32, i16 98, i16 121, i16 116, i16 101, i16 32, i16 97, i16 114, i16 114, i16 97, i16 121, i16 0], align 2
@.str.7 = private unnamed_addr constant [44 x i16] [i16 77, i16 111, i16 115, i16 116, i16 32, i16 115, i16 105, i16 103, i16 110, i16 105, i16 102, i16 105, i16 99, i16 97, i16 110, i16 116, i16 32, i16 100, i16 105, i16 103, i16 105, i16 116, i16 32, i16 105, i16 115, i16 32, i16 122, i16 101, i16 114, i16 111, i16 32, i16 105, i16 110, i16 32, i16 98, i16 121, i16 116, i16 101, i16 32, i16 109, i16 111, i16 100, i16 101, i16 0], align 2
@.str.8 = private unnamed_addr constant [45 x i16] [i16 76, i16 101, i16 97, i16 115, i16 116, i16 32, i16 115, i16 105, i16 103, i16 110, i16 105, i16 102, i16 105, i16 99, i16 97, i16 110, i16 116, i16 32, i16 100, i16 105, i16 103, i16 105, i16 116, i16 32, i16 105, i16 115, i16 32, i16 122, i16 101, i16 114, i16 111, i16 32, i16 105, i16 110, i16 32, i16 108, i16 111, i16 110, i16 103, i16 32, i16 109, i16 111, i16 100, i16 101, i16 0], align 2
@.str.9 = private unnamed_addr constant [33 x i16] [i16 68, i16 105, i16 103, i16 105, i16 116, i16 32, i16 101, i16 120, i16 99, i16 101, i16 101, i16 100, i16 105, i16 110, i16 103, i16 32, i16 49, i16 48, i16 32, i16 105, i16 110, i16 32, i16 98, i16 121, i16 116, i16 101, i16 32, i16 97, i16 114, i16 114, i16 97, i16 121, i16 0], align 2
@.str.10 = private unnamed_addr constant [28 x i16] [i16 68, i16 105, i16 103, i16 105, i16 116, i16 32, i16 98, i16 101, i16 108, i16 111, i16 119, i16 32, i16 48, i16 32, i16 105, i16 110, i16 32, i16 98, i16 121, i16 116, i16 101, i16 32, i16 97, i16 114, i16 114, i16 97, i16 121, i16 0], align 2
@.str.11 = private unnamed_addr constant [46 x i16] [i16 78, i16 111, i16 110, i16 122, i16 101, i16 114, i16 111, i16 32, i16 100, i16 105, i16 103, i16 105, i16 116, i16 115, i16 32, i16 111, i16 117, i16 116, i16 115, i16 105, i16 100, i16 101, i16 32, i16 111, i16 102, i16 32, i16 114, i16 97, i16 110, i16 103, i16 101, i16 32, i16 105, i16 110, i16 32, i16 98, i16 121, i16 116, i16 101, i16 32, i16 97, i16 114, i16 114, i16 97, i16 121, i16 0], align 2
@.str.12 = private unnamed_addr constant [47 x i16] [i16 86, i16 97, i16 108, i16 117, i16 101, i16 32, i16 105, i16 110, i16 32, i16 98, i16 99, i16 100, i16 76, i16 111, i16 110, i16 103, i16 32, i16 101, i16 118, i16 101, i16 110, i16 32, i16 116, i16 104, i16 111, i16 117, i16 103, i16 104, i16 32, i16 112, i16 114, i16 101, i16 99, i16 105, i16 115, i16 105, i16 111, i16 110, i16 32, i16 105, i16 115, i16 32, i16 122, i16 101, i16 114, i16 111, i16 0], align 2
@.str.13 = private unnamed_addr constant [33 x i16] [i16 80, i16 114, i16 101, i16 99, i16 105, i16 115, i16 105, i16 111, i16 110, i16 32, i16 101, i16 120, i16 99, i16 101, i16 101, i16 100, i16 115, i16 32, i16 108, i16 101, i16 110, i16 103, i16 116, i16 104, i16 32, i16 111, i16 102, i16 32, i16 108, i16 111, i16 110, i16 103, i16 0], align 2
@.str.14 = private unnamed_addr constant [44 x i16] [i16 77, i16 111, i16 115, i16 116, i16 32, i16 115, i16 105, i16 103, i16 110, i16 105, i16 102, i16 105, i16 99, i16 97, i16 110, i16 116, i16 32, i16 100, i16 105, i16 103, i16 105, i16 116, i16 32, i16 105, i16 115, i16 32, i16 122, i16 101, i16 114, i16 111, i16 32, i16 105, i16 110, i16 32, i16 108, i16 111, i16 110, i16 103, i16 32, i16 109, i16 111, i16 100, i16 101, i16 0], align 2
@.str.15 = private unnamed_addr constant [27 x i16] [i16 68, i16 105, i16 103, i16 105, i16 116, i16 32, i16 101, i16 120, i16 99, i16 101, i16 101, i16 100, i16 105, i16 110, i16 103, i16 32, i16 49, i16 48, i16 32, i16 105, i16 110, i16 32, i16 108, i16 111, i16 110, i16 103, i16 0], align 2
@.str.17 = private unnamed_addr constant [40 x i16] [i16 78, i16 111, i16 110, i16 122, i16 101, i16 114, i16 111, i16 32, i16 100, i16 105, i16 103, i16 105, i16 116, i16 115, i16 32, i16 111, i16 117, i16 116, i16 115, i16 105, i16 100, i16 101, i16 32, i16 111, i16 102, i16 32, i16 114, i16 97, i16 110, i16 103, i16 101, i16 32, i16 105, i16 110, i16 32, i16 108, i16 111, i16 110, i16 103, i16 0], align 2
@.str.18 = private unnamed_addr constant [36 x i8] c"<DecimalQuantity %d:%d %s %s%s%s%d>\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@_ZTVN6icu_6913IFixedDecimalE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_6913IFixedDecimalE to i8*), i8* bitcast (void (%"class.icu_69::IFixedDecimal"*)* @_ZN6icu_6913IFixedDecimalD2Ev to i8*), i8* bitcast (void (%"class.icu_69::IFixedDecimal"*)* @_ZN6icu_6913IFixedDecimalD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_6913IFixedDecimalE = hidden constant [25 x i8] c"N6icu_6913IFixedDecimalE\00", align 1
@_ZTIN6icu_6913IFixedDecimalE = hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6icu_6913IFixedDecimalE, i32 0, i32 0) }, align 8
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTSN6icu_696number4impl15DecimalQuantityE = hidden constant [39 x i8] c"N6icu_696number4impl15DecimalQuantityE\00", align 1
@_ZTSN6icu_697UMemoryE = linkonce_odr hidden constant [18 x i8] c"N6icu_697UMemoryE\00", comdat, align 1
@_ZTIN6icu_697UMemoryE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6icu_697UMemoryE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6icu_696number4impl15DecimalQuantityE = hidden constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZTSN6icu_696number4impl15DecimalQuantityE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_6913IFixedDecimalE to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*), i64 2 }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_6913IFixedDecimalD1Ev = hidden unnamed_addr alias void (%"class.icu_69::IFixedDecimal"*), void (%"class.icu_69::IFixedDecimal"*)* @_ZN6icu_6913IFixedDecimalD2Ev
@_ZN6icu_696number4impl15DecimalQuantityC1Ev = hidden unnamed_addr alias void (%"class.icu_69::number::impl::DecimalQuantity"*), void (%"class.icu_69::number::impl::DecimalQuantity"*)* @_ZN6icu_696number4impl15DecimalQuantityC2Ev
@_ZN6icu_696number4impl15DecimalQuantityD1Ev = hidden unnamed_addr alias void (%"class.icu_69::number::impl::DecimalQuantity"*), void (%"class.icu_69::number::impl::DecimalQuantity"*)* @_ZN6icu_696number4impl15DecimalQuantityD2Ev
@_ZN6icu_696number4impl15DecimalQuantityC1ERKS2_ = hidden unnamed_addr alias void (%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecimalQuantity"*), void (%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecimalQuantity"*)* @_ZN6icu_696number4impl15DecimalQuantityC2ERKS2_
@_ZN6icu_696number4impl15DecimalQuantityC1EOS2_ = hidden unnamed_addr alias void (%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecimalQuantity"*), void (%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecimalQuantity"*)* @_ZN6icu_696number4impl15DecimalQuantityC2EOS2_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #16
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #17
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #17
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #17
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #17
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #17
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #16
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #16
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #17
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6913IFixedDecimalD0Ev(%"class.icu_69::IFixedDecimal"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantityC2Ev(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6icu_696number4impl15DecimalQuantityE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 15
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 10, i1 false)
  %9 = bitcast double* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity12setBcdToZeroEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #17
  store i8* null, i8** %6, align 8
  store i8 0, i8* %2, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %10 = bitcast %union.anon* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantityD2Ev(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6icu_696number4impl15DecimalQuantityE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  store i8* null, i8** %7, align 8
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantityD0Ev(%"class.icu_69::number::impl::DecimalQuantity"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6icu_696number4impl15DecimalQuantityE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  store i8* null, i8** %7, align 8
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %10) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantityC2ERKS2_(%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecimalQuantity"* readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6icu_696number4impl15DecimalQuantityE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 15
  store i8 0, i8* %9, align 1
  %10 = tail call dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantityaSERKS2_(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantityaSERKS2_(%"class.icu_69::number::impl::DecimalQuantity"* returned, %"class.icu_69::number::impl::DecimalQuantity"* readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.icu_69::number::impl::DecimalQuantity"* %0, %1
  br i1 %3, label %70, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @uprv_free_69(i8* %10) #17
  store i8* null, i8** %9, align 8
  store i8 0, i8* %5, align 8
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %13 = bitcast %union.anon* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = sext i32 %25 to i64
  %29 = tail call noalias i8* @uprv_malloc_69(i64 %28) #16
  %30 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 %25, i32* %31, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #17
  store i8 1, i8* %5, align 8
  %32 = load i32, i32* %24, align 8
  %33 = sext i32 %32 to i64
  br label %34

34:                                               ; preds = %27, %23
  %35 = phi i64 [ 0, %23 ], [ %33, %27 ]
  %36 = phi i8* [ null, %23 ], [ %29, %27 ]
  %37 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %38, i64 %35, i1 false) #17
  br label %43

39:                                               ; preds = %11
  %40 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %41 = bitcast %union.anon* %40 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %13, align 8
  br label %43

43:                                               ; preds = %34, %39
  %44 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 1
  store i8 %45, i8* %46, align 8
  %47 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 10
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 11
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %14, align 4
  %55 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %15, align 8
  %57 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 5
  %58 = load i8, i8* %57, align 4
  %59 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  store i8 %58, i8* %59, align 4
  %60 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 8
  %61 = bitcast double* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast double* %17 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 9
  %65 = load i32, i32* %64, align 8
  store i32 %65, i32* %18, align 8
  %66 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 6
  %67 = load i8, i8* %66, align 1
  store i8 %67, i8* %16, align 1
  %68 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 12
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %19, align 4
  br label %70

70:                                               ; preds = %2, %43
  ret %"class.icu_69::number::impl::DecimalQuantity"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantityC2EOS2_(%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6icu_696number4impl15DecimalQuantityE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 15
  store i8 0, i8* %9, align 1
  %10 = tail call dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantityaSEOS2_(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72) %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantityaSEOS2_(%"class.icu_69::number::impl::DecimalQuantity"* returned, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.icu_69::number::impl::DecimalQuantity"* %0, %1
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @uprv_free_69(i8* %10) #17
  store i8* null, i8** %9, align 8
  store i8 0, i8* %5, align 8
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %13 = bitcast %union.anon* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %11
  store i8 1, i8* %5, align 8
  %24 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0
  %25 = getelementptr inbounds %struct.anon, %struct.anon* %24, i64 0, i32 0
  %26 = bitcast %struct.anon* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %13, align 8
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 %29, i32* %30, align 8
  store i8* null, i8** %25, align 8
  store i8 0, i8* %20, align 8
  br label %35

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %33 = bitcast %union.anon* %32 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %13, align 8
  br label %35

35:                                               ; preds = %23, %31
  %36 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 1
  store i8 %37, i8* %38, align 8
  %39 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 11
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %14, align 4
  %47 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %15, align 8
  %49 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 5
  %50 = load i8, i8* %49, align 4
  %51 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  store i8 %50, i8* %51, align 4
  %52 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 8
  %53 = bitcast double* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast double* %17 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 9
  %57 = load i32, i32* %56, align 8
  store i32 %57, i32* %18, align 8
  %58 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 6
  %59 = load i8, i8* %58, align 1
  store i8 %59, i8* %16, align 1
  %60 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 12
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %19, align 4
  br label %62

62:                                               ; preds = %2, %35
  ret %"class.icu_69::number::impl::DecimalQuantity"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity11copyBcdFromERKS2_(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, %"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  store i8* null, i8** %7, align 8
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %11 = bitcast %union.anon* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = sext i32 %23 to i64
  %27 = tail call noalias i8* @uprv_malloc_69(i64 %26) #16
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 %23, i32* %29, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 0, i64 %26, i1 false) #17
  store i8 1, i8* %3, align 8
  %30 = load i32, i32* %22, align 8
  %31 = sext i32 %30 to i64
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi i64 [ 0, %21 ], [ %31, %25 ]
  %34 = phi i8* [ null, %21 ], [ %27, %25 ]
  %35 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %36, i64 %33, i1 false)
  br label %41

37:                                               ; preds = %9
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %39 = bitcast %union.anon* %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %11, align 8
  br label %41

41:                                               ; preds = %37, %32
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity14copyFieldsFromERKS2_(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, %"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly dereferenceable(72)) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 1
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 10
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 5
  %19 = load i8, i8* %18, align 4
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  store i8 %19, i8* %20, align 4
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 8
  %22 = bitcast double* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  %25 = bitcast double* %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 9
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 6
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 12
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 %33, i32* %34, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity11moveBcdFromERS2_(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, %"class.icu_69::number::impl::DecimalQuantity"* nocapture dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  store i8* null, i8** %7, align 8
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %11 = bitcast %union.anon* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %9
  store i8 1, i8* %3, align 8
  %22 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0
  %23 = getelementptr inbounds %struct.anon, %struct.anon* %22, i64 0, i32 0
  %24 = bitcast %struct.anon* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %11, align 8
  %26 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 %27, i32* %28, align 8
  store i8* null, i8** %23, align 8
  store i8 0, i8* %18, align 8
  br label %33

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %31 = bitcast %union.anon* %30 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %11, align 8
  br label %33

33:                                               ; preds = %29, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity5clearEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @uprv_free_69(i8* %10) #17
  store i8* null, i8** %9, align 8
  store i8 0, i8* %5, align 8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %13 = bitcast %union.anon* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %19, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity13setMinIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, %1
  %6 = select i1 %5, i32 %4, i32 %1
  store i32 %6, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number4impl15DecimalQuantity14setMinFractionEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #10 align 2 {
  %3 = sub nsw i32 0, %1
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  store i32 %3, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity15applyMaxIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %60, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  br i1 %9, label %24, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @uprv_free_69(i8* %16) #17
  store i8* null, i8** %15, align 8
  store i8 0, i8* %11, align 8
  br label %17

17:                                               ; preds = %10, %14
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %19 = bitcast %union.anon* %18 to i64*
  store i64 0, i64* %19, align 8
  store i32 0, i32* %7, align 4
  store i32 0, i32* %3, align 8
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %23, align 4
  br label %60

24:                                               ; preds = %6
  %25 = add i32 %4, -1
  %26 = add i32 %25, %8
  %27 = icmp slt i32 %26, %1
  br i1 %27, label %60, label %28

28:                                               ; preds = %24
  %29 = sub nsw i32 %26, %1
  %30 = add nsw i32 %29, 1
  %31 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  %34 = sub nsw i32 %4, %30
  br i1 %33, label %49, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %29, -1
  br i1 %36, label %37, label %58

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %39 = sext i32 %4 to i64
  br label %40

40:                                               ; preds = %40, %37
  %41 = phi i64 [ %39, %37 ], [ %42, %40 ]
  %42 = add nsw i64 %41, -1
  %43 = load i8*, i8** %38, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  store i8 0, i8* %44, align 1
  %45 = load i32, i32* %3, align 8
  %46 = sub nsw i32 %45, %30
  %47 = sext i32 %46 to i64
  %48 = icmp sgt i64 %42, %47
  br i1 %48, label %40, label %58

49:                                               ; preds = %28
  %50 = shl nsw i32 %34, 2
  %51 = zext i32 %50 to i64
  %52 = shl nsw i64 -1, %51
  %53 = xor i64 %52, -1
  %54 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %55 = bitcast %union.anon* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, %53
  store i64 %57, i64* %55, align 8
  br label %58

58:                                               ; preds = %40, %35, %49
  %59 = phi i32 [ %34, %35 ], [ %34, %49 ], [ %46, %40 ]
  store i32 %59, i32* %3, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %60

60:                                               ; preds = %58, %24, %2, %17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %3, -1
  %7 = add i32 %6, %5
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity11popFromLeftEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = sub nsw i32 %7, %1
  br i1 %5, label %23, label %9

9:                                                ; preds = %2
  %10 = icmp sgt i32 %1, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %13 = sext i32 %7 to i64
  br label %14

14:                                               ; preds = %11, %14
  %15 = phi i64 [ %13, %11 ], [ %16, %14 ]
  %16 = add nsw i64 %15, -1
  %17 = load i8*, i8** %12, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  store i8 0, i8* %18, align 1
  %19 = load i32, i32* %6, align 8
  %20 = sub nsw i32 %19, %1
  %21 = sext i32 %20 to i64
  %22 = icmp sgt i64 %16, %21
  br i1 %22, label %14, label %32

23:                                               ; preds = %2
  %24 = shl nsw i32 %8, 2
  %25 = zext i32 %24 to i64
  %26 = shl nsw i64 -1, %25
  %27 = xor i64 %26, -1
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %29 = bitcast %union.anon* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, %27
  store i64 %31, i64* %29, align 8
  br label %32

32:                                               ; preds = %14, %9, %23
  %33 = phi i32 [ %8, %9 ], [ %8, %23 ], [ %20, %14 ]
  store i32 %33, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %150, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = sext i32 %7 to i64
  br label %13

13:                                               ; preds = %9, %19
  %14 = phi i64 [ 0, %9 ], [ %20, %19 ]
  %15 = phi i32 [ 0, %9 ], [ %21, %19 ]
  %16 = getelementptr inbounds i8, i8* %11, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = add nuw nsw i64 %14, 1
  %21 = add nuw nsw i32 %15, 1
  %22 = icmp slt i64 %20, %12
  br i1 %22, label %13, label %25

23:                                               ; preds = %13
  %24 = trunc i64 %14 to i32
  br label %25

25:                                               ; preds = %19, %23, %5
  %26 = phi i32 [ 0, %5 ], [ %24, %23 ], [ %21, %19 ]
  %27 = phi i1 [ false, %5 ], [ true, %23 ], [ false, %19 ]
  %28 = icmp eq i32 %26, %7
  br i1 %28, label %29, label %39

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @uprv_free_69(i8* %31) #17
  store i8 0, i8* %2, align 8
  %32 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %33 = bitcast %union.anon* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %34, align 4
  store i32 0, i32* %6, align 8
  %35 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %36, align 8
  %37 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %38, align 4
  br label %149

39:                                               ; preds = %25
  br i1 %27, label %40, label %45

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %42 = zext i32 %26 to i64
  br label %52

43:                                               ; preds = %52
  %44 = trunc i64 %59 to i32
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i32 [ %7, %39 ], [ %60, %43 ]
  %47 = phi i32 [ 0, %39 ], [ %44, %43 ]
  %48 = icmp slt i32 %47, %46
  br i1 %48, label %49, label %72

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %51 = zext i32 %47 to i64
  br label %64

52:                                               ; preds = %52, %40
  %53 = phi i64 [ 0, %40 ], [ %59, %52 ]
  %54 = load i8*, i8** %41, align 8
  %55 = add nuw nsw i64 %53, %42
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 %57, i8* %58, align 1
  %59 = add nuw nsw i64 %53, 1
  %60 = load i32, i32* %6, align 8
  %61 = sub nsw i32 %60, %26
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %59, %62
  br i1 %63, label %52, label %43

64:                                               ; preds = %64, %49
  %65 = phi i64 [ %51, %49 ], [ %68, %64 ]
  %66 = load i8*, i8** %50, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 %65
  store i8 0, i8* %67, align 1
  %68 = add nuw nsw i64 %65, 1
  %69 = load i32, i32* %6, align 8
  %70 = trunc i64 %68 to i32
  %71 = icmp sgt i32 %69, %70
  br i1 %71, label %64, label %72

72:                                               ; preds = %64, %45
  %73 = phi i32 [ %46, %45 ], [ %69, %64 ]
  %74 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, %26
  store i32 %76, i32* %74, align 4
  %77 = sub i32 %73, %26
  store i32 %77, i32* %6, align 8
  %78 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %79 = sext i32 %77 to i64
  br label %80

80:                                               ; preds = %86, %72
  %81 = phi i64 [ %82, %86 ], [ %79, %72 ]
  %82 = add nsw i64 %81, -1
  %83 = icmp sgt i64 %81, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = trunc i64 %81 to i32
  store i32 %85, i32* %6, align 8
  br label %94

86:                                               ; preds = %80
  %87 = load i8*, i8** %78, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %82
  %89 = load i8, i8* %88, align 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %80, label %91

91:                                               ; preds = %86
  %92 = trunc i64 %81 to i32
  store i32 %92, i32* %6, align 8
  %93 = icmp slt i32 %92, 17
  br i1 %93, label %94, label %149

94:                                               ; preds = %84, %91
  %95 = phi i1 [ false, %84 ], [ true, %91 ]
  %96 = load i8, i8* %2, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %117, label %98

98:                                               ; preds = %94
  %99 = load i8*, i8** %78, align 8
  br i1 %95, label %100, label %103

100:                                              ; preds = %98
  %101 = shl i64 %81, 32
  %102 = ashr exact i64 %101, 32
  br label %107

103:                                              ; preds = %107, %98
  %104 = phi i64 [ 0, %98 ], [ %115, %107 ]
  %105 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  tail call void @uprv_free_69(i8* %99) #17
  %106 = bitcast %union.anon* %105 to i64*
  store i64 %104, i64* %106, align 8
  store i8 0, i8* %2, align 8
  br label %149

107:                                              ; preds = %107, %100
  %108 = phi i64 [ %102, %100 ], [ %110, %107 ]
  %109 = phi i64 [ 0, %100 ], [ %115, %107 ]
  %110 = add nsw i64 %108, -1
  %111 = shl i64 %109, 4
  %112 = getelementptr inbounds i8, i8* %99, i64 %110
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i64
  %115 = or i64 %111, %114
  %116 = icmp sgt i64 %110, 0
  br i1 %116, label %107, label %103

117:                                              ; preds = %94
  %118 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %119 = bitcast %union.anon* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call noalias i8* @uprv_malloc_69(i64 40) #16
  store i8* %121, i8** %78, align 8
  %122 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 40, i32* %122, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %121, i8 0, i64 40, i1 false) #17
  store i8 1, i8* %2, align 8
  %123 = load i32, i32* %6, align 8
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %149

125:                                              ; preds = %117
  %126 = getelementptr inbounds %union.anon, %union.anon* %118, i64 0, i32 0, i32 0
  %127 = trunc i64 %120 to i8
  %128 = and i8 %127, 15
  store i8 %128, i8* %121, align 1
  %129 = icmp eq i32 %123, 1
  br i1 %129, label %149, label %130

130:                                              ; preds = %125
  %131 = lshr i64 %120, 4
  %132 = trunc i64 %131 to i8
  %133 = and i8 %132, 15
  %134 = getelementptr inbounds i8, i8* %121, i64 1
  store i8 %133, i8* %134, align 1
  %135 = load i32, i32* %6, align 8
  %136 = icmp sgt i32 %135, 2
  br i1 %136, label %137, label %149

137:                                              ; preds = %130, %137
  %138 = phi i64 [ %145, %137 ], [ 2, %130 ]
  %139 = phi i64 [ %141, %137 ], [ %131, %130 ]
  %140 = load i8*, i8** %126, align 8
  %141 = lshr i64 %139, 4
  %142 = trunc i64 %141 to i8
  %143 = and i8 %142, 15
  %144 = getelementptr inbounds i8, i8* %140, i64 %138
  store i8 %143, i8* %144, align 1
  %145 = add nuw nsw i64 %138, 1
  %146 = load i32, i32* %6, align 8
  %147 = sext i32 %146 to i64
  %148 = icmp slt i64 %145, %147
  br i1 %148, label %137, label %149

149:                                              ; preds = %137, %130, %125, %117, %103, %91, %210, %161, %29
  ret void

150:                                              ; preds = %1
  %151 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %152 = bitcast %union.anon* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %161, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %157 = load i32, i32* %156, align 8
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %159, label %184

159:                                              ; preds = %155
  %160 = sext i32 %157 to i64
  br label %168

161:                                              ; preds = %150
  store i64 0, i64* %152, align 8
  %162 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %162, align 4
  %163 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %163, align 8
  %164 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %164, align 1
  %165 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %165, align 8
  %166 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %166, align 8
  %167 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %167, align 4
  br label %149

168:                                              ; preds = %159, %178
  %169 = phi i64 [ 0, %159 ], [ %179, %178 ]
  %170 = phi i32 [ 0, %159 ], [ %180, %178 ]
  %171 = icmp ugt i64 %169, 15
  br i1 %171, label %178, label %172

172:                                              ; preds = %168
  %173 = shl i64 %169, 2
  %174 = and i64 %173, 4294967292
  %175 = shl i64 15, %174
  %176 = and i64 %175, %153
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %168, %172
  %179 = add nuw nsw i64 %169, 1
  %180 = add nuw nsw i32 %170, 1
  %181 = icmp slt i64 %179, %160
  br i1 %181, label %168, label %184

182:                                              ; preds = %172
  %183 = trunc i64 %169 to i32
  br label %184

184:                                              ; preds = %178, %182, %155
  %185 = phi i32 [ 0, %155 ], [ %183, %182 ], [ %180, %178 ]
  %186 = shl nsw i32 %185, 2
  %187 = zext i32 %186 to i64
  %188 = lshr i64 %153, %187
  store i64 %188, i64* %152, align 8
  %189 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %190 = load i32, i32* %189, align 4
  %191 = add nsw i32 %190, %185
  store i32 %191, i32* %189, align 4
  %192 = zext i32 %157 to i64
  br label %193

193:                                              ; preds = %206, %184
  %194 = phi i64 [ %209, %206 ], [ %192, %184 ]
  %195 = trunc i64 %194 to i32
  %196 = add nsw i32 %195, -1
  %197 = icmp sgt i32 %195, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %193
  %199 = icmp ugt i32 %196, 15
  br i1 %199, label %206, label %200

200:                                              ; preds = %198
  %201 = shl nsw i32 %196, 2
  %202 = zext i32 %201 to i64
  %203 = lshr i64 %188, %202
  %204 = trunc i64 %203 to i8
  %205 = and i8 %204, 15
  br label %206

206:                                              ; preds = %198, %200
  %207 = phi i8 [ %205, %200 ], [ 0, %198 ]
  %208 = icmp eq i8 %207, 0
  %209 = add nsw i64 %194, -1
  br i1 %208, label %193, label %210

210:                                              ; preds = %193, %206
  %211 = trunc i64 %194 to i32
  store i32 %211, i32* %156, align 8
  br label %149
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6icu_696number4impl15DecimalQuantity22getPositionFingerprintEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  %4 = shl i32 %3, 16
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = xor i64 %9, %5
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity16roundToIncrementEd25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, double, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::number::impl::DecNum", align 8
  %6 = bitcast %"class.icu_69::number::impl::DecNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 96, i1 false)
  call void @_ZN6icu_696number4impl6DecNumC1Ev(%"class.icu_69::number::impl::DecNum"* nonnull %5) #17
  call void @_ZN6icu_696number4impl6DecNum5setToEdR10UErrorCode(%"class.icu_69::number::impl::DecNum"* nonnull %5, double %1, i32* dereferenceable(4) %3) #17
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  call void @_ZN6icu_696number4impl15DecimalQuantity8divideByERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %5, i32* dereferenceable(4) %3)
  %10 = load i32, i32* %3, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  call void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModebR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, i32 0, i32 %2, i1 zeroext false, i32* dereferenceable(4) %3) #17
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  call void @_ZN6icu_696number4impl15DecimalQuantity10multiplyByERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %5, i32* dereferenceable(4) %3)
  br label %16

16:                                               ; preds = %15, %12, %9, %4
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecNum", %"class.icu_69::number::impl::DecNum"* %5, i64 0, i32 0, i32 2
  %18 = load i8, i8* %17, align 4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.icu_69::number::impl::DecNum"* %5 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @uprv_free_69(i8* %22) #17
  br label %23

23:                                               ; preds = %16, %20
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6icu_696number4impl6DecNumC1Ev(%"class.icu_69::number::impl::DecNum"*) unnamed_addr #4

declare void @_ZN6icu_696number4impl6DecNum5setToEdR10UErrorCode(%"class.icu_69::number::impl::DecNum"*, double, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity8divideByERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecNum"* dereferenceable(96), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::number::impl::DecNum", align 8
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.icu_69::number::impl::DecNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %9) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 96, i1 false)
  call void @_ZN6icu_696number4impl6DecNumC1Ev(%"class.icu_69::number::impl::DecNum"* nonnull %4) #17
  %10 = call dereferenceable(96) %"class.icu_69::number::impl::DecNum"* @_ZNK6icu_696number4impl15DecimalQuantity8toDecNumERNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %4, i32* dereferenceable(4) %2)
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  call void @_ZN6icu_696number4impl6DecNum8divideByERKS2_R10UErrorCode(%"class.icu_69::number::impl::DecNum"* nonnull %4, %"class.icu_69::number::impl::DecNum"* dereferenceable(96) %1, i32* dereferenceable(4) %2) #17
  %14 = load i32, i32* %2, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = call dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity11setToDecNumERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %4, i32* dereferenceable(4) %2)
  br label %18

18:                                               ; preds = %13, %8, %16
  %19 = getelementptr inbounds %"class.icu_69::number::impl::DecNum", %"class.icu_69::number::impl::DecNum"* %4, i64 0, i32 0, i32 2
  %20 = load i8, i8* %19, align 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.icu_69::number::impl::DecNum"* %4 to i8**
  %24 = load i8*, i8** %23, align 8
  call void @uprv_free_69(i8* %24) #17
  br label %25

25:                                               ; preds = %18, %22
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %9) #17
  br label %26

26:                                               ; preds = %3, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, i32, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModebR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, i32 %1, i32 %2, i1 zeroext false, i32* dereferenceable(4) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity10multiplyByERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecNum"* dereferenceable(96), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::number::impl::DecNum", align 8
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.icu_69::number::impl::DecNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %9) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 96, i1 false)
  call void @_ZN6icu_696number4impl6DecNumC1Ev(%"class.icu_69::number::impl::DecNum"* nonnull %4) #17
  %10 = call dereferenceable(96) %"class.icu_69::number::impl::DecNum"* @_ZNK6icu_696number4impl15DecimalQuantity8toDecNumERNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %4, i32* dereferenceable(4) %2)
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  call void @_ZN6icu_696number4impl6DecNum10multiplyByERKS2_R10UErrorCode(%"class.icu_69::number::impl::DecNum"* nonnull %4, %"class.icu_69::number::impl::DecNum"* dereferenceable(96) %1, i32* dereferenceable(4) %2) #17
  %14 = load i32, i32* %2, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = call dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity11setToDecNumERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %4, i32* dereferenceable(4) %2)
  br label %18

18:                                               ; preds = %13, %8, %16
  %19 = getelementptr inbounds %"class.icu_69::number::impl::DecNum", %"class.icu_69::number::impl::DecNum"* %4, i64 0, i32 0, i32 2
  %20 = load i8, i8* %19, align 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.icu_69::number::impl::DecNum"* %4 to i8**
  %24 = load i8*, i8** %23, align 8
  call void @uprv_free_69(i8* %24) #17
  br label %25

25:                                               ; preds = %18, %22
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %9) #17
  br label %26

26:                                               ; preds = %3, %25
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"class.icu_69::number::impl::DecNum"* @_ZNK6icu_696number4impl15DecimalQuantity8toDecNumERNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly, %"class.icu_69::number::impl::DecNum"* returned dereferenceable(96), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::MaybeStackArray.2", align 8
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  tail call void @_ZN6icu_696number4impl6DecNum5setToEPKcR10UErrorCode(%"class.icu_69::number::impl::DecNum"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32* dereferenceable(4) %2) #17
  %9 = load i32, i32* %5, align 8
  br label %10

10:                                               ; preds = %8, %3
  %11 = phi i32 [ %9, %8 ], [ %6, %3 ]
  %12 = bitcast %"class.icu_69::MaybeStackArray.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load i32, i32* %2, align 4
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray.2", %"class.icu_69::MaybeStackArray.2"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray.2", %"class.icu_69::MaybeStackArray.2"* %4, i64 0, i32 3, i64 0
  store i8* %15, i8** %14, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray.2", %"class.icu_69::MaybeStackArray.2"* %4, i64 0, i32 1
  store i32 20, i32* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray.2", %"class.icu_69::MaybeStackArray.2"* %4, i64 0, i32 2
  store i8 0, i8* %17, align 4
  %18 = icmp slt i32 %13, 1
  %19 = icmp sgt i32 %11, 20
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %31

21:                                               ; preds = %10
  %22 = sext i32 %11 to i64
  %23 = call noalias i8* @uprv_malloc_69(i64 %22) #16
  %24 = icmp eq i8* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = load i8, i8* %17, align 4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = load i8*, i8** %14, align 8
  call void @uprv_free_69(i8* %29) #17
  br label %30

30:                                               ; preds = %28, %25
  store i8* %23, i8** %14, align 8
  store i32 %11, i32* %16, align 8
  store i8 1, i8* %17, align 4
  br label %31

31:                                               ; preds = %10, %21, %30
  %32 = load i32, i32* %2, align 4
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %34, label %82

34:                                               ; preds = %31
  %35 = load i32, i32* %5, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %39 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %40 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %41 = bitcast %union.anon* %40 to i64*
  br label %51

42:                                               ; preds = %70, %34
  %43 = phi i32 [ %35, %34 ], [ %79, %70 ]
  %44 = load i8*, i8** %14, align 8
  %45 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %48 = load i8, i8* %47, align 4
  %49 = and i8 %48, 1
  %50 = icmp ne i8 %49, 0
  call void @_ZN6icu_696number4impl6DecNum5setToEPKhiibR10UErrorCode(%"class.icu_69::number::impl::DecNum"* %1, i8* %44, i32 %43, i32 %46, i1 zeroext %50, i32* dereferenceable(4) %2) #17
  br label %82

51:                                               ; preds = %37, %70
  %52 = phi i64 [ 0, %37 ], [ %77, %70 ]
  %53 = phi i32 [ %35, %37 ], [ %79, %70 ]
  %54 = phi i32 [ 0, %37 ], [ %78, %70 ]
  %55 = load i8, i8* %38, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %51
  %58 = load i8*, i8** %39, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = load i8, i8* %59, align 1
  br label %70

61:                                               ; preds = %51
  %62 = icmp ugt i64 %52, 15
  br i1 %62, label %70, label %63

63:                                               ; preds = %61
  %64 = load i64, i64* %41, align 8
  %65 = shl i64 %52, 2
  %66 = and i64 %65, 4294967292
  %67 = lshr i64 %64, %66
  %68 = trunc i64 %67 to i8
  %69 = and i8 %68, 15
  br label %70

70:                                               ; preds = %57, %61, %63
  %71 = phi i8 [ %60, %57 ], [ %69, %63 ], [ 0, %61 ]
  %72 = xor i32 %54, -1
  %73 = add i32 %53, %72
  %74 = sext i32 %73 to i64
  %75 = load i8*, i8** %14, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  store i8 %71, i8* %76, align 1
  %77 = add nuw nsw i64 %52, 1
  %78 = add nuw nsw i32 %54, 1
  %79 = load i32, i32* %5, align 8
  %80 = sext i32 %79 to i64
  %81 = icmp slt i64 %77, %80
  br i1 %81, label %51, label %42

82:                                               ; preds = %31, %42
  %83 = load i8, i8* %17, align 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = load i8*, i8** %14, align 8
  call void @uprv_free_69(i8* %86) #17
  br label %87

87:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #17
  ret %"class.icu_69::number::impl::DecNum"* %1
}

declare void @_ZN6icu_696number4impl6DecNum10multiplyByERKS2_R10UErrorCode(%"class.icu_69::number::impl::DecNum"*, %"class.icu_69::number::impl::DecNum"* dereferenceable(96), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity11setToDecNumERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* returned, %"class.icu_69::number::impl::DecNum"* dereferenceable(96), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @uprv_free_69(i8* %9) #17
  store i8* null, i8** %8, align 8
  store i8 0, i8* %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %12 = bitcast %union.anon* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %18 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 10, i1 false)
  %19 = load i32, i32* %2, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %29

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK6icu_696number4impl6DecNum10isNegativeEv(%"class.icu_69::number::impl::DecNum"* %1) #17
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = load i8, i8* %17, align 4
  %25 = or i8 %24, 1
  store i8 %25, i8* %17, align 4
  br label %26

26:                                               ; preds = %23, %21
  %27 = tail call zeroext i1 @_ZNK6icu_696number4impl6DecNum6isZeroEv(%"class.icu_69::number::impl::DecNum"* %1) #17
  br i1 %27, label %29, label %28

28:                                               ; preds = %26
  tail call void @_ZN6icu_696number4impl15DecimalQuantity18readDecNumberToBcdERKNS1_6DecNumE(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* dereferenceable(96) %1) #17
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0) #17
  br label %29

29:                                               ; preds = %10, %26, %28
  ret %"class.icu_69::number::impl::DecimalQuantity"* %0
}

declare void @_ZN6icu_696number4impl6DecNum8divideByERKS2_R10UErrorCode(%"class.icu_69::number::impl::DecNum"*, %"class.icu_69::number::impl::DecNum"* dereferenceable(96), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity6negateEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4
  %4 = xor i8 %3, 1
  store i8 %4, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6icu_696number4impl15DecimalQuantity15adjustMagnitudeEi(%"class.icu_69::number::impl::DecimalQuantity"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = tail call signext i8 @uprv_add32_overflow_69(i32 %9, i32 %1, i32* %8) #17
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = tail call signext i8 @uprv_add32_overflow_69(i32 %12, i32 %1, i32* %11) #17
  %14 = or i8 %13, %10
  %15 = icmp eq i8 %14, 0
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  store i32 -1431655766, i32* %3, align 4
  br i1 %15, label %17, label %22

17:                                               ; preds = %7
  %18 = load i32, i32* %8, align 4
  %19 = load i32, i32* %4, align 8
  %20 = call signext i8 @uprv_add32_overflow_69(i32 %18, i32 %19, i32* nonnull %3) #17
  %21 = icmp ne i8 %20, 0
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i1 [ true, %7 ], [ %21, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  br label %24

24:                                               ; preds = %2, %22
  %25 = phi i1 [ %23, %22 ], [ false, %2 ]
  ret i1 %25
}

declare signext i8 @uprv_add32_overflow_69(i32, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK6icu_696number4impl15DecimalQuantity16getPluralOperandENS_13PluralOperandE(%"class.icu_69::number::impl::DecimalQuantity"*, i32) unnamed_addr #0 align 2 {
  switch i32 %1, label %211 [
    i32 1, label %3
    i32 2, label %57
    i32 3, label %114
    i32 4, label %179
    i32 5, label %193
    i32 6, label %203
    i32 7, label %207
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %5, -1
  %11 = add i32 %10, %7
  %12 = add i32 %11, %9
  %13 = icmp slt i32 %12, 17
  %14 = select i1 %13, i32 %12, i32 17
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %16, label %214

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %22 = bitcast %union.anon* %21 to i64*
  %23 = sext i32 %14 to i64
  br label %24

24:                                               ; preds = %49, %16
  %25 = phi i64 [ %23, %16 ], [ %53, %49 ]
  %26 = phi i64 [ 0, %16 ], [ %52, %49 ]
  %27 = mul i64 %26, 10
  %28 = trunc i64 %25 to i32
  %29 = sub i32 %28, %7
  %30 = sub i32 %29, %5
  br i1 %19, label %40, label %31

31:                                               ; preds = %24
  %32 = icmp sgt i32 %30, -1
  %33 = icmp sgt i32 %9, %30
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %49

35:                                               ; preds = %31
  %36 = load i8*, i8** %20, align 8
  %37 = sext i32 %30 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load i8, i8* %38, align 1
  br label %49

40:                                               ; preds = %24
  %41 = icmp ugt i32 %30, 15
  br i1 %41, label %49, label %42

42:                                               ; preds = %40
  %43 = load i64, i64* %22, align 8
  %44 = shl nsw i32 %30, 2
  %45 = zext i32 %44 to i64
  %46 = lshr i64 %43, %45
  %47 = trunc i64 %46 to i8
  %48 = and i8 %47, 15
  br label %49

49:                                               ; preds = %42, %40, %35, %31
  %50 = phi i8 [ %39, %35 ], [ %48, %42 ], [ 0, %31 ], [ 0, %40 ]
  %51 = sext i8 %50 to i64
  %52 = add i64 %27, %51
  %53 = add nsw i64 %25, -1
  %54 = icmp sgt i64 %25, 0
  br i1 %54, label %24, label %55

55:                                               ; preds = %49
  %56 = sitofp i64 %52 to double
  br label %214

57:                                               ; preds = %2
  %58 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %59 = load i32, i32* %58, align 4
  %60 = xor i32 %59, -1
  %61 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %62
  %66 = select i1 %65, i32 %64, i32 %62
  %67 = icmp sgt i32 %66, %60
  br i1 %67, label %214, label %68

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %73 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %74 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %75 = bitcast %union.anon* %74 to i64*
  %76 = sext i32 %60 to i64
  %77 = sext i32 %62 to i64
  %78 = sext i32 %66 to i64
  br label %79

79:                                               ; preds = %104, %68
  %80 = phi i64 [ %76, %68 ], [ %108, %104 ]
  %81 = phi i64 [ 0, %68 ], [ %107, %104 ]
  %82 = mul i64 %81, 10
  %83 = sub nsw i64 %80, %77
  br i1 %71, label %94, label %84

84:                                               ; preds = %79
  %85 = icmp slt i64 %83, 0
  br i1 %85, label %104, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %72, align 8
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %83, %88
  br i1 %89, label %90, label %104

90:                                               ; preds = %86
  %91 = load i8*, i8** %73, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 %83
  %93 = load i8, i8* %92, align 1
  br label %104

94:                                               ; preds = %79
  %95 = trunc i64 %83 to i32
  %96 = icmp ugt i32 %95, 15
  br i1 %96, label %104, label %97

97:                                               ; preds = %94
  %98 = load i64, i64* %75, align 8
  %99 = shl i64 %83, 2
  %100 = and i64 %99, 4294967292
  %101 = lshr i64 %98, %100
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 15
  br label %104

104:                                              ; preds = %97, %94, %90, %86, %84
  %105 = phi i8 [ %93, %90 ], [ %103, %97 ], [ 0, %86 ], [ 0, %84 ], [ 0, %94 ]
  %106 = sext i8 %105 to i64
  %107 = add i64 %82, %106
  %108 = add nsw i64 %80, -1
  %109 = icmp sgt i64 %80, %78
  %110 = icmp ult i64 %107, 1000000000000000001
  %111 = and i1 %109, %110
  br i1 %111, label %79, label %112

112:                                              ; preds = %104
  %113 = uitofp i64 %107 to double
  br label %214

114:                                              ; preds = %2
  %115 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %116 = load i32, i32* %115, align 4
  %117 = xor i32 %116, -1
  %118 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, %117
  br i1 %120, label %176, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %123 = load i8, i8* %122, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  %125 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %126 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %127 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %128 = bitcast %union.anon* %127 to i64*
  %129 = sext i32 %117 to i64
  %130 = sext i32 %119 to i64
  br label %131

131:                                              ; preds = %156, %121
  %132 = phi i64 [ %129, %121 ], [ %160, %156 ]
  %133 = phi i64 [ 0, %121 ], [ %159, %156 ]
  %134 = mul i64 %133, 10
  %135 = sub nsw i64 %132, %130
  br i1 %124, label %146, label %136

136:                                              ; preds = %131
  %137 = icmp slt i64 %135, 0
  br i1 %137, label %156, label %138

138:                                              ; preds = %136
  %139 = load i32, i32* %125, align 8
  %140 = sext i32 %139 to i64
  %141 = icmp slt i64 %135, %140
  br i1 %141, label %142, label %156

142:                                              ; preds = %138
  %143 = load i8*, i8** %126, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 %135
  %145 = load i8, i8* %144, align 1
  br label %156

146:                                              ; preds = %131
  %147 = trunc i64 %135 to i32
  %148 = icmp ugt i32 %147, 15
  br i1 %148, label %156, label %149

149:                                              ; preds = %146
  %150 = load i64, i64* %128, align 8
  %151 = shl i64 %135, 2
  %152 = and i64 %151, 4294967292
  %153 = lshr i64 %150, %152
  %154 = trunc i64 %153 to i8
  %155 = and i8 %154, 15
  br label %156

156:                                              ; preds = %149, %146, %142, %138, %136
  %157 = phi i8 [ %145, %142 ], [ %155, %149 ], [ 0, %138 ], [ 0, %136 ], [ 0, %146 ]
  %158 = sext i8 %157 to i64
  %159 = add i64 %134, %158
  %160 = add nsw i64 %132, -1
  %161 = icmp sgt i64 %132, %130
  %162 = icmp ult i64 %159, 1000000000000000001
  %163 = and i1 %161, %162
  br i1 %163, label %131, label %164

164:                                              ; preds = %156
  %165 = icmp ne i64 %159, 0
  %166 = urem i64 %159, 10
  %167 = icmp eq i64 %166, 0
  %168 = and i1 %165, %167
  br i1 %168, label %169, label %176

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %171, %169 ], [ %159, %164 ]
  %171 = udiv i64 %170, 10
  %172 = icmp ugt i64 %170, 9
  %173 = urem i64 %171, 10
  %174 = icmp eq i64 %173, 0
  %175 = and i1 %172, %174
  br i1 %175, label %169, label %176

176:                                              ; preds = %169, %114, %164
  %177 = phi i64 [ %159, %164 ], [ 0, %114 ], [ %171, %169 ]
  %178 = uitofp i64 %177 to double
  br label %214

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  %183 = load i32, i32* %182, align 8
  %184 = icmp slt i32 %183, %181
  %185 = select i1 %184, i32 %183, i32 %181
  %186 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, %185
  %189 = sub i32 0, %188
  %190 = icmp sgt i32 %189, 0
  %191 = select i1 %190, i32 %189, i32 0
  %192 = sitofp i32 %191 to double
  br label %214

193:                                              ; preds = %2
  %194 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %197 = load i32, i32* %196, align 4
  %198 = add i32 %195, %197
  %199 = sub i32 0, %198
  %200 = icmp sgt i32 %199, 0
  %201 = select i1 %200, i32 %199, i32 0
  %202 = sitofp i32 %201 to double
  br label %214

203:                                              ; preds = %2
  %204 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %205 = load i32, i32* %204, align 4
  %206 = sitofp i32 %205 to double
  br label %214

207:                                              ; preds = %2
  %208 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %209 = load i32, i32* %208, align 4
  %210 = sitofp i32 %209 to double
  br label %214

211:                                              ; preds = %2
  %212 = tail call double @_ZNK6icu_696number4impl15DecimalQuantity8toDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  %213 = tail call double @llvm.fabs.f64(double %212) #17
  br label %214

214:                                              ; preds = %57, %112, %3, %55, %211, %207, %203, %193, %179, %176
  %215 = phi double [ %213, %211 ], [ %210, %207 ], [ %206, %203 ], [ %202, %193 ], [ %192, %179 ], [ %178, %176 ], [ 0.000000e+00, %3 ], [ %56, %55 ], [ 0.000000e+00, %57 ], [ %113, %112 ]
  ret double %215
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity10isNegativeEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6icu_696number4impl15DecimalQuantity6toLongEb(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly, i1 zeroext) local_unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %4, -1
  %10 = add i32 %9, %6
  %11 = add i32 %10, %8
  %12 = icmp slt i32 %11, 17
  %13 = select i1 %12, i32 %11, i32 17
  %14 = select i1 %1, i32 %13, i32 %11
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %16, label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %22 = bitcast %union.anon* %21 to i64*
  %23 = sext i32 %14 to i64
  br label %32

24:                                               ; preds = %57, %2
  %25 = phi i64 [ 0, %2 ], [ %60, %57 ]
  %26 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %27 = load i8, i8* %26, align 4
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  %30 = sub i64 0, %25
  %31 = select i1 %29, i64 %25, i64 %30
  ret i64 %31

32:                                               ; preds = %16, %57
  %33 = phi i64 [ %23, %16 ], [ %61, %57 ]
  %34 = phi i64 [ 0, %16 ], [ %60, %57 ]
  %35 = mul i64 %34, 10
  %36 = trunc i64 %33 to i32
  %37 = sub i32 %36, %6
  %38 = sub i32 %37, %4
  br i1 %19, label %48, label %39

39:                                               ; preds = %32
  %40 = icmp sgt i32 %38, -1
  %41 = icmp sgt i32 %8, %38
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %57

43:                                               ; preds = %39
  %44 = load i8*, i8** %20, align 8
  %45 = sext i32 %38 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = load i8, i8* %46, align 1
  br label %57

48:                                               ; preds = %32
  %49 = icmp ugt i32 %38, 15
  br i1 %49, label %57, label %50

50:                                               ; preds = %48
  %51 = load i64, i64* %22, align 8
  %52 = shl nsw i32 %38, 2
  %53 = zext i32 %52 to i64
  %54 = lshr i64 %51, %53
  %55 = trunc i64 %54 to i8
  %56 = and i8 %55, 15
  br label %57

57:                                               ; preds = %39, %43, %48, %50
  %58 = phi i8 [ %47, %43 ], [ %56, %50 ], [ 0, %39 ], [ 0, %48 ]
  %59 = sext i8 %58 to i64
  %60 = add i64 %35, %59
  %61 = add nsw i64 %33, -1
  %62 = icmp sgt i64 %33, 0
  br i1 %62, label %32, label %24
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6icu_696number4impl15DecimalQuantity14toFractionLongEb(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly, i1 zeroext) local_unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 4
  %5 = xor i32 %4, -1
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  br i1 %1, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, %7
  %12 = select i1 %11, i32 %10, i32 %7
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %7, %2 ]
  %15 = icmp sgt i32 %14, %5
  br i1 %15, label %60, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %22 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %23 = bitcast %union.anon* %22 to i64*
  %24 = sext i32 %5 to i64
  %25 = sext i32 %7 to i64
  %26 = sext i32 %14 to i64
  br label %27

27:                                               ; preds = %16, %52
  %28 = phi i64 [ %24, %16 ], [ %56, %52 ]
  %29 = phi i64 [ 0, %16 ], [ %55, %52 ]
  %30 = mul i64 %29, 10
  %31 = sub nsw i64 %28, %25
  br i1 %19, label %42, label %32

32:                                               ; preds = %27
  %33 = icmp slt i64 %31, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %32
  %35 = load i32, i32* %20, align 8
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %31, %36
  br i1 %37, label %38, label %52

38:                                               ; preds = %34
  %39 = load i8*, i8** %21, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %31
  %41 = load i8, i8* %40, align 1
  br label %52

42:                                               ; preds = %27
  %43 = trunc i64 %31 to i32
  %44 = icmp ugt i32 %43, 15
  br i1 %44, label %52, label %45

45:                                               ; preds = %42
  %46 = load i64, i64* %23, align 8
  %47 = shl i64 %31, 2
  %48 = and i64 %47, 4294967292
  %49 = lshr i64 %46, %48
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 15
  br label %52

52:                                               ; preds = %32, %34, %38, %42, %45
  %53 = phi i8 [ %41, %38 ], [ %51, %45 ], [ 0, %34 ], [ 0, %32 ], [ 0, %42 ]
  %54 = sext i8 %53 to i64
  %55 = add i64 %30, %54
  %56 = add nsw i64 %28, -1
  %57 = icmp sgt i64 %28, %26
  %58 = icmp ult i64 %55, 1000000000000000001
  %59 = and i1 %58, %57
  br i1 %59, label %27, label %60

60:                                               ; preds = %52, %13
  %61 = phi i64 [ 0, %13 ], [ %55, %52 ]
  br i1 %1, label %74, label %62

62:                                               ; preds = %60
  %63 = icmp ne i64 %61, 0
  %64 = urem i64 %61, 10
  %65 = icmp eq i64 %64, 0
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %74

67:                                               ; preds = %62, %67
  %68 = phi i64 [ %69, %67 ], [ %61, %62 ]
  %69 = udiv i64 %68, 10
  %70 = icmp ugt i64 %68, 9
  %71 = urem i64 %69, 10
  %72 = icmp eq i64 %71, 0
  %73 = and i1 %70, %72
  br i1 %73, label %67, label %74

74:                                               ; preds = %67, %62, %60
  %75 = phi i64 [ %61, %60 ], [ %61, %62 ], [ %69, %67 ]
  ret i64 %75
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_696number4impl15DecimalQuantity13fractionCountEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, %3
  %7 = select i1 %6, i32 %5, i32 %3
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %7, %9
  %11 = sub i32 0, %10
  %12 = icmp sgt i32 %11, 0
  %13 = select i1 %12, i32 %11, i32 0
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_696number4impl15DecimalQuantity33fractionCountWithoutTrailingZerosEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  %7 = sub i32 0, %6
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_696number4impl15DecimalQuantity11getExponentEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK6icu_696number4impl15DecimalQuantity8toDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.icu_69::double_conversion::StringToDoubleConverter", align 8
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %0 to i1 (%"class.icu_69::number::impl::DecimalQuantity"*)***
  %6 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)**, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %6, i64 3
  %8 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.icu_69::number::impl::DecimalQuantity"* %0) #17
  br i1 %9, label %56, label %10

10:                                               ; preds = %1
  %11 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)**, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*** %5, align 8
  %12 = getelementptr inbounds i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %11, i64 4
  %13 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.icu_69::number::impl::DecimalQuantity"* %0) #17
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %17 = load i8, i8* %16, align 4
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, double 0x7FF0000000000000, double 0xFFF0000000000000
  br label %56

21:                                               ; preds = %10
  %22 = bitcast %"class.icu_69::double_conversion::StringToDoubleConverter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.icu_69::double_conversion::StringToDoubleConverter", %"class.icu_69::double_conversion::StringToDoubleConverter"* %2, i64 0, i32 2
  %24 = bitcast %"class.icu_69::double_conversion::StringToDoubleConverter"* %2 to i64*
  store i64 -6148914694099828736, i64* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::double_conversion::StringToDoubleConverter", %"class.icu_69::double_conversion::StringToDoubleConverter"* %2, i64 0, i32 4
  %26 = getelementptr inbounds %"class.icu_69::double_conversion::StringToDoubleConverter", %"class.icu_69::double_conversion::StringToDoubleConverter"* %2, i64 0, i32 6
  %27 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 -86, i64 24, i1 false)
  %28 = bitcast double* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  %29 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %29, align 8
  store i16 0, i16* %26, align 8
  %30 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 64, i1 false)
  call void @_ZNK6icu_696number4impl15DecimalQuantity18toScientificStringEv(%"class.icu_69::UnicodeString"* nonnull sret %3, %"class.icu_69::number::impl::DecimalQuantity"* %0)
  %31 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #17
  store i32 -1431655766, i32* %4, align 4
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1
  %33 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %32, i64 0, i32 0, i32 0
  %34 = load i16, i16* %33, align 8
  %35 = sext i16 %34 to i32
  %36 = and i32 %35, 17
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %21
  %39 = and i32 %35, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %32 to %struct.anon.0*
  %43 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %42, i64 0, i32 1, i64 0
  br label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 3
  %46 = load i16*, i16** %45, align 8
  br label %47

47:                                               ; preds = %21, %41, %44
  %48 = phi i16* [ %43, %41 ], [ %46, %44 ], [ null, %21 ]
  %49 = icmp slt i16 %34, 0
  %50 = lshr i16 %34, 5
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = select i1 %49, i32 %53, i32 %51
  %55 = call double @_ZNK6icu_6917double_conversion23StringToDoubleConverter14StringToDoubleEPKtiPi(%"class.icu_69::double_conversion::StringToDoubleConverter"* nonnull %2, i16* %48, i32 %54, i32* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #17
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #17
  br label %56

56:                                               ; preds = %1, %47, %15
  %57 = phi double [ %20, %15 ], [ %55, %47 ], [ 0x7FF8000000000000, %1 ]
  ret double %57
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity14adjustExponentEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, %1
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity15hasIntegerValueEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, -1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_696number4impl15DecimalQuantity24getUpperDisplayMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, %3
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, %6
  %10 = select i1 %9, i32 %8, i32 %6
  %11 = add nsw i32 %10, -1
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_696number4impl15DecimalQuantity24getLowerDisplayMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, %3
  %7 = select i1 %6, i32 %5, i32 %3
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_696number4impl15DecimalQuantity8getDigitEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly, i32) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = sub nsw i32 %1, %4
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = icmp slt i32 %5, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, %5
  br i1 %14, label %15, label %32

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %5 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = load i8, i8* %19, align 1
  br label %32

21:                                               ; preds = %2
  %22 = icmp ugt i32 %5, 15
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %25 = bitcast %union.anon* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = shl nsw i32 %5, 2
  %28 = zext i32 %27 to i64
  %29 = lshr i64 %26, %28
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 15
  br label %32

32:                                               ; preds = %9, %11, %15, %21, %23
  %33 = phi i8 [ %20, %15 ], [ %31, %23 ], [ 0, %11 ], [ 0, %9 ], [ 0, %21 ]
  ret i8 %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_696number4impl15DecimalQuantity11getDigitPosEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly, i32) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = icmp slt i32 %1, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %12, label %29

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = load i8, i8* %16, align 1
  br label %29

18:                                               ; preds = %2
  %19 = icmp ugt i32 %1, 15
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %22 = bitcast %union.anon* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = shl nsw i32 %1, 2
  %25 = zext i32 %24 to i64
  %26 = lshr i64 %23, %25
  %27 = trunc i64 %26 to i8
  %28 = and i8 %27, 15
  br label %29

29:                                               ; preds = %18, %6, %8, %20, %12
  %30 = phi i8 [ %17, %12 ], [ %28, %20 ], [ 0, %8 ], [ 0, %6 ], [ 0, %18 ]
  ret i8 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_696number4impl15DecimalQuantity6signumEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 3, i32 0
  br label %26

11:                                               ; preds = %1
  %12 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %0 to i1 (%"class.icu_69::number::impl::DecimalQuantity"*)***
  %13 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)**, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %13, i64 4
  %15 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.icu_69::number::impl::DecimalQuantity"* %0) #17
  %17 = xor i1 %16, true
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %19 = load i8, i8* %18, align 4
  %20 = and i8 %19, 1
  %21 = icmp ne i8 %20, 0
  %22 = and i1 %21, %17
  br i1 %22, label %26, label %23

23:                                               ; preds = %11
  %24 = select i1 %21, i32 0, i32 3
  %25 = select i1 %16, i32 %24, i32 2
  ret i32 %25

26:                                               ; preds = %11, %5
  %27 = phi i32 [ %10, %5 ], [ 1, %11 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity10isInfiniteEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 2
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity5isNaNEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 4
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity8setToIntEi(%"class.icu_69::number::impl::DecimalQuantity"* returned, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  store i8* null, i8** %7, align 8
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %11 = bitcast %union.anon* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %18 = icmp eq i32 %1, -2147483648
  %19 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 10, i1 false)
  br i1 %18, label %20, label %21

20:                                               ; preds = %9
  store i8 1, i8* %17, align 4
  br label %29

21:                                               ; preds = %9
  %22 = icmp slt i32 %1, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  store i8 1, i8* %17, align 4
  %24 = sub nsw i32 0, %1
  br label %27

25:                                               ; preds = %21
  %26 = icmp eq i32 %1, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %23, %25
  %28 = phi i32 [ %1, %25 ], [ %24, %23 ]
  switch i32 %28, label %30 [
    i32 -2147483648, label %29
    i32 0, label %43
  ]

29:                                               ; preds = %20, %27
  store i64 142929835592, i64* %11, align 8
  store i32 0, i32* %12, align 4
  br label %50

30:                                               ; preds = %27, %30
  %31 = phi i32 [ %40, %30 ], [ 16, %27 ]
  %32 = phi i64 [ %38, %30 ], [ 0, %27 ]
  %33 = phi i32 [ %39, %30 ], [ %28, %27 ]
  %34 = lshr i64 %32, 4
  %35 = sext i32 %33 to i64
  %36 = urem i64 %35, 10
  %37 = shl nuw i64 %36, 60
  %38 = or i64 %37, %34
  %39 = sdiv i32 %33, 10
  %40 = add nsw i32 %31, -1
  %41 = add i32 %33, 9
  %42 = icmp ult i32 %41, 19
  br i1 %42, label %43, label %30

43:                                               ; preds = %30, %27
  %44 = phi i64 [ 0, %27 ], [ %38, %30 ]
  %45 = phi i32 [ 16, %27 ], [ %40, %30 ]
  %46 = shl nsw i32 %45, 2
  %47 = zext i32 %46 to i64
  %48 = lshr i64 %44, %47
  store i64 %48, i64* %11, align 8
  store i32 0, i32* %12, align 4
  %49 = sub nsw i32 16, %45
  br label %50

50:                                               ; preds = %29, %43
  %51 = phi i32 [ %49, %43 ], [ 10, %29 ]
  store i32 %51, i32* %13, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %52

52:                                               ; preds = %25, %50
  ret %"class.icu_69::number::impl::DecimalQuantity"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number4impl15DecimalQuantity9_setToIntEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #10 align 2 {
  switch i32 %1, label %7 [
    i32 -2147483648, label %3
    i32 0, label %20
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %5 = bitcast %union.anon* %4 to i64*
  store i64 142929835592, i64* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 4
  br label %30

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %17, %7 ], [ 16, %2 ]
  %9 = phi i64 [ %15, %7 ], [ 0, %2 ]
  %10 = phi i32 [ %16, %7 ], [ %1, %2 ]
  %11 = lshr i64 %9, 4
  %12 = sext i32 %10 to i64
  %13 = urem i64 %12, 10
  %14 = shl nuw i64 %13, 60
  %15 = or i64 %14, %11
  %16 = sdiv i32 %10, 10
  %17 = add nsw i32 %8, -1
  %18 = add i32 %10, 9
  %19 = icmp ult i32 %18, 19
  br i1 %19, label %20, label %7

20:                                               ; preds = %7, %2
  %21 = phi i64 [ 0, %2 ], [ %15, %7 ]
  %22 = phi i32 [ 16, %2 ], [ %17, %7 ]
  %23 = shl nsw i32 %22, 2
  %24 = zext i32 %23 to i64
  %25 = lshr i64 %21, %24
  %26 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %27 = bitcast %union.anon* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %28, align 4
  %29 = sub nsw i32 16, %22
  br label %30

30:                                               ; preds = %20, %3
  %31 = phi i32 [ %29, %20 ], [ 10, %3 ]
  %32 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 %31, i32* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity13readLongToBcdEl(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i64 %1, 9999999999999999
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %54, label %42

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call noalias i8* @uprv_malloc_69(i64 40) #16
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 40, i32* %13, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 40, i1 false) #17
  br label %26

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, 40
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = tail call noalias i8* @uprv_malloc_69(i64 80) #16
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %16 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %21, i64 %22, i1 false) #17
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  %24 = sub nsw i32 40, %16
  %25 = sext i32 %24 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %25, i1 false) #17
  tail call void @uprv_free_69(i8* %21) #17
  store i8* %19, i8** %20, align 8
  store i32 80, i32* %15, align 8
  br label %26

26:                                               ; preds = %18, %14, %10
  store i8 1, i8* %7, align 8
  %27 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  br label %28

28:                                               ; preds = %26, %28
  %29 = phi i64 [ 0, %26 ], [ %36, %28 ]
  %30 = phi i64 [ %1, %26 ], [ %35, %28 ]
  %31 = srem i64 %30, 10
  %32 = trunc i64 %31 to i8
  %33 = load i8*, i8** %27, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %29
  store i8 %32, i8* %34, align 1
  %35 = sdiv i64 %30, 10
  %36 = add nuw i64 %29, 1
  %37 = add i64 %30, 9
  %38 = icmp ult i64 %37, 19
  br i1 %38, label %39, label %28

39:                                               ; preds = %28
  %40 = trunc i64 %36 to i32
  %41 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %41, align 4
  br label %64

42:                                               ; preds = %4, %42
  %43 = phi i32 [ %51, %42 ], [ 16, %4 ]
  %44 = phi i64 [ %49, %42 ], [ 0, %4 ]
  %45 = phi i64 [ %50, %42 ], [ %1, %4 ]
  %46 = lshr i64 %44, 4
  %47 = srem i64 %45, 10
  %48 = shl i64 %47, 60
  %49 = or i64 %46, %48
  %50 = sdiv i64 %45, 10
  %51 = add nsw i32 %43, -1
  %52 = add nsw i64 %45, 9
  %53 = icmp ult i64 %52, 19
  br i1 %53, label %54, label %42

54:                                               ; preds = %42, %4
  %55 = phi i64 [ 0, %4 ], [ %49, %42 ]
  %56 = phi i32 [ 16, %4 ], [ %51, %42 ]
  %57 = shl nsw i32 %56, 2
  %58 = zext i32 %57 to i64
  %59 = lshr i64 %55, %58
  %60 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %61 = bitcast %union.anon* %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %62, align 4
  %63 = sub nsw i32 16, %56
  br label %64

64:                                               ; preds = %54, %39
  %65 = phi i32 [ %63, %54 ], [ %40, %39 ]
  %66 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 %65, i32* %66, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number4impl15DecimalQuantity12readIntToBcdEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #10 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %17, label %4

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %14, %4 ], [ 16, %2 ]
  %6 = phi i64 [ %12, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %13, %4 ], [ %1, %2 ]
  %8 = lshr i64 %6, 4
  %9 = sext i32 %7 to i64
  %10 = urem i64 %9, 10
  %11 = shl nuw i64 %10, 60
  %12 = or i64 %11, %8
  %13 = sdiv i32 %7, 10
  %14 = add nsw i32 %5, -1
  %15 = add i32 %7, 9
  %16 = icmp ult i32 %15, 19
  br i1 %16, label %17, label %4

17:                                               ; preds = %4, %2
  %18 = phi i64 [ 0, %2 ], [ %12, %4 ]
  %19 = phi i32 [ 16, %2 ], [ %14, %4 ]
  %20 = shl nsw i32 %19, 2
  %21 = zext i32 %20 to i64
  %22 = lshr i64 %18, %21
  %23 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %24 = bitcast %union.anon* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %25, align 4
  %26 = sub nsw i32 16, %19
  %27 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 %26, i32* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity9setToLongEl(%"class.icu_69::number::impl::DecimalQuantity"* returned, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  store i8* null, i8** %7, align 8
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %11 = bitcast %union.anon* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %15, align 4
  %16 = icmp slt i64 %1, 0
  %17 = icmp ne i64 %1, -9223372036854775808
  %18 = and i1 %16, %17
  %19 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 10, i1 false)
  br i1 %18, label %20, label %23

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  store i8 1, i8* %21, align 4
  %22 = sub nsw i64 0, %1
  br label %25

23:                                               ; preds = %9
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %1, %23 ]
  tail call void @_ZN6icu_696number4impl15DecimalQuantity10_setToLongEl(%"class.icu_69::number::impl::DecimalQuantity"* %0, i64 %26)
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %27

27:                                               ; preds = %23, %25
  ret %"class.icu_69::number::impl::DecimalQuantity"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity10_setToLongEl(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::number::impl::DecNum", align 8
  %4 = alloca i32, align 4
  %5 = icmp eq i64 %1, -9223372036854775808
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = bitcast %"class.icu_69::number::impl::DecNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 96, i1 false)
  call void @_ZN6icu_696number4impl6DecNumC1Ev(%"class.icu_69::number::impl::DecNum"* nonnull %3) #17
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  store i32 0, i32* %4, align 4
  call void @_ZN6icu_696number4impl6DecNum5setToEPKcR10UErrorCode(%"class.icu_69::number::impl::DecNum"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32* nonnull dereferenceable(4) %4) #17
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 4
  %14 = or i8 %13, 1
  store i8 %14, i8* %12, align 4
  call void @_ZN6icu_696number4impl15DecimalQuantity18readDecNumberToBcdERKNS1_6DecNumE(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %3)
  br label %15

15:                                               ; preds = %6, %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecNum", %"class.icu_69::number::impl::DecNum"* %3, i64 0, i32 0, i32 2
  %17 = load i8, i8* %16, align 4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.icu_69::number::impl::DecNum"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  call void @uprv_free_69(i8* %21) #17
  br label %22

22:                                               ; preds = %15, %19
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7) #17
  ret void

23:                                               ; preds = %2
  %24 = icmp slt i64 %1, 2147483648
  br i1 %24, label %25, label %52

25:                                               ; preds = %23
  %26 = trunc i64 %1 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %25, %28
  %29 = phi i32 [ %38, %28 ], [ 16, %25 ]
  %30 = phi i64 [ %36, %28 ], [ 0, %25 ]
  %31 = phi i32 [ %37, %28 ], [ %26, %25 ]
  %32 = lshr i64 %30, 4
  %33 = sext i32 %31 to i64
  %34 = urem i64 %33, 10
  %35 = shl nuw i64 %34, 60
  %36 = or i64 %35, %32
  %37 = sdiv i32 %31, 10
  %38 = add nsw i32 %29, -1
  %39 = add i32 %31, 9
  %40 = icmp ult i32 %39, 19
  br i1 %40, label %41, label %28

41:                                               ; preds = %28, %25
  %42 = phi i64 [ 0, %25 ], [ %36, %28 ]
  %43 = phi i32 [ 16, %25 ], [ %38, %28 ]
  %44 = shl nsw i32 %43, 2
  %45 = zext i32 %44 to i64
  %46 = lshr i64 %42, %45
  %47 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %48 = bitcast %union.anon* %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %49, align 4
  %50 = sub nsw i32 16, %43
  %51 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 %50, i32* %51, align 8
  br label %53

52:                                               ; preds = %23
  tail call void @_ZN6icu_696number4impl15DecimalQuantity13readLongToBcdEl(%"class.icu_69::number::impl::DecimalQuantity"* %0, i64 %1)
  br label %53

53:                                               ; preds = %41, %52
  ret void
}

declare void @_ZN6icu_696number4impl6DecNum5setToEPKcR10UErrorCode(%"class.icu_69::number::impl::DecNum"*, i8*, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity18readDecNumberToBcdERKNS1_6DecNumE(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, %"class.icu_69::number::impl::DecNum"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecNum", %"class.icu_69::number::impl::DecNum"* %1, i64 0, i32 0, i32 0
  %4 = load %struct.decNumber*, %struct.decNumber** %3, align 8
  %5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 16
  br i1 %7, label %49, label %8

8:                                                ; preds = %2
  %9 = icmp sgt i32 %6, 0
  br i1 %9, label %10, label %87

10:                                               ; preds = %8
  %11 = zext i32 %6 to i64
  %12 = icmp ult i32 %6, 4
  br i1 %12, label %13, label %16

13:                                               ; preds = %43, %10
  %14 = phi i64 [ 0, %10 ], [ %17, %43 ]
  %15 = phi i64 [ 0, %10 ], [ %47, %43 ]
  br label %91

16:                                               ; preds = %10
  %17 = and i64 %11, 4294967292
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ 0, %16 ], [ %40, %18 ]
  %20 = phi <2 x i64> [ <i64 0, i64 1>, %16 ], [ %41, %18 ]
  %21 = phi <2 x i64> [ zeroinitializer, %16 ], [ %38, %18 ]
  %22 = phi <2 x i64> [ zeroinitializer, %16 ], [ %39, %18 ]
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 3, i64 %19
  %24 = bitcast i8* %23 to <2 x i8>*
  %25 = load <2 x i8>, <2 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %23, i64 2
  %27 = bitcast i8* %26 to <2 x i8>*
  %28 = load <2 x i8>, <2 x i8>* %27, align 1
  %29 = zext <2 x i8> %25 to <2 x i64>
  %30 = zext <2 x i8> %28 to <2 x i64>
  %31 = shl <2 x i64> %20, <i64 2, i64 2>
  %32 = shl <2 x i64> %20, <i64 2, i64 2>
  %33 = add <2 x i64> %32, <i64 8, i64 8>
  %34 = and <2 x i64> %31, <i64 4294967292, i64 4294967292>
  %35 = and <2 x i64> %33, <i64 4294967292, i64 4294967292>
  %36 = shl <2 x i64> %29, %34
  %37 = shl <2 x i64> %30, %35
  %38 = or <2 x i64> %36, %21
  %39 = or <2 x i64> %37, %22
  %40 = add i64 %19, 4
  %41 = add <2 x i64> %20, <i64 4, i64 4>
  %42 = icmp eq i64 %40, %17
  br i1 %42, label %43, label %18, !llvm.loop !3

43:                                               ; preds = %18
  %44 = or <2 x i64> %39, %38
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %46 = or <2 x i64> %44, %45
  %47 = extractelement <2 x i64> %46, i32 0
  %48 = icmp eq i64 %17, %11
  br i1 %48, label %87, label %13

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = sext i32 %6 to i64
  %55 = tail call noalias i8* @uprv_malloc_69(i64 %54) #16
  %56 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %55, i8** %56, align 8
  %57 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 %6, i32* %57, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %55, i8 0, i64 %54, i1 false) #17
  br label %72

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %6, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %58
  %63 = shl nsw i32 %6, 1
  %64 = sext i32 %63 to i64
  %65 = tail call noalias i8* @uprv_malloc_69(i64 %64) #16
  %66 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = sext i32 %60 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %67, i64 %68, i1 false) #17
  %69 = getelementptr inbounds i8, i8* %65, i64 %68
  %70 = sub nsw i32 %6, %60
  %71 = sext i32 %70 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 0, i64 %71, i1 false) #17
  tail call void @uprv_free_69(i8* %67) #17
  store i8* %65, i8** %66, align 8
  store i32 %63, i32* %59, align 8
  br label %72

72:                                               ; preds = %53, %58, %62
  store i8 1, i8* %50, align 8
  %73 = load i32, i32* %5, align 4
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %103

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  br label %77

77:                                               ; preds = %75, %77
  %78 = phi i64 [ 0, %75 ], [ %83, %77 ]
  %79 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 3, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = load i8*, i8** %76, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %78
  store i8 %80, i8* %82, align 1
  %83 = add nuw nsw i64 %78, 1
  %84 = load i32, i32* %5, align 4
  %85 = sext i32 %84 to i64
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %77, label %103

87:                                               ; preds = %91, %43, %8
  %88 = phi i64 [ 0, %8 ], [ %47, %43 ], [ %100, %91 ]
  %89 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %90 = bitcast %union.anon* %89 to i64*
  store i64 %88, i64* %90, align 8
  br label %103

91:                                               ; preds = %13, %91
  %92 = phi i64 [ %101, %91 ], [ %14, %13 ]
  %93 = phi i64 [ %100, %91 ], [ %15, %13 ]
  %94 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 3, i64 %92
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = shl i64 %92, 2
  %98 = and i64 %97, 4294967292
  %99 = shl i64 %96, %98
  %100 = or i64 %99, %93
  %101 = add nuw nsw i64 %92, 1
  %102 = icmp eq i64 %101, %11
  br i1 %102, label %87, label %91, !llvm.loop !5

103:                                              ; preds = %77, %72, %87
  %104 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 %105, i32* %106, align 4
  %107 = load i32, i32* %5, align 4
  %108 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 %107, i32* %108, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity11setToDoubleEd(%"class.icu_69::number::impl::DecimalQuantity"* returned, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #17
  store i8* null, i8** %7, align 8
  store i8 0, i8* %3, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %11 = bitcast %union.anon* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %17 = bitcast double %1 to i64
  %18 = icmp slt i64 %17, 0
  %19 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 10, i1 false)
  br i1 %18, label %20, label %22

20:                                               ; preds = %9
  store i8 1, i8* %16, align 4
  %21 = fsub double -0.000000e+00, %1
  br label %22

22:                                               ; preds = %20, %9
  %23 = phi i8 [ 1, %20 ], [ 0, %9 ]
  %24 = phi double [ %21, %20 ], [ %1, %9 ]
  %25 = fcmp uno double %24, 0.000000e+00
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = or i8 %23, 4
  store i8 %27, i8* %16, align 4
  br label %36

28:                                               ; preds = %22
  %29 = tail call double @llvm.fabs.f64(double %24) #19
  %30 = fcmp ueq double %29, 0x7FF0000000000000
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = or i8 %23, 2
  store i8 %32, i8* %16, align 4
  br label %36

33:                                               ; preds = %28
  %34 = fcmp une double %24, 0.000000e+00
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16_setToDoubleFastEd(%"class.icu_69::number::impl::DecimalQuantity"* %0, double %24)
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %36

36:                                               ; preds = %31, %35, %33, %26
  ret %"class.icu_69::number::impl::DecimalQuantity"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity16_setToDoubleFastEd(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = bitcast double %1 to i64
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double %1, double* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %6, align 8
  %7 = lshr i64 %3, 52
  %8 = trunc i64 %7 to i32
  %9 = and i32 %8, 2047
  %10 = add nsw i32 %9, -1023
  %11 = icmp slt i32 %10, 53
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = fptosi double %1 to i64
  %14 = sitofp i64 %13 to double
  %15 = fcmp oeq double %14, %1
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @_ZN6icu_696number4impl15DecimalQuantity10_setToLongEl(%"class.icu_69::number::impl::DecimalQuantity"* %0, i64 %13)
  br label %68

17:                                               ; preds = %12, %2
  %18 = icmp eq i32 %9, 0
  %19 = icmp eq i32 %10, 1024
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN6icu_696number4impl15DecimalQuantity23convertToAccurateDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %68

22:                                               ; preds = %17
  %23 = sub nsw i32 1075, %9
  %24 = sitofp i32 %23 to double
  %25 = fdiv double %24, 0x400A934F0979A371
  %26 = fptosi double %25 to i32
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = icmp slt i32 %26, -21
  br i1 %29, label %45, label %51

30:                                               ; preds = %22
  %31 = icmp sgt i32 %26, 21
  br i1 %31, label %32, label %38

32:                                               ; preds = %30, %32
  %33 = phi i32 [ %36, %32 ], [ %26, %30 ]
  %34 = phi double [ %35, %32 ], [ %1, %30 ]
  %35 = fmul double %34, 1.000000e+22
  %36 = add nsw i32 %33, -22
  %37 = icmp sgt i32 %36, 21
  br i1 %37, label %32, label %38

38:                                               ; preds = %32, %30
  %39 = phi double [ %1, %30 ], [ %35, %32 ]
  %40 = phi i32 [ %26, %30 ], [ %36, %32 ]
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [22 x double], [22 x double]* @_ZN12_GLOBAL__N_118DOUBLE_MULTIPLIERSE, i64 0, i64 %41
  %43 = load double, double* %42, align 8
  %44 = fmul double %39, %43
  br label %59

45:                                               ; preds = %28, %45
  %46 = phi i32 [ %49, %45 ], [ %26, %28 ]
  %47 = phi double [ %48, %45 ], [ %1, %28 ]
  %48 = fdiv double %47, 1.000000e+22
  %49 = add nsw i32 %46, 22
  %50 = icmp slt i32 %49, -21
  br i1 %50, label %45, label %51

51:                                               ; preds = %45, %28
  %52 = phi double [ %1, %28 ], [ %48, %45 ]
  %53 = phi i32 [ %26, %28 ], [ %49, %45 ]
  %54 = sub nsw i32 0, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [22 x double], [22 x double]* @_ZN12_GLOBAL__N_118DOUBLE_MULTIPLIERSE, i64 0, i64 %55
  %57 = load double, double* %56, align 8
  %58 = fdiv double %52, %57
  br label %59

59:                                               ; preds = %51, %38
  %60 = phi double [ %44, %38 ], [ %58, %51 ]
  %61 = tail call double @uprv_round_69(double %60) #17
  %62 = fptosi double %61 to i64
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  tail call void @_ZN6icu_696number4impl15DecimalQuantity10_setToLongEl(%"class.icu_69::number::impl::DecimalQuantity"* %0, i64 %62)
  %65 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = sub nsw i32 %66, %26
  store i32 %67, i32* %65, align 4
  br label %68

68:                                               ; preds = %64, %59, %21, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity23convertToAccurateDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca [18 x i8], align 16
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds [18 x i8], [18 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 18, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 -86, i8* %3, align 1
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17
  store i32 -1431655766, i32* %4, align 4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #17
  store i32 -1431655766, i32* %5, align 4
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  %12 = load double, double* %11, align 8
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %12, i32 0, i32 0, i8* nonnull %8, i32 18, i8* nonnull %3, i32* nonnull %4, i32* nonnull %5) #17
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @uprv_free_69(i8* %18) #17
  store i8* null, i8** %17, align 8
  store i8 0, i8* %13, align 8
  br label %19

19:                                               ; preds = %1, %16
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %21 = bitcast %union.anon* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  store i8 0, i8* %24, align 1
  store double 0.000000e+00, double* %11, align 8
  store i32 0, i32* %6, align 8
  %25 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %25, align 4
  %26 = load i32, i32* %4, align 4
  %27 = load i32, i32* %5, align 4
  call void @_ZN6icu_696number4impl15DecimalQuantity25readDoubleConversionToBcdEPKcii(%"class.icu_69::number::impl::DecimalQuantity"* %0, i8* nonnull %8, i32 %26, i32 %27)
  %28 = load i32, i32* %22, align 4
  %29 = add nsw i32 %28, %7
  store i32 %29, i32* %22, align 4
  %30 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 15
  store i8 1, i8* %30, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %8) #17
  ret void
}

declare double @uprv_round_69(double) local_unnamed_addr #4

declare void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double, i32, i32, i8*, i32, i8*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity25readDoubleConversionToBcdEPKcii(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %2, 16
  br i1 %5, label %91, label %6

6:                                                ; preds = %4
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %146

8:                                                ; preds = %6
  %9 = zext i32 %2 to i64
  %10 = icmp ult i32 %2, 4
  br i1 %10, label %11, label %39

11:                                               ; preds = %85, %39, %8
  %12 = phi i64 [ 0, %39 ], [ 0, %8 ], [ %48, %85 ]
  %13 = phi i32 [ 0, %39 ], [ 0, %8 ], [ %49, %85 ]
  %14 = phi i64 [ 0, %39 ], [ 0, %8 ], [ %89, %85 ]
  %15 = xor i64 %12, -1
  %16 = and i64 %9, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %11
  %19 = xor i32 %13, -1
  %20 = add i32 %19, %2
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %1, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i64
  %25 = add nsw i64 %24, -48
  %26 = shl nuw nsw i64 %12, 2
  %27 = and i64 %26, 4294967280
  %28 = shl i64 %25, %27
  %29 = or i64 %28, %14
  %30 = or i64 %12, 1
  %31 = add nuw nsw i32 %13, 1
  br label %32

32:                                               ; preds = %11, %18
  %33 = phi i64 [ undef, %11 ], [ %29, %18 ]
  %34 = phi i64 [ %12, %11 ], [ %30, %18 ]
  %35 = phi i32 [ %13, %11 ], [ %31, %18 ]
  %36 = phi i64 [ %14, %11 ], [ %29, %18 ]
  %37 = sub nsw i64 0, %9
  %38 = icmp eq i64 %15, %37
  br i1 %38, label %146, label %150

39:                                               ; preds = %8
  %40 = add nsw i64 %9, -1
  %41 = add i32 %2, -1
  %42 = trunc i64 %40 to i32
  %43 = sub i32 %41, %42
  %44 = icmp sgt i32 %43, %41
  %45 = icmp ugt i64 %40, 4294967295
  %46 = or i1 %44, %45
  br i1 %46, label %11, label %47

47:                                               ; preds = %39
  %48 = and i64 %9, 4294967292
  %49 = trunc i64 %48 to i32
  br label %50

50:                                               ; preds = %50, %47
  %51 = phi i64 [ 0, %47 ], [ %82, %50 ]
  %52 = phi <2 x i64> [ <i64 0, i64 1>, %47 ], [ %83, %50 ]
  %53 = phi <2 x i64> [ zeroinitializer, %47 ], [ %80, %50 ]
  %54 = phi <2 x i64> [ zeroinitializer, %47 ], [ %81, %50 ]
  %55 = trunc i64 %51 to i32
  %56 = xor i32 %55, -1
  %57 = add i32 %56, %2
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %1, i64 %58
  %60 = getelementptr inbounds i8, i8* %59, i64 -1
  %61 = bitcast i8* %60 to <2 x i8>*
  %62 = load <2 x i8>, <2 x i8>* %61, align 1
  %63 = shufflevector <2 x i8> %62, <2 x i8> undef, <2 x i32> <i32 1, i32 0>
  %64 = getelementptr inbounds i8, i8* %59, i64 -2
  %65 = getelementptr inbounds i8, i8* %64, i64 -1
  %66 = bitcast i8* %65 to <2 x i8>*
  %67 = load <2 x i8>, <2 x i8>* %66, align 1
  %68 = shufflevector <2 x i8> %67, <2 x i8> undef, <2 x i32> <i32 1, i32 0>
  %69 = sext <2 x i8> %63 to <2 x i64>
  %70 = sext <2 x i8> %68 to <2 x i64>
  %71 = add nsw <2 x i64> %69, <i64 -48, i64 -48>
  %72 = add nsw <2 x i64> %70, <i64 -48, i64 -48>
  %73 = shl <2 x i64> %52, <i64 2, i64 2>
  %74 = shl <2 x i64> %52, <i64 2, i64 2>
  %75 = add <2 x i64> %74, <i64 8, i64 8>
  %76 = and <2 x i64> %73, <i64 4294967292, i64 4294967292>
  %77 = and <2 x i64> %75, <i64 4294967292, i64 4294967292>
  %78 = shl <2 x i64> %71, %76
  %79 = shl <2 x i64> %72, %77
  %80 = or <2 x i64> %78, %53
  %81 = or <2 x i64> %79, %54
  %82 = add i64 %51, 4
  %83 = add <2 x i64> %52, <i64 4, i64 4>
  %84 = icmp eq i64 %82, %48
  br i1 %84, label %85, label %50, !llvm.loop !7

85:                                               ; preds = %50
  %86 = or <2 x i64> %81, %80
  %87 = shufflevector <2 x i64> %86, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %88 = or <2 x i64> %86, %87
  %89 = extractelement <2 x i64> %88, i32 0
  %90 = icmp eq i64 %48, %9
  br i1 %90, label %146, label %11

91:                                               ; preds = %4
  %92 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %100

95:                                               ; preds = %91
  %96 = sext i32 %2 to i64
  %97 = tail call noalias i8* @uprv_malloc_69(i64 %96) #16
  %98 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %97, i8** %98, align 8
  %99 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 %2, i32* %99, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %97, i8 0, i64 %96, i1 false) #17
  br label %114

100:                                              ; preds = %91
  %101 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp slt i32 %102, %2
  br i1 %103, label %104, label %114

104:                                              ; preds = %100
  %105 = shl nsw i32 %2, 1
  %106 = sext i32 %105 to i64
  %107 = tail call noalias i8* @uprv_malloc_69(i64 %106) #16
  %108 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = sext i32 %102 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %109, i64 %110, i1 false) #17
  %111 = getelementptr inbounds i8, i8* %107, i64 %110
  %112 = sub nsw i32 %2, %102
  %113 = sext i32 %112 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %111, i8 0, i64 %113, i1 false) #17
  tail call void @uprv_free_69(i8* %109) #17
  store i8* %107, i8** %108, align 8
  store i32 %105, i32* %101, align 8
  br label %114

114:                                              ; preds = %104, %100, %95
  store i8 1, i8* %92, align 8
  %115 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %116 = zext i32 %2 to i64
  %117 = and i64 %116, 1
  %118 = icmp eq i32 %2, 1
  br i1 %118, label %182, label %119

119:                                              ; preds = %114
  %120 = sub nsw i64 %116, %117
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i64 [ 0, %119 ], [ %142, %121 ]
  %123 = phi i32 [ 0, %119 ], [ %143, %121 ]
  %124 = phi i64 [ %120, %119 ], [ %144, %121 ]
  %125 = xor i32 %123, -1
  %126 = add i32 %125, %2
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %1, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = add i8 %129, -48
  %131 = load i8*, i8** %115, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 %122
  store i8 %130, i8* %132, align 1
  %133 = or i64 %122, 1
  %134 = sub nuw nsw i32 -2, %123
  %135 = add i32 %134, %2
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %1, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = add i8 %138, -48
  %140 = load i8*, i8** %115, align 8
  %141 = getelementptr inbounds i8, i8* %140, i64 %133
  store i8 %139, i8* %141, align 1
  %142 = add nuw nsw i64 %122, 2
  %143 = add nuw nsw i32 %123, 2
  %144 = add i64 %124, -2
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %180, label %121

146:                                              ; preds = %32, %150, %85, %6
  %147 = phi i64 [ 0, %6 ], [ %89, %85 ], [ %33, %32 ], [ %176, %150 ]
  %148 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %149 = bitcast %union.anon* %148 to i64*
  store i64 %147, i64* %149, align 8
  br label %194

150:                                              ; preds = %32, %150
  %151 = phi i64 [ %177, %150 ], [ %34, %32 ]
  %152 = phi i32 [ %178, %150 ], [ %35, %32 ]
  %153 = phi i64 [ %176, %150 ], [ %36, %32 ]
  %154 = xor i32 %152, -1
  %155 = add i32 %154, %2
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %1, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = sext i8 %158 to i64
  %160 = add nsw i64 %159, -48
  %161 = shl i64 %151, 2
  %162 = and i64 %161, 4294967292
  %163 = shl i64 %160, %162
  %164 = or i64 %163, %153
  %165 = sub i32 -2, %152
  %166 = add i32 %165, %2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %1, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i64
  %171 = add nsw i64 %170, -48
  %172 = shl i64 %151, 2
  %173 = add i64 %172, 4
  %174 = and i64 %173, 4294967292
  %175 = shl i64 %171, %174
  %176 = or i64 %175, %164
  %177 = add nuw nsw i64 %151, 2
  %178 = add nuw nsw i32 %152, 2
  %179 = icmp eq i64 %177, %9
  br i1 %179, label %146, label %150, !llvm.loop !8

180:                                              ; preds = %121
  %181 = sub nuw i32 -3, %123
  br label %182

182:                                              ; preds = %180, %114
  %183 = phi i64 [ 0, %114 ], [ %142, %180 ]
  %184 = phi i32 [ -1, %114 ], [ %181, %180 ]
  %185 = icmp eq i64 %117, 0
  br i1 %185, label %194, label %186

186:                                              ; preds = %182
  %187 = add i32 %184, %2
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i8, i8* %1, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = add i8 %190, -48
  %192 = load i8*, i8** %115, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 %183
  store i8 %191, i8* %193, align 1
  br label %194

194:                                              ; preds = %186, %182, %146
  %195 = sub nsw i32 %3, %2
  %196 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  store i32 %195, i32* %196, align 4
  %197 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  store i32 %2, i32* %197, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity14setToDecNumberENS_11StringPieceER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* returned, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::number::impl::DecNum", align 8
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @uprv_free_69(i8* %11) #17
  store i8* null, i8** %10, align 8
  store i8 0, i8* %6, align 8
  br label %12

12:                                               ; preds = %4, %9
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %14 = bitcast %union.anon* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %20 = bitcast %"class.icu_69::number::impl::DecNum"* %5 to i8*
  %21 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 10, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %20) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 96, i1 false)
  call void @_ZN6icu_696number4impl6DecNumC1Ev(%"class.icu_69::number::impl::DecNum"* nonnull %5) #17
  call void @_ZN6icu_696number4impl6DecNum5setToENS_11StringPieceER10UErrorCode(%"class.icu_69::number::impl::DecNum"* nonnull %5, i8* %1, i32 %2, i32* dereferenceable(4) %3) #17
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %32

24:                                               ; preds = %12
  %25 = call zeroext i1 @_ZNK6icu_696number4impl6DecNum10isNegativeEv(%"class.icu_69::number::impl::DecNum"* nonnull %5) #17
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = load i8, i8* %19, align 4
  %28 = or i8 %27, 1
  store i8 %28, i8* %19, align 4
  br label %29

29:                                               ; preds = %26, %24
  %30 = call zeroext i1 @_ZNK6icu_696number4impl6DecNum6isZeroEv(%"class.icu_69::number::impl::DecNum"* nonnull %5) #17
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  call void @_ZN6icu_696number4impl15DecimalQuantity18readDecNumberToBcdERKNS1_6DecNumE(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* nonnull dereferenceable(96) %5) #17
  call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0) #17
  br label %32

32:                                               ; preds = %12, %29, %31
  %33 = getelementptr inbounds %"class.icu_69::number::impl::DecNum", %"class.icu_69::number::impl::DecNum"* %5, i64 0, i32 0, i32 2
  %34 = load i8, i8* %33, align 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.icu_69::number::impl::DecNum"* %5 to i8**
  %38 = load i8*, i8** %37, align 8
  call void @uprv_free_69(i8* %38) #17
  br label %39

39:                                               ; preds = %32, %36
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %20) #17
  ret %"class.icu_69::number::impl::DecimalQuantity"* %0
}

declare void @_ZN6icu_696number4impl6DecNum5setToENS_11StringPieceER10UErrorCode(%"class.icu_69::number::impl::DecNum"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity12_setToDecNumERKNS1_6DecNumER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, %"class.icu_69::number::impl::DecNum"* dereferenceable(96), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK6icu_696number4impl6DecNum10isNegativeEv(%"class.icu_69::number::impl::DecNum"* %1) #17
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 4
  %11 = or i8 %10, 1
  store i8 %11, i8* %9, align 4
  br label %12

12:                                               ; preds = %8, %6
  %13 = tail call zeroext i1 @_ZNK6icu_696number4impl6DecNum6isZeroEv(%"class.icu_69::number::impl::DecNum"* %1) #17
  br i1 %13, label %15, label %14

14:                                               ; preds = %12
  tail call void @_ZN6icu_696number4impl15DecimalQuantity18readDecNumberToBcdERKNS1_6DecNumE(%"class.icu_69::number::impl::DecimalQuantity"* %0, %"class.icu_69::number::impl::DecNum"* dereferenceable(96) %1)
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %15

15:                                               ; preds = %3, %14, %12
  ret void
}

declare zeroext i1 @_ZNK6icu_696number4impl6DecNum10isNegativeEv(%"class.icu_69::number::impl::DecNum"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK6icu_696number4impl6DecNum6isZeroEv(%"class.icu_69::number::impl::DecNum"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity10fitsInLongEb(%"class.icu_69::number::impl::DecimalQuantity"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %0 to i1 (%"class.icu_69::number::impl::DecimalQuantity"*)***
  %4 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)**, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %4, i64 4
  %6 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.icu_69::number::impl::DecimalQuantity"* %0) #17
  br i1 %7, label %79, label %8

8:                                                ; preds = %2
  %9 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)**, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*** %3, align 8
  %10 = getelementptr inbounds i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %9, i64 3
  %11 = load i1 (%"class.icu_69::number::impl::DecimalQuantity"*)*, i1 (%"class.icu_69::number::impl::DecimalQuantity"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.icu_69::number::impl::DecimalQuantity"* %0) #17
  br i1 %12, label %79, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %79, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, %19
  %23 = icmp sgt i32 %22, -1
  %24 = or i1 %23, %1
  br i1 %24, label %25, label %79

25:                                               ; preds = %17
  %26 = add i32 %15, -1
  %27 = add i32 %26, %21
  %28 = icmp slt i32 %27, 18
  br i1 %28, label %79, label %29

29:                                               ; preds = %25
  %30 = icmp eq i32 %27, 18
  br i1 %30, label %31, label %79

31:                                               ; preds = %29
  %32 = icmp sgt i32 %15, 0
  br i1 %32, label %33, label %74

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %39 = bitcast %union.anon* %38 to i64*
  %40 = zext i32 %15 to i64
  br label %43

41:                                               ; preds = %71
  %42 = icmp eq i64 %73, %40
  br i1 %42, label %74, label %43

43:                                               ; preds = %41, %33
  %44 = phi i64 [ 0, %33 ], [ %73, %41 ]
  %45 = trunc i64 %44 to i32
  %46 = sub i32 18, %45
  %47 = sub i32 %46, %21
  br i1 %36, label %57, label %48

48:                                               ; preds = %43
  %49 = icmp sgt i32 %47, -1
  %50 = icmp sgt i32 %15, %47
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %66

52:                                               ; preds = %48
  %53 = load i8*, i8** %37, align 8
  %54 = sext i32 %47 to i64
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = load i8, i8* %55, align 1
  br label %66

57:                                               ; preds = %43
  %58 = icmp ugt i32 %47, 15
  br i1 %58, label %66, label %59

59:                                               ; preds = %57
  %60 = load i64, i64* %39, align 8
  %61 = shl nsw i32 %47, 2
  %62 = zext i32 %61 to i64
  %63 = lshr i64 %60, %62
  %64 = trunc i64 %63 to i8
  %65 = and i8 %64, 15
  br label %66

66:                                               ; preds = %48, %52, %57, %59
  %67 = phi i8 [ %56, %52 ], [ %65, %59 ], [ 0, %48 ], [ 0, %57 ]
  %68 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZZNK6icu_696number4impl15DecimalQuantity10fitsInLongEbE9INT64_BCD, i64 0, i64 %44
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %67, %69
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp sgt i8 %67, %69
  %73 = add nuw nsw i64 %44, 1
  br i1 %72, label %79, label %41

74:                                               ; preds = %41, %31
  %75 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %76 = load i8, i8* %75, align 4
  %77 = and i8 %76, 1
  %78 = icmp ne i8 %77, 0
  br label %79

79:                                               ; preds = %71, %66, %74, %25, %29, %17, %13, %2, %8
  %80 = phi i1 [ false, %8 ], [ false, %2 ], [ true, %13 ], [ false, %17 ], [ %78, %74 ], [ true, %25 ], [ false, %29 ], [ false, %71 ], [ true, %66 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number4impl15DecimalQuantity18toScientificStringEv(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 64, i1 false)
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 5
  %14 = load i8, i8* %13, align 4
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18)
  store i16 45, i16* %7, align 2
  %19 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %7, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18)
  br label %20

20:                                               ; preds = %2, %17
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.3, i64 0, i64 0), i32 0, i32 -1) #17
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.3, i64 0, i64 0)) #17, !srcloc !9
  br label %148

26:                                               ; preds = %20
  %27 = add nsw i32 %22, -1
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %26
  %32 = icmp slt i32 %22, 1
  br i1 %32, label %50, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = sext i32 %27 to i64
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = load i8, i8* %37, align 1
  br label %50

39:                                               ; preds = %26
  %40 = icmp ugt i32 %27, 15
  br i1 %40, label %50, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %43 = bitcast %union.anon* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = shl nsw i32 %27, 2
  %46 = zext i32 %45 to i64
  %47 = lshr i64 %44, %46
  %48 = trunc i64 %47 to i8
  %49 = and i8 %48, 15
  br label %50

50:                                               ; preds = %31, %33, %39, %41
  %51 = phi i8 [ %38, %33 ], [ %49, %41 ], [ 0, %31 ], [ 0, %39 ]
  %52 = sext i8 %51 to i32
  %53 = add nsw i32 %52, 48
  %54 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %53) #17
  %55 = add i32 %22, -2
  %56 = icmp sgt i32 %55, -1
  br i1 %56, label %57, label %92

57:                                               ; preds = %50
  %58 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %58)
  store i16 46, i16* %4, align 2
  %59 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %4, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %58)
  %60 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %61 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %62 = bitcast %union.anon* %61 to i64*
  %63 = zext i32 %55 to i64
  br label %64

64:                                               ; preds = %57, %85
  %65 = phi i64 [ %63, %57 ], [ %91, %85 ]
  %66 = load i8, i8* %28, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %64
  %69 = load i32, i32* %21, align 8
  %70 = sext i32 %69 to i64
  %71 = icmp slt i64 %65, %70
  br i1 %71, label %72, label %85

72:                                               ; preds = %68
  %73 = load i8*, i8** %60, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %65
  %75 = load i8, i8* %74, align 1
  br label %85

76:                                               ; preds = %64
  %77 = icmp ugt i64 %65, 15
  br i1 %77, label %85, label %78

78:                                               ; preds = %76
  %79 = load i64, i64* %62, align 8
  %80 = shl i64 %65, 2
  %81 = and i64 %80, 4294967292
  %82 = lshr i64 %79, %81
  %83 = trunc i64 %82 to i8
  %84 = and i8 %83, 15
  br label %85

85:                                               ; preds = %68, %72, %76, %78
  %86 = phi i8 [ %75, %72 ], [ %84, %78 ], [ 0, %68 ], [ 0, %76 ]
  %87 = sext i8 %86 to i32
  %88 = add nsw i32 %87, 48
  %89 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %88) #17
  %90 = icmp sgt i64 %65, 0
  %91 = add nsw i64 %65, -1
  br i1 %90, label %64, label %92

92:                                               ; preds = %85, %50
  %93 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %93)
  store i16 69, i16* %3, align 2
  %94 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %3, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %93)
  %95 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = add nsw i32 %96, %27
  %98 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 12
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %97, %99
  %101 = icmp eq i32 %100, -2147483648
  br i1 %101, label %102, label %113

102:                                              ; preds = %92
  %103 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %103) #17
  call void @_ZN6icu_6913UnicodeStringC1EPKDsi(%"class.icu_69::UnicodeString"* nonnull %9, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @.str.4, i64 0, i64 0), i32 -1) #17
  %104 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 0
  %105 = load i16, i16* %104, align 8
  %106 = icmp slt i16 %105, 0
  %107 = lshr i16 %105, 5
  %108 = zext i16 %107 to i32
  %109 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = select i1 %106, i32 %110, i32 %108
  %112 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, i32 0, i32 %111) #17
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %103) #17
  br label %148

113:                                              ; preds = %92
  %114 = icmp slt i32 %100, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = sub nsw i32 0, %100
  %117 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %117)
  store i16 45, i16* %5, align 2
  br label %124

118:                                              ; preds = %113
  %119 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %119)
  store i16 43, i16* %6, align 2
  %120 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %6, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %119)
  %121 = icmp eq i32 %100, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %118
  %123 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %123)
  store i16 48, i16* %8, align 2
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i16* [ %5, %115 ], [ %8, %122 ]
  %126 = phi i8* [ %117, %115 ], [ %123, %122 ]
  %127 = phi i32 [ %116, %115 ], [ 0, %122 ]
  %128 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %125, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %126)
  br label %129

129:                                              ; preds = %124, %118
  %130 = phi i32 [ %100, %118 ], [ %127, %124 ]
  %131 = load i16, i16* %12, align 8
  %132 = icmp slt i16 %131, 0
  %133 = lshr i16 %131, 5
  %134 = zext i16 %133 to i32
  %135 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = select i1 %132, i32 %136, i32 %134
  %138 = icmp sgt i32 %130, 0
  br i1 %138, label %139, label %148

139:                                              ; preds = %129, %139
  %140 = phi i32 [ %142, %139 ], [ %130, %129 ]
  %141 = call i64 @div(i32 %140, i32 10) #19
  %142 = trunc i64 %141 to i32
  %143 = lshr i64 %141, 32
  %144 = trunc i64 %143 to i32
  %145 = add nsw i32 %144, 48
  %146 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString7replaceEiii(%"class.icu_69::UnicodeString"* %0, i32 %137, i32 0, i32 %145) #17
  %147 = icmp sgt i32 %142, 0
  br i1 %147, label %139, label %148

148:                                              ; preds = %139, %129, %24, %102
  ret void
}

declare double @_ZNK6icu_6917double_conversion23StringToDoubleConverter14StringToDoubleEPKtiPi(%"class.icu_69::double_conversion::StringToDoubleConverter"*, i16*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #8

declare void @_ZN6icu_696number4impl6DecNum5setToEPKhiibR10UErrorCode(%"class.icu_69::number::impl::DecNum"*, i8*, i32, i32, i1 zeroext, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity8truncateEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %59

5:                                                ; preds = %1
  %6 = sub nsw i32 0, %3
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, %6
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %16 = sext i32 %6 to i64
  br label %26

17:                                               ; preds = %26
  %18 = trunc i64 %33 to i32
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %12, %10 ], [ %34, %17 ]
  %21 = phi i32 [ 0, %10 ], [ %18, %17 ]
  %22 = icmp slt i32 %21, %20
  br i1 %22, label %23, label %55

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %25 = zext i32 %21 to i64
  br label %38

26:                                               ; preds = %26, %14
  %27 = phi i64 [ 0, %14 ], [ %33, %26 ]
  %28 = load i8*, i8** %15, align 8
  %29 = add nsw i64 %27, %16
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %28, i64 %27
  store i8 %31, i8* %32, align 1
  %33 = add nuw nsw i64 %27, 1
  %34 = load i32, i32* %11, align 8
  %35 = add nsw i32 %34, %3
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %33, %36
  br i1 %37, label %26, label %17

38:                                               ; preds = %38, %23
  %39 = phi i64 [ %25, %23 ], [ %42, %38 ]
  %40 = load i8*, i8** %24, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %39
  store i8 0, i8* %41, align 1
  %42 = add nuw nsw i64 %39, 1
  %43 = load i32, i32* %11, align 8
  %44 = trunc i64 %42 to i32
  %45 = icmp sgt i32 %43, %44
  br i1 %45, label %38, label %55

46:                                               ; preds = %5
  %47 = shl nsw i32 %6, 2
  %48 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %49 = bitcast %union.anon* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = zext i32 %47 to i64
  %52 = lshr i64 %50, %51
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  br label %55

55:                                               ; preds = %38, %19, %46
  %56 = phi i32 [ %20, %19 ], [ %54, %46 ], [ %43, %38 ]
  %57 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %58 = add nsw i32 %56, %3
  store i32 %58, i32* %57, align 8
  store i32 0, i32* %2, align 4
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %59

59:                                               ; preds = %55, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity10shiftRightEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %12 = sext i32 %1 to i64
  br label %22

13:                                               ; preds = %22
  %14 = trunc i64 %29 to i32
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %8, %6 ], [ %30, %13 ]
  %17 = phi i32 [ 0, %6 ], [ %14, %13 ]
  %18 = icmp slt i32 %17, %16
  br i1 %18, label %19, label %51

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %21 = zext i32 %17 to i64
  br label %34

22:                                               ; preds = %10, %22
  %23 = phi i64 [ 0, %10 ], [ %29, %22 ]
  %24 = load i8*, i8** %11, align 8
  %25 = add nsw i64 %23, %12
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %24, i64 %23
  store i8 %27, i8* %28, align 1
  %29 = add nuw nsw i64 %23, 1
  %30 = load i32, i32* %7, align 8
  %31 = sub nsw i32 %30, %1
  %32 = sext i32 %31 to i64
  %33 = icmp slt i64 %29, %32
  br i1 %33, label %22, label %13

34:                                               ; preds = %19, %34
  %35 = phi i64 [ %21, %19 ], [ %38, %34 ]
  %36 = load i8*, i8** %20, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  store i8 0, i8* %37, align 1
  %38 = add nuw nsw i64 %35, 1
  %39 = load i32, i32* %7, align 8
  %40 = trunc i64 %38 to i32
  %41 = icmp sgt i32 %39, %40
  br i1 %41, label %34, label %51

42:                                               ; preds = %2
  %43 = shl nsw i32 %1, 2
  %44 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %45 = bitcast %union.anon* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = zext i32 %43 to i64
  %48 = lshr i64 %46, %47
  store i64 %48, i64* %45, align 8
  %49 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  br label %51

51:                                               ; preds = %34, %15, %42
  %52 = phi i32 [ %16, %15 ], [ %50, %42 ], [ %39, %34 ]
  %53 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, %1
  store i32 %55, i32* %53, align 4
  %56 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %57 = sub nsw i32 %52, %1
  store i32 %57, i32* %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity13roundToNickelEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, i32, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModebR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %0, i32 %1, i32 %2, i1 zeroext true, i32* dereferenceable(4) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModebR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, i32, i32, i1 zeroext, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %11 = bitcast %union.anon* %10 to i64*
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  %13 = icmp ugt i32 %2, 3
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %298, %5
  %16 = load i32, i32* %6, align 4
  %17 = sub i32 %1, %16
  %18 = icmp slt i32 %16, 0
  %19 = icmp slt i32 %17, %1
  %20 = and i1 %18, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = icmp sgt i32 %16, 0
  %23 = icmp sgt i32 %17, %1
  %24 = and i1 %22, %23
  %25 = select i1 %24, i32 -2147483648, i32 %17
  br label %26

26:                                               ; preds = %15, %21
  %27 = phi i32 [ %25, %21 ], [ 2147483647, %15 ]
  %28 = load i8, i8* %7, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  %31 = icmp slt i32 %27, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %30
  %33 = load i32, i32* %8, align 8
  %34 = icmp sgt i32 %33, %27
  br i1 %34, label %35, label %49

35:                                               ; preds = %32
  %36 = load i8*, i8** %9, align 8
  %37 = sext i32 %27 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load i8, i8* %38, align 1
  br label %49

40:                                               ; preds = %26
  %41 = icmp ugt i32 %27, 15
  br i1 %41, label %49, label %42

42:                                               ; preds = %40
  %43 = load i64, i64* %11, align 8
  %44 = shl nsw i32 %27, 2
  %45 = zext i32 %44 to i64
  %46 = lshr i64 %43, %45
  %47 = trunc i64 %46 to i8
  %48 = and i8 %47, 15
  br label %49

49:                                               ; preds = %32, %35, %40, %42
  %50 = phi i8 [ %39, %35 ], [ %48, %42 ], [ 0, %32 ], [ 0, %40 ]
  %51 = icmp slt i32 %27, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %30, %49
  %53 = phi i8 [ %50, %49 ], [ 0, %30 ]
  %54 = load i8, i8* %12, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  br i1 %3, label %57, label %617

57:                                               ; preds = %56
  switch i8 %53, label %58 [
    i8 5, label %617
    i8 0, label %617
  ]

58:                                               ; preds = %57, %52, %49
  %59 = phi i1 [ true, %57 ], [ true, %52 ], [ false, %49 ]
  %60 = phi i8 [ %53, %57 ], [ %53, %52 ], [ %50, %49 ]
  %61 = load i32, i32* %8, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %617, label %63

63:                                               ; preds = %58
  %64 = add i32 %27, -1
  %65 = icmp eq i32 %27, -2147483648
  %66 = select i1 %65, i32 -2147483648, i32 %64
  br i1 %29, label %76, label %67

67:                                               ; preds = %63
  %68 = icmp sgt i32 %66, -1
  %69 = icmp sgt i32 %61, %66
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %85

71:                                               ; preds = %67
  %72 = load i8*, i8** %9, align 8
  %73 = sext i32 %66 to i64
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = load i8, i8* %74, align 1
  br label %85

76:                                               ; preds = %63
  %77 = icmp ugt i32 %66, 15
  br i1 %77, label %85, label %78

78:                                               ; preds = %76
  %79 = load i64, i64* %11, align 8
  %80 = shl nsw i32 %66, 2
  %81 = zext i32 %80 to i64
  %82 = lshr i64 %79, %81
  %83 = trunc i64 %82 to i8
  %84 = and i8 %83, 15
  br label %85

85:                                               ; preds = %67, %71, %76, %78
  %86 = phi i8 [ %75, %71 ], [ %84, %78 ], [ 0, %67 ], [ 0, %76 ]
  %87 = load i8, i8* %12, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %133

89:                                               ; preds = %85
  br i1 %3, label %90, label %98

90:                                               ; preds = %89
  switch i8 %60, label %91 [
    i8 7, label %98
    i8 2, label %98
  ]

91:                                               ; preds = %90
  %92 = icmp slt i8 %60, 2
  br i1 %92, label %327, label %93

93:                                               ; preds = %91
  %94 = icmp slt i8 %60, 5
  br i1 %94, label %319, label %95

95:                                               ; preds = %93
  %96 = icmp slt i8 %60, 7
  %97 = select i1 %96, i32 1, i32 3
  br label %311

98:                                               ; preds = %89, %90, %90
  %99 = icmp slt i8 %86, 5
  br i1 %99, label %309, label %100

100:                                              ; preds = %98
  %101 = icmp eq i8 %86, 5
  br i1 %101, label %102, label %309

102:                                              ; preds = %100
  %103 = add i32 %27, -2
  %104 = icmp slt i32 %27, -2147483646
  %105 = select i1 %104, i32 -2147483648, i32 %103
  %106 = icmp sgt i32 %105, -1
  br i1 %106, label %107, label %309

107:                                              ; preds = %102
  %108 = zext i32 %105 to i64
  %109 = sext i32 %61 to i64
  br label %110

110:                                              ; preds = %107, %130
  %111 = phi i64 [ %108, %107 ], [ %132, %130 ]
  br i1 %29, label %118, label %112

112:                                              ; preds = %110
  %113 = icmp slt i64 %111, %109
  br i1 %113, label %114, label %130

114:                                              ; preds = %112
  %115 = load i8*, i8** %9, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %111
  %117 = load i8, i8* %116, align 1
  br label %127

118:                                              ; preds = %110
  %119 = icmp ugt i64 %111, 15
  br i1 %119, label %130, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %11, align 8
  %122 = shl i64 %111, 2
  %123 = and i64 %122, 4294967292
  %124 = lshr i64 %121, %123
  %125 = trunc i64 %124 to i8
  %126 = and i8 %125, 15
  br label %127

127:                                              ; preds = %114, %120
  %128 = phi i8 [ %117, %114 ], [ %126, %120 ]
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %309

130:                                              ; preds = %118, %112, %127
  %131 = icmp sgt i64 %111, 0
  %132 = add nsw i64 %111, -1
  br i1 %131, label %110, label %309

133:                                              ; preds = %85
  %134 = add i32 %27, -2
  %135 = icmp slt i32 %27, -2147483646
  %136 = select i1 %135, i32 -2147483648, i32 %134
  %137 = add nsw i32 %61, -14
  %138 = tail call i32 @uprv_max_69(i32 0, i32 %137) #17
  switch i8 %86, label %275 [
    i8 0, label %139
    i8 4, label %173
    i8 5, label %207
    i8 9, label %241
  ]

139:                                              ; preds = %133
  br i1 %3, label %140, label %141

140:                                              ; preds = %139
  switch i8 %60, label %277 [
    i8 5, label %141
    i8 0, label %141
    i8 7, label %284
    i8 2, label %284
  ]

141:                                              ; preds = %140, %140, %139
  %142 = icmp slt i32 %136, %138
  br i1 %142, label %287, label %143

143:                                              ; preds = %141
  %144 = load i8, i8* %7, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br label %146

146:                                              ; preds = %170, %143
  %147 = phi i32 [ %136, %143 ], [ %171, %170 ]
  br i1 %145, label %158, label %148

148:                                              ; preds = %146
  %149 = icmp slt i32 %147, 0
  br i1 %149, label %170, label %150

150:                                              ; preds = %148
  %151 = load i32, i32* %8, align 8
  %152 = icmp sgt i32 %151, %147
  br i1 %152, label %153, label %170

153:                                              ; preds = %150
  %154 = load i8*, i8** %9, align 8
  %155 = sext i32 %147 to i64
  %156 = getelementptr inbounds i8, i8* %154, i64 %155
  %157 = load i8, i8* %156, align 1
  br label %167

158:                                              ; preds = %146
  %159 = icmp ugt i32 %147, 15
  br i1 %159, label %170, label %160

160:                                              ; preds = %158
  %161 = load i64, i64* %11, align 8
  %162 = shl nsw i32 %147, 2
  %163 = zext i32 %162 to i64
  %164 = lshr i64 %161, %163
  %165 = trunc i64 %164 to i8
  %166 = and i8 %165, 15
  br label %167

167:                                              ; preds = %153, %160
  %168 = phi i8 [ %157, %153 ], [ %166, %160 ]
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %287

170:                                              ; preds = %158, %148, %150, %167
  %171 = add nsw i32 %147, -1
  %172 = icmp sgt i32 %147, %138
  br i1 %172, label %146, label %287

173:                                              ; preds = %133
  br i1 %3, label %174, label %175

174:                                              ; preds = %173
  switch i8 %60, label %277 [
    i8 7, label %175
    i8 2, label %175
  ]

175:                                              ; preds = %174, %174, %173
  %176 = icmp slt i32 %136, %138
  br i1 %176, label %287, label %177

177:                                              ; preds = %175
  %178 = load i8, i8* %7, align 8, !range !2
  %179 = icmp eq i8 %178, 0
  br label %183

180:                                              ; preds = %204
  %181 = add nsw i32 %184, -1
  %182 = icmp sgt i32 %184, %138
  br i1 %182, label %183, label %287

183:                                              ; preds = %180, %177
  %184 = phi i32 [ %136, %177 ], [ %181, %180 ]
  br i1 %179, label %195, label %185

185:                                              ; preds = %183
  %186 = icmp slt i32 %184, 0
  br i1 %186, label %287, label %187

187:                                              ; preds = %185
  %188 = load i32, i32* %8, align 8
  %189 = icmp sgt i32 %188, %184
  br i1 %189, label %190, label %287

190:                                              ; preds = %187
  %191 = load i8*, i8** %9, align 8
  %192 = sext i32 %184 to i64
  %193 = getelementptr inbounds i8, i8* %191, i64 %192
  %194 = load i8, i8* %193, align 1
  br label %204

195:                                              ; preds = %183
  %196 = icmp ugt i32 %184, 15
  br i1 %196, label %287, label %197

197:                                              ; preds = %195
  %198 = load i64, i64* %11, align 8
  %199 = shl nsw i32 %184, 2
  %200 = zext i32 %199 to i64
  %201 = lshr i64 %198, %200
  %202 = trunc i64 %201 to i8
  %203 = and i8 %202, 15
  br label %204

204:                                              ; preds = %190, %197
  %205 = phi i8 [ %194, %190 ], [ %203, %197 ]
  %206 = icmp eq i8 %205, 9
  br i1 %206, label %180, label %287

207:                                              ; preds = %133
  br i1 %3, label %208, label %209

208:                                              ; preds = %207
  switch i8 %60, label %277 [
    i8 7, label %209
    i8 2, label %209
  ]

209:                                              ; preds = %208, %208, %207
  %210 = icmp slt i32 %136, %138
  br i1 %210, label %287, label %211

211:                                              ; preds = %209
  %212 = load i8, i8* %7, align 8, !range !2
  %213 = icmp eq i8 %212, 0
  br label %214

214:                                              ; preds = %238, %211
  %215 = phi i32 [ %136, %211 ], [ %239, %238 ]
  br i1 %213, label %226, label %216

216:                                              ; preds = %214
  %217 = icmp slt i32 %215, 0
  br i1 %217, label %238, label %218

218:                                              ; preds = %216
  %219 = load i32, i32* %8, align 8
  %220 = icmp sgt i32 %219, %215
  br i1 %220, label %221, label %238

221:                                              ; preds = %218
  %222 = load i8*, i8** %9, align 8
  %223 = sext i32 %215 to i64
  %224 = getelementptr inbounds i8, i8* %222, i64 %223
  %225 = load i8, i8* %224, align 1
  br label %235

226:                                              ; preds = %214
  %227 = icmp ugt i32 %215, 15
  br i1 %227, label %238, label %228

228:                                              ; preds = %226
  %229 = load i64, i64* %11, align 8
  %230 = shl nsw i32 %215, 2
  %231 = zext i32 %230 to i64
  %232 = lshr i64 %229, %231
  %233 = trunc i64 %232 to i8
  %234 = and i8 %233, 15
  br label %235

235:                                              ; preds = %221, %228
  %236 = phi i8 [ %225, %221 ], [ %234, %228 ]
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %238, label %287

238:                                              ; preds = %226, %216, %218, %235
  %239 = add nsw i32 %215, -1
  %240 = icmp sgt i32 %215, %138
  br i1 %240, label %214, label %287

241:                                              ; preds = %133
  br i1 %3, label %242, label %243

242:                                              ; preds = %241
  switch i8 %60, label %277 [
    i8 9, label %243
    i8 4, label %243
    i8 7, label %284
    i8 2, label %284
  ]

243:                                              ; preds = %242, %242, %241
  %244 = icmp slt i32 %136, %138
  br i1 %244, label %287, label %245

245:                                              ; preds = %243
  %246 = load i8, i8* %7, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br label %251

248:                                              ; preds = %272
  %249 = add nsw i32 %252, -1
  %250 = icmp sgt i32 %252, %138
  br i1 %250, label %251, label %287

251:                                              ; preds = %248, %245
  %252 = phi i32 [ %136, %245 ], [ %249, %248 ]
  br i1 %247, label %263, label %253

253:                                              ; preds = %251
  %254 = icmp slt i32 %252, 0
  br i1 %254, label %287, label %255

255:                                              ; preds = %253
  %256 = load i32, i32* %8, align 8
  %257 = icmp sgt i32 %256, %252
  br i1 %257, label %258, label %287

258:                                              ; preds = %255
  %259 = load i8*, i8** %9, align 8
  %260 = sext i32 %252 to i64
  %261 = getelementptr inbounds i8, i8* %259, i64 %260
  %262 = load i8, i8* %261, align 1
  br label %272

263:                                              ; preds = %251
  %264 = icmp ugt i32 %252, 15
  br i1 %264, label %287, label %265

265:                                              ; preds = %263
  %266 = load i64, i64* %11, align 8
  %267 = shl nsw i32 %252, 2
  %268 = zext i32 %267 to i64
  %269 = lshr i64 %266, %268
  %270 = trunc i64 %269 to i8
  %271 = and i8 %270, 15
  br label %272

272:                                              ; preds = %258, %265
  %273 = phi i8 [ %262, %258 ], [ %271, %265 ]
  %274 = icmp eq i8 %273, 9
  br i1 %274, label %248, label %287

275:                                              ; preds = %133
  br i1 %3, label %276, label %284

276:                                              ; preds = %275
  switch i8 %60, label %277 [
    i8 7, label %284
    i8 2, label %284
  ]

277:                                              ; preds = %242, %140, %174, %208, %276
  %278 = icmp slt i8 %60, 2
  br i1 %278, label %287, label %279

279:                                              ; preds = %277
  %280 = icmp slt i8 %60, 5
  br i1 %280, label %287, label %281

281:                                              ; preds = %279
  %282 = icmp slt i8 %60, 7
  %283 = select i1 %282, i32 1, i32 3
  br label %287

284:                                              ; preds = %242, %242, %140, %140, %275, %276, %276
  %285 = icmp slt i8 %86, 5
  %286 = select i1 %285, i32 1, i32 3
  br label %287

287:                                              ; preds = %248, %272, %255, %253, %263, %238, %235, %180, %204, %187, %185, %195, %170, %167, %243, %209, %175, %141, %284, %281, %279, %277
  %288 = phi i32 [ 1, %277 ], [ 3, %279 ], [ %283, %281 ], [ %286, %284 ], [ -1, %141 ], [ 2, %175 ], [ 2, %209 ], [ -2, %243 ], [ -1, %170 ], [ 1, %167 ], [ 2, %180 ], [ 1, %204 ], [ 1, %187 ], [ 1, %185 ], [ 1, %195 ], [ 2, %238 ], [ 3, %235 ], [ -2, %248 ], [ 3, %272 ], [ 3, %255 ], [ 3, %253 ], [ 3, %263 ]
  %289 = load i32, i32* %8, align 8
  %290 = add nsw i32 %289, -14
  %291 = icmp slt i32 %66, %290
  %292 = icmp eq i32 %288, 2
  %293 = and i1 %13, %292
  %294 = or i1 %293, %291
  %295 = icmp slt i32 %288, 0
  %296 = and i1 %295, %14
  %297 = or i1 %294, %296
  br i1 %297, label %298, label %299

298:                                              ; preds = %287
  tail call void @_ZN6icu_696number4impl15DecimalQuantity23convertToAccurateDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %15

299:                                              ; preds = %287
  store i8 0, i8* %12, align 1
  %300 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %300, align 8
  %301 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %301, align 8
  br i1 %59, label %302, label %304

302:                                              ; preds = %299
  br i1 %3, label %303, label %617

303:                                              ; preds = %302
  switch i8 %60, label %304 [
    i8 5, label %617
    i8 0, label %617
  ]

304:                                              ; preds = %299, %303
  %305 = icmp eq i32 %288, -1
  %306 = select i1 %305, i32 1, i32 %288
  %307 = icmp eq i32 %306, -2
  %308 = select i1 %307, i32 3, i32 %306
  br label %309

309:                                              ; preds = %127, %130, %102, %304, %100, %98
  %310 = phi i32 [ %308, %304 ], [ 1, %98 ], [ 3, %100 ], [ 2, %102 ], [ 2, %130 ], [ 3, %127 ]
  br i1 %3, label %311, label %324

311:                                              ; preds = %95, %309
  %312 = phi i32 [ %310, %309 ], [ %97, %95 ]
  %313 = add i8 %60, -2
  %314 = icmp ugt i8 %313, 5
  br i1 %314, label %327, label %315

315:                                              ; preds = %311
  %316 = icmp eq i8 %60, 2
  %317 = icmp ne i32 %312, 3
  %318 = and i1 %316, %317
  br i1 %318, label %327, label %319

319:                                              ; preds = %93, %315
  %320 = phi i32 [ %312, %315 ], [ 3, %93 ]
  %321 = icmp eq i8 %60, 7
  %322 = icmp eq i32 %320, 3
  %323 = and i1 %321, %322
  br label %327

324:                                              ; preds = %309
  %325 = and i8 %60, 1
  %326 = icmp eq i8 %325, 0
  br label %327

327:                                              ; preds = %91, %311, %315, %319, %324
  %328 = phi i32 [ %310, %324 ], [ %312, %311 ], [ %312, %315 ], [ %320, %319 ], [ 1, %91 ]
  %329 = phi i1 [ %326, %324 ], [ true, %311 ], [ true, %315 ], [ %323, %319 ], [ true, %91 ]
  %330 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %331 = load i8, i8* %330, align 4
  %332 = and i8 %331, 1
  %333 = icmp ne i8 %332, 0
  %334 = load i32, i32* %4, align 4
  %335 = icmp slt i32 %334, 1
  br i1 %335, label %336, label %617

336:                                              ; preds = %327
  switch i32 %2, label %361 [
    i32 3, label %370
    i32 2, label %337
    i32 0, label %338
    i32 1, label %339
    i32 6, label %341
    i32 5, label %344
    i32 4, label %347
    i32 8, label %350
    i32 9, label %354
    i32 10, label %357
  ]

337:                                              ; preds = %336
  br label %370

338:                                              ; preds = %336
  br label %370

339:                                              ; preds = %336
  %340 = xor i1 %333, true
  br label %370

341:                                              ; preds = %336
  %342 = add i32 %328, -1
  %343 = icmp ult i32 %342, 3
  br i1 %343, label %362, label %361

344:                                              ; preds = %336
  %345 = add i32 %328, -1
  %346 = icmp ult i32 %345, 3
  br i1 %346, label %365, label %361

347:                                              ; preds = %336
  switch i32 %328, label %361 [
    i32 2, label %370
    i32 1, label %348
    i32 3, label %349
  ]

348:                                              ; preds = %347
  br label %370

349:                                              ; preds = %347
  br label %370

350:                                              ; preds = %336
  switch i32 %328, label %361 [
    i32 2, label %351
    i32 1, label %370
    i32 3, label %353
  ]

351:                                              ; preds = %350
  %352 = xor i1 %329, true
  br label %370

353:                                              ; preds = %350
  br label %370

354:                                              ; preds = %336
  switch i32 %328, label %361 [
    i32 2, label %370
    i32 1, label %355
    i32 3, label %356
  ]

355:                                              ; preds = %354
  br label %370

356:                                              ; preds = %354
  br label %370

357:                                              ; preds = %336
  switch i32 %328, label %361 [
    i32 2, label %358
    i32 1, label %370
    i32 3, label %360
  ]

358:                                              ; preds = %357
  %359 = xor i1 %333, true
  br label %370

360:                                              ; preds = %357
  br label %370

361:                                              ; preds = %344, %341, %357, %354, %350, %347, %336
  store i32 65809, i32* %4, align 4
  br label %617

362:                                              ; preds = %341
  %363 = trunc i32 %342 to i3
  %364 = icmp eq i3 %363, 0
  br label %370

365:                                              ; preds = %344
  %366 = trunc i32 %345 to i3
  %367 = lshr i3 3, %366
  %368 = and i3 %367, 1
  %369 = icmp ne i3 %368, 0
  br label %370

370:                                              ; preds = %365, %362, %360, %358, %356, %355, %353, %351, %349, %348, %339, %338, %337, %336, %347, %350, %354, %357
  %371 = phi i1 [ true, %357 ], [ %333, %354 ], [ true, %350 ], [ %329, %347 ], [ false, %336 ], [ true, %337 ], [ %333, %338 ], [ %340, %339 ], [ true, %348 ], [ false, %349 ], [ %352, %351 ], [ false, %353 ], [ true, %355 ], [ false, %356 ], [ %359, %358 ], [ false, %360 ], [ %364, %362 ], [ %369, %365 ]
  %372 = load i32, i32* %8, align 8
  %373 = icmp slt i32 %27, %372
  %374 = load i8, i8* %7, align 8, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %373, label %383, label %376

376:                                              ; preds = %370
  br i1 %375, label %379, label %377

377:                                              ; preds = %376
  %378 = load i8*, i8** %9, align 8
  tail call void @uprv_free_69(i8* %378) #17
  store i8* null, i8** %9, align 8
  store i8 0, i8* %7, align 8
  br label %379

379:                                              ; preds = %376, %377
  store i64 0, i64* %11, align 8
  store i32 0, i32* %8, align 8
  store i8 0, i8* %12, align 1
  %380 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %380, align 8
  %381 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  store i32 0, i32* %381, align 8
  %382 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 12
  store i32 0, i32* %382, align 4
  store i32 %1, i32* %6, align 4
  br label %421

383:                                              ; preds = %370
  br i1 %375, label %411, label %384

384:                                              ; preds = %383
  %385 = sext i32 %27 to i64
  br label %391

386:                                              ; preds = %391
  %387 = trunc i64 %398 to i32
  %388 = icmp sgt i32 %399, %387
  br i1 %388, label %389, label %416

389:                                              ; preds = %386
  %390 = and i64 %398, 4294967295
  br label %403

391:                                              ; preds = %391, %384
  %392 = phi i64 [ 0, %384 ], [ %398, %391 ]
  %393 = load i8*, i8** %9, align 8
  %394 = add nsw i64 %392, %385
  %395 = getelementptr inbounds i8, i8* %393, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = getelementptr inbounds i8, i8* %393, i64 %392
  store i8 %396, i8* %397, align 1
  %398 = add nuw nsw i64 %392, 1
  %399 = load i32, i32* %8, align 8
  %400 = sub nsw i32 %399, %27
  %401 = sext i32 %400 to i64
  %402 = icmp slt i64 %398, %401
  br i1 %402, label %391, label %386

403:                                              ; preds = %403, %389
  %404 = phi i64 [ %390, %389 ], [ %407, %403 ]
  %405 = load i8*, i8** %9, align 8
  %406 = getelementptr inbounds i8, i8* %405, i64 %404
  store i8 0, i8* %406, align 1
  %407 = add nuw nsw i64 %404, 1
  %408 = load i32, i32* %8, align 8
  %409 = trunc i64 %407 to i32
  %410 = icmp sgt i32 %408, %409
  br i1 %410, label %403, label %416

411:                                              ; preds = %383
  %412 = shl nsw i32 %27, 2
  %413 = load i64, i64* %11, align 8
  %414 = zext i32 %412 to i64
  %415 = lshr i64 %413, %414
  store i64 %415, i64* %11, align 8
  br label %416

416:                                              ; preds = %403, %386, %411
  %417 = phi i32 [ %399, %386 ], [ %372, %411 ], [ %408, %403 ]
  %418 = load i32, i32* %6, align 4
  %419 = add nsw i32 %418, %27
  store i32 %419, i32* %6, align 4
  %420 = sub nsw i32 %417, %27
  store i32 %420, i32* %8, align 8
  br label %421

421:                                              ; preds = %416, %379
  br i1 %3, label %422, label %493

422:                                              ; preds = %421
  %423 = icmp sgt i8 %60, 4
  %424 = xor i1 %371, true
  %425 = or i1 %423, %424
  br i1 %425, label %448, label %426

426:                                              ; preds = %422
  %427 = load i8, i8* %7, align 8, !range !2
  %428 = icmp eq i8 %427, 0
  br i1 %428, label %444, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %431 = load i32, i32* %430, align 8
  %432 = icmp sgt i32 %431, 0
  br i1 %432, label %433, label %435

433:                                              ; preds = %429
  %434 = load i8*, i8** %9, align 8
  br label %442

435:                                              ; preds = %429
  %436 = tail call noalias i8* @uprv_malloc_69(i64 2) #16
  %437 = load i8*, i8** %9, align 8
  %438 = sext i32 %431 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %436, i8* align 1 %437, i64 %438, i1 false) #17
  %439 = getelementptr inbounds i8, i8* %436, i64 %438
  %440 = sub nsw i32 1, %431
  %441 = sext i32 %440 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %439, i8 0, i64 %441, i1 false) #17
  tail call void @uprv_free_69(i8* %437) #17
  store i8* %436, i8** %9, align 8
  store i32 2, i32* %430, align 8
  br label %442

442:                                              ; preds = %433, %435
  %443 = phi i8* [ %434, %433 ], [ %436, %435 ]
  store i8 1, i8* %7, align 8
  store i8 0, i8* %443, align 1
  br label %447

444:                                              ; preds = %426
  %445 = load i64, i64* %11, align 8
  %446 = and i64 %445, -16
  store i64 %446, i64* %11, align 8
  br label %447

447:                                              ; preds = %442, %444
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %617

448:                                              ; preds = %422
  %449 = icmp slt i8 %60, 5
  %450 = or i1 %449, %371
  %451 = load i8, i8* %7, align 8, !range !2
  %452 = icmp eq i8 %451, 0
  br i1 %450, label %473, label %453

453:                                              ; preds = %448
  br i1 %452, label %469, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %456 = load i32, i32* %455, align 8
  %457 = icmp sgt i32 %456, 0
  br i1 %457, label %458, label %460

458:                                              ; preds = %454
  %459 = load i8*, i8** %9, align 8
  br label %467

460:                                              ; preds = %454
  %461 = tail call noalias i8* @uprv_malloc_69(i64 2) #16
  %462 = load i8*, i8** %9, align 8
  %463 = sext i32 %456 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %461, i8* align 1 %462, i64 %463, i1 false) #17
  %464 = getelementptr inbounds i8, i8* %461, i64 %463
  %465 = sub nsw i32 1, %456
  %466 = sext i32 %465 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %464, i8 0, i64 %466, i1 false) #17
  tail call void @uprv_free_69(i8* %462) #17
  store i8* %461, i8** %9, align 8
  store i32 2, i32* %455, align 8
  br label %467

467:                                              ; preds = %458, %460
  %468 = phi i8* [ %459, %458 ], [ %461, %460 ]
  store i8 1, i8* %7, align 8
  store i8 9, i8* %468, align 1
  br i1 %371, label %616, label %496

469:                                              ; preds = %453
  %470 = load i64, i64* %11, align 8
  %471 = and i64 %470, -16
  %472 = or i64 %471, 9
  store i64 %472, i64* %11, align 8
  br i1 %371, label %616, label %496

473:                                              ; preds = %448
  br i1 %452, label %489, label %474

474:                                              ; preds = %473
  %475 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %476 = load i32, i32* %475, align 8
  %477 = icmp sgt i32 %476, 0
  br i1 %477, label %478, label %480

478:                                              ; preds = %474
  %479 = load i8*, i8** %9, align 8
  br label %487

480:                                              ; preds = %474
  %481 = tail call noalias i8* @uprv_malloc_69(i64 2) #16
  %482 = load i8*, i8** %9, align 8
  %483 = sext i32 %476 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %481, i8* align 1 %482, i64 %483, i1 false) #17
  %484 = getelementptr inbounds i8, i8* %481, i64 %483
  %485 = sub nsw i32 1, %476
  %486 = sext i32 %485 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %484, i8 0, i64 %486, i1 false) #17
  tail call void @uprv_free_69(i8* %482) #17
  store i8* %481, i8** %9, align 8
  store i32 2, i32* %475, align 8
  br label %487

487:                                              ; preds = %478, %480
  %488 = phi i8* [ %479, %478 ], [ %481, %480 ]
  store i8 1, i8* %7, align 8
  store i8 5, i8* %488, align 1
  br label %617

489:                                              ; preds = %473
  %490 = load i64, i64* %11, align 8
  %491 = and i64 %490, -16
  %492 = or i64 %491, 5
  store i64 %492, i64* %11, align 8
  br label %617

493:                                              ; preds = %421
  br i1 %371, label %616, label %494

494:                                              ; preds = %493
  %495 = icmp eq i8 %60, 9
  br i1 %495, label %496, label %581

496:                                              ; preds = %469, %467, %494
  %497 = load i8, i8* %7, align 8, !range !2
  %498 = icmp eq i8 %497, 0
  br label %499

499:                                              ; preds = %496, %523
  %500 = phi i64 [ 0, %496 ], [ %524, %523 ]
  br i1 %498, label %510, label %501

501:                                              ; preds = %499
  %502 = load i32, i32* %8, align 8
  %503 = sext i32 %502 to i64
  %504 = icmp slt i64 %500, %503
  br i1 %504, label %505, label %529

505:                                              ; preds = %501
  %506 = load i8*, i8** %9, align 8
  %507 = getelementptr inbounds i8, i8* %506, i64 %500
  %508 = load i8, i8* %507, align 1
  %509 = ptrtoint i8* %506 to i64
  br label %519

510:                                              ; preds = %499
  %511 = icmp ugt i64 %500, 15
  br i1 %511, label %565, label %512

512:                                              ; preds = %510
  %513 = load i64, i64* %11, align 8
  %514 = shl i64 %500, 2
  %515 = and i64 %514, 4294967292
  %516 = lshr i64 %513, %515
  %517 = trunc i64 %516 to i8
  %518 = and i8 %517, 15
  br label %519

519:                                              ; preds = %505, %512
  %520 = phi i64 [ %509, %505 ], [ %513, %512 ]
  %521 = phi i8 [ %508, %505 ], [ %518, %512 ]
  %522 = icmp eq i8 %521, 9
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = add nuw nsw i64 %500, 1
  br label %499

525:                                              ; preds = %519
  %526 = trunc i64 %500 to i32
  br i1 %498, label %568, label %527

527:                                              ; preds = %525
  %528 = load i32, i32* %8, align 8
  br label %531

529:                                              ; preds = %501
  %530 = trunc i64 %500 to i32
  br label %531

531:                                              ; preds = %527, %529
  %532 = phi i32 [ %502, %529 ], [ %528, %527 ]
  %533 = phi i32 [ %530, %529 ], [ %526, %527 ]
  %534 = icmp sgt i32 %532, %533
  br i1 %534, label %535, label %539

535:                                              ; preds = %531
  %536 = zext i32 %533 to i64
  br label %545

537:                                              ; preds = %545
  %538 = trunc i64 %552 to i32
  br label %539

539:                                              ; preds = %537, %531
  %540 = phi i32 [ %532, %531 ], [ %553, %537 ]
  %541 = phi i32 [ 0, %531 ], [ %538, %537 ]
  %542 = icmp slt i32 %541, %540
  br i1 %542, label %543, label %575

543:                                              ; preds = %539
  %544 = zext i32 %541 to i64
  br label %557

545:                                              ; preds = %545, %535
  %546 = phi i64 [ 0, %535 ], [ %552, %545 ]
  %547 = load i8*, i8** %9, align 8
  %548 = add nuw nsw i64 %546, %536
  %549 = getelementptr inbounds i8, i8* %547, i64 %548
  %550 = load i8, i8* %549, align 1
  %551 = getelementptr inbounds i8, i8* %547, i64 %546
  store i8 %550, i8* %551, align 1
  %552 = add nuw nsw i64 %546, 1
  %553 = load i32, i32* %8, align 8
  %554 = sub nsw i32 %553, %533
  %555 = sext i32 %554 to i64
  %556 = icmp slt i64 %552, %555
  br i1 %556, label %545, label %537

557:                                              ; preds = %557, %543
  %558 = phi i64 [ %544, %543 ], [ %561, %557 ]
  %559 = load i8*, i8** %9, align 8
  %560 = getelementptr inbounds i8, i8* %559, i64 %558
  store i8 0, i8* %560, align 1
  %561 = add nuw nsw i64 %558, 1
  %562 = load i32, i32* %8, align 8
  %563 = trunc i64 %561 to i32
  %564 = icmp sgt i32 %562, %563
  br i1 %564, label %557, label %575

565:                                              ; preds = %510
  %566 = trunc i64 %500 to i32
  %567 = load i64, i64* %11, align 8
  br label %568

568:                                              ; preds = %565, %525
  %569 = phi i64 [ %567, %565 ], [ %520, %525 ]
  %570 = phi i32 [ %566, %565 ], [ %526, %525 ]
  %571 = shl nsw i32 %570, 2
  %572 = zext i32 %571 to i64
  %573 = lshr i64 %569, %572
  store i64 %573, i64* %11, align 8
  %574 = load i32, i32* %8, align 8
  br label %575

575:                                              ; preds = %557, %539, %568
  %576 = phi i32 [ %533, %539 ], [ %570, %568 ], [ %533, %557 ]
  %577 = phi i32 [ %540, %539 ], [ %574, %568 ], [ %562, %557 ]
  %578 = load i32, i32* %6, align 4
  %579 = add nsw i32 %578, %576
  store i32 %579, i32* %6, align 4
  %580 = sub nsw i32 %577, %576
  store i32 %580, i32* %8, align 8
  br label %581

581:                                              ; preds = %575, %494
  %582 = load i8, i8* %7, align 8, !range !2
  %583 = icmp eq i8 %582, 0
  br i1 %583, label %607, label %584

584:                                              ; preds = %581
  %585 = load i32, i32* %8, align 8
  %586 = icmp sgt i32 %585, 0
  br i1 %586, label %587, label %591

587:                                              ; preds = %584
  %588 = load i8*, i8** %9, align 8
  %589 = load i8, i8* %588, align 1
  %590 = add i8 %589, 1
  br label %591

591:                                              ; preds = %584, %587
  %592 = phi i8 [ 1, %584 ], [ %590, %587 ]
  %593 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %594 = load i32, i32* %593, align 8
  %595 = icmp sgt i32 %594, 0
  br i1 %595, label %596, label %598

596:                                              ; preds = %591
  %597 = load i8*, i8** %9, align 8
  br label %605

598:                                              ; preds = %591
  %599 = tail call noalias i8* @uprv_malloc_69(i64 2) #16
  %600 = load i8*, i8** %9, align 8
  %601 = sext i32 %594 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %599, i8* align 1 %600, i64 %601, i1 false) #17
  %602 = getelementptr inbounds i8, i8* %599, i64 %601
  %603 = sub nsw i32 1, %594
  %604 = sext i32 %603 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %602, i8 0, i64 %604, i1 false) #17
  tail call void @uprv_free_69(i8* %600) #17
  store i8* %599, i8** %9, align 8
  store i32 2, i32* %593, align 8
  br label %605

605:                                              ; preds = %596, %598
  %606 = phi i8* [ %597, %596 ], [ %599, %598 ]
  store i8 1, i8* %7, align 8
  store i8 %592, i8* %606, align 1
  br label %613

607:                                              ; preds = %581
  %608 = load i64, i64* %11, align 8
  %609 = and i64 %608, 15
  %610 = add nuw nsw i64 %609, 1
  %611 = and i64 %608, -16
  %612 = or i64 %610, %611
  store i64 %612, i64* %11, align 8
  br label %613

613:                                              ; preds = %605, %607
  %614 = load i32, i32* %8, align 8
  %615 = add nsw i32 %614, 1
  store i32 %615, i32* %8, align 8
  br label %616

616:                                              ; preds = %469, %467, %613, %493
  tail call void @_ZN6icu_696number4impl15DecimalQuantity7compactEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %617

617:                                              ; preds = %56, %58, %57, %57, %361, %327, %302, %303, %303, %489, %487, %447, %616
  ret void
}

declare i32 @uprv_max_69(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity11setDigitPosEia(%"class.icu_69::number::impl::DecimalQuantity"*, i32, i8 signext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %3
  %8 = add nsw i32 %1, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = shl nsw i32 %8, 1
  %16 = sext i32 %15 to i64
  %17 = tail call noalias i8* @uprv_malloc_69(i64 %16) #16
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %12 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %19, i64 %20, i1 false) #17
  %21 = getelementptr inbounds i8, i8* %17, i64 %20
  %22 = sub nsw i32 %8, %12
  %23 = sext i32 %22 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 0, i64 %23, i1 false) #17
  tail call void @uprv_free_69(i8* %19) #17
  store i8* %17, i8** %18, align 8
  store i32 %15, i32* %11, align 8
  br label %24

24:                                               ; preds = %10, %14
  store i8 1, i8* %4, align 8
  br label %25

25:                                               ; preds = %7, %24
  %26 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = sext i32 %1 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8 %2, i8* %29, align 1
  br label %110

30:                                               ; preds = %3
  %31 = icmp sgt i32 %1, 15
  br i1 %31, label %32, label %98

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %34 = bitcast %union.anon* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = tail call noalias i8* @uprv_malloc_69(i64 40) #16
  %37 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 40, i32* %38, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 0, i64 40, i1 false) #17
  store i8 1, i8* %4, align 8
  %39 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %32
  %43 = add nuw nsw i32 %1, 1
  br label %80

44:                                               ; preds = %32
  %45 = getelementptr inbounds %union.anon, %union.anon* %33, i64 0, i32 0, i32 0
  %46 = trunc i64 %35 to i8
  %47 = and i8 %46, 15
  store i8 %47, i8* %36, align 1
  %48 = icmp eq i32 %40, 1
  br i1 %48, label %56, label %49

49:                                               ; preds = %44
  %50 = lshr i64 %35, 4
  %51 = trunc i64 %50 to i8
  %52 = and i8 %51, 15
  %53 = getelementptr inbounds i8, i8* %36, i64 1
  store i8 %52, i8* %53, align 1
  %54 = load i32, i32* %39, align 8
  %55 = icmp sgt i32 %54, 2
  br i1 %55, label %58, label %70

56:                                               ; preds = %44
  %57 = add nuw nsw i32 %1, 1
  br label %73

58:                                               ; preds = %49, %58
  %59 = phi i64 [ %66, %58 ], [ 2, %49 ]
  %60 = phi i64 [ %62, %58 ], [ %50, %49 ]
  %61 = load i8*, i8** %45, align 8
  %62 = lshr i64 %60, 4
  %63 = trunc i64 %62 to i8
  %64 = and i8 %63, 15
  %65 = getelementptr inbounds i8, i8* %61, i64 %59
  store i8 %64, i8* %65, align 1
  %66 = add nuw nsw i64 %59, 1
  %67 = load i32, i32* %39, align 8
  %68 = sext i32 %67 to i64
  %69 = icmp slt i64 %66, %68
  br i1 %69, label %58, label %70

70:                                               ; preds = %58, %49
  %71 = add nsw i32 %1, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %94, label %73

73:                                               ; preds = %70, %56
  %74 = phi i32 [ %57, %56 ], [ %71, %70 ]
  %75 = load i8, i8* %4, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = sext i32 %74 to i64
  %79 = tail call noalias i8* @uprv_malloc_69(i64 %78) #16
  store i8* %79, i8** %37, align 8
  store i32 %74, i32* %38, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %79, i8 0, i64 %78, i1 false) #17
  br label %93

80:                                               ; preds = %42, %73
  %81 = phi i32 [ %43, %42 ], [ %74, %73 ]
  %82 = load i32, i32* %38, align 8
  %83 = icmp sgt i32 %81, %82
  br i1 %83, label %84, label %93

84:                                               ; preds = %80
  %85 = shl nsw i32 %81, 1
  %86 = sext i32 %85 to i64
  %87 = tail call noalias i8* @uprv_malloc_69(i64 %86) #16
  %88 = load i8*, i8** %37, align 8
  %89 = sext i32 %82 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 %89, i1 false) #17
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = sub nsw i32 %81, %82
  %92 = sext i32 %91 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %90, i8 0, i64 %92, i1 false) #17
  tail call void @uprv_free_69(i8* %88) #17
  store i8* %87, i8** %37, align 8
  store i32 %85, i32* %38, align 8
  br label %93

93:                                               ; preds = %84, %80, %77
  store i8 1, i8* %4, align 8
  br label %94

94:                                               ; preds = %70, %93
  %95 = load i8*, i8** %37, align 8
  %96 = sext i32 %1 to i64
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  store i8 %2, i8* %97, align 1
  br label %110

98:                                               ; preds = %30
  %99 = shl nsw i32 %1, 2
  %100 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %101 = bitcast %union.anon* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i32 %99 to i64
  %104 = shl i64 15, %103
  %105 = xor i64 %104, -1
  %106 = and i64 %102, %105
  %107 = sext i8 %2 to i64
  %108 = shl i64 %107, %103
  %109 = or i64 %106, %108
  store i64 %109, i64* %101, align 8
  br label %110

110:                                              ; preds = %94, %98, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity15roundToInfinityEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN6icu_696number4impl15DecimalQuantity23convertToAccurateDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity11appendDigitEaib(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i8 signext, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i8 %1, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %4
  br i1 %3, label %7, label %57

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11

11:                                               ; preds = %7
  %12 = add nsw i32 %2, 1
  %13 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %12, %14
  store i32 %15, i32* %13, align 4
  br label %57

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = add nsw i32 %18, %2
  br i1 %3, label %22, label %23

22:                                               ; preds = %20
  store i32 0, i32* %17, align 4
  br label %23

23:                                               ; preds = %20, %22, %16
  %24 = phi i32 [ %21, %22 ], [ %21, %20 ], [ %2, %16 ]
  %25 = add nsw i32 %24, 1
  tail call void @_ZN6icu_696number4impl15DecimalQuantity9shiftLeftEi(%"class.icu_69::number::impl::DecimalQuantity"* %0, i32 %25)
  %26 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %44

36:                                               ; preds = %29
  %37 = tail call noalias i8* @uprv_malloc_69(i64 2) #16
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = sext i32 %31 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %39, i64 %40, i1 false) #17
  %41 = getelementptr inbounds i8, i8* %37, i64 %40
  %42 = sub nsw i32 1, %31
  %43 = sext i32 %42 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %43, i1 false) #17
  tail call void @uprv_free_69(i8* %39) #17
  store i8* %37, i8** %38, align 8
  store i32 2, i32* %30, align 8
  br label %44

44:                                               ; preds = %33, %36
  %45 = phi i8* [ %35, %33 ], [ %37, %36 ]
  store i8 1, i8* %26, align 8
  store i8 %1, i8* %45, align 1
  br label %53

46:                                               ; preds = %23
  %47 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %48 = bitcast %union.anon* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, -16
  %51 = sext i8 %1 to i64
  %52 = or i64 %50, %51
  store i64 %52, i64* %48, align 8
  br label %53

53:                                               ; preds = %44, %46
  br i1 %3, label %54, label %57

54:                                               ; preds = %53
  %55 = load i32, i32* %17, align 4
  %56 = add nsw i32 %55, %25
  store i32 %56, i32* %17, align 4
  br label %57

57:                                               ; preds = %7, %6, %11, %54, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity9shiftLeftEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %8, label %48

8:                                                ; preds = %2
  %9 = add nsw i32 %7, %1
  %10 = icmp sgt i32 %9, 16
  br i1 %10, label %11, label %79

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %13 = bitcast %union.anon* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call noalias i8* @uprv_malloc_69(i64 40) #16
  %16 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 40, i32* %17, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 40, i1 false) #17
  store i8 1, i8* %3, align 8
  %18 = load i32, i32* %6, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %48

20:                                               ; preds = %11
  %21 = getelementptr inbounds %union.anon, %union.anon* %12, i64 0, i32 0, i32 0
  %22 = trunc i64 %14 to i8
  %23 = and i8 %22, 15
  store i8 %23, i8* %15, align 1
  %24 = icmp eq i32 %18, 1
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = lshr i64 %14, 4
  %27 = trunc i64 %26 to i8
  %28 = and i8 %27, 15
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  store i8 %28, i8* %29, align 1
  %30 = load i32, i32* %6, align 8
  %31 = icmp sgt i32 %30, 2
  br i1 %31, label %32, label %44

32:                                               ; preds = %25, %32
  %33 = phi i64 [ %40, %32 ], [ 2, %25 ]
  %34 = phi i64 [ %36, %32 ], [ %26, %25 ]
  %35 = load i8*, i8** %21, align 8
  %36 = lshr i64 %34, 4
  %37 = trunc i64 %36 to i8
  %38 = and i8 %37, 15
  %39 = getelementptr inbounds i8, i8* %35, i64 %33
  store i8 %38, i8* %39, align 1
  %40 = add nuw nsw i64 %33, 1
  %41 = load i32, i32* %6, align 8
  %42 = sext i32 %41 to i64
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %32, label %44

44:                                               ; preds = %32, %25
  %45 = phi i32 [ %30, %25 ], [ %41, %32 ]
  %46 = load i8, i8* %3, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %79, label %48

48:                                               ; preds = %2, %20, %11, %44
  %49 = phi i32 [ %18, %11 ], [ %45, %44 ], [ 1, %20 ], [ %7, %2 ]
  %50 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %51 = add nsw i32 %49, %1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %51, %55
  br i1 %56, label %57, label %68

57:                                               ; preds = %53
  %58 = shl nsw i32 %51, 1
  %59 = sext i32 %58 to i64
  %60 = tail call noalias i8* @uprv_malloc_69(i64 %59) #16
  %61 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = sext i32 %55 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %62, i64 %63, i1 false) #17
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = sub nsw i32 %51, %55
  %66 = sext i32 %65 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %64, i8 0, i64 %66, i1 false) #17
  tail call void @uprv_free_69(i8* %62) #17
  store i8* %60, i8** %61, align 8
  store i32 %58, i32* %54, align 8
  %67 = load i32, i32* %50, align 8
  br label %68

68:                                               ; preds = %57, %53
  %69 = phi i32 [ %67, %57 ], [ %49, %53 ]
  store i8 1, i8* %3, align 8
  br label %70

70:                                               ; preds = %48, %68
  %71 = phi i32 [ %49, %48 ], [ %69, %68 ]
  %72 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = sext i32 %1 to i64
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = sext i32 %71 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %73, i64 %76, i1 false)
  %77 = load i8*, i8** %72, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %77, i8 0, i64 %74, i1 false)
  %78 = load i32, i32* %50, align 8
  br label %87

79:                                               ; preds = %8, %44
  %80 = phi i32 [ %45, %44 ], [ %7, %8 ]
  %81 = shl nsw i32 %1, 2
  %82 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %83 = bitcast %union.anon* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = zext i32 %81 to i64
  %86 = shl i64 %84, %85
  store i64 %86, i64* %83, align 8
  br label %87

87:                                               ; preds = %79, %70
  %88 = phi i32 [ %80, %79 ], [ %78, %70 ]
  %89 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = sub nsw i32 %90, %1
  store i32 %91, i32* %89, align 4
  %92 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %93 = add nsw i32 %88, %1
  store i32 %93, i32* %92, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number4impl15DecimalQuantity13toPlainStringEv(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 64, i1 false)
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 5
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %15)
  store i16 45, i16* %4, align 2
  %16 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %4, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %15)
  br label %17

17:                                               ; preds = %2, %14
  %18 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %22)
  store i16 48, i16* %3, align 2
  %23 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %3, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %22)
  br label %130

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 12
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, %26
  %30 = add i32 %29, %19
  %31 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 10
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %30, %32
  %34 = select i1 %33, i32 %32, i32 %30
  %35 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 11
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %29, %36
  %38 = select i1 %37, i32 %36, i32 %29
  %39 = icmp slt i32 %34, 1
  br i1 %39, label %40, label %44

40:                                               ; preds = %24
  %41 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %41)
  store i16 48, i16* %5, align 2
  %42 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %5, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %41)
  %43 = add nsw i32 %34, -1
  br label %83

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %46 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %47 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %48 = bitcast %union.anon* %47 to i64*
  br label %49

49:                                               ; preds = %44, %77
  %50 = phi i32 [ %34, %44 ], [ %51, %77 ]
  %51 = add nsw i32 %50, -1
  %52 = load i32, i32* %25, align 4
  %53 = sub nsw i32 %51, %52
  %54 = load i32, i32* %27, align 4
  %55 = sub i32 %53, %54
  %56 = load i8, i8* %45, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %49
  %59 = icmp slt i32 %55, 0
  br i1 %59, label %77, label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %18, align 8
  %62 = icmp sgt i32 %61, %55
  br i1 %62, label %63, label %77

63:                                               ; preds = %60
  %64 = load i8*, i8** %46, align 8
  %65 = sext i32 %55 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = load i8, i8* %66, align 1
  br label %77

68:                                               ; preds = %49
  %69 = icmp ugt i32 %55, 15
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  %71 = load i64, i64* %48, align 8
  %72 = shl nsw i32 %55, 2
  %73 = zext i32 %72 to i64
  %74 = lshr i64 %71, %73
  %75 = trunc i64 %74 to i8
  %76 = and i8 %75, 15
  br label %77

77:                                               ; preds = %58, %60, %63, %68, %70
  %78 = phi i8 [ %67, %63 ], [ %76, %70 ], [ 0, %60 ], [ 0, %58 ], [ 0, %68 ]
  %79 = sext i8 %78 to i32
  %80 = add nsw i32 %79, 48
  %81 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %80) #17
  %82 = icmp sgt i32 %51, 0
  br i1 %82, label %49, label %83

83:                                               ; preds = %77, %40
  %84 = phi i32 [ %43, %40 ], [ -1, %77 ]
  %85 = icmp slt i32 %38, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %83
  %87 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %87)
  store i16 46, i16* %6, align 2
  %88 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %6, i32 0, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %87)
  br label %89

89:                                               ; preds = %86, %83
  %90 = icmp slt i32 %84, %38
  br i1 %90, label %130, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %93 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %94 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %95 = bitcast %union.anon* %94 to i64*
  br label %96

96:                                               ; preds = %123, %91
  %97 = phi i32 [ %84, %91 ], [ %128, %123 ]
  %98 = load i32, i32* %25, align 4
  %99 = sub nsw i32 %97, %98
  %100 = load i32, i32* %27, align 4
  %101 = sub i32 %99, %100
  %102 = load i8, i8* %92, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %114, label %104

104:                                              ; preds = %96
  %105 = icmp slt i32 %101, 0
  br i1 %105, label %123, label %106

106:                                              ; preds = %104
  %107 = load i32, i32* %18, align 8
  %108 = icmp sgt i32 %107, %101
  br i1 %108, label %109, label %123

109:                                              ; preds = %106
  %110 = load i8*, i8** %93, align 8
  %111 = sext i32 %101 to i64
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = load i8, i8* %112, align 1
  br label %123

114:                                              ; preds = %96
  %115 = icmp ugt i32 %101, 15
  br i1 %115, label %123, label %116

116:                                              ; preds = %114
  %117 = load i64, i64* %95, align 8
  %118 = shl nsw i32 %101, 2
  %119 = zext i32 %118 to i64
  %120 = lshr i64 %117, %119
  %121 = trunc i64 %120 to i8
  %122 = and i8 %121, 15
  br label %123

123:                                              ; preds = %104, %106, %109, %114, %116
  %124 = phi i8 [ %113, %109 ], [ %122, %116 ], [ 0, %106 ], [ 0, %104 ], [ 0, %114 ]
  %125 = sext i8 %124 to i32
  %126 = add nsw i32 %125, 48
  %127 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %126) #17
  %128 = add nsw i32 %97, -1
  %129 = icmp sgt i32 %97, %38
  br i1 %129, label %96, label %130

130:                                              ; preds = %123, %89, %21
  ret void
}

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

declare void @_ZN6icu_6913UnicodeStringC1EPKDsi(%"class.icu_69::UnicodeString"*, i16*, i32) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i64 @div(i32, i32) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity14ensureCapacityEi(%"class.icu_69::number::impl::DecimalQuantity"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = sext i32 %1 to i64
  %10 = tail call noalias i8* @uprv_malloc_69(i64 %9) #16
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 %1, i32* %12, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 %9, i1 false)
  br label %27

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %15, %1
  br i1 %16, label %17, label %27

17:                                               ; preds = %13
  %18 = shl nsw i32 %1, 1
  %19 = sext i32 %18 to i64
  %20 = tail call noalias i8* @uprv_malloc_69(i64 %19) #16
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = sext i32 %15 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = sub nsw i32 %1, %15
  %26 = sext i32 %25 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 0, i64 %26, i1 false)
  tail call void @uprv_free_69(i8* %22) #17
  store i8* %20, i8** %21, align 8
  store i32 %18, i32* %14, align 8
  br label %27

27:                                               ; preds = %13, %17, %8
  store i8 1, i8* %5, align 8
  br label %28

28:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity13switchStorageEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %69, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  br i1 %8, label %11, label %35

11:                                               ; preds = %5
  %12 = sext i32 %7 to i64
  %13 = add nsw i64 %12, -1
  %14 = and i64 %12, 3
  %15 = icmp ult i64 %13, 3
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = sub nsw i64 %12, %14
  br label %39

18:                                               ; preds = %39, %11
  %19 = phi i64 [ undef, %11 ], [ %66, %39 ]
  %20 = phi i64 [ %12, %11 ], [ %61, %39 ]
  %21 = phi i64 [ 0, %11 ], [ %66, %39 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %18, %23
  %24 = phi i64 [ %27, %23 ], [ %20, %18 ]
  %25 = phi i64 [ %32, %23 ], [ %21, %18 ]
  %26 = phi i64 [ %33, %23 ], [ %14, %18 ]
  %27 = add nsw i64 %24, -1
  %28 = shl i64 %25, 4
  %29 = getelementptr inbounds i8, i8* %10, i64 %27
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i64
  %32 = or i64 %28, %31
  %33 = add i64 %26, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %23, !llvm.loop !10

35:                                               ; preds = %18, %23, %5
  %36 = phi i64 [ 0, %5 ], [ %19, %18 ], [ %32, %23 ]
  %37 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  tail call void @uprv_free_69(i8* %10) #17
  %38 = bitcast %union.anon* %37 to i64*
  store i64 %36, i64* %38, align 8
  store i8 0, i8* %2, align 8
  br label %97

39:                                               ; preds = %39, %16
  %40 = phi i64 [ %12, %16 ], [ %61, %39 ]
  %41 = phi i64 [ 0, %16 ], [ %66, %39 ]
  %42 = phi i64 [ %17, %16 ], [ %67, %39 ]
  %43 = add nsw i64 %40, -1
  %44 = shl i64 %41, 4
  %45 = getelementptr inbounds i8, i8* %10, i64 %43
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i64
  %48 = or i64 %44, %47
  %49 = add nsw i64 %40, -2
  %50 = shl i64 %48, 4
  %51 = getelementptr inbounds i8, i8* %10, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i64
  %54 = or i64 %50, %53
  %55 = add nsw i64 %40, -3
  %56 = shl i64 %54, 4
  %57 = getelementptr inbounds i8, i8* %10, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i64
  %60 = or i64 %56, %59
  %61 = add nsw i64 %40, -4
  %62 = shl i64 %60, 4
  %63 = getelementptr inbounds i8, i8* %10, i64 %61
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i64
  %66 = or i64 %62, %65
  %67 = add i64 %42, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %18, label %39

69:                                               ; preds = %1
  %70 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %71 = bitcast %union.anon* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = tail call noalias i8* @uprv_malloc_69(i64 40) #16
  %74 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 40, i32* %75, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %73, i8 0, i64 40, i1 false) #17
  store i8 1, i8* %2, align 8
  %76 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %77 = load i32, i32* %76, align 8
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %97

79:                                               ; preds = %69
  %80 = getelementptr inbounds %union.anon, %union.anon* %70, i64 0, i32 0, i32 0
  %81 = trunc i64 %72 to i8
  %82 = and i8 %81, 15
  store i8 %82, i8* %73, align 1
  %83 = load i32, i32* %76, align 8
  %84 = icmp sgt i32 %83, 1
  br i1 %84, label %85, label %97

85:                                               ; preds = %79, %85
  %86 = phi i64 [ %93, %85 ], [ 1, %79 ]
  %87 = phi i64 [ %88, %85 ], [ %72, %79 ]
  %88 = lshr i64 %87, 4
  %89 = load i8*, i8** %80, align 8
  %90 = trunc i64 %88 to i8
  %91 = and i8 %90, 15
  %92 = getelementptr inbounds i8, i8* %89, i64 %86
  store i8 %91, i8* %92, align 1
  %93 = add nuw nsw i64 %86, 1
  %94 = load i32, i32* %76, align 8
  %95 = sext i32 %94 to i64
  %96 = icmp slt i64 %93, %95
  br i1 %96, label %85, label %97

97:                                               ; preds = %85, %79, %69, %35
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl15DecimalQuantity14ensureCapacityEv(%"class.icu_69::number::impl::DecimalQuantity"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call noalias i8* @uprv_malloc_69(i64 40) #16
  %7 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  store i32 40, i32* %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 40, i1 false) #17
  br label %21

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 40
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = tail call noalias i8* @uprv_malloc_69(i64 80) #16
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = sext i32 %11 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %16, i64 %17, i1 false) #17
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = sub nsw i32 40, %11
  %20 = sext i32 %19 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 %20, i1 false) #17
  tail call void @uprv_free_69(i8* %16) #17
  store i8* %14, i8** %15, align 8
  store i32 80, i32* %10, align 8
  br label %21

21:                                               ; preds = %5, %9, %13
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16* @_ZNK6icu_696number4impl15DecimalQuantity11checkHealthEv(%"class.icu_69::number::impl::DecimalQuantity"* readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %4, label %57, label %8

8:                                                ; preds = %1
  br i1 %7, label %110, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %6, %11
  br i1 %12, label %110, label %13

13:                                               ; preds = %9
  %14 = icmp slt i32 %6, 1
  br i1 %14, label %110, label %15

15:                                               ; preds = %13
  %16 = add nsw i32 %6, -1
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %110, label %23

23:                                               ; preds = %15
  %24 = load i8, i8* %18, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %110, label %26

26:                                               ; preds = %23
  %27 = zext i32 %6 to i64
  %28 = icmp sgt i8 %24, 9
  br i1 %28, label %110, label %39

29:                                               ; preds = %39
  %30 = icmp eq i64 %43, %27
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %18, i64 %43
  %33 = load i8, i8* %32, align 1
  %34 = icmp sgt i8 %33, 9
  br i1 %34, label %110, label %39

35:                                               ; preds = %29
  %36 = icmp slt i32 %6, %11
  br i1 %36, label %37, label %110

37:                                               ; preds = %35
  %38 = sext i32 %6 to i64
  br label %44

39:                                               ; preds = %26, %31
  %40 = phi i64 [ %43, %31 ], [ 0, %26 ]
  %41 = phi i8 [ %33, %31 ], [ %24, %26 ]
  %42 = icmp slt i8 %41, 0
  %43 = add nuw nsw i64 %40, 1
  br i1 %42, label %110, label %29

44:                                               ; preds = %53, %37
  %45 = phi i64 [ %38, %37 ], [ %54, %53 ]
  %46 = icmp sgt i64 %45, -1
  %47 = icmp slt i64 %45, %38
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, i8* %18, i64 %45
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %110

53:                                               ; preds = %44, %49
  %54 = add nsw i64 %45, 1
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %11, %55
  br i1 %56, label %110, label %44

57:                                               ; preds = %1
  br i1 %7, label %58, label %63

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %60 = bitcast %union.anon* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %84, label %110

63:                                               ; preds = %57
  %64 = icmp sgt i32 %6, 16
  br i1 %64, label %110, label %65

65:                                               ; preds = %63
  %66 = add nsw i32 %6, -1
  %67 = icmp ugt i32 %66, 15
  br i1 %67, label %110, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %70 = bitcast %union.anon* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = shl nsw i32 %66, 2
  %73 = zext i32 %72 to i64
  %74 = shl i64 15, %73
  %75 = and i64 %71, %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %110, label %77

77:                                               ; preds = %68
  %78 = and i64 %71, 15
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %110, label %80

80:                                               ; preds = %77
  %81 = zext i32 %6 to i64
  br label %86

82:                                               ; preds = %95
  %83 = icmp slt i32 %6, 16
  br i1 %83, label %84, label %110

84:                                               ; preds = %58, %82
  %85 = phi i64 [ %71, %82 ], [ 0, %58 ]
  br label %98

86:                                               ; preds = %95, %80
  %87 = phi i64 [ 0, %80 ], [ %96, %95 ]
  %88 = icmp ugt i64 %87, 15
  br i1 %88, label %95, label %89

89:                                               ; preds = %86
  %90 = shl i64 %87, 2
  %91 = and i64 %90, 4294967292
  %92 = lshr i64 %71, %91
  %93 = and i64 %92, 14
  %94 = icmp ugt i64 %93, 9
  br i1 %94, label %110, label %95

95:                                               ; preds = %89, %86
  %96 = add nuw nsw i64 %87, 1
  %97 = icmp eq i64 %96, %81
  br i1 %97, label %82, label %86

98:                                               ; preds = %107, %84
  %99 = phi i32 [ %108, %107 ], [ %6, %84 ]
  %100 = icmp ugt i32 %99, 15
  br i1 %100, label %107, label %101

101:                                              ; preds = %98
  %102 = shl nsw i32 %99, 2
  %103 = zext i32 %102 to i64
  %104 = shl i64 15, %103
  %105 = and i64 %85, %104
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %98, %101
  %108 = add i32 %99, 1
  %109 = icmp eq i32 %108, 16
  br i1 %109, label %110, label %98

110:                                              ; preds = %31, %39, %49, %53, %89, %101, %107, %26, %35, %82, %65, %13, %23, %15, %9, %77, %68, %63, %58, %8
  %111 = phi i16* [ getelementptr inbounds ([39 x i16], [39 x i16]* @.str.5, i64 0, i64 0), %8 ], [ getelementptr inbounds ([47 x i16], [47 x i16]* @.str.12, i64 0, i64 0), %58 ], [ getelementptr inbounds ([33 x i16], [33 x i16]* @.str.13, i64 0, i64 0), %63 ], [ getelementptr inbounds ([44 x i16], [44 x i16]* @.str.14, i64 0, i64 0), %68 ], [ getelementptr inbounds ([45 x i16], [45 x i16]* @.str.8, i64 0, i64 0), %77 ], [ getelementptr inbounds ([45 x i16], [45 x i16]* @.str.8, i64 0, i64 0), %23 ], [ getelementptr inbounds ([44 x i16], [44 x i16]* @.str.7, i64 0, i64 0), %15 ], [ getelementptr inbounds ([39 x i16], [39 x i16]* @.str.6, i64 0, i64 0), %9 ], [ getelementptr inbounds ([44 x i16], [44 x i16]* @.str.7, i64 0, i64 0), %13 ], [ getelementptr inbounds ([44 x i16], [44 x i16]* @.str.14, i64 0, i64 0), %65 ], [ null, %82 ], [ null, %35 ], [ getelementptr inbounds ([33 x i16], [33 x i16]* @.str.9, i64 0, i64 0), %26 ], [ getelementptr inbounds ([40 x i16], [40 x i16]* @.str.17, i64 0, i64 0), %101 ], [ null, %107 ], [ getelementptr inbounds ([27 x i16], [27 x i16]* @.str.15, i64 0, i64 0), %89 ], [ null, %53 ], [ getelementptr inbounds ([46 x i16], [46 x i16]* @.str.11, i64 0, i64 0), %49 ], [ getelementptr inbounds ([28 x i16], [28 x i16]* @.str.10, i64 0, i64 0), %39 ], [ getelementptr inbounds ([33 x i16], [33 x i16]* @.str.9, i64 0, i64 0), %31 ]
  ret i16* %111
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantityeqERKS2_(%"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly, %"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly dereferenceable(72)) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %123

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %123

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 5
  %16 = load i8, i8* %15, align 4
  %17 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 5
  %18 = load i8, i8* %17, align 4
  %19 = icmp eq i8 %16, %18
  br i1 %19, label %20, label %123

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 10
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 10
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %123

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 11
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %123

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 6
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 6
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %34, %36
  br i1 %37, label %38, label %123

38:                                               ; preds = %32
  %39 = icmp eq i32 %10, 0
  br i1 %39, label %123, label %40

40:                                               ; preds = %38
  %41 = icmp eq i8 %34, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 8
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 8
  %46 = load double, double* %45, align 8
  %47 = fcmp oeq double %44, %46
  br i1 %47, label %48, label %123

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 9
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 9
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br label %123

54:                                               ; preds = %40
  %55 = add nsw i32 %10, %4
  %56 = icmp sgt i32 %22, %55
  %57 = select i1 %56, i32 %22, i32 %55
  %58 = icmp slt i32 %28, %4
  %59 = select i1 %58, i32 %28, i32 %4
  %60 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 14
  %61 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13, i32 0, i32 0
  %62 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %0, i64 0, i32 13
  %63 = bitcast %union.anon* %62 to i64*
  %64 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %65 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %66 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %67 = bitcast %union.anon* %66 to i64*
  %68 = sext i32 %57 to i64
  %69 = sext i32 %4 to i64
  %70 = sext i32 %10 to i64
  %71 = sext i32 %59 to i64
  br label %72

72:                                               ; preds = %120, %54
  %73 = phi i64 [ %74, %120 ], [ %68, %54 ]
  %74 = add nsw i64 %73, -1
  %75 = icmp sgt i64 %73, %71
  br i1 %75, label %76, label %123

76:                                               ; preds = %72
  %77 = sub nsw i64 %74, %69
  %78 = load i8, i8* %60, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %76
  %81 = icmp sgt i64 %77, -1
  %82 = icmp slt i64 %77, %70
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %98

84:                                               ; preds = %80
  %85 = load i8*, i8** %61, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 %77
  %87 = load i8, i8* %86, align 1
  br label %98

88:                                               ; preds = %76
  %89 = trunc i64 %77 to i32
  %90 = icmp ugt i32 %89, 15
  br i1 %90, label %98, label %91

91:                                               ; preds = %88
  %92 = load i64, i64* %63, align 8
  %93 = shl i64 %77, 2
  %94 = and i64 %93, 4294967292
  %95 = lshr i64 %92, %94
  %96 = trunc i64 %95 to i8
  %97 = and i8 %96, 15
  br label %98

98:                                               ; preds = %80, %84, %88, %91
  %99 = phi i8 [ %87, %84 ], [ %97, %91 ], [ 0, %80 ], [ 0, %88 ]
  %100 = load i8, i8* %64, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %98
  %103 = icmp sgt i64 %77, -1
  %104 = icmp slt i64 %77, %70
  %105 = and i1 %103, %104
  br i1 %105, label %106, label %120

106:                                              ; preds = %102
  %107 = load i8*, i8** %65, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 %77
  %109 = load i8, i8* %108, align 1
  br label %120

110:                                              ; preds = %98
  %111 = trunc i64 %77 to i32
  %112 = icmp ugt i32 %111, 15
  br i1 %112, label %120, label %113

113:                                              ; preds = %110
  %114 = load i64, i64* %67, align 8
  %115 = shl i64 %77, 2
  %116 = and i64 %115, 4294967292
  %117 = lshr i64 %114, %116
  %118 = trunc i64 %117 to i8
  %119 = and i8 %118, 15
  br label %120

120:                                              ; preds = %102, %106, %110, %113
  %121 = phi i8 [ %109, %106 ], [ %119, %113 ], [ 0, %102 ], [ 0, %110 ]
  %122 = icmp eq i8 %99, %121
  br i1 %122, label %72, label %123

123:                                              ; preds = %72, %120, %32, %38, %48, %42, %26, %20, %14, %8, %2
  %124 = phi i1 [ false, %32 ], [ true, %38 ], [ false, %42 ], [ %53, %48 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ true, %72 ], [ false, %120 ]
  ret i1 %124
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number4impl15DecimalQuantity8toStringEv(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::number::impl::DecimalQuantity"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::MaybeStackArray.4", align 8
  %4 = alloca [100 x i8], align 16
  %5 = bitcast %"class.icu_69::MaybeStackArray.4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  %9 = getelementptr inbounds %"class.icu_69::MaybeStackArray.4", %"class.icu_69::MaybeStackArray.4"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray.4", %"class.icu_69::MaybeStackArray.4"* %3, i64 0, i32 3, i64 0
  store i8* %10, i8** %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray.4", %"class.icu_69::MaybeStackArray.4"* %3, i64 0, i32 1
  store i32 30, i32* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray.4", %"class.icu_69::MaybeStackArray.4"* %3, i64 0, i32 2
  store i8 0, i8* %12, align 4
  %13 = icmp sgt i32 %7, 29
  br i1 %13, label %14, label %24

14:                                               ; preds = %2
  %15 = sext i32 %8 to i64
  %16 = call noalias i8* @uprv_malloc_69(i64 %15) #16
  %17 = icmp eq i8* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = load i8, i8* %12, align 4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = load i8*, i8** %9, align 8
  call void @uprv_free_69(i8* %22) #17
  br label %23

23:                                               ; preds = %21, %18
  store i8* %16, i8** %9, align 8
  store i32 %8, i32* %11, align 8
  store i8 1, i8* %12, align 4
  br label %24

24:                                               ; preds = %2, %14, %23
  %25 = load i32, i32* %6, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %29 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13, i32 0, i32 0
  %30 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 13
  %31 = bitcast %union.anon* %30 to i64*
  br label %60

32:                                               ; preds = %86, %24
  %33 = phi i32 [ %25, %24 ], [ %92, %86 ]
  %34 = sext i32 %33 to i64
  %35 = load i8*, i8** %9, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %37) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 100, i1 false)
  %38 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 10
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 14
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)
  %46 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 5
  %47 = load i8, i8* %46, align 4
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)
  %51 = load i32, i32* %6, align 8
  %52 = icmp eq i32 %51, 0
  %53 = load i8*, i8** %9, align 8
  %54 = select i1 %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8* %53
  %55 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %1, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %37, i64 100, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 %39, i32 %41, i8* %45, i8* %50, i8* %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i32 %56) #17
  call void @_ZN6icu_6913UnicodeStringC1EPKciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %0, i8* nonnull %37, i32 -1, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %37) #17
  %58 = load i8, i8* %12, align 4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %97, label %95

60:                                               ; preds = %27, %86
  %61 = phi i64 [ 0, %27 ], [ %91, %86 ]
  %62 = phi i32 [ %25, %27 ], [ %92, %86 ]
  %63 = trunc i64 %61 to i32
  %64 = xor i32 %63, -1
  %65 = add i32 %62, %64
  %66 = load i8, i8* %28, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %60
  %69 = icmp sgt i32 %65, -1
  %70 = icmp sgt i32 %62, %65
  %71 = and i1 %69, %70
  br i1 %71, label %72, label %86

72:                                               ; preds = %68
  %73 = load i8*, i8** %29, align 8
  %74 = sext i32 %65 to i64
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = load i8, i8* %75, align 1
  br label %86

77:                                               ; preds = %60
  %78 = icmp ugt i32 %65, 15
  br i1 %78, label %86, label %79

79:                                               ; preds = %77
  %80 = load i64, i64* %31, align 8
  %81 = shl nsw i32 %65, 2
  %82 = zext i32 %81 to i64
  %83 = lshr i64 %80, %82
  %84 = trunc i64 %83 to i8
  %85 = and i8 %84, 15
  br label %86

86:                                               ; preds = %68, %72, %77, %79
  %87 = phi i8 [ %76, %72 ], [ %85, %79 ], [ 0, %68 ], [ 0, %77 ]
  %88 = add i8 %87, 48
  %89 = load i8*, i8** %9, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %61
  store i8 %88, i8* %90, align 1
  %91 = add nuw nsw i64 %61, 1
  %92 = load i32, i32* %6, align 8
  %93 = sext i32 %92 to i64
  %94 = icmp slt i64 %91, %93
  br i1 %94, label %60, label %32

95:                                               ; preds = %32
  %96 = load i8*, i8** %9, align 8
  call void @uprv_free_69(i8* %96) #17
  br label %97

97:                                               ; preds = %32, %95
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #14

declare void @_ZN6icu_6913UnicodeStringC1EPKciNS0_10EInvariantE(%"class.icu_69::UnicodeString"*, i8*, i32, i32) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #15

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"*, i16*, i32, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString7replaceEiii(%"class.icu_69::UnicodeString"*, i32, i32, i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind allocsize(0) }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6, !4}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
!9 = !{i32 -2145742341}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
