; ModuleID = '../../third_party/blink/renderer/platform/graphics/compositing/property_tree_manager.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/compositing/property_tree_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::PropertyTreeManager" = type { %"class.blink::PropertyTreeManagerClient"*, %"class.cc::PropertyTrees"*, %"class.cc::Layer"*, %"class.blink::LayerListBuilder"*, i32, %"struct.blink::PropertyTreeManager::EffectState", %"class.WTF::Vector.542", %"class.WTF::HashSet" }
%"struct.blink::PropertyTreeManager::EffectState" = type { i32, i32, %"class.blink::EffectPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, i8 }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr.474, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.473" }
%"class.base::RefCounted.473" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.474 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.475, %class.scoped_refptr.476, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.477", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.475 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.505" }
%"class.blink::PaintPropertyNode.505" = type { %"class.WTF::RefCounted.506", i8, i8, %class.scoped_refptr.475, i32, i32 }
%"class.WTF::RefCounted.506" = type { %"class.base::RefCounted.507" }
%"class.base::RefCounted.507" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.476 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.483" }
%"class.blink::PaintPropertyNode.483" = type { %"class.WTF::RefCounted.484", i8, i8, %class.scoped_refptr.476, i32, i32 }
%"class.WTF::RefCounted.484" = type { %"class.base::RefCounted.485" }
%"class.base::RefCounted.485" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.43" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.36", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.35, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.35 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.38" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.53" }
%"class.base::internal::flat_tree.53" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { i32*, i32*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i32* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.502" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.475, %"class.absl::optional.486", %class.scoped_refptr.491, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.486" = type { %"class.absl::optional_internal::optional_data.487" }
%"class.absl::optional_internal::optional_data.487" = type { %"class.absl::optional_internal::optional_data_base.488" }
%"class.absl::optional_internal::optional_data_base.488" = type { %"class.absl::optional_internal::optional_data_dtor_base.489" }
%"class.absl::optional_internal::optional_data_dtor_base.489" = type { i8, [3 x i8], %union.anon.490 }
%union.anon.490 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%class.scoped_refptr.491 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.500", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.492, i32, %"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155", i8, i8 }>
%class.sk_sp.492 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.493, %class.SkTDArray.494, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.493 = type { i8*, i32, i32 }
%class.SkTDArray.494 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.495 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.155" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.495 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.496", [3 x i8] }
%"struct.std::__1::atomic.496" = type { %"struct.std::__1::__atomic_base.497" }
%"struct.std::__1::__atomic_base.497" = type { %"struct.std::__1::__cxx_atomic_impl.498" }
%"struct.std::__1::__cxx_atomic_impl.498" = type { %"struct.std::__1::__cxx_atomic_base_impl.499" }
%"struct.std::__1::__cxx_atomic_base_impl.499" = type { i8 }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.WTF::RefCounted.500" = type { %"class.base::RefCounted.501" }
%"class.base::RefCounted.501" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.521" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.514, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.515", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.508" }
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.514 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.549", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.549" = type { %"class.WTF::RefCounted.550", i8, i8, %class.scoped_refptr.514, i32, i32 }
%"class.WTF::RefCounted.550" = type { %"class.base::RefCounted.551" }
%"class.base::RefCounted.551" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.118" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.123", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.125" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.530", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.WTF::Vector.542" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { %"struct.blink::PropertyTreeManager::EffectState"*, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::PropertyTreeManagerClient" = type { i32 (...)** }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map", %"class.base::flat_map", %"class.base::flat_map", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type <{ %"struct.cc::ElementId", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.std::__1::vector.22" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.1", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.3" }
%"struct.cc::TransformNode" = type { i32, i32, i32, %"struct.cc::ElementId", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.gfx::Vector2dF", %"class.gfx::Transform", i32, i32, i24, %"class.gfx::ScrollOffset", %"class.gfx::Vector2dF", float, %"struct.cc::ElementId" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.17" }
%"struct.cc::TransformCachedNodeData" = type { %"class.gfx::Transform", %"class.gfx::Transform", i8, [3 x i8] }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.24" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.29", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.84" }
%"class.cc::PropertyTree.29" = type { i32 (...)**, %"class.std::__1::vector.30", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.61" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.48", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { %"class.gfx::RRectF" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::unique_ptr.86"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.95" }
%"class.cc::PropertyTree.95" = type { i32 (...)**, %"class.std::__1::vector.96", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.110" }
%"struct.cc::ClipNode" = type <{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], %"class.base::StackVector", %"class.gfx::RectF", %"class.absl::optional.105", i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.100" }
%"struct.base::StackAllocator<cc::ClipRectData, 3>::Source" = type { [72 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"*, %"class.std::__1::__compressed_pair.102" }
%"struct.cc::ClipRectData" = type { i32, %"struct.cc::ConditionalClip" }
%"struct.cc::ConditionalClip" = type { i8, %"class.gfx::RectF" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.cc::ClipRectData"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.base::StackAllocator" }
%"class.absl::optional.105" = type { %"class.absl::optional_internal::optional_data.106" }
%"class.absl::optional_internal::optional_data.106" = type { %"class.absl::optional_internal::optional_data_base.107" }
%"class.absl::optional_internal::optional_data_base.107" = type { %"class.absl::optional_internal::optional_data_dtor_base.108" }
%"class.absl::optional_internal::optional_data_dtor_base.108" = type { i8, %union.anon.109 }
%union.anon.109 = type { %"class.cc::ClipExpander" }
%"class.cc::ClipExpander" = type { i32 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.115", i32, %"class.base::flat_map.135", %"class.base::flat_map.145", %"class.base::WeakPtr" }
%"class.cc::PropertyTree.115" = type { i32 (...)**, %"class.std::__1::vector.116", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.130" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.118", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.135" = type { %"class.base::internal::flat_tree.136" }
%"class.base::internal::flat_tree.136" = type { %"class.std::__1::vector.137" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"struct.std::__1::pair.139"*, %"struct.std::__1::pair.139"*, %"class.std::__1::__compressed_pair.140" }
%"struct.std::__1::pair.139" = type opaque
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::pair.139"* }
%"class.base::flat_map.145" = type { %"class.base::internal::flat_tree.146" }
%"class.base::internal::flat_tree.146" = type { %"class.std::__1::vector.147" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"struct.std::__1::pair.149"*, %"struct.std::__1::pair.149"*, %"class.std::__1::__compressed_pair.150" }
%"struct.std::__1::pair.149" = type opaque
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::pair.149"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.155" }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.160", %"class.std::__1::vector.167" }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.162" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"class.std::__1::vector.169"*, %"class.std::__1::vector.169"*, %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::vector.169" = type opaque
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::vector.169"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.433", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.447" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.185", %class.scoped_refptr.186, %"class.std::__1::unique_ptr.187", i32, %"class.std::__1::unique_ptr.193", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", i32, %"class.std::__1::unique_ptr.211", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.248, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.254", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.260, %"class.base::flat_map.261", %"class.base::internal::flat_tree.271", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.302", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.328", %"class.std::__1::unordered_map.336", %"class.std::__1::vector.360", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.370", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.391", %"class.std::__1::vector.397", %"class.base::flat_map.405", %"class.base::WeakPtrFactory.415" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.175", %class.scoped_refptr.183 }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.std::__1::unique_ptr.177"*, %"class.std::__1::unique_ptr.177"*, %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::unique_ptr.177" = type opaque
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::unique_ptr.177"* }
%class.scoped_refptr.183 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.184" }>
%"class.base::RefCountedThreadSafe.184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.185" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.186 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.183, %class.scoped_refptr.183 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.217", %"class.std::__1::set" }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.std::__1::unique_ptr.219"*, %"class.std::__1::unique_ptr.219"*, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::unique_ptr.219"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.236, %class.scoped_refptr.237, %class.scoped_refptr.183, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.238", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.236 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.237 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.244 }
%class.scoped_refptr.244 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.base::TimeDelta" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%class.scoped_refptr.248 = type { %"class.cc::Layer"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.249" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%class.scoped_refptr.260 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.261" = type { %"class.base::internal::flat_tree.262" }
%"class.base::internal::flat_tree.262" = type { %"class.std::__1::vector.263" }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %"struct.std::__1::pair.265"*, %"struct.std::__1::pair.265"*, %"class.std::__1::__compressed_pair.266" }
%"struct.std::__1::pair.265" = type opaque
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::pair.265"* }
%"class.base::internal::flat_tree.271" = type { %"class.std::__1::vector.272" }
%"class.std::__1::vector.272" = type { %"class.std::__1::__vector_base.273" }
%"class.std::__1::__vector_base.273" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.302" = type { %"class.std::__1::__hash_table.303" }
%"class.std::__1::__hash_table.303" = type <{ %"class.std::__1::unique_ptr.304", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.322", [4 x i8] }>
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306", %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.std::__1::__hash_node_base.307"** }
%"struct.std::__1::__hash_node_base.307" = type { %"struct.std::__1::__hash_node_base.307"* }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::__bucket_list_deallocator.309" }
%"class.std::__1::__bucket_list_deallocator.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.std::__1::__hash_node_base.307" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"struct.std::__1::pair.330"*, %"struct.std::__1::pair.330"*, %"class.std::__1::__compressed_pair.331" }
%"struct.std::__1::pair.330" = type opaque
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::pair.330"* }
%"class.std::__1::unordered_map.336" = type { %"class.std::__1::__hash_table.337" }
%"class.std::__1::__hash_table.337" = type <{ %"class.std::__1::unique_ptr.338", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.353", %"class.std::__1::__compressed_pair.356", [4 x i8] }>
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340", %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::__hash_node_base.341"** }
%"struct.std::__1::__hash_node_base.341" = type { %"struct.std::__1::__hash_node_base.341"* }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.std::__1::__bucket_list_deallocator.343" }
%"class.std::__1::__bucket_list_deallocator.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base.341" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.360" = type { %"class.std::__1::__vector_base.361" }
%"class.std::__1::__vector_base.361" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.362" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.base::OnceCallback"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.367" }
%"class.base::OnceCallback.367" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.369", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.369" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.376", %"class.std::__1::vector.383" }
%"class.std::__1::vector.376" = type { %"class.std::__1::__vector_base.377" }
%"class.std::__1::__vector_base.377" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.378" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.383" = type { %"class.std::__1::__vector_base.384" }
%"class.std::__1::__vector_base.384" = type { %"class.std::__1::unique_ptr.385"*, %"class.std::__1::unique_ptr.385"*, %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.677", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.677" = type { %"class.absl::optional_internal::optional_data.678" }
%"class.absl::optional_internal::optional_data.678" = type { %"class.absl::optional_internal::optional_data_base.679" }
%"class.absl::optional_internal::optional_data_base.679" = type { %"class.absl::optional_internal::optional_data_dtor_base.680" }
%"class.absl::optional_internal::optional_data_dtor_base.680" = type { i8, %union.anon.681 }
%union.anon.681 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.std::__1::unique_ptr.385"* }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"class.std::__1::unique_ptr.399"*, %"class.std::__1::unique_ptr.399"*, %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::unique_ptr.399" = type opaque
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::unique_ptr.399"* }
%"class.base::flat_map.405" = type { %"class.base::internal::flat_tree.406" }
%"class.base::internal::flat_tree.406" = type { %"class.std::__1::vector.407" }
%"class.std::__1::vector.407" = type { %"class.std::__1::__vector_base.408" }
%"class.std::__1::__vector_base.408" = type { %"struct.std::__1::pair.409"*, %"struct.std::__1::pair.409"*, %"class.std::__1::__compressed_pair.410" }
%"struct.std::__1::pair.409" = type opaque
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.std::__1::pair.409"* }
%"class.base::WeakPtrFactory.415" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.416", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.416" = type { %"class.std::__1::__vector_base.417" }
%"class.std::__1::__vector_base.417" = type { %class.scoped_refptr.248*, %class.scoped_refptr.248*, %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %class.scoped_refptr.248* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.423" }
%"class.base::flat_map.423" = type { %"class.base::internal::flat_tree.424" }
%"class.base::internal::flat_tree.424" = type { %"class.std::__1::vector.425" }
%"class.std::__1::vector.425" = type { %"class.std::__1::__vector_base.426" }
%"class.std::__1::__vector_base.426" = type { %"struct.std::__1::pair.427"*, %"struct.std::__1::pair.427"*, %"class.std::__1::__compressed_pair.428" }
%"struct.std::__1::pair.427" = type opaque
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"struct.std::__1::pair.427"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.48", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.436" }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.653", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.552, %"class.absl::optional.648", [4 x i8] }>
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%class.scoped_refptr.552 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.553", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.36", %"class.std::__1::vector.634", %"class.std::__1::vector.641", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.553" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.554", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.554" = type { %"class.std::__1::__vector_base.555" }
%"class.std::__1::__vector_base.555" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.561", %"class.std::__1::vector.571", %"class.base::flat_map.585", i8, i8, [6 x i8], %"class.cc::RTree.595", %"class.std::__1::vector.626" }
%"class.base::flat_map.561" = type { %"class.base::internal::flat_tree.562" }
%"class.base::internal::flat_tree.562" = type { %"class.std::__1::vector.563" }
%"class.std::__1::vector.563" = type { %"class.std::__1::__vector_base.564" }
%"class.std::__1::__vector_base.564" = type { %"struct.std::__1::pair.565"*, %"struct.std::__1::pair.565"*, %"class.std::__1::__compressed_pair.566" }
%"struct.std::__1::pair.565" = type opaque
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::pair.565"* }
%"class.std::__1::vector.571" = type { %"class.std::__1::__vector_base.572" }
%"class.std::__1::__vector_base.572" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.580" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.573", i32, i32 }
%"class.std::__1::vector.573" = type { %"class.std::__1::__vector_base.574" }
%"class.std::__1::__vector_base.574" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.575" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.585" = type { %"class.base::internal::flat_tree.586" }
%"class.base::internal::flat_tree.586" = type { %"class.std::__1::vector.587" }
%"class.std::__1::vector.587" = type { %"class.std::__1::__vector_base.588" }
%"class.std::__1::__vector_base.588" = type { %"struct.std::__1::pair.589"*, %"struct.std::__1::pair.589"*, %"class.std::__1::__compressed_pair.590" }
%"struct.std::__1::pair.589" = type { i32, i32 }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"struct.std::__1::pair.589"* }
%"class.cc::RTree.595" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.618", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.608", %"class.absl::optional.613", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.596, %class.sk_sp.599, %"class.gfx::Rect", i32, %class.sk_sp.604, %class.sk_sp.605, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.596, %class.scoped_refptr.606 }
%class.sk_sp.599 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.604 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.605 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.596 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.597, i32, i32 }
%class.sk_sp.597 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.598, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.598 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.606 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.607", [4 x i8] }>
%"class.base::RefCountedThreadSafe.607" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.608" = type { %"class.absl::optional_internal::optional_data.609" }
%"class.absl::optional_internal::optional_data.609" = type { %"class.absl::optional_internal::optional_data_base.610" }
%"class.absl::optional_internal::optional_data_base.610" = type { %"class.absl::optional_internal::optional_data_dtor_base.611" }
%"class.absl::optional_internal::optional_data_dtor_base.611" = type { i8, %union.anon.612 }
%union.anon.612 = type { i64 }
%"class.absl::optional.613" = type { %"class.absl::optional_internal::optional_data.614" }
%"class.absl::optional_internal::optional_data.614" = type { %"class.absl::optional_internal::optional_data_base.615" }
%"class.absl::optional_internal::optional_data_base.615" = type { %"class.absl::optional_internal::optional_data_dtor_base.616" }
%"class.absl::optional_internal::optional_data_dtor_base.616" = type { i8, %union.anon.617 }
%union.anon.617 = type { %"class.gfx::ColorSpace" }
%"class.std::__1::vector.618" = type { %"class.std::__1::__vector_base.619" }
%"class.std::__1::__vector_base.619" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.626" = type { %"class.std::__1::__vector_base.627" }
%"class.std::__1::__vector_base.627" = type { %"struct.std::__1::pair.628"*, %"struct.std::__1::pair.628"*, %"class.std::__1::__compressed_pair.629" }
%"struct.std::__1::pair.628" = type opaque
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"struct.std::__1::pair.628"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.600", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { i8* }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { i64*, i64*, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { i64* }
%"class.std::__1::vector.641" = type { %"class.std::__1::__vector_base.642" }
%"class.std::__1::__vector_base.642" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.643" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.absl::optional.648" = type { %"class.absl::optional_internal::optional_data.649" }
%"class.absl::optional_internal::optional_data.649" = type { %"class.absl::optional_internal::optional_data_base.650" }
%"class.absl::optional_internal::optional_data_base.650" = type { %"class.absl::optional_internal::optional_data_dtor_base.651" }
%"class.absl::optional_internal::optional_data_dtor_base.651" = type { i8, %union.anon.652 }
%union.anon.652 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type opaque
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.436" = type { %"class.std::__1::__vector_base.437" }
%"class.std::__1::__vector_base.437" = type { %"class.std::__1::unique_ptr.438"*, %"class.std::__1::unique_ptr.438"*, %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::unique_ptr.438" = type opaque
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.std::__1::unique_ptr.438"* }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.456", %"class.std::__1::vector.456", %"class.std::__1::vector.463" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.452 }
%union.anon.452 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.456" = type { %"class.std::__1::__vector_base.457" }
%"class.std::__1::__vector_base.457" = type { i8**, i8**, %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { i8** }
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.465" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.blink::LayerListBuilder" = type { i8, %"class.std::__1::vector.416" }
%"class.WTF::Vector.659" = type { %"class.WTF::VectorBuffer.660" }
%"class.WTF::VectorBuffer.660" = type { %"class.WTF::VectorBufferBase.661" }
%"class.WTF::VectorBufferBase.661" = type { %"class.blink::TransformPaintPropertyNode"**, i32, i32 }
%"class.blink::GeometryMapper::Translation2DOrMatrix" = type { %"class.blink::FloatSize", %"class.absl::optional.664" }
%"class.absl::optional.664" = type { %"class.absl::optional_internal::optional_data.665" }
%"class.absl::optional_internal::optional_data.665" = type { %"class.absl::optional_internal::optional_data_base.666" }
%"class.absl::optional_internal::optional_data_base.666" = type { %"class.absl::optional_internal::optional_data_dtor_base.667" }
%"class.absl::optional_internal::optional_data_dtor_base.667" = type { i8, %union.anon.668 }
%union.anon.668 = type { %"class.blink::TransformationMatrix" }
%"class.blink::SynthesizedClip" = type { %"class.cc::ContentLayerClient", %class.scoped_refptr.669, %"class.blink::GeometryMapper::Translation2DOrMatrix", i8, %class.SkRRect, %class.scoped_refptr.491, %"struct.cc::ElementId", %"struct.cc::ElementId" }
%class.scoped_refptr.669 = type { %"class.cc::PictureLayer"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::VectorBufferBase.672" = type { %struct.PendingClip*, i32, i32 }
%struct.PendingClip = type { %"class.blink::ClipPaintPropertyNode"*, i32 }
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZNK5blink16FloatRoundedRectcv7SkRRectEv = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink19PropertyTreeManager11EffectStateELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19PropertyTreeManager11EffectStateEEEmm = comdat any

@__const._ZN5blink19PropertyTreeManager22SetupRootTransformNodeEv.from_screen = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@_ZZN5blink19PropertyTreeManager19SetupRootEffectNodeEvE9unique_id = internal unnamed_addr global i64 0, align 8
@_ZGVZN5blink19PropertyTreeManager19SetupRootEffectNodeEvE9unique_id = internal global i64 0, align 8
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E = external local_unnamed_addr global i8, align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS1_21ClipPaintPropertyNodeEPKNS1_23EffectPaintPropertyNodeEE11PendingClipEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = PendingClip]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19PropertyTreeManager11EffectStateEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PropertyTreeManager::EffectState]\00", align 1

@_ZN5blink19PropertyTreeManagerC1ERNS_25PropertyTreeManagerClientERN2cc13PropertyTreesERNS3_5LayerERNS_16LayerListBuilderEi = hidden unnamed_addr alias void (%"class.blink::PropertyTreeManager"*, %"class.blink::PropertyTreeManagerClient"*, %"class.cc::PropertyTrees"*, %"class.cc::Layer"*, %"class.blink::LayerListBuilder"*, i32), void (%"class.blink::PropertyTreeManager"*, %"class.blink::PropertyTreeManagerClient"*, %"class.cc::PropertyTrees"*, %"class.cc::Layer"*, %"class.blink::LayerListBuilder"*, i32)* @_ZN5blink19PropertyTreeManagerC2ERNS_25PropertyTreeManagerClientERN2cc13PropertyTreesERNS3_5LayerERNS_16LayerListBuilderEi
@_ZN5blink19PropertyTreeManagerD1Ev = hidden unnamed_addr alias void (%"class.blink::PropertyTreeManager"*), void (%"class.blink::PropertyTreeManager"*)* @_ZN5blink19PropertyTreeManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManagerC2ERNS_25PropertyTreeManagerClientERN2cc13PropertyTreesERNS3_5LayerERNS_16LayerListBuilderEi(%"class.blink::PropertyTreeManager"* nocapture, %"class.blink::PropertyTreeManagerClient"* dereferenceable(8), %"class.cc::PropertyTrees"* dereferenceable(576), %"class.cc::Layer"* dereferenceable(232), %"class.blink::LayerListBuilder"* dereferenceable(32), i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 0
  store %"class.blink::PropertyTreeManagerClient"* %1, %"class.blink::PropertyTreeManagerClient"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  store %"class.cc::PropertyTrees"* %2, %"class.cc::PropertyTrees"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 2
  store %"class.cc::Layer"* %3, %"class.cc::Layer"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 3
  store %"class.blink::LayerListBuilder"* %4, %"class.blink::LayerListBuilder"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  store i32 %5, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6
  %13 = bitcast %"class.WTF::Vector.542"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 36, i1 false)
  tail call void @_ZN5blink19PropertyTreeManager22SetupRootTransformNodeEv(%"class.blink::PropertyTreeManager"* %0)
  tail call void @_ZN5blink19PropertyTreeManager17SetupRootClipNodeEv(%"class.blink::PropertyTreeManager"* %0)
  tail call void @_ZN5blink19PropertyTreeManager19SetupRootEffectNodeEv(%"class.blink::PropertyTreeManager"* %0)
  tail call void @_ZN5blink19PropertyTreeManager19SetupRootScrollNodeEv(%"class.blink::PropertyTreeManager"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager22SetupRootTransformNodeEv(%"class.blink::PropertyTreeManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::TransformNode", align 8
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %6 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 3
  tail call void @_ZN2cc13TransformTree5clearEv(%"class.cc::TransformTree"* %7) #13
  %8 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %8, i64 0, i32 2, i32 0
  %10 = bitcast %"class.base::internal::flat_tree"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.cc::TransformNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %14) #13
  call void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"* nonnull %2) #13
  %15 = call i32 @_ZN2cc13TransformTree6InsertERKNS_13TransformNodeEi(%"class.cc::TransformTree"* %7, %"struct.cc::TransformNode"* nonnull dereferenceable(224) %2, i32 0) #13
  %16 = icmp sgt i32 %15, -1
  br i1 %16, label %17, label %22

17:                                               ; preds = %1
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %20 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %19, align 8
  %21 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %20, i64 %18
  br label %22

22:                                               ; preds = %1, %17
  %23 = phi %"struct.cc::TransformNode"* [ %21, %17 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %14) #13
  %24 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 2
  %25 = load %"class.cc::Layer"*, %"class.cc::Layer"** %24, align 8
  %26 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %25, i64 0, i32 4
  %27 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %26, align 8
  %28 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %27, i64 0, i32 35
  %29 = load float, float* %28, align 8
  %30 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 3, i32 2
  store float %29, float* %30, align 4
  %31 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %31) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN5blink19PropertyTreeManager22SetupRootTransformNodeEv.from_screen to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #13
  %32 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %32, align 4
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %3, float %29, float %29) #13
  call void @_ZN2cc13TransformTree11SetToScreenEiRKN3gfx9TransformE(%"class.cc::TransformTree"* %7, i32 0, %"class.gfx::Transform"* nonnull dereferenceable(68) %3) #13
  %33 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %33) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN5blink19PropertyTreeManager22SetupRootTransformNodeEv.from_screen to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #13
  %34 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  store i8 0, i8* %34, align 4
  %35 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Transform"* nonnull %4) #13
  call void @_ZN2cc13TransformTree13SetFromScreenEiRKN3gfx9TransformE(%"class.cc::TransformTree"* %7, i32 0, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #13
  call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %7, i1 zeroext true) #13
  %36 = call dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZN5blink26TransformPaintPropertyNode4RootEv() #13
  %37 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %23, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %36, i64 0, i32 0, i32 0, i32 5
  store i32 %38, i32* %41, align 4
  %42 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %36, i64 0, i32 0, i32 0, i32 4
  store i32 %40, i32* %42, align 8
  %43 = load %"class.cc::Layer"*, %"class.cc::Layer"** %24, align 8
  %44 = load i32, i32* %39, align 8
  call void @_ZN2cc5Layer21SetTransformTreeIndexEi(%"class.cc::Layer"* %43, i32 %44) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %31) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager17SetupRootClipNodeEv(%"class.blink::PropertyTreeManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::ClipNode", align 8
  %3 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %4 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 5, i32 0
  tail call void @_ZN2cc12PropertyTreeINS_8ClipNodeEE5clearEv(%"class.cc::PropertyTree.95"* %5) #13
  %6 = bitcast %"struct.cc::ClipNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %6) #13
  call void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"* nonnull %2) #13
  %7 = call i32 @_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.95"* %5, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %2, i32 0) #13
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %12 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %12, i64 %10
  br label %14

14:                                               ; preds = %1, %9
  %15 = phi %"struct.cc::ClipNode"* [ %13, %9 ], [ null, %1 ]
  call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %6) #13
  %16 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %15, i64 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 2
  %18 = load %"class.cc::Layer"*, %"class.cc::Layer"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %18, i64 0, i32 4
  %20 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %19, align 8
  %21 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %20, i64 0, i32 52
  %22 = bitcast %"class.gfx::Rect"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %20, i64 0, i32 52, i32 1
  %25 = bitcast %"class.gfx::Size"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %23 to i32
  %28 = lshr i64 %23, 32
  %29 = trunc i64 %28 to i32
  %30 = sitofp i32 %27 to float
  %31 = sitofp i32 %29 to float
  %32 = trunc i64 %26 to i32
  %33 = lshr i64 %26, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %32, 0
  %36 = select i1 %35, i32 %32, i32 0
  %37 = sitofp i32 %36 to float
  %38 = icmp sgt i32 %34, 0
  %39 = select i1 %38, i32 %34, i32 0
  %40 = sitofp i32 %39 to float
  %41 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %15, i64 0, i32 3, i32 0, i32 0
  store float %30, float* %41, align 4
  %42 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %15, i64 0, i32 3, i32 0, i32 1
  store float %31, float* %42, align 4
  %43 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %15, i64 0, i32 3, i32 1, i32 0
  store float %37, float* %43, align 4
  %44 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %15, i64 0, i32 3, i32 1, i32 1
  store float %40, float* %44, align 4
  %45 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %15, i64 0, i32 8
  store i32 0, i32* %45, align 8
  %46 = call dereferenceable(168) %"class.blink::ClipPaintPropertyNode"* @_ZN5blink21ClipPaintPropertyNode4RootEv() #13
  %47 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %15, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %46, i64 0, i32 0, i32 0, i32 5
  store i32 %48, i32* %51, align 4
  %52 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %46, i64 0, i32 0, i32 0, i32 4
  store i32 %50, i32* %52, align 8
  %53 = load %"class.cc::Layer"*, %"class.cc::Layer"** %17, align 8
  %54 = load i32, i32* %49, align 8
  call void @_ZN2cc5Layer16SetClipTreeIndexEi(%"class.cc::Layer"* %53, i32 %54) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager19SetupRootEffectNodeEv(%"class.blink::PropertyTreeManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::EffectNode", align 8
  %3 = alloca %"struct.cc::ElementId", align 8
  %4 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %5 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 4
  tail call void @_ZN2cc10EffectTree5clearEv(%"class.cc::EffectTree"* %6) #13
  %7 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %8 = bitcast %"class.cc::PropertyTrees"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"struct.cc::EffectNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %12) #13
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %2) #13
  %13 = call i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"* %6, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %2, i32 -1) #13
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = sext i32 %13 to i64
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %18 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %17, align 8
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %18, i64 %16
  br label %20

20:                                               ; preds = %1, %15
  %21 = phi %"struct.cc::EffectNode"* [ %19, %15 ], [ null, %1 ]
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %12) #13
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19PropertyTreeManager19SetupRootEffectNodeEvE9unique_id to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %29, !prof !2

24:                                               ; preds = %20
  %25 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19PropertyTreeManager19SetupRootEffectNodeEvE9unique_id) #13
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = call i64 @_ZN5blink17NewUniqueObjectIdEv() #13
  store i64 %28, i64* @_ZZN5blink19PropertyTreeManager19SetupRootEffectNodeEvE9unique_id, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19PropertyTreeManager19SetupRootEffectNodeEvE9unique_id) #13
  br label %29

29:                                               ; preds = %24, %27, %20
  %30 = bitcast %"struct.cc::ElementId"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = load i64, i64* @_ZZN5blink19PropertyTreeManager19SetupRootEffectNodeEvE9unique_id, align 8
  %32 = call i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEm(i64 %31) #13
  %33 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %3, i64 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* nonnull %3) #13
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 0, i32 2
  store i64 %34, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  %36 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 0, i32 18
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 0, i32 19
  store i32 1, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 0, i32 17
  store i8 1, i8* %38, align 1
  %39 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 2
  %40 = load %"class.cc::Layer"*, %"class.cc::Layer"** %39, align 8
  %41 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  call void @_ZN2cc5Layer18SetEffectTreeIndexEi(%"class.cc::Layer"* %40, i32 %42) #13
  %43 = call dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() #13
  %44 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = load i32, i32* %41, align 8
  %47 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %43, i64 0, i32 0, i32 0, i32 5
  store i32 %45, i32* %47, align 4
  %48 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %43, i64 0, i32 0, i32 0, i32 4
  store i32 %46, i32* %48, align 8
  %49 = call dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() #13
  %50 = call dereferenceable(168) %"class.blink::ClipPaintPropertyNode"* @_ZN5blink21ClipPaintPropertyNode4RootEv() #13
  %51 = call dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZN5blink26TransformPaintPropertyNode4RootEv() #13
  %52 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %49, i64 0, i32 0, i32 0, i32 3, i32 0
  %53 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %52, align 8
  %54 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %29
  %56 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %57 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %56, align 8
  br label %58

58:                                               ; preds = %55, %29
  %59 = phi %"class.blink::TransformPaintPropertyNode"* [ %57, %55 ], [ null, %29 ]
  %60 = load i32, i32* %41, align 8
  %61 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 2
  store %"class.blink::EffectPaintPropertyNode"* %49, %"class.blink::EffectPaintPropertyNode"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 3
  store %"class.blink::ClipPaintPropertyNode"* %50, %"class.blink::ClipPaintPropertyNode"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  store %"class.blink::TransformPaintPropertyNode"* %51, %"class.blink::TransformPaintPropertyNode"** %65, align 8
  %66 = load i8, i8* %38, align 1
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 5
  br i1 %67, label %71, label %69

69:                                               ; preds = %58
  store i32 0, i32* %68, align 8
  %70 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 6
  store i8 0, i8* %70, align 4
  br label %77

71:                                               ; preds = %58
  %72 = load i32, i32* %68, align 8
  %73 = icmp ne i32 %72, 0
  %74 = icmp eq %"class.blink::TransformPaintPropertyNode"* %59, %51
  %75 = or i1 %74, %73
  br i1 %75, label %77, label %76

76:                                               ; preds = %71
  store i32 2, i32* %68, align 8
  br label %77

77:                                               ; preds = %71, %76, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager19SetupRootScrollNodeEv(%"class.blink::PropertyTreeManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::ScrollNode", align 8
  %3 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %4 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 6
  tail call void @_ZN2cc10ScrollTree5clearEv(%"class.cc::ScrollTree"* %5) #13
  %6 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %3, align 8
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.base::internal::flat_tree"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %5, i64 0, i32 0
  %13 = bitcast %"struct.cc::ScrollNode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %13) #13
  call void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"* nonnull %2) #13
  %14 = call i32 @_ZN2cc12PropertyTreeINS_10ScrollNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.115"* %12, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %2, i32 0) #13
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %16, label %21

16:                                               ; preds = %1
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %4, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %19 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %18, align 8
  %20 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %19, i64 %17
  br label %21

21:                                               ; preds = %1, %16
  %22 = phi %"struct.cc::ScrollNode"* [ %20, %16 ], [ null, %1 ]
  call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %13) #13
  %23 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 9
  store i32 1, i32* %23, align 8
  %24 = call dereferenceable(168) %"class.blink::ScrollPaintPropertyNode"* @_ZN5blink23ScrollPaintPropertyNode4RootEv() #13
  %25 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %24, i64 0, i32 0, i32 5
  store i32 %26, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %24, i64 0, i32 0, i32 4
  store i32 %28, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 2
  %32 = load %"class.cc::Layer"*, %"class.cc::Layer"** %31, align 8
  %33 = load i32, i32* %27, align 8
  call void @_ZN2cc5Layer18SetScrollTreeIndexEi(%"class.cc::Layer"* %32, i32 %33) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManagerD2Ev(%"class.blink::PropertyTreeManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %7, label %5, !prof !3

5:                                                ; preds = %1
  %6 = bitcast i32* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #13
  store i32* null, i32** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %8, align 8
  %10 = icmp eq %"struct.blink::PropertyTreeManager::EffectState"* %9, null
  %11 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %9 to i8*
  br i1 %10, label %18, label %12, !prof !3

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !4

16:                                               ; preds = %12
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %12
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #13
  store %"struct.blink::PropertyTreeManager::EffectState"* null, %"struct.blink::PropertyTreeManager::EffectState"** %8, align 8
  br label %18

18:                                               ; preds = %7, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager8FinalizeEv(%"class.blink::PropertyTreeManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1, %5
  tail call void @_ZN5blink19PropertyTreeManager13CloseCcEffectEv(%"class.blink::PropertyTreeManager"* %0)
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %5

8:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager13CloseCcEffectEv(%"class.blink::PropertyTreeManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = tail call dereferenceable(40) %"struct.blink::PropertyTreeManager::EffectState"* @_ZN3WTF6VectorIN5blink19PropertyTreeManager11EffectStateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.542"* %2, i32 %5) #13
  %7 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 2
  %12 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %12, i64 0, i32 1, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %35

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %12, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %17, align 8
  %19 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %18, null
  br i1 %19, label %41, label %35

20:                                               ; preds = %1
  %21 = and i32 %8, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  tail call void @_ZN5blink19PropertyTreeManager17EmitClipMaskLayerEv(%"class.blink::PropertyTreeManager"* %0)
  %24 = load i32, i32* %7, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %23
  %27 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashSet"* %27, i32* dereferenceable(4) %28)
  br label %29

29:                                               ; preds = %23, %26
  %30 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5
  %31 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %30 to i8*
  %32 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 40, i1 false)
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, -1
  store i32 %34, i32* %3, align 4
  br label %56

35:                                               ; preds = %16, %10
  %36 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5
  %37 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %36 to i8*
  %38 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false)
  %39 = load i32, i32* %3, align 4
  %40 = add i32 %39, -1
  store i32 %40, i32* %3, align 4
  br label %50

41:                                               ; preds = %16
  %42 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %12, i64 0, i32 1, i32 11
  %43 = load i8, i8* %42, align 2, !range !5
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5
  %46 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %45 to i8*
  %47 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 40, i1 false)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, -1
  store i32 %49, i32* %3, align 4
  br i1 %44, label %56, label %50

50:                                               ; preds = %41, %35
  %51 = load i32, i32* %7, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50, %53
  tail call void @_ZN5blink19PropertyTreeManager13CloseCcEffectEv(%"class.blink::PropertyTreeManager"* %0)
  %54 = load i32, i32* %7, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %53

56:                                               ; preds = %53, %41, %29, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19PropertyTreeManager36DirectlyUpdateCompositedOpacityValueERN2cc13LayerTreeHostERKNS_23EffectPaintPropertyNodeE(%"class.cc::LayerTreeHost"* dereferenceable(2336), %"class.blink::EffectPaintPropertyNode"* nocapture readonly dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %4
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %34

12:                                               ; preds = %8
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 1, i32 0, i32 0
  %15 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %14, align 8
  %16 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 %13
  %17 = icmp eq %"struct.cc::EffectNode"* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 %13, i32 16
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 4
  %22 = and i24 %21, -8193
  store i24 %22, i24* %20, align 4
  %23 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 1, i32 4
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 %13, i32 3
  %27 = bitcast float* %26 to i32*
  store i32 %25, i32* %27, align 8
  %28 = or i24 %22, 32768
  store i24 %28, i24* %20, align 4
  %29 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 2
  store i8 1, i8* %29, align 8
  %30 = bitcast %"class.cc::LayerTreeHost"* %0 to void (%"class.cc::LayerTreeHost"*)***
  %31 = load void (%"class.cc::LayerTreeHost"*)**, void (%"class.cc::LayerTreeHost"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %31, i64 17
  %33 = load void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %32, align 8
  tail call void %33(%"class.cc::LayerTreeHost"* %0) #13
  br label %34

34:                                               ; preds = %2, %8, %12, %18
  %35 = phi i1 [ true, %18 ], [ false, %12 ], [ false, %8 ], [ false, %2 ]
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19PropertyTreeManager35DirectlyUpdateScrollOffsetTransformERN2cc13LayerTreeHostERKNS_26TransformPaintPropertyNodeE(%"class.cc::LayerTreeHost"* dereferenceable(2336), %"class.blink::TransformPaintPropertyNode"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = alloca %"class.gfx::ScrollOffset", align 4
  %5 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %6 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %5, align 8
  %7 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %6, null
  br i1 %7, label %127, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %6, i64 0, i32 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, %10
  br i1 %13, label %14, label %127

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %6, i64 0, i32 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %127

18:                                               ; preds = %14
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 6, i32 0, i32 1, i32 0, i32 0
  %21 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %20, align 8
  %22 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %21, i64 %19
  %23 = icmp eq %"struct.cc::ScrollNode"* %22, null
  br i1 %23, label %127, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3
  %26 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 5
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %10
  br i1 %28, label %29, label %127

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %33, label %127

33:                                               ; preds = %29
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 0, i32 1, i32 0, i32 0
  %36 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %35, align 8
  %37 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34
  %38 = icmp eq %"struct.cc::TransformNode"* %37, null
  br i1 %38, label %127, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1
  %41 = bitcast %"struct.blink::TransformPaintPropertyNode::State"* %40 to i32*
  %42 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::State", %"struct.blink::TransformPaintPropertyNode::State"* %40, i64 0, i32 0, i32 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = load float, float* %44, align 4
  %47 = bitcast %"class.gfx::ScrollOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 0
  %49 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 1
  %50 = fsub float -0.000000e+00, %43
  %51 = fsub float -0.000000e+00, %46
  store float %50, float* %48, align 4
  store float %51, float* %49, align 4
  %52 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %6, i64 0, i32 1, i32 7, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 6
  %55 = call zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %54, i64 %53, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %4) #13
  br i1 %55, label %56, label %65

56:                                               ; preds = %39
  %57 = call %"class.cc::Layer"* @_ZNK2cc13LayerTreeHost16LayerByElementIdENS_9ElementIdE(%"class.cc::LayerTreeHost"* %0, i64 %53) #13
  %58 = icmp eq %"class.cc::Layer"* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @_ZN2cc5Layer22SetNeedsPushPropertiesEv(%"class.cc::Layer"* nonnull %57) #13
  br label %60

60:                                               ; preds = %59, %56
  %61 = bitcast %"class.cc::LayerTreeHost"* %0 to void (%"class.cc::LayerTreeHost"*)***
  %62 = load void (%"class.cc::LayerTreeHost"*)**, void (%"class.cc::LayerTreeHost"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %62, i64 17
  %64 = load void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %63, align 8
  call void %64(%"class.cc::LayerTreeHost"* %0) #13
  br label %65

65:                                               ; preds = %39, %60
  %66 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 11, i32 0
  %67 = load float, float* %66, align 4
  %68 = load float, float* %48, align 4
  %69 = fcmp une float %67, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 11, i32 1
  %72 = load float, float* %71, align 4
  %73 = load float, float* %49, align 4
  %74 = fcmp une float %72, %73
  br i1 %74, label %75, label %126

75:                                               ; preds = %65, %70
  %76 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %77 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %76, align 8
  %78 = icmp eq %"struct.cc::StickyPositionConstraint"* %77, null
  br i1 %78, label %79, label %117

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %80, align 8
  %82 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %81, null
  br i1 %82, label %83, label %102

83:                                               ; preds = %79
  %84 = load i32, i32* %41, align 4
  %85 = load i32, i32* %45, align 4
  %86 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %5, align 8
  %87 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %83
  %89 = bitcast i32 %84 to float
  %90 = fsub float -0.000000e+00, %89
  %91 = bitcast i32 %85 to float
  %92 = fsub float -0.000000e+00, %91
  store float %90, float* %66, align 8
  %93 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 11, i32 1
  store float %92, float* %93, align 4
  br label %117

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 4, i32 0
  %96 = bitcast i32 %84 to float
  %97 = bitcast i32 %85 to float
  %98 = call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412setTranslateEfff(%class.SkMatrix44* %95, float %96, float %97, float 0.000000e+00) #13
  %99 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 5, i32 0
  store float 0.000000e+00, float* %99, align 4
  %100 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 5, i32 1
  store float 0.000000e+00, float* %100, align 4
  %101 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 5, i32 2
  store float 0.000000e+00, float* %101, align 4
  br label %117

102:                                              ; preds = %79
  %103 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %81, i64 0, i32 1, i32 0
  %104 = bitcast float* %103 to i64*
  %105 = load i64, i64* %104, align 4, !noalias !6
  %106 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %81, i64 0, i32 1, i32 2
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4, !noalias !6
  %109 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %109) #13
  %110 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %81, i64 0, i32 0
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %3, %"class.blink::TransformationMatrix"* dereferenceable(128) %110) #13
  %111 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 4, i32 0
  %112 = bitcast %class.SkMatrix44* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* nonnull align 4 %109, i64 65, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %109) #13
  %113 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 5
  %114 = bitcast %"class.gfx::Point3F"* %113 to i64*
  store i64 %105, i64* %114, align 4
  %115 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 5, i32 2
  %116 = bitcast float* %115 to i32*
  store i32 %108, i32* %116, align 4
  br label %117

117:                                              ; preds = %75, %88, %94, %102
  %118 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34, i32 10
  %119 = bitcast i24* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = or i32 %120, 8193
  store i32 %121, i32* %119, align 4
  call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %25, i1 zeroext true) #13
  %122 = bitcast %"class.cc::LayerTreeHost"* %0 to void (%"class.cc::LayerTreeHost"*)***
  %123 = load void (%"class.cc::LayerTreeHost"*)**, void (%"class.cc::LayerTreeHost"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %123, i64 17
  %125 = load void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %124, align 8
  call void %125(%"class.cc::LayerTreeHost"* %0) #13
  br label %126

126:                                              ; preds = %117, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %127

127:                                              ; preds = %24, %29, %8, %14, %18, %33, %126, %2
  %128 = phi i1 [ false, %2 ], [ false, %18 ], [ true, %126 ], [ false, %33 ], [ false, %14 ], [ false, %8 ], [ false, %29 ], [ false, %24 ]
  ret i1 %128
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager23DirectlySetScrollOffsetERN2cc13LayerTreeHostENS1_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::LayerTreeHost"* dereferenceable(2336), i64, %"class.gfx::ScrollOffset"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 6
  %5 = tail call zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %4, i64 %1, %"class.gfx::ScrollOffset"* dereferenceable(8) %2) #13
  br i1 %5, label %6, label %15

6:                                                ; preds = %3
  %7 = tail call %"class.cc::Layer"* @_ZNK2cc13LayerTreeHost16LayerByElementIdENS_9ElementIdE(%"class.cc::LayerTreeHost"* %0, i64 %1) #13
  %8 = icmp eq %"class.cc::Layer"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @_ZN2cc5Layer22SetNeedsPushPropertiesEv(%"class.cc::Layer"* nonnull %7) #13
  br label %10

10:                                               ; preds = %6, %9
  %11 = bitcast %"class.cc::LayerTreeHost"* %0 to void (%"class.cc::LayerTreeHost"*)***
  %12 = load void (%"class.cc::LayerTreeHost"*)**, void (%"class.cc::LayerTreeHost"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %12, i64 17
  %14 = load void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %13, align 8
  tail call void %14(%"class.cc::LayerTreeHost"* %0) #13
  br label %15

15:                                               ; preds = %10, %3
  ret void
}

declare void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19PropertyTreeManager23DirectlyUpdateTransformERN2cc13LayerTreeHostERKNS_26TransformPaintPropertyNodeE(%"class.cc::LayerTreeHost"* dereferenceable(2336), %"class.blink::TransformPaintPropertyNode"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3
  %5 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 10
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, %6
  br i1 %9, label %10, label %78

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %78

14:                                               ; preds = %10
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %16, align 8
  %18 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15
  %19 = icmp eq %"struct.cc::TransformNode"* %18, null
  br i1 %19, label %78, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %22 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %21, align 8
  %23 = icmp eq %"struct.cc::StickyPositionConstraint"* %22, null
  br i1 %23, label %24, label %68

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %25, align 8
  %27 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, null
  br i1 %27, label %28, label %53

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1
  %30 = bitcast %"struct.blink::TransformPaintPropertyNode::State"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %36 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %35, align 8
  %37 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %28
  %39 = bitcast i32 %31 to float
  %40 = fsub float -0.000000e+00, %39
  %41 = bitcast i32 %34 to float
  %42 = fsub float -0.000000e+00, %41
  %43 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 11, i32 0
  store float %40, float* %43, align 8
  %44 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 11, i32 1
  store float %42, float* %44, align 4
  br label %68

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 4, i32 0
  %47 = bitcast i32 %31 to float
  %48 = bitcast i32 %34 to float
  %49 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412setTranslateEfff(%class.SkMatrix44* %46, float %47, float %48, float 0.000000e+00) #13
  %50 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 0
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 1
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 2
  store float 0.000000e+00, float* %52, align 4
  br label %68

53:                                               ; preds = %24
  %54 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, i64 0, i32 1, i32 0
  %55 = bitcast float* %54 to i64*
  %56 = load i64, i64* %55, align 4, !noalias !11
  %57 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, i64 0, i32 1, i32 2
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4, !noalias !11
  %60 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, i64 0, i32 0
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %3, %"class.blink::TransformationMatrix"* dereferenceable(128) %61) #13
  %62 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 4, i32 0
  %63 = bitcast %class.SkMatrix44* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 4 %60, i64 65, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %60) #13
  %64 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5
  %65 = bitcast %"class.gfx::Point3F"* %64 to i64*
  store i64 %56, i64* %65, align 4
  %66 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 2
  %67 = bitcast float* %66 to i32*
  store i32 %59, i32* %67, align 4
  br label %68

68:                                               ; preds = %20, %38, %45, %53
  %69 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 10
  %70 = bitcast i24* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, -8226
  %73 = or i32 %72, 8193
  store i32 %73, i32* %70, align 4
  call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %4, i1 zeroext true) #13
  %74 = bitcast %"class.cc::LayerTreeHost"* %0 to void (%"class.cc::LayerTreeHost"*)***
  %75 = load void (%"class.cc::LayerTreeHost"*)**, void (%"class.cc::LayerTreeHost"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %75, i64 17
  %77 = load void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %76, align 8
  call void %77(%"class.cc::LayerTreeHost"* %0) #13
  br label %78

78:                                               ; preds = %2, %10, %14, %68
  %79 = phi i1 [ true, %68 ], [ false, %14 ], [ false, %10 ], [ false, %2 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19PropertyTreeManager32DirectlyUpdatePageScaleTransformERN2cc13LayerTreeHostERKNS_26TransformPaintPropertyNodeE(%"class.cc::LayerTreeHost"* dereferenceable(2336), %"class.blink::TransformPaintPropertyNode"* nocapture readonly dereferenceable(96)) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3
  %5 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 10
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, %6
  br i1 %9, label %10, label %84

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %84

14:                                               ; preds = %10
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %16, align 8
  %18 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15
  %19 = icmp eq %"struct.cc::TransformNode"* %18, null
  br i1 %19, label %84, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %22 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %21, align 8
  %23 = icmp eq %"struct.cc::StickyPositionConstraint"* %22, null
  br i1 %23, label %24, label %68

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %25, align 8
  %27 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, null
  br i1 %27, label %28, label %53

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1
  %30 = bitcast %"struct.blink::TransformPaintPropertyNode::State"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %36 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %35, align 8
  %37 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %28
  %39 = bitcast i32 %31 to float
  %40 = fsub float -0.000000e+00, %39
  %41 = bitcast i32 %34 to float
  %42 = fsub float -0.000000e+00, %41
  %43 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 11, i32 0
  store float %40, float* %43, align 8
  %44 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 11, i32 1
  store float %42, float* %44, align 4
  br label %68

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 4, i32 0
  %47 = bitcast i32 %31 to float
  %48 = bitcast i32 %34 to float
  %49 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412setTranslateEfff(%class.SkMatrix44* %46, float %47, float %48, float 0.000000e+00) #13
  %50 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 0
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 1
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 2
  store float 0.000000e+00, float* %52, align 4
  br label %68

53:                                               ; preds = %24
  %54 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, i64 0, i32 1, i32 0
  %55 = bitcast float* %54 to i64*
  %56 = load i64, i64* %55, align 4, !noalias !16
  %57 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, i64 0, i32 1, i32 2
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4, !noalias !16
  %60 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %26, i64 0, i32 0
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %3, %"class.blink::TransformationMatrix"* dereferenceable(128) %61) #13
  %62 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 4, i32 0
  %63 = bitcast %class.SkMatrix44* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 4 %60, i64 65, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %60) #13
  %64 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5
  %65 = bitcast %"class.gfx::Point3F"* %64 to i64*
  store i64 %56, i64* %65, align 4
  %66 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 5, i32 2
  %67 = bitcast float* %66 to i32*
  store i32 %59, i32* %67, align 4
  br label %68

68:                                               ; preds = %20, %38, %45, %53
  %69 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 10
  %70 = bitcast i24* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = or i32 %71, 1
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %17, i64 %15, i32 4, i32 0, i32 0, i64 0, i64 0
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 1
  %77 = bitcast float* %76 to i32*
  store i32 %75, i32* %77, align 8
  %78 = load i32, i32* %70, align 4
  %79 = or i32 %78, 8192
  store i32 %79, i32* %70, align 4
  call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %4, i1 zeroext true) #13
  %80 = bitcast %"class.cc::LayerTreeHost"* %0 to void (%"class.cc::LayerTreeHost"*)***
  %81 = load void (%"class.cc::LayerTreeHost"*)**, void (%"class.cc::LayerTreeHost"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %81, i64 17
  %83 = load void (%"class.cc::LayerTreeHost"*)*, void (%"class.cc::LayerTreeHost"*)** %82, align 8
  call void %83(%"class.cc::LayerTreeHost"* %0) #13
  br label %84

84:                                               ; preds = %2, %10, %14, %68
  %85 = phi i1 [ true, %68 ], [ false, %14 ], [ false, %10 ], [ false, %2 ]
  ret i1 %85
}

declare zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"*, i64, %"class.gfx::ScrollOffset"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.cc::Layer"* @_ZNK2cc13LayerTreeHost16LayerByElementIdENS_9ElementIdE(%"class.cc::LayerTreeHost"*, i64) local_unnamed_addr #2

declare void @_ZN2cc5Layer22SetNeedsPushPropertiesEv(%"class.cc::Layer"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(136) %"class.cc::TransformTree"* @_ZN5blink19PropertyTreeManager16GetTransformTreeEv(%"class.blink::PropertyTreeManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %3, i64 0, i32 3
  ret %"class.cc::TransformTree"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(48) %"class.cc::ClipTree"* @_ZN5blink19PropertyTreeManager11GetClipTreeEv(%"class.blink::PropertyTreeManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %3, i64 0, i32 5
  ret %"class.cc::ClipTree"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(112) %"class.cc::EffectTree"* @_ZN5blink19PropertyTreeManager13GetEffectTreeEv(%"class.blink::PropertyTreeManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %3, i64 0, i32 4
  ret %"class.cc::EffectTree"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(120) %"class.cc::ScrollTree"* @_ZN5blink19PropertyTreeManager13GetScrollTreeEv(%"class.blink::PropertyTreeManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %3 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %3, i64 0, i32 6
  ret %"class.cc::ScrollTree"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager27EnsureCompositorScrollNodesERKN3WTF6VectorIPKNS_26TransformPaintPropertyNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::PropertyTreeManager"*, %"class.WTF::Vector.659"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.659", %"class.WTF::Vector.659"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.659", %"class.WTF::Vector.659"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %2, %11
  %12 = phi %"class.blink::TransformPaintPropertyNode"** [ %15, %11 ], [ %4, %2 ]
  %13 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %12, align 8
  %14 = tail call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %13) #13
  %15 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %12, i64 1
  %16 = icmp eq %"class.blink::TransformPaintPropertyNode"** %15, %8
  br i1 %16, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager26EnsureCompositorScrollNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %3, align 8
  %5 = tail call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1)
  %6 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %4, i64 0, i32 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %7
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %4, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i32 [ %13, %11 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager27SetCcScrollNodeIsCompositedEi(%"class.blink::PropertyTreeManager"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %6 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %6, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %4
  %12 = phi %"struct.cc::ScrollNode"* [ %10, %4 ], [ null, %2 ]
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %12, i64 0, i32 13
  %14 = load i8, i8* %13, align 8
  %15 = or i8 %14, 1
  store i8 %15, i8* %13, align 8
  ret void
}

declare void @_ZN2cc13TransformTree5clearEv(%"class.cc::TransformTree"*) local_unnamed_addr #2

declare i32 @_ZN2cc13TransformTree6InsertERKNS_13TransformNodeEi(%"class.cc::TransformTree"*, %"struct.cc::TransformNode"* dereferenceable(224), i32) local_unnamed_addr #2

declare void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"*) unnamed_addr #2

declare void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #2

declare void @_ZN2cc13TransformTree11SetToScreenEiRKN3gfx9TransformE(%"class.cc::TransformTree"*, i32, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #2

declare void @_ZN2cc13TransformTree13SetFromScreenEiRKN3gfx9TransformE(%"class.cc::TransformTree"*, i32, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZN5blink26TransformPaintPropertyNode4RootEv() local_unnamed_addr #2

declare void @_ZN2cc5Layer21SetTransformTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare void @_ZN2cc12PropertyTreeINS_8ClipNodeEE5clearEv(%"class.cc::PropertyTree.95"*) local_unnamed_addr #2

declare i32 @_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.95"*, %"struct.cc::ClipNode"* dereferenceable(184), i32) local_unnamed_addr #2

declare void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"*) unnamed_addr #6

declare dereferenceable(168) %"class.blink::ClipPaintPropertyNode"* @_ZN5blink21ClipPaintPropertyNode4RootEv() local_unnamed_addr #2

declare void @_ZN2cc5Layer16SetClipTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare void @_ZN2cc10EffectTree5clearEv(%"class.cc::EffectTree"*) local_unnamed_addr #2

declare i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"*, %"struct.cc::EffectNode"* dereferenceable(288), i32) local_unnamed_addr #2

declare void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"*) unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

declare i64 @_ZN5blink17NewUniqueObjectIdEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEm(i64) local_unnamed_addr #2

declare i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"*) local_unnamed_addr #2

declare void @_ZN2cc5Layer18SetEffectTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager21SetCurrentEffectStateERKN2cc10EffectNodeENS0_12CcEffectTypeERKNS_23EffectPaintPropertyNodeERKNS_21ClipPaintPropertyNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* nocapture, %"struct.cc::EffectNode"* nocapture readonly dereferenceable(288), i32, %"class.blink::EffectPaintPropertyNode"* dereferenceable(152), %"class.blink::ClipPaintPropertyNode"* dereferenceable(168), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %3, i64 0, i32 0, i32 0, i32 3, i32 0
  %8 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %7, align 8
  %9 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %12 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %11, align 8
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi %"class.blink::TransformPaintPropertyNode"* [ %12, %10 ], [ null, %6 ]
  %15 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  store i32 %2, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 2
  store %"class.blink::EffectPaintPropertyNode"* %3, %"class.blink::EffectPaintPropertyNode"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 3
  store %"class.blink::ClipPaintPropertyNode"* %4, %"class.blink::ClipPaintPropertyNode"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  store %"class.blink::TransformPaintPropertyNode"* %5, %"class.blink::TransformPaintPropertyNode"** %21, align 8
  %22 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 17
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 5
  br i1 %24, label %28, label %26

26:                                               ; preds = %13
  store i32 0, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 6
  store i8 0, i8* %27, align 4
  br label %40

28:                                               ; preds = %13
  %29 = load i32, i32* %25, align 8
  %30 = icmp ne i32 %29, 0
  %31 = icmp eq %"class.blink::TransformPaintPropertyNode"* %14, %5
  %32 = or i1 %31, %30
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  store i32 2, i32* %25, align 8
  br label %34

34:                                               ; preds = %28, %33
  %35 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 6
  %36 = load i8, i8* %35, align 4, !range !5
  %37 = trunc i32 %2 to i8
  %38 = and i8 %37, 1
  %39 = or i8 %36, %38
  store i8 %39, i8* %35, align 4
  br label %40

40:                                               ; preds = %34, %26
  ret void
}

declare void @_ZN2cc10ScrollTree5clearEv(%"class.cc::ScrollTree"*) local_unnamed_addr #2

declare i32 @_ZN2cc12PropertyTreeINS_10ScrollNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.115"*, %"struct.cc::ScrollNode"* dereferenceable(168), i32) local_unnamed_addr #2

declare void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"*) unnamed_addr #6

declare dereferenceable(168) %"class.blink::ScrollPaintPropertyNode"* @_ZN5blink23ScrollPaintPropertyNode4RootEv() local_unnamed_addr #2

declare void @_ZN2cc5Layer18SetScrollTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink31TransformsMayBe2dAxisMisalignedERKNS_26TransformPaintPropertyNodeES2_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %4 = icmp eq %"class.blink::TransformPaintPropertyNode"* %0, %1
  br i1 %4, label %105, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %6) #13
  call void @_ZN5blink14GeometryMapper29SourceToDestinationProjectionERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %3, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1) #13
  %7 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = call zeroext i1 @_ZNK5blink20TransformationMatrix24Preserves2dAxisAlignmentEv(%"class.blink::TransformationMatrix"* %11) #13
  br i1 %12, label %13, label %103

13:                                               ; preds = %5, %10
  %14 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %17 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %16, align 8
  %18 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %21 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %20, align 8
  %22 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %21, %15
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %21, null
  %25 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %17, %14
  %26 = or i1 %25, %24
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = call dereferenceable(24) %"class.blink::TransformPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_33TransformPaintPropertyNodeOrAliasES2_(%"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24) %15, %"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24) %14) #13
  br label %29

29:                                               ; preds = %13, %19, %23, %27
  %30 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %14, %23 ], [ %15, %19 ], [ %15, %13 ], [ %28, %27 ]
  br label %31

31:                                               ; preds = %29, %36
  %32 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %34, %36 ], [ %30, %29 ]
  %33 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %32, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %33, align 8
  %35 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %32, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 4, !range !5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %31

40:                                               ; preds = %31, %36
  %41 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %32 to %"class.blink::TransformPaintPropertyNode"*
  %42 = icmp eq %"class.blink::TransformPaintPropertyNode"* %41, %0
  br i1 %42, label %72, label %43

43:                                               ; preds = %40, %69
  %44 = phi %"class.blink::TransformPaintPropertyNode"* [ %70, %69 ], [ %0, %40 ]
  %45 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %44, i64 0, i32 1, i32 5
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 256
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %44, i64 0, i32 1, i32 2, i32 0
  %51 = load i8, i8* %50, align 8
  %52 = and i8 %51, 4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %103, label %54

54:                                               ; preds = %49, %43
  %55 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %44, i64 0, i32 0, i32 0, i32 3, i32 0
  %56 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %55, align 8
  %57 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %56, null
  br i1 %57, label %69, label %58

58:                                               ; preds = %54, %63
  %59 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %61, %63 ], [ %56, %54 ]
  %60 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %59, i64 0, i32 0, i32 3, i32 0
  %61 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %60, align 8
  %62 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %59, i64 0, i32 0, i32 1
  %65 = load i8, i8* %64, align 4, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %58

67:                                               ; preds = %63, %58
  %68 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %59 to %"class.blink::TransformPaintPropertyNode"*
  br label %69

69:                                               ; preds = %67, %54
  %70 = phi %"class.blink::TransformPaintPropertyNode"* [ %68, %67 ], [ null, %54 ]
  %71 = icmp eq %"class.blink::TransformPaintPropertyNode"* %70, %41
  br i1 %71, label %72, label %43

72:                                               ; preds = %69, %40
  %73 = icmp eq %"class.blink::TransformPaintPropertyNode"* %41, %1
  br i1 %73, label %103, label %74

74:                                               ; preds = %72, %100
  %75 = phi %"class.blink::TransformPaintPropertyNode"* [ %101, %100 ], [ %1, %72 ]
  %76 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %75, i64 0, i32 1, i32 5
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 256
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %75, i64 0, i32 1, i32 2, i32 0
  %82 = load i8, i8* %81, align 8
  %83 = and i8 %82, 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %103, label %85

85:                                               ; preds = %80, %74
  %86 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %75, i64 0, i32 0, i32 0, i32 3, i32 0
  %87 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %86, align 8
  %88 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %87, null
  br i1 %88, label %100, label %89

89:                                               ; preds = %85, %94
  %90 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %92, %94 ], [ %87, %85 ]
  %91 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %90, i64 0, i32 0, i32 3, i32 0
  %92 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %91, align 8
  %93 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %90, i64 0, i32 0, i32 1
  %96 = load i8, i8* %95, align 4, !range !5
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %89

98:                                               ; preds = %94, %89
  %99 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %90 to %"class.blink::TransformPaintPropertyNode"*
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi %"class.blink::TransformPaintPropertyNode"* [ %99, %98 ], [ null, %85 ]
  %102 = icmp eq %"class.blink::TransformPaintPropertyNode"* %101, %41
  br i1 %102, label %103, label %74

103:                                              ; preds = %49, %100, %80, %72, %10
  %104 = phi i1 [ true, %10 ], [ false, %72 ], [ false, %100 ], [ true, %80 ], [ true, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %6) #13
  br label %105

105:                                              ; preds = %2, %103
  %106 = phi i1 [ %104, %103 ], [ false, %2 ]
  ret i1 %106
}

declare void @_ZN5blink14GeometryMapper29SourceToDestinationProjectionERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* sret, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20TransformationMatrix24Preserves2dAxisAlignmentEv(%"class.blink::TransformationMatrix"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager35SetCurrentEffectRenderSurfaceReasonEN2cc19RenderSurfaceReasonE(%"class.blink::PropertyTreeManager"* nocapture readonly, i8 zeroext) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %8 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %8, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %10, align 8
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %11, i64 %9
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi %"struct.cc::EffectNode"* [ %12, %6 ], [ null, %2 ]
  %15 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %14, i64 0, i32 17
  store i8 %1, i8* %15, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %class.SkMatrix44, align 4
  %5 = alloca %"struct.cc::TransformNode", align 8
  %6 = alloca %"struct.cc::ElementId", align 8
  %7 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %8
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %359

16:                                               ; preds = %2, %12
  %17 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %18 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %17, align 8
  br label %19

19:                                               ; preds = %24, %16
  %20 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %18, %16 ], [ %22, %24 ]
  %21 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %20, i64 0, i32 0, i32 3, i32 0
  %22 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %21, align 8
  %23 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %20, i64 0, i32 0, i32 1
  %26 = load i8, i8* %25, align 4, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %19

28:                                               ; preds = %19, %24
  %29 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %20 to %"class.blink::TransformPaintPropertyNode"*
  %30 = tail call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %29)
  %31 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %32 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %33 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %32, i64 0, i32 3
  %34 = bitcast %"struct.cc::TransformNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %34) #13
  call void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"* nonnull %5) #13
  %35 = call i32 @_ZN2cc13TransformTree6InsertERKNS_13TransformNodeEi(%"class.cc::TransformTree"* %33, %"struct.cc::TransformNode"* nonnull dereferenceable(224) %5, i32 %30) #13
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %34) #13
  %36 = icmp sgt i32 %35, -1
  br i1 %36, label %37, label %43

37:                                               ; preds = %28
  %38 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %39 = sext i32 %35 to i64
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %38, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %41 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %40, align 8
  %42 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %41, i64 %39
  br label %43

43:                                               ; preds = %28, %37
  %44 = phi %"struct.cc::TransformNode"* [ %42, %37 ], [ null, %28 ]
  %45 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %46 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %45, align 8
  %47 = icmp eq %"struct.cc::StickyPositionConstraint"* %46, null
  br i1 %47, label %48, label %92

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %49, align 8
  %51 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %50, null
  br i1 %51, label %52, label %77

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1
  %54 = bitcast %"struct.blink::TransformPaintPropertyNode::State"* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %60 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %59, align 8
  %61 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %52
  %63 = bitcast i32 %55 to float
  %64 = fsub float -0.000000e+00, %63
  %65 = bitcast i32 %58 to float
  %66 = fsub float -0.000000e+00, %65
  %67 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 11, i32 0
  store float %64, float* %67, align 8
  %68 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 11, i32 1
  store float %66, float* %68, align 4
  br label %92

69:                                               ; preds = %52
  %70 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 4, i32 0
  %71 = bitcast i32 %55 to float
  %72 = bitcast i32 %58 to float
  %73 = call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412setTranslateEfff(%class.SkMatrix44* %70, float %71, float %72, float 0.000000e+00) #13
  %74 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 5, i32 0
  store float 0.000000e+00, float* %74, align 4
  %75 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 5, i32 1
  store float 0.000000e+00, float* %75, align 4
  %76 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 5, i32 2
  store float 0.000000e+00, float* %76, align 4
  br label %92

77:                                               ; preds = %48
  %78 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %50, i64 0, i32 1, i32 0
  %79 = bitcast float* %78 to i64*
  %80 = load i64, i64* %79, align 4, !noalias !21
  %81 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %50, i64 0, i32 1, i32 2
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 4, !noalias !21
  %84 = bitcast %class.SkMatrix44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %50, i64 0, i32 0
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %4, %"class.blink::TransformationMatrix"* dereferenceable(128) %85) #13
  %86 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 4, i32 0
  %87 = bitcast %class.SkMatrix44* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* nonnull align 4 %84, i64 65, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %84) #13
  %88 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 5
  %89 = bitcast %"class.gfx::Point3F"* %88 to i64*
  store i64 %80, i64* %89, align 4
  %90 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 5, i32 2
  %91 = bitcast float* %90 to i32*
  store i32 %83, i32* %91, align 4
  br label %92

92:                                               ; preds = %43, %62, %69, %77
  %93 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 10
  %94 = bitcast i24* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = or i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 2
  %98 = load i8, i8* %97, align 1
  %99 = and i8 %98, -3
  %100 = icmp ne i8 %99, 0
  %101 = zext i1 %100 to i32
  %102 = shl nuw nsw i32 %101, 13
  %103 = and i32 %96, -8193
  %104 = or i32 %102, %103
  store i32 %104, i32* %94, align 4
  %105 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 2, i32 0
  %106 = load i8, i8* %105, align 8
  %107 = shl i8 %106, 7
  %108 = zext i8 %107 to i32
  %109 = and i32 %104, -129
  %110 = or i32 %109, %108
  store i32 %110, i32* %94, align 4
  %111 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 4
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 9
  store i32 %112, i32* %113, align 8
  %114 = load i8, i8* %105, align 8
  %115 = lshr i8 %114, 3
  %116 = and i8 %115, 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw nsw i32 %117, 14
  %119 = and i32 %110, -16385
  %120 = or i32 %118, %119
  store i32 %120, i32* %94, align 4
  %121 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 5
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, 4096
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %92
  %126 = or i32 %120, 2048
  store i32 %126, i32* %94, align 4
  %127 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %128 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %127, i64 0, i32 3
  call void @_ZN2cc13TransformTree41AddNodeAffectedByOuterViewportBoundsDeltaEi(%"class.cc::TransformTree"* %128, i32 %35) #13
  %129 = load i32, i32* %94, align 4
  br label %130

130:                                              ; preds = %92, %125
  %131 = phi i32 [ %120, %92 ], [ %129, %125 ]
  %132 = load i8, i8* %105, align 8
  %133 = lshr i8 %132, 1
  %134 = and i8 %133, 1
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 12
  %137 = and i32 %131, -4097
  %138 = or i32 %136, %137
  store i32 %138, i32* %94, align 4
  %139 = load i64, i64* %121, align 8
  %140 = and i64 %139, 262144
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %149, label %142

142:                                              ; preds = %130
  %143 = load i8, i8* %105, align 8
  %144 = lshr i8 %143, 5
  %145 = and i8 %144, 1
  %146 = xor i8 %145, 1
  %147 = zext i8 %146 to i32
  %148 = shl nuw nsw i32 %147, 15
  br label %149

149:                                              ; preds = %130, %142
  %150 = phi i32 [ 0, %130 ], [ %148, %142 ]
  %151 = and i32 %138, -32769
  %152 = or i32 %150, %151
  store i32 %152, i32* %94, align 4
  %153 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %45, align 8
  %154 = icmp eq %"struct.cc::StickyPositionConstraint"* %153, null
  br i1 %154, label %214, label %155

155:                                              ; preds = %149
  %156 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %157 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %156, i64 0, i32 3
  %158 = call dereferenceable(120) %"struct.cc::StickyPositionNodeData"* @_ZN2cc13TransformTree24EnsureStickyPositionDataEi(%"class.cc::TransformTree"* %157, i32 %35) #13
  %159 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %158, i64 0, i32 1, i32 0
  %160 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %153, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %160, i64 88, i1 false)
  %161 = call dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZNK5blink26TransformPaintPropertyNode28NearestScrollTranslationNodeEv(%"class.blink::TransformPaintPropertyNode"* %1) #13
  %162 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %161, i64 0, i32 1, i32 1, i32 0
  %163 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %162, align 8
  %164 = call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %161) #13
  %165 = load i32, i32* %7, align 8
  %166 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %163, i64 0, i32 0, i32 5
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, %165
  br i1 %168, label %172, label %169

169:                                              ; preds = %155
  %170 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %158, i64 0, i32 0
  store i32 -1, i32* %170, align 8
  %171 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  br label %183

172:                                              ; preds = %155
  %173 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %163, i64 0, i32 0, i32 4
  %174 = load i32, i32* %173, align 8
  %175 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %158, i64 0, i32 0
  store i32 %174, i32* %175, align 8
  %176 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %177 = icmp sgt i32 %174, -1
  br i1 %177, label %178, label %183

178:                                              ; preds = %172
  %179 = sext i32 %174 to i64
  %180 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %176, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %181 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %180, align 8
  %182 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %181, i64 %179
  br label %183

183:                                              ; preds = %169, %172, %178
  %184 = phi %"class.cc::PropertyTrees"* [ %176, %178 ], [ %176, %172 ], [ %171, %169 ]
  %185 = phi %"struct.cc::ScrollNode"* [ %182, %178 ], [ null, %172 ], [ null, %169 ]
  %186 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %185, i64 0, i32 5
  %187 = load i8, i8* %186, align 4
  %188 = and i8 %187, 8
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %184, i64 0, i32 3
  call void @_ZN2cc13TransformTree41AddNodeAffectedByOuterViewportBoundsDeltaEi(%"class.cc::TransformTree"* %191, i32 %35) #13
  br label %192

192:                                              ; preds = %183, %190
  %193 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %158, i64 0, i32 1, i32 8, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %203, label %196

196:                                              ; preds = %192
  %197 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %198 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %197, i64 0, i32 3
  %199 = call %"struct.cc::TransformNode"* @_ZN2cc13TransformTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::TransformTree"* %198, i64 %194) #13
  %200 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %199, i64 0, i32 0
  %201 = load i32, i32* %200, align 8
  %202 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %158, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  br label %203

203:                                              ; preds = %192, %196
  %204 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %158, i64 0, i32 1, i32 9, i32 0
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %203
  %208 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %209 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %208, i64 0, i32 3
  %210 = call %"struct.cc::TransformNode"* @_ZN2cc13TransformTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::TransformTree"* %209, i64 %205) #13
  %211 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %210, i64 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = getelementptr inbounds %"struct.cc::StickyPositionNodeData", %"struct.cc::StickyPositionNodeData"* %158, i64 0, i32 3
  store i32 %212, i32* %213, align 4
  br label %214

214:                                              ; preds = %203, %207, %149
  %215 = bitcast %"struct.cc::ElementId"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #13
  %216 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %6, i64 0, i32 0
  %217 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 6, i32 0
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %216, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %265, label %220

220:                                              ; preds = %214
  %221 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %222 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %221, i64 0, i32 2
  %223 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %222, i64 0, i32 0, i32 0, i32 0, i32 0
  %224 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %223, align 8
  %225 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %226 = bitcast %"struct.std::__1::pair"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = ptrtoint %"struct.std::__1::pair"* %224 to i64
  %229 = sub i64 %227, %228
  %230 = icmp eq i64 %229, 0
  %231 = inttoptr i64 %227 to %"struct.std::__1::pair"*
  br i1 %230, label %248, label %232

232:                                              ; preds = %220
  %233 = ashr exact i64 %229, 4
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi %"struct.std::__1::pair"* [ %224, %232 ], [ %246, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %245, %234 ]
  %237 = lshr i64 %236, 1
  %238 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %235, i64 %237
  %239 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %238, i64 0, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp ult i64 %240, %218
  %242 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %238, i64 1
  %243 = xor i64 %237, -1
  %244 = add i64 %236, %243
  %245 = select i1 %241, i64 %244, i64 %237
  %246 = select i1 %241, %"struct.std::__1::pair"* %242, %"struct.std::__1::pair"* %235
  %247 = icmp eq i64 %245, 0
  br i1 %247, label %248, label %234

248:                                              ; preds = %234, %220
  %249 = phi %"struct.std::__1::pair"* [ %224, %220 ], [ %246, %234 ]
  %250 = icmp eq %"struct.std::__1::pair"* %249, %231
  br i1 %250, label %255, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %249, i64 0, i32 0, i32 0
  %253 = load i64, i64* %252, align 8
  %254 = icmp ult i64 %218, %253
  br i1 %254, label %255, label %260

255:                                              ; preds = %251, %248
  %256 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %256) #13
  store i32 0, i32* %3, align 4
  %257 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %222, i64 0, i32 0, i32 0
  %258 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector"* %257, %"struct.std::__1::pair"* %249, %"struct.cc::ElementId"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %256) #13
  %259 = load i64, i64* %216, align 8
  br label %260

260:                                              ; preds = %251, %255
  %261 = phi i64 [ %259, %255 ], [ %218, %251 ]
  %262 = phi %"struct.std::__1::pair"* [ %258, %255 ], [ %249, %251 ]
  %263 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %262, i64 0, i32 1
  store i32 %35, i32* %263, align 4
  %264 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 3, i32 0
  store i64 %261, i64* %264, align 8
  br label %265

265:                                              ; preds = %214, %260
  %266 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %267 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %266, align 8
  %268 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %267, null
  br i1 %268, label %272, label %269

269:                                              ; preds = %265
  %270 = load i32, i32* %94, align 4
  %271 = or i32 %270, 1536
  store i32 %271, i32* %94, align 4
  call void @_ZN5blink19PropertyTreeManager26CreateCompositorScrollNodeERKNS_23ScrollPaintPropertyNodeERKN2cc13TransformNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ScrollPaintPropertyNode"* nonnull dereferenceable(168) %267, %"struct.cc::TransformNode"* dereferenceable(224) %44)
  br label %272

272:                                              ; preds = %265, %269
  %273 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  %274 = load i32, i32* %273, align 8
  %275 = icmp sgt i32 %274, -1
  br i1 %275, label %276, label %319

276:                                              ; preds = %272
  %277 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %278 = sext i32 %274 to i64
  %279 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %277, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %280 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %279, align 8
  %281 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %280, i64 %278
  %282 = icmp eq %"struct.cc::EffectNode"* %281, null
  br i1 %282, label %319, label %283

283:                                              ; preds = %276
  %284 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %280, i64 %278, i32 17
  %285 = load i8, i8* %284, align 1
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %319

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %280, i64 %278, i32 18
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, %30
  br i1 %290, label %291, label %319

291:                                              ; preds = %287
  %292 = load i8, i8* %105, align 8
  %293 = and i8 %292, 1
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %319, label %295

295:                                              ; preds = %291
  %296 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %17, align 8
  %297 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %296, null
  br i1 %297, label %319, label %298

298:                                              ; preds = %295, %303
  %299 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %301, %303 ], [ %296, %295 ]
  %300 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %299, i64 0, i32 0, i32 3, i32 0
  %301 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %300, align 8
  %302 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %301, null
  br i1 %302, label %307, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %299, i64 0, i32 0, i32 1
  %305 = load i8, i8* %304, align 4, !range !5
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %307, label %298

307:                                              ; preds = %303, %298
  %308 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %299, i64 2, i32 0, i32 1
  %309 = bitcast i8* %308 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %319, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %299, i64 2
  %314 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %313 to i8*
  %315 = load i8, i8* %314, align 8
  %316 = and i8 %315, 1
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %312
  store i8 2, i8* %284, align 1
  br label %319

319:                                              ; preds = %312, %291, %283, %295, %272, %318, %307, %276, %287
  %320 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 8, i32 0
  %321 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 14, i32 0
  %322 = load i64, i64* %320, align 8
  store i64 %322, i64* %321, align 8
  %323 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %17, align 8
  %324 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %323, null
  br i1 %324, label %352, label %325

325:                                              ; preds = %319, %330
  %326 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %328, %330 ], [ %323, %319 ]
  %327 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %326, i64 0, i32 0, i32 3, i32 0
  %328 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %327, align 8
  %329 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %328, null
  br i1 %329, label %334, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %326, i64 0, i32 0, i32 1
  %332 = load i8, i8* %331, align 4, !range !5
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %334, label %325

334:                                              ; preds = %330, %325
  %335 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %326, i64 2
  %336 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %335 to i8*
  %337 = load i8, i8* %336, align 8
  %338 = and i8 %337, 16
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %340, label %352

340:                                              ; preds = %334
  %341 = icmp sgt i32 %30, -1
  br i1 %341, label %342, label %348

342:                                              ; preds = %340
  %343 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %344 = sext i32 %30 to i64
  %345 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %343, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %346 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %345, align 8
  %347 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %346, i64 %344
  br label %348

348:                                              ; preds = %340, %342
  %349 = phi %"struct.cc::TransformNode"* [ %347, %342 ], [ null, %340 ]
  %350 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %349, i64 0, i32 2
  %351 = load i32, i32* %350, align 8
  br label %352

352:                                              ; preds = %334, %319, %348
  %353 = phi i32 [ %351, %348 ], [ %30, %334 ], [ -1, %319 ]
  %354 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %44, i64 0, i32 2
  store i32 %353, i32* %354, align 8
  %355 = load i32, i32* %7, align 8
  store i32 %355, i32* %9, align 4
  %356 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  store i32 %35, i32* %356, align 8
  %357 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %358 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %357, i64 0, i32 3
  call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %358, i1 zeroext true) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #13
  br label %359

359:                                              ; preds = %12, %352
  %360 = phi i32 [ %35, %352 ], [ %14, %12 ]
  ret i32 %360
}

declare void @_ZN2cc13TransformTree41AddNodeAffectedByOuterViewportBoundsDeltaEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #2

declare dereferenceable(120) %"struct.cc::StickyPositionNodeData"* @_ZN2cc13TransformTree24EnsureStickyPositionDataEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #2

declare dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZNK5blink26TransformPaintPropertyNode28NearestScrollTranslationNodeEv(%"class.blink::TransformPaintPropertyNode"*) local_unnamed_addr #2

declare %"struct.cc::TransformNode"* @_ZN2cc13TransformTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::TransformTree"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager26CreateCompositorScrollNodeERKNS_23ScrollPaintPropertyNodeERKN2cc13TransformNodeE(%"class.blink::PropertyTreeManager"* nocapture readonly, %"class.blink::ScrollPaintPropertyNode"* dereferenceable(168), %"struct.cc::TransformNode"* dereferenceable(224)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"struct.cc::ScrollNode", align 8
  %6 = alloca %"class.absl::optional.118", align 8
  %7 = alloca %"struct.cc::ElementId", align 8
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 0, i32 3, i32 0
  %9 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %9, i64 0, i32 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %11
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %9, i64 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %3, %15
  %19 = phi i32 [ %17, %15 ], [ -1, %3 ]
  %20 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %21 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %20, align 8
  %22 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %21, i64 0, i32 6, i32 0
  %23 = bitcast %"struct.cc::ScrollNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %23) #13
  call void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"* nonnull %5) #13
  %24 = call i32 @_ZN2cc12PropertyTreeINS_10ScrollNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.115"* %22, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %5, i32 %19) #13
  call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %23) #13
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %20, align 8
  %28 = sext i32 %24 to i64
  %29 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %27, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %30 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %29, align 8
  %31 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %30, i64 %28
  br label %32

32:                                               ; preds = %18, %26
  %33 = phi %"struct.cc::ScrollNode"* [ %31, %26 ], [ null, %18 ]
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 5
  %35 = load i8, i8* %34, align 4
  %36 = or i8 %35, 1
  store i8 %36, i8* %34, align 4
  %37 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1
  %38 = bitcast %"class.blink::IntSize"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = icmp sgt i32 %40, 0
  %44 = icmp sgt i32 %42, 0
  %45 = and i64 %39, -4294967296
  %46 = select i1 %44, i64 %45, i64 0
  %47 = and i64 %39, 4294967295
  %48 = select i1 %43, i64 %47, i64 0
  %49 = or i64 %46, %48
  %50 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 3
  %51 = bitcast %"class.gfx::Size"* %50 to i64*
  store i64 %49, i64* %51, align 4
  %52 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %53, 0
  %57 = select i1 %56, i32 %53, i32 0
  %58 = icmp sgt i32 %55, 0
  %59 = select i1 %58, i32 %55, i32 0
  %60 = zext i32 %59 to i64
  %61 = shl nuw nsw i64 %60, 32
  %62 = zext i32 %57 to i64
  %63 = or i64 %61, %62
  %64 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 4
  %65 = bitcast %"class.gfx::Size"* %64 to i64*
  store i64 %63, i64* %65, align 4
  %66 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 2
  %67 = load i8, i8* %66, align 8, !range !5
  %68 = shl nuw nsw i8 %67, 6
  %69 = and i8 %36, -65
  %70 = or i8 %68, %69
  store i8 %70, i8* %34, align 4
  %71 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 3
  %72 = load i8, i8* %71, align 1, !range !5
  %73 = shl nuw i8 %72, 7
  %74 = and i8 %70, 127
  %75 = or i8 %74, %73
  store i8 %75, i8* %34, align 4
  %76 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 4
  %77 = load i8, i8* %76, align 2, !range !5
  %78 = shl nuw nsw i8 %77, 4
  %79 = and i8 %75, -17
  %80 = or i8 %79, %78
  store i8 %80, i8* %34, align 4
  %81 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 5
  %82 = load i8, i8* %81, align 1, !range !5
  %83 = shl nuw nsw i8 %82, 1
  %84 = and i8 %80, -3
  %85 = or i8 %84, %83
  store i8 %85, i8* %34, align 4
  %86 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 6
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 2
  store i32 %87, i32* %88, align 8
  %89 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 8, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 8, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 10
  %94 = bitcast %"struct.cc::OverscrollBehavior"* %93 to i64*
  %95 = zext i32 %92 to i64
  %96 = shl nuw i64 %95, 32
  %97 = zext i32 %90 to i64
  %98 = or i64 %96, %97
  store i64 %98, i64* %94, align 4
  %99 = getelementptr inbounds %"class.absl::optional.118", %"class.absl::optional.118"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %99) #13
  %100 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 96, i1 false) #13, !alias.scope !26
  %101 = load i8, i8* %100, align 8, !range !5, !noalias !26
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %117, label %103

103:                                              ; preds = %32
  %104 = getelementptr inbounds %"class.absl::optional.118", %"class.absl::optional.118"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = bitcast i8* %104 to %"class.cc::SnapContainerData"*
  call void @_ZN2cc17SnapContainerDataC1ERKS0_(%"class.cc::SnapContainerData"* %106, %"class.cc::SnapContainerData"* dereferenceable(88) %105) #13
  store i8 1, i8* %99, align 8, !alias.scope !26
  %107 = getelementptr inbounds %"class.absl::optional.118", %"class.absl::optional.118"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %108 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 8, !range !5
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = call dereferenceable(88) %"class.cc::SnapContainerData"* @_ZN2cc17SnapContainerDataaSEOS0_(%"class.cc::SnapContainerData"* %112, %"class.cc::SnapContainerData"* dereferenceable(88) %107) #13
  br label %123

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %116 = bitcast i8* %115 to %"class.cc::SnapContainerData"*
  call void @_ZN2cc17SnapContainerDataC1EOS0_(%"class.cc::SnapContainerData"* %116, %"class.cc::SnapContainerData"* dereferenceable(88) %107) #13
  store i8 1, i8* %108, align 8
  br label %123

117:                                              ; preds = %32
  %118 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %119 = load i8, i8* %118, align 8, !range !5
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %122) #13
  store i8 0, i8* %118, align 8
  br label %123

123:                                              ; preds = %111, %114, %117, %121
  %124 = load i8, i8* %99, align 8, !range !5
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.absl::optional.118", %"class.absl::optional.118"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %127) #13
  store i8 0, i8* %99, align 8
  br label %128

128:                                              ; preds = %123, %126
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %99) #13
  %129 = bitcast %"struct.cc::ElementId"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #13
  %130 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %7, i64 0, i32 0
  %131 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 1, i32 7, i32 0
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %130, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %179, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 8, i32 0
  store i64 %132, i64* %135, align 8
  %136 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %20, align 8
  %137 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %136, i64 0, i32 1
  %138 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %137, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %138, align 8
  %140 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %136, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast %"struct.std::__1::pair"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = ptrtoint %"struct.std::__1::pair"* %139 to i64
  %144 = sub i64 %142, %143
  %145 = icmp eq i64 %144, 0
  %146 = inttoptr i64 %142 to %"struct.std::__1::pair"*
  br i1 %145, label %163, label %147

147:                                              ; preds = %134
  %148 = ashr exact i64 %144, 4
  br label %149

149:                                              ; preds = %149, %147
  %150 = phi %"struct.std::__1::pair"* [ %139, %147 ], [ %161, %149 ]
  %151 = phi i64 [ %148, %147 ], [ %160, %149 ]
  %152 = lshr i64 %151, 1
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 %152
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp ult i64 %155, %132
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 1
  %158 = xor i64 %152, -1
  %159 = add i64 %151, %158
  %160 = select i1 %156, i64 %159, i64 %152
  %161 = select i1 %156, %"struct.std::__1::pair"* %157, %"struct.std::__1::pair"* %150
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %163, label %149

163:                                              ; preds = %149, %134
  %164 = phi %"struct.std::__1::pair"* [ %139, %134 ], [ %161, %149 ]
  %165 = icmp eq %"struct.std::__1::pair"* %164, %146
  br i1 %165, label %170, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %164, i64 0, i32 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = icmp ult i64 %132, %168
  br i1 %169, label %170, label %175

170:                                              ; preds = %166, %163
  %171 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %171) #13
  store i32 0, i32* %4, align 4
  %172 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %137, i64 0, i32 0, i32 0
  %173 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector"* %172, %"struct.std::__1::pair"* %164, %"struct.cc::ElementId"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171) #13
  %174 = load i64, i64* %130, align 8
  br label %175

175:                                              ; preds = %166, %170
  %176 = phi i64 [ %174, %170 ], [ %132, %166 ]
  %177 = phi %"struct.std::__1::pair"* [ %173, %170 ], [ %164, %166 ]
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 0, i32 1
  store i32 %24, i32* %178, align 4
  br label %179

179:                                              ; preds = %128, %175
  %180 = phi i64 [ 0, %128 ], [ %176, %175 ]
  %181 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %33, i64 0, i32 9
  store i32 %182, i32* %183, align 8
  %184 = load i32, i32* %10, align 8
  %185 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 0, i32 5
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %1, i64 0, i32 0, i32 4
  store i32 %24, i32* %186, align 8
  %187 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %20, align 8
  %188 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %187, i64 0, i32 6
  %189 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %2, i64 0, i32 11
  %190 = call zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %188, i64 %180, %"class.gfx::ScrollOffset"* dereferenceable(8) %189) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager38EnsureCompositorPageScaleTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #3 align 2 {
  %3 = tail call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1)
  %4 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %5 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %6 = icmp sgt i32 %3, -1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = sext i32 %3 to i64
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 %8
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi %"struct.cc::TransformNode"* [ %11, %7 ], [ null, %2 ]
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %13, i64 0, i32 4, i32 0, i32 0, i64 0, i64 0
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %5, i64 0, i32 3, i32 1
  %18 = bitcast float* %17 to i32*
  store i32 %16, i32* %18, align 8
  %19 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %4, align 8
  %20 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %19, i64 0, i32 3
  tail call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %20, i1 zeroext true) #13
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager24EnsureCompositorClipNodeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::ClipPaintPropertyNode"* nocapture dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.cc::ClipNode", align 8
  %4 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, %5
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %82

13:                                               ; preds = %2, %9
  %14 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %15 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %14, align 8
  %16 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13, %22
  %18 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %20, %22 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %18, i64 0, i32 0, i32 3, i32 0
  %20 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %19, align 8
  %21 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %18, i64 0, i32 0, i32 1
  %24 = load i8, i8* %23, align 4, !range !5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %17

26:                                               ; preds = %22, %17
  %27 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %18 to %"class.blink::ClipPaintPropertyNode"*
  br label %28

28:                                               ; preds = %13, %26
  %29 = phi %"class.blink::ClipPaintPropertyNode"* [ %27, %26 ], [ null, %13 ]
  %30 = tail call i32 @_ZN5blink19PropertyTreeManager24EnsureCompositorClipNodeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %29)
  %31 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %32 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %33 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %32, i64 0, i32 5, i32 0
  %34 = bitcast %"struct.cc::ClipNode"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %34) #13
  call void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"* nonnull %3) #13
  %35 = call i32 @_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.95"* %33, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %3, i32 %30) #13
  call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %34) #13
  %36 = icmp sgt i32 %35, -1
  br i1 %36, label %37, label %43

37:                                               ; preds = %28
  %38 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %39 = sext i32 %35 to i64
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %38, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %41 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %40, align 8
  %42 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %41, i64 %39
  br label %43

43:                                               ; preds = %28, %37
  %44 = phi %"struct.cc::ClipNode"* [ %42, %37 ], [ null, %28 ]
  %45 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %46 = bitcast float* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 0, i32 1, i32 0
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 0, i32 1, i32 1
  %51 = load float, float* %50, align 4
  %52 = fcmp ogt float %49, 0x3EB0000000000000
  %53 = select i1 %52, float %49, float 0.000000e+00
  %54 = insertelement <2 x float> undef, float %53, i32 0
  %55 = fcmp ogt float %51, 0x3EB0000000000000
  %56 = select i1 %55, float %51, float 0.000000e+00
  %57 = insertelement <2 x float> %54, float %56, i32 1
  %58 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %44, i64 0, i32 3
  %59 = bitcast %"class.gfx::RectF"* %58 to i64*
  store i64 %47, i64* %59, align 4
  %60 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %44, i64 0, i32 3, i32 1
  %61 = bitcast %"class.gfx::SizeF"* %60 to <2 x float>*
  store <2 x float> %57, <2 x float>* %61, align 4
  %62 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %62, align 8
  br label %64

64:                                               ; preds = %69, %43
  %65 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %63, %43 ], [ %67, %69 ]
  %66 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %65, i64 0, i32 0, i32 3, i32 0
  %67 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %66, align 8
  %68 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %65, i64 0, i32 0, i32 1
  %71 = load i8, i8* %70, align 4, !range !5
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %64

73:                                               ; preds = %64, %69
  %74 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %65 to %"class.blink::TransformPaintPropertyNode"*
  %75 = call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %74)
  %76 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %44, i64 0, i32 8
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %44, i64 0, i32 2
  store i32 0, i32* %77, align 8
  %78 = load i32, i32* %4, align 8
  store i32 %78, i32* %6, align 4
  %79 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  store i32 %35, i32* %79, align 8
  %80 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %31, align 8
  %81 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %80, i64 0, i32 5, i32 0, i32 2
  store i8 1, i8* %81, align 8
  br label %82

82:                                               ; preds = %9, %73
  %83 = phi i32 [ %35, %73 ], [ %11, %9 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager31EnsureCompositorInnerScrollNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %3, align 8
  %5 = tail call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1) #13
  %6 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %4, i64 0, i32 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %7
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %4, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %17 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %17, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %20 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %19, align 8
  %21 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %20, i64 %18
  br label %22

22:                                               ; preds = %2, %11, %15
  %23 = phi i32 [ %13, %15 ], [ %13, %11 ], [ -1, %2 ]
  %24 = phi %"struct.cc::ScrollNode"* [ %21, %15 ], [ null, %11 ], [ null, %2 ]
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %24, i64 0, i32 5
  %26 = load i8, i8* %25, align 4
  %27 = or i8 %26, 4
  store i8 %27, i8* %25, align 4
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager31EnsureCompositorOuterScrollNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %3, align 8
  %5 = tail call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1) #13
  %6 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %4, i64 0, i32 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %7
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %4, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %17 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %17, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %20 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %19, align 8
  %21 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %20, i64 %18
  br label %22

22:                                               ; preds = %2, %11, %15
  %23 = phi i32 [ %13, %15 ], [ %13, %11 ], [ -1, %2 ]
  %24 = phi %"struct.cc::ScrollNode"* [ %21, %15 ], [ null, %11 ], [ null, %2 ]
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %24, i64 0, i32 5
  %26 = load i8, i8* %25, align 4
  %27 = or i8 %26, 8
  store i8 %27, i8* %25, align 4
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager17EmitClipMaskLayerEv(%"class.blink::PropertyTreeManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::ElementId", align 8
  %3 = alloca %"struct.cc::ElementId", align 8
  %4 = alloca %"struct.cc::EffectNode", align 8
  %5 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %11 = sext i32 %7 to i64
  %12 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %10, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %13 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %12, align 8
  %14 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 %11
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi %"struct.cc::EffectNode"* [ %14, %9 ], [ null, %1 ]
  %17 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %77, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %16, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, -1
  %25 = zext i32 %24 to i64
  %26 = load i32, i32* %21, align 4
  %27 = shl i32 %26, 15
  %28 = xor i32 %27, -1
  %29 = add i32 %26, %28
  %30 = lshr i32 %29, 10
  %31 = xor i32 %30, %29
  %32 = mul i32 %31, 9
  %33 = lshr i32 %32, 6
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 11
  %36 = xor i32 %35, -1
  %37 = add i32 %34, %36
  %38 = lshr i32 %37, 16
  %39 = xor i32 %38, %37
  %40 = and i32 %39, %24
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %18, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, %26
  br i1 %44, label %74, label %45

45:                                               ; preds = %20
  %46 = xor i32 %39, -1
  %47 = lshr i32 %37, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %64, %45
  %60 = phi i32 [ %43, %45 ], [ %70, %64 ]
  %61 = phi i64 [ %41, %45 ], [ %68, %64 ]
  %62 = phi i64 [ 0, %45 ], [ %66, %64 ]
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = icmp eq i64 %62, 0
  %66 = select i1 %65, i64 %58, i64 %62
  %67 = add i64 %66, %61
  %68 = and i64 %67, %25
  %69 = getelementptr inbounds i32, i32* %18, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %26
  br i1 %71, label %72, label %59

72:                                               ; preds = %64
  %73 = getelementptr inbounds i32, i32* %18, i64 %68
  br label %74

74:                                               ; preds = %72, %20
  %75 = phi i32* [ %42, %20 ], [ %73, %72 ]
  %76 = icmp eq i32* %75, null
  br i1 %76, label %77, label %81

77:                                               ; preds = %59, %74, %15
  %78 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %16, i64 0, i32 11, i32 0
  %79 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %78) #13
  %80 = icmp eq i32 %79, 0
  br label %81

81:                                               ; preds = %74, %77
  %82 = phi i1 [ false, %74 ], [ %80, %77 ]
  %83 = bitcast %"struct.cc::ElementId"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  %84 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %2, i64 0, i32 0
  %85 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %85, i64* %84, align 8
  %86 = bitcast %"struct.cc::ElementId"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %3, i64 0, i32 0
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 0
  %89 = load %"class.blink::PropertyTreeManagerClient"*, %"class.blink::PropertyTreeManagerClient"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 3
  %91 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %93 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %92, align 8
  %94 = bitcast %"class.blink::PropertyTreeManagerClient"* %89 to %"class.blink::SynthesizedClip"* (%"class.blink::PropertyTreeManagerClient"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i1, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*)***
  %95 = load %"class.blink::SynthesizedClip"* (%"class.blink::PropertyTreeManagerClient"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i1, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*)**, %"class.blink::SynthesizedClip"* (%"class.blink::PropertyTreeManagerClient"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i1, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*)*** %94, align 8
  %96 = getelementptr inbounds %"class.blink::SynthesizedClip"* (%"class.blink::PropertyTreeManagerClient"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i1, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*)*, %"class.blink::SynthesizedClip"* (%"class.blink::PropertyTreeManagerClient"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i1, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*)** %95, i64 2
  %97 = load %"class.blink::SynthesizedClip"* (%"class.blink::PropertyTreeManagerClient"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i1, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*)*, %"class.blink::SynthesizedClip"* (%"class.blink::PropertyTreeManagerClient"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i1, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*)** %96, align 8
  %98 = call dereferenceable(240) %"class.blink::SynthesizedClip"* %97(%"class.blink::PropertyTreeManagerClient"* %89, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %91, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %93, i1 zeroext %82, %"struct.cc::ElementId"* nonnull dereferenceable(8) %2, %"struct.cc::ElementId"* nonnull dereferenceable(8) %3) #13
  %99 = call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* nonnull %2) #13
  %100 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %16, i64 0, i32 2
  store i64 %99, i64* %100, align 8
  br i1 %82, label %101, label %171

101:                                              ; preds = %81
  %102 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %103 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %102, i64 0, i32 4
  %104 = bitcast %"struct.cc::EffectNode"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %104) #13
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %4) #13
  %105 = load i32, i32* %6, align 8
  %106 = call i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"* %103, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %4, i32 %105) #13
  %107 = icmp sgt i32 %106, -1
  br i1 %107, label %108, label %113

108:                                              ; preds = %101
  %109 = sext i32 %106 to i64
  %110 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %102, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %111 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %110, align 8
  %112 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %111, i64 %109
  br label %113

113:                                              ; preds = %101, %108
  %114 = phi %"struct.cc::EffectNode"* [ %112, %108 ], [ null, %101 ]
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %104) #13
  %115 = load i32, i32* %6, align 8
  %116 = icmp sgt i32 %115, -1
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %5, align 8
  %119 = sext i32 %115 to i64
  %120 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %118, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %121 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %120, align 8
  %122 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %121, i64 %119
  br label %123

123:                                              ; preds = %113, %117
  %124 = phi %"struct.cc::EffectNode"* [ %122, %117 ], [ null, %113 ]
  %125 = call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* nonnull %3) #13
  %126 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %114, i64 0, i32 2
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %124, i64 0, i32 19
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %114, i64 0, i32 19
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %114, i64 0, i32 12
  store i32 6, i32* %130, align 4
  %131 = getelementptr inbounds %"class.blink::SynthesizedClip", %"class.blink::SynthesizedClip"* %98, i64 0, i32 1, i32 0
  %132 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 3
  %134 = load %"class.blink::LayerListBuilder"*, %"class.blink::LayerListBuilder"** %133, align 8
  %135 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %132, i64 0, i32 0
  %136 = icmp eq %"class.cc::PictureLayer"* %132, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %123
  %138 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %132, i64 0, i32 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %138) #13
  br label %139

139:                                              ; preds = %123, %137
  call void @_ZN5blink16LayerListBuilder3AddE13scoped_refptrIN2cc5LayerEE(%"class.blink::LayerListBuilder"* %134, %"class.cc::Layer"* %135) #13
  %140 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 2
  %141 = load %"class.cc::Layer"*, %"class.cc::Layer"** %140, align 8
  %142 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %141, i64 0, i32 12
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %132, i64 0, i32 0, i32 12
  store i32 %143, i32* %144, align 4
  %145 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %92, align 8
  %146 = call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %145)
  call void @_ZN2cc5Layer21SetTransformTreeIndexEi(%"class.cc::Layer"* %135, i32 %146) #13
  %147 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %92, align 8
  %148 = call dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZNK5blink26TransformPaintPropertyNode28NearestScrollTranslationNodeEv(%"class.blink::TransformPaintPropertyNode"* %147) #13
  %149 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %148, i64 0, i32 1, i32 1, i32 0
  %150 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %149, align 8
  %151 = call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %148) #13
  %152 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %150, i64 0, i32 0, i32 5
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, %153
  br i1 %156, label %157, label %160

157:                                              ; preds = %139
  %158 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %150, i64 0, i32 0, i32 4
  %159 = load i32, i32* %158, align 8
  br label %160

160:                                              ; preds = %139, %157
  %161 = phi i32 [ %159, %157 ], [ -1, %139 ]
  call void @_ZN2cc5Layer18SetScrollTreeIndexEi(%"class.cc::Layer"* %135, i32 %161) #13
  %162 = load i32, i32* %129, align 4
  call void @_ZN2cc5Layer16SetClipTreeIndexEi(%"class.cc::Layer"* %135, i32 %162) #13
  %163 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %114, i64 0, i32 0
  %164 = load i32, i32* %163, align 8
  call void @_ZN2cc5Layer18SetEffectTreeIndexEi(%"class.cc::Layer"* %135, i32 %164) #13
  %165 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %124, i64 0, i32 6
  %166 = call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %165) #13
  br i1 %166, label %171, label %167

167:                                              ; preds = %160
  call void @_ZN2cc12PictureLayer23SetIsBackdropFilterMaskEb(%"class.cc::PictureLayer"* %132, i1 zeroext true) #13
  %168 = load i64, i64* %126, align 8
  %169 = call i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64 %168, i32 7) #13
  call void @_ZN2cc5Layer12SetElementIdENS_9ElementIdE(%"class.cc::Layer"* %135, i64 %169) #13
  %170 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %124, i64 0, i32 10, i32 0
  store i64 %169, i64* %170, align 8
  br label %171

171:                                              ; preds = %160, %167, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  ret void
}

declare void @_ZN5blink16LayerListBuilder3AddE13scoped_refptrIN2cc5LayerEE(%"class.blink::LayerListBuilder"*, %"class.cc::Layer"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare void @_ZN2cc12PictureLayer23SetIsBackdropFilterMaskEb(%"class.cc::PictureLayer"*, i1 zeroext) local_unnamed_addr #2

declare i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64, i32) local_unnamed_addr #2

declare void @_ZN2cc5Layer12SetElementIdENS_9ElementIdE(%"class.cc::Layer"*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashSet"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %4, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %11
  br i1 %29, label %59, label %30

30:                                               ; preds = %8
  %31 = xor i32 %24, -1
  %32 = lshr i32 %22, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %55, %49 ]
  %46 = phi i64 [ %26, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds i32, i32* %4, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %11
  br i1 %56, label %57, label %44

57:                                               ; preds = %49
  %58 = getelementptr inbounds i32, i32* %4, i64 %53
  br label %59

59:                                               ; preds = %57, %8
  %60 = phi i32* [ %27, %8 ], [ %58, %57 ]
  %61 = icmp eq i32* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %44, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds i32, i32* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi i32* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0
  %71 = getelementptr inbounds i32, i32* %4, i64 %68
  %72 = icmp eq i32* %71, %69
  br i1 %72, label %95, label %73

73:                                               ; preds = %67
  store i32 -1, i32* %69, align 4
  %74 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, -1
  store i32 %82, i32* %80, align 4
  %83 = mul i32 %82, 6
  %84 = load i32, i32* %6, align 8
  %85 = icmp ult i32 %83, %84
  %86 = icmp ugt i32 %84, 8
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %95

88:                                               ; preds = %73
  %89 = lshr i32 %84, 1
  %90 = zext i32 %89 to i64
  %91 = shl nuw nsw i64 %90, 2
  %92 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %91, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %92, i8 0, i64 %91, i1 false) #13
  %93 = bitcast i8* %92 to i32*
  %94 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable"* %70, i32* %93, i32 %89, i32* null) #13
  br label %95

95:                                               ; preds = %67, %73, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager37SwitchToEffectNodeWithSynthesizedClipERKNS_23EffectPaintPropertyNodeERKNS_21ClipPaintPropertyNodeEb(%"class.blink::PropertyTreeManager"*, %"class.blink::EffectPaintPropertyNode"* dereferenceable(152), %"class.blink::ClipPaintPropertyNode"* dereferenceable(168), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 2
  %6 = bitcast %"class.blink::EffectPaintPropertyNode"** %5 to %"class.blink::PaintPropertyNode"**
  %7 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0
  %9 = bitcast %"class.blink::PaintPropertyNode"* %7 to %"class.blink::EffectPaintPropertyNodeOrAlias"*
  %10 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %8, %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %7, i64 0, i32 3, i32 0
  %13 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %12, align 8
  %14 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %17 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %16, align 8
  %18 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, %9
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, null
  %21 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %13, %8
  %22 = or i1 %21, %20
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call dereferenceable(24) %"class.blink::EffectPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_30EffectPaintPropertyNodeOrAliasES2_(%"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24) %9, %"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24) %8) #13
  br label %25

25:                                               ; preds = %4, %11, %15, %19, %23
  %26 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %8, %19 ], [ %8, %4 ], [ %9, %15 ], [ %9, %11 ], [ %24, %23 ]
  br label %27

27:                                               ; preds = %25, %32
  %28 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %30, %32 ], [ %26, %25 ]
  %29 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %28, i64 0, i32 0, i32 3, i32 0
  %30 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %29, align 8
  %31 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %28, i64 0, i32 0, i32 1
  %34 = load i8, i8* %33, align 4, !range !5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %27

36:                                               ; preds = %27, %32
  %37 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %28 to %"class.blink::EffectPaintPropertyNode"*
  %38 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %5, align 8
  %39 = icmp eq %"class.blink::EffectPaintPropertyNode"* %38, %37
  br i1 %39, label %43, label %40

40:                                               ; preds = %36, %40
  tail call void @_ZN5blink19PropertyTreeManager13CloseCcEffectEv(%"class.blink::PropertyTreeManager"* %0)
  %41 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %5, align 8
  %42 = icmp eq %"class.blink::EffectPaintPropertyNode"* %41, %37
  br i1 %42, label %43, label %40

43:                                               ; preds = %40, %36
  tail call void @_ZN5blink19PropertyTreeManager27BuildEffectNodesRecursivelyERKNS_23EffectPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::EffectPaintPropertyNode"* dereferenceable(152) %1)
  %44 = tail call i32 @_ZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS_21ClipPaintPropertyNodeEPKNS_23EffectPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %2, %"class.blink::EffectPaintPropertyNode"* null)
  br i1 %3, label %45, label %55

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7
  %47 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %46, i64 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7, i32 0, i32 1
  %52 = bitcast i32* %48 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #13
  %53 = bitcast %"class.WTF::HashSet"* %46 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  store i32 0, i32* %51, align 8
  %54 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7, i32 0, i32 2
  store i32 0, i32* %54, align 4
  br label %55

55:                                               ; preds = %50, %45, %43
  %56 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  %57 = load i32, i32* %56, align 8
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager27BuildEffectNodesRecursivelyERKNS_23EffectPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::EffectPaintPropertyNode"* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"struct.cc::EffectNode", align 8
  %5 = alloca %"struct.cc::ElementId", align 8
  %6 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 2
  %8 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %7, align 8
  %9 = icmp eq %"class.blink::EffectPaintPropertyNode"* %8, %1
  br i1 %9, label %266, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %12 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %11, align 8
  %13 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10, %19
  %15 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %17, %19 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %15, i64 0, i32 0, i32 3, i32 0
  %17 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %16, align 8
  %18 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %15, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 4, !range !5
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %14

23:                                               ; preds = %19, %14
  %24 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %15 to %"class.blink::EffectPaintPropertyNode"*
  br label %25

25:                                               ; preds = %10, %23
  %26 = phi %"class.blink::EffectPaintPropertyNode"* [ %24, %23 ], [ null, %10 ]
  tail call void @_ZN5blink19PropertyTreeManager27BuildEffectNodesRecursivelyERKNS_23EffectPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::EffectPaintPropertyNode"* dereferenceable(152) %26)
  %27 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %28 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %30
  br i1 %33, label %34, label %47

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %47

38:                                               ; preds = %34
  %39 = sext i32 %36 to i64
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %28, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %41 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %40, align 8
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %41, i64 %39
  %43 = icmp eq %"struct.cc::EffectNode"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E, align 1, !range !5
  %46 = icmp ne i8 %45, 0
  br label %47

47:                                               ; preds = %25, %34, %44, %38
  %48 = phi i1 [ false, %38 ], [ %46, %44 ], [ false, %34 ], [ false, %25 ]
  %49 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 1, i32 1, i32 0
  %50 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %49, align 8
  %51 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %72, label %69

56:                                               ; preds = %47, %61
  %57 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %59, %61 ], [ %50, %47 ]
  %58 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %57, i64 0, i32 0, i32 3, i32 0
  %59 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %58, align 8
  %60 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %57, i64 0, i32 0, i32 1
  %63 = load i8, i8* %62, align 4, !range !5
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %56

65:                                               ; preds = %56, %61
  %66 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %57 to %"class.blink::ClipPaintPropertyNode"*
  %67 = tail call i32 @_ZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS_21ClipPaintPropertyNodeEPKNS_23EffectPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %66, %"class.blink::EffectPaintPropertyNode"* %1)
  %68 = tail call i32 @_ZN5blink19PropertyTreeManager24EnsureCompositorClipNodeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %66)
  br label %88

69:                                               ; preds = %52, %69
  tail call void @_ZN5blink19PropertyTreeManager13CloseCcEffectEv(%"class.blink::PropertyTreeManager"* %0)
  %70 = load i32, i32* %53, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %69

72:                                               ; preds = %69, %52
  %73 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 3
  %74 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %6, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %84

78:                                               ; preds = %72
  %79 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %27, align 8
  %80 = sext i32 %76 to i64
  %81 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %79, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %82 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %81, align 8
  %83 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %82, i64 %80
  br label %84

84:                                               ; preds = %72, %78
  %85 = phi %"struct.cc::EffectNode"* [ %83, %78 ], [ null, %72 ]
  %86 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %85, i64 0, i32 19
  %87 = load i32, i32* %86, align 4
  br label %88

88:                                               ; preds = %84, %65
  %89 = phi i32 [ %67, %65 ], [ -1, %84 ]
  %90 = phi i32 [ %68, %65 ], [ %87, %84 ]
  %91 = phi %"class.blink::ClipPaintPropertyNode"* [ %66, %65 ], [ %74, %84 ]
  %92 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0
  %93 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %92, align 8
  br label %94

94:                                               ; preds = %99, %88
  %95 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %93, %88 ], [ %97, %99 ]
  %96 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %95, i64 0, i32 0, i32 3, i32 0
  %97 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %96, align 8
  %98 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %95, i64 0, i32 0, i32 1
  %101 = load i8, i8* %100, align 4, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %94

103:                                              ; preds = %94, %99
  %104 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %95 to %"class.blink::TransformPaintPropertyNode"*
  %105 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %27, align 8
  %106 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %105, i64 0, i32 4
  %107 = bitcast %"struct.cc::EffectNode"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %107) #13
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %4) #13
  %108 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %6, i64 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = call i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"* %106, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %4, i32 %109) #13
  %111 = icmp sgt i32 %110, -1
  br i1 %111, label %112, label %117

112:                                              ; preds = %103
  %113 = sext i32 %110 to i64
  %114 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %105, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %115 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %114, align 8
  %116 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %115, i64 %113
  br label %117

117:                                              ; preds = %103, %112
  %118 = phi %"struct.cc::EffectNode"* [ %116, %112 ], [ null, %103 ]
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %107) #13
  %119 = icmp eq i32 %89, -1
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %118, i64 0, i32 0
  %122 = load i32, i32* %121, align 8
  call void @_ZN5blink19PropertyTreeManager20PopulateCcEffectNodeERN2cc10EffectNodeERKNS_23EffectPaintPropertyNodeEi(%"class.blink::PropertyTreeManager"* %0, %"struct.cc::EffectNode"* dereferenceable(288) %118, %"class.blink::EffectPaintPropertyNode"* dereferenceable(152) %1, i32 %90)
  br label %130

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %118, i64 0, i32 19
  store i32 %90, i32* %124, align 4
  %125 = call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %104)
  %126 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %118, i64 0, i32 18
  store i32 %125, i32* %126, align 8
  %127 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 1, i32 7
  %128 = call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* %127) #13
  %129 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %118, i64 0, i32 2
  store i64 %128, i64* %129, align 8
  br label %130

130:                                              ; preds = %123, %120
  %131 = phi i32 [ %122, %120 ], [ %89, %123 ]
  br i1 %48, label %135, label %132

132:                                              ; preds = %130
  %133 = load i32, i32* %29, align 8
  store i32 %133, i32* %31, align 4
  %134 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 4
  store i32 %131, i32* %134, align 8
  br label %135

135:                                              ; preds = %132, %130
  %136 = bitcast %"struct.cc::ElementId"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #13
  %137 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %5, i64 0, i32 0
  %138 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %1, i64 0, i32 1, i32 7, i32 0
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %137, align 8
  %140 = icmp eq i64 %139, 0
  %141 = or i1 %48, %140
  br i1 %141, label %183, label %142

142:                                              ; preds = %135
  %143 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %27, align 8
  %144 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %144, align 8
  %146 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast %"struct.std::__1::pair"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = ptrtoint %"struct.std::__1::pair"* %145 to i64
  %150 = sub i64 %148, %149
  %151 = icmp eq i64 %150, 0
  %152 = inttoptr i64 %148 to %"struct.std::__1::pair"*
  br i1 %151, label %169, label %153

153:                                              ; preds = %142
  %154 = ashr exact i64 %150, 4
  br label %155

155:                                              ; preds = %155, %153
  %156 = phi %"struct.std::__1::pair"* [ %145, %153 ], [ %167, %155 ]
  %157 = phi i64 [ %154, %153 ], [ %166, %155 ]
  %158 = lshr i64 %157, 1
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %156, i64 %158
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %159, i64 0, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, %139
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %159, i64 1
  %164 = xor i64 %158, -1
  %165 = add i64 %157, %164
  %166 = select i1 %162, i64 %165, i64 %158
  %167 = select i1 %162, %"struct.std::__1::pair"* %163, %"struct.std::__1::pair"* %156
  %168 = icmp eq i64 %166, 0
  br i1 %168, label %169, label %155

169:                                              ; preds = %155, %142
  %170 = phi %"struct.std::__1::pair"* [ %145, %142 ], [ %167, %155 ]
  %171 = icmp eq %"struct.std::__1::pair"* %170, %152
  br i1 %171, label %176, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %170, i64 0, i32 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = icmp ult i64 %139, %174
  br i1 %175, label %176, label %180

176:                                              ; preds = %172, %169
  %177 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %177) #13
  store i32 0, i32* %3, align 4
  %178 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %143, i64 0, i32 0, i32 0, i32 0
  %179 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector"* %178, %"struct.std::__1::pair"* %170, %"struct.cc::ElementId"* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %177) #13
  br label %180

180:                                              ; preds = %172, %176
  %181 = phi %"struct.std::__1::pair"* [ %179, %176 ], [ %170, %172 ]
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 0, i32 1
  store i32 %131, i32* %182, align 4
  br label %183

183:                                              ; preds = %135, %180
  %184 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6
  %185 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = icmp eq i32 %186, %188
  br i1 %189, label %190, label %229, !prof !4

190:                                              ; preds = %183
  %191 = add i32 %186, 1
  %192 = lshr i32 %186, 2
  %193 = add i32 %191, %192
  %194 = icmp ugt i32 %193, 4
  %195 = select i1 %194, i32 %193, i32 4
  %196 = icmp ugt i32 %195, %191
  %197 = select i1 %196, i32 %195, i32 %191
  %198 = icmp ult i32 %186, %197
  br i1 %198, label %199, label %229, !prof !3

199:                                              ; preds = %190
  %200 = getelementptr inbounds %"class.WTF::Vector.542", %"class.WTF::Vector.542"* %184, i64 0, i32 0, i32 0, i32 0
  %201 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %200, align 8
  %202 = icmp eq %"struct.blink::PropertyTreeManager::EffectState"* %201, null
  %203 = zext i32 %197 to i64
  %204 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19PropertyTreeManager11EffectStateEEEmm(i64 %203) #13
  %205 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %204, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19PropertyTreeManager11EffectStateEEEPKcv, i64 0, i64 0)) #13
  br i1 %202, label %206, label %211

206:                                              ; preds = %199
  %207 = ptrtoint i8* %205 to i64
  %208 = bitcast %"class.WTF::Vector.542"* %184 to i64*
  store atomic i64 %207, i64* %208 monotonic, align 8
  %209 = udiv i64 %204, 40
  %210 = trunc i64 %209 to i32
  store i32 %210, i32* %187, align 8
  br label %229

211:                                              ; preds = %199
  %212 = udiv i64 %204, 40
  %213 = ptrtoint i8* %205 to i64
  %214 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %200, align 8
  %215 = icmp ne i8* %205, null
  %216 = icmp ne %"struct.blink::PropertyTreeManager::EffectState"* %214, null
  %217 = and i1 %215, %216
  %218 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %214 to i8*
  br i1 %217, label %219, label %225, !prof !3

219:                                              ; preds = %211
  %220 = load i32, i32* %185, align 4
  %221 = zext i32 %220 to i64
  %222 = mul nuw nsw i64 %221, 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* nonnull align 8 %218, i64 %222, i1 false) #13
  %223 = bitcast %"class.WTF::Vector.542"* %184 to i8**
  %224 = load i8*, i8** %223, align 8
  br label %225

225:                                              ; preds = %219, %211
  %226 = phi i8* [ %224, %219 ], [ %218, %211 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %226) #13
  %227 = bitcast %"class.WTF::Vector.542"* %184 to i64*
  store atomic i64 %213, i64* %227 monotonic, align 8
  %228 = trunc i64 %212 to i32
  store i32 %228, i32* %187, align 8
  br label %229

229:                                              ; preds = %183, %190, %206, %225
  %230 = getelementptr inbounds %"class.WTF::Vector.542", %"class.WTF::Vector.542"* %184, i64 0, i32 0, i32 0, i32 0
  %231 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %230, align 8
  %232 = load i32, i32* %185, align 4
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %231, i64 %233
  %235 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %234 to i8*
  %236 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 8 %236, i64 40, i1 false) #13
  %237 = load i32, i32* %185, align 4
  %238 = add i32 %237, 1
  store i32 %238, i32* %185, align 4
  %239 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %11, align 8
  %240 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %229
  %242 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %243 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %242, align 8
  br label %244

244:                                              ; preds = %241, %229
  %245 = phi %"class.blink::TransformPaintPropertyNode"* [ %243, %241 ], [ null, %229 ]
  %246 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %118, i64 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  store i32 %247, i32* %248, align 8
  %249 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  store i32 0, i32* %249, align 4
  store %"class.blink::EffectPaintPropertyNode"* %1, %"class.blink::EffectPaintPropertyNode"** %7, align 8
  %250 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 3
  store %"class.blink::ClipPaintPropertyNode"* %91, %"class.blink::ClipPaintPropertyNode"** %250, align 8
  %251 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %252 = bitcast %"class.blink::TransformPaintPropertyNode"** %251 to %"class.blink::TransformPaintPropertyNodeOrAlias"**
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %95, %"class.blink::TransformPaintPropertyNodeOrAlias"** %252, align 8
  %253 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %118, i64 0, i32 17
  %254 = load i8, i8* %253, align 1
  %255 = icmp eq i8 %254, 0
  %256 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 5
  br i1 %255, label %259, label %257

257:                                              ; preds = %244
  store i32 0, i32* %256, align 8
  %258 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 6
  store i8 0, i8* %258, align 4
  br label %265

259:                                              ; preds = %244
  %260 = load i32, i32* %256, align 8
  %261 = icmp ne i32 %260, 0
  %262 = icmp eq %"class.blink::TransformPaintPropertyNode"* %245, %104
  %263 = or i1 %262, %261
  br i1 %263, label %265, label %264

264:                                              ; preds = %259
  store i32 2, i32* %256, align 8
  br label %265

265:                                              ; preds = %259, %264, %257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #13
  br label %266

266:                                              ; preds = %2, %265
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS_21ClipPaintPropertyNodeEPKNS_23EffectPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168), %"class.blink::EffectPaintPropertyNode"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.WTF::VectorBufferBase.672", align 8
  %8 = alloca %"class.WTF::Vector.670", align 8
  %9 = alloca %"struct.cc::EffectNode", align 8
  %10 = alloca %"struct.cc::ElementId", align 8
  %11 = alloca %class.SkRRect, align 4
  %12 = icmp eq %"class.blink::EffectPaintPropertyNode"* %2, null
  br i1 %12, label %47, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %18, align 8
  %20 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 11
  %23 = load i8, i8* %22, align 2, !range !5
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %47, label %25

25:                                               ; preds = %17, %13, %21
  %26 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25, %29
  tail call void @_ZN5blink19PropertyTreeManager13CloseCcEffectEv(%"class.blink::PropertyTreeManager"* %0)
  %30 = load i32, i32* %26, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %29

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %36, label %43

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %38 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %38, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %41 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %40, align 8
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %41, i64 %39
  br label %43

43:                                               ; preds = %32, %36
  %44 = phi %"struct.cc::EffectNode"* [ %42, %36 ], [ null, %32 ]
  %45 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %44, i64 0, i32 17
  store i8 3, i8* %45, align 1
  %46 = tail call i32 @_ZN5blink19PropertyTreeManager24EnsureCompositorClipNodeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %1)
  br label %115

47:                                               ; preds = %21, %3
  %48 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 3
  %49 = bitcast %"class.blink::ClipPaintPropertyNode"** %48 to %"class.blink::PaintPropertyNode.483"**
  %50 = load %"class.blink::PaintPropertyNode.483"*, %"class.blink::PaintPropertyNode.483"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0
  %52 = bitcast %"class.blink::PaintPropertyNode.483"* %50 to %"class.blink::ClipPaintPropertyNodeOrAlias"*
  %53 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %51, %52
  br i1 %53, label %68, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::PaintPropertyNode.483", %"class.blink::PaintPropertyNode.483"* %50, i64 0, i32 3, i32 0
  %56 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %55, align 8
  %57 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %60 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %59, align 8
  %61 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %60, %52
  br i1 %61, label %68, label %62

62:                                               ; preds = %58
  %63 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %60, null
  %64 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %56, %51
  %65 = or i1 %64, %63
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = tail call dereferenceable(24) %"class.blink::ClipPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_28ClipPaintPropertyNodeOrAliasES2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24) %52, %"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24) %51) #13
  br label %68

68:                                               ; preds = %47, %54, %58, %62, %66
  %69 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %51, %62 ], [ %51, %47 ], [ %52, %58 ], [ %52, %54 ], [ %67, %66 ]
  br label %70

70:                                               ; preds = %68, %75
  %71 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %73, %75 ], [ %69, %68 ]
  %72 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %71, i64 0, i32 0, i32 3, i32 0
  %73 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %72, align 8
  %74 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %71, i64 0, i32 0, i32 1
  %77 = load i8, i8* %76, align 4, !range !5
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %70

79:                                               ; preds = %70, %75
  %80 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %71 to %"class.blink::ClipPaintPropertyNode"*
  %81 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %48, align 8
  %82 = icmp eq %"class.blink::ClipPaintPropertyNode"* %81, %80
  br i1 %82, label %115, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  br label %85

85:                                               ; preds = %83, %113
  %86 = phi %"class.blink::ClipPaintPropertyNode"* [ %81, %83 ], [ %90, %113 ]
  %87 = load i32, i32* %84, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %654, label %89

89:                                               ; preds = %85
  tail call void @_ZN5blink19PropertyTreeManager13CloseCcEffectEv(%"class.blink::PropertyTreeManager"* %0)
  %90 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %48, align 8
  %91 = icmp eq %"class.blink::ClipPaintPropertyNode"* %86, %90
  br i1 %91, label %113, label %92

92:                                               ; preds = %89, %110
  %93 = phi %"class.blink::ClipPaintPropertyNode"* [ %111, %110 ], [ %86, %89 ]
  %94 = icmp eq %"class.blink::ClipPaintPropertyNode"* %93, %80
  br i1 %94, label %115, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %93, i64 0, i32 0, i32 0, i32 3, i32 0
  %97 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %96, align 8
  %98 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %97, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %95, %104
  %100 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %102, %104 ], [ %97, %95 ]
  %101 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %100, i64 0, i32 0, i32 3, i32 0
  %102 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %101, align 8
  %103 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %100, i64 0, i32 0, i32 1
  %106 = load i8, i8* %105, align 4, !range !5
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %99

108:                                              ; preds = %104, %99
  %109 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %100 to %"class.blink::ClipPaintPropertyNode"*
  br label %110

110:                                              ; preds = %108, %95
  %111 = phi %"class.blink::ClipPaintPropertyNode"* [ %109, %108 ], [ null, %95 ]
  %112 = icmp eq %"class.blink::ClipPaintPropertyNode"* %111, %90
  br i1 %112, label %113, label %92

113:                                              ; preds = %110, %89
  %114 = icmp eq %"class.blink::ClipPaintPropertyNode"* %90, %80
  br i1 %114, label %115, label %85

115:                                              ; preds = %113, %92, %79, %43
  %116 = phi i8 [ 1, %43 ], [ 0, %79 ], [ 0, %92 ], [ 0, %113 ]
  %117 = phi i32 [ %46, %43 ], [ -1, %79 ], [ -1, %92 ], [ -1, %113 ]
  %118 = bitcast %"class.WTF::Vector.670"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #13
  %119 = getelementptr inbounds %"class.WTF::Vector.670", %"class.WTF::Vector.670"* %8, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.WTF::Vector.670", %"class.WTF::Vector.670"* %8, i64 0, i32 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.WTF::Vector.670", %"class.WTF::Vector.670"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 16, i1 false) #13
  %122 = icmp eq %"class.blink::ClipPaintPropertyNode"* %1, null
  br i1 %122, label %652, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 3
  %125 = bitcast %"class.WTF::VectorBufferBase.672"* %7 to i8*
  %126 = getelementptr inbounds %"class.WTF::VectorBufferBase.672", %"class.WTF::VectorBufferBase.672"* %7, i64 0, i32 0
  %127 = getelementptr inbounds %"class.WTF::VectorBufferBase.672", %"class.WTF::VectorBufferBase.672"* %7, i64 0, i32 1
  %128 = bitcast i32* %127 to i64*
  %129 = bitcast %"class.WTF::Vector.670"* %8 to i64*
  %130 = getelementptr inbounds %"class.WTF::Vector.670", %"class.WTF::Vector.670"* %8, i64 0, i32 0, i32 0
  br label %131

131:                                              ; preds = %123, %203
  %132 = phi %struct.PendingClip* [ null, %123 ], [ %185, %203 ]
  %133 = phi %struct.PendingClip* [ null, %123 ], [ %186, %203 ]
  %134 = phi %struct.PendingClip* [ null, %123 ], [ %187, %203 ]
  %135 = phi i8* [ null, %123 ], [ %188, %203 ]
  %136 = phi %struct.PendingClip* [ null, %123 ], [ %189, %203 ]
  %137 = phi i32 [ 0, %123 ], [ %190, %203 ]
  %138 = phi %"class.blink::ClipPaintPropertyNode"* [ %1, %123 ], [ %204, %203 ]
  %139 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %124, align 8
  %140 = icmp eq %"class.blink::ClipPaintPropertyNode"* %138, %139
  br i1 %140, label %206, label %141

141:                                              ; preds = %131
  %142 = tail call i32 @_ZN5blink19PropertyTreeManager19SyntheticEffectTypeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* nonnull dereferenceable(168) %138)
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %184, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* %120, align 8
  %146 = icmp eq i32 %137, %145
  br i1 %146, label %147, label %174, !prof !4

147:                                              ; preds = %144
  %148 = add i32 %137, 1
  %149 = lshr i32 %137, 2
  %150 = add i32 %148, %149
  %151 = icmp ugt i32 %150, 4
  %152 = select i1 %151, i32 %150, i32 4
  %153 = icmp ugt i32 %152, %148
  %154 = select i1 %153, i32 %152, i32 %148
  %155 = icmp ult i32 %137, %154
  br i1 %155, label %156, label %174, !prof !3

156:                                              ; preds = %147
  %157 = icmp eq %struct.PendingClip* %136, null
  br i1 %157, label %158, label %161

158:                                              ; preds = %156
  call fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS1_21ClipPaintPropertyNodeEPKNS1_23EffectPaintPropertyNodeEE11PendingClipNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.672"* nonnull %130, i32 %154) #13
  %159 = load %struct.PendingClip*, %struct.PendingClip** %119, align 8
  %160 = load i32, i32* %121, align 4
  br label %174

161:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 16, i1 false) #13
  store %struct.PendingClip* null, %struct.PendingClip** %126, align 8
  store i32 0, i32* %127, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS1_21ClipPaintPropertyNodeEPKNS1_23EffectPaintPropertyNodeEE11PendingClipNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.672"* nonnull %7, i32 %154) #13
  %162 = load %struct.PendingClip*, %struct.PendingClip** %126, align 8
  %163 = load i64, i64* %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #13
  %164 = ptrtoint %struct.PendingClip* %162 to i64
  %165 = icmp eq %struct.PendingClip* %162, null
  %166 = bitcast %struct.PendingClip* %136 to i8*
  br i1 %165, label %171, label %167, !prof !4

167:                                              ; preds = %161
  %168 = zext i32 %137 to i64
  %169 = shl nuw nsw i64 %168, 4
  %170 = bitcast %struct.PendingClip* %162 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %170, i8* nonnull align 8 %166, i64 %169, i1 false) #13
  br label %171

171:                                              ; preds = %161, %167
  %172 = phi i8* [ %135, %167 ], [ %166, %161 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %172) #13
  store atomic i64 %164, i64* %129 monotonic, align 8
  %173 = trunc i64 %163 to i32
  store i32 %173, i32* %120, align 8
  br label %174

174:                                              ; preds = %144, %147, %158, %171
  %175 = phi %struct.PendingClip* [ %132, %144 ], [ %132, %147 ], [ %159, %158 ], [ %162, %171 ]
  %176 = phi %struct.PendingClip* [ %133, %144 ], [ %133, %147 ], [ %159, %158 ], [ %162, %171 ]
  %177 = phi i32 [ %137, %144 ], [ %137, %147 ], [ %160, %158 ], [ %137, %171 ]
  %178 = phi %struct.PendingClip* [ %134, %144 ], [ %134, %147 ], [ %159, %158 ], [ %162, %171 ]
  %179 = zext i32 %177 to i64
  %180 = getelementptr inbounds %struct.PendingClip, %struct.PendingClip* %178, i64 %179, i32 0
  store %"class.blink::ClipPaintPropertyNode"* %138, %"class.blink::ClipPaintPropertyNode"** %180, align 8
  %181 = getelementptr inbounds %struct.PendingClip, %struct.PendingClip* %178, i64 %179, i32 1
  store i32 %142, i32* %181, align 8
  %182 = add i32 %177, 1
  store i32 %182, i32* %121, align 4
  %183 = bitcast %struct.PendingClip* %178 to i8*
  br label %184

184:                                              ; preds = %141, %174
  %185 = phi %struct.PendingClip* [ %132, %141 ], [ %175, %174 ]
  %186 = phi %struct.PendingClip* [ %133, %141 ], [ %176, %174 ]
  %187 = phi %struct.PendingClip* [ %134, %141 ], [ %178, %174 ]
  %188 = phi i8* [ %135, %141 ], [ %183, %174 ]
  %189 = phi %struct.PendingClip* [ %136, %141 ], [ %178, %174 ]
  %190 = phi i32 [ %137, %141 ], [ %182, %174 ]
  %191 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %138, i64 0, i32 0, i32 0, i32 3, i32 0
  %192 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %191, align 8
  %193 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %192, null
  br i1 %193, label %642, label %194

194:                                              ; preds = %184, %199
  %195 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %197, %199 ], [ %192, %184 ]
  %196 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %195, i64 0, i32 0, i32 3, i32 0
  %197 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %196, align 8
  %198 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %195, i64 0, i32 0, i32 1
  %201 = load i8, i8* %200, align 4, !range !5
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %194

203:                                              ; preds = %194, %199
  %204 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %195 to %"class.blink::ClipPaintPropertyNode"*
  %205 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %195, null
  br i1 %205, label %642, label %131

206:                                              ; preds = %131
  %207 = icmp eq i32 %137, 0
  br i1 %207, label %642, label %208

208:                                              ; preds = %206
  %209 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %210 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %211 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %212 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %213 = bitcast %"class.logging::CheckError"* %6 to i8*
  %214 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %215 = bitcast %"struct.cc::EffectNode"* %9 to i8*
  %216 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5
  %217 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %216, i64 0, i32 0
  %218 = bitcast %"struct.cc::ElementId"* %10 to i8*
  %219 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %10, i64 0, i32 0
  %220 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %221 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 0, i32 0
  %222 = bitcast %class.SkRRect* %11 to i8*
  %223 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 6
  %224 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 1
  %225 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %227 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 7, i32 0
  %228 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6
  %229 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %230 = getelementptr inbounds %"class.WTF::Vector.542", %"class.WTF::Vector.542"* %228, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.WTF::Vector.542"* %228 to i8**
  %232 = bitcast %"class.WTF::Vector.542"* %228 to i64*
  %233 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %216 to i8*
  %234 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 2
  %235 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %236 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 0
  %237 = bitcast %"class.blink::ClipPaintPropertyNode"** %124 to i64*
  %238 = bitcast %"class.blink::TransformPaintPropertyNode"** %235 to %"class.blink::TransformPaintPropertyNodeOrAlias"**
  %239 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 5
  %240 = zext i32 %137 to i64
  br label %241

241:                                              ; preds = %208, %638
  %242 = phi i64 [ %240, %208 ], [ %641, %638 ]
  %243 = phi i8 [ %116, %208 ], [ %522, %638 ]
  %244 = phi i32 [ -1, %208 ], [ %521, %638 ]
  %245 = trunc i64 %242 to i32
  %246 = add i32 %245, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %210, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #13
  %247 = icmp ugt i32 %137, %246
  br i1 %247, label %248, label %249

248:                                              ; preds = %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #13
  store i8* null, i8** %210, align 8
  br label %256

249:                                              ; preds = %241
  %250 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %246) #13
  %251 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %137) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %250, i8* %251) #13
  %252 = load i8*, i8** %212, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #13
  store i8* %252, i8** %210, align 8
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %249
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %5) #13
  %255 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #13
  br label %256

256:                                              ; preds = %248, %249, %254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #13
  %257 = zext i32 %246 to i64
  %258 = getelementptr inbounds %struct.PendingClip, %struct.PendingClip* %133, i64 %257
  %259 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %214, align 8
  %260 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %259, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %215) #13
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %9) #13
  %261 = load i32, i32* %217, align 8
  %262 = call i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"* %260, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %9, i32 %261) #13
  %263 = icmp sgt i32 %262, -1
  br i1 %263, label %264, label %269

264:                                              ; preds = %256
  %265 = sext i32 %262 to i64
  %266 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %259, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %267 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %266, align 8
  %268 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %267, i64 %265
  br label %269

269:                                              ; preds = %256, %264
  %270 = phi %"struct.cc::EffectNode"* [ %268, %264 ], [ null, %256 ]
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %215) #13
  %271 = getelementptr inbounds %struct.PendingClip, %struct.PendingClip* %133, i64 %257, i32 1
  %272 = load i32, i32* %271, align 8
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %306, label %275

275:                                              ; preds = %269
  %276 = and i8 %243, 1
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %275
  %279 = or i32 %272, 1
  store i32 %279, i32* %271, align 8
  br label %306

280:                                              ; preds = %275
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #13
  %281 = call i64 @_ZN5blink17NewUniqueObjectIdEv() #13
  %282 = call i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEm(i64 %281) #13
  store i64 %282, i64* %219, align 8
  %283 = call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* nonnull %10) #13
  %284 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 2
  store i64 %283, i64* %284, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #13
  %285 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 17
  store i8 14, i8* %285, align 1
  %286 = bitcast %struct.PendingClip* %258 to %"class.blink::PaintPropertyNode.483"**
  %287 = load %"class.blink::PaintPropertyNode.483"*, %"class.blink::PaintPropertyNode.483"** %286, align 8
  %288 = getelementptr inbounds %"class.blink::PaintPropertyNode.483", %"class.blink::PaintPropertyNode.483"* %287, i64 0, i32 3, i32 0
  %289 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %288, align 8
  %290 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %289, null
  br i1 %290, label %302, label %291

291:                                              ; preds = %280, %296
  %292 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %294, %296 ], [ %289, %280 ]
  %293 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %292, i64 0, i32 0, i32 3, i32 0
  %294 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %293, align 8
  %295 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %294, null
  br i1 %295, label %300, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %292, i64 0, i32 0, i32 1
  %298 = load i8, i8* %297, align 4, !range !5
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %291

300:                                              ; preds = %296, %291
  %301 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %292 to %"class.blink::ClipPaintPropertyNode"*
  br label %302

302:                                              ; preds = %280, %300
  %303 = phi %"class.blink::ClipPaintPropertyNode"* [ %301, %300 ], [ null, %280 ]
  %304 = call i32 @_ZN5blink19PropertyTreeManager24EnsureCompositorClipNodeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %303)
  %305 = load i32, i32* %271, align 8
  br label %306

306:                                              ; preds = %269, %278, %302
  %307 = phi i32 [ %279, %278 ], [ %305, %302 ], [ %272, %269 ]
  %308 = phi i32 [ %117, %278 ], [ %304, %302 ], [ %117, %269 ]
  %309 = and i32 %307, 1
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %486, label %311

311:                                              ; preds = %306
  %312 = icmp eq i32 %308, -1
  br i1 %312, label %313, label %318

313:                                              ; preds = %311
  %314 = getelementptr inbounds %struct.PendingClip, %struct.PendingClip* %258, i64 0, i32 0
  %315 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %314, align 8
  %316 = call i32 @_ZN5blink19PropertyTreeManager24EnsureCompositorClipNodeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %315)
  %317 = load i32, i32* %271, align 8
  br label %318

318:                                              ; preds = %313, %311
  %319 = phi i32 [ %317, %313 ], [ %307, %311 ]
  %320 = phi i32 [ %316, %313 ], [ %308, %311 ]
  %321 = getelementptr inbounds %struct.PendingClip, %struct.PendingClip* %258, i64 0, i32 0
  %322 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %321, align 8
  %323 = and i32 %319, 2
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %431

325:                                              ; preds = %318
  %326 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 2, i32 0
  %327 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %326, align 8
  %328 = icmp eq %"class.blink::RefCountedPath"* %327, null
  br i1 %328, label %329, label %431

329:                                              ; preds = %325
  br i1 %12, label %338, label %330

330:                                              ; preds = %329
  %331 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %220, align 8
  %332 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %331, null
  br i1 %332, label %338, label %333

333:                                              ; preds = %330
  %334 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %221, align 8
  %335 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 0, i32 0
  %336 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %335, align 8
  %337 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %334, %336
  br i1 %337, label %338, label %431

338:                                              ; preds = %333, %330, %329
  %339 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 0, i32 0
  %340 = load float, float* %339, align 4
  %341 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 0, i32 1
  %342 = load float, float* %341, align 4
  %343 = fcmp oeq float %340, %342
  br i1 %343, label %344, label %431

344:                                              ; preds = %338
  %345 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 1, i32 0
  %346 = load float, float* %345, align 4
  %347 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 1, i32 1
  %348 = load float, float* %347, align 4
  %349 = fcmp oeq float %346, %348
  br i1 %349, label %350, label %431

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 3, i32 0
  %352 = load float, float* %351, align 4
  %353 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 3, i32 1
  %354 = load float, float* %353, align 4
  %355 = fcmp oeq float %352, %354
  br i1 %355, label %356, label %431

356:                                              ; preds = %350
  %357 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 2, i32 0
  %358 = load float, float* %357, align 4
  %359 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 2, i32 1
  %360 = load float, float* %359, align 4
  %361 = fcmp oeq float %358, %360
  br i1 %361, label %362, label %431

362:                                              ; preds = %356
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %222) #13
  %363 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4
  call void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* nonnull sret %11, %"class.blink::FloatRoundedRect"* %363)
  %364 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 11
  %365 = bitcast %"class.gfx::MaskFilterInfo"* %364 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %365, i8* nonnull align 4 %222, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %222) #13
  %366 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 16
  %367 = bitcast [3 x i8]* %366 to i24*
  %368 = load i24, i24* %367, align 4
  %369 = or i24 %368, 131072
  store i24 %369, i24* %367, align 4
  %370 = load i8, i8* %223, align 4, !range !5
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %483, label %372

372:                                              ; preds = %362
  %373 = load i32, i32* %224, align 4
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %388, label %376

376:                                              ; preds = %372
  %377 = load i32, i32* %217, align 8
  %378 = icmp sgt i32 %377, -1
  br i1 %378, label %379, label %385

379:                                              ; preds = %376
  %380 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %214, align 8
  %381 = sext i32 %377 to i64
  %382 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %380, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %383 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %382, align 8
  %384 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %383, i64 %381
  br label %385

385:                                              ; preds = %379, %376
  %386 = phi %"struct.cc::EffectNode"* [ %384, %379 ], [ null, %376 ]
  %387 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %386, i64 0, i32 17
  store i8 12, i8* %387, align 1
  br label %388

388:                                              ; preds = %372, %385
  %389 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %225, align 8
  %390 = load i32, i32* %226, align 4
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %483, label %392

392:                                              ; preds = %388
  %393 = zext i32 %390 to i64
  %394 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %389, i64 %393
  br label %395

395:                                              ; preds = %392, %428
  %396 = phi %"struct.blink::PropertyTreeManager::EffectState"* [ %429, %428 ], [ %389, %392 ]
  %397 = phi %"struct.blink::PropertyTreeManager::EffectState"* [ %399, %428 ], [ %394, %392 ]
  %398 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %214, align 8
  %399 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %397, i64 -1
  %400 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %399, i64 0, i32 0
  %401 = load i32, i32* %400, align 8
  %402 = icmp sgt i32 %401, -1
  br i1 %402, label %403, label %408

403:                                              ; preds = %395
  %404 = sext i32 %401 to i64
  %405 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %398, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %406 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %405, align 8
  %407 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %406, i64 %404
  br label %408

408:                                              ; preds = %395, %403
  %409 = phi %"struct.cc::EffectNode"* [ %407, %403 ], [ null, %395 ]
  %410 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %409, i64 0, i32 17
  %411 = load i8, i8* %410, align 1
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %413, label %483

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %397, i64 -1, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %428, label %418

418:                                              ; preds = %413
  br i1 %402, label %419, label %424

419:                                              ; preds = %418
  %420 = sext i32 %401 to i64
  %421 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %398, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %422 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %421, align 8
  %423 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %422, i64 %420
  br label %424

424:                                              ; preds = %419, %418
  %425 = phi %"struct.cc::EffectNode"* [ %423, %419 ], [ null, %418 ]
  %426 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %425, i64 0, i32 17
  store i8 12, i8* %426, align 1
  %427 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %225, align 8
  br label %428

428:                                              ; preds = %413, %424
  %429 = phi %"struct.blink::PropertyTreeManager::EffectState"* [ %396, %413 ], [ %427, %424 ]
  %430 = icmp eq %"struct.blink::PropertyTreeManager::EffectState"* %399, %429
  br i1 %430, label %483, label %395

431:                                              ; preds = %318, %325, %333, %338, %344, %350, %356
  %432 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 0, i32 0
  %433 = load float, float* %432, align 4
  %434 = fcmp ogt float %433, 0xBE80000000000000
  %435 = fcmp olt float %433, 0x3E80000000000000
  %436 = and i1 %434, %435
  br i1 %436, label %437, label %479

437:                                              ; preds = %431
  %438 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 0, i32 1
  %439 = load float, float* %438, align 4
  %440 = fcmp ogt float %439, 0xBE80000000000000
  %441 = fcmp olt float %439, 0x3E80000000000000
  %442 = and i1 %440, %441
  br i1 %442, label %443, label %479

443:                                              ; preds = %437
  %444 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 1, i32 0
  %445 = load float, float* %444, align 4
  %446 = fcmp ogt float %445, 0xBE80000000000000
  %447 = fcmp olt float %445, 0x3E80000000000000
  %448 = and i1 %446, %447
  br i1 %448, label %449, label %479

449:                                              ; preds = %443
  %450 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 1, i32 1
  %451 = load float, float* %450, align 4
  %452 = fcmp ogt float %451, 0xBE80000000000000
  %453 = fcmp olt float %451, 0x3E80000000000000
  %454 = and i1 %452, %453
  br i1 %454, label %455, label %479

455:                                              ; preds = %449
  %456 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 2, i32 0
  %457 = load float, float* %456, align 4
  %458 = fcmp ogt float %457, 0xBE80000000000000
  %459 = fcmp olt float %457, 0x3E80000000000000
  %460 = and i1 %458, %459
  br i1 %460, label %461, label %479

461:                                              ; preds = %455
  %462 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 2, i32 1
  %463 = load float, float* %462, align 4
  %464 = fcmp ogt float %463, 0xBE80000000000000
  %465 = fcmp olt float %463, 0x3E80000000000000
  %466 = and i1 %464, %465
  br i1 %466, label %467, label %479

467:                                              ; preds = %461
  %468 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 3, i32 0
  %469 = load float, float* %468, align 4
  %470 = fcmp ogt float %469, 0xBE80000000000000
  %471 = fcmp olt float %469, 0x3E80000000000000
  %472 = and i1 %470, %471
  br i1 %472, label %473, label %479

473:                                              ; preds = %467
  %474 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %322, i64 0, i32 1, i32 4, i32 1, i32 3, i32 1
  %475 = load float, float* %474, align 4
  %476 = fcmp ule float %475, 0xBE80000000000000
  %477 = fcmp uge float %475, 0x3E80000000000000
  %478 = or i1 %476, %477
  br i1 %478, label %479, label %480

479:                                              ; preds = %473, %455, %461, %443, %449, %431, %437, %467
  br label %480

480:                                              ; preds = %473, %479
  %481 = phi i8 [ 12, %479 ], [ 13, %473 ]
  %482 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 17
  store i8 %481, i8* %482, align 1
  br label %483

483:                                              ; preds = %428, %408, %388, %362, %480
  %484 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 0
  %485 = call { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable"* %227, i32* dereferenceable(4) %484, i32* dereferenceable(4) %484) #13
  br label %486

486:                                              ; preds = %306, %483
  %487 = phi i32 [ %320, %483 ], [ %308, %306 ]
  %488 = and i8 %243, 1
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %504, label %490

490:                                              ; preds = %486
  %491 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %221, align 8
  br label %492

492:                                              ; preds = %497, %490
  %493 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %491, %490 ], [ %495, %497 ]
  %494 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %493, i64 0, i32 0, i32 3, i32 0
  %495 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %494, align 8
  %496 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %495, null
  br i1 %496, label %501, label %497

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %493, i64 0, i32 0, i32 1
  %499 = load i8, i8* %498, align 4, !range !5
  %500 = icmp eq i8 %499, 0
  br i1 %500, label %501, label %492

501:                                              ; preds = %492, %497
  call void @_ZN5blink19PropertyTreeManager20PopulateCcEffectNodeERN2cc10EffectNodeERKNS_23EffectPaintPropertyNodeEi(%"class.blink::PropertyTreeManager"* %0, %"struct.cc::EffectNode"* dereferenceable(288) %270, %"class.blink::EffectPaintPropertyNode"* dereferenceable(152) %2, i32 %487)
  %502 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 0
  %503 = load i32, i32* %502, align 8
  br label %520

504:                                              ; preds = %486
  %505 = getelementptr inbounds %struct.PendingClip, %struct.PendingClip* %258, i64 0, i32 0
  %506 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %505, align 8
  %507 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %506, i64 0, i32 1, i32 0, i32 0
  %508 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %507, align 8
  br label %509

509:                                              ; preds = %514, %504
  %510 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %508, %504 ], [ %512, %514 ]
  %511 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %510, i64 0, i32 0, i32 3, i32 0
  %512 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %511, align 8
  %513 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %512, null
  br i1 %513, label %518, label %514

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %510, i64 0, i32 0, i32 1
  %516 = load i8, i8* %515, align 4, !range !5
  %517 = icmp eq i8 %516, 0
  br i1 %517, label %518, label %509

518:                                              ; preds = %509, %514
  %519 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 19
  store i32 %487, i32* %519, align 4
  br label %520

520:                                              ; preds = %518, %501
  %521 = phi i32 [ %503, %501 ], [ %244, %518 ]
  %522 = phi i8 [ 0, %501 ], [ %243, %518 ]
  %523 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %493, %501 ], [ %510, %518 ]
  %524 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %523 to %"class.blink::TransformPaintPropertyNode"*
  %525 = call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %524)
  %526 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 18
  store i32 %525, i32* %526, align 8
  %527 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %523, null
  br i1 %527, label %554, label %528

528:                                              ; preds = %520
  %529 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %524, i64 0, i32 1, i32 3
  %530 = load i8, i8* %529, align 1
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %532, label %551

532:                                              ; preds = %528, %546
  %533 = phi %"class.blink::TransformPaintPropertyNode"* [ %547, %546 ], [ %524, %528 ]
  %534 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %533, i64 0, i32 0, i32 0, i32 3, i32 0
  %535 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %534, align 8
  %536 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %535, null
  br i1 %536, label %554, label %537

537:                                              ; preds = %532, %542
  %538 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %540, %542 ], [ %535, %532 ]
  %539 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %538, i64 0, i32 0, i32 3, i32 0
  %540 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %539, align 8
  %541 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %540, null
  br i1 %541, label %546, label %542

542:                                              ; preds = %537
  %543 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %538, i64 0, i32 0, i32 1
  %544 = load i8, i8* %543, align 4, !range !5
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %546, label %537

546:                                              ; preds = %542, %537
  %547 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %538 to %"class.blink::TransformPaintPropertyNode"*
  %548 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %547, i64 0, i32 1, i32 3
  %549 = load i8, i8* %548, align 1
  %550 = icmp eq i8 %549, 0
  br i1 %550, label %532, label %551

551:                                              ; preds = %546, %528
  %552 = phi i8 [ %530, %528 ], [ %549, %546 ]
  %553 = icmp eq i8 %552, 1
  br label %554

554:                                              ; preds = %532, %520, %551
  %555 = phi i1 [ %553, %551 ], [ false, %520 ], [ false, %532 ]
  %556 = xor i1 %555, true
  %557 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 16
  %558 = bitcast [3 x i8]* %557 to i24*
  %559 = zext i1 %556 to i24
  %560 = load i24, i24* %558, align 4
  %561 = shl nuw nsw i24 %559, 3
  %562 = and i24 %560, -9
  %563 = or i24 %562, %561
  store i24 %563, i24* %558, align 4
  %564 = load i32, i32* %226, align 4
  %565 = load i32, i32* %229, align 8
  %566 = icmp eq i32 %564, %565
  br i1 %566, label %567, label %602, !prof !4

567:                                              ; preds = %554
  %568 = add i32 %564, 1
  %569 = lshr i32 %564, 2
  %570 = add i32 %568, %569
  %571 = icmp ugt i32 %570, 4
  %572 = select i1 %571, i32 %570, i32 4
  %573 = icmp ugt i32 %572, %568
  %574 = select i1 %573, i32 %572, i32 %568
  %575 = icmp ult i32 %564, %574
  br i1 %575, label %576, label %602, !prof !3

576:                                              ; preds = %567
  %577 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %230, align 8
  %578 = icmp eq %"struct.blink::PropertyTreeManager::EffectState"* %577, null
  %579 = zext i32 %574 to i64
  %580 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19PropertyTreeManager11EffectStateEEEmm(i64 %579) #13
  %581 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %580, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19PropertyTreeManager11EffectStateEEEPKcv, i64 0, i64 0)) #13
  br i1 %578, label %582, label %586

582:                                              ; preds = %576
  %583 = ptrtoint i8* %581 to i64
  store atomic i64 %583, i64* %232 monotonic, align 8
  %584 = udiv i64 %580, 40
  %585 = trunc i64 %584 to i32
  store i32 %585, i32* %229, align 8
  br label %602

586:                                              ; preds = %576
  %587 = udiv i64 %580, 40
  %588 = ptrtoint i8* %581 to i64
  %589 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %230, align 8
  %590 = icmp ne i8* %581, null
  %591 = icmp ne %"struct.blink::PropertyTreeManager::EffectState"* %589, null
  %592 = and i1 %590, %591
  %593 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %589 to i8*
  br i1 %592, label %594, label %599, !prof !3

594:                                              ; preds = %586
  %595 = load i32, i32* %226, align 4
  %596 = zext i32 %595 to i64
  %597 = mul nuw nsw i64 %596, 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %581, i8* nonnull align 8 %593, i64 %597, i1 false) #13
  %598 = load i8*, i8** %231, align 8
  br label %599

599:                                              ; preds = %594, %586
  %600 = phi i8* [ %598, %594 ], [ %593, %586 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %600) #13
  store atomic i64 %588, i64* %232 monotonic, align 8
  %601 = trunc i64 %587 to i32
  store i32 %601, i32* %229, align 8
  br label %602

602:                                              ; preds = %554, %567, %582, %599
  %603 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %230, align 8
  %604 = load i32, i32* %226, align 4
  %605 = zext i32 %604 to i64
  %606 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %603, i64 %605
  %607 = bitcast %"struct.blink::PropertyTreeManager::EffectState"* %606 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %607, i8* align 8 %233, i64 40, i1 false) #13
  %608 = load i32, i32* %226, align 4
  %609 = add i32 %608, 1
  store i32 %609, i32* %226, align 4
  %610 = load i32, i32* %271, align 8
  %611 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %234, align 8
  %612 = bitcast %struct.PendingClip* %258 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %611, i64 0, i32 0, i32 0, i32 3, i32 0
  %615 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %614, align 8
  %616 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %615, null
  br i1 %616, label %619, label %617

617:                                              ; preds = %602
  %618 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %235, align 8
  br label %619

619:                                              ; preds = %617, %602
  %620 = phi %"class.blink::TransformPaintPropertyNode"* [ %618, %617 ], [ null, %602 ]
  %621 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 0
  %622 = load i32, i32* %621, align 8
  store i32 %622, i32* %236, align 8
  store i32 %610, i32* %224, align 4
  store i64 %613, i64* %237, align 8
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %523, %"class.blink::TransformPaintPropertyNodeOrAlias"** %238, align 8
  %623 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %270, i64 0, i32 17
  %624 = load i8, i8* %623, align 1
  %625 = icmp eq i8 %624, 0
  br i1 %625, label %627, label %626

626:                                              ; preds = %619
  store i32 0, i32* %239, align 8
  br label %638

627:                                              ; preds = %619
  %628 = load i32, i32* %239, align 8
  %629 = icmp ne i32 %628, 0
  %630 = icmp eq %"class.blink::TransformPaintPropertyNode"* %620, %524
  %631 = or i1 %630, %629
  br i1 %631, label %633, label %632

632:                                              ; preds = %627
  store i32 2, i32* %239, align 8
  br label %633

633:                                              ; preds = %632, %627
  %634 = load i8, i8* %223, align 4, !range !5
  %635 = trunc i32 %610 to i8
  %636 = and i8 %635, 1
  %637 = or i8 %634, %636
  br label %638

638:                                              ; preds = %626, %633
  %639 = phi i8 [ 0, %626 ], [ %637, %633 ]
  store i8 %639, i8* %223, align 4
  %640 = icmp eq i32 %246, 0
  %641 = add nsw i64 %242, -1
  br i1 %640, label %642, label %241

642:                                              ; preds = %184, %203, %638, %206
  %643 = phi i32 [ 0, %206 ], [ %137, %638 ], [ %190, %203 ], [ %190, %184 ]
  %644 = phi %struct.PendingClip* [ %132, %206 ], [ %132, %638 ], [ %185, %203 ], [ %185, %184 ]
  %645 = phi i32 [ -1, %206 ], [ %521, %638 ], [ -1, %203 ], [ -1, %184 ]
  %646 = icmp eq %struct.PendingClip* %644, null
  %647 = bitcast %struct.PendingClip* %644 to i8*
  br i1 %646, label %652, label %648, !prof !3

648:                                              ; preds = %642
  %649 = icmp eq i32 %643, 0
  br i1 %649, label %651, label %650, !prof !4

650:                                              ; preds = %648
  store i32 0, i32* %121, align 4
  br label %651

651:                                              ; preds = %650, %648
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %647) #13
  store %struct.PendingClip* null, %struct.PendingClip** %119, align 8
  br label %652

652:                                              ; preds = %115, %642, %651
  %653 = phi i32 [ %645, %642 ], [ %645, %651 ], [ -1, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #13
  br label %654

654:                                              ; preds = %85, %652
  %655 = phi i32 [ %653, %652 ], [ -1, %85 ]
  ret i32 %655
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19PropertyTreeManager47EffectStateMayBe2dAxisMisalignedToRenderSurfaceERNS0_11EffectStateEj(%"class.blink::PropertyTreeManager"*, %"struct.blink::PropertyTreeManager::EffectState"* nocapture dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %1, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6
  %9 = add i32 %2, -1
  %10 = tail call dereferenceable(40) %"struct.blink::PropertyTreeManager::EffectState"* @_ZN3WTF6VectorIN5blink19PropertyTreeManager11EffectStateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.542"* %8, i32 %9) #13
  %11 = tail call zeroext i1 @_ZN5blink19PropertyTreeManager47EffectStateMayBe2dAxisMisalignedToRenderSurfaceERNS0_11EffectStateEj(%"class.blink::PropertyTreeManager"* %0, %"struct.blink::PropertyTreeManager::EffectState"* dereferenceable(40) %10, i32 %9)
  br i1 %11, label %20, label %12

12:                                               ; preds = %7
  %13 = tail call dereferenceable(40) %"struct.blink::PropertyTreeManager::EffectState"* @_ZN3WTF6VectorIN5blink19PropertyTreeManager11EffectStateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.542"* %8, i32 %9) #13
  %14 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %13, i64 0, i32 4
  %15 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %17 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %16, align 8
  %18 = tail call zeroext i1 @_ZN5blink31TransformsMayBe2dAxisMisalignedERKNS_26TransformPaintPropertyNodeES2_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %15, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %17)
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %7, %12
  %21 = phi i32 [ %19, %12 ], [ 1, %7 ]
  store i32 %21, i32* %4, align 8
  br label %22

22:                                               ; preds = %20, %3
  %23 = phi i32 [ %5, %3 ], [ %21, %20 ]
  %24 = icmp eq i32 %23, 1
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19PropertyTreeManager49CurrentEffectMayBe2dAxisMisalignedToRenderSurfaceEv(%"class.blink::PropertyTreeManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = tail call zeroext i1 @_ZN5blink19PropertyTreeManager47EffectStateMayBe2dAxisMisalignedToRenderSurfaceERNS0_11EffectStateEj(%"class.blink::PropertyTreeManager"* %0, %"struct.blink::PropertyTreeManager::EffectState"* dereferenceable(40) %2, i32 %4)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PropertyTreeManager19SyntheticEffectTypeERKNS_21ClipPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::ClipPaintPropertyNode"* nocapture readonly dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp ogt float %4, 0xBE80000000000000
  %6 = fcmp olt float %4, 0x3E80000000000000
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %54

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fcmp ogt float %10, 0xBE80000000000000
  %12 = fcmp olt float %10, 0x3E80000000000000
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %54

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = fcmp ogt float %16, 0xBE80000000000000
  %18 = fcmp olt float %16, 0x3E80000000000000
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %54

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 1, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp ogt float %22, 0xBE80000000000000
  %24 = fcmp olt float %22, 0x3E80000000000000
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %54

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 2, i32 0
  %28 = load float, float* %27, align 4
  %29 = fcmp ogt float %28, 0xBE80000000000000
  %30 = fcmp olt float %28, 0x3E80000000000000
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %54

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 2, i32 1
  %34 = load float, float* %33, align 4
  %35 = fcmp ogt float %34, 0xBE80000000000000
  %36 = fcmp olt float %34, 0x3E80000000000000
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %54

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 3, i32 0
  %40 = load float, float* %39, align 4
  %41 = fcmp ogt float %40, 0xBE80000000000000
  %42 = fcmp olt float %40, 0x3E80000000000000
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 4, i32 1, i32 3, i32 1
  %46 = load float, float* %45, align 4
  %47 = fcmp ule float %46, 0xBE80000000000000
  %48 = fcmp uge float %46, 0x3E80000000000000
  %49 = or i1 %47, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 2, i32 0
  %52 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %51, align 8
  %53 = icmp eq %"class.blink::RefCountedPath"* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %44, %26, %32, %14, %20, %2, %8, %38, %50
  br label %55

55:                                               ; preds = %50, %54
  %56 = phi i32 [ 1, %54 ], [ 0, %50 ]
  %57 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5
  %58 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = tail call zeroext i1 @_ZN5blink19PropertyTreeManager47EffectStateMayBe2dAxisMisalignedToRenderSurfaceERNS0_11EffectStateEj(%"class.blink::PropertyTreeManager"* %0, %"struct.blink::PropertyTreeManager::EffectState"* dereferenceable(40) %57, i32 %59) #13
  br i1 %60, label %78, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %62, align 8
  br label %64

64:                                               ; preds = %69, %61
  %65 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %63, %61 ], [ %67, %69 ]
  %66 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %65, i64 0, i32 0, i32 3, i32 0
  %67 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %66, align 8
  %68 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %65, i64 0, i32 0, i32 1
  %71 = load i8, i8* %70, align 4, !range !5
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %64

73:                                               ; preds = %64, %69
  %74 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %65 to %"class.blink::TransformPaintPropertyNode"*
  %75 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 5, i32 4
  %76 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink31TransformsMayBe2dAxisMisalignedERKNS_26TransformPaintPropertyNodeES2_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %74, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %76)
  br i1 %77, label %78, label %80

78:                                               ; preds = %73, %55
  %79 = or i32 %56, 2
  br label %80

80:                                               ; preds = %78, %73
  %81 = phi i32 [ %79, %78 ], [ %56, %73 ]
  ret i32 %81
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager46ForceRenderSurfaceIfSyntheticRoundedCornerClipERNS0_11EffectStateE(%"class.blink::PropertyTreeManager"* nocapture readonly, %"struct.blink::PropertyTreeManager::EffectState"* nocapture readonly dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::PropertyTreeManager", %"class.blink::PropertyTreeManager"* %0, i64 0, i32 1
  %13 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %12, align 8
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %13, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %16 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %15, align 8
  %17 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %16, i64 %14
  br label %18

18:                                               ; preds = %7, %11
  %19 = phi %"struct.cc::EffectNode"* [ %17, %11 ], [ null, %7 ]
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %19, i64 0, i32 17
  store i8 12, i8* %20, align 1
  br label %21

21:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19PropertyTreeManager32SupportsShaderBasedRoundedCornerERKNS_21ClipPaintPropertyNodeENS0_12CcEffectTypeEPKNS_23EffectPaintPropertyNodeE(%"class.blink::ClipPaintPropertyNode"* nocapture readonly dereferenceable(168), i32, %"class.blink::EffectPaintPropertyNode"* readonly) local_unnamed_addr #4 align 2 {
  %4 = and i32 %1, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %46

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 2, i32 0
  %8 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %7, align 8
  %9 = icmp eq %"class.blink::RefCountedPath"* %8, null
  br i1 %9, label %10, label %46

10:                                               ; preds = %6
  %11 = icmp eq %"class.blink::EffectPaintPropertyNode"* %2, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %14 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %13, align 8
  %15 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %19, align 8
  %21 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %18, %20
  br i1 %21, label %22, label %46

22:                                               ; preds = %16, %12, %10
  %23 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 1, i32 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 1, i32 1
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 3, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 3, i32 1
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %36, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 2, i32 0
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 4, i32 1, i32 2, i32 1
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %42, %44
  ret i1 %45

46:                                               ; preds = %34, %28, %22, %16, %6, %3
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* noalias sret, %"class.blink::FloatRoundedRect"*) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca [4 x %struct.SkPoint], align 16
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 2
  %7 = bitcast %class.SkRRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 52, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %9, 0xBE80000000000000
  %11 = fcmp olt float %9, 0x3E80000000000000
  %12 = and i1 %10, %11
  %13 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 1
  br i1 %12, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast float* %13 to i32*
  %16 = load i32, i32* %15, align 4
  br label %59

17:                                               ; preds = %2
  %18 = load float, float* %13, align 4
  %19 = fcmp ogt float %18, 0xBE80000000000000
  %20 = fcmp olt float %18, 0x3E80000000000000
  %21 = and i1 %19, %20
  %22 = bitcast float %18 to i32
  br i1 %21, label %23, label %59

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %25, 0xBE80000000000000
  %27 = fcmp olt float %25, 0x3E80000000000000
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %59

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp ogt float %31, 0xBE80000000000000
  %33 = fcmp olt float %31, 0x3E80000000000000
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %59

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %37 = load float, float* %36, align 4
  %38 = fcmp ogt float %37, 0xBE80000000000000
  %39 = fcmp olt float %37, 0x3E80000000000000
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %59

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, 0xBE80000000000000
  %45 = fcmp olt float %43, 0x3E80000000000000
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %59

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 0
  %49 = load float, float* %48, align 4
  %50 = fcmp ogt float %49, 0xBE80000000000000
  %51 = fcmp olt float %49, 0x3E80000000000000
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 1
  %55 = load float, float* %54, align 4
  %56 = fcmp ule float %55, 0xBE80000000000000
  %57 = fcmp uge float %55, 0x3E80000000000000
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %100

59:                                               ; preds = %14, %53, %35, %41, %23, %29, %17, %47
  %60 = phi i32 [ %16, %14 ], [ %22, %53 ], [ %22, %35 ], [ %22, %41 ], [ %22, %23 ], [ %22, %29 ], [ %22, %17 ], [ %22, %47 ]
  %61 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %62 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #13
  %63 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0
  %64 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 0
  %65 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 1
  %66 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1
  %67 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1, i32 1
  %68 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 2
  store float %9, float* %64, align 16
  %69 = bitcast float* %65 to i32*
  store i32 %60, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = bitcast %struct.SkPoint* %66 to i32*
  store i32 %72, i32* %76, align 8
  %77 = bitcast float* %67 to i32*
  store i32 %75, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %79 = bitcast float* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %82 = bitcast %struct.SkPoint* %68 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %82, align 16
  %83 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #13
  %84 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 1
  %91 = load float, float* %90, align 4
  %92 = insertelement <2 x float> undef, float %85, i32 0
  %93 = insertelement <2 x float> %92, float %87, i32 1
  %94 = fadd float %85, %89
  %95 = insertelement <2 x float> undef, float %94, i32 0
  %96 = fadd float %87, %91
  %97 = insertelement <2 x float> %95, float %96, i32 1
  %98 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %93, <2 x float>* %98, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %97, <2 x float>* %99, align 8
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %61, %struct.SkPoint* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #13
  br label %116

100:                                              ; preds = %53
  %101 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %102 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #13
  %103 = bitcast %"class.blink::FloatRoundedRect"* %1 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  %105 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %106 = bitcast float* %105 to <2 x float>*
  %107 = load <2 x float>, <2 x float>* %106, align 4
  %108 = fadd <2 x float> %104, %107
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %104, <2 x float>* %109, align 8
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %108, <2 x float>* %110, align 8
  %111 = call zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %101) #13
  br i1 %111, label %112, label %115

112:                                              ; preds = %100
  %113 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 0
  %114 = bitcast %struct.SkPoint* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 32, i1 false) #13
  store i32 1, i32* %6, align 4
  br label %115

115:                                              ; preds = %100, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br label %116

116:                                              ; preds = %115, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PropertyTreeManager20PopulateCcEffectNodeERN2cc10EffectNodeERKNS_23EffectPaintPropertyNodeEi(%"class.blink::PropertyTreeManager"*, %"struct.cc::EffectNode"* dereferenceable(288), %"class.blink::EffectPaintPropertyNode"* dereferenceable(152), i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 7
  %6 = tail call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* %5) #13
  %7 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 2
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 19
  store i32 %3, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 2
  %10 = tail call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %9) #13
  br i1 %10, label %11, label %37

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 10
  %13 = load i8, i8* %12, align 1, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %37

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %16, align 8
  %18 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %17, null
  br i1 %18, label %19, label %37

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 11
  %21 = load i8, i8* %20, align 2, !range !5
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 5
  %25 = load i32, i32* %24, align 4
  switch i32 %25, label %37 [
    i32 3, label %26
    i32 6, label %26
  ]

26:                                               ; preds = %23, %23
  %27 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 8, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 8, i32 1, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 8, i32 1, i32 0, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %32, %34
  %36 = select i1 %35, i8 0, i8 21
  br label %37

37:                                               ; preds = %4, %11, %15, %19, %23, %26, %30
  %38 = phi i8 [ %36, %30 ], [ 8, %4 ], [ 9, %11 ], [ 10, %15 ], [ 11, %19 ], [ 0, %26 ], [ 4, %23 ]
  %39 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 17
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 4
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 3
  %44 = bitcast float* %43 to i32*
  store i32 %42, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %45, align 8
  br label %47

47:                                               ; preds = %52, %37
  %48 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %46, %37 ], [ %50, %52 ]
  %49 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %48, i64 0, i32 0, i32 3, i32 0
  %50 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %49, align 8
  %51 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %48, i64 0, i32 0, i32 1
  %54 = load i8, i8* %53, align 4, !range !5
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %52
  %57 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %48 to %"class.blink::TransformPaintPropertyNode"*
  %58 = tail call i32 @_ZN5blink19PropertyTreeManager29EnsureCompositorTransformNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %57)
  %59 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 18
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 3
  %63 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %63, align 8
  %65 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %64, null
  br i1 %62, label %66, label %71

66:                                               ; preds = %56
  br i1 %65, label %67, label %72

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 11
  %69 = load i8, i8* %68, align 2, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %100, label %97

71:                                               ; preds = %56
  br i1 %65, label %97, label %72

72:                                               ; preds = %66, %71
  %73 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %64, i64 0, i32 0
  %75 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK5blink26CompositorFilterOperations20AsCcFilterOperationsEv(%"class.blink::CompositorFilterOperations"* nonnull %74) #13
  %76 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 6
  %77 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"* %76, %"class.cc::FilterOperations"* dereferenceable(24) %75) #13
  %78 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %73, align 8
  %79 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %78, i64 0, i32 1
  %80 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %81 = load i8, i8* %80, align 4, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %85 = bitcast %"class.gfx::RRectF"* %84 to i8*
  %86 = bitcast %"class.gfx::RRectF"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %86, i64 52, i1 false) #13
  br label %91

87:                                               ; preds = %72
  %88 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %89 = bitcast %union.anon.52* %88 to i8*
  %90 = bitcast %"class.gfx::RRectF"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 52, i1 false) #13
  store i8 1, i8* %80, align 4
  br label %91

91:                                               ; preds = %83, %87
  %92 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %73, align 8
  %93 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %92, i64 0, i32 2, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 10, i32 0
  store i64 %94, i64* %95, align 8
  %96 = load i32, i32* %60, align 4
  br label %97

97:                                               ; preds = %67, %71, %91
  %98 = phi i32 [ %61, %71 ], [ %96, %91 ], [ 3, %67 ]
  %99 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 12
  store i32 %98, i32* %99, align 4
  br label %104

100:                                              ; preds = %67
  %101 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK5blink26CompositorFilterOperations20AsCcFilterOperationsEv(%"class.blink::CompositorFilterOperations"* %9) #13
  %102 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 5
  %103 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"* %102, %"class.cc::FilterOperations"* dereferenceable(24) %101) #13
  br label %104

104:                                              ; preds = %100, %97
  %105 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %48, null
  br i1 %105, label %134, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %57, i64 0, i32 1, i32 3
  %108 = load i8, i8* %107, align 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %129

110:                                              ; preds = %106, %124
  %111 = phi %"class.blink::TransformPaintPropertyNode"* [ %125, %124 ], [ %57, %106 ]
  %112 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %111, i64 0, i32 0, i32 0, i32 3, i32 0
  %113 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %112, align 8
  %114 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %113, null
  br i1 %114, label %134, label %115

115:                                              ; preds = %110, %120
  %116 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %118, %120 ], [ %113, %110 ]
  %117 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %116, i64 0, i32 0, i32 3, i32 0
  %118 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %117, align 8
  %119 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %116, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 4, !range !5
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %115

124:                                              ; preds = %120, %115
  %125 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %116 to %"class.blink::TransformPaintPropertyNode"*
  %126 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %125, i64 0, i32 1, i32 3
  %127 = load i8, i8* %126, align 1
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %110, label %129

129:                                              ; preds = %124, %106
  %130 = phi i8 [ %108, %106 ], [ %127, %124 ]
  %131 = icmp ne i8 %130, 1
  %132 = zext i1 %131 to i24
  %133 = shl nuw nsw i24 %132, 3
  br label %134

134:                                              ; preds = %110, %104, %129
  %135 = phi i24 [ %133, %129 ], [ 8, %104 ], [ 8, %110 ]
  %136 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 16
  %137 = bitcast [3 x i8]* %136 to i24*
  %138 = load i24, i24* %137, align 4
  %139 = and i24 %138, -9
  %140 = or i24 %139, %135
  store i24 %140, i24* %137, align 4
  %141 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 0, i32 0, i32 2
  %142 = load i8, i8* %141, align 1
  %143 = and i8 %142, -3
  %144 = icmp ne i8 %143, 0
  %145 = zext i1 %144 to i24
  %146 = shl nuw nsw i24 %145, 15
  %147 = and i24 %140, -32769
  %148 = or i24 %146, %147
  store i24 %148, i24* %137, align 4
  %149 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 8
  %150 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 24
  %151 = getelementptr inbounds %"class.cc::DocumentTransitionSharedElementId", %"class.cc::DocumentTransitionSharedElementId"* %149, i64 0, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds %"class.cc::DocumentTransitionSharedElementId", %"class.cc::DocumentTransitionSharedElementId"* %150, i64 0, i32 0
  store i32 %152, i32* %153, align 8
  %154 = icmp eq %"class.cc::DocumentTransitionSharedElementId"* %150, %149
  br i1 %154, label %161, label %155

155:                                              ; preds = %134
  %156 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1, i64 0, i32 24, i32 1, i32 0
  %157 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 8, i32 1, i32 0, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %2, i64 0, i32 1, i32 8, i32 1, i32 0, i32 0, i32 1
  %160 = load i32*, i32** %159, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"* %156, i32* %158, i32* %160) #13
  br label %161

161:                                              ; preds = %134, %155
  ret void
}

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK5blink26CompositorFilterOperations20AsCcFilterOperationsEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSERKS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412setTranslateEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* sret, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2cc17SnapContainerDataC1ERKS0_(%"class.cc::SnapContainerData"*, %"class.cc::SnapContainerData"* dereferenceable(88)) unnamed_addr #2

declare dereferenceable(88) %"class.cc::SnapContainerData"* @_ZN2cc17SnapContainerDataaSEOS0_(%"class.cc::SnapContainerData"*, %"class.cc::SnapContainerData"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN2cc17SnapContainerDataC1EOS0_(%"class.cc::SnapContainerData"*, %"class.cc::SnapContainerData"* dereferenceable(88)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"*) unnamed_addr #6

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #2

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.54"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare dereferenceable(24) %"class.blink::TransformPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_33TransformPaintPropertyNodeOrAliasES2_(%"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, %"struct.cc::ElementId"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  br i1 %12, label %15, label %145

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair"* %9, %1
  %17 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %2, i64 0, i32 0
  br i1 %16, label %18, label %26

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0
  %20 = load i64, i64* %17, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %22 = load i32, i32* %3, align 4
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair"* %23 to i64
  %25 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %24, i64* %25, align 8
  br label %296

26:                                               ; preds = %15
  %27 = load i64, i64* %17, align 8
  %28 = load i32, i32* %3, align 4
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %30 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  %31 = sub i64 %13, %30
  %32 = ashr exact i64 %31, 4
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %32
  %34 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %35 = icmp ult %"struct.std::__1::pair"* %33, %9
  br i1 %35, label %36, label %65

36:                                               ; preds = %26
  %37 = sub nsw i64 0, %32
  %38 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %37, i32 0, i32 0
  %39 = bitcast i64* %38 to i8*
  %40 = xor i64 %5, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 4
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %36, %47
  %48 = phi %"struct.std::__1::pair"* [ %54, %47 ], [ %9, %36 ]
  %49 = phi %"struct.std::__1::pair"* [ %53, %47 ], [ %33, %36 ]
  %50 = phi i64 [ %55, %47 ], [ %45, %36 ]
  %51 = bitcast %"struct.std::__1::pair"* %48 to i8*
  %52 = bitcast %"struct.std::__1::pair"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 16, i1 false) #13
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 1
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 1
  %55 = add i64 %50, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %47, !llvm.loop !29

57:                                               ; preds = %47, %36
  %58 = phi %"struct.std::__1::pair"* [ %9, %36 ], [ %54, %47 ]
  %59 = phi %"struct.std::__1::pair"* [ %33, %36 ], [ %53, %47 ]
  %60 = phi %"struct.std::__1::pair"* [ undef, %36 ], [ %54, %47 ]
  %61 = icmp ult i8* %41, inttoptr (i64 48 to i8*)
  br i1 %61, label %62, label %122

62:                                               ; preds = %122, %57
  %63 = phi %"struct.std::__1::pair"* [ %60, %57 ], [ %140, %122 ]
  %64 = ptrtoint %"struct.std::__1::pair"* %63 to i64
  br label %65

65:                                               ; preds = %62, %26
  %66 = phi i64 [ %64, %62 ], [ %13, %26 ]
  store i64 %66, i64* %34, align 8
  %67 = icmp eq i64 %31, 0
  br i1 %67, label %142, label %68

68:                                               ; preds = %65
  %69 = add i64 %31, -16
  %70 = lshr i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %88, label %74

74:                                               ; preds = %68, %74
  %75 = phi %"struct.std::__1::pair"* [ %79, %74 ], [ %9, %68 ]
  %76 = phi %"struct.std::__1::pair"* [ %78, %74 ], [ %33, %68 ]
  %77 = phi i64 [ %86, %74 ], [ %72, %68 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 0, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 -1, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1, i32 1
  store i32 %84, i32* %85, align 8
  %86 = add i64 %77, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %74, !llvm.loop !31

88:                                               ; preds = %74, %68
  %89 = phi %"struct.std::__1::pair"* [ %9, %68 ], [ %79, %74 ]
  %90 = phi %"struct.std::__1::pair"* [ %33, %68 ], [ %78, %74 ]
  %91 = icmp ult i64 %69, 48
  br i1 %91, label %142, label %92

92:                                               ; preds = %88, %92
  %93 = phi %"struct.std::__1::pair"* [ %114, %92 ], [ %89, %88 ]
  %94 = phi %"struct.std::__1::pair"* [ %113, %92 ], [ %90, %88 ]
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -1, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -1, i32 0, i32 0
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -1, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -2, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -2, i32 0, i32 0
  %103 = load i64, i64* %101, align 8
  store i64 %103, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -2, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -2, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -3, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -3, i32 0, i32 0
  %109 = load i64, i64* %107, align 8
  store i64 %109, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -3, i32 1
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -4
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 0, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %114, i64 0, i32 0, i32 0
  %117 = load i64, i64* %115, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 -4, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 -4, i32 1
  store i32 %119, i32* %120, align 8
  %121 = icmp eq %"struct.std::__1::pair"* %113, %1
  br i1 %121, label %142, label %92

122:                                              ; preds = %57, %122
  %123 = phi %"struct.std::__1::pair"* [ %140, %122 ], [ %58, %57 ]
  %124 = phi %"struct.std::__1::pair"* [ %139, %122 ], [ %59, %57 ]
  %125 = bitcast %"struct.std::__1::pair"* %123 to i8*
  %126 = bitcast %"struct.std::__1::pair"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #13
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 1
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %129 = bitcast %"struct.std::__1::pair"* %128 to i8*
  %130 = bitcast %"struct.std::__1::pair"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 16, i1 false) #13
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 2
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 2
  %133 = bitcast %"struct.std::__1::pair"* %132 to i8*
  %134 = bitcast %"struct.std::__1::pair"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false) #13
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 3
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 3
  %137 = bitcast %"struct.std::__1::pair"* %136 to i8*
  %138 = bitcast %"struct.std::__1::pair"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 16, i1 false) #13
  %139 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 4
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 4
  %141 = icmp ult %"struct.std::__1::pair"* %139, %9
  br i1 %141, label %122, label %62

142:                                              ; preds = %88, %92, %65
  %143 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0
  store i64 %27, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i32 %28, i32* %144, align 8
  br label %296

145:                                              ; preds = %4
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %147 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #13
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %153 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %154 = bitcast %"class.std::__1::vector"* %0 to i64*
  %155 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 40, i1 false)
  %156 = load i64, i64* %154, align 8
  %157 = sub i64 %13, %156
  %158 = ashr exact i64 %157, 4
  %159 = add nsw i64 %158, 1
  %160 = icmp ugt i64 %159, 1152921504606846975
  br i1 %160, label %161, label %163

161:                                              ; preds = %145
  %162 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %162) #15
  unreachable

163:                                              ; preds = %145
  %164 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %165 = sub i64 %14, %156
  %166 = ashr exact i64 %165, 4
  %167 = icmp ult i64 %166, 576460752303423487
  br i1 %167, label %172, label %168

168:                                              ; preds = %163
  %169 = sub i64 %5, %156
  %170 = ashr exact i64 %169, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %151, align 8
  %171 = bitcast %"class.std::__1::allocator"** %152 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %146, %"class.std::__1::__compressed_pair"** %171, align 8
  br label %183

172:                                              ; preds = %163
  %173 = ashr exact i64 %165, 3
  %174 = icmp ult i64 %173, %159
  %175 = select i1 %174, i64 %159, i64 %173
  %176 = sub i64 %5, %156
  %177 = ashr exact i64 %176, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %151, align 8
  %178 = bitcast %"class.std::__1::allocator"** %152 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %146, %"class.std::__1::__compressed_pair"** %178, align 8
  %179 = icmp eq i64 %175, 0
  br i1 %179, label %189, label %180

180:                                              ; preds = %172
  %181 = icmp ugt i64 %175, 1152921504606846975
  br i1 %181, label %182, label %183

182:                                              ; preds = %180
  tail call void @abort() #15
  unreachable

183:                                              ; preds = %168, %180
  %184 = phi i64 [ 1152921504606846975, %168 ], [ %175, %180 ]
  %185 = phi i64 [ %170, %168 ], [ %177, %180 ]
  %186 = shl i64 %184, 4
  %187 = tail call i8* @_Znwm(i64 %186) #14
  %188 = bitcast i8* %187 to %"struct.std::__1::pair"*
  br label %189

189:                                              ; preds = %172, %183
  %190 = phi i64 [ %185, %183 ], [ %177, %172 ]
  %191 = phi i64 [ %184, %183 ], [ 0, %172 ]
  %192 = phi %"struct.std::__1::pair"* [ %188, %183 ], [ null, %172 ]
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %192, i64 %190
  store %"struct.std::__1::pair"* %193, %"struct.std::__1::pair"** %150, align 8
  store %"struct.std::__1::pair"* %193, %"struct.std::__1::pair"** %149, align 8
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %192, i64 %191
  store %"struct.std::__1::pair"* %194, %"struct.std::__1::pair"** %151, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"struct.cc::ElementId"* dereferenceable(8) %2, i32* dereferenceable(4) %3)
  %195 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %149, align 8
  %196 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %197 = ptrtoint %"struct.std::__1::pair"* %196 to i64
  %198 = sub i64 %5, %197
  %199 = ashr exact i64 %198, 4
  %200 = sub nsw i64 0, %199
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %195, i64 %200
  store %"struct.std::__1::pair"* %201, %"struct.std::__1::pair"** %149, align 8
  %202 = icmp sgt i64 %198, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %189
  %204 = bitcast %"struct.std::__1::pair"* %201 to i8*
  %205 = bitcast %"struct.std::__1::pair"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %205, i64 %198, i1 false) #13
  br label %206

206:                                              ; preds = %203, %189
  %207 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %208 = icmp eq %"struct.std::__1::pair"* %207, %1
  br i1 %208, label %209, label %213

209:                                              ; preds = %206
  %210 = ptrtoint %"struct.std::__1::pair"* %207 to i64
  %211 = bitcast %"struct.std::__1::pair"** %150 to i64*
  %212 = load i64, i64* %211, align 8
  br label %270

213:                                              ; preds = %206
  %214 = bitcast %"struct.std::__1::pair"** %150 to i8**
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %207, i64 -1, i32 0, i32 0
  %217 = ptrtoint i64* %216 to i64
  %218 = sub i64 %217, %5
  %219 = lshr i64 %218, 4
  %220 = add nuw nsw i64 %219, 1
  %221 = and i64 %220, 3
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %236, label %223

223:                                              ; preds = %213, %223
  %224 = phi i8* [ %231, %223 ], [ %215, %213 ]
  %225 = phi %"struct.std::__1::pair"* [ %228, %223 ], [ %1, %213 ]
  %226 = phi i64 [ %232, %223 ], [ %221, %213 ]
  %227 = bitcast %"struct.std::__1::pair"* %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %227, i64 16, i1 false) #13
  %228 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %225, i64 1
  %229 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %150, align 8
  %230 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %229, i64 1
  store %"struct.std::__1::pair"* %230, %"struct.std::__1::pair"** %150, align 8
  %231 = bitcast %"struct.std::__1::pair"* %230 to i8*
  %232 = add i64 %226, -1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %223, !llvm.loop !32

234:                                              ; preds = %223
  %235 = bitcast %"struct.std::__1::pair"* %230 to i8*
  br label %236

236:                                              ; preds = %213, %234
  %237 = phi %"struct.std::__1::pair"* [ undef, %213 ], [ %230, %234 ]
  %238 = phi i8* [ %215, %213 ], [ %235, %234 ]
  %239 = phi %"struct.std::__1::pair"* [ %1, %213 ], [ %228, %234 ]
  %240 = icmp ult i64 %218, 48
  br i1 %240, label %265, label %241

241:                                              ; preds = %236, %241
  %242 = phi i8* [ %264, %241 ], [ %238, %236 ]
  %243 = phi %"struct.std::__1::pair"* [ %260, %241 ], [ %239, %236 ]
  %244 = bitcast %"struct.std::__1::pair"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %244, i64 16, i1 false) #13
  %245 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 1
  %246 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %150, align 8
  %247 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 1
  store %"struct.std::__1::pair"* %247, %"struct.std::__1::pair"** %150, align 8
  %248 = bitcast %"struct.std::__1::pair"* %247 to i8*
  %249 = bitcast %"struct.std::__1::pair"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %249, i64 16, i1 false) #13
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 2
  %251 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %150, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 1
  store %"struct.std::__1::pair"* %252, %"struct.std::__1::pair"** %150, align 8
  %253 = bitcast %"struct.std::__1::pair"* %252 to i8*
  %254 = bitcast %"struct.std::__1::pair"* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 16, i1 false) #13
  %255 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 3
  %256 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %150, align 8
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %256, i64 1
  store %"struct.std::__1::pair"* %257, %"struct.std::__1::pair"** %150, align 8
  %258 = bitcast %"struct.std::__1::pair"* %257 to i8*
  %259 = bitcast %"struct.std::__1::pair"* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 16, i1 false) #13
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 4
  %261 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %150, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %261, i64 1
  store %"struct.std::__1::pair"* %262, %"struct.std::__1::pair"** %150, align 8
  %263 = icmp eq %"struct.std::__1::pair"* %260, %207
  %264 = bitcast %"struct.std::__1::pair"* %262 to i8*
  br i1 %263, label %265, label %241

265:                                              ; preds = %241, %236
  %266 = phi %"struct.std::__1::pair"* [ %237, %236 ], [ %262, %241 ]
  %267 = ptrtoint %"struct.std::__1::pair"* %266 to i64
  %268 = load i64, i64* %153, align 8
  %269 = bitcast %"struct.std::__1::pair"** %150 to i64*
  br label %270

270:                                              ; preds = %209, %265
  %271 = phi i64* [ %211, %209 ], [ %269, %265 ]
  %272 = phi i64 [ %212, %209 ], [ %267, %265 ]
  %273 = phi i64 [ %210, %209 ], [ %268, %265 ]
  %274 = load i64, i64* %154, align 8
  %275 = bitcast %"struct.std::__1::pair"** %149 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %154, align 8
  store i64 %274, i64* %275, align 8
  store i64 %272, i64* %153, align 8
  store i64 %273, i64* %271, align 8
  %277 = load i64, i64* %164, align 8
  %278 = bitcast %"struct.std::__1::pair"** %151 to i64*
  %279 = load i64, i64* %278, align 8
  store i64 %279, i64* %164, align 8
  store i64 %277, i64* %278, align 8
  %280 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %274, i64* %280, align 8
  %281 = inttoptr i64 %274 to %"struct.std::__1::pair"*
  %282 = inttoptr i64 %273 to %"struct.std::__1::pair"*
  %283 = icmp eq %"struct.std::__1::pair"* %282, %281
  br i1 %283, label %291, label %284

284:                                              ; preds = %270
  %285 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %282, i64 -1, i32 0, i32 0
  %286 = ptrtoint i64* %285 to i64
  %287 = sub i64 %286, %274
  %288 = lshr i64 %287, 4
  %289 = xor i64 %288, -1
  %290 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %282, i64 %289
  store %"struct.std::__1::pair"* %290, %"struct.std::__1::pair"** %150, align 8
  br label %291

291:                                              ; preds = %284, %270
  %292 = icmp eq i64 %274, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %291
  %294 = inttoptr i64 %274 to i8*
  call void @_ZdlPv(i8* %294) #14
  br label %295

295:                                              ; preds = %291, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #13
  br label %296

296:                                              ; preds = %18, %142, %295
  %297 = phi %"struct.std::__1::pair"* [ %1, %18 ], [ %1, %142 ], [ %195, %295 ]
  ret %"struct.std::__1::pair"* %297
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"struct.cc::ElementId"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 0, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !33

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0, i32 0
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 0, i32 0
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 0, i32 0
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 0, i32 0
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair"* %88, %"struct.std::__1::pair"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 %23
  store %"struct.std::__1::pair"* %89, %"struct.std::__1::pair"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #15
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #14
  %103 = bitcast i8* %102 to %"struct.std::__1::pair"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #13
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !34

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #13
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #13
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #13
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #13
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair"* %112 to i64
  %163 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #14
  %173 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 0, i32 0
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 1
  %180 = load i32, i32* %2, align 4
  store i32 %180, i32* %179, align 8
  %181 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 1
  store %"struct.std::__1::pair"* %182, %"struct.std::__1::pair"** %4, align 8
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::PropertyTreeManager::EffectState"* @_ZN3WTF6VectorIN5blink19PropertyTreeManager11EffectStateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.542"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.542", %"class.WTF::Vector.542"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.542", %"class.WTF::Vector.542"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::PropertyTreeManager::EffectState"*, %"struct.blink::PropertyTreeManager::EffectState"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::PropertyTreeManager::EffectState", %"struct.blink::PropertyTreeManager::EffectState"* %24, i64 %25
  ret %"struct.blink::PropertyTreeManager::EffectState"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -1
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::EffectPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_30EffectPaintPropertyNodeOrAliasES2_(%"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::ClipPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_28ClipPaintPropertyNodeOrAliasES2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS1_21ClipPaintPropertyNodeEPKNS1_23EffectPaintPropertyNodeEE11PendingClipNS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.672"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = icmp ugt i32 %1, 134086656
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #13
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %13, i8* %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %22 = shl nuw nsw i64 %6, 4
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #13
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIZN5blink19PropertyTreeManager35SynthesizeCcEffectsForClipsIfNeededERKNS1_21ClipPaintPropertyNodeEPKNS1_23EffectPaintPropertyNodeEE11PendingClipEEPKcv, i64 0, i64 0)) #13
  %25 = bitcast %"class.WTF::VectorBufferBase.672"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = lshr i64 %23, 4
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.672", %"class.WTF::VectorBufferBase.672"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable"* %0, i32* %36, i32 %32, i32* %1) #13
  ret i32* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19PropertyTreeManager11EffectStateEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv"}
!9 = distinct !{!9, !10, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv"}
!14 = distinct !{!14, !15, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv"}
!19 = distinct !{!19, !20, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv"}
!24 = distinct !{!24, !25, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink23ScrollPaintPropertyNode20GetSnapContainerDataEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink23ScrollPaintPropertyNode20GetSnapContainerDataEv"}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.disable"}
!31 = distinct !{!31, !30}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !30}
!34 = distinct !{!34, !30}
