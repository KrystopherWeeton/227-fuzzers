; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/comfort_noise_generator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/comfort_noise_generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::ComfortNoiseGenerator" = type <{ i32, i32, i64, float, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::array" = type { [65 x float] }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::array"* }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.webrtc::FftData" = type { %"struct.std::__1::array", %"struct.std::__1::array" }
%"class.rtc::ArrayView.4" = type { %"class.rtc::impl::ArrayViewBase.5" }
%"class.rtc::impl::ArrayViewBase.5" = type { %"struct.webrtc::FftData"*, i64 }
%"class.webrtc::aec3::VectorMath" = type { i32 }

@_ZN6webrtc12_GLOBAL__N_19kSqrt2SinE = internal unnamed_addr constant [32 x float] [float 0.000000e+00, float 0x3FD1A85600000000, float 0x3FE1517A80000000, float 0x3FE92469E0000000, float 1.000000e+00, float 0x3FF2D062E0000000, float 0x3FF4E7AEA0000000, float 0x3FF63150A0000000, float 0x3FF6A09E80000000, float 0x3FF63150A0000000, float 0x3FF4E7AEA0000000, float 0x3FF2D062E0000000, float 1.000000e+00, float 0x3FE92469E0000000, float 0x3FE1517A80000000, float 0x3FD1A85600000000, float 0.000000e+00, float 0xBFD1A85600000000, float 0xBFE1517A80000000, float 0xBFE92469E0000000, float -1.000000e+00, float 0xBFF2D062E0000000, float 0xBFF4E7AEA0000000, float 0xBFF63150A0000000, float 0xBFF6A09E80000000, float 0xBFF63150A0000000, float 0xBFF4E7AEA0000000, float 0xBFF2D062E0000000, float -1.000000e+00, float 0xBFE92469E0000000, float 0xBFE1517A80000000, float 0xBFD1A85600000000], align 16

@_ZN6webrtc21ComfortNoiseGeneratorC1ERKNS_20EchoCanceller3ConfigENS_16Aec3OptimizationEm = hidden unnamed_addr alias void (%"class.webrtc::ComfortNoiseGenerator"*, %"struct.webrtc::EchoCanceller3Config"*, i32, i64), void (%"class.webrtc::ComfortNoiseGenerator"*, %"struct.webrtc::EchoCanceller3Config"*, i32, i64)* @_ZN6webrtc21ComfortNoiseGeneratorC2ERKNS_20EchoCanceller3ConfigENS_16Aec3OptimizationEm
@_ZN6webrtc21ComfortNoiseGeneratorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ComfortNoiseGenerator"*), void (%"class.webrtc::ComfortNoiseGenerator"*)* @_ZN6webrtc21ComfortNoiseGeneratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ComfortNoiseGeneratorC2ERKNS_20EchoCanceller3ConfigENS_16Aec3OptimizationEm(%"class.webrtc::ComfortNoiseGenerator"*, %"struct.webrtc::EchoCanceller3Config"* nocapture readonly dereferenceable(560), i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 0
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 1
  store i32 42, i32* %6, align 4
  %7 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 2
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 10, i32 0
  %10 = load float, float* %9, align 8
  %11 = fadd float %10, 0x405693C6A0000000
  %12 = fmul float %11, 0x3FB99999A0000000
  %13 = tail call float @powf(float 1.000000e+01, float %12) #9
  %14 = fmul float %13, 6.400000e+01
  store float %14, float* %8, align 8
  %15 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 5
  %16 = tail call i8* @_Znwm(i64 24) #10
  %17 = load i64, i64* %7, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #9
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::unique_ptr"* %15 to i8**
  store i8* %16, i8** %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6
  %22 = bitcast %"class.std::__1::vector"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 48, i1 false)
  %23 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 8
  store i32 0, i32* %23, align 8
  br label %85

24:                                               ; preds = %4
  %25 = icmp ugt i64 %17, 70949015668113660
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast i8* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = mul i64 %17, 260
  %30 = tail call i8* @_Znwm(i64 %29) #10
  %31 = bitcast i8* %30 to %"struct.std::__1::array"*
  %32 = getelementptr inbounds i8, i8* %16, i64 8
  %33 = bitcast i8* %16 to i8**
  store i8* %30, i8** %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %31, i64 %17
  %35 = getelementptr inbounds i8, i8* %16, i64 16
  %36 = bitcast i8* %35 to %"struct.std::__1::array"**
  store %"struct.std::__1::array"* %34, %"struct.std::__1::array"** %36, align 8
  %37 = bitcast i8* %32 to i64*
  %38 = ptrtoint i8* %30 to i64
  %39 = add nsw i64 %17, -1
  %40 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %31, i64 %39, i32 0, i64 0
  %41 = ptrtoint float* %40 to i64
  %42 = sub i64 %41, %38
  %43 = urem i64 %42, 260
  %44 = add i64 %42, 260
  %45 = sub i64 %44, %43
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 0, i64 %45, i1 false) #9
  %46 = ptrtoint %"struct.std::__1::array"* %34 to i64
  store i64 %46, i64* %37, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"* %15 to i8**
  store i8* %16, i8** %47, align 8
  %48 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6
  %49 = tail call i8* @_Znwm(i64 %29) #10
  %50 = bitcast i8* %49 to %"struct.std::__1::array"*
  %51 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6, i32 0, i32 1
  %52 = bitcast %"class.std::__1::vector"* %48 to i8**
  store i8* %49, i8** %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %50, i64 %17
  %54 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %53, %"struct.std::__1::array"** %54, align 8
  %55 = bitcast %"struct.std::__1::array"** %51 to i64*
  %56 = ptrtoint i8* %49 to i64
  %57 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %50, i64 %39, i32 0, i64 0
  %58 = ptrtoint float* %57 to i64
  %59 = sub i64 %58, %56
  %60 = urem i64 %59, 260
  %61 = add i64 %59, 260
  %62 = sub i64 %61, %60
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 0, i64 %62, i1 false) #9
  %63 = ptrtoint %"struct.std::__1::array"* %53 to i64
  store i64 %63, i64* %55, align 8
  %64 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7
  %65 = tail call i8* @_Znwm(i64 %29) #10
  %66 = bitcast i8* %65 to %"struct.std::__1::array"*
  %67 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 1
  %68 = bitcast %"class.std::__1::vector"* %64 to i8**
  store i8* %65, i8** %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 %17
  %70 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %69, %"struct.std::__1::array"** %70, align 8
  %71 = bitcast %"struct.std::__1::array"** %67 to i64*
  %72 = ptrtoint i8* %65 to i64
  %73 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %66, i64 %39, i32 0, i64 0
  %74 = ptrtoint float* %73 to i64
  %75 = sub i64 %74, %72
  %76 = urem i64 %75, 260
  %77 = add i64 %75, 260
  %78 = sub i64 %77, %76
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 0, i64 %78, i1 false) #9
  %79 = ptrtoint %"struct.std::__1::array"* %69 to i64
  store i64 %79, i64* %71, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 8
  store i32 0, i32* %81, align 8
  %82 = bitcast i8* %16 to %"class.std::__1::vector"*
  %83 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6, i32 0, i32 0
  %84 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  br label %86

85:                                               ; preds = %86, %19
  ret void

86:                                               ; preds = %134, %28
  %87 = phi %"class.std::__1::vector"* [ %82, %28 ], [ %135, %134 ]
  %88 = phi i64 [ 0, %28 ], [ %131, %134 ]
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %87, i64 0, i32 0, i32 0
  %90 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %89, align 8
  %91 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %90, i64 %88
  %92 = bitcast %"struct.std::__1::array"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %92, i8 0, i64 260, i1 false)
  %93 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %83, align 8
  %94 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %93, i64 %88
  %95 = bitcast %"struct.std::__1::array"* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %95, i8 0, i64 260, i1 false)
  %96 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %84, align 8
  %97 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 0
  %98 = bitcast float* %97 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %98, align 4
  %99 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 4
  %100 = bitcast float* %99 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %100, align 4
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 8
  %102 = bitcast float* %101 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %102, align 4
  %103 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 12
  %104 = bitcast float* %103 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %104, align 4
  %105 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 16
  %106 = bitcast float* %105 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %106, align 4
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 20
  %108 = bitcast float* %107 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 24
  %110 = bitcast float* %109 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 28
  %112 = bitcast float* %111 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 32
  %114 = bitcast float* %113 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 36
  %116 = bitcast float* %115 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 40
  %118 = bitcast float* %117 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 44
  %120 = bitcast float* %119 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 48
  %122 = bitcast float* %121 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 52
  %124 = bitcast float* %123 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 56
  %126 = bitcast float* %125 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 60
  %128 = bitcast float* %127 to <4 x i32>*
  store <4 x i32> <i32 1232348160, i32 1232348160, i32 1232348160, i32 1232348160>, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %96, i64 %88, i32 0, i64 64
  %130 = bitcast float* %129 to i32*
  store i32 1232348160, i32* %130, align 4
  %131 = add nuw i64 %88, 1
  %132 = load i64, i64* %7, align 8
  %133 = icmp ult i64 %131, %132
  br i1 %133, label %134, label %85

134:                                              ; preds = %86
  %135 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %80, align 8
  br label %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ComfortNoiseGeneratorD2Ev(%"class.webrtc::ComfortNoiseGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %2, align 8
  %4 = icmp eq %"struct.std::__1::array"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::array"* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::array"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.std::__1::array"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %11, align 8
  %13 = icmp eq %"struct.std::__1::array"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.std::__1::array"* %12 to i64
  %16 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::array"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::array"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %20, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %20, align 8
  %22 = icmp eq %"class.std::__1::vector"* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %25 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %24, align 8
  %26 = icmp eq %"struct.std::__1::array"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.std::__1::array"* %25 to i64
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::array"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"struct.std::__1::array"* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %27, %23
  %33 = bitcast %"class.std::__1::vector"* %21 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %19, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ComfortNoiseGenerator7ComputeEbN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEENS2_INS_7FftDataELln4711EEES9_(%"class.webrtc::ComfortNoiseGenerator"* nocapture, i1 zeroext, %"struct.std::__1::array"*, i64, %"struct.webrtc::FftData"*, i64, %"class.rtc::ArrayView.4"* nocapture readonly byval(%"class.rtc::ArrayView.4") align 8) local_unnamed_addr #2 align 2 {
  %8 = alloca %"struct.std::__1::array", align 16
  %9 = alloca %"class.webrtc::aec3::VectorMath", align 4
  %10 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  br i1 %1, label %913, label %12

12:                                               ; preds = %7
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6, i32 0, i32 0
  br label %26

16:                                               ; preds = %263, %12
  %17 = phi i64 [ 0, %12 ], [ %265, %263 ]
  %18 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 50
  br i1 %20, label %21, label %364

21:                                               ; preds = %16
  %22 = icmp eq i64 %17, 0
  br i1 %22, label %364, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %25 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 6, i32 0, i32 0
  br label %267

26:                                               ; preds = %14, %263
  %27 = phi i64 [ 0, %14 ], [ %264, %263 ]
  %28 = add i64 %27, 1
  %29 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %15, align 8
  %30 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 0
  %31 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 65
  %32 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 0
  %33 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %28
  %34 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27
  %35 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27
  %36 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %28
  %37 = icmp ult %"struct.std::__1::array"* %35, %33
  %38 = icmp ult %"struct.std::__1::array"* %34, %36
  %39 = and i1 %37, %38
  br i1 %39, label %203, label %40

40:                                               ; preds = %26
  %41 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 64
  %42 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 64
  %43 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 0
  %44 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 0
  %45 = bitcast float* %43 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 4, !alias.scope !2, !noalias !5
  %47 = bitcast float* %44 to <4 x float>*
  %48 = load <4 x float>, <4 x float>* %47, align 4, !alias.scope !5
  %49 = fsub <4 x float> %48, %46
  %50 = fmul <4 x float> %49, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %51 = fadd <4 x float> %46, %50
  %52 = bitcast float* %43 to <4 x float>*
  store <4 x float> %51, <4 x float>* %52, align 4, !alias.scope !2, !noalias !5
  %53 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 4
  %54 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 4
  %55 = bitcast float* %53 to <4 x float>*
  %56 = load <4 x float>, <4 x float>* %55, align 4, !alias.scope !2, !noalias !5
  %57 = bitcast float* %54 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 4, !alias.scope !5
  %59 = fsub <4 x float> %58, %56
  %60 = fmul <4 x float> %59, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %61 = fadd <4 x float> %56, %60
  %62 = bitcast float* %53 to <4 x float>*
  store <4 x float> %61, <4 x float>* %62, align 4, !alias.scope !2, !noalias !5
  %63 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 8
  %64 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 8
  %65 = bitcast float* %63 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 4, !alias.scope !2, !noalias !5
  %67 = bitcast float* %64 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 4, !alias.scope !5
  %69 = fsub <4 x float> %68, %66
  %70 = fmul <4 x float> %69, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %71 = fadd <4 x float> %66, %70
  %72 = bitcast float* %63 to <4 x float>*
  store <4 x float> %71, <4 x float>* %72, align 4, !alias.scope !2, !noalias !5
  %73 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 12
  %74 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 12
  %75 = bitcast float* %73 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 4, !alias.scope !2, !noalias !5
  %77 = bitcast float* %74 to <4 x float>*
  %78 = load <4 x float>, <4 x float>* %77, align 4, !alias.scope !5
  %79 = fsub <4 x float> %78, %76
  %80 = fmul <4 x float> %79, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %81 = fadd <4 x float> %76, %80
  %82 = bitcast float* %73 to <4 x float>*
  store <4 x float> %81, <4 x float>* %82, align 4, !alias.scope !2, !noalias !5
  %83 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 16
  %84 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 16
  %85 = bitcast float* %83 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 4, !alias.scope !2, !noalias !5
  %87 = bitcast float* %84 to <4 x float>*
  %88 = load <4 x float>, <4 x float>* %87, align 4, !alias.scope !5
  %89 = fsub <4 x float> %88, %86
  %90 = fmul <4 x float> %89, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %91 = fadd <4 x float> %86, %90
  %92 = bitcast float* %83 to <4 x float>*
  store <4 x float> %91, <4 x float>* %92, align 4, !alias.scope !2, !noalias !5
  %93 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 20
  %94 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 20
  %95 = bitcast float* %93 to <4 x float>*
  %96 = load <4 x float>, <4 x float>* %95, align 4, !alias.scope !2, !noalias !5
  %97 = bitcast float* %94 to <4 x float>*
  %98 = load <4 x float>, <4 x float>* %97, align 4, !alias.scope !5
  %99 = fsub <4 x float> %98, %96
  %100 = fmul <4 x float> %99, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %101 = fadd <4 x float> %96, %100
  %102 = bitcast float* %93 to <4 x float>*
  store <4 x float> %101, <4 x float>* %102, align 4, !alias.scope !2, !noalias !5
  %103 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 24
  %104 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 24
  %105 = bitcast float* %103 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 4, !alias.scope !2, !noalias !5
  %107 = bitcast float* %104 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 4, !alias.scope !5
  %109 = fsub <4 x float> %108, %106
  %110 = fmul <4 x float> %109, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %111 = fadd <4 x float> %106, %110
  %112 = bitcast float* %103 to <4 x float>*
  store <4 x float> %111, <4 x float>* %112, align 4, !alias.scope !2, !noalias !5
  %113 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 28
  %114 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 28
  %115 = bitcast float* %113 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 4, !alias.scope !2, !noalias !5
  %117 = bitcast float* %114 to <4 x float>*
  %118 = load <4 x float>, <4 x float>* %117, align 4, !alias.scope !5
  %119 = fsub <4 x float> %118, %116
  %120 = fmul <4 x float> %119, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %121 = fadd <4 x float> %116, %120
  %122 = bitcast float* %113 to <4 x float>*
  store <4 x float> %121, <4 x float>* %122, align 4, !alias.scope !2, !noalias !5
  %123 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 32
  %124 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 32
  %125 = bitcast float* %123 to <4 x float>*
  %126 = load <4 x float>, <4 x float>* %125, align 4, !alias.scope !2, !noalias !5
  %127 = bitcast float* %124 to <4 x float>*
  %128 = load <4 x float>, <4 x float>* %127, align 4, !alias.scope !5
  %129 = fsub <4 x float> %128, %126
  %130 = fmul <4 x float> %129, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %131 = fadd <4 x float> %126, %130
  %132 = bitcast float* %123 to <4 x float>*
  store <4 x float> %131, <4 x float>* %132, align 4, !alias.scope !2, !noalias !5
  %133 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 36
  %134 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 36
  %135 = bitcast float* %133 to <4 x float>*
  %136 = load <4 x float>, <4 x float>* %135, align 4, !alias.scope !2, !noalias !5
  %137 = bitcast float* %134 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 4, !alias.scope !5
  %139 = fsub <4 x float> %138, %136
  %140 = fmul <4 x float> %139, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %141 = fadd <4 x float> %136, %140
  %142 = bitcast float* %133 to <4 x float>*
  store <4 x float> %141, <4 x float>* %142, align 4, !alias.scope !2, !noalias !5
  %143 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 40
  %144 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 40
  %145 = bitcast float* %143 to <4 x float>*
  %146 = load <4 x float>, <4 x float>* %145, align 4, !alias.scope !2, !noalias !5
  %147 = bitcast float* %144 to <4 x float>*
  %148 = load <4 x float>, <4 x float>* %147, align 4, !alias.scope !5
  %149 = fsub <4 x float> %148, %146
  %150 = fmul <4 x float> %149, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %151 = fadd <4 x float> %146, %150
  %152 = bitcast float* %143 to <4 x float>*
  store <4 x float> %151, <4 x float>* %152, align 4, !alias.scope !2, !noalias !5
  %153 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 44
  %154 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 44
  %155 = bitcast float* %153 to <4 x float>*
  %156 = load <4 x float>, <4 x float>* %155, align 4, !alias.scope !2, !noalias !5
  %157 = bitcast float* %154 to <4 x float>*
  %158 = load <4 x float>, <4 x float>* %157, align 4, !alias.scope !5
  %159 = fsub <4 x float> %158, %156
  %160 = fmul <4 x float> %159, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %161 = fadd <4 x float> %156, %160
  %162 = bitcast float* %153 to <4 x float>*
  store <4 x float> %161, <4 x float>* %162, align 4, !alias.scope !2, !noalias !5
  %163 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 48
  %164 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 48
  %165 = bitcast float* %163 to <4 x float>*
  %166 = load <4 x float>, <4 x float>* %165, align 4, !alias.scope !2, !noalias !5
  %167 = bitcast float* %164 to <4 x float>*
  %168 = load <4 x float>, <4 x float>* %167, align 4, !alias.scope !5
  %169 = fsub <4 x float> %168, %166
  %170 = fmul <4 x float> %169, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %171 = fadd <4 x float> %166, %170
  %172 = bitcast float* %163 to <4 x float>*
  store <4 x float> %171, <4 x float>* %172, align 4, !alias.scope !2, !noalias !5
  %173 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 52
  %174 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 52
  %175 = bitcast float* %173 to <4 x float>*
  %176 = load <4 x float>, <4 x float>* %175, align 4, !alias.scope !2, !noalias !5
  %177 = bitcast float* %174 to <4 x float>*
  %178 = load <4 x float>, <4 x float>* %177, align 4, !alias.scope !5
  %179 = fsub <4 x float> %178, %176
  %180 = fmul <4 x float> %179, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %181 = fadd <4 x float> %176, %180
  %182 = bitcast float* %173 to <4 x float>*
  store <4 x float> %181, <4 x float>* %182, align 4, !alias.scope !2, !noalias !5
  %183 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 56
  %184 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 56
  %185 = bitcast float* %183 to <4 x float>*
  %186 = load <4 x float>, <4 x float>* %185, align 4, !alias.scope !2, !noalias !5
  %187 = bitcast float* %184 to <4 x float>*
  %188 = load <4 x float>, <4 x float>* %187, align 4, !alias.scope !5
  %189 = fsub <4 x float> %188, %186
  %190 = fmul <4 x float> %189, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %191 = fadd <4 x float> %186, %190
  %192 = bitcast float* %183 to <4 x float>*
  store <4 x float> %191, <4 x float>* %192, align 4, !alias.scope !2, !noalias !5
  %193 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 60
  %194 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %27, i32 0, i64 60
  %195 = bitcast float* %193 to <4 x float>*
  %196 = load <4 x float>, <4 x float>* %195, align 4, !alias.scope !2, !noalias !5
  %197 = bitcast float* %194 to <4 x float>*
  %198 = load <4 x float>, <4 x float>* %197, align 4, !alias.scope !5
  %199 = fsub <4 x float> %198, %196
  %200 = fmul <4 x float> %199, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %201 = fadd <4 x float> %196, %200
  %202 = bitcast float* %193 to <4 x float>*
  store <4 x float> %201, <4 x float>* %202, align 4, !alias.scope !2, !noalias !5
  br label %203

203:                                              ; preds = %40, %26
  %204 = phi float* [ %30, %26 ], [ %42, %40 ]
  %205 = phi float* [ %32, %26 ], [ %41, %40 ]
  %206 = ptrtoint float* %204 to i64
  %207 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %29, i64 %27, i32 0, i64 64
  %208 = ptrtoint float* %207 to i64
  %209 = sub i64 %208, %206
  %210 = lshr i64 %209, 2
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 3
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %227, label %214

214:                                              ; preds = %203, %214
  %215 = phi float* [ %223, %214 ], [ %204, %203 ]
  %216 = phi float* [ %224, %214 ], [ %205, %203 ]
  %217 = phi i64 [ %225, %214 ], [ %212, %203 ]
  %218 = load float, float* %215, align 4
  %219 = load float, float* %216, align 4
  %220 = fsub float %219, %218
  %221 = fmul float %220, 0x3FB99999A0000000
  %222 = fadd float %218, %221
  store float %222, float* %215, align 4
  %223 = getelementptr inbounds float, float* %215, i64 1
  %224 = getelementptr inbounds float, float* %216, i64 1
  %225 = add i64 %217, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %214, !llvm.loop !7

227:                                              ; preds = %214, %203
  %228 = phi float* [ %204, %203 ], [ %223, %214 ]
  %229 = phi float* [ %205, %203 ], [ %224, %214 ]
  %230 = icmp ult i64 %209, 12
  br i1 %230, label %263, label %231

231:                                              ; preds = %227, %231
  %232 = phi float* [ %260, %231 ], [ %228, %227 ]
  %233 = phi float* [ %261, %231 ], [ %229, %227 ]
  %234 = load float, float* %232, align 4
  %235 = load float, float* %233, align 4
  %236 = fsub float %235, %234
  %237 = fmul float %236, 0x3FB99999A0000000
  %238 = fadd float %234, %237
  store float %238, float* %232, align 4
  %239 = getelementptr inbounds float, float* %232, i64 1
  %240 = getelementptr inbounds float, float* %233, i64 1
  %241 = load float, float* %239, align 4
  %242 = load float, float* %240, align 4
  %243 = fsub float %242, %241
  %244 = fmul float %243, 0x3FB99999A0000000
  %245 = fadd float %241, %244
  store float %245, float* %239, align 4
  %246 = getelementptr inbounds float, float* %232, i64 2
  %247 = getelementptr inbounds float, float* %233, i64 2
  %248 = load float, float* %246, align 4
  %249 = load float, float* %247, align 4
  %250 = fsub float %249, %248
  %251 = fmul float %250, 0x3FB99999A0000000
  %252 = fadd float %248, %251
  store float %252, float* %246, align 4
  %253 = getelementptr inbounds float, float* %232, i64 3
  %254 = getelementptr inbounds float, float* %233, i64 3
  %255 = load float, float* %253, align 4
  %256 = load float, float* %254, align 4
  %257 = fsub float %256, %255
  %258 = fmul float %257, 0x3FB99999A0000000
  %259 = fadd float %255, %258
  store float %259, float* %253, align 4
  %260 = getelementptr inbounds float, float* %232, i64 4
  %261 = getelementptr inbounds float, float* %233, i64 4
  %262 = icmp eq float* %260, %31
  br i1 %262, label %263, label %231, !llvm.loop !9

263:                                              ; preds = %231, %227
  %264 = add nuw i64 %27, 1
  %265 = load i64, i64* %10, align 8
  %266 = icmp ult i64 %264, %265
  br i1 %266, label %26, label %16

267:                                              ; preds = %23, %360
  %268 = phi i64 [ 0, %23 ], [ %361, %360 ]
  %269 = add i64 %268, 1
  %270 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %24, align 8
  %271 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %268, i32 0, i64 0
  %272 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %268, i32 0, i64 65
  %273 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %25, align 8
  %274 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %273, i64 %268, i32 0, i64 0
  %275 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %268
  %276 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %269
  %277 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %273, i64 %268
  %278 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %273, i64 %269
  %279 = icmp ult %"struct.std::__1::array"* %275, %278
  %280 = icmp ult %"struct.std::__1::array"* %277, %276
  %281 = and i1 %279, %280
  br i1 %281, label %316, label %282

282:                                              ; preds = %267
  %283 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %268, i32 0, i64 64
  %284 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %273, i64 %268, i32 0, i64 64
  br label %285

285:                                              ; preds = %285, %282
  %286 = phi i64 [ 0, %282 ], [ %314, %285 ]
  %287 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %268, i32 0, i64 %286
  %288 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %273, i64 %268, i32 0, i64 %286
  %289 = bitcast float* %287 to <4 x float>*
  %290 = load <4 x float>, <4 x float>* %289, align 4, !alias.scope !11, !noalias !14
  %291 = bitcast float* %288 to <4 x float>*
  %292 = load <4 x float>, <4 x float>* %291, align 4, !alias.scope !14
  %293 = fcmp uge <4 x float> %292, %290
  %294 = fmul <4 x float> %292, <float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000>
  %295 = fmul <4 x float> %290, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %296 = fadd <4 x float> %295, %294
  %297 = select <4 x i1> %293, <4 x float> %290, <4 x float> %296
  %298 = fmul <4 x float> %297, <float 0x3FF000D1C0000000, float 0x3FF000D1C0000000, float 0x3FF000D1C0000000, float 0x3FF000D1C0000000>
  %299 = bitcast float* %287 to <4 x float>*
  store <4 x float> %298, <4 x float>* %299, align 4, !alias.scope !11, !noalias !14
  %300 = or i64 %286, 4
  %301 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %268, i32 0, i64 %300
  %302 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %273, i64 %268, i32 0, i64 %300
  %303 = bitcast float* %301 to <4 x float>*
  %304 = load <4 x float>, <4 x float>* %303, align 4, !alias.scope !11, !noalias !14
  %305 = bitcast float* %302 to <4 x float>*
  %306 = load <4 x float>, <4 x float>* %305, align 4, !alias.scope !14
  %307 = fcmp uge <4 x float> %306, %304
  %308 = fmul <4 x float> %306, <float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000>
  %309 = fmul <4 x float> %304, <float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %310 = fadd <4 x float> %309, %308
  %311 = select <4 x i1> %307, <4 x float> %304, <4 x float> %310
  %312 = fmul <4 x float> %311, <float 0x3FF000D1C0000000, float 0x3FF000D1C0000000, float 0x3FF000D1C0000000, float 0x3FF000D1C0000000>
  %313 = bitcast float* %301 to <4 x float>*
  store <4 x float> %312, <4 x float>* %313, align 4, !alias.scope !11, !noalias !14
  %314 = add nuw nsw i64 %286, 8
  %315 = icmp eq i64 %314, 64
  br i1 %315, label %316, label %285, !llvm.loop !16

316:                                              ; preds = %285, %267
  %317 = phi float* [ %271, %267 ], [ %283, %285 ]
  %318 = phi float* [ %274, %267 ], [ %284, %285 ]
  %319 = ptrtoint float* %317 to i64
  %320 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %270, i64 %268, i32 0, i64 64
  %321 = ptrtoint float* %320 to i64
  %322 = sub i64 %321, %319
  %323 = and i64 %322, 4
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %338

325:                                              ; preds = %316
  %326 = load float, float* %317, align 4
  %327 = load float, float* %318, align 4
  %328 = fcmp olt float %327, %326
  br i1 %328, label %329, label %333

329:                                              ; preds = %325
  %330 = fmul float %327, 0x3FECCCCCC0000000
  %331 = fmul float %326, 0x3FB99999A0000000
  %332 = fadd float %331, %330
  br label %333

333:                                              ; preds = %329, %325
  %334 = phi float [ %332, %329 ], [ %326, %325 ]
  %335 = fmul float %334, 0x3FF000D1C0000000
  store float %335, float* %317, align 4
  %336 = getelementptr inbounds float, float* %317, i64 1
  %337 = getelementptr inbounds float, float* %318, i64 1
  br label %338

338:                                              ; preds = %333, %316
  %339 = phi float* [ %336, %333 ], [ %317, %316 ]
  %340 = phi float* [ %337, %333 ], [ %318, %316 ]
  %341 = icmp ult i64 %322, 4
  br i1 %341, label %360, label %342

342:                                              ; preds = %338, %1166
  %343 = phi float* [ %1169, %1166 ], [ %339, %338 ]
  %344 = phi float* [ %1170, %1166 ], [ %340, %338 ]
  %345 = load float, float* %343, align 4
  %346 = load float, float* %344, align 4
  %347 = fcmp olt float %346, %345
  br i1 %347, label %348, label %352

348:                                              ; preds = %342
  %349 = fmul float %346, 0x3FECCCCCC0000000
  %350 = fmul float %345, 0x3FB99999A0000000
  %351 = fadd float %350, %349
  br label %352

352:                                              ; preds = %348, %342
  %353 = phi float [ %351, %348 ], [ %345, %342 ]
  %354 = fmul float %353, 0x3FF000D1C0000000
  store float %354, float* %343, align 4
  %355 = getelementptr inbounds float, float* %343, i64 1
  %356 = getelementptr inbounds float, float* %344, i64 1
  %357 = load float, float* %355, align 4
  %358 = load float, float* %356, align 4
  %359 = fcmp olt float %358, %357
  br i1 %359, label %1162, label %1166

360:                                              ; preds = %1166, %338
  %361 = add nuw i64 %268, 1
  %362 = load i64, i64* %10, align 8
  %363 = icmp ult i64 %361, %362
  br i1 %363, label %267, label %364

364:                                              ; preds = %360, %21, %16
  %365 = phi i64 [ 0, %21 ], [ %17, %16 ], [ %362, %360 ]
  %366 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %367 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %366, align 8
  %368 = icmp eq %"class.std::__1::vector"* %367, null
  br i1 %368, label %486, label %369

369:                                              ; preds = %364
  %370 = load i32, i32* %18, align 8
  %371 = add nsw i32 %370, 1
  store i32 %371, i32* %18, align 8
  %372 = icmp eq i32 %371, 1000
  br i1 %372, label %377, label %373

373:                                              ; preds = %369
  %374 = icmp eq i64 %365, 0
  br i1 %374, label %988, label %375

375:                                              ; preds = %373
  %376 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  br label %389

377:                                              ; preds = %369
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %366, align 8
  %378 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %367, i64 0, i32 0, i32 0
  %379 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %378, align 8
  %380 = icmp eq %"struct.std::__1::array"* %379, null
  br i1 %380, label %386, label %381

381:                                              ; preds = %377
  %382 = ptrtoint %"struct.std::__1::array"* %379 to i64
  %383 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %367, i64 0, i32 0, i32 1
  %384 = bitcast %"struct.std::__1::array"** %383 to i64*
  store i64 %382, i64* %384, align 8
  %385 = bitcast %"struct.std::__1::array"* %379 to i8*
  tail call void @_ZdlPv(i8* %385) #10
  br label %386

386:                                              ; preds = %377, %381
  %387 = bitcast %"class.std::__1::vector"* %367 to i8*
  tail call void @_ZdlPv(i8* %387) #10
  %388 = load i64, i64* %10, align 8
  br label %486

389:                                              ; preds = %484, %375
  %390 = phi %"class.std::__1::vector"* [ %367, %375 ], [ %485, %484 ]
  %391 = phi i64 [ 0, %375 ], [ %481, %484 ]
  %392 = add i64 %391, 1
  %393 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %376, align 8
  %394 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %391, i32 0, i64 0
  %395 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %391, i32 0, i64 65
  %396 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %390, i64 0, i32 0, i32 0
  %397 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %396, align 8
  %398 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %397, i64 %391, i32 0, i64 0
  %399 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %397, i64 %391
  %400 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %397, i64 %392
  %401 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %391
  %402 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %392
  %403 = icmp ult %"struct.std::__1::array"* %399, %402
  %404 = icmp ult %"struct.std::__1::array"* %401, %400
  %405 = and i1 %403, %404
  br i1 %405, label %438, label %406

406:                                              ; preds = %389
  %407 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %397, i64 %391, i32 0, i64 64
  %408 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %391, i32 0, i64 64
  br label %409

409:                                              ; preds = %409, %406
  %410 = phi i64 [ 0, %406 ], [ %436, %409 ]
  %411 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %397, i64 %391, i32 0, i64 %410
  %412 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %391, i32 0, i64 %410
  %413 = bitcast float* %412 to <4 x float>*
  %414 = load <4 x float>, <4 x float>* %413, align 4, !alias.scope !17
  %415 = bitcast float* %411 to <4 x float>*
  %416 = load <4 x float>, <4 x float>* %415, align 4, !alias.scope !20, !noalias !17
  %417 = fcmp ule <4 x float> %414, %416
  %418 = fsub <4 x float> %414, %416
  %419 = fmul <4 x float> %418, <float 0x3F50624DE0000000, float 0x3F50624DE0000000, float 0x3F50624DE0000000, float 0x3F50624DE0000000>
  %420 = fadd <4 x float> %416, %419
  %421 = select <4 x i1> %417, <4 x float> %414, <4 x float> %420
  %422 = bitcast float* %411 to <4 x float>*
  store <4 x float> %421, <4 x float>* %422, align 4, !alias.scope !20, !noalias !17
  %423 = or i64 %410, 4
  %424 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %397, i64 %391, i32 0, i64 %423
  %425 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %391, i32 0, i64 %423
  %426 = bitcast float* %425 to <4 x float>*
  %427 = load <4 x float>, <4 x float>* %426, align 4, !alias.scope !17
  %428 = bitcast float* %424 to <4 x float>*
  %429 = load <4 x float>, <4 x float>* %428, align 4, !alias.scope !20, !noalias !17
  %430 = fcmp ule <4 x float> %427, %429
  %431 = fsub <4 x float> %427, %429
  %432 = fmul <4 x float> %431, <float 0x3F50624DE0000000, float 0x3F50624DE0000000, float 0x3F50624DE0000000, float 0x3F50624DE0000000>
  %433 = fadd <4 x float> %429, %432
  %434 = select <4 x i1> %430, <4 x float> %427, <4 x float> %433
  %435 = bitcast float* %424 to <4 x float>*
  store <4 x float> %434, <4 x float>* %435, align 4, !alias.scope !20, !noalias !17
  %436 = add nuw nsw i64 %410, 8
  %437 = icmp eq i64 %436, 64
  br i1 %437, label %438, label %409, !llvm.loop !22

438:                                              ; preds = %409, %389
  %439 = phi float* [ %398, %389 ], [ %407, %409 ]
  %440 = phi float* [ %394, %389 ], [ %408, %409 ]
  %441 = ptrtoint float* %440 to i64
  %442 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %393, i64 %391, i32 0, i64 64
  %443 = ptrtoint float* %442 to i64
  %444 = sub i64 %443, %441
  %445 = and i64 %444, 4
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %459

447:                                              ; preds = %438
  %448 = load float, float* %440, align 4
  %449 = load float, float* %439, align 4
  %450 = fcmp ogt float %448, %449
  br i1 %450, label %451, label %455

451:                                              ; preds = %447
  %452 = fsub float %448, %449
  %453 = fmul float %452, 0x3F50624DE0000000
  %454 = fadd float %449, %453
  br label %455

455:                                              ; preds = %451, %447
  %456 = phi float [ %454, %451 ], [ %448, %447 ]
  store float %456, float* %439, align 4
  %457 = getelementptr inbounds float, float* %440, i64 1
  %458 = getelementptr inbounds float, float* %439, i64 1
  br label %459

459:                                              ; preds = %455, %438
  %460 = phi float* [ %458, %455 ], [ %439, %438 ]
  %461 = phi float* [ %457, %455 ], [ %440, %438 ]
  %462 = icmp ult i64 %444, 4
  br i1 %462, label %480, label %463

463:                                              ; preds = %459, %1157
  %464 = phi float* [ %1160, %1157 ], [ %460, %459 ]
  %465 = phi float* [ %1159, %1157 ], [ %461, %459 ]
  %466 = load float, float* %465, align 4
  %467 = load float, float* %464, align 4
  %468 = fcmp ogt float %466, %467
  br i1 %468, label %469, label %473

469:                                              ; preds = %463
  %470 = fsub float %466, %467
  %471 = fmul float %470, 0x3F50624DE0000000
  %472 = fadd float %467, %471
  br label %473

473:                                              ; preds = %469, %463
  %474 = phi float [ %472, %469 ], [ %466, %463 ]
  store float %474, float* %464, align 4
  %475 = getelementptr inbounds float, float* %465, i64 1
  %476 = getelementptr inbounds float, float* %464, i64 1
  %477 = load float, float* %475, align 4
  %478 = load float, float* %476, align 4
  %479 = fcmp ogt float %477, %478
  br i1 %479, label %1153, label %1157

480:                                              ; preds = %1157, %459
  %481 = add nuw i64 %391, 1
  %482 = load i64, i64* %10, align 8
  %483 = icmp ult i64 %481, %482
  br i1 %483, label %484, label %486

484:                                              ; preds = %480
  %485 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %366, align 8
  br label %389

486:                                              ; preds = %480, %364, %386
  %487 = phi i64 [ %365, %364 ], [ %388, %386 ], [ %482, %480 ]
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %988, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %491 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 3
  %492 = getelementptr %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 3
  %493 = bitcast float* %492 to i8*
  %494 = getelementptr i8, i8* %493, i64 1
  %495 = getelementptr %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 3
  %496 = bitcast float* %495 to i8*
  %497 = getelementptr i8, i8* %496, i64 1
  br label %498

498:                                              ; preds = %909, %489
  %499 = phi i64 [ 0, %489 ], [ %910, %909 ]
  %500 = add i64 %499, 1
  %501 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %490, align 8
  %502 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 65
  %503 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 0
  %504 = add i64 %499, 1
  %505 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499
  %506 = bitcast %"struct.std::__1::array"* %505 to i8*
  %507 = icmp ugt i8* %497, %506
  %508 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %504, i32 0, i64 0
  %509 = icmp ult float* %491, %508
  %510 = and i1 %507, %509
  br i1 %510, label %511, label %534

511:                                              ; preds = %534, %498
  %512 = phi float* [ %503, %498 ], [ %535, %534 ]
  %513 = ptrtoint float* %512 to i64
  %514 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 64
  %515 = ptrtoint float* %514 to i64
  %516 = sub i64 %515, %513
  %517 = lshr i64 %516, 2
  %518 = add nuw nsw i64 %517, 1
  %519 = and i64 %518, 3
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %531, label %521

521:                                              ; preds = %511, %521
  %522 = phi float* [ %528, %521 ], [ %512, %511 ]
  %523 = phi i64 [ %529, %521 ], [ %519, %511 ]
  %524 = load float, float* %522, align 4
  %525 = load float, float* %491, align 4
  %526 = fcmp olt float %524, %525
  %527 = select i1 %526, float %525, float %524
  store float %527, float* %522, align 4
  %528 = getelementptr inbounds float, float* %522, i64 1
  %529 = add i64 %523, -1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %531, label %521, !llvm.loop !23

531:                                              ; preds = %521, %511
  %532 = phi float* [ %512, %511 ], [ %528, %521 ]
  %533 = icmp ult i64 %516, 12
  br i1 %533, label %680, label %683

534:                                              ; preds = %498
  %535 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 64
  %536 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 0
  %537 = bitcast float* %536 to <4 x float>*
  %538 = load <4 x float>, <4 x float>* %537, align 4, !alias.scope !24, !noalias !27
  %539 = load float, float* %491, align 4, !alias.scope !27
  %540 = insertelement <4 x float> undef, float %539, i32 0
  %541 = shufflevector <4 x float> %540, <4 x float> undef, <4 x i32> zeroinitializer
  %542 = fcmp olt <4 x float> %538, %541
  %543 = select <4 x i1> %542, <4 x float> %541, <4 x float> %538
  %544 = bitcast float* %536 to <4 x float>*
  store <4 x float> %543, <4 x float>* %544, align 4, !alias.scope !24, !noalias !27
  %545 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 4
  %546 = bitcast float* %545 to <4 x float>*
  %547 = load <4 x float>, <4 x float>* %546, align 4, !alias.scope !24, !noalias !27
  %548 = load float, float* %491, align 4, !alias.scope !27
  %549 = insertelement <4 x float> undef, float %548, i32 0
  %550 = shufflevector <4 x float> %549, <4 x float> undef, <4 x i32> zeroinitializer
  %551 = fcmp olt <4 x float> %547, %550
  %552 = select <4 x i1> %551, <4 x float> %550, <4 x float> %547
  %553 = bitcast float* %545 to <4 x float>*
  store <4 x float> %552, <4 x float>* %553, align 4, !alias.scope !24, !noalias !27
  %554 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 8
  %555 = bitcast float* %554 to <4 x float>*
  %556 = load <4 x float>, <4 x float>* %555, align 4, !alias.scope !24, !noalias !27
  %557 = load float, float* %491, align 4, !alias.scope !27
  %558 = insertelement <4 x float> undef, float %557, i32 0
  %559 = shufflevector <4 x float> %558, <4 x float> undef, <4 x i32> zeroinitializer
  %560 = fcmp olt <4 x float> %556, %559
  %561 = select <4 x i1> %560, <4 x float> %559, <4 x float> %556
  %562 = bitcast float* %554 to <4 x float>*
  store <4 x float> %561, <4 x float>* %562, align 4, !alias.scope !24, !noalias !27
  %563 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 12
  %564 = bitcast float* %563 to <4 x float>*
  %565 = load <4 x float>, <4 x float>* %564, align 4, !alias.scope !24, !noalias !27
  %566 = load float, float* %491, align 4, !alias.scope !27
  %567 = insertelement <4 x float> undef, float %566, i32 0
  %568 = shufflevector <4 x float> %567, <4 x float> undef, <4 x i32> zeroinitializer
  %569 = fcmp olt <4 x float> %565, %568
  %570 = select <4 x i1> %569, <4 x float> %568, <4 x float> %565
  %571 = bitcast float* %563 to <4 x float>*
  store <4 x float> %570, <4 x float>* %571, align 4, !alias.scope !24, !noalias !27
  %572 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 16
  %573 = bitcast float* %572 to <4 x float>*
  %574 = load <4 x float>, <4 x float>* %573, align 4, !alias.scope !24, !noalias !27
  %575 = load float, float* %491, align 4, !alias.scope !27
  %576 = insertelement <4 x float> undef, float %575, i32 0
  %577 = shufflevector <4 x float> %576, <4 x float> undef, <4 x i32> zeroinitializer
  %578 = fcmp olt <4 x float> %574, %577
  %579 = select <4 x i1> %578, <4 x float> %577, <4 x float> %574
  %580 = bitcast float* %572 to <4 x float>*
  store <4 x float> %579, <4 x float>* %580, align 4, !alias.scope !24, !noalias !27
  %581 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 20
  %582 = bitcast float* %581 to <4 x float>*
  %583 = load <4 x float>, <4 x float>* %582, align 4, !alias.scope !24, !noalias !27
  %584 = load float, float* %491, align 4, !alias.scope !27
  %585 = insertelement <4 x float> undef, float %584, i32 0
  %586 = shufflevector <4 x float> %585, <4 x float> undef, <4 x i32> zeroinitializer
  %587 = fcmp olt <4 x float> %583, %586
  %588 = select <4 x i1> %587, <4 x float> %586, <4 x float> %583
  %589 = bitcast float* %581 to <4 x float>*
  store <4 x float> %588, <4 x float>* %589, align 4, !alias.scope !24, !noalias !27
  %590 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 24
  %591 = bitcast float* %590 to <4 x float>*
  %592 = load <4 x float>, <4 x float>* %591, align 4, !alias.scope !24, !noalias !27
  %593 = load float, float* %491, align 4, !alias.scope !27
  %594 = insertelement <4 x float> undef, float %593, i32 0
  %595 = shufflevector <4 x float> %594, <4 x float> undef, <4 x i32> zeroinitializer
  %596 = fcmp olt <4 x float> %592, %595
  %597 = select <4 x i1> %596, <4 x float> %595, <4 x float> %592
  %598 = bitcast float* %590 to <4 x float>*
  store <4 x float> %597, <4 x float>* %598, align 4, !alias.scope !24, !noalias !27
  %599 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 28
  %600 = bitcast float* %599 to <4 x float>*
  %601 = load <4 x float>, <4 x float>* %600, align 4, !alias.scope !24, !noalias !27
  %602 = load float, float* %491, align 4, !alias.scope !27
  %603 = insertelement <4 x float> undef, float %602, i32 0
  %604 = shufflevector <4 x float> %603, <4 x float> undef, <4 x i32> zeroinitializer
  %605 = fcmp olt <4 x float> %601, %604
  %606 = select <4 x i1> %605, <4 x float> %604, <4 x float> %601
  %607 = bitcast float* %599 to <4 x float>*
  store <4 x float> %606, <4 x float>* %607, align 4, !alias.scope !24, !noalias !27
  %608 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 32
  %609 = bitcast float* %608 to <4 x float>*
  %610 = load <4 x float>, <4 x float>* %609, align 4, !alias.scope !24, !noalias !27
  %611 = load float, float* %491, align 4, !alias.scope !27
  %612 = insertelement <4 x float> undef, float %611, i32 0
  %613 = shufflevector <4 x float> %612, <4 x float> undef, <4 x i32> zeroinitializer
  %614 = fcmp olt <4 x float> %610, %613
  %615 = select <4 x i1> %614, <4 x float> %613, <4 x float> %610
  %616 = bitcast float* %608 to <4 x float>*
  store <4 x float> %615, <4 x float>* %616, align 4, !alias.scope !24, !noalias !27
  %617 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 36
  %618 = bitcast float* %617 to <4 x float>*
  %619 = load <4 x float>, <4 x float>* %618, align 4, !alias.scope !24, !noalias !27
  %620 = load float, float* %491, align 4, !alias.scope !27
  %621 = insertelement <4 x float> undef, float %620, i32 0
  %622 = shufflevector <4 x float> %621, <4 x float> undef, <4 x i32> zeroinitializer
  %623 = fcmp olt <4 x float> %619, %622
  %624 = select <4 x i1> %623, <4 x float> %622, <4 x float> %619
  %625 = bitcast float* %617 to <4 x float>*
  store <4 x float> %624, <4 x float>* %625, align 4, !alias.scope !24, !noalias !27
  %626 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 40
  %627 = bitcast float* %626 to <4 x float>*
  %628 = load <4 x float>, <4 x float>* %627, align 4, !alias.scope !24, !noalias !27
  %629 = load float, float* %491, align 4, !alias.scope !27
  %630 = insertelement <4 x float> undef, float %629, i32 0
  %631 = shufflevector <4 x float> %630, <4 x float> undef, <4 x i32> zeroinitializer
  %632 = fcmp olt <4 x float> %628, %631
  %633 = select <4 x i1> %632, <4 x float> %631, <4 x float> %628
  %634 = bitcast float* %626 to <4 x float>*
  store <4 x float> %633, <4 x float>* %634, align 4, !alias.scope !24, !noalias !27
  %635 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 44
  %636 = bitcast float* %635 to <4 x float>*
  %637 = load <4 x float>, <4 x float>* %636, align 4, !alias.scope !24, !noalias !27
  %638 = load float, float* %491, align 4, !alias.scope !27
  %639 = insertelement <4 x float> undef, float %638, i32 0
  %640 = shufflevector <4 x float> %639, <4 x float> undef, <4 x i32> zeroinitializer
  %641 = fcmp olt <4 x float> %637, %640
  %642 = select <4 x i1> %641, <4 x float> %640, <4 x float> %637
  %643 = bitcast float* %635 to <4 x float>*
  store <4 x float> %642, <4 x float>* %643, align 4, !alias.scope !24, !noalias !27
  %644 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 48
  %645 = bitcast float* %644 to <4 x float>*
  %646 = load <4 x float>, <4 x float>* %645, align 4, !alias.scope !24, !noalias !27
  %647 = load float, float* %491, align 4, !alias.scope !27
  %648 = insertelement <4 x float> undef, float %647, i32 0
  %649 = shufflevector <4 x float> %648, <4 x float> undef, <4 x i32> zeroinitializer
  %650 = fcmp olt <4 x float> %646, %649
  %651 = select <4 x i1> %650, <4 x float> %649, <4 x float> %646
  %652 = bitcast float* %644 to <4 x float>*
  store <4 x float> %651, <4 x float>* %652, align 4, !alias.scope !24, !noalias !27
  %653 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 52
  %654 = bitcast float* %653 to <4 x float>*
  %655 = load <4 x float>, <4 x float>* %654, align 4, !alias.scope !24, !noalias !27
  %656 = load float, float* %491, align 4, !alias.scope !27
  %657 = insertelement <4 x float> undef, float %656, i32 0
  %658 = shufflevector <4 x float> %657, <4 x float> undef, <4 x i32> zeroinitializer
  %659 = fcmp olt <4 x float> %655, %658
  %660 = select <4 x i1> %659, <4 x float> %658, <4 x float> %655
  %661 = bitcast float* %653 to <4 x float>*
  store <4 x float> %660, <4 x float>* %661, align 4, !alias.scope !24, !noalias !27
  %662 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 56
  %663 = bitcast float* %662 to <4 x float>*
  %664 = load <4 x float>, <4 x float>* %663, align 4, !alias.scope !24, !noalias !27
  %665 = load float, float* %491, align 4, !alias.scope !27
  %666 = insertelement <4 x float> undef, float %665, i32 0
  %667 = shufflevector <4 x float> %666, <4 x float> undef, <4 x i32> zeroinitializer
  %668 = fcmp olt <4 x float> %664, %667
  %669 = select <4 x i1> %668, <4 x float> %667, <4 x float> %664
  %670 = bitcast float* %662 to <4 x float>*
  store <4 x float> %669, <4 x float>* %670, align 4, !alias.scope !24, !noalias !27
  %671 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %501, i64 %499, i32 0, i64 60
  %672 = bitcast float* %671 to <4 x float>*
  %673 = load <4 x float>, <4 x float>* %672, align 4, !alias.scope !24, !noalias !27
  %674 = load float, float* %491, align 4, !alias.scope !27
  %675 = insertelement <4 x float> undef, float %674, i32 0
  %676 = shufflevector <4 x float> %675, <4 x float> undef, <4 x i32> zeroinitializer
  %677 = fcmp olt <4 x float> %673, %676
  %678 = select <4 x i1> %677, <4 x float> %676, <4 x float> %673
  %679 = bitcast float* %671 to <4 x float>*
  store <4 x float> %678, <4 x float>* %679, align 4, !alias.scope !24, !noalias !27
  br label %511

680:                                              ; preds = %683, %531
  %681 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %366, align 8
  %682 = icmp eq %"class.std::__1::vector"* %681, null
  br i1 %682, label %909, label %706

683:                                              ; preds = %531, %683
  %684 = phi float* [ %704, %683 ], [ %532, %531 ]
  %685 = load float, float* %684, align 4
  %686 = load float, float* %491, align 4
  %687 = fcmp olt float %685, %686
  %688 = select i1 %687, float %686, float %685
  store float %688, float* %684, align 4
  %689 = getelementptr inbounds float, float* %684, i64 1
  %690 = load float, float* %689, align 4
  %691 = load float, float* %491, align 4
  %692 = fcmp olt float %690, %691
  %693 = select i1 %692, float %691, float %690
  store float %693, float* %689, align 4
  %694 = getelementptr inbounds float, float* %684, i64 2
  %695 = load float, float* %694, align 4
  %696 = load float, float* %491, align 4
  %697 = fcmp olt float %695, %696
  %698 = select i1 %697, float %696, float %695
  store float %698, float* %694, align 4
  %699 = getelementptr inbounds float, float* %684, i64 3
  %700 = load float, float* %699, align 4
  %701 = load float, float* %491, align 4
  %702 = fcmp olt float %700, %701
  %703 = select i1 %702, float %701, float %700
  store float %703, float* %699, align 4
  %704 = getelementptr inbounds float, float* %684, i64 4
  %705 = icmp eq float* %704, %502
  br i1 %705, label %680, label %683, !llvm.loop !29

706:                                              ; preds = %680
  %707 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %681, i64 0, i32 0, i32 0
  %708 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %707, align 8
  %709 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 65
  %710 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 0
  %711 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499
  %712 = bitcast %"struct.std::__1::array"* %711 to i8*
  %713 = icmp ugt i8* %494, %712
  %714 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %500, i32 0, i64 0
  %715 = icmp ult float* %491, %714
  %716 = and i1 %713, %715
  br i1 %716, label %863, label %717

717:                                              ; preds = %706
  %718 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 64
  %719 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 0
  %720 = bitcast float* %719 to <4 x float>*
  %721 = load <4 x float>, <4 x float>* %720, align 4, !alias.scope !30, !noalias !33
  %722 = load float, float* %491, align 4, !alias.scope !33
  %723 = insertelement <4 x float> undef, float %722, i32 0
  %724 = shufflevector <4 x float> %723, <4 x float> undef, <4 x i32> zeroinitializer
  %725 = fcmp olt <4 x float> %721, %724
  %726 = select <4 x i1> %725, <4 x float> %724, <4 x float> %721
  %727 = bitcast float* %719 to <4 x float>*
  store <4 x float> %726, <4 x float>* %727, align 4, !alias.scope !30, !noalias !33
  %728 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 4
  %729 = bitcast float* %728 to <4 x float>*
  %730 = load <4 x float>, <4 x float>* %729, align 4, !alias.scope !30, !noalias !33
  %731 = load float, float* %491, align 4, !alias.scope !33
  %732 = insertelement <4 x float> undef, float %731, i32 0
  %733 = shufflevector <4 x float> %732, <4 x float> undef, <4 x i32> zeroinitializer
  %734 = fcmp olt <4 x float> %730, %733
  %735 = select <4 x i1> %734, <4 x float> %733, <4 x float> %730
  %736 = bitcast float* %728 to <4 x float>*
  store <4 x float> %735, <4 x float>* %736, align 4, !alias.scope !30, !noalias !33
  %737 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 8
  %738 = bitcast float* %737 to <4 x float>*
  %739 = load <4 x float>, <4 x float>* %738, align 4, !alias.scope !30, !noalias !33
  %740 = load float, float* %491, align 4, !alias.scope !33
  %741 = insertelement <4 x float> undef, float %740, i32 0
  %742 = shufflevector <4 x float> %741, <4 x float> undef, <4 x i32> zeroinitializer
  %743 = fcmp olt <4 x float> %739, %742
  %744 = select <4 x i1> %743, <4 x float> %742, <4 x float> %739
  %745 = bitcast float* %737 to <4 x float>*
  store <4 x float> %744, <4 x float>* %745, align 4, !alias.scope !30, !noalias !33
  %746 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 12
  %747 = bitcast float* %746 to <4 x float>*
  %748 = load <4 x float>, <4 x float>* %747, align 4, !alias.scope !30, !noalias !33
  %749 = load float, float* %491, align 4, !alias.scope !33
  %750 = insertelement <4 x float> undef, float %749, i32 0
  %751 = shufflevector <4 x float> %750, <4 x float> undef, <4 x i32> zeroinitializer
  %752 = fcmp olt <4 x float> %748, %751
  %753 = select <4 x i1> %752, <4 x float> %751, <4 x float> %748
  %754 = bitcast float* %746 to <4 x float>*
  store <4 x float> %753, <4 x float>* %754, align 4, !alias.scope !30, !noalias !33
  %755 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 16
  %756 = bitcast float* %755 to <4 x float>*
  %757 = load <4 x float>, <4 x float>* %756, align 4, !alias.scope !30, !noalias !33
  %758 = load float, float* %491, align 4, !alias.scope !33
  %759 = insertelement <4 x float> undef, float %758, i32 0
  %760 = shufflevector <4 x float> %759, <4 x float> undef, <4 x i32> zeroinitializer
  %761 = fcmp olt <4 x float> %757, %760
  %762 = select <4 x i1> %761, <4 x float> %760, <4 x float> %757
  %763 = bitcast float* %755 to <4 x float>*
  store <4 x float> %762, <4 x float>* %763, align 4, !alias.scope !30, !noalias !33
  %764 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 20
  %765 = bitcast float* %764 to <4 x float>*
  %766 = load <4 x float>, <4 x float>* %765, align 4, !alias.scope !30, !noalias !33
  %767 = load float, float* %491, align 4, !alias.scope !33
  %768 = insertelement <4 x float> undef, float %767, i32 0
  %769 = shufflevector <4 x float> %768, <4 x float> undef, <4 x i32> zeroinitializer
  %770 = fcmp olt <4 x float> %766, %769
  %771 = select <4 x i1> %770, <4 x float> %769, <4 x float> %766
  %772 = bitcast float* %764 to <4 x float>*
  store <4 x float> %771, <4 x float>* %772, align 4, !alias.scope !30, !noalias !33
  %773 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 24
  %774 = bitcast float* %773 to <4 x float>*
  %775 = load <4 x float>, <4 x float>* %774, align 4, !alias.scope !30, !noalias !33
  %776 = load float, float* %491, align 4, !alias.scope !33
  %777 = insertelement <4 x float> undef, float %776, i32 0
  %778 = shufflevector <4 x float> %777, <4 x float> undef, <4 x i32> zeroinitializer
  %779 = fcmp olt <4 x float> %775, %778
  %780 = select <4 x i1> %779, <4 x float> %778, <4 x float> %775
  %781 = bitcast float* %773 to <4 x float>*
  store <4 x float> %780, <4 x float>* %781, align 4, !alias.scope !30, !noalias !33
  %782 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 28
  %783 = bitcast float* %782 to <4 x float>*
  %784 = load <4 x float>, <4 x float>* %783, align 4, !alias.scope !30, !noalias !33
  %785 = load float, float* %491, align 4, !alias.scope !33
  %786 = insertelement <4 x float> undef, float %785, i32 0
  %787 = shufflevector <4 x float> %786, <4 x float> undef, <4 x i32> zeroinitializer
  %788 = fcmp olt <4 x float> %784, %787
  %789 = select <4 x i1> %788, <4 x float> %787, <4 x float> %784
  %790 = bitcast float* %782 to <4 x float>*
  store <4 x float> %789, <4 x float>* %790, align 4, !alias.scope !30, !noalias !33
  %791 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 32
  %792 = bitcast float* %791 to <4 x float>*
  %793 = load <4 x float>, <4 x float>* %792, align 4, !alias.scope !30, !noalias !33
  %794 = load float, float* %491, align 4, !alias.scope !33
  %795 = insertelement <4 x float> undef, float %794, i32 0
  %796 = shufflevector <4 x float> %795, <4 x float> undef, <4 x i32> zeroinitializer
  %797 = fcmp olt <4 x float> %793, %796
  %798 = select <4 x i1> %797, <4 x float> %796, <4 x float> %793
  %799 = bitcast float* %791 to <4 x float>*
  store <4 x float> %798, <4 x float>* %799, align 4, !alias.scope !30, !noalias !33
  %800 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 36
  %801 = bitcast float* %800 to <4 x float>*
  %802 = load <4 x float>, <4 x float>* %801, align 4, !alias.scope !30, !noalias !33
  %803 = load float, float* %491, align 4, !alias.scope !33
  %804 = insertelement <4 x float> undef, float %803, i32 0
  %805 = shufflevector <4 x float> %804, <4 x float> undef, <4 x i32> zeroinitializer
  %806 = fcmp olt <4 x float> %802, %805
  %807 = select <4 x i1> %806, <4 x float> %805, <4 x float> %802
  %808 = bitcast float* %800 to <4 x float>*
  store <4 x float> %807, <4 x float>* %808, align 4, !alias.scope !30, !noalias !33
  %809 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 40
  %810 = bitcast float* %809 to <4 x float>*
  %811 = load <4 x float>, <4 x float>* %810, align 4, !alias.scope !30, !noalias !33
  %812 = load float, float* %491, align 4, !alias.scope !33
  %813 = insertelement <4 x float> undef, float %812, i32 0
  %814 = shufflevector <4 x float> %813, <4 x float> undef, <4 x i32> zeroinitializer
  %815 = fcmp olt <4 x float> %811, %814
  %816 = select <4 x i1> %815, <4 x float> %814, <4 x float> %811
  %817 = bitcast float* %809 to <4 x float>*
  store <4 x float> %816, <4 x float>* %817, align 4, !alias.scope !30, !noalias !33
  %818 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 44
  %819 = bitcast float* %818 to <4 x float>*
  %820 = load <4 x float>, <4 x float>* %819, align 4, !alias.scope !30, !noalias !33
  %821 = load float, float* %491, align 4, !alias.scope !33
  %822 = insertelement <4 x float> undef, float %821, i32 0
  %823 = shufflevector <4 x float> %822, <4 x float> undef, <4 x i32> zeroinitializer
  %824 = fcmp olt <4 x float> %820, %823
  %825 = select <4 x i1> %824, <4 x float> %823, <4 x float> %820
  %826 = bitcast float* %818 to <4 x float>*
  store <4 x float> %825, <4 x float>* %826, align 4, !alias.scope !30, !noalias !33
  %827 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 48
  %828 = bitcast float* %827 to <4 x float>*
  %829 = load <4 x float>, <4 x float>* %828, align 4, !alias.scope !30, !noalias !33
  %830 = load float, float* %491, align 4, !alias.scope !33
  %831 = insertelement <4 x float> undef, float %830, i32 0
  %832 = shufflevector <4 x float> %831, <4 x float> undef, <4 x i32> zeroinitializer
  %833 = fcmp olt <4 x float> %829, %832
  %834 = select <4 x i1> %833, <4 x float> %832, <4 x float> %829
  %835 = bitcast float* %827 to <4 x float>*
  store <4 x float> %834, <4 x float>* %835, align 4, !alias.scope !30, !noalias !33
  %836 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 52
  %837 = bitcast float* %836 to <4 x float>*
  %838 = load <4 x float>, <4 x float>* %837, align 4, !alias.scope !30, !noalias !33
  %839 = load float, float* %491, align 4, !alias.scope !33
  %840 = insertelement <4 x float> undef, float %839, i32 0
  %841 = shufflevector <4 x float> %840, <4 x float> undef, <4 x i32> zeroinitializer
  %842 = fcmp olt <4 x float> %838, %841
  %843 = select <4 x i1> %842, <4 x float> %841, <4 x float> %838
  %844 = bitcast float* %836 to <4 x float>*
  store <4 x float> %843, <4 x float>* %844, align 4, !alias.scope !30, !noalias !33
  %845 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 56
  %846 = bitcast float* %845 to <4 x float>*
  %847 = load <4 x float>, <4 x float>* %846, align 4, !alias.scope !30, !noalias !33
  %848 = load float, float* %491, align 4, !alias.scope !33
  %849 = insertelement <4 x float> undef, float %848, i32 0
  %850 = shufflevector <4 x float> %849, <4 x float> undef, <4 x i32> zeroinitializer
  %851 = fcmp olt <4 x float> %847, %850
  %852 = select <4 x i1> %851, <4 x float> %850, <4 x float> %847
  %853 = bitcast float* %845 to <4 x float>*
  store <4 x float> %852, <4 x float>* %853, align 4, !alias.scope !30, !noalias !33
  %854 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 60
  %855 = bitcast float* %854 to <4 x float>*
  %856 = load <4 x float>, <4 x float>* %855, align 4, !alias.scope !30, !noalias !33
  %857 = load float, float* %491, align 4, !alias.scope !33
  %858 = insertelement <4 x float> undef, float %857, i32 0
  %859 = shufflevector <4 x float> %858, <4 x float> undef, <4 x i32> zeroinitializer
  %860 = fcmp olt <4 x float> %856, %859
  %861 = select <4 x i1> %860, <4 x float> %859, <4 x float> %856
  %862 = bitcast float* %854 to <4 x float>*
  store <4 x float> %861, <4 x float>* %862, align 4, !alias.scope !30, !noalias !33
  br label %863

863:                                              ; preds = %717, %706
  %864 = phi float* [ %710, %706 ], [ %718, %717 ]
  %865 = ptrtoint float* %864 to i64
  %866 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %708, i64 %499, i32 0, i64 64
  %867 = ptrtoint float* %866 to i64
  %868 = sub i64 %867, %865
  %869 = lshr i64 %868, 2
  %870 = add nuw nsw i64 %869, 1
  %871 = and i64 %870, 3
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %883, label %873

873:                                              ; preds = %863, %873
  %874 = phi float* [ %880, %873 ], [ %864, %863 ]
  %875 = phi i64 [ %881, %873 ], [ %871, %863 ]
  %876 = load float, float* %874, align 4
  %877 = load float, float* %491, align 4
  %878 = fcmp olt float %876, %877
  %879 = select i1 %878, float %877, float %876
  store float %879, float* %874, align 4
  %880 = getelementptr inbounds float, float* %874, i64 1
  %881 = add i64 %875, -1
  %882 = icmp eq i64 %881, 0
  br i1 %882, label %883, label %873, !llvm.loop !35

883:                                              ; preds = %873, %863
  %884 = phi float* [ %864, %863 ], [ %880, %873 ]
  %885 = icmp ult i64 %868, 12
  br i1 %885, label %909, label %886

886:                                              ; preds = %883, %886
  %887 = phi float* [ %907, %886 ], [ %884, %883 ]
  %888 = load float, float* %887, align 4
  %889 = load float, float* %491, align 4
  %890 = fcmp olt float %888, %889
  %891 = select i1 %890, float %889, float %888
  store float %891, float* %887, align 4
  %892 = getelementptr inbounds float, float* %887, i64 1
  %893 = load float, float* %892, align 4
  %894 = load float, float* %491, align 4
  %895 = fcmp olt float %893, %894
  %896 = select i1 %895, float %894, float %893
  store float %896, float* %892, align 4
  %897 = getelementptr inbounds float, float* %887, i64 2
  %898 = load float, float* %897, align 4
  %899 = load float, float* %491, align 4
  %900 = fcmp olt float %898, %899
  %901 = select i1 %900, float %899, float %898
  store float %901, float* %897, align 4
  %902 = getelementptr inbounds float, float* %887, i64 3
  %903 = load float, float* %902, align 4
  %904 = load float, float* %491, align 4
  %905 = fcmp olt float %903, %904
  %906 = select i1 %905, float %904, float %903
  store float %906, float* %902, align 4
  %907 = getelementptr inbounds float, float* %887, i64 4
  %908 = icmp eq float* %907, %709
  br i1 %908, label %909, label %886, !llvm.loop !36

909:                                              ; preds = %883, %886, %680
  %910 = add nuw i64 %499, 1
  %911 = load i64, i64* %10, align 8
  %912 = icmp ult i64 %910, %911
  br i1 %912, label %498, label %913

913:                                              ; preds = %909, %7
  %914 = phi i64 [ %11, %7 ], [ %911, %909 ]
  %915 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %916 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %915, align 8
  %917 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 2
  %918 = icmp eq i64 %914, 0
  br i1 %918, label %988, label %919

919:                                              ; preds = %913
  %920 = icmp eq %"class.std::__1::vector"* %916, null
  %921 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 7
  %922 = select i1 %920, %"class.std::__1::vector"* %921, %"class.std::__1::vector"* %916
  %923 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 0
  %924 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %922, i64 0, i32 0, i32 0
  %925 = getelementptr inbounds %"class.webrtc::ComfortNoiseGenerator", %"class.webrtc::ComfortNoiseGenerator"* %0, i64 0, i32 1
  %926 = getelementptr inbounds %"class.rtc::ArrayView.4", %"class.rtc::ArrayView.4"* %6, i64 0, i32 0, i32 0
  %927 = bitcast %"struct.std::__1::array"* %8 to i8*
  %928 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 0
  %929 = bitcast %"class.webrtc::aec3::VectorMath"* %9 to i8*
  %930 = getelementptr inbounds %"class.webrtc::aec3::VectorMath", %"class.webrtc::aec3::VectorMath"* %9, i64 0, i32 0
  %931 = bitcast %"struct.std::__1::array"* %8 to <4 x float>*
  %932 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 4
  %933 = bitcast float* %932 to <4 x float>*
  %934 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 8
  %935 = bitcast float* %934 to <4 x float>*
  %936 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 12
  %937 = bitcast float* %936 to <4 x float>*
  %938 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 16
  %939 = bitcast float* %938 to <4 x float>*
  %940 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 20
  %941 = bitcast float* %940 to <4 x float>*
  %942 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 24
  %943 = bitcast float* %942 to <4 x float>*
  %944 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 28
  %945 = bitcast float* %944 to <4 x float>*
  %946 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 32
  %947 = bitcast float* %946 to <4 x float>*
  %948 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 36
  %949 = bitcast float* %948 to <4 x float>*
  %950 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 40
  %951 = bitcast float* %950 to <4 x float>*
  %952 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 44
  %953 = bitcast float* %952 to <4 x float>*
  %954 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 48
  %955 = bitcast float* %954 to <4 x float>*
  %956 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 52
  %957 = bitcast float* %956 to <4 x float>*
  %958 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 56
  %959 = bitcast float* %958 to <4 x float>*
  %960 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 60
  %961 = bitcast float* %960 to <4 x float>*
  %962 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 64
  %963 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 65
  %964 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 33
  %965 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 34
  %966 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 35
  %967 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 37
  %968 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 38
  %969 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 39
  %970 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 41
  %971 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 42
  %972 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 43
  %973 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 45
  %974 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 46
  %975 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 47
  %976 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 49
  %977 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 50
  %978 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 51
  %979 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 53
  %980 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 54
  %981 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 55
  %982 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 57
  %983 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 58
  %984 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 59
  %985 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 61
  %986 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 62
  %987 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 63
  br label %989

988:                                              ; preds = %1149, %373, %486, %913
  ret void

989:                                              ; preds = %919, %1149
  %990 = phi i64 [ 0, %919 ], [ %1150, %1149 ]
  %991 = load i32, i32* %923, align 8
  %992 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %924, align 8
  %993 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %992, i64 %990
  %994 = load %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"** %926, align 8
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %927) #9
  %995 = bitcast %"struct.std::__1::array"* %993 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %927, i8* align 4 %995, i64 260, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %929) #9
  store i32 %991, i32* %930, align 4
  switch i32 %991, label %1032 [
    i32 1, label %996
    i32 2, label %1031
  ]

996:                                              ; preds = %989
  %997 = load <4 x float>, <4 x float>* %931, align 16
  %998 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %997) #9
  store <4 x float> %998, <4 x float>* %931, align 16
  %999 = load <4 x float>, <4 x float>* %933, align 16
  %1000 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %999) #9
  store <4 x float> %1000, <4 x float>* %933, align 16
  %1001 = load <4 x float>, <4 x float>* %935, align 16
  %1002 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1001) #9
  store <4 x float> %1002, <4 x float>* %935, align 16
  %1003 = load <4 x float>, <4 x float>* %937, align 16
  %1004 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1003) #9
  store <4 x float> %1004, <4 x float>* %937, align 16
  %1005 = load <4 x float>, <4 x float>* %939, align 16
  %1006 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1005) #9
  store <4 x float> %1006, <4 x float>* %939, align 16
  %1007 = load <4 x float>, <4 x float>* %941, align 16
  %1008 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1007) #9
  store <4 x float> %1008, <4 x float>* %941, align 16
  %1009 = load <4 x float>, <4 x float>* %943, align 16
  %1010 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1009) #9
  store <4 x float> %1010, <4 x float>* %943, align 16
  %1011 = load <4 x float>, <4 x float>* %945, align 16
  %1012 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1011) #9
  store <4 x float> %1012, <4 x float>* %945, align 16
  %1013 = load <4 x float>, <4 x float>* %947, align 16
  %1014 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1013) #9
  store <4 x float> %1014, <4 x float>* %947, align 16
  %1015 = load <4 x float>, <4 x float>* %949, align 16
  %1016 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1015) #9
  store <4 x float> %1016, <4 x float>* %949, align 16
  %1017 = load <4 x float>, <4 x float>* %951, align 16
  %1018 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1017) #9
  store <4 x float> %1018, <4 x float>* %951, align 16
  %1019 = load <4 x float>, <4 x float>* %953, align 16
  %1020 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1019) #9
  store <4 x float> %1020, <4 x float>* %953, align 16
  %1021 = load <4 x float>, <4 x float>* %955, align 16
  %1022 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1021) #9
  store <4 x float> %1022, <4 x float>* %955, align 16
  %1023 = load <4 x float>, <4 x float>* %957, align 16
  %1024 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1023) #9
  store <4 x float> %1024, <4 x float>* %957, align 16
  %1025 = load <4 x float>, <4 x float>* %959, align 16
  %1026 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1025) #9
  store <4 x float> %1026, <4 x float>* %959, align 16
  %1027 = load <4 x float>, <4 x float>* %961, align 16
  %1028 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1027) #9
  store <4 x float> %1028, <4 x float>* %961, align 16
  %1029 = load float, float* %962, align 16
  %1030 = call float @sqrtf(float %1029) #9
  store float %1030, float* %962, align 16
  br label %1050

1031:                                             ; preds = %989
  call void @_ZN6webrtc4aec310VectorMath8SqrtAVX2EN3rtc9ArrayViewIfLln4711EEE(%"class.webrtc::aec3::VectorMath"* nonnull %9, float* nonnull %928, i64 65) #9
  br label %1050

1032:                                             ; preds = %989, %1032
  %1033 = phi float* [ %1048, %1032 ], [ %928, %989 ]
  %1034 = load float, float* %1033, align 4
  %1035 = call float @sqrtf(float %1034) #9
  store float %1035, float* %1033, align 4
  %1036 = getelementptr inbounds float, float* %1033, i64 1
  %1037 = load float, float* %1036, align 4
  %1038 = call float @sqrtf(float %1037) #9
  store float %1038, float* %1036, align 4
  %1039 = getelementptr inbounds float, float* %1033, i64 2
  %1040 = load float, float* %1039, align 4
  %1041 = call float @sqrtf(float %1040) #9
  store float %1041, float* %1039, align 4
  %1042 = getelementptr inbounds float, float* %1033, i64 3
  %1043 = load float, float* %1042, align 4
  %1044 = call float @sqrtf(float %1043) #9
  store float %1044, float* %1042, align 4
  %1045 = getelementptr inbounds float, float* %1033, i64 4
  %1046 = load float, float* %1045, align 4
  %1047 = call float @sqrtf(float %1046) #9
  store float %1047, float* %1045, align 4
  %1048 = getelementptr inbounds float, float* %1033, i64 5
  %1049 = icmp eq float* %1048, %963
  br i1 %1049, label %1050, label %1032

1050:                                             ; preds = %1032, %1031, %996
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %929) #9
  %1051 = load float, float* %946, align 16
  %1052 = fadd float %1051, 0.000000e+00
  %1053 = load float, float* %964, align 4
  %1054 = fadd float %1052, %1053
  %1055 = load float, float* %965, align 8
  %1056 = fadd float %1054, %1055
  %1057 = load float, float* %966, align 4
  %1058 = fadd float %1056, %1057
  %1059 = load float, float* %948, align 16
  %1060 = fadd float %1058, %1059
  %1061 = load float, float* %967, align 4
  %1062 = fadd float %1060, %1061
  %1063 = load float, float* %968, align 8
  %1064 = fadd float %1062, %1063
  %1065 = load float, float* %969, align 4
  %1066 = fadd float %1064, %1065
  %1067 = load float, float* %950, align 16
  %1068 = fadd float %1066, %1067
  %1069 = load float, float* %970, align 4
  %1070 = fadd float %1068, %1069
  %1071 = load float, float* %971, align 8
  %1072 = fadd float %1070, %1071
  %1073 = load float, float* %972, align 4
  %1074 = fadd float %1072, %1073
  %1075 = load float, float* %952, align 16
  %1076 = fadd float %1074, %1075
  %1077 = load float, float* %973, align 4
  %1078 = fadd float %1076, %1077
  %1079 = load float, float* %974, align 8
  %1080 = fadd float %1078, %1079
  %1081 = load float, float* %975, align 4
  %1082 = fadd float %1080, %1081
  %1083 = load float, float* %954, align 16
  %1084 = fadd float %1082, %1083
  %1085 = load float, float* %976, align 4
  %1086 = fadd float %1084, %1085
  %1087 = load float, float* %977, align 8
  %1088 = fadd float %1086, %1087
  %1089 = load float, float* %978, align 4
  %1090 = fadd float %1088, %1089
  %1091 = load float, float* %956, align 16
  %1092 = fadd float %1090, %1091
  %1093 = load float, float* %979, align 4
  %1094 = fadd float %1092, %1093
  %1095 = load float, float* %980, align 8
  %1096 = fadd float %1094, %1095
  %1097 = load float, float* %981, align 4
  %1098 = fadd float %1096, %1097
  %1099 = load float, float* %958, align 16
  %1100 = fadd float %1098, %1099
  %1101 = load float, float* %982, align 4
  %1102 = fadd float %1100, %1101
  %1103 = load float, float* %983, align 8
  %1104 = fadd float %1102, %1103
  %1105 = load float, float* %984, align 4
  %1106 = fadd float %1104, %1105
  %1107 = load float, float* %960, align 16
  %1108 = fadd float %1106, %1107
  %1109 = load float, float* %985, align 4
  %1110 = fadd float %1108, %1109
  %1111 = load float, float* %986, align 8
  %1112 = fadd float %1110, %1111
  %1113 = load float, float* %987, align 4
  %1114 = fadd float %1112, %1113
  %1115 = load float, float* %962, align 16
  %1116 = fadd float %1114, %1115
  %1117 = fmul float %1116, 0x3F9F07C200000000
  %1118 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %994, i64 %990, i32 0, i32 0, i64 64
  store float 0.000000e+00, float* %1118, align 4
  %1119 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %994, i64 %990, i32 0, i32 0, i64 0
  store float 0.000000e+00, float* %1119, align 4
  %1120 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %4, i64 %990, i32 0, i32 0, i64 64
  store float 0.000000e+00, float* %1120, align 4
  %1121 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %4, i64 %990, i32 0, i32 0, i64 0
  store float 0.000000e+00, float* %1121, align 4
  br label %1122

1122:                                             ; preds = %1122, %1050
  %1123 = phi i64 [ 1, %1050 ], [ %1147, %1122 ]
  %1124 = load i32, i32* %925, align 4
  %1125 = mul i32 %1124, 69069
  %1126 = add i32 %1125, 1
  %1127 = and i32 %1126, 2147483647
  store i32 %1127, i32* %925, align 4
  %1128 = lshr i32 %1127, 26
  %1129 = zext i32 %1128 to i64
  %1130 = getelementptr inbounds [32 x float], [32 x float]* @_ZN6webrtc12_GLOBAL__N_19kSqrt2SinE, i64 0, i64 %1129
  %1131 = load float, float* %1130, align 4
  %1132 = add nuw nsw i32 %1128, 8
  %1133 = and i32 %1132, 31
  %1134 = zext i32 %1133 to i64
  %1135 = getelementptr inbounds [32 x float], [32 x float]* @_ZN6webrtc12_GLOBAL__N_19kSqrt2SinE, i64 0, i64 %1134
  %1136 = load float, float* %1135, align 4
  %1137 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 %1123
  %1138 = load float, float* %1137, align 4
  %1139 = fmul float %1131, %1138
  %1140 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %4, i64 %990, i32 0, i32 0, i64 %1123
  store float %1139, float* %1140, align 4
  %1141 = fmul float %1136, %1138
  %1142 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %4, i64 %990, i32 1, i32 0, i64 %1123
  store float %1141, float* %1142, align 4
  %1143 = fmul float %1117, %1131
  %1144 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %994, i64 %990, i32 0, i32 0, i64 %1123
  store float %1143, float* %1144, align 4
  %1145 = fmul float %1117, %1136
  %1146 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %994, i64 %990, i32 1, i32 0, i64 %1123
  store float %1145, float* %1146, align 4
  %1147 = add nuw nsw i64 %1123, 1
  %1148 = icmp eq i64 %1147, 64
  br i1 %1148, label %1149, label %1122

1149:                                             ; preds = %1122
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %927) #9
  %1150 = add nuw i64 %990, 1
  %1151 = load i64, i64* %917, align 8
  %1152 = icmp ult i64 %1150, %1151
  br i1 %1152, label %989, label %988

1153:                                             ; preds = %473
  %1154 = fsub float %477, %478
  %1155 = fmul float %1154, 0x3F50624DE0000000
  %1156 = fadd float %478, %1155
  br label %1157

1157:                                             ; preds = %1153, %473
  %1158 = phi float [ %1156, %1153 ], [ %477, %473 ]
  store float %1158, float* %476, align 4
  %1159 = getelementptr inbounds float, float* %465, i64 2
  %1160 = getelementptr inbounds float, float* %464, i64 2
  %1161 = icmp eq float* %1159, %395
  br i1 %1161, label %480, label %463, !llvm.loop !37

1162:                                             ; preds = %352
  %1163 = fmul float %358, 0x3FECCCCCC0000000
  %1164 = fmul float %357, 0x3FB99999A0000000
  %1165 = fadd float %1164, %1163
  br label %1166

1166:                                             ; preds = %1162, %352
  %1167 = phi float [ %1165, %1162 ], [ %357, %352 ]
  %1168 = fmul float %1167, 0x3FF000D1C0000000
  store float %1168, float* %355, align 4
  %1169 = getelementptr inbounds float, float* %343, i64 2
  %1170 = getelementptr inbounds float, float* %344, i64 2
  %1171 = icmp eq float* %1169, %272
  br i1 %1171, label %360, label %342, !llvm.loop !38
}

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #3

declare void @_ZN6webrtc4aec310VectorMath8SqrtAVX2EN3rtc9ArrayViewIfLln4711EEE(%"class.webrtc::aec3::VectorMath"*, float*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.sqrt.v4f32(<4 x float>) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !10}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !8}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !10}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !8}
!36 = distinct !{!36, !10}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
