; ModuleID = '../../third_party/blink/renderer/platform/fonts/shaping/shape_result_spacing.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/shaping/shape_result_spacing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ShapeResultSpacing" = type <{ %"class.blink::TextRun"*, float, float, float, float, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::TextRun" = type <{ %union.anon, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon = type { i8* }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::ShapeResultSpacing.25" = type <{ %"class.WTF::String"*, float, float, float, float, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.2, %class.scoped_refptr.3, %class.scoped_refptr.13, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.21 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.1 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.22", [4 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.2 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.4", %"class.WTF::RefCounted.11", [4 x i8] }>
%"class.blink::FontSettings.4" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::FontTagValuePair.8"*, i32, i32 }
%"class.blink::FontTagValuePair.8" = type { i32, float }
%"class.WTF::RefCounted.11" = type { %"class.base::RefCounted.12" }
%"class.base::RefCounted.12" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.13 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.14", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.18, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.14" = type { %"class.base::RefCounted.15" }
%"class.base::RefCounted.15" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.16 }
%union.anon.16 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.18 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.21 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters" = type { i32, float }
%"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters" = type { i32, float }

$_ZN5blink18ShapeResultSpacingINS_7TextRunEEC5ERKS1_b = comdat any

$_ZNK5blink18ShapeResultSpacingINS_7TextRunEE4TextEv = comdat any

$_ZNK5blink18ShapeResultSpacingINS_7TextRunEE13LetterSpacingEv = comdat any

$_ZNK5blink18ShapeResultSpacingINS_7TextRunEE11WordSpacingEv = comdat any

$_ZNK5blink18ShapeResultSpacingINS_7TextRunEE10HasSpacingEv = comdat any

$_ZNK5blink18ShapeResultSpacingINS_7TextRunEE12HasExpansionEv = comdat any

$_ZNK5blink18ShapeResultSpacingINS_7TextRunEE24ExpansionOppotunityCountEv = comdat any

$_ZN5blink18ShapeResultSpacingINS_7TextRunEE10SetSpacingERKNS_15FontDescriptionE = comdat any

$_ZN5blink18ShapeResultSpacingINS_7TextRunEE12SetExpansionEfNS_13TextDirectionENS_11TextJustifyEbb = comdat any

$_ZN5blink18ShapeResultSpacingINS_7TextRunEE16ComputeExpansionEbbNS_13TextDirectionENS_11TextJustifyE = comdat any

$_ZN5blink18ShapeResultSpacingINS_7TextRunEE14ComputeSpacingEjRf = comdat any

$_ZN5blink18ShapeResultSpacingINS_7TextRunEE14ComputeSpacingERKNS2_24ComputeSpacingParametersERf = comdat any

$_ZN5blink18ShapeResultSpacingINS_7TextRunEE13NextExpansionEv = comdat any

$_ZNK5blink18ShapeResultSpacingINS_7TextRunEE16IsAfterExpansionEv = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEEC5ERKS2_b = comdat any

$_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE4TextEv = comdat any

$_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE13LetterSpacingEv = comdat any

$_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE11WordSpacingEv = comdat any

$_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE10HasSpacingEv = comdat any

$_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE12HasExpansionEv = comdat any

$_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE24ExpansionOppotunityCountEv = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEE10SetSpacingERKNS_15FontDescriptionE = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEE12SetExpansionEfNS_13TextDirectionENS_11TextJustifyEbb = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEE16ComputeExpansionEbbNS_13TextDirectionENS_11TextJustifyE = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEE22SetSpacingAndExpansionERKNS_15FontDescriptionE = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEE14ComputeSpacingEjRf = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEE14ComputeSpacingERKNS3_24ComputeSpacingParametersERf = comdat any

$_ZN5blink18ShapeResultSpacingIN3WTF6StringEE13NextExpansionEv = comdat any

$_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE16IsAfterExpansionEv = comdat any

@_ZN5blink18ShapeResultSpacingINS_7TextRunEEC1ERKS1_b = weak_odr hidden unnamed_addr alias void (%"class.blink::ShapeResultSpacing"*, %"class.blink::TextRun"*, i1), void (%"class.blink::ShapeResultSpacing"*, %"class.blink::TextRun"*, i1)* @_ZN5blink18ShapeResultSpacingINS_7TextRunEEC2ERKS1_b
@_ZN5blink18ShapeResultSpacingIN3WTF6StringEEC1ERKS2_b = weak_odr hidden unnamed_addr alias void (%"class.blink::ShapeResultSpacing.25"*, %"class.WTF::String"*, i1), void (%"class.blink::ShapeResultSpacing.25"*, %"class.WTF::String"*, i1)* @_ZN5blink18ShapeResultSpacingIN3WTF6StringEEC2ERKS2_b

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink18ShapeResultSpacingINS_7TextRunEEC2ERKS1_b(%"class.blink::ShapeResultSpacing"*, %"class.blink::TextRun"* dereferenceable(40), i1 zeroext) unnamed_addr #0 comdat($_ZN5blink18ShapeResultSpacingINS_7TextRunEEC5ERKS1_b) align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 0
  store %"class.blink::TextRun"* %1, %"class.blink::TextRun"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 11
  %8 = bitcast float* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 28, i1 false)
  store i8 %4, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(40) %"class.blink::TextRun"* @_ZNK5blink18ShapeResultSpacingINS_7TextRunEE4TextEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 0
  %3 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %2, align 8
  ret %"class.blink::TextRun"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZNK5blink18ShapeResultSpacingINS_7TextRunEE13LetterSpacingEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 1
  %7 = load float, float* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi float [ %7, %5 ], [ 0.000000e+00, %1 ]
  ret float %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZNK5blink18ShapeResultSpacingINS_7TextRunEE11WordSpacingEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 2
  %7 = load float, float* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi float [ %7, %5 ], [ 0.000000e+00, %1 ]
  ret float %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink18ShapeResultSpacingINS_7TextRunEE10HasSpacingEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink18ShapeResultSpacingINS_7TextRunEE12HasExpansionEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink18ShapeResultSpacingINS_7TextRunEE24ExpansionOppotunityCountEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink18ShapeResultSpacingINS_7TextRunEE10SetSpacingERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 8
  %4 = load float, float* %3, align 8
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 9
  %8 = load float, float* %7, align 4
  %9 = fcmp une float %8, 0.000000e+00
  br i1 %9, label %10, label %18

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 1
  store float %4, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 9
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 2
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 9
  store i8 1, i8* %17, align 2
  br label %18

18:                                               ; preds = %6, %10
  %19 = phi i8 [ 1, %10 ], [ 0, %6 ]
  %20 = phi i1 [ true, %10 ], [ false, %6 ]
  %21 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 7
  store i8 %19, i8* %21, align 8
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink18ShapeResultSpacingINS_7TextRunEE12SetExpansionEfNS_13TextDirectionENS_11TextJustifyEbb(%"class.blink::ShapeResultSpacing"*, float, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca i8, align 1
  %8 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  store float %1, float* %8, align 8
  %9 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 6
  store i32 %3, i32* %9, align 4
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  store i32 0, i32* %12, align 8
  br label %54

13:                                               ; preds = %6
  %14 = xor i1 %4, true
  %15 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  %16 = zext i1 %14 to i8
  store i8 %16, i8* %15, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #3
  store i8 %16, i8* %7, align 1
  %17 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 0
  %18 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %18, i64 0, i32 5
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 4
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %18, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %18, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %28, i8* %25, i8 zeroext %2, i8* nonnull dereferenceable(1) %7, i32 %3) #3
  br label %37

30:                                               ; preds = %13
  %31 = bitcast %"class.blink::TextRun"* %18 to i16**
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %18, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %35, i16* %32, i8 zeroext %2, i8* nonnull dereferenceable(1) %7, i32 %3) #3
  br label %37

37:                                               ; preds = %30, %23
  %38 = phi i32 [ %36, %30 ], [ %29, %23 ]
  %39 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  store i32 %38, i32* %39, align 8
  %40 = load i8, i8* %7, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = or i1 %41, %5
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = add i32 %38, -1
  store i32 %44, i32* %39, align 8
  br label %45

45:                                               ; preds = %43, %37
  %46 = phi i32 [ %38, %37 ], [ %44, %43 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = load float, float* %8, align 8
  %50 = uitofp i32 %46 to float
  %51 = fdiv float %49, %50
  %52 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 4
  store float %51, float* %52, align 4
  br label %53

53:                                               ; preds = %48, %45
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #3
  br label %54

54:                                               ; preds = %11, %53
  %55 = phi i32 [ 0, %11 ], [ %46, %53 ]
  %56 = icmp ne i32 %55, 0
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 7
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = or i8 %59, %57
  store i8 %60, i8* %58, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink18ShapeResultSpacingINS_7TextRunEE16ComputeExpansionEbbNS_13TextDirectionENS_11TextJustifyE(%"class.blink::ShapeResultSpacing"*, i1 zeroext, i1 zeroext, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 6
  store i32 %4, i32* %7, align 4
  %8 = icmp eq i32 %4, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 8
  br label %53

11:                                               ; preds = %5
  %12 = xor i1 %1, true
  %13 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #3
  store i8 %14, i8* %6, align 1
  %15 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 0
  %16 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 5
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, 4
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %26, i8* %23, i8 zeroext %3, i8* nonnull dereferenceable(1) %6, i32 %4) #3
  br label %35

28:                                               ; preds = %11
  %29 = bitcast %"class.blink::TextRun"* %16 to i16**
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %33, i16* %30, i8 zeroext %3, i8* nonnull dereferenceable(1) %6, i32 %4) #3
  br label %35

35:                                               ; preds = %28, %21
  %36 = phi i32 [ %34, %28 ], [ %27, %21 ]
  %37 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  store i32 %36, i32* %37, align 8
  %38 = load i8, i8* %6, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = or i1 %39, %2
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = add i32 %36, -1
  store i32 %42, i32* %37, align 8
  br label %43

43:                                               ; preds = %35, %41
  %44 = phi i32 [ %36, %35 ], [ %42, %41 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %48 = load float, float* %47, align 8
  %49 = uitofp i32 %44 to float
  %50 = fdiv float %48, %49
  %51 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 4
  store float %50, float* %51, align 4
  br label %52

52:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #3
  br label %53

53:                                               ; preds = %52, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZN5blink18ShapeResultSpacingINS_7TextRunEE14ComputeSpacingEjRf(%"class.blink::ShapeResultSpacing"*, i32, float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters", align 4
  %5 = bitcast %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #3
  %6 = getelementptr inbounds %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters", %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters"* %4, i64 0, i32 0
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters", %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %7, align 4
  %8 = call float @_ZN5blink18ShapeResultSpacingINS_7TextRunEE14ComputeSpacingERKNS2_24ComputeSpacingParametersERf(%"class.blink::ShapeResultSpacing"* %0, %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters"* nonnull dereferenceable(8) %4, float* dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #3
  ret float %8
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZN5blink18ShapeResultSpacingINS_7TextRunEE14ComputeSpacingERKNS2_24ComputeSpacingParametersERf(%"class.blink::ShapeResultSpacing"*, %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters"* dereferenceable(8), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters", %"struct.blink::ShapeResultSpacing<blink::TextRun>::ComputeSpacingParameters"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 0
  %7 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 5
  %9 = load i16, i16* %8, align 8
  %10 = and i16 %9, 4
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = zext i32 %5 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = bitcast i8* %14 to i16*
  br label %26

20:                                               ; preds = %3
  %21 = bitcast %"class.blink::TextRun"* %7 to i16**
  %22 = load i16*, i16** %21, align 8
  %23 = zext i32 %5 to i64
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  %25 = load i16, i16* %24, align 2
  br label %26

26:                                               ; preds = %12, %20
  %27 = phi i16* [ %19, %12 ], [ %22, %20 ]
  %28 = phi i16 [ %18, %12 ], [ %25, %20 ]
  %29 = zext i16 %28 to i32
  switch i16 %28, label %30 [
    i16 9, label %37
    i16 10, label %41
    i16 32, label %41
    i16 160, label %41
  ]

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp ne i8 %32, 0
  %34 = add nsw i32 %29, -9
  %35 = icmp ult i32 %34, 5
  %36 = and i1 %35, %33
  br label %41

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 9
  %39 = load i8, i8* %38, align 2, !range !2
  %40 = icmp eq i8 %39, 0
  br label %41

41:                                               ; preds = %30, %26, %26, %26, %37
  %42 = phi i1 [ %40, %37 ], [ true, %26 ], [ true, %26 ], [ true, %26 ], [ %36, %30 ]
  %43 = icmp ne i16 %28, 160
  %44 = and i1 %43, %42
  %45 = select i1 %44, i32 32, i32 %29
  %46 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 1
  %47 = load float, float* %46, align 8
  %48 = fcmp une float %47, 0.000000e+00
  br i1 %48, label %49, label %60

49:                                               ; preds = %41
  %50 = trunc i32 %45 to i16
  switch i16 %50, label %51 [
    i16 8203, label %60
    i16 173, label %60
    i16 13, label %60
    i16 12, label %60
  ]

51:                                               ; preds = %49
  %52 = and i32 %45, 65534
  %53 = icmp eq i32 %52, 8206
  br i1 %53, label %60, label %54

54:                                               ; preds = %51
  switch i16 %50, label %55 [
    i16 -257, label %60
    i16 8238, label %60
    i16 8237, label %60
    i16 8236, label %60
    i16 8235, label %60
    i16 8234, label %60
    i16 -4, label %60
  ]

55:                                               ; preds = %54
  %56 = or i32 %45, 1
  %57 = icmp eq i32 %56, 8205
  %58 = fadd float %47, 0.000000e+00
  %59 = select i1 %57, float 0.000000e+00, float %58
  br label %60

60:                                               ; preds = %55, %54, %54, %54, %54, %54, %54, %54, %51, %49, %49, %49, %49, %41
  %61 = phi float [ 0.000000e+00, %41 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %51 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %54 ], [ %59, %55 ]
  br i1 %42, label %62, label %74

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 11
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = icmp ne i8 %64, 0
  %66 = icmp ne i32 %5, 0
  %67 = or i1 %66, %65
  %68 = icmp eq i32 %45, 160
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %74

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 2
  %72 = load float, float* %71, align 4
  %73 = fadd float %61, %72
  br label %74

74:                                               ; preds = %62, %70, %60
  %75 = phi float [ %73, %70 ], [ %61, %62 ], [ %61, %60 ]
  %76 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %181, label %79

79:                                               ; preds = %74
  br i1 %42, label %80, label %96

80:                                               ; preds = %79
  %81 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  store i8 1, i8* %81, align 1
  %82 = add i32 %77, -1
  store i32 %82, i32* %76, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %86 = load float, float* %85, align 8
  store float 0.000000e+00, float* %85, align 8
  br label %93

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 4
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %91 = load float, float* %90, align 8
  %92 = fsub float %91, %89
  store float %92, float* %90, align 8
  br label %93

93:                                               ; preds = %84, %87
  %94 = phi float [ %89, %87 ], [ %86, %84 ]
  %95 = fadd float %75, %94
  br label %181

96:                                               ; preds = %79
  br i1 %11, label %97, label %181

97:                                               ; preds = %96
  %98 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 6
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %181

101:                                              ; preds = %97
  %102 = and i32 %45, 64512
  %103 = icmp eq i32 %102, 55296
  br i1 %103, label %104, label %122

104:                                              ; preds = %101
  %105 = add i32 %5, 1
  %106 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp ult i32 %105, %107
  br i1 %108, label %109, label %122

109:                                              ; preds = %104
  %110 = zext i32 %105 to i64
  %111 = getelementptr inbounds i16, i16* %27, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = and i16 %112, -1024
  %114 = icmp eq i16 %113, -9216
  br i1 %114, label %115, label %122

115:                                              ; preds = %109
  %116 = shl nuw nsw i32 %45, 10
  %117 = getelementptr inbounds i16, i16* %27, i64 %110
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = add nsw i32 %116, -56613888
  %121 = add nsw i32 %120, %119
  br label %122

122:                                              ; preds = %115, %109, %104, %101
  %123 = phi i32 [ %121, %115 ], [ %29, %109 ], [ %29, %104 ], [ %29, %101 ]
  %124 = icmp slt i32 %123, 711
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  br label %130

127:                                              ; preds = %122
  %128 = tail call zeroext i1 @_ZN5blink9Character26IsCJKIdeographOrSymbolSlowEi(i32 %123) #3
  %129 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  br i1 %128, label %132, label %130

130:                                              ; preds = %125, %127
  %131 = phi i8* [ %126, %125 ], [ %129, %127 ]
  store i8 0, i8* %131, align 1
  br label %181

132:                                              ; preds = %127
  %133 = load i8, i8* %129, align 1, !range !2
  %134 = icmp eq i8 %133, 0
  %135 = load i32, i32* %76, align 8
  %136 = icmp eq i32 %135, 0
  br i1 %134, label %137, label %162

137:                                              ; preds = %132
  br i1 %136, label %181, label %138

138:                                              ; preds = %137
  store i8 1, i8* %129, align 1
  %139 = add i32 %135, -1
  store i32 %139, i32* %76, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %143 = load float, float* %142, align 8
  store float 0.000000e+00, float* %142, align 8
  br label %150

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 4
  %146 = load float, float* %145, align 4
  %147 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %148 = load float, float* %147, align 8
  %149 = fsub float %148, %146
  store float %149, float* %147, align 8
  br label %150

150:                                              ; preds = %141, %144
  %151 = phi float [ %146, %144 ], [ %143, %141 ]
  %152 = fcmp une float %151, 0.000000e+00
  br i1 %152, label %153, label %158

153:                                              ; preds = %150
  %154 = load float, float* %2, align 4
  %155 = fadd float %151, %154
  store float %155, float* %2, align 4
  %156 = fadd float %75, %151
  %157 = load i32, i32* %76, align 8
  br label %158

158:                                              ; preds = %153, %150
  %159 = phi i32 [ %157, %153 ], [ %139, %150 ]
  %160 = phi float [ %156, %153 ], [ %75, %150 ]
  %161 = icmp eq i32 %159, 0
  br i1 %161, label %181, label %163

162:                                              ; preds = %132
  br i1 %136, label %177, label %163

163:                                              ; preds = %158, %162
  %164 = phi float [ %75, %162 ], [ %160, %158 ]
  %165 = phi i32 [ %135, %162 ], [ %159, %158 ]
  store i8 1, i8* %129, align 1
  %166 = add i32 %165, -1
  store i32 %166, i32* %76, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %170 = load float, float* %169, align 8
  store float 0.000000e+00, float* %169, align 8
  br label %177

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 4
  %173 = load float, float* %172, align 4
  %174 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %175 = load float, float* %174, align 8
  %176 = fsub float %175, %173
  store float %176, float* %174, align 8
  br label %177

177:                                              ; preds = %162, %168, %171
  %178 = phi float [ %164, %171 ], [ %164, %168 ], [ %75, %162 ]
  %179 = phi float [ %173, %171 ], [ %170, %168 ], [ 0.000000e+00, %162 ]
  %180 = fadd float %178, %179
  br label %181

181:                                              ; preds = %137, %158, %96, %74, %97, %177, %130, %93
  %182 = phi float [ %95, %93 ], [ %180, %177 ], [ %160, %158 ], [ %75, %130 ], [ %75, %74 ], [ %75, %97 ], [ %75, %96 ], [ %75, %137 ]
  ret float %182
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZN5blink18ShapeResultSpacingINS_7TextRunEE13NextExpansionEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  store i8 1, i8* %6, align 1
  %7 = add i32 %3, -1
  store i32 %7, i32* %2, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %11 = load float, float* %10, align 8
  store float 0.000000e+00, float* %10, align 8
  br label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 4
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  %16 = load float, float* %15, align 8
  %17 = fsub float %16, %14
  store float %17, float* %15, align 8
  br label %18

18:                                               ; preds = %1, %12, %9
  %19 = phi float [ %14, %12 ], [ %11, %9 ], [ 0.000000e+00, %1 ]
  ret float %19
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink18ShapeResultSpacingINS_7TextRunEE16IsAfterExpansionEv(%"class.blink::ShapeResultSpacing"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64, i8*, i8 zeroext, i8* dereferenceable(1), i32) local_unnamed_addr #2

declare i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64, i16*, i8 zeroext, i8* dereferenceable(1), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink18ShapeResultSpacingIN3WTF6StringEEC2ERKS2_b(%"class.blink::ShapeResultSpacing.25"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 comdat($_ZN5blink18ShapeResultSpacingIN3WTF6StringEEC5ERKS2_b) align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 0
  store %"class.WTF::String"* %1, %"class.WTF::String"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 11
  %8 = bitcast float* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 28, i1 false)
  store i8 %4, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE4TextEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 0
  %3 = load %"class.WTF::String"*, %"class.WTF::String"** %2, align 8
  ret %"class.WTF::String"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE13LetterSpacingEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 1
  %7 = load float, float* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi float [ %7, %5 ], [ 0.000000e+00, %1 ]
  ret float %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE11WordSpacingEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 2
  %7 = load float, float* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi float [ %7, %5 ], [ 0.000000e+00, %1 ]
  ret float %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE10HasSpacingEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE12HasExpansionEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE24ExpansionOppotunityCountEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE10SetSpacingERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing.25"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 8
  %4 = load float, float* %3, align 8
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 9
  %8 = load float, float* %7, align 4
  %9 = fcmp une float %8, 0.000000e+00
  br i1 %9, label %10, label %18

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 1
  store float %4, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 9
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 2
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 9
  store i8 1, i8* %17, align 2
  br label %18

18:                                               ; preds = %6, %10
  %19 = phi i8 [ 1, %10 ], [ 0, %6 ]
  %20 = phi i1 [ true, %10 ], [ false, %6 ]
  %21 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 7
  store i8 %19, i8* %21, align 8
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE12SetExpansionEfNS_13TextDirectionENS_11TextJustifyEbb(%"class.blink::ShapeResultSpacing.25"*, float, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  store float %1, float* %7, align 8
  tail call void @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE16ComputeExpansionEbbNS_13TextDirectionENS_11TextJustifyE(%"class.blink::ShapeResultSpacing.25"* %0, i1 zeroext %4, i1 zeroext %5, i8 zeroext %2, i32 %3)
  %8 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = or i8 %13, %11
  store i8 %14, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE16ComputeExpansionEbbNS_13TextDirectionENS_11TextJustifyE(%"class.blink::ShapeResultSpacing.25"*, i1 zeroext, i1 zeroext, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 6
  store i32 %4, i32* %7, align 4
  %8 = icmp eq i32 %4, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 8
  br label %65

11:                                               ; preds = %5
  %12 = xor i1 %1, true
  %13 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 10
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #3
  store i8 %14, i8* %6, align 1
  %15 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %22, label %35, label %24

24:                                               ; preds = %11
  br i1 %23, label %31, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %27 = bitcast %"class.WTF::StringImpl"* %26 to i8*
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %24, %25
  %32 = phi i64 [ %30, %25 ], [ 0, %24 ]
  %33 = phi i8* [ %27, %25 ], [ null, %24 ]
  %34 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %32, i8* %33, i8 zeroext %3, i8* nonnull dereferenceable(1) %6, i32 %4) #3
  br label %46

35:                                               ; preds = %11
  br i1 %23, label %42, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i16*
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %35, %36
  %43 = phi i64 [ %41, %36 ], [ 0, %35 ]
  %44 = phi i16* [ %38, %36 ], [ null, %35 ]
  %45 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %43, i16* %44, i8 zeroext %3, i8* nonnull dereferenceable(1) %6, i32 %4) #3
  br label %46

46:                                               ; preds = %42, %31
  %47 = phi i32 [ %45, %42 ], [ %34, %31 ]
  %48 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  store i32 %47, i32* %48, align 8
  %49 = load i8, i8* %6, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  %51 = or i1 %50, %2
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  %54 = add i32 %47, -1
  store i32 %54, i32* %53, align 8
  br label %55

55:                                               ; preds = %46, %52
  %56 = phi i32 [ %47, %46 ], [ %54, %52 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %60 = load float, float* %59, align 8
  %61 = uitofp i32 %56 to float
  %62 = fdiv float %60, %61
  %63 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 4
  store float %62, float* %63, align 4
  br label %64

64:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #3
  br label %65

65:                                               ; preds = %64, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE22SetSpacingAndExpansionERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing.25"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE14ComputeSpacingEjRf(%"class.blink::ShapeResultSpacing.25"*, i32, float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters", align 4
  %5 = bitcast %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #3
  %6 = getelementptr inbounds %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters", %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters"* %4, i64 0, i32 0
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters", %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %7, align 4
  %8 = call float @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE14ComputeSpacingERKNS3_24ComputeSpacingParametersERf(%"class.blink::ShapeResultSpacing.25"* %0, %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters"* nonnull dereferenceable(8) %4, float* dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #3
  ret float %8
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE14ComputeSpacingERKNS3_24ComputeSpacingParametersERf(%"class.blink::ShapeResultSpacing.25"*, %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters"* dereferenceable(8), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters", %"struct.blink::ShapeResultSpacing<WTF::String>::ComputeSpacingParameters"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %46, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, %5
  br i1 %14, label %15, label %46

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  br i1 %19, label %27, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  %23 = zext i32 %5 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  br label %32

27:                                               ; preds = %15
  %28 = bitcast %"class.WTF::StringImpl"* %20 to i16*
  %29 = zext i32 %5 to i64
  %30 = getelementptr inbounds i16, i16* %28, i64 %29
  %31 = load i16, i16* %30, align 2
  br label %32

32:                                               ; preds = %21, %27
  %33 = phi i16 [ %26, %21 ], [ %31, %27 ]
  %34 = zext i16 %33 to i32
  switch i16 %33, label %35 [
    i16 9, label %42
    i16 10, label %46
    i16 32, label %46
    i16 160, label %46
  ]

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 8
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp ne i8 %37, 0
  %39 = add nsw i32 %34, -9
  %40 = icmp ult i32 %39, 5
  %41 = and i1 %40, %38
  br label %46

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 9
  %44 = load i8, i8* %43, align 2, !range !2
  %45 = icmp eq i8 %44, 0
  br label %46

46:                                               ; preds = %35, %32, %32, %32, %3, %11, %42
  %47 = phi i32 [ %34, %42 ], [ 0, %11 ], [ 0, %3 ], [ %34, %35 ], [ %34, %32 ], [ %34, %32 ], [ %34, %32 ]
  %48 = phi i16 [ 9, %42 ], [ 0, %11 ], [ 0, %3 ], [ %33, %35 ], [ %33, %32 ], [ %33, %32 ], [ %33, %32 ]
  %49 = phi i1 [ %45, %42 ], [ false, %11 ], [ false, %3 ], [ %41, %35 ], [ true, %32 ], [ true, %32 ], [ true, %32 ]
  %50 = icmp ne i16 %48, 160
  %51 = and i1 %49, %50
  %52 = select i1 %51, i32 32, i32 %47
  %53 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 1
  %54 = load float, float* %53, align 8
  %55 = fcmp une float %54, 0.000000e+00
  br i1 %55, label %56, label %68

56:                                               ; preds = %46
  %57 = trunc i32 %52 to i16
  switch i16 %57, label %58 [
    i16 8203, label %68
    i16 173, label %68
    i16 13, label %68
    i16 12, label %68
  ]

58:                                               ; preds = %56
  %59 = and i32 %52, 65534
  %60 = icmp eq i32 %59, 8206
  br i1 %60, label %68, label %61

61:                                               ; preds = %58
  %62 = trunc i32 %52 to i16
  switch i16 %62, label %63 [
    i16 -257, label %68
    i16 8238, label %68
    i16 8237, label %68
    i16 8236, label %68
    i16 8235, label %68
    i16 8234, label %68
    i16 -4, label %68
  ]

63:                                               ; preds = %61
  %64 = or i32 %52, 1
  %65 = icmp eq i32 %64, 8205
  %66 = fadd float %54, 0.000000e+00
  %67 = select i1 %65, float 0.000000e+00, float %66
  br label %68

68:                                               ; preds = %63, %61, %61, %61, %61, %61, %61, %61, %58, %56, %56, %56, %56, %46
  %69 = phi float [ 0.000000e+00, %46 ], [ 0.000000e+00, %56 ], [ 0.000000e+00, %56 ], [ 0.000000e+00, %56 ], [ 0.000000e+00, %56 ], [ 0.000000e+00, %58 ], [ 0.000000e+00, %61 ], [ 0.000000e+00, %61 ], [ 0.000000e+00, %61 ], [ 0.000000e+00, %61 ], [ 0.000000e+00, %61 ], [ 0.000000e+00, %61 ], [ 0.000000e+00, %61 ], [ %67, %63 ]
  br i1 %49, label %70, label %82

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 11
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp ne i8 %72, 0
  %74 = icmp ne i32 %5, 0
  %75 = or i1 %74, %73
  %76 = icmp eq i32 %52, 160
  %77 = or i1 %76, %75
  br i1 %77, label %78, label %82

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 2
  %80 = load float, float* %79, align 4
  %81 = fadd float %69, %80
  br label %82

82:                                               ; preds = %70, %78, %68
  %83 = phi float [ %81, %78 ], [ %69, %70 ], [ %69, %68 ]
  %84 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %214, label %87

87:                                               ; preds = %82
  br i1 %49, label %88, label %104

88:                                               ; preds = %87
  %89 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 10
  store i8 1, i8* %89, align 1
  %90 = add i32 %85, -1
  store i32 %90, i32* %84, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %94 = load float, float* %93, align 8
  store float 0.000000e+00, float* %93, align 8
  br label %101

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 4
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %99 = load float, float* %98, align 8
  %100 = fsub float %99, %97
  store float %100, float* %98, align 8
  br label %101

101:                                              ; preds = %92, %95
  %102 = phi float [ %97, %95 ], [ %94, %92 ]
  %103 = fadd float %83, %102
  br label %214

104:                                              ; preds = %87
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %214

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 6
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %214

113:                                              ; preds = %109
  %114 = and i32 %52, 64512
  %115 = icmp eq i32 %114, 55296
  br i1 %115, label %116, label %155

116:                                              ; preds = %113
  %117 = add i32 %5, 1
  br i1 %10, label %155, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp ult i32 %117, %120
  br i1 %121, label %122, label %155

122:                                              ; preds = %118
  %123 = load atomic i32, i32* %105 monotonic, align 4
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  br i1 %125, label %127, label %155

127:                                              ; preds = %122
  %128 = bitcast %"class.WTF::StringImpl"* %126 to i16*
  %129 = zext i32 %117 to i64
  %130 = getelementptr inbounds i16, i16* %128, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = and i16 %131, -1024
  %133 = icmp eq i16 %132, -9216
  br i1 %133, label %134, label %155

134:                                              ; preds = %127
  %135 = shl nuw nsw i32 %52, 10
  %136 = load atomic i32, i32* %105 monotonic, align 4
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %134
  %140 = bitcast %"class.WTF::StringImpl"* %126 to i8*
  %141 = zext i32 %117 to i64
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  br label %150

145:                                              ; preds = %134
  %146 = bitcast %"class.WTF::StringImpl"* %126 to i16*
  %147 = zext i32 %117 to i64
  %148 = getelementptr inbounds i16, i16* %146, i64 %147
  %149 = load i16, i16* %148, align 2
  br label %150

150:                                              ; preds = %139, %145
  %151 = phi i16 [ %144, %139 ], [ %149, %145 ]
  %152 = zext i16 %151 to i32
  %153 = add nsw i32 %135, -56613888
  %154 = add nsw i32 %153, %152
  br label %155

155:                                              ; preds = %122, %116, %150, %127, %118, %113
  %156 = phi i32 [ %154, %150 ], [ %47, %127 ], [ %47, %118 ], [ %47, %113 ], [ %47, %116 ], [ %47, %122 ]
  %157 = icmp slt i32 %156, 711
  br i1 %157, label %158, label %160

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 10
  br label %163

160:                                              ; preds = %155
  %161 = tail call zeroext i1 @_ZN5blink9Character26IsCJKIdeographOrSymbolSlowEi(i32 %156) #3
  %162 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 10
  br i1 %161, label %165, label %163

163:                                              ; preds = %158, %160
  %164 = phi i8* [ %159, %158 ], [ %162, %160 ]
  store i8 0, i8* %164, align 1
  br label %214

165:                                              ; preds = %160
  %166 = load i8, i8* %162, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  %168 = load i32, i32* %84, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %167, label %170, label %195

170:                                              ; preds = %165
  br i1 %169, label %214, label %171

171:                                              ; preds = %170
  store i8 1, i8* %162, align 1
  %172 = add i32 %168, -1
  store i32 %172, i32* %84, align 8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %176 = load float, float* %175, align 8
  store float 0.000000e+00, float* %175, align 8
  br label %183

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 4
  %179 = load float, float* %178, align 4
  %180 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %181 = load float, float* %180, align 8
  %182 = fsub float %181, %179
  store float %182, float* %180, align 8
  br label %183

183:                                              ; preds = %174, %177
  %184 = phi float [ %179, %177 ], [ %176, %174 ]
  %185 = fcmp une float %184, 0.000000e+00
  br i1 %185, label %186, label %191

186:                                              ; preds = %183
  %187 = load float, float* %2, align 4
  %188 = fadd float %184, %187
  store float %188, float* %2, align 4
  %189 = fadd float %83, %184
  %190 = load i32, i32* %84, align 8
  br label %191

191:                                              ; preds = %186, %183
  %192 = phi i32 [ %190, %186 ], [ %172, %183 ]
  %193 = phi float [ %189, %186 ], [ %83, %183 ]
  %194 = icmp eq i32 %192, 0
  br i1 %194, label %214, label %196

195:                                              ; preds = %165
  br i1 %169, label %210, label %196

196:                                              ; preds = %191, %195
  %197 = phi float [ %83, %195 ], [ %193, %191 ]
  %198 = phi i32 [ %168, %195 ], [ %192, %191 ]
  store i8 1, i8* %162, align 1
  %199 = add i32 %198, -1
  store i32 %199, i32* %84, align 8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %203 = load float, float* %202, align 8
  store float 0.000000e+00, float* %202, align 8
  br label %210

204:                                              ; preds = %196
  %205 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 4
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %208 = load float, float* %207, align 8
  %209 = fsub float %208, %206
  store float %209, float* %207, align 8
  br label %210

210:                                              ; preds = %195, %201, %204
  %211 = phi float [ %197, %204 ], [ %197, %201 ], [ %83, %195 ]
  %212 = phi float [ %206, %204 ], [ %203, %201 ], [ 0.000000e+00, %195 ]
  %213 = fadd float %211, %212
  br label %214

214:                                              ; preds = %170, %191, %104, %82, %109, %210, %163, %101
  %215 = phi float [ %103, %101 ], [ %213, %210 ], [ %193, %191 ], [ %83, %163 ], [ %83, %82 ], [ %83, %109 ], [ %83, %104 ], [ %83, %170 ]
  ret float %215
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden float @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE13NextExpansionEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 10
  store i8 1, i8* %6, align 1
  %7 = add i32 %3, -1
  store i32 %7, i32* %2, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %11 = load float, float* %10, align 8
  store float 0.000000e+00, float* %10, align 8
  br label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 4
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 3
  %16 = load float, float* %15, align 8
  %17 = fsub float %16, %14
  store float %17, float* %15, align 8
  br label %18

18:                                               ; preds = %1, %12, %9
  %19 = phi float [ %14, %12 ], [ %11, %9 ], [ 0.000000e+00, %1 ]
  ret float %19
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink18ShapeResultSpacingIN3WTF6StringEE16IsAfterExpansionEv(%"class.blink::ShapeResultSpacing.25"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultSpacing.25", %"class.blink::ShapeResultSpacing.25"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ShapeResultSpacingINS_7TextRunEE22SetSpacingAndExpansionERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing"* nocapture, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 8
  %5 = load float, float* %4, align 8
  %6 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 1
  store float %5, float* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 9
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 2
  store float %8, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 0
  %11 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 4
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 3
  store float %13, float* %14, align 8
  %15 = fcmp une float %5, 0.000000e+00
  %16 = fcmp une float %8, 0.000000e+00
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 7
  store i8 1, i8* %19, align 8
  br label %24

20:                                               ; preds = %2
  %21 = fcmp une float %13, 0.000000e+00
  %22 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 7
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 8
  br i1 %21, label %24, label %91

24:                                               ; preds = %18, %20
  %25 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 5
  %26 = load i16, i16* %25, align 8
  %27 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 8
  %28 = lshr i16 %26, 9
  %29 = trunc i16 %28 to i8
  %30 = and i8 %29, 1
  store i8 %30, i8* %27, align 1
  %31 = load i16, i16* %25, align 8
  %32 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 9
  %33 = lshr i16 %31, 3
  %34 = trunc i16 %33 to i8
  %35 = and i8 %34, 1
  store i8 %35, i8* %32, align 2
  %36 = fcmp une float %13, 0.000000e+00
  br i1 %36, label %37, label %91

37:                                               ; preds = %24
  %38 = load i16, i16* %25, align 8
  %39 = and i16 %38, 1
  %40 = icmp ne i16 %39, 0
  %41 = lshr i16 %38, 4
  %42 = trunc i16 %41 to i8
  %43 = and i8 %42, 1
  %44 = lshr i16 %38, 7
  %45 = and i16 %44, 3
  %46 = zext i16 %45 to i32
  %47 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 6
  store i32 %46, i32* %47, align 4
  %48 = icmp eq i16 %45, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  store i32 0, i32* %50, align 8
  br label %91

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 10
  %53 = lshr i16 %38, 1
  %54 = trunc i16 %53 to i8
  %55 = and i8 %54, 1
  %56 = xor i8 %55, 1
  store i8 %56, i8* %52, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #3
  store i8 %56, i8* %3, align 1
  %57 = load i16, i16* %25, align 8
  %58 = and i16 %57, 4
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %65, i8* %62, i8 zeroext %43, i8* nonnull dereferenceable(1) %3, i32 %46) #3
  br label %74

67:                                               ; preds = %51
  %68 = bitcast %"class.blink::TextRun"* %11 to i16**
  %69 = load i16*, i16** %68, align 8
  %70 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %72, i16* %69, i8 zeroext %43, i8* nonnull dereferenceable(1) %3, i32 %46) #3
  br label %74

74:                                               ; preds = %67, %60
  %75 = phi i32 [ %73, %67 ], [ %66, %60 ]
  %76 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 5
  store i32 %75, i32* %76, align 8
  %77 = load i8, i8* %3, align 1, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = or i1 %40, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %74
  %81 = add i32 %75, -1
  store i32 %81, i32* %76, align 8
  br label %82

82:                                               ; preds = %80, %74
  %83 = phi i32 [ %75, %74 ], [ %81, %80 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load float, float* %14, align 8
  %87 = uitofp i32 %83 to float
  %88 = fdiv float %86, %87
  %89 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %0, i64 0, i32 4
  store float %88, float* %89, align 4
  br label %90

90:                                               ; preds = %85, %82
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #3
  br label %91

91:                                               ; preds = %90, %49, %20, %24
  ret void
}

declare zeroext i1 @_ZN5blink9Character26IsCJKIdeographOrSymbolSlowEi(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
