; ModuleID = 'gen/third_party/blink/public/mojom/service_worker/controller_service_worker.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/service_worker/controller_service_worker.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter" = type { %"class.blink::mojom::blink::ControllerServiceWorker"* }
%"class.blink::mojom::blink::ControllerServiceWorker" = type { i32 (...)** }
%"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter" = type { %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* }
%"class.blink::mojom::blink::ControllerServiceWorkerConnector" = type { i32 (...)** }
%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting" = type { %"class.blink::mojom::blink::ControllerServiceWorker" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DispatchFetchEventParams"* }
%"class.blink::mojom::blink::DispatchFetchEventParams" = type <{ %"class.mojo::StructPtr.0", %"class.WTF::String", %"class.mojo::StructPtr.40", %"class.mojo::PendingRemote.49", i8, [7 x i8] }>
%"class.mojo::StructPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::mojom::blink::FetchAPIRequest"* }
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap", %class.scoped_refptr.9, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.25", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.32", i8, i8, i8, %"class.WTF::String" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.5" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::KURL"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.9 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.15, %"class.mojo::PendingRemote.24" }
%class.scoped_refptr.15 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector", i64, %"class.WTF::Vector.16", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.16", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.9, i64, i64, %"class.absl::optional", %class.scoped_refptr.21 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.21 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.24" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::StructPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::mojom::blink::FetchEventPreloadHandle"* }
%"class.blink::mojom::blink::FetchEventPreloadHandle" = type { %"class.mojo::PendingRemote.44", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.44" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.53", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.56, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.53" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.55", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.56 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.57" }>
%"class.base::RefCountedThreadSafe.57" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.49" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.58" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::PendingReceiver.68" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.59", i32, %"class.absl::optional.59" }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.66 }
%union.anon.66 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::PendingRemote.69" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.82, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.75", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.77" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.82 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.84", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.85" }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting" = type { %"class.blink::mojom::blink::ControllerServiceWorkerConnector" }
%"class.mojo::PendingRemote.90" = type { %"struct.mojo::internal::PendingRemoteState" }

$_ZN5blink5mojom5blink23ControllerServiceWorkerD2Ev = comdat any

$_ZN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink32ControllerServiceWorkerConnectorD2Ev = comdat any

$_ZN5blink5mojom5blink53ControllerServiceWorkerConnectorInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [33 x i8] c"DispatchFetchEventForSubresource\00", align 1
@.str.1 = private unnamed_addr constant [102 x i8] c"gen/third_party/blink/public/mojom/service_worker/controller_service_worker.mojom-blink-test-utils.cc\00", align 1
@_ZTVN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ControllerServiceWorker"*)* @_ZN5blink5mojom5blink23ControllerServiceWorkerD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)* @_ZN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTesting32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS1_24DispatchFetchEventParamsEEENS3_13PendingRemoteINS1_34ServiceWorkerFetchResponseCallbackEEEN4base12OnceCallbackIFvNS0_24ServiceWorkerEventStatusEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)* @_ZN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTesting5CloneEN4mojo15PendingReceiverINS1_23ControllerServiceWorkerEEERKN7network25CrossOriginEmbedderPolicyENS3_13PendingRemoteINS7_5mojom5blink33CrossOriginEmbedderPolicyReporterEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink53ControllerServiceWorkerConnectorInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*)* @_ZN5blink5mojom5blink32ControllerServiceWorkerConnectorD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)* @_ZN5blink5mojom5blink53ControllerServiceWorkerConnectorInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*, %"class.mojo::PendingRemote.90"*)* @_ZN5blink5mojom5blink53ControllerServiceWorkerConnectorInterceptorForTesting16UpdateControllerEN4mojo13PendingRemoteINS1_23ControllerServiceWorkerEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiterC1EPNS1_23ControllerServiceWorkerE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"*, %"class.blink::mojom::blink::ControllerServiceWorker"*), void (%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"*, %"class.blink::mojom::blink::ControllerServiceWorker"*)* @_ZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiterC2EPNS1_23ControllerServiceWorkerE
@_ZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"*), void (%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"*)* @_ZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiterD2Ev
@_ZN5blink5mojom5blink43ControllerServiceWorkerConnectorAsyncWaiterC1EPNS1_32ControllerServiceWorkerConnectorE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter"*, %"class.blink::mojom::blink::ControllerServiceWorkerConnector"*), void (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter"*, %"class.blink::mojom::blink::ControllerServiceWorkerConnector"*)* @_ZN5blink5mojom5blink43ControllerServiceWorkerConnectorAsyncWaiterC2EPNS1_32ControllerServiceWorkerConnectorE
@_ZN5blink5mojom5blink43ControllerServiceWorkerConnectorAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter"*), void (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter"*)* @_ZN5blink5mojom5blink43ControllerServiceWorkerConnectorAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTesting32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS1_24DispatchFetchEventParamsEEENS3_13PendingRemoteINS1_34ServiceWorkerFetchResponseCallbackEEEN4base12OnceCallbackIFvNS0_24ServiceWorkerEventStatusEEEE(%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.mojo::PendingRemote.58", align 4
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = bitcast %"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)**, %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)** %9, i64 4
  %11 = load %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::ControllerServiceWorker"* %11(%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"* %0) #10
  %13 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %14 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 0, i64* %15, align 8
  %17 = getelementptr inbounds %"class.mojo::PendingRemote.58", %"class.mojo::PendingRemote.58"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::PendingRemote.58", %"class.mojo::PendingRemote.58"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %18) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = bitcast %"class.blink::mojom::blink::ControllerServiceWorker"* %12 to void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)***
  %24 = load void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)** %24, i64 2
  %26 = load void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::ControllerServiceWorker"* %12, %"class.mojo::StructPtr"* nonnull %5, %"class.mojo::PendingRemote.58"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #10
  %28 = load %"class.blink::mojom::blink::DispatchFetchEventParams"*, %"class.blink::mojom::blink::DispatchFetchEventParams"** %14, align 8
  store %"class.blink::mojom::blink::DispatchFetchEventParams"* null, %"class.blink::mojom::blink::DispatchFetchEventParams"** %14, align 8
  %29 = icmp eq %"class.blink::mojom::blink::DispatchFetchEventParams"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink24DispatchFetchEventParamsD1Ev(%"class.blink::mojom::blink::DispatchFetchEventParams"* nonnull %28) #10
  %31 = bitcast %"class.blink::mojom::blink::DispatchFetchEventParams"* %28 to i8*
  call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %4, %30
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTesting5CloneEN4mojo15PendingReceiverINS1_23ControllerServiceWorkerEEERKN7network25CrossOriginEmbedderPolicyENS3_13PendingRemoteINS7_5mojom5blink33CrossOriginEmbedderPolicyReporterEEE(%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80), %"class.mojo::PendingRemote.69"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingReceiver.68", align 8
  %6 = alloca %"class.mojo::PendingRemote.69", align 4
  %7 = bitcast %"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)**, %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)** %8, i64 4
  %10 = load %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ControllerServiceWorker"* (%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::ControllerServiceWorker"* %10(%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver.68", %"class.mojo::PendingReceiver.68"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver.68", %"class.mojo::PendingReceiver.68"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %12, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %13) #10
  %14 = getelementptr inbounds %"class.mojo::PendingRemote.69", %"class.mojo::PendingRemote.69"* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.mojo::PendingRemote.69", %"class.mojo::PendingRemote.69"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %14, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %15) #10
  %16 = bitcast %"class.blink::mojom::blink::ControllerServiceWorker"* %11 to void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)***
  %17 = load void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)**, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)** %17, i64 3
  %19 = load void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::PendingReceiver.68"*, %"struct.network::CrossOriginEmbedderPolicy"*, %"class.mojo::PendingRemote.69"*)** %18, align 8
  call void %19(%"class.blink::mojom::blink::ControllerServiceWorker"* %11, %"class.mojo::PendingReceiver.68"* nonnull %5, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %2, %"class.mojo::PendingRemote.69"* nonnull %6) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %14) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %12) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiterC2EPNS1_23ControllerServiceWorkerE(%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ControllerServiceWorker"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter", %"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ControllerServiceWorker"* %1, %"class.blink::mojom::blink::ControllerServiceWorker"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiterD2Ev(%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS1_24DispatchFetchEventParamsEEENS3_13PendingRemoteINS1_34ServiceWorkerFetchResponseCallbackEEEPNS0_24ServiceWorkerEventStatusE(%"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, %"class.mojo::PendingRemote.58"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.mojo::PendingRemote.58", align 4
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = ptrtoint i32* %3 to i64
  %11 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %12 = getelementptr inbounds %"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter", %"class.blink::mojom::blink::ControllerServiceWorkerAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.blink::mojom::blink::ControllerServiceWorker"** %12, align 8
  %14 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = getelementptr inbounds %"class.mojo::PendingRemote.58", %"class.mojo::PendingRemote.58"* %7, i64 0, i32 0
  %19 = getelementptr inbounds %"class.mojo::PendingRemote.58", %"class.mojo::PendingRemote.58"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %18, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %19) #10
  %20 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %21 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS5_24DispatchFetchEventParamsEEENS7_13PendingRemoteINS5_34ServiceWorkerFetchResponseCallbackEEEPNS4_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS4_24DispatchFetchEventParamsEEENS6_13PendingRemoteINS4_34ServiceWorkerFetchResponseCallbackEEEPNS3_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %23 = getelementptr inbounds i8, i8* %21, i64 40
  %24 = bitcast i8* %23 to i64*
  store i64 %20, i64* %24, align 8, !noalias !2
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to i64*
  store i64 %10, i64* %26, align 8, !noalias !2
  %27 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %21, i8** %27, align 8, !alias.scope !2
  %28 = bitcast %"class.blink::mojom::blink::ControllerServiceWorker"* %13 to void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)***
  %29 = load void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)** %29, i64 2
  %31 = load void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorker"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote.58"*, %"class.base::OnceCallback"*)** %30, align 8
  call void %31(%"class.blink::mojom::blink::ControllerServiceWorker"* %13, %"class.mojo::StructPtr"* nonnull %6, %"class.mojo::PendingRemote.58"* nonnull %7, %"class.base::OnceCallback"* nonnull %8) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %18) #10
  %33 = load %"class.blink::mojom::blink::DispatchFetchEventParams"*, %"class.blink::mojom::blink::DispatchFetchEventParams"** %15, align 8
  store %"class.blink::mojom::blink::DispatchFetchEventParams"* null, %"class.blink::mojom::blink::DispatchFetchEventParams"** %15, align 8
  %34 = icmp eq %"class.blink::mojom::blink::DispatchFetchEventParams"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink24DispatchFetchEventParamsD1Ev(%"class.blink::mojom::blink::DispatchFetchEventParams"* nonnull %33) #10
  %36 = bitcast %"class.blink::mojom::blink::DispatchFetchEventParams"* %33 to i8*
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.1, i64 0, i64 0), i32 67) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink53ControllerServiceWorkerConnectorInterceptorForTesting16UpdateControllerEN4mojo13PendingRemoteINS1_23ControllerServiceWorkerEEE(%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*, %"class.mojo::PendingRemote.90"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote.90", align 4
  %4 = bitcast %"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)**, %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)*, %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)*, %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* (%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* %7(%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingRemote.90", %"class.mojo::PendingRemote.90"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.90", %"class.mojo::PendingRemote.90"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #10
  %11 = bitcast %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* %8 to void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*, %"class.mojo::PendingRemote.90"*)***
  %12 = load void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*, %"class.mojo::PendingRemote.90"*)**, void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*, %"class.mojo::PendingRemote.90"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*, %"class.mojo::PendingRemote.90"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*, %"class.mojo::PendingRemote.90"*)** %12, i64 2
  %14 = load void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*, %"class.mojo::PendingRemote.90"*)*, void (%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*, %"class.mojo::PendingRemote.90"*)** %13, align 8
  call void %14(%"class.blink::mojom::blink::ControllerServiceWorkerConnector"* %8, %"class.mojo::PendingRemote.90"* nonnull %3) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink43ControllerServiceWorkerConnectorAsyncWaiterC2EPNS1_32ControllerServiceWorkerConnectorE(%"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ControllerServiceWorkerConnector"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter", %"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ControllerServiceWorkerConnector"* %1, %"class.blink::mojom::blink::ControllerServiceWorkerConnector"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink43ControllerServiceWorkerConnectorAsyncWaiterD2Ev(%"class.blink::mojom::blink::ControllerServiceWorkerConnectorAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink23ControllerServiceWorkerD2Ev(%"class.blink::mojom::blink::ControllerServiceWorker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink44ControllerServiceWorkerInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ControllerServiceWorkerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink32ControllerServiceWorkerConnectorD2Ev(%"class.blink::mojom::blink::ControllerServiceWorkerConnector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink53ControllerServiceWorkerConnectorInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ControllerServiceWorkerConnectorInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink24DispatchFetchEventParamsD1Ev(%"class.blink::mojom::blink::DispatchFetchEventParams"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS5_24DispatchFetchEventParamsEEENS7_13PendingRemoteINS5_34ServiceWorkerFetchResponseCallbackEEEPNS4_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS4_24DispatchFetchEventParamsEEENS6_13PendingRemoteINS4_34ServiceWorkerFetchResponseCallbackEEEPNS3_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS5_24DispatchFetchEventParamsEEENS7_13PendingRemoteINS5_34ServiceWorkerFetchResponseCallbackEEEPNS4_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS5_24DispatchFetchEventParamsEEENS7_13PendingRemoteINS5_34ServiceWorkerFetchResponseCallbackEEEPNS4_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS3_24DispatchFetchEventParamsEEENS5_13PendingRemoteINS3_34ServiceWorkerFetchResponseCallbackEEEPNS2_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink34ControllerServiceWorkerAsyncWaiter32DispatchFetchEventForSubresourceEN4mojo9StructPtrINS3_24DispatchFetchEventParamsEEENS5_13PendingRemoteINS3_34ServiceWorkerFetchResponseCallbackEEEPNS2_24ServiceWorkerEventStatusEE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
