; ModuleID = '../../gpu/command_buffer/service/raster_cmd_validation.cc'
source_filename = "../../gpu/command_buffer/service/raster_cmd_validation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gpu::raster::Validators" = type { %"class.gpu::ValueValidator", %"class.gpu::raster::Validators::QueryObjectParameterValidator", %"class.gpu::raster::Validators::QueryTargetValidator", %"class.gpu::raster::Validators::ResetStatusValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator.1", %"class.gpu::ValueValidator.9" }
%"class.gpu::raster::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::raster::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::raster::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.gpu::ValueValidator.1" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.gpu::ValueValidator.9" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3gpu14ValueValidatorIjEC2EPKji = comdat any

@_ZN3gpu6rasterL21valid_g_l_state_tableE = internal constant [1 x i32] [i32 34016], align 4
@_ZN3gpu6rasterL35valid_texture_mag_filter_mode_tableE = internal constant [1 x i32] [i32 9728], align 4
@_ZN3gpu6rasterL35valid_texture_min_filter_mode_tableE = internal constant [1 x i32] [i32 9728], align 4
@_ZN3gpu6rasterL29valid_texture_parameter_tableE = internal constant [4 x i32] [i32 10240, i32 10241, i32 10242, i32 10243], align 16
@_ZN3gpu6rasterL29valid_texture_wrap_mode_tableE = internal constant [1 x i32] [i32 33071], align 4
@_ZN3gpu6rasterL28valid_gfx_buffer_usage_tableE = internal unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 7], align 4
@_ZN3gpu6rasterL31valid_viz_resource_format_tableE = internal unnamed_addr constant [19 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8, i32 9, i32 10, i32 11, i32 12, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20], align 16

@_ZN3gpu6raster10ValidatorsC1Ev = hidden unnamed_addr alias void (%"struct.gpu::raster::Validators"*), void (%"struct.gpu::raster::Validators"*)* @_ZN3gpu6raster10ValidatorsC2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3gpu6raster10Validators29QueryObjectParameterValidator7IsValidEj(%"class.gpu::raster::Validators::QueryObjectParameterValidator"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %3 = add i32 %1, -34918
  %4 = icmp ult i32 %3, 3
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3gpu6raster10Validators20QueryTargetValidator7IsValidEj(%"class.gpu::raster::Validators::QueryTargetValidator"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %3 [
    i32 24580, label %4
    i32 24581, label %4
    i32 34039, label %4
  ]

3:                                                ; preds = %2
  br label %4

4:                                                ; preds = %2, %2, %2, %3
  %5 = phi i1 [ false, %3 ], [ true, %2 ], [ true, %2 ], [ true, %2 ]
  ret i1 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3gpu6raster10Validators20ResetStatusValidator7IsValidEj(%"class.gpu::raster::Validators::ResetStatusValidator"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %3 = add i32 %1, -33363
  %4 = icmp ult i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu6raster10ValidatorsC2Ev(%"struct.gpu::raster::Validators"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 0
  tail call void @_ZN3gpu14ValueValidatorIjEC2EPKji(%"class.gpu::ValueValidator"* %2, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @_ZN3gpu6rasterL21valid_g_l_state_tableE, i64 0, i64 0), i32 1)
  %3 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 4
  tail call void @_ZN3gpu14ValueValidatorIjEC2EPKji(%"class.gpu::ValueValidator"* %3, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @_ZN3gpu6rasterL35valid_texture_mag_filter_mode_tableE, i64 0, i64 0), i32 1)
  %4 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 5
  tail call void @_ZN3gpu14ValueValidatorIjEC2EPKji(%"class.gpu::ValueValidator"* %4, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @_ZN3gpu6rasterL35valid_texture_min_filter_mode_tableE, i64 0, i64 0), i32 1)
  %5 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 6
  tail call void @_ZN3gpu14ValueValidatorIjEC2EPKji(%"class.gpu::ValueValidator"* %5, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZN3gpu6rasterL29valid_texture_parameter_tableE, i64 0, i64 0), i32 4)
  %6 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 7
  tail call void @_ZN3gpu14ValueValidatorIjEC2EPKji(%"class.gpu::ValueValidator"* %6, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @_ZN3gpu6rasterL29valid_texture_wrap_mode_tableE, i64 0, i64 0), i32 1)
  %7 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 8
  %8 = bitcast %"class.gpu::ValueValidator.1"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #7
  %9 = getelementptr inbounds %"class.gpu::ValueValidator.1", %"class.gpu::ValueValidator.1"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32** %10 to i64*
  %13 = bitcast %"class.gpu::ValueValidator.1"* %7 to i64*
  %14 = bitcast i32** %11 to i64*
  br label %15

15:                                               ; preds = %93, %1
  %16 = phi i64 [ 0, %1 ], [ %96, %93 ]
  %17 = phi i32* [ null, %1 ], [ %95, %93 ]
  %18 = phi i32* [ null, %1 ], [ %94, %93 ]
  %19 = phi i64 [ 0, %1 ], [ %91, %93 ]
  %20 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZN3gpu6rasterL28valid_gfx_buffer_usage_tableE, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32* %18, %17
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %27
  %24 = phi i32* [ %28, %27 ], [ %18, %15 ]
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, %21
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds i32, i32* %24, i64 1
  %29 = icmp eq i32* %28, %17
  br i1 %29, label %32, label %23

30:                                               ; preds = %23
  %31 = icmp eq i32* %24, %17
  br i1 %31, label %32, label %90

32:                                               ; preds = %27, %30, %15
  %33 = load i32*, i32** %11, align 8
  %34 = icmp eq i32* %17, %33
  %35 = ptrtoint i32* %33 to i64
  br i1 %34, label %39, label %36

36:                                               ; preds = %32
  store i32 %21, i32* %17, align 4
  %37 = getelementptr inbounds i32, i32* %17, i64 1
  %38 = ptrtoint i32* %37 to i64
  store i64 %38, i64* %12, align 8
  br label %90

39:                                               ; preds = %32
  %40 = ptrtoint i32* %17 to i64
  %41 = sub i64 %40, %16
  %42 = ashr exact i64 %41, 2
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 4611686018427387903
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = bitcast %"class.gpu::ValueValidator.1"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #8
  unreachable

47:                                               ; preds = %39
  %48 = sub i64 %35, %16
  %49 = ashr exact i64 %48, 2
  %50 = icmp ult i64 %49, 2305843009213693951
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = ashr exact i64 %48, 1
  %53 = icmp ult i64 %52, %43
  %54 = select i1 %53, i64 %43, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  tail call void @abort() #8
  unreachable

59:                                               ; preds = %56, %47
  %60 = phi i64 [ %54, %56 ], [ 4611686018427387903, %47 ]
  %61 = shl i64 %60, 2
  %62 = tail call i8* @_Znwm(i64 %61) #9
  %63 = bitcast i8* %62 to i32*
  br label %64

64:                                               ; preds = %59, %51
  %65 = phi i64 [ %60, %59 ], [ 0, %51 ]
  %66 = phi i32* [ %63, %59 ], [ null, %51 ]
  %67 = getelementptr inbounds i32, i32* %66, i64 %42
  %68 = getelementptr inbounds i32, i32* %66, i64 %65
  %69 = ptrtoint i32* %68 to i64
  store i32 %21, i32* %67, align 4
  %70 = getelementptr inbounds i32, i32* %67, i64 1
  %71 = ptrtoint i32* %70 to i64
  %72 = load i32*, i32** %9, align 8
  %73 = load i64, i64* %12, align 8
  %74 = ptrtoint i32* %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 2
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds i32, i32* %67, i64 %77
  %79 = ptrtoint i32* %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %64
  %82 = bitcast i32* %78 to i8*
  %83 = bitcast i32* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 %75, i1 false) #7
  %84 = load i32*, i32** %9, align 8
  br label %85

85:                                               ; preds = %81, %64
  %86 = phi i32* [ %72, %64 ], [ %84, %81 ]
  store i64 %79, i64* %13, align 8
  store i64 %71, i64* %12, align 8
  store i64 %69, i64* %14, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = bitcast i32* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %88, %85, %36, %30
  %91 = add nuw nsw i64 %19, 1
  %92 = icmp eq i64 %91, 3
  br i1 %92, label %97, label %93

93:                                               ; preds = %90
  %94 = load i32*, i32** %9, align 8
  %95 = load i32*, i32** %10, align 8
  %96 = ptrtoint i32* %94 to i64
  br label %15

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 9
  %99 = bitcast %"class.gpu::ValueValidator.9"* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #7
  %100 = getelementptr inbounds %"class.gpu::ValueValidator.9", %"class.gpu::ValueValidator.9"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %102 = getelementptr inbounds %"struct.gpu::raster::Validators", %"struct.gpu::raster::Validators"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast i32** %101 to i64*
  %104 = bitcast %"class.gpu::ValueValidator.9"* %98 to i64*
  %105 = bitcast i32** %102 to i64*
  br label %106

106:                                              ; preds = %184, %97
  %107 = phi i64 [ 0, %97 ], [ %187, %184 ]
  %108 = phi i32* [ null, %97 ], [ %186, %184 ]
  %109 = phi i32* [ null, %97 ], [ %185, %184 ]
  %110 = phi i64 [ 0, %97 ], [ %182, %184 ]
  %111 = getelementptr inbounds [19 x i32], [19 x i32]* @_ZN3gpu6rasterL31valid_viz_resource_format_tableE, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32* %109, %108
  br i1 %113, label %123, label %114

114:                                              ; preds = %106, %118
  %115 = phi i32* [ %119, %118 ], [ %109, %106 ]
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, %112
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds i32, i32* %115, i64 1
  %120 = icmp eq i32* %119, %108
  br i1 %120, label %123, label %114

121:                                              ; preds = %114
  %122 = icmp eq i32* %115, %108
  br i1 %122, label %123, label %181

123:                                              ; preds = %118, %121, %106
  %124 = load i32*, i32** %102, align 8
  %125 = icmp eq i32* %108, %124
  %126 = ptrtoint i32* %124 to i64
  br i1 %125, label %130, label %127

127:                                              ; preds = %123
  store i32 %112, i32* %108, align 4
  %128 = getelementptr inbounds i32, i32* %108, i64 1
  %129 = ptrtoint i32* %128 to i64
  store i64 %129, i64* %103, align 8
  br label %181

130:                                              ; preds = %123
  %131 = ptrtoint i32* %108 to i64
  %132 = sub i64 %131, %107
  %133 = ashr exact i64 %132, 2
  %134 = add nsw i64 %133, 1
  %135 = icmp ugt i64 %134, 4611686018427387903
  br i1 %135, label %136, label %138

136:                                              ; preds = %130
  %137 = bitcast %"class.gpu::ValueValidator.9"* %98 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %137) #8
  unreachable

138:                                              ; preds = %130
  %139 = sub i64 %126, %107
  %140 = ashr exact i64 %139, 2
  %141 = icmp ult i64 %140, 2305843009213693951
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = ashr exact i64 %139, 1
  %144 = icmp ult i64 %143, %134
  %145 = select i1 %144, i64 %134, i64 %143
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %142
  %148 = icmp ugt i64 %145, 4611686018427387903
  br i1 %148, label %149, label %150

149:                                              ; preds = %147
  tail call void @abort() #8
  unreachable

150:                                              ; preds = %147, %138
  %151 = phi i64 [ %145, %147 ], [ 4611686018427387903, %138 ]
  %152 = shl i64 %151, 2
  %153 = tail call i8* @_Znwm(i64 %152) #9
  %154 = bitcast i8* %153 to i32*
  br label %155

155:                                              ; preds = %150, %142
  %156 = phi i64 [ %151, %150 ], [ 0, %142 ]
  %157 = phi i32* [ %154, %150 ], [ null, %142 ]
  %158 = getelementptr inbounds i32, i32* %157, i64 %133
  %159 = getelementptr inbounds i32, i32* %157, i64 %156
  %160 = ptrtoint i32* %159 to i64
  store i32 %112, i32* %158, align 4
  %161 = getelementptr inbounds i32, i32* %158, i64 1
  %162 = ptrtoint i32* %161 to i64
  %163 = load i32*, i32** %100, align 8
  %164 = load i64, i64* %103, align 8
  %165 = ptrtoint i32* %163 to i64
  %166 = sub i64 %164, %165
  %167 = ashr exact i64 %166, 2
  %168 = sub nsw i64 0, %167
  %169 = getelementptr inbounds i32, i32* %158, i64 %168
  %170 = ptrtoint i32* %169 to i64
  %171 = icmp sgt i64 %166, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %155
  %173 = bitcast i32* %169 to i8*
  %174 = bitcast i32* %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* align 4 %174, i64 %166, i1 false) #7
  %175 = load i32*, i32** %100, align 8
  br label %176

176:                                              ; preds = %172, %155
  %177 = phi i32* [ %163, %155 ], [ %175, %172 ]
  store i64 %170, i64* %104, align 8
  store i64 %162, i64* %103, align 8
  store i64 %160, i64* %105, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = bitcast i32* %177 to i8*
  tail call void @_ZdlPv(i8* %180) #9
  br label %181

181:                                              ; preds = %179, %176, %127, %121
  %182 = add nuw nsw i64 %110, 1
  %183 = icmp eq i64 %182, 19
  br i1 %183, label %188, label %184

184:                                              ; preds = %181
  %185 = load i32*, i32** %100, align 8
  %186 = load i32*, i32** %101, align 8
  %187 = ptrtoint i32* %185 to i64
  br label %106

188:                                              ; preds = %181
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu14ValueValidatorIjEC2EPKji(%"class.gpu::ValueValidator"*, i32*, i32) unnamed_addr #1 comdat align 2 {
  %4 = bitcast %"class.gpu::ValueValidator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %96

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.gpu::ValueValidator", %"class.gpu::ValueValidator"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gpu::ValueValidator", %"class.gpu::ValueValidator"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = zext i32 %2 to i64
  %10 = getelementptr inbounds %"class.gpu::ValueValidator", %"class.gpu::ValueValidator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast i32** %8 to i64*
  %12 = bitcast %"class.gpu::ValueValidator"* %0 to i64*
  %13 = bitcast i32** %10 to i64*
  br label %14

14:                                               ; preds = %92, %6
  %15 = phi i64 [ 0, %6 ], [ %95, %92 ]
  %16 = phi i32* [ null, %6 ], [ %94, %92 ]
  %17 = phi i32* [ null, %6 ], [ %93, %92 ]
  %18 = phi i64 [ 0, %6 ], [ %90, %92 ]
  %19 = getelementptr inbounds i32, i32* %1, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32* %17, %16
  br i1 %21, label %31, label %22

22:                                               ; preds = %14, %26
  %23 = phi i32* [ %27, %26 ], [ %17, %14 ]
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %20
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds i32, i32* %23, i64 1
  %28 = icmp eq i32* %27, %16
  br i1 %28, label %31, label %22

29:                                               ; preds = %22
  %30 = icmp eq i32* %23, %16
  br i1 %30, label %31, label %89

31:                                               ; preds = %26, %14, %29
  %32 = load i32*, i32** %10, align 8
  %33 = icmp eq i32* %16, %32
  %34 = ptrtoint i32* %32 to i64
  br i1 %33, label %38, label %35

35:                                               ; preds = %31
  store i32 %20, i32* %16, align 4
  %36 = getelementptr inbounds i32, i32* %16, i64 1
  %37 = ptrtoint i32* %36 to i64
  store i64 %37, i64* %11, align 8
  br label %89

38:                                               ; preds = %31
  %39 = ptrtoint i32* %16 to i64
  %40 = sub i64 %39, %15
  %41 = ashr exact i64 %40, 2
  %42 = add nsw i64 %41, 1
  %43 = icmp ugt i64 %42, 4611686018427387903
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = bitcast %"class.gpu::ValueValidator"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #8
  unreachable

46:                                               ; preds = %38
  %47 = sub i64 %34, %15
  %48 = ashr exact i64 %47, 2
  %49 = icmp ult i64 %48, 2305843009213693951
  br i1 %49, label %50, label %58

50:                                               ; preds = %46
  %51 = ashr exact i64 %47, 1
  %52 = icmp ult i64 %51, %42
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 4611686018427387903
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #8
  unreachable

58:                                               ; preds = %55, %46
  %59 = phi i64 [ %53, %55 ], [ 4611686018427387903, %46 ]
  %60 = shl i64 %59, 2
  %61 = tail call i8* @_Znwm(i64 %60) #9
  %62 = bitcast i8* %61 to i32*
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi i32* [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds i32, i32* %65, i64 %41
  %67 = getelementptr inbounds i32, i32* %65, i64 %64
  %68 = ptrtoint i32* %67 to i64
  store i32 %20, i32* %66, align 4
  %69 = getelementptr inbounds i32, i32* %66, i64 1
  %70 = ptrtoint i32* %69 to i64
  %71 = load i32*, i32** %7, align 8
  %72 = load i64, i64* %11, align 8
  %73 = ptrtoint i32* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 2
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds i32, i32* %66, i64 %76
  %78 = ptrtoint i32* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %63
  %81 = bitcast i32* %77 to i8*
  %82 = bitcast i32* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %74, i1 false) #7
  %83 = load i32*, i32** %7, align 8
  br label %84

84:                                               ; preds = %80, %63
  %85 = phi i32* [ %71, %63 ], [ %83, %80 ]
  store i64 %78, i64* %12, align 8
  store i64 %70, i64* %11, align 8
  store i64 %68, i64* %13, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = bitcast i32* %85 to i8*
  tail call void @_ZdlPv(i8* %88) #9
  br label %89

89:                                               ; preds = %87, %84, %35, %29
  %90 = add nuw nsw i64 %18, 1
  %91 = icmp eq i64 %90, %9
  br i1 %91, label %96, label %92

92:                                               ; preds = %89
  %93 = load i32*, i32** %7, align 8
  %94 = load i32*, i32** %8, align 8
  %95 = ptrtoint i32* %93 to i64
  br label %14

96:                                               ; preds = %89, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
