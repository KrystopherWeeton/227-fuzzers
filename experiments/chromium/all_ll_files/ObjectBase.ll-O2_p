; ModuleID = '../../third_party/dawn/src/dawn_native/ObjectBase.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/ObjectBase.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type opaque

$_ZN10RefCountedD2Ev = comdat any

$_ZN11dawn_native10ObjectBaseD0Ev = comdat any

$_ZTVN11dawn_native10ObjectBaseE = comdat any

@_ZTVN11dawn_native10ObjectBaseE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCountedD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::ObjectBase"*)* @_ZN11dawn_native10ObjectBaseD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*)] }, comdat, align 8

@_ZN11dawn_native10ObjectBaseC1EPNS_10DeviceBaseE = hidden unnamed_addr alias void (%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*), void (%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*)* @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseE
@_ZN11dawn_native10ObjectBaseC1EPNS_10DeviceBaseENS0_8ErrorTagE = hidden unnamed_addr alias void (%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*), void (%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*)* @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseENS0_8ErrorTagE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 0
  tail call void @_ZN10RefCountedC2Em(%class.RefCounted* %3, i64 1) #4
  %4 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11dawn_native10ObjectBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 1
  store %"class.dawn_native::DeviceBase"* %1, %"class.dawn_native::DeviceBase"** %5, align 8
  ret void
}

declare void @_ZN10RefCountedC2Em(%class.RefCounted*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseENS0_8ErrorTagE(%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 0
  tail call void @_ZN10RefCountedC2Em(%class.RefCounted* %3, i64 0) #4
  %4 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11dawn_native10ObjectBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 1
  store %"class.dawn_native::DeviceBase"* %1, %"class.dawn_native::DeviceBase"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 1
  %3 = load %"class.dawn_native::DeviceBase"*, %"class.dawn_native::DeviceBase"** %2, align 8
  ret %"class.dawn_native::DeviceBase"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native10ObjectBase7IsErrorEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ObjectBase", %"class.dawn_native::ObjectBase"* %0, i64 0, i32 0
  %3 = tail call i64 @_ZNK10RefCounted18GetRefCountPayloadEv(%class.RefCounted* %2) #4
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

declare i64 @_ZNK10RefCounted18GetRefCountPayloadEv(%class.RefCounted*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10RefCountedD2Ev(%class.RefCounted*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native10ObjectBaseD0Ev(%"class.dawn_native::ObjectBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.dawn_native::ObjectBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
