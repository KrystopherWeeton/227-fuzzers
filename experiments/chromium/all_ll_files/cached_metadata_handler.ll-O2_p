; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/cached_metadata_handler.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/cached_metadata_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CachedMetadataSenderImpl" = type <{ %"class.blink::CachedMetadataSender", %"class.blink::KURL", %"class.base::Time", i32, [4 x i8] }>
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional", %class.scoped_refptr.14, %class.scoped_refptr.15, %"struct.blink::CacheControlHeader", %"class.absl::optional.16", %"class.absl::optional.21", %"class.absl::optional.21", %"class.absl::optional.21", i64, %"class.blink::KURL", %"class.WTF::Vector.26", %"class.WTF::String", %"class.WTF::Vector", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.31", %"class.WTF::Vector", %"class.blink::KURL", %"class.absl::optional.36" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::String", i64, i64, %"class.WTF::Vector.4", %"class.WTF::Vector.9" }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.14 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.15 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.16", %"class.absl::optional.16" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.base::Time" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::KURL"*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.45" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.43 }
%union.anon.43 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::ServiceWorkerCachedMetadataSender" = type { %"class.blink::CachedMetadataSender", %"class.blink::KURL", %"class.base::Time", %"class.WTF::String", %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.45", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.50 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::NullCachedMetadataSender" = type { %"class.blink::CachedMetadataSender" }

$_ZN5blink24CachedMetadataSenderImplD2Ev = comdat any

$_ZN5blink24CachedMetadataSenderImplD0Ev = comdat any

$_ZN5blink24CachedMetadataSenderImpl24IsServedFromCacheStorageEv = comdat any

$_ZN5blink33ServiceWorkerCachedMetadataSenderD2Ev = comdat any

$_ZN5blink33ServiceWorkerCachedMetadataSenderD0Ev = comdat any

$_ZN5blink33ServiceWorkerCachedMetadataSender24IsServedFromCacheStorageEv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink20CachedMetadataSenderD2Ev = comdat any

$_ZN5blink24NullCachedMetadataSenderD0Ev = comdat any

$_ZN5blink24NullCachedMetadataSender4SendEPKhm = comdat any

$_ZN5blink24NullCachedMetadataSender24IsServedFromCacheStorageEv = comdat any

$_ZTVN5blink24NullCachedMetadataSenderE = comdat any

@_ZTVN5blink24CachedMetadataSenderImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CachedMetadataSenderImpl"*)* @_ZN5blink24CachedMetadataSenderImplD2Ev to i8*), i8* bitcast (void (%"class.blink::CachedMetadataSenderImpl"*)* @_ZN5blink24CachedMetadataSenderImplD0Ev to i8*), i8* bitcast (void (%"class.blink::CachedMetadataSenderImpl"*, i8*, i64)* @_ZN5blink24CachedMetadataSenderImpl4SendEPKhm to i8*), i8* bitcast (i1 (%"class.blink::CachedMetadataSenderImpl"*)* @_ZN5blink24CachedMetadataSenderImpl24IsServedFromCacheStorageEv to i8*)] }, align 8
@_ZTVN5blink33ServiceWorkerCachedMetadataSenderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ServiceWorkerCachedMetadataSender"*)* @_ZN5blink33ServiceWorkerCachedMetadataSenderD2Ev to i8*), i8* bitcast (void (%"class.blink::ServiceWorkerCachedMetadataSender"*)* @_ZN5blink33ServiceWorkerCachedMetadataSenderD0Ev to i8*), i8* bitcast (void (%"class.blink::ServiceWorkerCachedMetadataSender"*, i8*, i64)* @_ZN5blink33ServiceWorkerCachedMetadataSender4SendEPKhm to i8*), i8* bitcast (i1 (%"class.blink::ServiceWorkerCachedMetadataSender"*)* @_ZN5blink33ServiceWorkerCachedMetadataSender24IsServedFromCacheStorageEv to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"application/wasm\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_isolated_code_cache_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink24NullCachedMetadataSenderE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CachedMetadataSender"*)* @_ZN5blink20CachedMetadataSenderD2Ev to i8*), i8* bitcast (void (%"class.blink::NullCachedMetadataSender"*)* @_ZN5blink24NullCachedMetadataSenderD0Ev to i8*), i8* bitcast (void (%"class.blink::NullCachedMetadataSender"*, i8*, i64)* @_ZN5blink24NullCachedMetadataSender4SendEPKhm to i8*), i8* bitcast (i1 (%"class.blink::NullCachedMetadataSender"*)* @_ZN5blink24NullCachedMetadataSender24IsServedFromCacheStorageEv to i8*)] }, comdat, align 8

@_ZN5blink24CachedMetadataSenderImplC1ERKNS_16ResourceResponseENS_5mojom13CodeCacheTypeE = hidden unnamed_addr alias void (%"class.blink::CachedMetadataSenderImpl"*, %"class.blink::ResourceResponse"*, i32), void (%"class.blink::CachedMetadataSenderImpl"*, %"class.blink::ResourceResponse"*, i32)* @_ZN5blink24CachedMetadataSenderImplC2ERKNS_16ResourceResponseENS_5mojom13CodeCacheTypeE
@_ZN5blink33ServiceWorkerCachedMetadataSenderC1ERKNS_16ResourceResponseE13scoped_refptrIKNS_14SecurityOriginEE = hidden unnamed_addr alias void (%"class.blink::ServiceWorkerCachedMetadataSender"*, %"class.blink::ResourceResponse"*, %"class.blink::SecurityOrigin"*), void (%"class.blink::ServiceWorkerCachedMetadataSender"*, %"class.blink::ResourceResponse"*, %"class.blink::SecurityOrigin"*)* @_ZN5blink33ServiceWorkerCachedMetadataSenderC2ERKNS_16ResourceResponseE13scoped_refptrIKNS_14SecurityOriginEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CachedMetadataSenderImplC2ERKNS_16ResourceResponseENS_5mojom13CodeCacheTypeE(%"class.blink::CachedMetadataSenderImpl"*, %"class.blink::ResourceResponse"* dereferenceable(1072), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24CachedMetadataSenderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 1
  %6 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %1) #8
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %5, %"class.blink::KURL"* dereferenceable(112) %6) #8
  %7 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %1, i64 0, i32 54, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 3
  store i32 %2, i32* %10, align 8
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CachedMetadataSenderImpl4SendEPKhm(%"class.blink::CachedMetadataSenderImpl"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebURL", align 8
  %5 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #8
  %6 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.blink::WebURL"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 1
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %4, %"class.blink::KURL"* dereferenceable(112) %9) #8
  %10 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Platform"* %5 to void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)***
  %13 = load void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)**, void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)*, void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)** %13, i64 24
  %15 = load void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)*, void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)** %14, align 8
  call void %15(%"class.blink::Platform"* %5, i32 %7, %"class.blink::WebURL"* nonnull dereferenceable(96) %4, i64 %11, i8* %1, i64 %2) #8
  %16 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %16) #8
  %17 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #8
  ret void
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ServiceWorkerCachedMetadataSenderC2ERKNS_16ResourceResponseE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::ServiceWorkerCachedMetadataSender"*, %"class.blink::ResourceResponse"* dereferenceable(1072), %"class.blink::SecurityOrigin"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::SecurityOrigin"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink33ServiceWorkerCachedMetadataSenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %1) #8
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %6, %"class.blink::KURL"* dereferenceable(112) %7) #8
  %8 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %1, i64 0, i32 54, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %1, i64 0, i32 52, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #8
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #8
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %3
  %33 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 4
  %34 = bitcast %class.scoped_refptr.50* %33 to i64*
  store i64 %4, i64* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ServiceWorkerCachedMetadataSender4SendEPKhm(%"class.blink::ServiceWorkerCachedMetadataSender"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebURL", align 8
  %5 = alloca %"class.blink::WebSecurityOrigin", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #8
  %8 = bitcast %"class.blink::WebURL"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 1
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %4, %"class.blink::KURL"* dereferenceable(112) %9) #8
  %10 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::WebSecurityOrigin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 4, i32 0
  %14 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %13, align 8
  %15 = icmp eq %"class.blink::SecurityOrigin"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %17) #8
  br label %18

18:                                               ; preds = %3, %16
  call void @_ZN5blink17WebSecurityOriginC1E13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"* nonnull %5, %"class.blink::SecurityOrigin"* %14) #8
  %19 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 3
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %20) #8
  %21 = bitcast %"class.blink::Platform"* %7 to void (%"class.blink::Platform"*, %"class.blink::WebURL"*, i64, i8*, i64, %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"*)***
  %22 = load void (%"class.blink::Platform"*, %"class.blink::WebURL"*, i64, i8*, i64, %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"*)**, void (%"class.blink::Platform"*, %"class.blink::WebURL"*, i64, i8*, i64, %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Platform"*, %"class.blink::WebURL"*, i64, i8*, i64, %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"*)*, void (%"class.blink::Platform"*, %"class.blink::WebURL"*, i64, i8*, i64, %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"*)** %22, i64 27
  %24 = load void (%"class.blink::Platform"*, %"class.blink::WebURL"*, i64, i8*, i64, %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"*)*, void (%"class.blink::Platform"*, %"class.blink::WebURL"*, i64, i8*, i64, %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"*)** %23, align 8
  call void %24(%"class.blink::Platform"* %7, %"class.blink::WebURL"* nonnull dereferenceable(96) %4, i64 %11, i8* %1, i64 %2, %"class.blink::WebSecurityOrigin"* nonnull dereferenceable(8) %5, %"class.blink::WebString"* nonnull dereferenceable(8) %6) #8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %25 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %25) #8
  %26 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #8
  ret void
}

declare void @_ZN5blink17WebSecurityOriginC1E13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"*, %"class.blink::SecurityOrigin"*) unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CachedMetadataSender"* @_ZN5blink20CachedMetadataSender6CreateERKNS_16ResourceResponseENS_5mojom13CodeCacheTypeE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::ResourceResponse"* dereferenceable(1072), i32, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::SecurityOrigin"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 24
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  %8 = icmp eq i32 %1, 1
  %9 = or i1 %8, %7
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = tail call noalias i8* @malloc(i64 136) #8
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24CachedMetadataSenderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to %"class.blink::KURL"*
  %15 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %0) #8
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %14, %"class.blink::KURL"* dereferenceable(112) %15) #8
  %16 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 54, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 120
  %19 = bitcast i8* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 128
  %21 = bitcast i8* %20 to i32*
  store i32 %1, i32* %21, align 8
  br label %84

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 52, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %67, label %26

26:                                               ; preds = %22
  %27 = icmp eq %"class.blink::SecurityOrigin"* %2, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = tail call noalias i8* @malloc(i64 8) #8
  %30 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24NullCachedMetadataSenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = ptrtoint i8* %29 to i64
  br label %95

32:                                               ; preds = %26
  %33 = tail call noalias i8* @malloc(i64 144) #8
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink33ServiceWorkerCachedMetadataSenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = bitcast i8* %35 to %"class.blink::KURL"*
  %37 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %0) #8
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %36, %"class.blink::KURL"* dereferenceable(112) %37) #8
  %38 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 54, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds i8, i8* %33, i64 120
  %41 = bitcast i8* %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = getelementptr inbounds i8, i8* %33, i64 128
  %44 = bitcast i8* %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %32
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #8
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  tail call void @llvm.trap() #8
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %32, %46, %61
  %64 = getelementptr inbounds i8, i8* %33, i64 136
  %65 = bitcast i8* %64 to i64*
  store i64 %4, i64* %65, align 8
  %66 = ptrtoint i8* %33 to i64
  br label %95

67:                                               ; preds = %22
  %68 = tail call zeroext i1 @_ZNK5blink16ResourceResponse26IsServiceWorkerPassThroughEv(%"class.blink::ResourceResponse"* %0) #8
  br i1 %68, label %72, label %69

69:                                               ; preds = %67
  %70 = tail call noalias i8* @malloc(i64 8) #8
  %71 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24NullCachedMetadataSenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  br label %84

72:                                               ; preds = %67
  %73 = tail call noalias i8* @malloc(i64 136) #8
  %74 = bitcast i8* %73 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24CachedMetadataSenderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds i8, i8* %73, i64 8
  %76 = bitcast i8* %75 to %"class.blink::KURL"*
  %77 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %0) #8
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %76, %"class.blink::KURL"* dereferenceable(112) %77) #8
  %78 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 54, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds i8, i8* %73, i64 120
  %81 = bitcast i8* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %73, i64 128
  %83 = bitcast i8* %82 to i32*
  store i32 %1, i32* %83, align 8
  br label %84

84:                                               ; preds = %72, %69, %10
  %85 = phi i8* [ %11, %10 ], [ %73, %72 ], [ %70, %69 ]
  %86 = ptrtoint i8* %85 to i64
  %87 = icmp eq %"class.blink::SecurityOrigin"* %2, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #8
  %90 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %2) #8
  %94 = bitcast %"class.blink::SecurityOrigin"* %2 to i8*
  tail call void @free(i8* %94) #8
  br label %95

95:                                               ; preds = %28, %63, %84, %88, %93
  %96 = phi i64 [ %66, %63 ], [ %86, %84 ], [ %86, %88 ], [ %86, %93 ], [ %31, %28 ]
  %97 = inttoptr i64 %96 to %"class.blink::CachedMetadataSender"*
  ret %"class.blink::CachedMetadataSender"* %97
}

declare zeroext i1 @_ZNK5blink16ResourceResponse26IsServiceWorkerPassThroughEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26ShouldUseIsolatedCodeCacheENS_5mojom18RequestContextTypeERKNS_16ResourceResponseE(i32, %"class.blink::ResourceResponse"* dereferenceable(1072)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_isolated_code_cache_enabled_E, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %42, label %7

7:                                                ; preds = %2
  %8 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %1) #8
  %9 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %25

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

25:                                               ; preds = %17, %13
  %26 = phi i64 [ %24, %17 ], [ %15, %13 ]
  %27 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 16, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  br i1 %33, label %42, label %34

34:                                               ; preds = %25
  %35 = icmp eq i32 %0, 24
  br i1 %35, label %42, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %1, i64 0, i32 24
  %38 = load i8, i8* %37, align 1, !range !3
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = call zeroext i1 @_ZNK5blink16ResourceResponse26IsServiceWorkerPassThroughEv(%"class.blink::ResourceResponse"* %1) #8
  br label %42

42:                                               ; preds = %36, %2, %40, %34, %25
  %43 = phi i1 [ false, %2 ], [ true, %25 ], [ false, %34 ], [ true, %36 ], [ %41, %40 ]
  ret i1 %43
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CachedMetadataSenderImplD2Ev(%"class.blink::CachedMetadataSenderImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24CachedMetadataSenderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CachedMetadataSenderImplD0Ev(%"class.blink::CachedMetadataSenderImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24CachedMetadataSenderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CachedMetadataSenderImpl", %"class.blink::CachedMetadataSenderImpl"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #8
  %4 = bitcast %"class.blink::CachedMetadataSenderImpl"* %0 to i8*
  tail call void @free(i8* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink24CachedMetadataSenderImpl24IsServedFromCacheStorageEv(%"class.blink::CachedMetadataSenderImpl"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33ServiceWorkerCachedMetadataSenderD2Ev(%"class.blink::ServiceWorkerCachedMetadataSender"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink33ServiceWorkerCachedMetadataSenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %3, align 8
  %5 = icmp eq %"class.blink::SecurityOrigin"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %4) #8
  %12 = bitcast %"class.blink::SecurityOrigin"* %4 to i8*
  tail call void @free(i8* %12) #8
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #8
  br label %30

30:                                               ; preds = %13, %26, %29
  %31 = getelementptr inbounds %"class.blink::ServiceWorkerCachedMetadataSender", %"class.blink::ServiceWorkerCachedMetadataSender"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %31) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33ServiceWorkerCachedMetadataSenderD0Ev(%"class.blink::ServiceWorkerCachedMetadataSender"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink33ServiceWorkerCachedMetadataSenderD2Ev(%"class.blink::ServiceWorkerCachedMetadataSender"* %0) #8
  %2 = bitcast %"class.blink::ServiceWorkerCachedMetadataSender"* %0 to i8*
  tail call void @free(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink33ServiceWorkerCachedMetadataSender24IsServedFromCacheStorageEv(%"class.blink::ServiceWorkerCachedMetadataSender"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #8
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #8
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #8
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CachedMetadataSenderD2Ev(%"class.blink::CachedMetadataSender"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24NullCachedMetadataSenderD0Ev(%"class.blink::NullCachedMetadataSender"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::NullCachedMetadataSender"* %0 to i8*
  tail call void @free(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24NullCachedMetadataSender4SendEPKhm(%"class.blink::NullCachedMetadataSender"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink24NullCachedMetadataSender24IsServedFromCacheStorageEv(%"class.blink::NullCachedMetadataSender"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
