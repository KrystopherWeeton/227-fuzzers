; ModuleID = '../../third_party/skia/src/core/SkClipStackDevice.cpp'
source_filename = "../../third_party/skia/src/core/SkClipStackDevice.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkClipStackDevice = type { %class.SkBaseDevice, [320 x i64], %class.SkClipStack }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkMarkerStack = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%class.SkClipStack = type <{ %class.SkDeque, i32, %struct.SkRect, [4 x i8] }>
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%struct.SkRect = type { float, float, float, float }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%class.SkPath = type <{ %class.sk_sp.6, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.6 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.7, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.8, %class.SkTDArray.9, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.8 = type { i8*, i32, i32 }
%class.SkTDArray.9 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.10 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.10 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.sk_sp.15 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.SkClipStack::B2TIter" = type { %"class.SkClipStack::Iter" }
%"class.SkClipStack::Iter" = type { %class.SkClipStack*, %"class.SkDeque::Iter" }
%"class.SkDeque::Iter" = type { %"struct.SkDeque::Block"*, i8*, i64 }
%"class.SkClipStack::Element" = type { %class.SkTLazy, %class.SkRRect, %class.sk_sp.15, i32, i32, i32, i8, i32, %struct.SkRect, i8, i32, %class.GrProxyProvider*, %class.SkTArray }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.GrProxyProvider = type opaque
%class.SkTArray = type { %class.GrUniqueKey*, i64 }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.16, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.GrRecordingContext = type opaque
%class.GrSurfaceDrawContext = type opaque
%class.SkPaint = type <{ %class.sk_sp.18, %class.sk_sp.15, %class.sk_sp.19, %class.sk_sp.20, %class.sk_sp.21, %struct.SkRGBA4f, float, float, %union.anon.22, [4 x i8] }>
%class.sk_sp.18 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.19 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.20 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.21 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.22 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.SkDrawShadowRec = type opaque
%struct.SkRSXform = type { float, float, float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.23, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.23 = type { %class.SkImage* }
%class.SkDrawable = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.24, [384 x i64], %class.sk_sp.25, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.27" }
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.24 = type { %class.SkMarkerStack* }
%class.sk_sp.25 = type { %class.SkBaseDevice* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.48" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %struct.SkPoint* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.38" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.35, %class.SkSpan.36, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.34" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.34" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.35 = type { i32*, i64 }
%class.SkSpan.36 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.37, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.37 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.41, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.41 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.42, %struct.SkRect, i32, %"struct.std::__1::atomic.43" }
%class.SkNVRefCnt.42 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i32 }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { i16*, i16*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i16* }
%class.SkSpecialImage = type opaque
%"class.skif::Mapping" = type opaque
%class.sk_sp.58 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkBaseDevice::CreateInfo" = type { %struct.SkImageInfo, i32, i32, i8, %class.SkRasterHandleAllocator* }
%class.SkBitmap = type { %class.sk_sp.59, %class.SkPixmap, %class.sk_sp.60 }
%class.sk_sp.59 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.60 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkImageFilterCache = type opaque

$_ZN17SkClipStackDeviceD2Ev = comdat any

$_ZN17SkClipStackDeviceD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkBaseDevice15getRasterHandleEv = comdat any

$_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect = comdat any

$_ZN12SkBaseDevice29android_utils_clipWithStencilEv = comdat any

$_ZNK12SkBaseDevice16recordingContextEv = comdat any

$_ZN12SkBaseDevice18surfaceDrawContextEv = comdat any

$_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData = comdat any

$_ZN12SkBaseDevice12setImmutableEv = comdat any

$_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint = comdat any

$_ZNK12SkBaseDevice16isNoPixelsDeviceEv = comdat any

$_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap = comdat any

$_ZNK12SkBaseDevice27forceConservativeRasterClipEv = comdat any

$_ZN12SkBaseDevice19getImageFilterCacheEv = comdat any

$_ZThn16_N17SkClipStackDeviceD1Ev = comdat any

$_ZThn16_N17SkClipStackDeviceD0Ev = comdat any

$_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

@_ZTV17SkClipStackDevice = hidden unnamed_addr constant { [63 x i8*], [6 x i8*] } { [63 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkClipStackDevice*)* @_ZN17SkClipStackDeviceD2Ev to i8*), i8* bitcast (void (%class.SkClipStackDevice*)* @_ZN17SkClipStackDeviceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice15getRasterHandleEv to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZN12SkBaseDevice29android_utils_clipWithStencilEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16recordingContextEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice18surfaceDrawContextEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*)* @_ZN17SkClipStackDevice6onSaveEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*)* @_ZN17SkClipStackDevice9onRestoreEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %struct.SkRect*, i32, i1)* @_ZN17SkClipStackDevice10onClipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkRRect*, i32, i1)* @_ZN17SkClipStackDevice11onClipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkPath*, i32, i1)* @_ZN17SkClipStackDevice10onClipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.sk_sp.15*)* @_ZN17SkClipStackDevice12onClipShaderE5sk_spI8SkShaderE to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkRegion*, i32)* @_ZN17SkClipStackDevice12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %struct.SkIRect*)* @_ZN17SkClipStackDevice13onReplaceClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %struct.SkIRect*)* @_ZN17SkClipStackDevice26onSetDeviceClipRestrictionEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice10onClipIsAAEv to i8*), i8* bitcast (i1 (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice16onClipIsWideOpenEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkRegion*)* @_ZNK17SkClipStackDevice11onAsRgnClipEP8SkRegion to i8*), i8* bitcast (i32 (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice13onGetClipTypeEv to i8*), i8* bitcast ({ i64, i64 } (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice15onDevClipBoundsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)* @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11makeSpecialEPK7SkImage to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice12setImmutableEv to i8*), i8* bitcast (void (%class.sk_sp.58*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)* @_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16isNoPixelsDeviceEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice27forceConservativeRasterClipEv to i8*), i8* bitcast (%class.SkImageFilterCache* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice19getImageFilterCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%class.SkClipStackDevice*)* @_ZThn16_N17SkClipStackDeviceD1Ev to i8*), i8* bitcast (void (%class.SkClipStackDevice*)* @_ZThn16_N17SkClipStackDeviceD0Ev to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*)] }, align 8
@_ZTV12SkBaseDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK17SkClipStackDevice15onDevClipBoundsEv(%class.SkClipStackDevice*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %struct.SkIRect*
  %4 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %5 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %7 to i64
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %13, i64* %15, align 8
  %16 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* %4, %struct.SkIRect* nonnull dereferenceable(16) %3) #8
  %17 = extractvalue { <2 x float>, <2 x float> } %16, 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 1
  %19 = extractelement <2 x float> %17, i32 0
  %20 = call float @llvm.floor.f32(float %19) #8
  %21 = fcmp olt float %20, 0x41DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0x41DFFFFFE0000000
  %23 = fcmp ogt float %22, 0xC1DFFFFFE0000000
  %24 = select i1 %23, float %22, float 0xC1DFFFFFE0000000
  %25 = fptosi float %24 to i32
  %26 = extractelement <2 x float> %17, i32 1
  %27 = call float @llvm.floor.f32(float %26) #8
  %28 = fcmp olt float %27, 0x41DFFFFFE0000000
  %29 = select i1 %28, float %27, float 0x41DFFFFFE0000000
  %30 = fcmp ogt float %29, 0xC1DFFFFFE0000000
  %31 = select i1 %30, float %29, float 0xC1DFFFFFE0000000
  %32 = fptosi float %31 to i32
  %33 = extractelement <2 x float> %18, i32 0
  %34 = call float @llvm.ceil.f32(float %33) #8
  %35 = fcmp olt float %34, 0x41DFFFFFE0000000
  %36 = select i1 %35, float %34, float 0x41DFFFFFE0000000
  %37 = fcmp ogt float %36, 0xC1DFFFFFE0000000
  %38 = select i1 %37, float %36, float 0xC1DFFFFFE0000000
  %39 = fptosi float %38 to i32
  %40 = extractelement <2 x float> %18, i32 1
  %41 = call float @llvm.ceil.f32(float %40) #8
  %42 = fcmp olt float %41, 0x41DFFFFFE0000000
  %43 = select i1 %42, float %41, float 0x41DFFFFFE0000000
  %44 = fcmp ogt float %43, 0xC1DFFFFFE0000000
  %45 = select i1 %44, float %43, float 0xC1DFFFFFE0000000
  %46 = fptosi float %45 to i32
  %47 = zext i32 %32 to i64
  %48 = shl nuw i64 %47, 32
  %49 = zext i32 %46 to i64
  %50 = shl nuw i64 %49, 32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  %51 = zext i32 %25 to i64
  %52 = or i64 %48, %51
  %53 = insertvalue { i64, i64 } undef, i64 %52, 0
  %54 = zext i32 %39 to i64
  %55 = or i64 %50, %54
  %56 = insertvalue { i64, i64 } %53, i64 %55, 1
  ret { i64, i64 } %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice6onSaveEv(%class.SkClipStackDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  tail call void @_ZN11SkClipStack4saveEv(%class.SkClipStack* %2) #8
  ret void
}

declare void @_ZN11SkClipStack4saveEv(%class.SkClipStack*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice9onRestoreEv(%class.SkClipStackDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  tail call void @_ZN11SkClipStack7restoreEv(%class.SkClipStack* %2) #8
  ret void
}

declare void @_ZN11SkClipStack7restoreEv(%class.SkClipStack*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice10onClipRectERK6SkRect8SkClipOpb(%class.SkClipStackDevice*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 1, i32 2
  tail call void @_ZN11SkClipStack8clipRectERK6SkRectRK8SkMatrix8SkClipOpb(%class.SkClipStack* %5, %struct.SkRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %6, i32 %2, i1 zeroext %3) #8
  ret void
}

declare void @_ZN11SkClipStack8clipRectERK6SkRectRK8SkMatrix8SkClipOpb(%class.SkClipStack*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice11onClipRRectERK7SkRRect8SkClipOpb(%class.SkClipStackDevice*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 1, i32 2
  tail call void @_ZN11SkClipStack9clipRRectERK7SkRRectRK8SkMatrix8SkClipOpb(%class.SkClipStack* %5, %class.SkRRect* dereferenceable(52) %1, %class.SkMatrix* dereferenceable(40) %6, i32 %2, i1 zeroext %3) #8
  ret void
}

declare void @_ZN11SkClipStack9clipRRectERK7SkRRectRK8SkMatrix8SkClipOpb(%class.SkClipStack*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice10onClipPathERK6SkPath8SkClipOpb(%class.SkClipStackDevice*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 1, i32 2
  tail call void @_ZN11SkClipStack8clipPathERK6SkPathRK8SkMatrix8SkClipOpb(%class.SkClipStack* %5, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %6, i32 %2, i1 zeroext %3) #8
  ret void
}

declare void @_ZN11SkClipStack8clipPathERK6SkPathRK8SkMatrix8SkClipOpb(%class.SkClipStack*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice12onClipShaderE5sk_spI8SkShaderE(%class.SkClipStackDevice*, %class.sk_sp.15* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.15, align 8
  %4 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %5 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp.15* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkShader* null, %class.SkShader** %5, align 8
  %8 = bitcast %class.sk_sp.15* %3 to i64*
  store i64 %7, i64* %8, align 8
  call void @_ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE(%class.SkClipStack* %4, %class.sk_sp.15* nonnull %3) #8
  %9 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %3, i64 0, i32 0
  %10 = load %class.SkShader*, %class.SkShader** %9, align 8
  %11 = icmp eq %class.SkShader* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkShader, %class.SkShader* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkShader* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkShader* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  call void %21(%class.SkRefCntBase* nonnull %17) #8
  br label %22

22:                                               ; preds = %2, %12, %16
  ret void
}

declare void @_ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE(%class.SkClipStack*, %class.sk_sp.15*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice12onClipRegionERK8SkRegion8SkClipOp(%class.SkClipStackDevice*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRegion, align 8
  %5 = alloca %class.SkPath, align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0
  %8 = tail call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %7) #8
  %9 = lshr i64 %8, 32
  %10 = trunc i64 %9 to i32
  %11 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %4) #8
  %13 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %5) #8
  %15 = call zeroext i1 @_ZNK8SkRegion15getBoundaryPathEP6SkPath(%class.SkRegion* %1, %class.SkPath* nonnull %5) #8
  %16 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  %17 = sub nsw i32 0, %10
  %18 = trunc i64 %8 to i32
  %19 = sub i32 0, %18
  %20 = sitofp i32 %19 to float
  %21 = sitofp i32 %17 to float
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %23 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %23, align 16, !alias.scope !2
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %25, align 16, !alias.scope !2
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %26, align 16, !alias.scope !2
  store i32 16, i32* %22, align 4, !alias.scope !2
  %27 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %6, float %20, float %21) #8
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %5, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkPath* nonnull %5, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  %28 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %29 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #8
  call void @_ZN11SkClipStack8clipPathERK6SkPathRK8SkMatrix8SkClipOpb(%class.SkClipStack* %28, %class.SkPath* nonnull dereferenceable(16) %5, %class.SkMatrix* dereferenceable(40) %29, i32 %2, i1 zeroext false) #8
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  ret void
}

declare i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice*) local_unnamed_addr #2

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkRegion15getBoundaryPathEP6SkPath(%class.SkRegion*, %class.SkPath*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice13onReplaceClipERK7SkIRect(%class.SkClipStackDevice*, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca %class.SkMatrix, align 4
  %6 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %7 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = insertelement <2 x float> undef, float %10, i32 0
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = insertelement <2 x float> %11, float %14, i32 1
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = insertelement <2 x float> undef, float %18, i32 0
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = insertelement <2 x float> %19, float %22, i32 1
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %15, <2 x float>* %24, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %23, <2 x float>* %25, align 8
  %26 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #8
  %27 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6
  %28 = bitcast %class.SkM44* %27 to i32*
  %29 = load i32, i32* %28, align 4, !noalias !7
  %30 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 4
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4, !noalias !7
  %33 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 12
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4, !noalias !7
  %36 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 1
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4, !noalias !7
  %39 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 5
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4, !noalias !7
  %42 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 13
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4, !noalias !7
  %45 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 3
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4, !noalias !7
  %48 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 7
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4, !noalias !7
  %51 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 15
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4, !noalias !7
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %55 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 1
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 2
  %57 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 3
  %58 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 5
  %60 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 6
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 7
  %62 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  %63 = bitcast %class.SkMatrix* %5 to i32*
  store i32 %29, i32* %63, align 4, !alias.scope !10
  %64 = bitcast float* %55 to i32*
  store i32 %32, i32* %64, align 4, !alias.scope !10
  %65 = bitcast float* %56 to i32*
  store i32 %35, i32* %65, align 4, !alias.scope !10
  %66 = bitcast float* %57 to i32*
  store i32 %38, i32* %66, align 4, !alias.scope !10
  %67 = bitcast float* %58 to i32*
  store i32 %41, i32* %67, align 4, !alias.scope !10
  %68 = bitcast float* %59 to i32*
  store i32 %44, i32* %68, align 4, !alias.scope !10
  %69 = bitcast float* %60 to i32*
  store i32 %47, i32* %69, align 4, !alias.scope !10
  %70 = bitcast float* %61 to i32*
  store i32 %50, i32* %70, align 4, !alias.scope !10
  %71 = bitcast float* %62 to i32*
  store i32 %53, i32* %71, align 4, !alias.scope !10
  store i32 128, i32* %54, align 4, !alias.scope !10
  call void @_ZN11SkClipStack8clipRectERK6SkRectRK8SkMatrix8SkClipOpb(%class.SkClipStack* %6, %struct.SkRect* nonnull dereferenceable(16) %4, %class.SkMatrix* nonnull dereferenceable(40) %5, i32 5, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkClipStackDevice26onSetDeviceClipRestrictionEP7SkIRect(%class.SkClipStackDevice*, %struct.SkIRect* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 4
  %4 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = sub nsw i64 %6, %9
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = sub nsw i64 %13, %16
  %18 = icmp slt i64 %10, 1
  %19 = icmp slt i64 %17, 1
  %20 = or i1 %18, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %2
  %22 = or i64 %17, %10
  %23 = add nsw i64 %22, 2147483648
  %24 = icmp ugt i64 %23, 4294967295
  br i1 %24, label %25, label %38

25:                                               ; preds = %2, %21
  %26 = sitofp i32 %8 to float
  %27 = insertelement <2 x float> undef, float %26, i32 0
  %28 = sitofp i32 %15 to float
  %29 = insertelement <2 x float> %27, float %28, i32 1
  %30 = sitofp i32 %5 to float
  %31 = insertelement <2 x float> undef, float %30, i32 0
  %32 = sitofp i32 %12 to float
  %33 = insertelement <2 x float> %31, float %32, i32 1
  %34 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2, i32 2
  %35 = bitcast %struct.SkRect* %34 to <2 x float>*
  store <2 x float> %29, <2 x float>* %35, align 4
  %36 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2, i32 2, i32 2
  %37 = bitcast float* %36 to <2 x float>*
  store <2 x float> %33, <2 x float>* %37, align 4
  br label %98

38:                                               ; preds = %21
  %39 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0
  %40 = tail call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %39) #8
  %41 = and i64 %40, -4294967296
  %42 = sub i64 0, %41
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = shl i64 %40, 32
  %46 = sub i64 0, %45
  %47 = ashr exact i64 %46, 32
  %48 = add nsw i64 %47, %44
  %49 = icmp slt i64 %48, 2147483647
  %50 = select i1 %49, i64 %48, i64 2147483647
  %51 = icmp sgt i64 %50, -2147483647
  %52 = select i1 %51, i64 %50, i64 -2147483647
  %53 = load i32, i32* %14, align 4
  %54 = sext i32 %53 to i64
  %55 = ashr exact i64 %42, 32
  %56 = add nsw i64 %55, %54
  %57 = icmp slt i64 %56, 2147483647
  %58 = select i1 %57, i64 %56, i64 2147483647
  %59 = icmp sgt i64 %58, -2147483647
  %60 = select i1 %59, i64 %58, i64 -2147483647
  %61 = load i32, i32* %4, align 4
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %47, %62
  %64 = icmp slt i64 %63, 2147483647
  %65 = select i1 %64, i64 %63, i64 2147483647
  %66 = icmp sgt i64 %65, -2147483647
  %67 = select i1 %66, i64 %65, i64 -2147483647
  %68 = load i32, i32* %11, align 4
  %69 = sext i32 %68 to i64
  %70 = add nsw i64 %55, %69
  %71 = icmp slt i64 %70, 2147483647
  %72 = select i1 %71, i64 %70, i64 2147483647
  %73 = icmp sgt i64 %72, -2147483647
  %74 = select i1 %73, i64 %72, i64 -2147483647
  %75 = trunc i64 %52 to i32
  %76 = trunc i64 %60 to i32
  %77 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %78 = sitofp i32 %75 to float
  %79 = insertelement <2 x float> undef, float %78, i32 0
  %80 = sitofp i32 %76 to float
  %81 = insertelement <2 x float> %79, float %80, i32 1
  %82 = trunc i64 %67 to i32
  %83 = sitofp i32 %82 to float
  %84 = insertelement <2 x float> undef, float %83, i32 0
  %85 = trunc i64 %74 to i32
  %86 = sitofp i32 %85 to float
  %87 = insertelement <2 x float> %84, float %86, i32 1
  %88 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2, i32 2
  %89 = bitcast %struct.SkRect* %88 to <2 x float>*
  store <2 x float> %81, <2 x float>* %89, align 4
  %90 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2, i32 2, i32 2
  %91 = bitcast float* %90 to <2 x float>*
  store <2 x float> %87, <2 x float>* %91, align 4
  %92 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #8
  %93 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %94 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %95 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %96 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  store float %78, float* %93, align 4
  store float %80, float* %94, align 4
  store float %83, float* %95, align 4
  store float %86, float* %96, align 4
  %97 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #8
  call void @_ZN11SkClipStack8clipRectERK6SkRectRK8SkMatrix8SkClipOpb(%class.SkClipStack* %77, %struct.SkRect* nonnull dereferenceable(16) %3, %class.SkMatrix* dereferenceable(40) %97, i32 1, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8
  br label %98

98:                                               ; preds = %38, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkClipStackDevice10onClipIsAAEv(%class.SkClipStackDevice*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkClipStack::B2TIter", align 8
  %3 = bitcast %"class.SkClipStack::B2TIter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8
  %4 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.SkClipStack::B2TIter", %"class.SkClipStack::B2TIter"* %2, i64 0, i32 0
  %6 = bitcast %"class.SkClipStack::B2TIter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @_ZN11SkClipStack4IterC2ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"* nonnull %5, %class.SkClipStack* dereferenceable(80) %4, i32 0) #8
  br label %7

7:                                                ; preds = %10, %1
  %8 = call %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"* nonnull %5) #8
  %9 = icmp eq %"class.SkClipStack::Element"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %8, i64 0, i32 6
  %12 = load i8, i8* %11, align 4, !range !13
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %7, label %14

14:                                               ; preds = %10, %7
  %15 = phi i1 [ true, %10 ], [ false, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8
  ret i1 %15
}

declare %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkClipStackDevice16onClipIsWideOpenEv(%class.SkClipStackDevice*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %4 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sitofp i32 %6 to float
  %10 = insertelement <2 x float> undef, float %9, i32 0
  %11 = sitofp i32 %8 to float
  %12 = insertelement <2 x float> %10, float %11, i32 1
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %13, align 8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  store <2 x float> %12, <2 x float>* %14, align 8
  %15 = tail call i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack* %3) #8
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %19 = call zeroext i1 @_ZNK11SkClipStack21internalQuickContainsERK6SkRect(%class.SkClipStack* %3, %struct.SkRect* nonnull dereferenceable(16) %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i1 [ true, %1 ], [ %19, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkClipStackDevice11onAsRgnClipEP8SkRegion(%class.SkClipStackDevice*, %class.SkRegion*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.SkRect, align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %class.SkRegion, align 8
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %class.SkPath, align 8
  %10 = alloca %"class.SkClipStack::B2TIter", align 8
  %11 = alloca %class.SkRegion, align 8
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %13 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %15 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -1, i64 16, i1 false)
  call void @_ZNK11SkClipStack9getBoundsEP6SkRectPNS_10BoundsTypeEPb(%class.SkClipStack* %14, %struct.SkRect* nonnull %5, i32* nonnull %3, i8* nonnull %4) #8
  %16 = load i8, i8* %4, align 1, !range !13
  %17 = icmp ne i8 %16, 0
  %18 = load i32, i32* %3, align 4
  %19 = icmp eq i32 %18, 0
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 0
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 3
  %24 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 2
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 1
  %26 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %27 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = load float, float* %22, align 4
  %29 = fadd float %28, 5.000000e-01
  %30 = call float @llvm.floor.f32(float %29) #8
  %31 = fcmp olt float %30, 0x41DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0x41DFFFFFE0000000
  %33 = fcmp ogt float %32, 0xC1DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0xC1DFFFFFE0000000
  %35 = fptosi float %34 to i32
  %36 = load float, float* %25, align 4
  %37 = fadd float %36, 5.000000e-01
  %38 = call float @llvm.floor.f32(float %37) #8
  %39 = fcmp olt float %38, 0x41DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0x41DFFFFFE0000000
  %41 = fcmp ogt float %40, 0xC1DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0xC1DFFFFFE0000000
  %43 = fptosi float %42 to i32
  %44 = load float, float* %24, align 4
  %45 = fadd float %44, 5.000000e-01
  %46 = call float @llvm.floor.f32(float %45) #8
  %47 = fcmp olt float %46, 0x41DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0x41DFFFFFE0000000
  %49 = fcmp ogt float %48, 0xC1DFFFFFE0000000
  %50 = select i1 %49, float %48, float 0xC1DFFFFFE0000000
  %51 = fptosi float %50 to i32
  %52 = load float, float* %23, align 4
  %53 = fadd float %52, 5.000000e-01
  %54 = call float @llvm.floor.f32(float %53) #8
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = fptosi float %58 to i32
  %60 = zext i32 %43 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %35 to i64
  %63 = or i64 %61, %62
  %64 = zext i32 %59 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %51 to i64
  %67 = or i64 %65, %66
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %63, i64* %68, align 8
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %67, i64* %69, align 8
  %70 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %1, %struct.SkIRect* nonnull dereferenceable(16) %26) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  br label %104

71:                                               ; preds = %2
  %72 = bitcast %class.SkRegion* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #8
  %73 = bitcast %struct.SkIRect* %8 to i8*
  %74 = bitcast %class.SkRegion* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #8
  %75 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %78 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %77, align 4
  %80 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %81 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #8
  %83 = bitcast %class.SkPath* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #8
  %84 = bitcast %class.SkPath* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %9) #8
  %85 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %1, %class.SkRegion* nonnull dereferenceable(24) %7) #8
  %86 = bitcast %"class.SkClipStack::B2TIter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = getelementptr inbounds %"class.SkClipStack::B2TIter", %"class.SkClipStack::B2TIter"* %10, i64 0, i32 0
  %88 = bitcast %"class.SkClipStack::B2TIter"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 32, i1 false)
  call void @_ZN11SkClipStack4IterC2ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"* nonnull %87, %class.SkClipStack* dereferenceable(80) %14, i32 0) #8
  %89 = call %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"* nonnull %87) #8
  %90 = icmp eq %"class.SkClipStack::Element"* %89, null
  br i1 %90, label %103, label %91

91:                                               ; preds = %71
  %92 = bitcast %class.SkRegion* %11 to i8*
  %93 = bitcast %class.SkRegion* %11 to i8*
  br label %94

94:                                               ; preds = %91, %94
  %95 = phi %"class.SkClipStack::Element"* [ %89, %91 ], [ %101, %94 ]
  %96 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* nonnull %9) #8
  call void @_ZNK11SkClipStack7Element17asDeviceSpacePathEP6SkPath(%"class.SkClipStack::Element"* nonnull %95, %class.SkPath* nonnull %9) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %11) #8
  %97 = call zeroext i1 @_ZN8SkRegion7setPathERK6SkPathRKS_(%class.SkRegion* nonnull %11, %class.SkPath* nonnull dereferenceable(16) %9, %class.SkRegion* nonnull dereferenceable(24) %7) #8
  %98 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %95, i64 0, i32 4
  %99 = load i32, i32* %98, align 4
  %100 = call zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion* %1, %class.SkRegion* dereferenceable(24) %1, %class.SkRegion* nonnull dereferenceable(24) %11, i32 %99) #8
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #8
  %101 = call %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"* nonnull %87) #8
  %102 = icmp eq %"class.SkClipStack::Element"* %101, null
  br i1 %102, label %103, label %94

103:                                              ; preds = %94, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #8
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #8
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #8
  br label %104

104:                                              ; preds = %103, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  ret void
}

declare void @_ZNK11SkClipStack9getBoundsEP6SkRectPNS_10BoundsTypeEPb(%class.SkClipStack*, %struct.SkRect*, i32*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

declare dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath*) local_unnamed_addr #2

declare void @_ZNK11SkClipStack7Element17asDeviceSpacePathEP6SkPath(%"class.SkClipStack::Element"*, %class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion7setPathERK6SkPathRKS_(%class.SkRegion*, %class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK17SkClipStackDevice13onGetClipTypeEv(%class.SkClipStackDevice*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.SkRect, align 4
  %6 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  %7 = tail call i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack* %6) #8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %33, label %9

9:                                                ; preds = %1
  %10 = bitcast { i64, i64 }* %2 to %struct.SkIRect*
  %11 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = shl nuw i64 %16, 32
  %18 = zext i32 %13 to i64
  %19 = or i64 %17, %18
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %19, i64* %21, align 8
  %22 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %6, %struct.SkIRect* nonnull dereferenceable(16) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  br i1 %22, label %33, label %23

23:                                               ; preds = %9
  %24 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 -1431655766, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %25 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %26 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -1, i64 16, i1 false)
  call void @_ZNK11SkClipStack9getBoundsEP6SkRectPNS_10BoundsTypeEPb(%class.SkClipStack* %6, %struct.SkRect* nonnull %5, i32* nonnull %3, i8* nonnull %4) #8
  %27 = load i8, i8* %4, align 1, !range !13
  %28 = icmp ne i8 %27, 0
  %29 = load i32, i32* %3, align 4
  %30 = icmp eq i32 %29, 0
  %31 = and i1 %28, %30
  %32 = select i1 %31, i32 1, i32 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  br label %33

33:                                               ; preds = %9, %1, %23
  %34 = phi i32 [ %32, %23 ], [ 1, %1 ], [ 0, %9 ]
  ret i32 %34
}

declare zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkClipStackDeviceD2Ev(%class.SkClipStackDevice*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 2
  tail call void @_ZN11SkClipStackD1Ev(%class.SkClipStack* %4) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = bitcast %class.SkColorSpace* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %1, %8, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkClipStackDeviceD0Ev(%class.SkClipStackDevice*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK12SkBaseDevice15getRasterHandleEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

declare zeroext i1 @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect(%class.SkBaseDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice29android_utils_clipWithStencilEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK12SkBaseDevice16recordingContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrSurfaceDrawContext* @_ZN12SkBaseDevice18surfaceDrawContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrSurfaceDrawContext* null
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint(%class.SkBaseDevice*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkBaseDevice*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) unnamed_addr #2

declare void @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE(%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas(%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap() unnamed_addr

declare void @_ZN12SkBaseDevice11makeSpecialEPK7SkImage() unnamed_addr

declare void @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice12setImmutableEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.58* sret, %class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBaseDevice* @_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint(%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"* dereferenceable(48), %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  ret %class.SkBaseDevice* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice16isNoPixelsDeviceEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap(%class.SkBaseDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice27forceConservativeRasterClipEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImageFilterCache* @_ZN12SkBaseDevice19getImageFilterCacheEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImageFilterCache* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N17SkClipStackDeviceD1Ev(%class.SkClipStackDevice*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %0, i64 -1, i32 2, i32 2, i32 1
  %3 = bitcast float* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds float, float* %2, i64 4
  %5 = bitcast float* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds float, float* %2, i64 714
  %7 = bitcast float* %6 to %class.SkClipStack*
  tail call void @_ZN11SkClipStackD1Ev(%class.SkClipStack* %7) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds float, float* %2, i64 34
  %9 = bitcast float* %8 to %class.SkColorSpace**
  %10 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %11 = icmp eq %class.SkColorSpace* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = bitcast %class.SkColorSpace* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %1, %12, %16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N17SkClipStackDeviceD0Ev(%class.SkClipStackDevice*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN11SkClipStack4IterC2ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"*, %class.SkClipStack* dereferenceable(80), i32) unnamed_addr #2

declare zeroext i1 @_ZNK11SkClipStack21internalQuickContainsERK6SkRect(%class.SkClipStack*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11SkClipStackD1Ev(%class.SkClipStack*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix9TranslateEff"}
!5 = distinct !{!5, !6, !"_ZN8SkMatrix9TranslateE8SkIPoint: argument 0"}
!6 = distinct !{!6, !"_ZN8SkMatrix9TranslateE8SkIPoint"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5SkM445asM33Ev: argument 0"}
!9 = distinct !{!9, !"_ZNK5SkM445asM33Ev"}
!10 = !{!11, !8}
!11 = distinct !{!11, !12, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!12 = distinct !{!12, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!13 = !{i8 0, i8 2}
