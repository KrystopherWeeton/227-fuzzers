; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_color_animation_curve.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_color_animation_curve.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CompositorColorAnimationCurve" = type { %"class.blink::CompositorAnimationCurve", %"class.std::__1::unique_ptr" }
%"class.blink::CompositorAnimationCurve" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::KeyframedColorAnimationCurve"* }
%"class.gfx::KeyframedColorAnimationCurve" = type { %"class.gfx::ColorAnimationCurve", %"class.std::__1::vector", %"class.std::__1::unique_ptr.3", double }
%"class.gfx::ColorAnimationCurve" = type { %"class.gfx::AnimationCurve", %"class.gfx::ColorAnimationCurve::Target"* }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.gfx::ColorAnimationCurve::Target" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.gfx::ColorKeyframe"* }
%"class.gfx::ColorKeyframe" = type <{ %"class.gfx::Keyframe", i32, [4 x i8] }>
%"class.gfx::Keyframe" = type { i32 (...)**, %"class.base::TimeDelta", %"class.std::__1::unique_ptr.3" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::unique_ptr.0"* }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::TimingFunction"* }
%"class.gfx::TimingFunction" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.22"*, i32, i32 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::CompositorColorKeyframe"* }
%"class.blink::CompositorColorKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr.0" }
%"class.blink::CompositorKeyframe" = type { i32 (...)** }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS2_14default_deleteIS5_EEEEEEmm = comdat any

@_ZTVN5blink29CompositorColorAnimationCurveE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CompositorColorAnimationCurve"*)* @_ZN5blink29CompositorColorAnimationCurveD2Ev to i8*), i8* bitcast (void (%"class.blink::CompositorColorAnimationCurve"*)* @_ZN5blink29CompositorColorAnimationCurveD0Ev to i8*), i8* bitcast (%"class.gfx::AnimationCurve"* (%"class.blink::CompositorColorAnimationCurve"*)* @_ZNK5blink29CompositorColorAnimationCurve21CloneToAnimationCurveEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::CompositorColorKeyframe, std::__1::default_delete<blink::CompositorColorKeyframe> >]\00", align 1

@_ZN5blink29CompositorColorAnimationCurveC1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorColorAnimationCurve"*), void (%"class.blink::CompositorColorAnimationCurve"*)* @_ZN5blink29CompositorColorAnimationCurveC2Ev
@_ZN5blink29CompositorColorAnimationCurveC1ENSt3__110unique_ptrIN3gfx28KeyframedColorAnimationCurveENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.blink::CompositorColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"*), void (%"class.blink::CompositorColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"*)* @_ZN5blink29CompositorColorAnimationCurveC2ENSt3__110unique_ptrIN3gfx28KeyframedColorAnimationCurveENS1_14default_deleteIS4_EEEE
@_ZN5blink29CompositorColorAnimationCurveD1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorColorAnimationCurve"*), void (%"class.blink::CompositorColorAnimationCurve"*)* @_ZN5blink29CompositorColorAnimationCurveD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorColorAnimationCurveC2Ev(%"class.blink::CompositorColorAnimationCurve"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29CompositorColorAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.gfx::KeyframedColorAnimationCurve"* @_ZN3gfx28KeyframedColorAnimationCurve6CreateEv() #8
  %4 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.gfx::KeyframedColorAnimationCurve"* %3, %"class.gfx::KeyframedColorAnimationCurve"** %4, align 8
  ret void
}

declare %"class.gfx::KeyframedColorAnimationCurve"* @_ZN3gfx28KeyframedColorAnimationCurve6CreateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorColorAnimationCurveC2ENSt3__110unique_ptrIN3gfx28KeyframedColorAnimationCurveENS1_14default_deleteIS4_EEEE(%"class.blink::CompositorColorAnimationCurve"* nocapture, %"class.gfx::KeyframedColorAnimationCurve"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gfx::KeyframedColorAnimationCurve"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29CompositorColorAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorColorAnimationCurveD2Ev(%"class.blink::CompositorColorAnimationCurve"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29CompositorColorAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  store %"class.gfx::KeyframedColorAnimationCurve"* null, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  %5 = icmp eq %"class.gfx::KeyframedColorAnimationCurve"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gfx::KeyframedColorAnimationCurve"* %4 to void (%"class.gfx::KeyframedColorAnimationCurve"*)***
  %8 = load void (%"class.gfx::KeyframedColorAnimationCurve"*)**, void (%"class.gfx::KeyframedColorAnimationCurve"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::KeyframedColorAnimationCurve"*)*, void (%"class.gfx::KeyframedColorAnimationCurve"*)** %8, i64 1
  %10 = load void (%"class.gfx::KeyframedColorAnimationCurve"*)*, void (%"class.gfx::KeyframedColorAnimationCurve"*)** %9, align 8
  tail call void %10(%"class.gfx::KeyframedColorAnimationCurve"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorColorAnimationCurveD0Ev(%"class.blink::CompositorColorAnimationCurve"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29CompositorColorAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  store %"class.gfx::KeyframedColorAnimationCurve"* null, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  %5 = icmp eq %"class.gfx::KeyframedColorAnimationCurve"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gfx::KeyframedColorAnimationCurve"* %4 to void (%"class.gfx::KeyframedColorAnimationCurve"*)***
  %8 = load void (%"class.gfx::KeyframedColorAnimationCurve"*)**, void (%"class.gfx::KeyframedColorAnimationCurve"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::KeyframedColorAnimationCurve"*)*, void (%"class.gfx::KeyframedColorAnimationCurve"*)** %8, i64 1
  %10 = load void (%"class.gfx::KeyframedColorAnimationCurve"*)*, void (%"class.gfx::KeyframedColorAnimationCurve"*)** %9, align 8
  tail call void %10(%"class.gfx::KeyframedColorAnimationCurve"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::CompositorColorAnimationCurve"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::CompositorColorAnimationCurve"* @_ZN5blink29CompositorColorAnimationCurve16CreateForTestingENSt3__110unique_ptrIN3gfx28KeyframedColorAnimationCurveENS1_14default_deleteIS4_EEEE(%"class.gfx::KeyframedColorAnimationCurve"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.gfx::KeyframedColorAnimationCurve"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 16) #9
  %4 = bitcast i8* %3 to %"class.blink::CompositorColorAnimationCurve"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29CompositorColorAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %2, i64* %7, align 8
  ret %"class.blink::CompositorColorAnimationCurve"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink29CompositorColorAnimationCurve19KeyframesForTestingEv(%"class.WTF::Vector"* noalias sret, %"class.blink::CompositorColorAnimationCurve"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.22", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %8, align 8
  %10 = getelementptr inbounds %"class.gfx::KeyframedColorAnimationCurve", %"class.gfx::KeyframedColorAnimationCurve"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %10, align 8
  %12 = getelementptr inbounds %"class.gfx::KeyframedColorAnimationCurve", %"class.gfx::KeyframedColorAnimationCurve"* %9, i64 0, i32 1, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.0"* %11, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::unique_ptr.22"* %3 to i8*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %3, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.22"* %3 to i8**
  br label %20

19:                                               ; preds = %47, %2
  ret void

20:                                               ; preds = %15, %47
  %21 = phi %"class.std::__1::unique_ptr.0"* [ %11, %15 ], [ %48, %47 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %22 = call i8* @_Znwm(i64 16) #9
  %23 = bitcast i8* %22 to %"class.blink::CompositorColorKeyframe"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.gfx::ColorKeyframe"*, %"class.gfx::ColorKeyframe"** %24, align 8
  %26 = call %"class.gfx::ColorKeyframe"* @_ZNK3gfx13ColorKeyframe5CloneEv(%"class.gfx::ColorKeyframe"* %25) #8
  call void @_ZN5blink23CompositorColorKeyframeC1ENSt3__110unique_ptrIN3gfx13ColorKeyframeENS1_14default_deleteIS4_EEEE(%"class.blink::CompositorColorKeyframe"* nonnull %23, %"class.gfx::ColorKeyframe"* %26) #8
  store i8* %22, i8** %18, align 8
  %27 = load i32, i32* %6, align 4
  %28 = load i32, i32* %5, align 8
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %38, label %30, !prof !2

30:                                               ; preds = %20
  %31 = ptrtoint i8* %22 to i64
  %32 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %4, align 8
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %32, i64 %33
  store %"class.blink::CompositorColorKeyframe"* null, %"class.blink::CompositorColorKeyframe"** %17, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.22"* %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = load i32, i32* %6, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %6, align 4
  br label %39

38:                                               ; preds = %20
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* %0, %"class.std::__1::unique_ptr.22"* nonnull dereferenceable(8) %3) #8
  br label %39

39:                                               ; preds = %30, %38
  %40 = load %"class.blink::CompositorColorKeyframe"*, %"class.blink::CompositorColorKeyframe"** %17, align 8
  store %"class.blink::CompositorColorKeyframe"* null, %"class.blink::CompositorColorKeyframe"** %17, align 8
  %41 = icmp eq %"class.blink::CompositorColorKeyframe"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::CompositorColorKeyframe"* %40 to void (%"class.blink::CompositorColorKeyframe"*)***
  %44 = load void (%"class.blink::CompositorColorKeyframe"*)**, void (%"class.blink::CompositorColorKeyframe"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::CompositorColorKeyframe"*)*, void (%"class.blink::CompositorColorKeyframe"*)** %44, i64 1
  %46 = load void (%"class.blink::CompositorColorKeyframe"*)*, void (%"class.blink::CompositorColorKeyframe"*)** %45, align 8
  call void %46(%"class.blink::CompositorColorKeyframe"* nonnull %40) #8
  br label %47

47:                                               ; preds = %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %21, i64 1
  %49 = icmp eq %"class.std::__1::unique_ptr.0"* %48, %13
  br i1 %49, label %19, label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.gfx::ColorKeyframe"* @_ZNK3gfx13ColorKeyframe5CloneEv(%"class.gfx::ColorKeyframe"*) local_unnamed_addr #1

declare void @_ZN5blink23CompositorColorKeyframeC1ENSt3__110unique_ptrIN3gfx13ColorKeyframeENS1_14default_deleteIS4_EEEE(%"class.blink::CompositorColorKeyframe"*, %"class.gfx::ColorKeyframe"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorColorAnimationCurve11AddKeyframeERKNS_23CompositorColorKeyframeE(%"class.blink::CompositorColorAnimationCurve"* nocapture readonly, %"class.blink::CompositorColorKeyframe"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  %5 = tail call %"class.gfx::ColorKeyframe"* @_ZNK5blink23CompositorColorKeyframe9CloneToCCEv(%"class.blink::CompositorColorKeyframe"* %1) #8
  tail call void @_ZN3gfx28KeyframedColorAnimationCurve11AddKeyframeENSt3__110unique_ptrINS_13ColorKeyframeENS1_14default_deleteIS3_EEEE(%"class.gfx::KeyframedColorAnimationCurve"* %4, %"class.gfx::ColorKeyframe"* %5) #8
  ret void
}

declare void @_ZN3gfx28KeyframedColorAnimationCurve11AddKeyframeENSt3__110unique_ptrINS_13ColorKeyframeENS1_14default_deleteIS3_EEEE(%"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::ColorKeyframe"*) local_unnamed_addr #1

declare %"class.gfx::ColorKeyframe"* @_ZNK5blink23CompositorColorKeyframe9CloneToCCEv(%"class.blink::CompositorColorKeyframe"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorColorAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorColorAnimationCurve"* nocapture readonly, %"class.blink::TimingFunction"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  %5 = bitcast %"class.blink::TimingFunction"* %1 to %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)***
  %6 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)**, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %6, i64 6
  %8 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %7, align 8
  %9 = tail call %"class.gfx::TimingFunction"* %8(%"class.blink::TimingFunction"* %1) #8
  %10 = ptrtoint %"class.gfx::TimingFunction"* %9 to i64
  %11 = getelementptr inbounds %"class.gfx::KeyframedColorAnimationCurve", %"class.gfx::KeyframedColorAnimationCurve"* %4, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.gfx::TimingFunction"*, %"class.gfx::TimingFunction"** %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr.3"* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %"class.gfx::TimingFunction"* %13, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.gfx::TimingFunction"* %13 to void (%"class.gfx::TimingFunction"*)***
  %18 = load void (%"class.gfx::TimingFunction"*)**, void (%"class.gfx::TimingFunction"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gfx::TimingFunction"*)*, void (%"class.gfx::TimingFunction"*)** %18, i64 1
  %20 = load void (%"class.gfx::TimingFunction"*)*, void (%"class.gfx::TimingFunction"*)** %19, align 8
  tail call void %20(%"class.gfx::TimingFunction"* nonnull %13) #8
  br label %21

21:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink29CompositorColorAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorColorAnimationCurve"* nocapture readonly, double) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::KeyframedColorAnimationCurve", %"class.gfx::KeyframedColorAnimationCurve"* %4, i64 0, i32 3
  store double %1, double* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink29CompositorColorAnimationCurve8GetValueEd(%"class.blink::CompositorColorAnimationCurve"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %3, align 8
  %5 = fmul double %1, 1.000000e+06
  %6 = fcmp ult double %5, 0xC3E0000000000000
  %7 = fcmp ugt double %5, 0x43DFFFFFFFFFFFFF
  %8 = fcmp ogt double %5, 0xC3E0000000000000
  %9 = select i1 %8, double %5, double 0xC3E0000000000000
  %10 = fptosi double %9 to i64
  %11 = select i1 %6, i64 0, i64 9223372036854775807
  %12 = select i1 %7, i64 %11, i64 %10
  %13 = bitcast %"class.gfx::KeyframedColorAnimationCurve"* %4 to i32 (%"class.gfx::KeyframedColorAnimationCurve"*, i64)***
  %14 = load i32 (%"class.gfx::KeyframedColorAnimationCurve"*, i64)**, i32 (%"class.gfx::KeyframedColorAnimationCurve"*, i64)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.gfx::KeyframedColorAnimationCurve"*, i64)*, i32 (%"class.gfx::KeyframedColorAnimationCurve"*, i64)** %14, i64 10
  %16 = load i32 (%"class.gfx::KeyframedColorAnimationCurve"*, i64)*, i32 (%"class.gfx::KeyframedColorAnimationCurve"*, i64)** %15, align 8
  %17 = tail call i32 %16(%"class.gfx::KeyframedColorAnimationCurve"* %4, i64 %12) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::AnimationCurve"* @_ZNK5blink29CompositorColorAnimationCurve21CloneToAnimationCurveEv(%"class.blink::CompositorColorAnimationCurve"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorColorAnimationCurve", %"class.blink::CompositorColorAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::KeyframedColorAnimationCurve"*, %"class.gfx::KeyframedColorAnimationCurve"** %2, align 8
  %4 = bitcast %"class.gfx::KeyframedColorAnimationCurve"* %3 to %"class.gfx::AnimationCurve"* (%"class.gfx::KeyframedColorAnimationCurve"*)***
  %5 = load %"class.gfx::AnimationCurve"* (%"class.gfx::KeyframedColorAnimationCurve"*)**, %"class.gfx::AnimationCurve"* (%"class.gfx::KeyframedColorAnimationCurve"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.gfx::AnimationCurve"* (%"class.gfx::KeyframedColorAnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.gfx::KeyframedColorAnimationCurve"*)** %5, i64 5
  %7 = load %"class.gfx::AnimationCurve"* (%"class.gfx::KeyframedColorAnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.gfx::KeyframedColorAnimationCurve"*)** %6, align 8
  %8 = tail call %"class.gfx::AnimationCurve"* %7(%"class.gfx::KeyframedColorAnimationCurve"* %3) #8
  ret %"class.gfx::AnimationCurve"* %8
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.22"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.22"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.22"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.22"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.22"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.22"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.22"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.22"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.22"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.22"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.22"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.22"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.22"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.22"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.22"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.22"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.22"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.22"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::CompositorColorKeyframe"* null, %"class.blink::CompositorColorKeyframe"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.22"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorColorKeyframeENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
