; ModuleID = '../../chrome/browser/prefs/pref_service_incognito_allowlist.cc'
source_filename = "../../chrome/browser/prefs/pref_service_incognito_allowlist.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6insertIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSE_IS8_EESA_SA_ = comdat any

@_ZN12_GLOBAL__N_120kPersistentPrefNamesE = internal constant [37 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @kAnimationPolicyAllowed, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @kAnimationPolicyOnce, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @kAnimationPolicyNone, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs16kAnimationPolicyE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs28kBookmarkEditorExpandedNodesE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs21kEditBookmarksEnabledE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs17kManagedBookmarksE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs27kManagedBookmarksFolderNameE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs30kShowAppsShortcutInBookmarkBarE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs29kShowReadingListInBookmarkBarE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs34kShowManagedBookmarksInBookmarkBarE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs16kShowBookmarkBarE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs36kBrowserSuppressDefaultBrowserPromptE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs27kDefaultBrowserLastDeclinedE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs29kDefaultBrowserSettingEnabledE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs25kResetCheckDefaultBrowserE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs15kDevToolsAdbKeyE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kDevToolsAvailabilityE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs34kDevToolsDiscoverUsbDevicesEnabledE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs20kDevToolsEditedFilesE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs24kDevToolsFileSystemPathsE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs30kDevToolsPortForwardingEnabledE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs33kDevToolsPortForwardingDefaultSetE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs29kDevToolsPortForwardingConfigE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs20kDevToolsPreferencesE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs34kDevToolsDiscoverTCPTargetsEnabledE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs27kDevToolsTCPDiscoveryConfigE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs25kTabStatsTotalTabCountMaxE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs25kTabStatsMaxTabsPerWindowE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs23kTabStatsWindowCountMaxE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs20kTabStatsDailySampleE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kUseCustomChromeFrameE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12reading_list5prefs28kReadingListHasUnseenEntriesE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3ukm5prefs12kUkmClientIdE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3ukm5prefs18kUkmUnsentLogStoreE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3ukm5prefs13kUkmSessionIdE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs19kCookieControlsModeE, i32 0, i32 0)], align 16
@kAnimationPolicyAllowed = external constant [0 x i8], align 1
@kAnimationPolicyOnce = external constant [0 x i8], align 1
@kAnimationPolicyNone = external constant [0 x i8], align 1
@_ZN5prefs16kAnimationPolicyE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs28kBookmarkEditorExpandedNodesE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs21kEditBookmarksEnabledE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs17kManagedBookmarksE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs27kManagedBookmarksFolderNameE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs30kShowAppsShortcutInBookmarkBarE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs29kShowReadingListInBookmarkBarE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs34kShowManagedBookmarksInBookmarkBarE = external constant [0 x i8], align 1
@_ZN9bookmarks5prefs16kShowBookmarkBarE = external constant [0 x i8], align 1
@_ZN5prefs36kBrowserSuppressDefaultBrowserPromptE = external constant [0 x i8], align 1
@_ZN5prefs27kDefaultBrowserLastDeclinedE = external constant [0 x i8], align 1
@_ZN5prefs29kDefaultBrowserSettingEnabledE = external constant [0 x i8], align 1
@_ZN5prefs25kResetCheckDefaultBrowserE = external constant [0 x i8], align 1
@_ZN5prefs15kDevToolsAdbKeyE = external constant [0 x i8], align 1
@_ZN5prefs21kDevToolsAvailabilityE = external constant [0 x i8], align 1
@_ZN5prefs34kDevToolsDiscoverUsbDevicesEnabledE = external constant [0 x i8], align 1
@_ZN5prefs20kDevToolsEditedFilesE = external constant [0 x i8], align 1
@_ZN5prefs24kDevToolsFileSystemPathsE = external constant [0 x i8], align 1
@_ZN5prefs30kDevToolsPortForwardingEnabledE = external constant [0 x i8], align 1
@_ZN5prefs33kDevToolsPortForwardingDefaultSetE = external constant [0 x i8], align 1
@_ZN5prefs29kDevToolsPortForwardingConfigE = external constant [0 x i8], align 1
@_ZN5prefs20kDevToolsPreferencesE = external constant [0 x i8], align 1
@_ZN5prefs34kDevToolsDiscoverTCPTargetsEnabledE = external constant [0 x i8], align 1
@_ZN5prefs27kDevToolsTCPDiscoveryConfigE = external constant [0 x i8], align 1
@_ZN5prefs25kTabStatsTotalTabCountMaxE = external constant [0 x i8], align 1
@_ZN5prefs25kTabStatsMaxTabsPerWindowE = external constant [0 x i8], align 1
@_ZN5prefs23kTabStatsWindowCountMaxE = external constant [0 x i8], align 1
@_ZN5prefs20kTabStatsDailySampleE = external constant [0 x i8], align 1
@_ZN5prefs21kUseCustomChromeFrameE = external constant [0 x i8], align 1
@_ZN12reading_list5prefs28kReadingListHasUnseenEntriesE = external constant [0 x i8], align 1
@_ZN3ukm5prefs12kUkmClientIdE = external constant [0 x i8], align 1
@_ZN3ukm5prefs18kUkmUnsentLogStoreE = external constant [0 x i8], align 1
@_ZN3ukm5prefs13kUkmSessionIdE = external constant [0 x i8], align 1
@_ZN5prefs19kCookieControlsModeE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5prefs36GetIncognitoPersistentPrefsAllowlistEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #6
  %3 = tail call i8** @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6insertIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSE_IS8_EESA_SA_(%"class.std::__1::vector"* %0, i8** null, i8** getelementptr inbounds ([37 x i8*], [37 x i8*]* @_ZN12_GLOBAL__N_120kPersistentPrefNamesE, i64 0, i64 0), i8** getelementptr inbounds ([37 x i8*], [37 x i8*]* @_ZN12_GLOBAL__N_120kPersistentPrefNamesE, i64 1, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8** @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6insertIPKS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSE_IS8_EESA_SA_(%"class.std::__1::vector"*, i8**, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i8** %2 to i8*
  %6 = bitcast i8** %1 to i8*
  %7 = ptrtoint i8** %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint i8** %3 to i64
  %10 = ptrtoint i8** %2 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %603

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i8*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load i8**, i8*** %18, align 8
  %20 = ptrtoint i8** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i8*** %18 to i64*
  br i1 %23, label %190, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8*, i8** %2, i64 %27
  %31 = ptrtoint i8** %30 to i64
  %32 = sub i64 %9, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = lshr exact i64 %32, 3
  %36 = bitcast i8** %19 to i8*
  %37 = bitcast i8** %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 %32, i1 false) #6
  %38 = getelementptr inbounds i8*, i8** %19, i64 %35
  %39 = ptrtoint i8** %38 to i64
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i64 [ %39, %34 ], [ %20, %29 ]
  store i64 %41, i64* %24, align 8
  %42 = icmp sgt i64 %26, 0
  br i1 %42, label %43, label %603

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to i8**
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i64 [ %41, %43 ], [ %20, %25 ]
  %47 = phi i8** [ %44, %43 ], [ %19, %25 ]
  %48 = phi i8** [ %30, %43 ], [ %3, %25 ]
  %49 = getelementptr inbounds i8*, i8** %1, i64 %12
  %50 = ptrtoint i8** %49 to i64
  %51 = sub i64 %46, %50
  %52 = ashr exact i64 %51, 3
  %53 = getelementptr inbounds i8*, i8** %1, i64 %52
  %54 = icmp ult i8** %53, %19
  br i1 %54, label %55, label %168

55:                                               ; preds = %45
  %56 = sub nsw i64 0, %52
  %57 = getelementptr i8*, i8** %19, i64 %56
  %58 = bitcast i8** %57 to i8*
  %59 = xor i64 %7, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %65, label %68

65:                                               ; preds = %163, %68, %55
  %66 = phi i8** [ %47, %68 ], [ %47, %55 ], [ %86, %163 ]
  %67 = phi i8** [ %53, %68 ], [ %53, %55 ], [ %87, %163 ]
  br label %176

68:                                               ; preds = %55
  %69 = sub nsw i64 0, %52
  %70 = getelementptr i8*, i8** %19, i64 %69
  %71 = bitcast i8** %70 to i8*
  %72 = xor i64 %7, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i8*, i8** %47, i64 %76
  %78 = add nsw i64 %52, %75
  %79 = add nsw i64 %78, 1
  %80 = getelementptr i8*, i8** %1, i64 %79
  %81 = icmp ult i8** %47, %80
  %82 = icmp ult i8** %53, %77
  %83 = and i1 %81, %82
  br i1 %83, label %65, label %84

84:                                               ; preds = %68
  %85 = and i64 %63, 4611686018427387900
  %86 = getelementptr i8*, i8** %47, i64 %85
  %87 = getelementptr i8*, i8** %53, i64 %85
  %88 = add nsw i64 %85, -4
  %89 = lshr exact i64 %88, 2
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 12
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i8*, i8** %47, i64 %96
  %99 = getelementptr i8*, i8** %53, i64 %96
  %100 = bitcast i8** %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !2
  %102 = getelementptr i8*, i8** %99, i64 2
  %103 = bitcast i8** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !2
  %105 = bitcast i8** %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8, !alias.scope !5, !noalias !2
  %106 = getelementptr i8*, i8** %98, i64 2
  %107 = bitcast i8** %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8, !alias.scope !5, !noalias !2
  %108 = or i64 %96, 4
  %109 = getelementptr i8*, i8** %47, i64 %108
  %110 = getelementptr i8*, i8** %53, i64 %108
  %111 = bitcast i8** %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !2
  %113 = getelementptr i8*, i8** %110, i64 2
  %114 = bitcast i8** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !2
  %116 = bitcast i8** %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !5, !noalias !2
  %117 = getelementptr i8*, i8** %109, i64 2
  %118 = bitcast i8** %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !5, !noalias !2
  %119 = or i64 %96, 8
  %120 = getelementptr i8*, i8** %47, i64 %119
  %121 = getelementptr i8*, i8** %53, i64 %119
  %122 = bitcast i8** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !2
  %124 = getelementptr i8*, i8** %121, i64 2
  %125 = bitcast i8** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !2
  %127 = bitcast i8** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !5, !noalias !2
  %128 = getelementptr i8*, i8** %120, i64 2
  %129 = bitcast i8** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !5, !noalias !2
  %130 = or i64 %96, 12
  %131 = getelementptr i8*, i8** %47, i64 %130
  %132 = getelementptr i8*, i8** %53, i64 %130
  %133 = bitcast i8** %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !2
  %135 = getelementptr i8*, i8** %132, i64 2
  %136 = bitcast i8** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !2
  %138 = bitcast i8** %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !5, !noalias !2
  %139 = getelementptr i8*, i8** %131, i64 2
  %140 = bitcast i8** %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !5, !noalias !2
  %141 = add i64 %96, 16
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !7

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i8*, i8** %47, i64 %148
  %151 = getelementptr i8*, i8** %53, i64 %148
  %152 = bitcast i8** %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !2
  %154 = getelementptr i8*, i8** %151, i64 2
  %155 = bitcast i8** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !2
  %157 = bitcast i8** %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !5, !noalias !2
  %158 = getelementptr i8*, i8** %150, i64 2
  %159 = bitcast i8** %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !5, !noalias !2
  %160 = add i64 %148, 4
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !9

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %63, %85
  br i1 %164, label %165, label %65

165:                                              ; preds = %176, %163
  %166 = phi i8** [ %86, %163 ], [ %183, %176 ]
  %167 = ptrtoint i8** %166 to i64
  br label %168

168:                                              ; preds = %165, %45
  %169 = phi i64 [ %167, %165 ], [ %46, %45 ]
  store i64 %169, i64* %24, align 8
  %170 = icmp eq i64 %51, 0
  br i1 %170, label %185, label %171

171:                                              ; preds = %168
  %172 = sub nsw i64 0, %52
  %173 = getelementptr inbounds i8*, i8** %47, i64 %172
  %174 = bitcast i8** %173 to i8*
  %175 = bitcast i8** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 %51, i1 false) #6
  br label %185

176:                                              ; preds = %65, %176
  %177 = phi i8** [ %183, %176 ], [ %66, %65 ]
  %178 = phi i8** [ %182, %176 ], [ %67, %65 ]
  %179 = bitcast i8** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast i8** %177 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds i8*, i8** %178, i64 1
  %183 = getelementptr inbounds i8*, i8** %177, i64 1
  %184 = icmp ult i8** %182, %19
  br i1 %184, label %176, label %165, !llvm.loop !11

185:                                              ; preds = %168, %171
  %186 = ptrtoint i8** %48 to i64
  %187 = sub i64 %186, %10
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %603, label %189

189:                                              ; preds = %185
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %187, i1 false) #6
  br label %603

190:                                              ; preds = %14
  %191 = bitcast %"class.std::__1::vector"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %20, %192
  %194 = ashr exact i64 %193, 3
  %195 = add nsw i64 %194, %12
  %196 = icmp ugt i64 %195, 2305843009213693951
  br i1 %196, label %197, label %199

197:                                              ; preds = %190
  %198 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %198) #7
  unreachable

199:                                              ; preds = %190
  %200 = sub i64 %17, %192
  %201 = ashr exact i64 %200, 3
  %202 = icmp ult i64 %201, 1152921504606846975
  br i1 %202, label %206, label %203

203:                                              ; preds = %199
  %204 = sub i64 %7, %192
  %205 = ashr exact i64 %204, 3
  br label %216

206:                                              ; preds = %199
  %207 = ashr exact i64 %200, 2
  %208 = icmp ult i64 %207, %195
  %209 = select i1 %208, i64 %195, i64 %207
  %210 = sub i64 %7, %192
  %211 = ashr exact i64 %210, 3
  %212 = icmp eq i64 %209, 0
  br i1 %212, label %222, label %213

213:                                              ; preds = %206
  %214 = icmp ugt i64 %209, 2305843009213693951
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  tail call void @abort() #7
  unreachable

216:                                              ; preds = %203, %213
  %217 = phi i64 [ 2305843009213693951, %203 ], [ %209, %213 ]
  %218 = phi i64 [ %205, %203 ], [ %211, %213 ]
  %219 = shl i64 %217, 3
  %220 = tail call i8* @_Znwm(i64 %219) #8
  %221 = bitcast i8* %220 to i8**
  br label %222

222:                                              ; preds = %216, %206
  %223 = phi i64 [ %218, %216 ], [ %211, %206 ]
  %224 = phi i64 [ %217, %216 ], [ 0, %206 ]
  %225 = phi i8** [ %221, %216 ], [ null, %206 ]
  %226 = getelementptr inbounds i8*, i8** %225, i64 %223
  %227 = getelementptr inbounds i8*, i8** %225, i64 %224
  %228 = ptrtoint i8** %227 to i64
  %229 = getelementptr inbounds i8*, i8** %226, i64 %12
  %230 = add i64 %11, -8
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %327, label %234

234:                                              ; preds = %222
  %235 = add i64 %11, -8
  %236 = lshr i64 %235, 3
  %237 = add nsw i64 %223, %236
  %238 = add nsw i64 %237, 1
  %239 = getelementptr i8*, i8** %225, i64 %238
  %240 = add nuw nsw i64 %236, 1
  %241 = getelementptr i8*, i8** %2, i64 %240
  %242 = icmp ult i8** %226, %241
  %243 = icmp ugt i8** %239, %2
  %244 = and i1 %242, %243
  br i1 %244, label %327, label %245

245:                                              ; preds = %234
  %246 = and i64 %232, 4611686018427387900
  %247 = getelementptr i8*, i8** %226, i64 %246
  %248 = getelementptr i8*, i8** %2, i64 %246
  %249 = getelementptr i8*, i8** %226, i64 %246
  %250 = add nsw i64 %246, -4
  %251 = lshr exact i64 %250, 2
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp ult i64 %250, 12
  br i1 %254, label %306, label %255

255:                                              ; preds = %245
  %256 = sub nsw i64 %252, %253
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ 0, %255 ], [ %303, %257 ]
  %259 = phi i64 [ %256, %255 ], [ %304, %257 ]
  %260 = getelementptr i8*, i8** %2, i64 %258
  %261 = getelementptr i8*, i8** %226, i64 %258
  %262 = bitcast i8** %260 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !12
  %264 = getelementptr i8*, i8** %260, i64 2
  %265 = bitcast i8** %264 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8, !alias.scope !12
  %267 = bitcast i8** %261 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %267, align 8, !alias.scope !15, !noalias !12
  %268 = getelementptr i8*, i8** %261, i64 2
  %269 = bitcast i8** %268 to <2 x i64>*
  store <2 x i64> %266, <2 x i64>* %269, align 8, !alias.scope !15, !noalias !12
  %270 = or i64 %258, 4
  %271 = getelementptr i8*, i8** %2, i64 %270
  %272 = getelementptr i8*, i8** %226, i64 %270
  %273 = bitcast i8** %271 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !12
  %275 = getelementptr i8*, i8** %271, i64 2
  %276 = bitcast i8** %275 to <2 x i64>*
  %277 = load <2 x i64>, <2 x i64>* %276, align 8, !alias.scope !12
  %278 = bitcast i8** %272 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %278, align 8, !alias.scope !15, !noalias !12
  %279 = getelementptr i8*, i8** %272, i64 2
  %280 = bitcast i8** %279 to <2 x i64>*
  store <2 x i64> %277, <2 x i64>* %280, align 8, !alias.scope !15, !noalias !12
  %281 = or i64 %258, 8
  %282 = getelementptr i8*, i8** %2, i64 %281
  %283 = getelementptr i8*, i8** %226, i64 %281
  %284 = bitcast i8** %282 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !12
  %286 = getelementptr i8*, i8** %282, i64 2
  %287 = bitcast i8** %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !12
  %289 = bitcast i8** %283 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %289, align 8, !alias.scope !15, !noalias !12
  %290 = getelementptr i8*, i8** %283, i64 2
  %291 = bitcast i8** %290 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %291, align 8, !alias.scope !15, !noalias !12
  %292 = or i64 %258, 12
  %293 = getelementptr i8*, i8** %2, i64 %292
  %294 = getelementptr i8*, i8** %226, i64 %292
  %295 = bitcast i8** %293 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !alias.scope !12
  %297 = getelementptr i8*, i8** %293, i64 2
  %298 = bitcast i8** %297 to <2 x i64>*
  %299 = load <2 x i64>, <2 x i64>* %298, align 8, !alias.scope !12
  %300 = bitcast i8** %294 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %300, align 8, !alias.scope !15, !noalias !12
  %301 = getelementptr i8*, i8** %294, i64 2
  %302 = bitcast i8** %301 to <2 x i64>*
  store <2 x i64> %299, <2 x i64>* %302, align 8, !alias.scope !15, !noalias !12
  %303 = add i64 %258, 16
  %304 = add i64 %259, -4
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %257, !llvm.loop !17

306:                                              ; preds = %257, %245
  %307 = phi i64 [ 0, %245 ], [ %303, %257 ]
  %308 = icmp eq i64 %253, 0
  br i1 %308, label %325, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %322, %309 ], [ %307, %306 ]
  %311 = phi i64 [ %323, %309 ], [ %253, %306 ]
  %312 = getelementptr i8*, i8** %2, i64 %310
  %313 = getelementptr i8*, i8** %226, i64 %310
  %314 = bitcast i8** %312 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8, !alias.scope !12
  %316 = getelementptr i8*, i8** %312, i64 2
  %317 = bitcast i8** %316 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8, !alias.scope !12
  %319 = bitcast i8** %313 to <2 x i64>*
  store <2 x i64> %315, <2 x i64>* %319, align 8, !alias.scope !15, !noalias !12
  %320 = getelementptr i8*, i8** %313, i64 2
  %321 = bitcast i8** %320 to <2 x i64>*
  store <2 x i64> %318, <2 x i64>* %321, align 8, !alias.scope !15, !noalias !12
  %322 = add i64 %310, 4
  %323 = add i64 %311, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %309, !llvm.loop !18

325:                                              ; preds = %309, %306
  %326 = icmp eq i64 %232, %246
  br i1 %326, label %403, label %327

327:                                              ; preds = %325, %234, %222
  %328 = phi i8** [ %226, %234 ], [ %226, %222 ], [ %247, %325 ]
  %329 = phi i8** [ %2, %234 ], [ %2, %222 ], [ %248, %325 ]
  %330 = phi i8** [ %226, %234 ], [ %226, %222 ], [ %249, %325 ]
  %331 = ptrtoint i8** %328 to i64
  %332 = add nsw i64 %223, %12
  %333 = add nsw i64 %332, -1
  %334 = getelementptr i8*, i8** %225, i64 %333
  %335 = ptrtoint i8** %334 to i64
  %336 = sub i64 %335, %331
  %337 = lshr i64 %336, 3
  %338 = add nuw nsw i64 %337, 1
  %339 = and i64 %338, 7
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %353, label %341

341:                                              ; preds = %327, %341
  %342 = phi i8** [ %349, %341 ], [ %328, %327 ]
  %343 = phi i8** [ %350, %341 ], [ %329, %327 ]
  %344 = phi i8** [ %349, %341 ], [ %330, %327 ]
  %345 = phi i64 [ %351, %341 ], [ %339, %327 ]
  %346 = bitcast i8** %343 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast i8** %344 to i64*
  store i64 %347, i64* %348, align 8
  %349 = getelementptr inbounds i8*, i8** %342, i64 1
  %350 = getelementptr inbounds i8*, i8** %343, i64 1
  %351 = add i64 %345, -1
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %341, !llvm.loop !19

353:                                              ; preds = %341, %327
  %354 = phi i8** [ %328, %327 ], [ %349, %341 ]
  %355 = phi i8** [ %329, %327 ], [ %350, %341 ]
  %356 = phi i8** [ %330, %327 ], [ %349, %341 ]
  %357 = icmp ult i64 %336, 56
  br i1 %357, label %403, label %358

358:                                              ; preds = %353, %358
  %359 = phi i8** [ %400, %358 ], [ %354, %353 ]
  %360 = phi i8** [ %401, %358 ], [ %355, %353 ]
  %361 = phi i8** [ %400, %358 ], [ %356, %353 ]
  %362 = bitcast i8** %360 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast i8** %361 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds i8*, i8** %359, i64 1
  %366 = getelementptr inbounds i8*, i8** %360, i64 1
  %367 = bitcast i8** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast i8** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds i8*, i8** %359, i64 2
  %371 = getelementptr inbounds i8*, i8** %360, i64 2
  %372 = bitcast i8** %371 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast i8** %370 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds i8*, i8** %359, i64 3
  %376 = getelementptr inbounds i8*, i8** %360, i64 3
  %377 = bitcast i8** %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast i8** %375 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds i8*, i8** %359, i64 4
  %381 = getelementptr inbounds i8*, i8** %360, i64 4
  %382 = bitcast i8** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast i8** %380 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds i8*, i8** %359, i64 5
  %386 = getelementptr inbounds i8*, i8** %360, i64 5
  %387 = bitcast i8** %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = bitcast i8** %385 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds i8*, i8** %359, i64 6
  %391 = getelementptr inbounds i8*, i8** %360, i64 6
  %392 = bitcast i8** %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast i8** %390 to i64*
  store i64 %393, i64* %394, align 8
  %395 = getelementptr inbounds i8*, i8** %359, i64 7
  %396 = getelementptr inbounds i8*, i8** %360, i64 7
  %397 = bitcast i8** %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = bitcast i8** %395 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds i8*, i8** %359, i64 8
  %401 = getelementptr inbounds i8*, i8** %360, i64 8
  %402 = icmp eq i8** %229, %400
  br i1 %402, label %403, label %358, !llvm.loop !20

403:                                              ; preds = %353, %358, %325
  %404 = load i8**, i8*** %8, align 8
  %405 = ptrtoint i8** %404 to i64
  %406 = sub i64 %7, %405
  %407 = ashr exact i64 %406, 3
  %408 = sub nsw i64 0, %407
  %409 = getelementptr inbounds i8*, i8** %226, i64 %408
  %410 = ptrtoint i8** %409 to i64
  %411 = icmp sgt i64 %406, 0
  br i1 %411, label %412, label %415

412:                                              ; preds = %403
  %413 = bitcast i8** %409 to i8*
  %414 = bitcast i8** %404 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %413, i8* align 8 %414, i64 %406, i1 false) #6
  br label %415

415:                                              ; preds = %412, %403
  %416 = load i8**, i8*** %18, align 8
  %417 = icmp eq i8** %416, %1
  br i1 %417, label %596, label %418

418:                                              ; preds = %415
  %419 = getelementptr i8*, i8** %416, i64 -1
  %420 = ptrtoint i8** %419 to i64
  %421 = sub i64 %420, %7
  %422 = lshr i64 %421, 3
  %423 = add nuw nsw i64 %422, 1
  %424 = icmp ult i64 %423, 4
  br i1 %424, label %521, label %425

425:                                              ; preds = %418
  %426 = add nsw i64 %223, %12
  %427 = getelementptr i8*, i8** %416, i64 -1
  %428 = ptrtoint i8** %427 to i64
  %429 = sub i64 %428, %7
  %430 = lshr i64 %429, 3
  %431 = add nsw i64 %426, %430
  %432 = add nsw i64 %431, 1
  %433 = getelementptr i8*, i8** %225, i64 %432
  %434 = add nuw nsw i64 %430, 1
  %435 = getelementptr i8*, i8** %1, i64 %434
  %436 = icmp ult i8** %229, %435
  %437 = icmp ugt i8** %433, %1
  %438 = and i1 %436, %437
  br i1 %438, label %521, label %439

439:                                              ; preds = %425
  %440 = and i64 %423, 4611686018427387900
  %441 = getelementptr i8*, i8** %229, i64 %440
  %442 = getelementptr i8*, i8** %229, i64 %440
  %443 = getelementptr i8*, i8** %1, i64 %440
  %444 = add nsw i64 %440, -4
  %445 = lshr exact i64 %444, 2
  %446 = add nuw nsw i64 %445, 1
  %447 = and i64 %446, 3
  %448 = icmp ult i64 %444, 12
  br i1 %448, label %500, label %449

449:                                              ; preds = %439
  %450 = sub nsw i64 %446, %447
  br label %451

451:                                              ; preds = %451, %449
  %452 = phi i64 [ 0, %449 ], [ %497, %451 ]
  %453 = phi i64 [ %450, %449 ], [ %498, %451 ]
  %454 = getelementptr i8*, i8** %229, i64 %452
  %455 = getelementptr i8*, i8** %1, i64 %452
  %456 = bitcast i8** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !21
  %458 = getelementptr i8*, i8** %455, i64 2
  %459 = bitcast i8** %458 to <2 x i64>*
  %460 = load <2 x i64>, <2 x i64>* %459, align 8, !alias.scope !21
  %461 = bitcast i8** %454 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %461, align 8, !alias.scope !24, !noalias !21
  %462 = getelementptr i8*, i8** %454, i64 2
  %463 = bitcast i8** %462 to <2 x i64>*
  store <2 x i64> %460, <2 x i64>* %463, align 8, !alias.scope !24, !noalias !21
  %464 = or i64 %452, 4
  %465 = getelementptr i8*, i8** %229, i64 %464
  %466 = getelementptr i8*, i8** %1, i64 %464
  %467 = bitcast i8** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !21
  %469 = getelementptr i8*, i8** %466, i64 2
  %470 = bitcast i8** %469 to <2 x i64>*
  %471 = load <2 x i64>, <2 x i64>* %470, align 8, !alias.scope !21
  %472 = bitcast i8** %465 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %472, align 8, !alias.scope !24, !noalias !21
  %473 = getelementptr i8*, i8** %465, i64 2
  %474 = bitcast i8** %473 to <2 x i64>*
  store <2 x i64> %471, <2 x i64>* %474, align 8, !alias.scope !24, !noalias !21
  %475 = or i64 %452, 8
  %476 = getelementptr i8*, i8** %229, i64 %475
  %477 = getelementptr i8*, i8** %1, i64 %475
  %478 = bitcast i8** %477 to <2 x i64>*
  %479 = load <2 x i64>, <2 x i64>* %478, align 8, !alias.scope !21
  %480 = getelementptr i8*, i8** %477, i64 2
  %481 = bitcast i8** %480 to <2 x i64>*
  %482 = load <2 x i64>, <2 x i64>* %481, align 8, !alias.scope !21
  %483 = bitcast i8** %476 to <2 x i64>*
  store <2 x i64> %479, <2 x i64>* %483, align 8, !alias.scope !24, !noalias !21
  %484 = getelementptr i8*, i8** %476, i64 2
  %485 = bitcast i8** %484 to <2 x i64>*
  store <2 x i64> %482, <2 x i64>* %485, align 8, !alias.scope !24, !noalias !21
  %486 = or i64 %452, 12
  %487 = getelementptr i8*, i8** %229, i64 %486
  %488 = getelementptr i8*, i8** %1, i64 %486
  %489 = bitcast i8** %488 to <2 x i64>*
  %490 = load <2 x i64>, <2 x i64>* %489, align 8, !alias.scope !21
  %491 = getelementptr i8*, i8** %488, i64 2
  %492 = bitcast i8** %491 to <2 x i64>*
  %493 = load <2 x i64>, <2 x i64>* %492, align 8, !alias.scope !21
  %494 = bitcast i8** %487 to <2 x i64>*
  store <2 x i64> %490, <2 x i64>* %494, align 8, !alias.scope !24, !noalias !21
  %495 = getelementptr i8*, i8** %487, i64 2
  %496 = bitcast i8** %495 to <2 x i64>*
  store <2 x i64> %493, <2 x i64>* %496, align 8, !alias.scope !24, !noalias !21
  %497 = add i64 %452, 16
  %498 = add i64 %453, -4
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %451, !llvm.loop !26

500:                                              ; preds = %451, %439
  %501 = phi i64 [ 0, %439 ], [ %497, %451 ]
  %502 = icmp eq i64 %447, 0
  br i1 %502, label %519, label %503

503:                                              ; preds = %500, %503
  %504 = phi i64 [ %516, %503 ], [ %501, %500 ]
  %505 = phi i64 [ %517, %503 ], [ %447, %500 ]
  %506 = getelementptr i8*, i8** %229, i64 %504
  %507 = getelementptr i8*, i8** %1, i64 %504
  %508 = bitcast i8** %507 to <2 x i64>*
  %509 = load <2 x i64>, <2 x i64>* %508, align 8, !alias.scope !21
  %510 = getelementptr i8*, i8** %507, i64 2
  %511 = bitcast i8** %510 to <2 x i64>*
  %512 = load <2 x i64>, <2 x i64>* %511, align 8, !alias.scope !21
  %513 = bitcast i8** %506 to <2 x i64>*
  store <2 x i64> %509, <2 x i64>* %513, align 8, !alias.scope !24, !noalias !21
  %514 = getelementptr i8*, i8** %506, i64 2
  %515 = bitcast i8** %514 to <2 x i64>*
  store <2 x i64> %512, <2 x i64>* %515, align 8, !alias.scope !24, !noalias !21
  %516 = add i64 %504, 4
  %517 = add i64 %505, -1
  %518 = icmp eq i64 %517, 0
  br i1 %518, label %519, label %503, !llvm.loop !27

519:                                              ; preds = %503, %500
  %520 = icmp eq i64 %423, %440
  br i1 %520, label %596, label %521

521:                                              ; preds = %519, %425, %418
  %522 = phi i8** [ %229, %425 ], [ %229, %418 ], [ %441, %519 ]
  %523 = phi i8** [ %229, %425 ], [ %229, %418 ], [ %442, %519 ]
  %524 = phi i8** [ %1, %425 ], [ %1, %418 ], [ %443, %519 ]
  %525 = ptrtoint i8** %524 to i64
  %526 = getelementptr i8*, i8** %416, i64 -1
  %527 = ptrtoint i8** %526 to i64
  %528 = sub i64 %527, %525
  %529 = lshr i64 %528, 3
  %530 = add nuw nsw i64 %529, 1
  %531 = and i64 %530, 7
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %545, label %533

533:                                              ; preds = %521, %533
  %534 = phi i8** [ %542, %533 ], [ %522, %521 ]
  %535 = phi i8** [ %542, %533 ], [ %523, %521 ]
  %536 = phi i8** [ %541, %533 ], [ %524, %521 ]
  %537 = phi i64 [ %543, %533 ], [ %531, %521 ]
  %538 = bitcast i8** %535 to i64*
  %539 = bitcast i8** %536 to i64*
  %540 = load i64, i64* %539, align 8
  store i64 %540, i64* %538, align 8
  %541 = getelementptr inbounds i8*, i8** %536, i64 1
  %542 = getelementptr inbounds i8*, i8** %534, i64 1
  %543 = add i64 %537, -1
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %545, label %533, !llvm.loop !28

545:                                              ; preds = %533, %521
  %546 = phi i8** [ undef, %521 ], [ %542, %533 ]
  %547 = phi i8** [ %522, %521 ], [ %542, %533 ]
  %548 = phi i8** [ %523, %521 ], [ %542, %533 ]
  %549 = phi i8** [ %524, %521 ], [ %541, %533 ]
  %550 = icmp ult i64 %528, 56
  br i1 %550, label %596, label %551

551:                                              ; preds = %545, %551
  %552 = phi i8** [ %594, %551 ], [ %547, %545 ]
  %553 = phi i8** [ %594, %551 ], [ %548, %545 ]
  %554 = phi i8** [ %593, %551 ], [ %549, %545 ]
  %555 = bitcast i8** %553 to i64*
  %556 = bitcast i8** %554 to i64*
  %557 = load i64, i64* %556, align 8
  store i64 %557, i64* %555, align 8
  %558 = getelementptr inbounds i8*, i8** %554, i64 1
  %559 = getelementptr inbounds i8*, i8** %552, i64 1
  %560 = bitcast i8** %559 to i64*
  %561 = bitcast i8** %558 to i64*
  %562 = load i64, i64* %561, align 8
  store i64 %562, i64* %560, align 8
  %563 = getelementptr inbounds i8*, i8** %554, i64 2
  %564 = getelementptr inbounds i8*, i8** %552, i64 2
  %565 = bitcast i8** %564 to i64*
  %566 = bitcast i8** %563 to i64*
  %567 = load i64, i64* %566, align 8
  store i64 %567, i64* %565, align 8
  %568 = getelementptr inbounds i8*, i8** %554, i64 3
  %569 = getelementptr inbounds i8*, i8** %552, i64 3
  %570 = bitcast i8** %569 to i64*
  %571 = bitcast i8** %568 to i64*
  %572 = load i64, i64* %571, align 8
  store i64 %572, i64* %570, align 8
  %573 = getelementptr inbounds i8*, i8** %554, i64 4
  %574 = getelementptr inbounds i8*, i8** %552, i64 4
  %575 = bitcast i8** %574 to i64*
  %576 = bitcast i8** %573 to i64*
  %577 = load i64, i64* %576, align 8
  store i64 %577, i64* %575, align 8
  %578 = getelementptr inbounds i8*, i8** %554, i64 5
  %579 = getelementptr inbounds i8*, i8** %552, i64 5
  %580 = bitcast i8** %579 to i64*
  %581 = bitcast i8** %578 to i64*
  %582 = load i64, i64* %581, align 8
  store i64 %582, i64* %580, align 8
  %583 = getelementptr inbounds i8*, i8** %554, i64 6
  %584 = getelementptr inbounds i8*, i8** %552, i64 6
  %585 = bitcast i8** %584 to i64*
  %586 = bitcast i8** %583 to i64*
  %587 = load i64, i64* %586, align 8
  store i64 %587, i64* %585, align 8
  %588 = getelementptr inbounds i8*, i8** %554, i64 7
  %589 = getelementptr inbounds i8*, i8** %552, i64 7
  %590 = bitcast i8** %589 to i64*
  %591 = bitcast i8** %588 to i64*
  %592 = load i64, i64* %591, align 8
  store i64 %592, i64* %590, align 8
  %593 = getelementptr inbounds i8*, i8** %554, i64 8
  %594 = getelementptr inbounds i8*, i8** %552, i64 8
  %595 = icmp eq i8** %593, %416
  br i1 %595, label %596, label %551, !llvm.loop !29

596:                                              ; preds = %545, %551, %519, %415
  %597 = phi i8** [ %229, %415 ], [ %441, %519 ], [ %546, %545 ], [ %594, %551 ]
  %598 = ptrtoint i8** %597 to i64
  %599 = load i8**, i8*** %8, align 8
  store i64 %410, i64* %191, align 8
  store i64 %598, i64* %24, align 8
  store i64 %228, i64* %16, align 8
  %600 = icmp eq i8** %599, null
  br i1 %600, label %603, label %601

601:                                              ; preds = %596
  %602 = bitcast i8** %599 to i8*
  tail call void @_ZdlPv(i8* %602) #8
  br label %603

603:                                              ; preds = %601, %596, %40, %185, %189, %4
  %604 = phi i8** [ %1, %4 ], [ %1, %189 ], [ %1, %185 ], [ %1, %40 ], [ %226, %596 ], [ %226, %601 ]
  ret i8** %604
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !8}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !8}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !8}
