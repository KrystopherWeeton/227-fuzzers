; ModuleID = '../../third_party/blink/renderer/core/workers/worker_backing_thread.cc'
source_filename = "../../third_party/blink/renderer/core/workers/worker_backing_thread.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Mutex>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Mutex>::InstanceStorage" = type { %"class.WTF::Mutex"* }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.337" }
%"class.WTF::HashTable.337" = type <{ %"class.v8::Isolate"**, i32, i32, i32, [4 x i8] }>
%"class.v8::Isolate" = type { i8 }
%"class.blink::WorkerBackingThread" = type { %"class.std::__1::unique_ptr", %"class.v8::Isolate"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"struct.blink::ThreadCreationParams" = type <{ i32, [4 x i8], i8*, %"class.blink::FrameOrWorkerScheduler"*, i32, i8, [3 x i8] }>
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"struct.blink::WorkerBackingThreadStartupData" = type { i32, i32 }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.8" }>
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gin::V8IdleTaskRunner" = type { i32 (...)** }
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.39", %"class.WTF::HashMap.39", %"class.WTF::HashMap.44", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.73", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.257", %"class.std::__1::unique_ptr.264", %"class.blink::Persistent.270", %"class.blink::Persistent.272", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.21", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type opaque
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.48"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.48" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.57", %class.scoped_refptr.64 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.52", i8* }
%"class.WTF::HashMap.52" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"struct.WTF::KeyValuePair.56"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.56" = type { %"class.WTF::StringImpl"*, i64 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.65" }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i32 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.57" = type { %"class.v8::PersistentValueMapBase.58" }
%"class.v8::PersistentValueMapBase.58" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.59", i8* }
%"class.WTF::HashMap.59" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ %"struct.WTF::KeyValuePair.63"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.63" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.343", %"class.WTF::String", %"class.std::__1::unique_ptr.345" }
%"class.WTF::RefCounted.343" = type { %"class.base::RefCounted.344" }
%"class.base::RefCounted.344" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.64 }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.359", %"class.WTF::Vector.365", i8, i32 }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.WTF::Vector.351"* }
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.353", [32 x i8] }
%class.scoped_refptr.64 = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.290, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.290 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent.291" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.291" = type { %"class.blink::PersistentBase.292" }
%"class.blink::PersistentBase.292" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.297" }
%"class.WTF::HashMap.297" = type { %"class.WTF::HashTable.298" }
%"class.WTF::HashTable.298" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.79", i32, [4 x i8], %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.253", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.195", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i64 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::Worklist.154"* }
%"class.blink::Worklist.154" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::Worklist.161"* }
%"class.blink::Worklist.161" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::Worklist.168"* }
%"class.blink::Worklist.168" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.189", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { i64 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { float }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.198", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type { i32 (...)** }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.234" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.140"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.147"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.154"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.283" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.260 }
%class.scoped_refptr.260 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.261", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.261" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.272" = type { %"class.blink::PersistentBase.273" }
%"class.blink::PersistentBase.273" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.278" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"struct.std::__1::pair.281"*, i32, i32 }
%"struct.std::__1::pair.281" = type { %"class.blink::UntracedMember", %"class.blink::Member.341" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::WorkerThreadDebugger" = type { %"class.blink::ThreadDebugger", i32, [4 x i8], %"class.WTF::HashMap.329" }
%"class.blink::ThreadDebugger" = type { %"class.v8_inspector::V8InspectorClient", %"class.blink::V8PerIsolateData::Data", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.307", %"class.WTF::Vector.313", %"class.WTF::Vector.319", %"class.WTF::Vector.324" }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.v8_inspector::V8Inspector"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"class.std::__1::unique_ptr.316"*, i32, i32 }
%"class.std::__1::unique_ptr.316" = type opaque
%"class.WTF::Vector.319" = type { %"class.WTF::VectorBuffer.320" }
%"class.WTF::VectorBuffer.320" = type { %"class.WTF::VectorBufferBase.321" }
%"class.WTF::VectorBufferBase.321" = type { void (i8*)**, i32, i32 }
%"class.WTF::Vector.324" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326" }
%"class.WTF::VectorBufferBase.326" = type { i8**, i32, i32 }
%"class.WTF::HashMap.329" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ %"struct.WTF::KeyValuePair.333"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.333" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::V8IdleTaskRunner" = type { %"class.gin::V8IdleTaskRunner", %"class.blink::ThreadScheduler"* }
%"class.v8::IdleTask" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.390" = type { %"class.base::internal::CallbackBase" }

$_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS1_14default_deleteIS4_EEEE = comdat any

$_ZN3gin16V8IdleTaskRunnerD2Ev = comdat any

$_ZN5blink16V8IdleTaskRunnerD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS5_14default_deleteIS8_EEEEEUlSB_NS_9TimeTicksEE_JSB_EEEFvSC_EE7RunOnceEPNS0_13BindStateBaseEOSC_ = comdat any

$_ZN4base8internal9BindStateIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS4_14default_deleteIS7_EEEEEUlSA_NS_9TimeTicksEE_JSA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZTVN5blink16V8IdleTaskRunnerE = comdat any

@_ZN5blink8features32kV8OptimizeWorkersForPerformanceE = external global %"struct.base::Feature", align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN2v87IsolateEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = v8::Isolate *]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase25is_v8_idle_tasks_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex = internal global i64 0, align 8
@_ZZN5blink12_GLOBAL__N_18IsolatesEvE8isolates = internal unnamed_addr global %"class.WTF::HashSet"* null, align 8
@_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetIPN2v87IsolateENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashSet<v8::Isolate *, WTF::PtrHash<v8::Isolate>, WTF::HashTraits<v8::Isolate *>, WTF::PartitionAllocator>]\00", align 1
@_ZTVN5blink16V8IdleTaskRunnerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::V8IdleTaskRunner"*, %"class.v8::IdleTask"*)* @_ZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.gin::V8IdleTaskRunner"*)* @_ZN3gin16V8IdleTaskRunnerD2Ev to i8*), i8* bitcast (void (%"class.blink::V8IdleTaskRunner"*)* @_ZN5blink16V8IdleTaskRunnerD0Ev to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"PostIdleTask\00", align 1
@.str.3 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/bindings/core/v8/v8_idle_task_runner.h\00", align 1

@_ZN5blink19WorkerBackingThreadC1ERKNS_20ThreadCreationParamsE = hidden unnamed_addr alias void (%"class.blink::WorkerBackingThread"*, %"struct.blink::ThreadCreationParams"*), void (%"class.blink::WorkerBackingThread"*, %"struct.blink::ThreadCreationParams"*)* @_ZN5blink19WorkerBackingThreadC2ERKNS_20ThreadCreationParamsE
@_ZN5blink19WorkerBackingThreadD1Ev = hidden unnamed_addr alias void (%"class.blink::WorkerBackingThread"*), void (%"class.blink::WorkerBackingThread"*)* @_ZN5blink19WorkerBackingThreadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink48MemoryPressureNotificationToWorkerThreadIsolatesEN2v819MemoryPressureLevelE(i32) local_unnamed_addr #0 {
  tail call void @_ZN5blink19WorkerBackingThread48MemoryPressureNotificationToWorkerThreadIsolatesEN2v819MemoryPressureLevelE(i32 %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WorkerBackingThread48MemoryPressureNotificationToWorkerThreadIsolatesEN2v819MemoryPressureLevelE(i32) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 40) #8
  %9 = bitcast i8* %8 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %9, i1 zeroext false) #8
  store i8* %8, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex) #8
  br label %10

10:                                               ; preds = %1, %4, %7
  %11 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex, i64 0, i32 0, i32 0), align 8
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #8
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %20, !prof !2

15:                                               ; preds = %10
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetIPN2v87IsolateENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #8
  store i8* %19, i8** bitcast (%"class.WTF::HashSet"** @_ZZN5blink12_GLOBAL__N_18IsolatesEvE8isolates to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates) #8
  br label %20

20:                                               ; preds = %10, %15, %18
  %21 = load %"class.WTF::HashSet"*, %"class.WTF::HashSet"** @_ZZN5blink12_GLOBAL__N_18IsolatesEvE8isolates, align 8
  %22 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %21, i64 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %21, i64 0, i32 0, i32 0
  %26 = load %"class.v8::Isolate"**, %"class.v8::Isolate"*** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %21, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %26, i64 %29
  br i1 %24, label %43, label %31

31:                                               ; preds = %20
  %32 = icmp eq i32 %28, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %31, %37
  %34 = phi %"class.v8::Isolate"** [ %38, %37 ], [ %26, %31 ]
  %35 = bitcast %"class.v8::Isolate"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  switch i64 %36, label %40 [
    i64 -1, label %37
    i64 0, label %37
  ]

37:                                               ; preds = %33, %33
  %38 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, i64 1
  %39 = icmp eq %"class.v8::Isolate"** %38, %30
  br i1 %39, label %43, label %33

40:                                               ; preds = %33, %31
  %41 = phi %"class.v8::Isolate"** [ %26, %31 ], [ %34, %33 ]
  %42 = icmp eq %"class.v8::Isolate"** %41, %30
  br i1 %42, label %43, label %44

43:                                               ; preds = %37, %44, %56, %53, %20, %40
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #8
  ret void

44:                                               ; preds = %40, %56
  %45 = phi %"class.v8::Isolate"** [ %50, %56 ], [ %41, %40 ]
  %46 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %45, align 8
  tail call void @_ZN2v87Isolate26MemoryPressureNotificationENS_19MemoryPressureLevelE(%"class.v8::Isolate"* %46, i32 %0) #8
  %47 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %45, i64 1
  %48 = icmp eq %"class.v8::Isolate"** %47, %30
  br i1 %48, label %43, label %49

49:                                               ; preds = %44, %53
  %50 = phi %"class.v8::Isolate"** [ %54, %53 ], [ %47, %44 ]
  %51 = bitcast %"class.v8::Isolate"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  switch i64 %52, label %56 [
    i64 -1, label %53
    i64 0, label %53
  ]

53:                                               ; preds = %49, %49
  %54 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, i64 1
  %55 = icmp eq %"class.v8::Isolate"** %54, %30
  br i1 %55, label %43, label %49

56:                                               ; preds = %49
  %57 = icmp eq %"class.v8::Isolate"** %50, %30
  br i1 %57, label %43, label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WorkerBackingThreadC2ERKNS_20ThreadCreationParamsE(%"class.blink::WorkerBackingThread"* nocapture, %"struct.blink::ThreadCreationParams"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ThreadCreationParams", align 8
  %4 = bitcast %"struct.blink::ThreadCreationParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8
  %5 = bitcast %"struct.blink::ThreadCreationParams"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 29, i1 false)
  %6 = call dereferenceable(32) %"struct.blink::ThreadCreationParams"* @_ZN5blink20ThreadCreationParams13SetSupportsGCEb(%"struct.blink::ThreadCreationParams"* nonnull %3, i1 zeroext true) #8
  %7 = call %"class.blink::Thread"* @_ZN5blink6Thread12CreateThreadERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* dereferenceable(32) %6) #8
  %8 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::Thread"* %7, %"class.blink::Thread"** %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8
  %9 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %0, i64 0, i32 1
  store %"class.v8::Isolate"* null, %"class.v8::Isolate"** %9, align 8
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread12CreateThreadERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(32) %"struct.blink::ThreadCreationParams"* @_ZN5blink20ThreadCreationParams13SetSupportsGCEb(%"struct.blink::ThreadCreationParams"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WorkerBackingThreadD2Ev(%"class.blink::WorkerBackingThread"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Thread"*, %"class.blink::Thread"** %2, align 8
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %2, align 8
  %4 = icmp eq %"class.blink::Thread"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::Thread"* %3 to void (%"class.blink::Thread"*)***
  %7 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %7, i64 1
  %9 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %8, align 8
  tail call void %9(%"class.blink::Thread"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WorkerBackingThread25InitializeOnBackingThreadERKNS_30WorkerBackingThreadStartupDataE(%"class.blink::WorkerBackingThread"* nocapture, %"struct.blink::WorkerBackingThreadStartupData"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::Isolate"*, align 8
  %4 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Thread"*, %"class.blink::Thread"** %4, align 8
  %6 = bitcast %"class.blink::Thread"* %5 to %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)***
  %7 = load %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)**, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)** %7, i64 6
  %9 = load %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)** %8, align 8
  %10 = tail call %"class.blink::ThreadScheduler"* %9(%"class.blink::Thread"* %5) #8
  %11 = ptrtoint %"class.blink::ThreadScheduler"* %10 to i64
  %12 = bitcast %"class.blink::ThreadScheduler"* %10 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)***
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %13, i64 10
  %15 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %14, align 8
  %16 = tail call %"class.base::SingleThreadTaskRunner"* %15(%"class.blink::ThreadScheduler"* %10) #8
  %17 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData10InitializeE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_21V8ContextSnapshotModeE(%"class.base::SingleThreadTaskRunner"* %16, i32 1) #8
  %18 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %0, i64 0, i32 1
  store %"class.v8::Isolate"* %17, %"class.v8::Isolate"** %18, align 8
  %19 = bitcast %"class.blink::ThreadScheduler"* %10 to void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)***
  %20 = load void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)**, void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)*, void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)** %20, i64 22
  %22 = load void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)*, void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)** %21, align 8
  tail call void %22(%"class.blink::ThreadScheduler"* %10, %"class.v8::Isolate"* %17) #8
  %23 = bitcast %"class.v8::Isolate"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8::Isolate"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = bitcast %"class.v8::Isolate"** %3 to i64*
  store i64 %24, i64* %26, align 8
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %35, !prof !2

29:                                               ; preds = %2
  %30 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = tail call noalias i8* @malloc(i64 40) #8
  %34 = bitcast i8* %33 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %34, i1 zeroext false) #8
  store i8* %33, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex) #8
  br label %35

35:                                               ; preds = %32, %29, %2
  %36 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex, i64 0, i32 0, i32 0), align 8
  %37 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %36, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %37) #8
  %38 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates to i8*) acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %45, !prof !2

40:                                               ; preds = %35
  %41 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetIPN2v87IsolateENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 20, i1 false) #8
  store i8* %44, i8** bitcast (%"class.WTF::HashSet"** @_ZZN5blink12_GLOBAL__N_18IsolatesEvE8isolates to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates) #8
  br label %45

45:                                               ; preds = %35, %40, %43
  %46 = load %"class.WTF::HashSet"*, %"class.WTF::HashSet"** @_ZZN5blink12_GLOBAL__N_18IsolatesEvE8isolates, align 8
  %47 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %46, i64 0, i32 0
  %48 = call { %"class.v8::Isolate"**, i8 } @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.337"* %47, %"class.v8::Isolate"** nonnull dereferenceable(8) %3, %"class.v8::Isolate"** nonnull dereferenceable(8) %3) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %49 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  call void @_ZN5blink13V8Initializer16InitializeWorkerEPN2v87IsolateE(%"class.v8::Isolate"* %49) #8
  %50 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_v8_idle_tasks_enabled_E, align 1, !range !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %45
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %54 = call noalias i8* @malloc(i64 16) #8
  %55 = bitcast i8* %54 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink16V8IdleTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 8
  %57 = bitcast i8* %56 to i64*
  store i64 %11, i64* %57, align 8
  %58 = bitcast i8* %54 to %"class.gin::V8IdleTaskRunner"*
  call void @_ZN5blink16V8PerIsolateData15EnableIdleTasksEPN2v87IsolateENSt3__110unique_ptrIN3gin16V8IdleTaskRunnerENS4_14default_deleteIS7_EEEE(%"class.v8::Isolate"* %53, %"class.gin::V8IdleTaskRunner"* %58) #8
  br label %59

59:                                               ; preds = %45, %52
  %60 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #8
  %61 = bitcast %"class.blink::Platform"* %60 to void (%"class.blink::Platform"*)***
  %62 = load void (%"class.blink::Platform"*)**, void (%"class.blink::Platform"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::Platform"*)*, void (%"class.blink::Platform"*)** %62, i64 85
  %64 = load void (%"class.blink::Platform"*)*, void (%"class.blink::Platform"*)** %63, align 8
  call void %64(%"class.blink::Platform"* %60) #8
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %66 = ptrtoint %"class.v8::Isolate"* %65 to i64
  %67 = add i64 %66, 8
  %68 = inttoptr i64 %67 to %"class.blink::V8PerIsolateData"**
  %69 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %68, align 8
  %70 = call i8* @_Znwm(i64 112) #9
  %71 = bitcast i8* %70 to %"class.blink::WorkerThreadDebugger"*
  call void @_ZN5blink20WorkerThreadDebuggerC1EPN2v87IsolateE(%"class.blink::WorkerThreadDebugger"* nonnull %71, %"class.v8::Isolate"* %65) #8
  %72 = getelementptr inbounds i8, i8* %70, i64 8
  %73 = bitcast i8* %72 to %"class.blink::V8PerIsolateData::Data"*
  call void @_ZN5blink16V8PerIsolateData17SetThreadDebuggerENSt3__110unique_ptrINS0_4DataENS1_14default_deleteIS3_EEEE(%"class.blink::V8PerIsolateData"* %69, %"class.blink::V8PerIsolateData::Data"* %73) #8
  %74 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features32kV8OptimizeWorkersForPerformanceE) #8
  br i1 %74, label %77, label %75

75:                                               ; preds = %59
  %76 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  call void @_ZN2v87Isolate31IsolateInBackgroundNotificationEv(%"class.v8::Isolate"* %76) #8
  br label %77

77:                                               ; preds = %75, %59
  %78 = getelementptr inbounds %"struct.blink::WorkerBackingThreadStartupData", %"struct.blink::WorkerBackingThreadStartupData"* %1, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  call void @_ZN2v87Isolate29IncreaseHeapLimitForDebuggingEv(%"class.v8::Isolate"* %82) #8
  br label %83

83:                                               ; preds = %81, %77
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %85 = getelementptr inbounds %"struct.blink::WorkerBackingThreadStartupData", %"struct.blink::WorkerBackingThreadStartupData"* %1, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 1
  call void @_ZN2v87Isolate19SetAllowAtomicsWaitEb(%"class.v8::Isolate"* %84, i1 zeroext %87) #8
  ret void
}

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData10InitializeE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_21V8ContextSnapshotModeE(%"class.base::SingleThreadTaskRunner"*, i32) local_unnamed_addr #1

declare void @_ZN5blink13V8Initializer16InitializeWorkerEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink16V8PerIsolateData15EnableIdleTasksEPN2v87IsolateENSt3__110unique_ptrIN3gin16V8IdleTaskRunnerENS4_14default_deleteIS7_EEEE(%"class.v8::Isolate"*, %"class.gin::V8IdleTaskRunner"*) local_unnamed_addr #1

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

declare void @_ZN5blink16V8PerIsolateData17SetThreadDebuggerENSt3__110unique_ptrINS0_4DataENS1_14default_deleteIS3_EEEE(%"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData::Data"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2v87Isolate31IsolateInBackgroundNotificationEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v87Isolate29IncreaseHeapLimitForDebuggingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v87Isolate19SetAllowAtomicsWaitEb(%"class.v8::Isolate"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WorkerBackingThread23ShutdownOnBackingThreadEv(%"class.blink::WorkerBackingThread"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Thread"*, %"class.blink::Thread"** %2, align 8
  %4 = bitcast %"class.blink::Thread"* %3 to %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)***
  %5 = load %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)**, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)** %5, i64 6
  %7 = load %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)** %6, align 8
  %8 = tail call %"class.blink::ThreadScheduler"* %7(%"class.blink::Thread"* %3) #8
  %9 = bitcast %"class.blink::ThreadScheduler"* %8 to void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)***
  %10 = load void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)**, void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)*, void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)** %10, i64 22
  %12 = load void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)*, void (%"class.blink::ThreadScheduler"*, %"class.v8::Isolate"*)** %11, align 8
  tail call void %12(%"class.blink::ThreadScheduler"* %8, %"class.v8::Isolate"* null) #8
  %13 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #8
  %14 = bitcast %"class.blink::Platform"* %13 to void (%"class.blink::Platform"*)***
  %15 = load void (%"class.blink::Platform"*)**, void (%"class.blink::Platform"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Platform"*)*, void (%"class.blink::Platform"*)** %15, i64 86
  %17 = load void (%"class.blink::Platform"*)*, void (%"class.blink::Platform"*)** %16, align 8
  tail call void %17(%"class.blink::Platform"* %13) #8
  %18 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %0, i64 0, i32 1
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  tail call void @_ZN5blink16V8PerIsolateData15WillBeDestroyedEPN2v87IsolateE(%"class.v8::Isolate"* %19) #8
  %20 = load %"class.blink::Thread"*, %"class.blink::Thread"** %2, align 8
  %21 = bitcast %"class.blink::Thread"* %20 to void (%"class.blink::Thread"*)***
  %22 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %22, i64 7
  %24 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %23, align 8
  tail call void %24(%"class.blink::Thread"* %20) #8
  %25 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %26 = ptrtoint %"class.v8::Isolate"* %25 to i64
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %35, !prof !2

29:                                               ; preds = %1
  %30 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = tail call noalias i8* @malloc(i64 40) #8
  %34 = bitcast i8* %33 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %34, i1 zeroext false) #8
  store i8* %33, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex) #8
  br label %35

35:                                               ; preds = %32, %29, %1
  %36 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_113IsolatesMutexEvE7s_mutex, i64 0, i32 0, i32 0), align 8
  %37 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %36, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %37) #8
  %38 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates to i8*) acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %45, !prof !2

40:                                               ; preds = %35
  %41 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetIPN2v87IsolateENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 20, i1 false) #8
  store i8* %44, i8** bitcast (%"class.WTF::HashSet"** @_ZZN5blink12_GLOBAL__N_18IsolatesEvE8isolates to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_18IsolatesEvE8isolates) #8
  br label %45

45:                                               ; preds = %43, %40, %35
  %46 = load %"class.WTF::HashSet"*, %"class.WTF::HashSet"** @_ZZN5blink12_GLOBAL__N_18IsolatesEvE8isolates, align 8
  %47 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.v8::Isolate"**, %"class.v8::Isolate"*** %48, align 8
  %50 = icmp eq %"class.v8::Isolate"** %49, null
  %51 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %46, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  br i1 %50, label %114, label %53

53:                                               ; preds = %45
  %54 = add i32 %52, -1
  %55 = zext i32 %54 to i64
  %56 = shl i64 %26, 32
  %57 = xor i64 %56, -1
  %58 = add i64 %57, %26
  %59 = lshr i64 %58, 22
  %60 = xor i64 %59, %58
  %61 = shl i64 %60, 13
  %62 = xor i64 %61, -1
  %63 = add i64 %60, %62
  %64 = lshr i64 %63, 8
  %65 = xor i64 %64, %63
  %66 = mul i64 %65, 9
  %67 = lshr i64 %66, 15
  %68 = xor i64 %67, %66
  %69 = shl i64 %68, 27
  %70 = xor i64 %69, -1
  %71 = add i64 %68, %70
  %72 = lshr i64 %71, 31
  %73 = xor i64 %72, %71
  %74 = trunc i64 %73 to i32
  %75 = and i32 %54, %74
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, i64 %76
  %78 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %77, align 8
  %79 = icmp eq %"class.v8::Isolate"* %78, %25
  br i1 %79, label %109, label %80

80:                                               ; preds = %53
  %81 = xor i32 %74, -1
  %82 = lshr i32 %74, 23
  %83 = add i32 %82, %81
  %84 = shl i32 %83, 12
  %85 = xor i32 %84, %83
  %86 = lshr i32 %85, 7
  %87 = xor i32 %86, %85
  %88 = shl i32 %87, 2
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 20
  %91 = xor i32 %90, %89
  %92 = or i32 %91, 1
  %93 = zext i32 %92 to i64
  br label %94

94:                                               ; preds = %99, %80
  %95 = phi %"class.v8::Isolate"* [ %78, %80 ], [ %105, %99 ]
  %96 = phi i64 [ %76, %80 ], [ %103, %99 ]
  %97 = phi i64 [ 0, %80 ], [ %101, %99 ]
  %98 = icmp eq %"class.v8::Isolate"* %95, null
  br i1 %98, label %114, label %99

99:                                               ; preds = %94
  %100 = icmp eq i64 %97, 0
  %101 = select i1 %100, i64 %93, i64 %97
  %102 = add i64 %101, %96
  %103 = and i64 %102, %55
  %104 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, i64 %103
  %105 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %104, align 8
  %106 = icmp eq %"class.v8::Isolate"* %105, %25
  br i1 %106, label %107, label %94

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, i64 %103
  br label %109

109:                                              ; preds = %107, %53
  %110 = phi %"class.v8::Isolate"** [ %77, %53 ], [ %108, %107 ]
  %111 = icmp eq %"class.v8::Isolate"** %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = zext i32 %52 to i64
  br label %117

114:                                              ; preds = %94, %109, %45
  %115 = zext i32 %52 to i64
  %116 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, i64 %115
  br label %117

117:                                              ; preds = %114, %112
  %118 = phi i64 [ %113, %112 ], [ %115, %114 ]
  %119 = phi %"class.v8::Isolate"** [ %110, %112 ], [ %116, %114 ]
  %120 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, i64 %118
  %121 = icmp eq %"class.v8::Isolate"** %120, %119
  br i1 %121, label %144, label %122

122:                                              ; preds = %117
  store %"class.v8::Isolate"* inttoptr (i64 -1 to %"class.v8::Isolate"*), %"class.v8::Isolate"** %119, align 8
  %123 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %46, i64 0, i32 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, 1
  %126 = and i32 %125, 2147483647
  %127 = and i32 %124, -2147483648
  %128 = or i32 %126, %127
  store i32 %128, i32* %123, align 8
  %129 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %46, i64 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, -1
  store i32 %131, i32* %129, align 4
  %132 = mul i32 %131, 6
  %133 = load i32, i32* %51, align 8
  %134 = icmp ult i32 %132, %133
  %135 = icmp ugt i32 %133, 8
  %136 = and i1 %134, %135
  br i1 %136, label %137, label %144

137:                                              ; preds = %122
  %138 = lshr i32 %133, 1
  %139 = zext i32 %138 to i64
  %140 = shl nuw nsw i64 %139, 3
  %141 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %140, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN2v87IsolateEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %141, i8 0, i64 %140, i1 false) #8
  %142 = bitcast i8* %141 to %"class.v8::Isolate"**
  %143 = tail call %"class.v8::Isolate"** @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.337"* %47, %"class.v8::Isolate"** %142, i32 %138, %"class.v8::Isolate"** null) #8
  br label %144

144:                                              ; preds = %117, %122, %137
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %37) #8
  %145 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  tail call void @_ZN5blink16V8PerIsolateData7DestroyEPN2v87IsolateE(%"class.v8::Isolate"* %145) #8
  store %"class.v8::Isolate"* null, %"class.v8::Isolate"** %18, align 8
  ret void
}

declare void @_ZN5blink16V8PerIsolateData15WillBeDestroyedEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink16V8PerIsolateData7DestroyEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v87Isolate26MemoryPressureNotificationENS_19MemoryPressureLevelE(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.v8::Isolate"**, i8 } @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.337"*, %"class.v8::Isolate"** dereferenceable(8), %"class.v8::Isolate"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"**, %"class.v8::Isolate"*** %4, align 8
  %6 = icmp eq %"class.v8::Isolate"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.v8::Isolate"** @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.337"* %0, %"class.v8::Isolate"** null)
  %9 = load %"class.v8::Isolate"**, %"class.v8::Isolate"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.v8::Isolate"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.v8::Isolate"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, i64 %38
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = icmp eq %"class.v8::Isolate"* %40, null
  %42 = inttoptr i64 %17 to %"class.v8::Isolate"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.v8::Isolate"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.v8::Isolate"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.v8::Isolate"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.v8::Isolate"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.v8::Isolate"* %58, inttoptr (i64 -1 to %"class.v8::Isolate"*)
  %66 = select i1 %65, %"class.v8::Isolate"** %59, %"class.v8::Isolate"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, i64 %70
  %72 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %71, align 8
  %73 = icmp eq %"class.v8::Isolate"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.v8::Isolate"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.v8::Isolate"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.v8::Isolate"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.v8::Isolate"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.v8::Isolate"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.v8::Isolate"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.v8::Isolate"** @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.337"* %0, %"class.v8::Isolate"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.v8::Isolate"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.v8::Isolate"**, i8 } undef, %"class.v8::Isolate"** %105, 0
  %107 = insertvalue { %"class.v8::Isolate"**, i8 } %106, i8 %104, 1
  ret { %"class.v8::Isolate"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Isolate"** @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.337"*, %"class.v8::Isolate"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN2v87IsolateEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"class.v8::Isolate"**
  %37 = call %"class.v8::Isolate"** @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.337"* %0, %"class.v8::Isolate"** %36, i32 %32, %"class.v8::Isolate"** %1) #8
  ret %"class.v8::Isolate"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Isolate"** @_ZN3WTF9HashTableIPN2v87IsolateES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.337"*, %"class.v8::Isolate"**, i32, %"class.v8::Isolate"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.v8::Isolate"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.337"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.v8::Isolate"**, %"class.v8::Isolate"*** %9, align 8
  %17 = ptrtoint %"class.v8::Isolate"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.337"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.v8::Isolate"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.337", %"class.WTF::HashTable.337"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.v8::Isolate"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.v8::Isolate"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.v8::Isolate"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, i64 %37
  %39 = bitcast %"class.v8::Isolate"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %1, i64 %62
  %64 = ptrtoint %"class.v8::Isolate"** %63 to i64
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %63, align 8
  %66 = icmp eq %"class.v8::Isolate"* %65, null
  %67 = inttoptr i64 %40 to %"class.v8::Isolate"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.v8::Isolate"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.v8::Isolate"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.v8::Isolate"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.v8::Isolate"** %87, null
  %89 = ptrtoint %"class.v8::Isolate"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.v8::Isolate"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.v8::Isolate"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.v8::Isolate"* %93, inttoptr (i64 -1 to %"class.v8::Isolate"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %1, i64 %104
  %106 = ptrtoint %"class.v8::Isolate"** %105 to i64
  %107 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %105, align 8
  %108 = icmp eq %"class.v8::Isolate"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.v8::Isolate"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.v8::Isolate"**, %"class.v8::Isolate"*** %9, align 8
  %114 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %113, i64 %37
  %115 = icmp eq %"class.v8::Isolate"** %114, %3
  %116 = select i1 %115, %"class.v8::Isolate"** %111, %"class.v8::Isolate"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.v8::Isolate"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.v8::Isolate"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.v8::Isolate"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS1_14default_deleteIS4_EEEE(%"class.blink::V8IdleTaskRunner"*, %"class.v8::IdleTask"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.390", align 8
  %5 = ptrtoint %"class.v8::IdleTask"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::V8IdleTaskRunner", %"class.blink::V8IdleTaskRunner"* %0, i64 0, i32 1
  %7 = load %"class.blink::ThreadScheduler"*, %"class.blink::ThreadScheduler"** %6, align 8
  %8 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 52) #8
  %9 = call i8* @_Znwm(i64 48) #9, !noalias !4
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS5_14default_deleteIS8_EEEEEUlSB_NS_9TimeTicksEE_JSB_EEEFvSC_EE7RunOnceEPNS0_13BindStateBaseEOSC_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS4_14default_deleteIS7_EEEEEUlSA_NS_9TimeTicksEE_JSA_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !4
  %11 = getelementptr inbounds i8, i8* %9, i64 40
  %12 = bitcast i8* %11 to i64*
  store i64 %5, i64* %12, align 8, !noalias !4
  %13 = bitcast %"class.base::OnceCallback.390"* %4 to i8**
  store i8* %9, i8** %13, align 8, !alias.scope !4
  %14 = bitcast %"class.blink::ThreadScheduler"* %7 to void (%"class.blink::ThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.390"*)***
  %15 = load void (%"class.blink::ThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.390"*)**, void (%"class.blink::ThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.390"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.390"*)*, void (%"class.blink::ThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.390"*)** %15, i64 5
  %17 = load void (%"class.blink::ThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.390"*)*, void (%"class.blink::ThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.390"*)** %16, align 8
  call void %17(%"class.blink::ThreadScheduler"* %7, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.390"* nonnull %4) #8
  %18 = getelementptr inbounds %"class.base::OnceCallback.390", %"class.base::OnceCallback.390"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin16V8IdleTaskRunnerD2Ev(%"class.gin::V8IdleTaskRunner"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16V8IdleTaskRunnerD0Ev(%"class.blink::V8IdleTaskRunner"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::V8IdleTaskRunner"* %0 to i8*
  tail call void @free(i8* %2) #8
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS5_14default_deleteIS8_EEEEEUlSB_NS_9TimeTicksEE_JSB_EEEFvSC_EE7RunOnceEPNS0_13BindStateBaseEOSC_(%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.v8::IdleTask"**
  %5 = load %"class.v8::IdleTask"*, %"class.v8::IdleTask"** %4, align 8
  store %"class.v8::IdleTask"* null, %"class.v8::IdleTask"** %4, align 8
  %6 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -9223372036854775807
  %9 = icmp ult i64 %8, 2
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = sitofp i64 %7 to double
  %12 = fdiv double %11, 1.000000e+06
  br label %16

13:                                               ; preds = %2
  %14 = icmp slt i64 %7, 0
  %15 = select i1 %14, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi double [ %15, %13 ], [ %12, %10 ]
  %18 = bitcast %"class.v8::IdleTask"* %5 to void (%"class.v8::IdleTask"*, double)***
  %19 = load void (%"class.v8::IdleTask"*, double)**, void (%"class.v8::IdleTask"*, double)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.v8::IdleTask"*, double)*, void (%"class.v8::IdleTask"*, double)** %19, i64 2
  %21 = load void (%"class.v8::IdleTask"*, double)*, void (%"class.v8::IdleTask"*, double)** %20, align 8
  tail call void %21(%"class.v8::IdleTask"* %5, double %17) #8
  %22 = icmp eq %"class.v8::IdleTask"* %5, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.v8::IdleTask"* %5 to void (%"class.v8::IdleTask"*)***
  %25 = load void (%"class.v8::IdleTask"*)**, void (%"class.v8::IdleTask"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.v8::IdleTask"*)*, void (%"class.v8::IdleTask"*)** %25, i64 1
  %27 = load void (%"class.v8::IdleTask"*)*, void (%"class.v8::IdleTask"*)** %26, align 8
  tail call void %27(%"class.v8::IdleTask"* nonnull %5) #8
  br label %28

28:                                               ; preds = %16, %23
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS4_14default_deleteIS7_EEEEEUlSA_NS_9TimeTicksEE_JSA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.v8::IdleTask"**
  %6 = load %"class.v8::IdleTask"*, %"class.v8::IdleTask"** %5, align 8
  store %"class.v8::IdleTask"* null, %"class.v8::IdleTask"** %5, align 8
  %7 = icmp eq %"class.v8::IdleTask"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.v8::IdleTask"* %6 to void (%"class.v8::IdleTask"*)***
  %10 = load void (%"class.v8::IdleTask"*)**, void (%"class.v8::IdleTask"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::IdleTask"*)*, void (%"class.v8::IdleTask"*)** %10, i64 1
  %12 = load void (%"class.v8::IdleTask"*)*, void (%"class.v8::IdleTask"*)** %11, align 8
  tail call void %12(%"class.v8::IdleTask"* nonnull %6) #8
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink20WorkerThreadDebuggerC1EPN2v87IsolateE(%"class.blink::WorkerThreadDebugger"*, %"class.v8::Isolate"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS5_14default_deleteIS8_EEEEEUlSB_NS_9TimeTicksEE_JSB_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS5_14default_deleteIS8_EEEEEUlSB_NS_9TimeTicksEE_JSB_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS3_14default_deleteIS6_EEEEEUlS9_NS_9TimeTicksEE_JS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS3_14default_deleteIS6_EEEEEUlS9_NS_9TimeTicksEE_JS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!9 = distinct !{!9, !10, !"_ZN3WTF4BindIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS3_14default_deleteIS6_EEEEEUlS9_N4base9TimeTicksEE_JS9_EFvSB_EEENSA_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF4BindIZN5blink16V8IdleTaskRunner12PostIdleTaskENSt3__110unique_ptrIN2v88IdleTaskENS3_14default_deleteIS6_EEEEEUlS9_N4base9TimeTicksEE_JS9_EFvSB_EEENSA_12OnceCallbackIT1_EEOT_DpOT0_"}
