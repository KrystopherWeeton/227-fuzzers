; ModuleID = '../../third_party/ffmpeg/libavcodec/x86/fft_init.c'
source_filename = "../../third_party/ffmpeg/libavcodec/x86/fft_init.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @ff_fft_init_x86(%struct.FFTContext* nocapture) local_unnamed_addr #0 {
  %2 = tail call i32 @av_get_cpu_flags() #2
  %3 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 16
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = and i32 %2, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 10
  %11 = bitcast void (%struct.FFTContext*, float*, float*)** %10 to <2 x void (%struct.FFTContext*, float*, float*)*>*
  store <2 x void (%struct.FFTContext*, float*, float*)*> <void (%struct.FFTContext*, float*, float*)* @ff_imdct_calc_sse, void (%struct.FFTContext*, float*, float*)* @ff_imdct_half_sse>, <2 x void (%struct.FFTContext*, float*, float*)*>* %11, align 8
  %12 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 8
  %13 = bitcast void (%struct.FFTContext*, %struct.FFTComplex*)** %12 to <2 x void (%struct.FFTContext*, %struct.FFTComplex*)*>*
  store <2 x void (%struct.FFTContext*, %struct.FFTComplex*)*> <void (%struct.FFTContext*, %struct.FFTComplex*)* @ff_fft_permute_sse, void (%struct.FFTContext*, %struct.FFTComplex*)* @ff_fft_calc_sse>, <2 x void (%struct.FFTContext*, %struct.FFTComplex*)*>* %13, align 8
  %14 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 13
  store i32 1, i32* %14, align 8
  br label %15

15:                                               ; preds = %6, %9
  %16 = and i32 %2, 134234112
  %17 = icmp eq i32 %16, 16384
  %18 = icmp sgt i32 %4, 4
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 11
  store void (%struct.FFTContext*, float*, float*)* @ff_imdct_half_avx, void (%struct.FFTContext*, float*, float*)** %21, align 8
  %22 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 9
  store void (%struct.FFTContext*, %struct.FFTComplex*)* @ff_fft_calc_avx, void (%struct.FFTContext*, %struct.FFTComplex*)** %22, align 8
  %23 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %0, i64 0, i32 13
  store i32 2, i32* %23, align 8
  br label %24

24:                                               ; preds = %20, %15, %1
  ret void
}

declare i32 @av_get_cpu_flags() local_unnamed_addr #1

declare void @ff_imdct_calc_sse(%struct.FFTContext*, float*, float*) #1

declare void @ff_imdct_half_sse(%struct.FFTContext*, float*, float*) #1

declare void @ff_fft_permute_sse(%struct.FFTContext*, %struct.FFTComplex*) #1

declare void @ff_fft_calc_sse(%struct.FFTContext*, %struct.FFTComplex*) #1

declare void @ff_imdct_half_avx(%struct.FFTContext*, float*, float*) #1

declare void @ff_fft_calc_avx(%struct.FFTContext*, %struct.FFTComplex*) #1

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
