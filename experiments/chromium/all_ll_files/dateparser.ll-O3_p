; ModuleID = '../../v8/src/date/dateparser.cc'
source_filename = "../../v8/src/date/dateparser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::DateParser::DayComposer" = type <{ [3 x i32], i32, i32, i8, [3 x i8] }>
%"class.v8::internal::DateParser::TimeComposer" = type { [4 x i32], i32, i32 }
%"class.v8::internal::DateParser::TimeZoneComposer" = type { i32, i32, i32 }

@_ZN2v88internal10DateParser12KeywordTable5arrayE = hidden local_unnamed_addr constant [28 x [5 x i8]] [[5 x i8] c"jan\01\01", [5 x i8] c"feb\01\02", [5 x i8] c"mar\01\03", [5 x i8] c"apr\01\04", [5 x i8] c"may\01\05", [5 x i8] c"jun\01\06", [5 x i8] c"jul\01\07", [5 x i8] c"aug\01\08", [5 x i8] c"sep\01\09", [5 x i8] c"oct\01\0A", [5 x i8] c"nov\01\0B", [5 x i8] c"dec\01\0C", [5 x i8] c"am\00\04\00", [5 x i8] c"pm\00\04\0C", [5 x i8] c"ut\00\02\00", [5 x i8] c"utc\02\00", [5 x i8] c"z\00\00\02\00", [5 x i8] c"gmt\02\00", [5 x i8] c"cdt\02\FB", [5 x i8] c"cst\02\FA", [5 x i8] c"edt\02\FC", [5 x i8] c"est\02\FB", [5 x i8] c"mdt\02\FA", [5 x i8] c"mst\02\F9", [5 x i8] c"pdt\02\F9", [5 x i8] c"pst\02\F8", [5 x i8] c"t\00\00\03\00", [5 x i8] zeroinitializer], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10DateParser11DayComposer5WriteEPd(%"class.v8::internal::DateParser::DayComposer"* nocapture, double* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %99, label %6

6:                                                ; preds = %2
  %7 = icmp slt i32 %4, 3
  br i1 %7, label %8, label %15

8:                                                ; preds = %6, %8
  %9 = phi i32 [ %13, %8 ], [ %4, %6 ]
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %3, align 4
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 %11
  store i32 1, i32* %12, align 4
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %13, 3
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %6
  %16 = phi i32 [ %4, %6 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 2147483647
  br i1 %19, label %20, label %48

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 0
  %26 = load i32, i32* %25, align 4
  br label %34

27:                                               ; preds = %20
  %28 = icmp eq i32 %16, 3
  %29 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %40

31:                                               ; preds = %27
  %32 = add nsw i32 %30, -1
  %33 = icmp ult i32 %32, 31
  br i1 %33, label %43, label %34

34:                                               ; preds = %24, %31
  %35 = phi i32 [ %26, %24 ], [ %30, %31 ]
  %36 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 2
  %39 = load i32, i32* %38, align 4
  br label %59

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 1
  %42 = load i32, i32* %41, align 4
  br label %70

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 2
  %47 = load i32, i32* %46, align 4
  br label %65

48:                                               ; preds = %15
  %49 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, -1
  %52 = icmp ult i32 %51, 31
  %53 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 0, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = select i1 %52, i32 %54, i32 %50
  %56 = select i1 %52, i32 %50, i32 %54
  %57 = getelementptr inbounds %"class.v8::internal::DateParser::DayComposer", %"class.v8::internal::DateParser::DayComposer"* %0, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !2
  br label %59

59:                                               ; preds = %48, %34
  %60 = phi i8 [ %22, %34 ], [ %58, %48 ]
  %61 = phi i32 [ %35, %34 ], [ %55, %48 ]
  %62 = phi i32 [ %37, %34 ], [ %18, %48 ]
  %63 = phi i32 [ %39, %34 ], [ %56, %48 ]
  %64 = icmp eq i8 %60, 0
  br i1 %64, label %65, label %80

65:                                               ; preds = %43, %59
  %66 = phi i32 [ %63, %59 ], [ %45, %43 ]
  %67 = phi i32 [ %62, %59 ], [ %30, %43 ]
  %68 = phi i32 [ %61, %59 ], [ %47, %43 ]
  %69 = icmp ult i32 %68, 50
  br i1 %69, label %70, label %75

70:                                               ; preds = %40, %65
  %71 = phi i32 [ 0, %40 ], [ %68, %65 ]
  %72 = phi i32 [ %30, %40 ], [ %67, %65 ]
  %73 = phi i32 [ %42, %40 ], [ %66, %65 ]
  %74 = add nuw nsw i32 %71, 2000
  br label %80

75:                                               ; preds = %65
  %76 = add nsw i32 %68, -50
  %77 = icmp ult i32 %76, 50
  %78 = add nsw i32 %68, 1900
  %79 = select i1 %77, i32 %78, i32 %68
  br label %80

80:                                               ; preds = %75, %59, %70
  %81 = phi i32 [ %63, %59 ], [ %73, %70 ], [ %66, %75 ]
  %82 = phi i32 [ %62, %59 ], [ %72, %70 ], [ %67, %75 ]
  %83 = phi i32 [ %61, %59 ], [ %74, %70 ], [ %79, %75 ]
  %84 = sext i32 %83 to i64
  %85 = add nsw i64 %84, 1073741824
  %86 = icmp ult i64 %85, 2147483648
  br i1 %86, label %87, label %99

87:                                               ; preds = %80
  %88 = add nsw i32 %82, -1
  %89 = icmp ult i32 %88, 12
  %90 = add nsw i32 %81, -1
  %91 = icmp ult i32 %90, 31
  %92 = and i1 %89, %91
  br i1 %92, label %93, label %99

93:                                               ; preds = %87
  %94 = sitofp i32 %83 to double
  store double %94, double* %1, align 8
  %95 = sitofp i32 %88 to double
  %96 = getelementptr inbounds double, double* %1, i64 1
  store double %95, double* %96, align 8
  %97 = sitofp i32 %81 to double
  %98 = getelementptr inbounds double, double* %1, i64 2
  store double %97, double* %98, align 8
  br label %99

99:                                               ; preds = %93, %87, %80, %2
  %100 = phi i1 [ false, %2 ], [ true, %93 ], [ false, %87 ], [ false, %80 ]
  ret i1 %100
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10DateParser12TimeComposer5WriteEPd(%"class.v8::internal::DateParser::TimeComposer"* nocapture, double* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DateParser::TimeComposer", %"class.v8::internal::DateParser::TimeComposer"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 4
  br i1 %5, label %6, label %13

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %11, %6 ], [ %4, %2 ]
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %3, align 4
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds %"class.v8::internal::DateParser::TimeComposer", %"class.v8::internal::DateParser::TimeComposer"* %0, i64 0, i32 0, i64 %9
  store i32 0, i32* %10, align 4
  %11 = load i32, i32* %3, align 4
  %12 = icmp slt i32 %11, 4
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %2
  %14 = getelementptr inbounds %"class.v8::internal::DateParser::TimeComposer", %"class.v8::internal::DateParser::TimeComposer"* %0, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %"class.v8::internal::DateParser::TimeComposer", %"class.v8::internal::DateParser::TimeComposer"* %0, i64 0, i32 0, i64 1
  %16 = getelementptr inbounds %"class.v8::internal::DateParser::TimeComposer", %"class.v8::internal::DateParser::TimeComposer"* %0, i64 0, i32 0, i64 2
  %17 = getelementptr inbounds %"class.v8::internal::DateParser::TimeComposer", %"class.v8::internal::DateParser::TimeComposer"* %0, i64 0, i32 0, i64 3
  %18 = getelementptr inbounds %"class.v8::internal::DateParser::TimeComposer", %"class.v8::internal::DateParser::TimeComposer"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 2147483647
  %21 = load i32, i32* %14, align 4
  br i1 %20, label %29, label %22

22:                                               ; preds = %13
  %23 = icmp ult i32 %21, 13
  br i1 %23, label %24, label %64

24:                                               ; preds = %22
  %25 = trunc i32 %21 to i8
  %26 = urem i8 %25, 12
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %19, %27
  store i32 %28, i32* %14, align 4
  br label %29

29:                                               ; preds = %13, %24
  %30 = phi i32 [ %28, %24 ], [ %21, %13 ]
  %31 = icmp ult i32 %30, 24
  br i1 %31, label %32, label %41

32:                                               ; preds = %29
  %33 = load i32, i32* %15, align 4
  %34 = icmp ult i32 %33, 60
  br i1 %34, label %35, label %64

35:                                               ; preds = %32
  %36 = load i32, i32* %16, align 4
  %37 = icmp ult i32 %36, 60
  br i1 %37, label %38, label %64

38:                                               ; preds = %35
  %39 = load i32, i32* %17, align 4
  %40 = icmp ult i32 %39, 1000
  br i1 %40, label %52, label %64

41:                                               ; preds = %29
  %42 = icmp eq i32 %30, 24
  br i1 %42, label %43, label %64

43:                                               ; preds = %41
  %44 = load i32, i32* %15, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %64

46:                                               ; preds = %43
  %47 = load i32, i32* %16, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %64

49:                                               ; preds = %46
  %50 = load i32, i32* %17, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %49, %38
  %53 = sitofp i32 %30 to double
  %54 = getelementptr inbounds double, double* %1, i64 3
  store double %53, double* %54, align 8
  %55 = load i32, i32* %15, align 4
  %56 = sitofp i32 %55 to double
  %57 = getelementptr inbounds double, double* %1, i64 4
  store double %56, double* %57, align 8
  %58 = load i32, i32* %16, align 4
  %59 = sitofp i32 %58 to double
  %60 = getelementptr inbounds double, double* %1, i64 5
  store double %59, double* %60, align 8
  %61 = load i32, i32* %17, align 4
  %62 = sitofp i32 %61 to double
  %63 = getelementptr inbounds double, double* %1, i64 6
  store double %62, double* %63, align 8
  br label %64

64:                                               ; preds = %32, %35, %38, %41, %43, %46, %49, %22, %52
  %65 = phi i1 [ true, %52 ], [ false, %22 ], [ false, %49 ], [ false, %46 ], [ false, %43 ], [ false, %41 ], [ false, %38 ], [ false, %35 ], [ false, %32 ]
  ret i1 %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10DateParser16TimeZoneComposer5WriteEPd(%"class.v8::internal::DateParser::TimeZoneComposer"* nocapture, double* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DateParser::TimeZoneComposer", %"class.v8::internal::DateParser::TimeZoneComposer"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 2147483647
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::DateParser::TimeZoneComposer", %"class.v8::internal::DateParser::TimeZoneComposer"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2147483647
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = phi i32 [ 0, %10 ], [ %8, %6 ]
  %13 = getelementptr inbounds %"class.v8::internal::DateParser::TimeZoneComposer", %"class.v8::internal::DateParser::TimeZoneComposer"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 2147483647
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %11
  %18 = phi i32 [ 0, %16 ], [ %14, %11 ]
  %19 = mul i32 %12, 3600
  %20 = mul i32 %18, 60
  %21 = add i32 %20, %19
  %22 = icmp ugt i32 %21, 1073741823
  br i1 %22, label %31, label %23

23:                                               ; preds = %17
  %24 = icmp slt i32 %4, 0
  %25 = sub nsw i32 0, %21
  %26 = select i1 %24, i32 %25, i32 %21
  %27 = sitofp i32 %26 to double
  br label %28

28:                                               ; preds = %2, %23
  %29 = phi double [ %27, %23 ], [ 0x7FF8000000000000, %2 ]
  %30 = getelementptr inbounds double, double* %1, i64 7
  store double %29, double* %30, align 8
  br label %31

31:                                               ; preds = %28, %17
  %32 = phi i1 [ false, %17 ], [ true, %28 ]
  ret i1 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal10DateParser12KeywordTable6LookupEPKji(i32* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp slt i32 %1, 4
  %4 = load i32, i32* %0, align 4
  %5 = getelementptr inbounds i32, i32* %0, i64 1
  %6 = getelementptr inbounds i32, i32* %0, i64 2
  br i1 %3, label %7, label %22

7:                                                ; preds = %2, %13
  %8 = phi i64 [ %14, %13 ], [ 0, %2 ]
  %9 = getelementptr inbounds [28 x [5 x i8]], [28 x [5 x i8]]* @_ZN2v88internal10DateParser12KeywordTable5arrayE, i64 0, i64 %8, i64 0
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp eq i32 %4, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %7, %16, %41
  %14 = add nuw nsw i64 %8, 1
  %15 = icmp eq i64 %14, 27
  br i1 %15, label %39, label %7

16:                                               ; preds = %7
  %17 = load i32, i32* %5, align 4
  %18 = getelementptr inbounds [28 x [5 x i8]], [28 x [5 x i8]]* @_ZN2v88internal10DateParser12KeywordTable5arrayE, i64 0, i64 %8, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp eq i32 %17, %20
  br i1 %21, label %41, label %13

22:                                               ; preds = %2, %34
  %23 = phi i64 [ %35, %34 ], [ 0, %2 ]
  %24 = getelementptr inbounds [28 x [5 x i8]], [28 x [5 x i8]]* @_ZN2v88internal10DateParser12KeywordTable5arrayE, i64 0, i64 %23, i64 0
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %4, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = load i32, i32* %5, align 4
  %30 = getelementptr inbounds [28 x [5 x i8]], [28 x [5 x i8]]* @_ZN2v88internal10DateParser12KeywordTable5arrayE, i64 0, i64 %23, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %29, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %22, %28, %49
  %35 = add nuw nsw i64 %23, 1
  %36 = icmp eq i64 %35, 27
  br i1 %36, label %39, label %22

37:                                               ; preds = %49
  %38 = trunc i64 %23 to i32
  br label %39

39:                                               ; preds = %34, %13, %37, %47
  %40 = phi i32 [ %48, %47 ], [ %38, %37 ], [ 27, %13 ], [ 27, %34 ]
  ret i32 %40

41:                                               ; preds = %16
  %42 = load i32, i32* %6, align 4
  %43 = getelementptr inbounds [28 x [5 x i8]], [28 x [5 x i8]]* @_ZN2v88internal10DateParser12KeywordTable5arrayE, i64 0, i64 %8, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = icmp eq i32 %42, %45
  br i1 %46, label %47, label %13

47:                                               ; preds = %41
  %48 = trunc i64 %8 to i32
  br label %39

49:                                               ; preds = %28
  %50 = load i32, i32* %6, align 4
  %51 = getelementptr inbounds [28 x [5 x i8]], [28 x [5 x i8]]* @_ZN2v88internal10DateParser12KeywordTable5arrayE, i64 0, i64 %23, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp eq i32 %50, %53
  %55 = icmp ult i64 %23, 12
  %56 = and i1 %54, %55
  br i1 %56, label %37, label %34
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal10DateParser16ReadMillisecondsENS1_9DateTokenE(i64, i32) local_unnamed_addr #2 align 2 {
  %3 = lshr i64 %0, 32
  %4 = trunc i64 %3 to i32
  %5 = icmp slt i32 %4, 3
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  switch i32 %4, label %75 [
    i32 1, label %7
    i32 2, label %9
  ]

7:                                                ; preds = %6
  %8 = mul nsw i32 %1, 100
  br label %75

9:                                                ; preds = %6
  %10 = mul nsw i32 %1, 10
  br label %75

11:                                               ; preds = %2
  %12 = icmp eq i32 %4, 3
  br i1 %12, label %75, label %13

13:                                               ; preds = %11
  %14 = icmp slt i32 %4, 9
  %15 = select i1 %14, i32 %4, i32 9
  %16 = icmp slt i32 %15, 4
  %17 = add i32 %4, -1
  %18 = select i1 %16, i32 %17, i32 3
  %19 = sub i32 %15, %18
  %20 = icmp ult i32 %19, 8
  br i1 %20, label %63, label %21

21:                                               ; preds = %13
  %22 = and i32 %19, -8
  %23 = sub i32 %15, %22
  %24 = add i32 %22, -8
  %25 = lshr exact i32 %24, 3
  %26 = add nuw nsw i32 %25, 1
  %27 = and i32 %26, 7
  %28 = icmp ult i32 %24, 56
  br i1 %28, label %39, label %29

29:                                               ; preds = %21
  %30 = sub nsw i32 %26, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %35, %31 ]
  %33 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %29 ], [ %36, %31 ]
  %34 = phi i32 [ %30, %29 ], [ %37, %31 ]
  %35 = mul <4 x i32> %32, <i32 100000000, i32 100000000, i32 100000000, i32 100000000>
  %36 = mul <4 x i32> %33, <i32 100000000, i32 100000000, i32 100000000, i32 100000000>
  %37 = add i32 %34, -8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %31, !llvm.loop !3

39:                                               ; preds = %31, %21
  %40 = phi <4 x i32> [ undef, %21 ], [ %35, %31 ]
  %41 = phi <4 x i32> [ undef, %21 ], [ %36, %31 ]
  %42 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %21 ], [ %35, %31 ]
  %43 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %21 ], [ %36, %31 ]
  %44 = icmp eq i32 %27, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %39, %45
  %46 = phi <4 x i32> [ %49, %45 ], [ %42, %39 ]
  %47 = phi <4 x i32> [ %50, %45 ], [ %43, %39 ]
  %48 = phi i32 [ %51, %45 ], [ %27, %39 ]
  %49 = mul nsw <4 x i32> %46, <i32 10, i32 10, i32 10, i32 10>
  %50 = mul nsw <4 x i32> %47, <i32 10, i32 10, i32 10, i32 10>
  %51 = add i32 %48, -1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %45, !llvm.loop !5

53:                                               ; preds = %45, %39
  %54 = phi <4 x i32> [ %40, %39 ], [ %49, %45 ]
  %55 = phi <4 x i32> [ %41, %39 ], [ %50, %45 ]
  %56 = mul <4 x i32> %55, %54
  %57 = shufflevector <4 x i32> %56, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %58 = mul <4 x i32> %56, %57
  %59 = shufflevector <4 x i32> %58, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %60 = mul <4 x i32> %58, %59
  %61 = extractelement <4 x i32> %60, i32 0
  %62 = icmp eq i32 %19, %22
  br i1 %62, label %72, label %63

63:                                               ; preds = %53, %13
  %64 = phi i32 [ %15, %13 ], [ %23, %53 ]
  %65 = phi i32 [ 1, %13 ], [ %61, %53 ]
  br label %66

66:                                               ; preds = %63, %66
  %67 = phi i32 [ %70, %66 ], [ %64, %63 ]
  %68 = phi i32 [ %69, %66 ], [ %65, %63 ]
  %69 = mul nsw i32 %68, 10
  %70 = add nsw i32 %67, -1
  %71 = icmp sgt i32 %70, 3
  br i1 %71, label %66, label %72, !llvm.loop !7

72:                                               ; preds = %66, %53
  %73 = phi i32 [ %61, %53 ], [ %69, %66 ]
  %74 = sdiv i32 %1, %73
  br label %75

75:                                               ; preds = %6, %11, %72, %7, %9
  %76 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %74, %72 ], [ %1, %11 ], [ %1, %6 ]
  ret i32 %76
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !8, !4}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
