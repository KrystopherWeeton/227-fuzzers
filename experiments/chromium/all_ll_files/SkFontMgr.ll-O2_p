; ModuleID = '../../third_party/skia/src/core/SkFontMgr.cpp'
source_filename = "../../third_party/skia/src/core/SkFontMgr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.15 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyleSet = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.sk_sp.6 = type { %class.SkTypeface* }
%class.sk_sp.7 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%class.SkFontData = type { %"class.std::__1::unique_ptr", i32, i32, %class.SkAutoSTMalloc }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkStreamAsset* }
%class.SkAutoSTMalloc = type { i32*, %union.anon }
%union.anon = type { [4 x i32] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkEmptyFontStyleSet = type { %class.SkFontStyleSet.base, [4 x i8] }
%class.SkFontStyleSet.base = type { %class.SkRefCnt.base }
%class.SkEmptyFontMgr = type { %class.SkFontMgr.base, [4 x i8] }
%class.SkFontMgr.base = type { %class.SkRefCnt.base }

$_ZN5sk_spI9SkFontMgrED2Ev = comdat any

$_ZN9SkFontMgrD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN19SkEmptyFontStyleSetD0Ev = comdat any

$_ZN19SkEmptyFontStyleSet5countEv = comdat any

$_ZN19SkEmptyFontStyleSet8getStyleEiP11SkFontStyleP8SkString = comdat any

$_ZN19SkEmptyFontStyleSet14createTypefaceEi = comdat any

$_ZN19SkEmptyFontStyleSet10matchStyleERK11SkFontStyle = comdat any

$_ZN14SkEmptyFontMgrD0Ev = comdat any

$_ZNK14SkEmptyFontMgr15onCountFamiliesEv = comdat any

$_ZNK14SkEmptyFontMgr15onGetFamilyNameEiP8SkString = comdat any

$_ZNK14SkEmptyFontMgr16onCreateStyleSetEi = comdat any

$_ZNK14SkEmptyFontMgr13onMatchFamilyEPKc = comdat any

$_ZNK14SkEmptyFontMgr18onMatchFamilyStyleEPKcRK11SkFontStyle = comdat any

$_ZNK14SkEmptyFontMgr27onMatchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii = comdat any

$_ZNK14SkEmptyFontMgr14onMakeFromDataE5sk_spI6SkDataEi = comdat any

$_ZNK14SkEmptyFontMgr21onMakeFromStreamIndexENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi = comdat any

$_ZNK14SkEmptyFontMgr20onMakeFromStreamArgsENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments = comdat any

$_ZNK14SkEmptyFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE = comdat any

$_ZNK14SkEmptyFontMgr14onMakeFromFileEPKci = comdat any

$_ZNK14SkEmptyFontMgr20onLegacyMakeTypefaceEPKc11SkFontStyle = comdat any

$_ZTV19SkEmptyFontStyleSet = comdat any

$_ZTV14SkEmptyFontMgr = comdat any

@gSkFontMgr_DefaultFactory = hidden local_unnamed_addr global {}* null, align 8
@_ZZN9SkFontMgr10RefDefaultEvE4once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZZN9SkFontMgr10RefDefaultEvE9singleton = internal global %class.sk_sp.15 zeroinitializer, align 8
@_ZGVZN9SkFontMgr10RefDefaultEvE9singleton = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZZN14SkFontStyleSet14matchStyleCSS3ERK11SkFontStyleE5score = internal unnamed_addr constant [3 x [3 x i32]] [[3 x i32] [i32 3, i32 1, i32 2], [3 x i32] [i32 1, i32 3, i32 2], [3 x i32] [i32 1, i32 2, i32 3]], align 16
@_ZTV9SkFontMgr = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkFontMgr*)* @_ZN9SkFontMgrD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)* @_ZNK9SkFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.SkTypeface* (%class.SkFontMgr*, %class.SkTypeface*, %class.SkFontStyle*)* @_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle to i8*)] }, align 8
@_ZTV19SkEmptyFontStyleSet = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkEmptyFontStyleSet*)* @_ZN19SkEmptyFontStyleSetD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkEmptyFontStyleSet*)* @_ZN19SkEmptyFontStyleSet5countEv to i8*), i8* bitcast (void (%class.SkEmptyFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)* @_ZN19SkEmptyFontStyleSet8getStyleEiP11SkFontStyleP8SkString to i8*), i8* bitcast (%class.SkTypeface* (%class.SkEmptyFontStyleSet*, i32)* @_ZN19SkEmptyFontStyleSet14createTypefaceEi to i8*), i8* bitcast (%class.SkTypeface* (%class.SkEmptyFontStyleSet*, %class.SkFontStyle*)* @_ZN19SkEmptyFontStyleSet10matchStyleERK11SkFontStyle to i8*)] }, comdat, align 8
@_ZTV14SkEmptyFontMgr = linkonce_odr hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkEmptyFontMgr*)* @_ZN14SkEmptyFontMgrD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkEmptyFontMgr*)* @_ZNK14SkEmptyFontMgr15onCountFamiliesEv to i8*), i8* bitcast (void (%class.SkEmptyFontMgr*, i32, %class.SkString*)* @_ZNK14SkEmptyFontMgr15onGetFamilyNameEiP8SkString to i8*), i8* bitcast (%class.SkFontStyleSet* (%class.SkEmptyFontMgr*, i32)* @_ZNK14SkEmptyFontMgr16onCreateStyleSetEi to i8*), i8* bitcast (%class.SkFontStyleSet* (%class.SkEmptyFontMgr*, i8*)* @_ZNK14SkEmptyFontMgr13onMatchFamilyEPKc to i8*), i8* bitcast (%class.SkTypeface* (%class.SkEmptyFontMgr*, i8*, %class.SkFontStyle*)* @_ZNK14SkEmptyFontMgr18onMatchFamilyStyleEPKcRK11SkFontStyle to i8*), i8* bitcast (%class.SkTypeface* (%class.SkEmptyFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)* @_ZNK14SkEmptyFontMgr27onMatchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkEmptyFontMgr*, %class.sk_sp.7*, i32)* @_ZNK14SkEmptyFontMgr14onMakeFromDataE5sk_spI6SkDataEi to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkEmptyFontMgr*, %class.SkStreamAsset*, i32)* @_ZNK14SkEmptyFontMgr21onMakeFromStreamIndexENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkEmptyFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)* @_ZNK14SkEmptyFontMgr20onMakeFromStreamArgsENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkEmptyFontMgr*, %class.SkFontData*)* @_ZNK14SkEmptyFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkEmptyFontMgr*, i8*, i32)* @_ZNK14SkEmptyFontMgr14onMakeFromFileEPKci to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkEmptyFontMgr*, i8*, i32)* @_ZNK14SkEmptyFontMgr20onLegacyMakeTypefaceEPKc11SkFontStyle to i8*), i8* bitcast (%class.SkTypeface* (%class.SkFontMgr*, %class.SkTypeface*, %class.SkFontStyle*)* @_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle to i8*)] }, comdat, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %class.SkFontStyleSet* @_ZN14SkFontStyleSet11CreateEmptyEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 16) #10
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  store i32 1, i32* %3, align 4
  %4 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkEmptyFontStyleSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast i8* %1 to %class.SkFontStyleSet*
  ret %class.SkFontStyleSet* %5
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9SkFontMgr13countFamiliesEv(%class.SkFontMgr*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %class.SkFontMgr* %0 to i32 (%class.SkFontMgr*)***
  %3 = load i32 (%class.SkFontMgr*)**, i32 (%class.SkFontMgr*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%class.SkFontMgr*)*, i32 (%class.SkFontMgr*)** %3, i64 3
  %5 = load i32 (%class.SkFontMgr*)*, i32 (%class.SkFontMgr*)** %4, align 8
  %6 = tail call i32 %5(%class.SkFontMgr* %0) #11
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr13getFamilyNameEiP8SkString(%class.SkFontMgr*, i32, %class.SkString*) local_unnamed_addr #2 align 2 {
  %4 = bitcast %class.SkFontMgr* %0 to void (%class.SkFontMgr*, i32, %class.SkString*)***
  %5 = load void (%class.SkFontMgr*, i32, %class.SkString*)**, void (%class.SkFontMgr*, i32, %class.SkString*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkFontMgr*, i32, %class.SkString*)*, void (%class.SkFontMgr*, i32, %class.SkString*)** %5, i64 4
  %7 = load void (%class.SkFontMgr*, i32, %class.SkString*)*, void (%class.SkFontMgr*, i32, %class.SkString*)** %6, align 8
  tail call void %7(%class.SkFontMgr* %0, i32 %1, %class.SkString* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFontStyleSet* @_ZNK9SkFontMgr14createStyleSetEi(%class.SkFontMgr*, i32) local_unnamed_addr #2 align 2 {
  %3 = bitcast %class.SkFontMgr* %0 to %class.SkFontStyleSet* (%class.SkFontMgr*, i32)***
  %4 = load %class.SkFontStyleSet* (%class.SkFontMgr*, i32)**, %class.SkFontStyleSet* (%class.SkFontMgr*, i32)*** %3, align 8
  %5 = getelementptr inbounds %class.SkFontStyleSet* (%class.SkFontMgr*, i32)*, %class.SkFontStyleSet* (%class.SkFontMgr*, i32)** %4, i64 5
  %6 = load %class.SkFontStyleSet* (%class.SkFontMgr*, i32)*, %class.SkFontStyleSet* (%class.SkFontMgr*, i32)** %5, align 8
  %7 = tail call %class.SkFontStyleSet* %6(%class.SkFontMgr* %0, i32 %1) #11
  %8 = icmp eq %class.SkFontStyleSet* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 16) #10
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkEmptyFontStyleSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = bitcast i8* %10 to %class.SkFontStyleSet*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %class.SkFontStyleSet* [ %14, %9 ], [ %7, %2 ]
  ret %class.SkFontStyleSet* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFontStyleSet* @_ZNK9SkFontMgr11matchFamilyEPKc(%class.SkFontMgr*, i8*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %class.SkFontMgr* %0 to %class.SkFontStyleSet* (%class.SkFontMgr*, i8*)***
  %4 = load %class.SkFontStyleSet* (%class.SkFontMgr*, i8*)**, %class.SkFontStyleSet* (%class.SkFontMgr*, i8*)*** %3, align 8
  %5 = getelementptr inbounds %class.SkFontStyleSet* (%class.SkFontMgr*, i8*)*, %class.SkFontStyleSet* (%class.SkFontMgr*, i8*)** %4, i64 6
  %6 = load %class.SkFontStyleSet* (%class.SkFontMgr*, i8*)*, %class.SkFontStyleSet* (%class.SkFontMgr*, i8*)** %5, align 8
  %7 = tail call %class.SkFontStyleSet* %6(%class.SkFontMgr* %0, i8* %1) #11
  %8 = icmp eq %class.SkFontStyleSet* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 16) #10
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkEmptyFontStyleSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = bitcast i8* %10 to %class.SkFontStyleSet*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %class.SkFontStyleSet* [ %14, %9 ], [ %7, %2 ]
  ret %class.SkFontStyleSet* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %4 = bitcast %class.SkFontMgr* %0 to %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*)***
  %5 = load %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*)**, %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*)*** %4, align 8
  %6 = getelementptr inbounds %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*)*, %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*)** %5, i64 7
  %7 = load %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*)*, %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*)** %6, align 8
  %8 = tail call %class.SkTypeface* %7(%class.SkFontMgr* %0, i8* %1, %class.SkFontStyle* dereferenceable(4) %2) #11
  ret %class.SkTypeface* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4), i8**, i32, i32) local_unnamed_addr #2 align 2 {
  %7 = bitcast %class.SkFontMgr* %0 to %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)***
  %8 = load %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)**, %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)*, %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)** %8, i64 8
  %10 = load %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)*, %class.SkTypeface* (%class.SkFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)** %9, align 8
  %11 = tail call %class.SkTypeface* %10(%class.SkFontMgr* %0, i8* %1, %class.SkFontStyle* dereferenceable(4) %2, i8** %3, i32 %4, i32 %5) #11
  ret %class.SkTypeface* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr12makeFromDataE5sk_spI6SkDataEi(%class.sk_sp.6* noalias sret, %class.SkFontMgr*, %class.sk_sp.7* nocapture, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %class.sk_sp.7, align 8
  %6 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %2, i64 0, i32 0
  %7 = load %class.SkData*, %class.SkData** %6, align 8
  %8 = icmp eq %class.SkData* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %10, align 8
  br label %27

11:                                               ; preds = %4
  %12 = ptrtoint %class.SkData* %7 to i64
  store %class.SkData* null, %class.SkData** %6, align 8
  %13 = bitcast %class.sk_sp.7* %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast %class.SkFontMgr* %1 to void (%class.sk_sp.6*, %class.SkFontMgr*, %class.sk_sp.7*, i32)***
  %15 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.sk_sp.7*, i32)**, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.sk_sp.7*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.sk_sp.6*, %class.SkFontMgr*, %class.sk_sp.7*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.sk_sp.7*, i32)** %15, i64 9
  %17 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.sk_sp.7*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.sk_sp.7*, i32)** %16, align 8
  call void %17(%class.sk_sp.6* sret %0, %class.SkFontMgr* %1, %class.sk_sp.7* nonnull %5, i32 %3) #11
  %18 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %5, i64 0, i32 0
  %19 = load %class.SkData*, %class.SkData** %18, align 8
  %20 = icmp eq %class.SkData* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %class.SkData, %class.SkData* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %19) #11
  %26 = bitcast %class.SkData* %19 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %26) #11
  br label %27

27:                                               ; preds = %25, %21, %11, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.6* noalias sret, %class.SkFontMgr*, %class.SkStreamAsset*, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq %class.SkStreamAsset* %2, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = bitcast %class.SkFontMgr* %1 to void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)***
  %8 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)**, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)** %8, i64 10
  %10 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)** %9, align 8
  tail call void %10(%class.sk_sp.6* sret %0, %class.SkFontMgr* %1, %class.SkStreamAsset* nonnull %2, i32 %3) #11
  br label %13

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %12, align 8
  br label %13

13:                                               ; preds = %11, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp.6* noalias sret, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %5 = icmp eq %class.SkStreamAsset* %2, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = bitcast %class.SkFontMgr* %1 to void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)***
  %8 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)**, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)** %8, i64 11
  %10 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)** %9, align 8
  tail call void %10(%class.sk_sp.6* sret %0, %class.SkFontMgr* %1, %class.SkStreamAsset* nonnull %2, %struct.SkFontArguments* dereferenceable(24) %3) #11
  br label %13

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %12, align 8
  br label %13

13:                                               ; preds = %11, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr16makeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE(%class.sk_sp.6* noalias sret, %class.SkFontMgr*, %class.SkFontData*) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %class.SkFontData* %2, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = bitcast %class.SkFontMgr* %1 to void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)***
  %7 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)**, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)** %7, i64 12
  %9 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkFontData*)** %8, align 8
  tail call void %9(%class.sk_sp.6* sret %0, %class.SkFontMgr* %1, %class.SkFontData* nonnull %2) #11
  br label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %11, align 8
  br label %12

12:                                               ; preds = %10, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr12makeFromFileEPKci(%class.sk_sp.6* noalias sret, %class.SkFontMgr*, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i8* %2, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %7, align 8
  br label %13

8:                                                ; preds = %4
  %9 = bitcast %class.SkFontMgr* %1 to void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)***
  %10 = load void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)**, void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)** %10, i64 13
  %12 = load void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)** %11, align 8
  tail call void %12(%class.sk_sp.6* sret %0, %class.SkFontMgr* %1, i8* nonnull %2, i32 %3) #11
  br label %13

13:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr18legacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp.6* noalias sret, %class.SkFontMgr*, i8*, i32) local_unnamed_addr #2 align 2 {
  %5 = bitcast %class.SkFontMgr* %1 to void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)***
  %6 = load void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)**, void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)** %6, i64 14
  %8 = load void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, i8*, i32)** %7, align 8
  tail call void %8(%class.sk_sp.6* sret %0, %class.SkFontMgr* %1, i8* %2, i32 %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE(%class.sk_sp.6* noalias sret, %class.SkFontMgr*, %class.SkFontData*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.SkStreamAsset*, %class.SkStreamAsset** %4, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %4, align 8
  %6 = icmp eq %class.SkStreamAsset* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = bitcast %class.SkFontMgr* %1 to void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)***
  %11 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)**, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)*** %10, align 8, !noalias !2
  %12 = getelementptr inbounds void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)** %11, i64 10
  %13 = load void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)*, void (%class.sk_sp.6*, %class.SkFontMgr*, %class.SkStreamAsset*, i32)** %12, align 8, !noalias !2
  tail call void %13(%class.sk_sp.6* sret %0, %class.SkFontMgr* %1, %class.SkStreamAsset* nonnull %5, i32 %9) #11
  br label %16

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %15, align 8, !alias.scope !2
  br label %16

16:                                               ; preds = %7, %14
  %17 = icmp eq %class.SkFontData* %2, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 3, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 3, i32 1, i32 0, i64 0
  %22 = icmp eq i32* %20, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast i32* %20 to i8*
  tail call void @_Z7sk_freePv(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %18
  %26 = load %class.SkStreamAsset*, %class.SkStreamAsset** %4, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %4, align 8
  %27 = icmp eq %class.SkStreamAsset* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast %class.SkStreamAsset* %26 to void (%class.SkStreamAsset*)***
  %30 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %30, i64 1
  %32 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %31, align 8
  tail call void %32(%class.SkStreamAsset* nonnull %26) #11
  br label %33

33:                                               ; preds = %28, %25
  %34 = bitcast %class.SkFontData* %2 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %16, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.15* noalias nocapture sret) local_unnamed_addr #2 align 2 {
  %2 = alloca %class.sk_sp.15, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN9SkFontMgr10RefDefaultEvE9singleton to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !5

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN9SkFontMgr10RefDefaultEvE9singleton) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.sk_sp.15*)* @_ZN5sk_spI9SkFontMgrED2Ev to void (i8*)*), i8* bitcast (%class.sk_sp.15* @_ZZN9SkFontMgr10RefDefaultEvE9singleton to i8*), i8* nonnull @__dso_handle) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN9SkFontMgr10RefDefaultEvE9singleton) #11
  br label %10

10:                                               ; preds = %5, %8, %1
  %11 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkFontMgr10RefDefaultEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %11, label %12 [
    i8 2, label %75
    i8 0, label %13
  ]

12:                                               ; preds = %13, %10
  br label %72

13:                                               ; preds = %10
  %14 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkFontMgr10RefDefaultEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %15 = extractvalue { i8, i1 } %14, 1
  br i1 %15, label %16, label %12

16:                                               ; preds = %13
  %17 = bitcast %class.sk_sp.15* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %2, i64 0, i32 0
  store %class.SkFontMgr* inttoptr (i64 -6148914691236517206 to %class.SkFontMgr*), %class.SkFontMgr** %18, align 8
  %19 = load void (%class.sk_sp.15*)*, void (%class.sk_sp.15*)** bitcast ({}** @gSkFontMgr_DefaultFactory to void (%class.sk_sp.15*)**), align 8
  %20 = icmp eq void (%class.sk_sp.15*)* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  call void %19(%class.sk_sp.15* nonnull sret %2) #11
  br label %23

22:                                               ; preds = %16
  call void @_ZN9SkFontMgr7FactoryEv(%class.sk_sp.15* nonnull sret %2) #11
  br label %23

23:                                               ; preds = %22, %21
  %24 = load %class.SkFontMgr*, %class.SkFontMgr** %18, align 8
  %25 = icmp eq %class.SkFontMgr* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = ptrtoint %class.SkFontMgr* %24 to i64
  store %class.SkFontMgr* null, %class.SkFontMgr** %18, align 8
  %28 = load %class.SkFontMgr*, %class.SkFontMgr** getelementptr inbounds (%class.sk_sp.15, %class.sk_sp.15* @_ZZN9SkFontMgr10RefDefaultEvE9singleton, i64 0, i32 0), align 8
  store i64 %27, i64* bitcast (%class.sk_sp.15* @_ZZN9SkFontMgr10RefDefaultEvE9singleton to i64*), align 8
  %29 = icmp eq %class.SkFontMgr* %28, null
  br i1 %29, label %71, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %58

34:                                               ; preds = %30
  %35 = bitcast %class.SkFontMgr* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkFontMgr* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #11
  br label %58

40:                                               ; preds = %23
  %41 = call i8* @_Znwm(i64 16) #10, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 0, i64 16, i1 false) #11, !noalias !6
  %42 = getelementptr inbounds i8, i8* %41, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 4, !noalias !6
  %44 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV14SkEmptyFontMgr, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8, !noalias !6
  %45 = ptrtoint i8* %41 to i64
  %46 = load %class.SkFontMgr*, %class.SkFontMgr** getelementptr inbounds (%class.sk_sp.15, %class.sk_sp.15* @_ZZN9SkFontMgr10RefDefaultEvE9singleton, i64 0, i32 0), align 8
  store i64 %45, i64* bitcast (%class.sk_sp.15* @_ZZN9SkFontMgr10RefDefaultEvE9singleton to i64*), align 8
  %47 = icmp eq %class.SkFontMgr* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkFontMgr* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.SkFontMgr* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  call void %57(%class.SkRefCntBase* nonnull %53) #11
  br label %58

58:                                               ; preds = %52, %48, %40, %34, %30
  %59 = load %class.SkFontMgr*, %class.SkFontMgr** %18, align 8
  %60 = icmp eq %class.SkFontMgr* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkFontMgr* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkFontMgr* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #11
  br label %71

71:                                               ; preds = %65, %61, %58, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkFontMgr10RefDefaultEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %75

72:                                               ; preds = %12, %72
  %73 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkFontMgr10RefDefaultEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %74 = icmp eq i8 %73, 2
  br i1 %74, label %75, label %72

75:                                               ; preds = %72, %10, %71
  %76 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  %77 = load %class.SkFontMgr*, %class.SkFontMgr** getelementptr inbounds (%class.sk_sp.15, %class.sk_sp.15* @_ZZN9SkFontMgr10RefDefaultEvE9singleton, i64 0, i32 0), align 8
  %78 = icmp eq %class.SkFontMgr* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %77, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 1 monotonic
  br label %82

82:                                               ; preds = %75, %79
  store %class.SkFontMgr* %77, %class.SkFontMgr** %76, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5sk_spI9SkFontMgrED2Ev(%class.sk_sp.15*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  %3 = load %class.SkFontMgr*, %class.SkFontMgr** %2, align 8
  %4 = icmp eq %class.SkFontMgr* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkFontMgr* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkFontMgr* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #11
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZN14SkFontStyleSet14matchStyleCSS3ERK11SkFontStyle(%class.SkFontStyleSet*, %class.SkFontStyle* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.SkFontStyle, align 4
  %4 = bitcast %class.SkFontStyleSet* %0 to i32 (%class.SkFontStyleSet*)***
  %5 = load i32 (%class.SkFontStyleSet*)**, i32 (%class.SkFontStyleSet*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkFontStyleSet*)*, i32 (%class.SkFontStyleSet*)** %5, i64 3
  %7 = load i32 (%class.SkFontStyleSet*)*, i32 (%class.SkFontStyleSet*)** %6, align 8
  %8 = tail call i32 %7(%class.SkFontStyleSet* %0) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %109, label %10

10:                                               ; preds = %2
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %10
  %13 = bitcast %class.SkFontStyle* %3 to i8*
  %14 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %3, i64 0, i32 0
  %15 = bitcast %class.SkFontStyleSet* %0 to void (%class.SkFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)***
  %16 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %1, i64 0, i32 0
  br label %24

17:                                               ; preds = %102, %10
  %18 = phi i32 [ 0, %10 ], [ %105, %102 ]
  %19 = bitcast %class.SkFontStyleSet* %0 to %class.SkTypeface* (%class.SkFontStyleSet*, i32)***
  %20 = load %class.SkTypeface* (%class.SkFontStyleSet*, i32)**, %class.SkTypeface* (%class.SkFontStyleSet*, i32)*** %19, align 8
  %21 = getelementptr inbounds %class.SkTypeface* (%class.SkFontStyleSet*, i32)*, %class.SkTypeface* (%class.SkFontStyleSet*, i32)** %20, i64 5
  %22 = load %class.SkTypeface* (%class.SkFontStyleSet*, i32)*, %class.SkTypeface* (%class.SkFontStyleSet*, i32)** %21, align 8
  %23 = call %class.SkTypeface* %22(%class.SkFontStyleSet* %0, i32 %18) #11
  br label %109

24:                                               ; preds = %102, %12
  %25 = phi i32 [ 0, %12 ], [ %107, %102 ]
  %26 = phi i32 [ 0, %12 ], [ %106, %102 ]
  %27 = phi i32 [ 0, %12 ], [ %105, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 328080, i32* %14, align 4
  %28 = load void (%class.SkFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)**, void (%class.SkFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)*** %15, align 8
  %29 = getelementptr inbounds void (%class.SkFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)*, void (%class.SkFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)** %28, i64 4
  %30 = load void (%class.SkFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)*, void (%class.SkFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*)** %29, align 8
  call void %30(%class.SkFontStyleSet* %0, i32 %25, %class.SkFontStyle* nonnull %3, %class.SkString* null) #11
  %31 = load i32, i32* %16, align 4
  %32 = lshr i32 %31, 16
  %33 = and i32 %32, 255
  %34 = icmp ult i32 %33, 6
  %35 = load i32, i32* %14, align 4
  %36 = lshr i32 %35, 16
  %37 = and i32 %36, 255
  %38 = icmp ugt i32 %37, %33
  br i1 %34, label %39, label %45

39:                                               ; preds = %24
  br i1 %38, label %43, label %40

40:                                               ; preds = %39
  %41 = sub nuw nsw i32 10, %33
  %42 = add nuw nsw i32 %41, %37
  br label %49

43:                                               ; preds = %39
  %44 = sub nsw i32 10, %37
  br label %49

45:                                               ; preds = %24
  br i1 %38, label %46, label %49

46:                                               ; preds = %45
  %47 = add nuw nsw i32 %33, 10
  %48 = sub nsw i32 %47, %37
  br label %49

49:                                               ; preds = %45, %46, %40, %43
  %50 = phi i32 [ %44, %43 ], [ %42, %40 ], [ %48, %46 ], [ %37, %45 ]
  %51 = shl nsw i32 %50, 8
  %52 = lshr i32 %31, 24
  %53 = zext i32 %52 to i64
  %54 = lshr i32 %35, 24
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @_ZZN14SkFontStyleSet14matchStyleCSS3ERK11SkFontStyleE5score, i64 0, i64 %53, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %51, %57
  %59 = shl i32 %58, 8
  %60 = and i32 %31, 65535
  %61 = and i32 %35, 65535
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %49
  %64 = add nsw i32 %59, 1000
  br label %102

65:                                               ; preds = %49
  %66 = icmp ult i32 %60, 400
  br i1 %66, label %67, label %76

67:                                               ; preds = %65
  %68 = icmp ugt i32 %61, %60
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = add i32 %59, %61
  %71 = add i32 %70, 1000
  %72 = sub i32 %71, %60
  br label %102

73:                                               ; preds = %67
  %74 = sub nsw i32 1000, %61
  %75 = add nsw i32 %74, %59
  br label %102

76:                                               ; preds = %65
  %77 = icmp ult i32 %60, 501
  br i1 %77, label %78, label %94

78:                                               ; preds = %76
  %79 = icmp uge i32 %61, %60
  %80 = icmp ult i32 %61, 501
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = add nuw nsw i32 %60, 1000
  %84 = sub nuw nsw i32 %83, %61
  %85 = add nsw i32 %84, %59
  br label %102

86:                                               ; preds = %78
  %87 = icmp ugt i32 %61, %60
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = add i32 %59, %61
  %90 = add i32 %89, 500
  br label %102

91:                                               ; preds = %86
  %92 = sub nsw i32 1000, %61
  %93 = add nsw i32 %92, %59
  br label %102

94:                                               ; preds = %76
  %95 = icmp ugt i32 %61, %60
  br i1 %95, label %96, label %100

96:                                               ; preds = %94
  %97 = add nuw nsw i32 %60, 1000
  %98 = sub nsw i32 %97, %61
  %99 = add nsw i32 %98, %59
  br label %102

100:                                              ; preds = %94
  %101 = add nsw i32 %59, %61
  br label %102

102:                                              ; preds = %73, %69, %100, %96, %82, %91, %88, %63
  %103 = phi i32 [ %64, %63 ], [ %75, %73 ], [ %72, %69 ], [ %93, %91 ], [ %90, %88 ], [ %85, %82 ], [ %99, %96 ], [ %101, %100 ]
  %104 = icmp slt i32 %26, %103
  %105 = select i1 %104, i32 %25, i32 %27
  %106 = select i1 %104, i32 %103, i32 %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  %107 = add nuw nsw i32 %25, 1
  %108 = icmp eq i32 %107, %8
  br i1 %108, label %17, label %24

109:                                              ; preds = %2, %17
  %110 = phi %class.SkTypeface* [ %23, %17 ], [ null, %2 ]
  ret %class.SkTypeface* %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkFontMgrD0Ev(%class.SkFontMgr*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle(%class.SkFontMgr*, %class.SkTypeface*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  ret %class.SkTypeface* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkEmptyFontStyleSetD0Ev(%class.SkEmptyFontStyleSet*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkEmptyFontStyleSet* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN19SkEmptyFontStyleSet5countEv(%class.SkEmptyFontStyleSet*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkEmptyFontStyleSet8getStyleEiP11SkFontStyleP8SkString(%class.SkEmptyFontStyleSet*, i32, %class.SkFontStyle*, %class.SkString*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZN19SkEmptyFontStyleSet14createTypefaceEi(%class.SkEmptyFontStyleSet*, i32) unnamed_addr #2 comdat align 2 {
  ret %class.SkTypeface* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZN19SkEmptyFontStyleSet10matchStyleERK11SkFontStyle(%class.SkEmptyFontStyleSet*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  ret %class.SkTypeface* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #9

declare void @_ZN9SkFontMgr7FactoryEv(%class.sk_sp.15* sret) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkEmptyFontMgrD0Ev(%class.SkEmptyFontMgr*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkEmptyFontMgr* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkEmptyFontMgr15onCountFamiliesEv(%class.SkEmptyFontMgr*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyFontMgr15onGetFamilyNameEiP8SkString(%class.SkEmptyFontMgr*, i32, %class.SkString*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFontStyleSet* @_ZNK14SkEmptyFontMgr16onCreateStyleSetEi(%class.SkEmptyFontMgr*, i32) unnamed_addr #2 comdat align 2 {
  ret %class.SkFontStyleSet* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFontStyleSet* @_ZNK14SkEmptyFontMgr13onMatchFamilyEPKc(%class.SkEmptyFontMgr*, i8*) unnamed_addr #2 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #10
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 1, i32* %5, align 4
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19SkEmptyFontStyleSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast i8* %3 to %class.SkFontStyleSet*
  ret %class.SkFontStyleSet* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZNK14SkEmptyFontMgr18onMatchFamilyStyleEPKcRK11SkFontStyle(%class.SkEmptyFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  ret %class.SkTypeface* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZNK14SkEmptyFontMgr27onMatchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkEmptyFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4), i8**, i32, i32) unnamed_addr #2 comdat align 2 {
  ret %class.SkTypeface* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyFontMgr14onMakeFromDataE5sk_spI6SkDataEi(%class.sk_sp.6* noalias sret, %class.SkEmptyFontMgr*, %class.sk_sp.7*, i32) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyFontMgr21onMakeFromStreamIndexENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.6* noalias sret, %class.SkEmptyFontMgr*, %class.SkStreamAsset*, i32) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  %6 = icmp eq %class.SkStreamAsset* %2, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = bitcast %class.SkStreamAsset* %2 to void (%class.SkStreamAsset*)***
  %9 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %9, i64 1
  %11 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %10, align 8
  tail call void %11(%class.SkStreamAsset* nonnull %2) #11
  br label %12

12:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyFontMgr20onMakeFromStreamArgsENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp.6* noalias sret, %class.SkEmptyFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  %6 = icmp eq %class.SkStreamAsset* %2, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = bitcast %class.SkStreamAsset* %2 to void (%class.SkStreamAsset*)***
  %9 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %9, i64 1
  %11 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %10, align 8
  tail call void %11(%class.SkStreamAsset* nonnull %2) #11
  br label %12

12:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE(%class.sk_sp.6* noalias sret, %class.SkEmptyFontMgr*, %class.SkFontData*) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %4, align 8
  %5 = icmp eq %class.SkFontData* %2, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 3, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 3, i32 1, i32 0, i64 0
  %10 = icmp eq i32* %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = bitcast i32* %8 to i8*
  tail call void @_Z7sk_freePv(i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.SkStreamAsset*, %class.SkStreamAsset** %14, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %14, align 8
  %16 = icmp eq %class.SkStreamAsset* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %class.SkStreamAsset* %15 to void (%class.SkStreamAsset*)***
  %19 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %19, i64 1
  %21 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %20, align 8
  tail call void %21(%class.SkStreamAsset* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %13
  %23 = bitcast %class.SkFontData* %2 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %3, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyFontMgr14onMakeFromFileEPKci(%class.sk_sp.6* noalias sret, %class.SkEmptyFontMgr*, i8*, i32) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyFontMgr20onLegacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp.6* noalias sret, %class.SkEmptyFontMgr*, i8*, i32) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  ret void
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi: argument 0"}
!4 = distinct !{!4, !"_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi"}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z10sk_make_spI14SkEmptyFontMgrJEE5sk_spIT_EDpOT0_: argument 0"}
!8 = distinct !{!8, !"_Z10sk_make_spI14SkEmptyFontMgrJEE5sk_spIT_EDpOT0_"}
