; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_transform_keyframe.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_transform_keyframe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CompositorTransformKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr" }
%"class.blink::CompositorKeyframe" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::TransformKeyframe"* }
%"class.gfx::TransformKeyframe" = type { %"class.gfx::Keyframe", %"class.gfx::TransformOperations" }
%"class.gfx::Keyframe" = type { i32 (...)**, %"class.base::TimeDelta", %"class.std::__1::unique_ptr.0" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.gfx::TimingFunction"* }
%"class.gfx::TimingFunction" = type { i32 (...)** }
%"class.gfx::TransformOperations" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, %"class.std::__1::__compressed_pair.8" }
%"struct.gfx::TransformOperation" = type { i32, %"class.gfx::Transform", %union.anon }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%union.anon = type { %struct.anon.6 }
%struct.anon.6 = type { %struct.anon.7, float }
%struct.anon.7 = type { float, float, float }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.gfx::TransformOperation"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.11", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.27", [4 x i8] }>
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float }
%"class.blink::CompositorTransformOperations" = type { %"class.gfx::TransformOperations" }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZTVN5blink27CompositorTransformKeyframeE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CompositorTransformKeyframe"*)* @_ZN5blink27CompositorTransformKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::CompositorTransformKeyframe"*)* @_ZN5blink27CompositorTransformKeyframeD0Ev to i8*), i8* bitcast (double (%"class.blink::CompositorTransformKeyframe"*)* @_ZNK5blink27CompositorTransformKeyframe4TimeEv to i8*), i8* bitcast (%"class.gfx::TimingFunction"* (%"class.blink::CompositorTransformKeyframe"*)* @_ZNK5blink27CompositorTransformKeyframe16CcTimingFunctionEv to i8*)] }, align 8

@_ZN5blink27CompositorTransformKeyframeC1EdNS_29CompositorTransformOperationsERKNS_14TimingFunctionE = hidden unnamed_addr alias void (%"class.blink::CompositorTransformKeyframe"*, double, %"class.blink::CompositorTransformOperations"*, %"class.blink::TimingFunction"*), void (%"class.blink::CompositorTransformKeyframe"*, double, %"class.blink::CompositorTransformOperations"*, %"class.blink::TimingFunction"*)* @_ZN5blink27CompositorTransformKeyframeC2EdNS_29CompositorTransformOperationsERKNS_14TimingFunctionE
@_ZN5blink27CompositorTransformKeyframeD1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorTransformKeyframe"*), void (%"class.blink::CompositorTransformKeyframe"*)* @_ZN5blink27CompositorTransformKeyframeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorTransformKeyframeC2EdNS_29CompositorTransformOperationsERKNS_14TimingFunctionE(%"class.blink::CompositorTransformKeyframe"* nocapture, double, %"class.blink::CompositorTransformOperations"*, %"class.blink::TimingFunction"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::TransformOperations", align 8
  %6 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27CompositorTransformKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = fmul double %1, 1.000000e+06
  %8 = fcmp ult double %7, 0xC3E0000000000000
  %9 = fcmp ugt double %7, 0x43DFFFFFFFFFFFFF
  %10 = fcmp ogt double %7, 0xC3E0000000000000
  %11 = select i1 %10, double %7, double 0xC3E0000000000000
  %12 = fptosi double %11 to i64
  %13 = select i1 %8, i64 0, i64 9223372036854775807
  %14 = select i1 %9, i64 %13, i64 %12
  %15 = bitcast %"class.gfx::TransformOperations"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #6
  call void @_ZN5blink29CompositorTransformOperations29ReleaseGfxTransformOperationsEv(%"class.gfx::TransformOperations"* nonnull sret %5, %"class.blink::CompositorTransformOperations"* %2) #6
  %16 = bitcast %"class.blink::TimingFunction"* %3 to %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)***
  %17 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)**, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %17, i64 6
  %19 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %18, align 8
  %20 = call %"class.gfx::TimingFunction"* %19(%"class.blink::TimingFunction"* %3) #6
  %21 = call %"class.gfx::TransformKeyframe"* @_ZN3gfx17TransformKeyframe6CreateEN4base9TimeDeltaERKNS_19TransformOperationsENSt3__110unique_ptrINS_14TimingFunctionENS6_14default_deleteIS8_EEEE(i64 %14, %"class.gfx::TransformOperations"* nonnull dereferenceable(64) %5, %"class.gfx::TimingFunction"* %20) #6
  %22 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.gfx::TransformKeyframe"* %21, %"class.gfx::TransformKeyframe"** %22, align 8
  call void @_ZN3gfx19TransformOperationsD1Ev(%"class.gfx::TransformOperations"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #6
  ret void
}

declare %"class.gfx::TransformKeyframe"* @_ZN3gfx17TransformKeyframe6CreateEN4base9TimeDeltaERKNS_19TransformOperationsENSt3__110unique_ptrINS_14TimingFunctionENS6_14default_deleteIS8_EEEE(i64, %"class.gfx::TransformOperations"* dereferenceable(64), %"class.gfx::TimingFunction"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink29CompositorTransformOperations29ReleaseGfxTransformOperationsEv(%"class.gfx::TransformOperations"* sret, %"class.blink::CompositorTransformOperations"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx19TransformOperationsD1Ev(%"class.gfx::TransformOperations"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorTransformKeyframeD2Ev(%"class.blink::CompositorTransformKeyframe"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27CompositorTransformKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::TransformKeyframe"*, %"class.gfx::TransformKeyframe"** %3, align 8
  store %"class.gfx::TransformKeyframe"* null, %"class.gfx::TransformKeyframe"** %3, align 8
  %5 = icmp eq %"class.gfx::TransformKeyframe"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gfx::TransformKeyframe"* %4 to void (%"class.gfx::TransformKeyframe"*)***
  %8 = load void (%"class.gfx::TransformKeyframe"*)**, void (%"class.gfx::TransformKeyframe"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::TransformKeyframe"*)*, void (%"class.gfx::TransformKeyframe"*)** %8, i64 1
  %10 = load void (%"class.gfx::TransformKeyframe"*)*, void (%"class.gfx::TransformKeyframe"*)** %9, align 8
  tail call void %10(%"class.gfx::TransformKeyframe"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorTransformKeyframeD0Ev(%"class.blink::CompositorTransformKeyframe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27CompositorTransformKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::TransformKeyframe"*, %"class.gfx::TransformKeyframe"** %3, align 8
  store %"class.gfx::TransformKeyframe"* null, %"class.gfx::TransformKeyframe"** %3, align 8
  %5 = icmp eq %"class.gfx::TransformKeyframe"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gfx::TransformKeyframe"* %4 to void (%"class.gfx::TransformKeyframe"*)***
  %8 = load void (%"class.gfx::TransformKeyframe"*)**, void (%"class.gfx::TransformKeyframe"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::TransformKeyframe"*)*, void (%"class.gfx::TransformKeyframe"*)** %8, i64 1
  %10 = load void (%"class.gfx::TransformKeyframe"*)*, void (%"class.gfx::TransformKeyframe"*)** %9, align 8
  tail call void %10(%"class.gfx::TransformKeyframe"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::CompositorTransformKeyframe"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink27CompositorTransformKeyframe4TimeEv(%"class.blink::CompositorTransformKeyframe"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::TransformKeyframe"*, %"class.gfx::TransformKeyframe"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::TransformKeyframe", %"class.gfx::TransformKeyframe"* %3, i64 0, i32 0
  %5 = tail call i64 @_ZNK3gfx8Keyframe4TimeEv(%"class.gfx::Keyframe"* %4) #6
  %6 = add i64 %5, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = sitofp i64 %5 to double
  %10 = fdiv double %9, 1.000000e+06
  br label %14

11:                                               ; preds = %1
  %12 = icmp slt i64 %5, 0
  %13 = select i1 %12, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi double [ %13, %11 ], [ %10, %8 ]
  ret double %15
}

declare i64 @_ZNK3gfx8Keyframe4TimeEv(%"class.gfx::Keyframe"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gfx::TimingFunction"* @_ZNK5blink27CompositorTransformKeyframe16CcTimingFunctionEv(%"class.blink::CompositorTransformKeyframe"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::TransformKeyframe"*, %"class.gfx::TransformKeyframe"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::TransformKeyframe", %"class.gfx::TransformKeyframe"* %3, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.gfx::TimingFunction"*, %"class.gfx::TimingFunction"** %4, align 8
  ret %"class.gfx::TimingFunction"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::TransformKeyframe"* @_ZNK5blink27CompositorTransformKeyframe9CloneToCCEv(%"class.blink::CompositorTransformKeyframe"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorTransformKeyframe", %"class.blink::CompositorTransformKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::TransformKeyframe"*, %"class.gfx::TransformKeyframe"** %2, align 8
  %4 = tail call %"class.gfx::TransformKeyframe"* @_ZNK3gfx17TransformKeyframe5CloneEv(%"class.gfx::TransformKeyframe"* %3) #6
  ret %"class.gfx::TransformKeyframe"* %4
}

declare %"class.gfx::TransformKeyframe"* @_ZNK3gfx17TransformKeyframe5CloneEv(%"class.gfx::TransformKeyframe"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
