; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/generated_code_helper.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/generated_code_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.231" }
%"struct.std::__1::atomic.231" = type { %"struct.std::__1::__atomic_base.232" }
%"struct.std::__1::__atomic_base.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__cxx_atomic_impl.234" }
%"struct.std::__1::__cxx_atomic_impl.234" = type { %"struct.std::__1::__cxx_atomic_base_impl.235" }
%"struct.std::__1::__cxx_atomic_base_impl.235" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.174" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::String" = type { %class.scoped_refptr.230 }
%class.scoped_refptr.230 = type { %"class.WTF::StringImpl"* }
%"class.v8::Name" = type { i8 }
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.181", %"class.blink::HeapHashMap.188", %"class.std::__1::unique_ptr.198", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.210", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.213" }
%"class.blink::HeapHashMap.181" = type { %"class.WTF::HashMap.184" }
%"class.WTF::HashMap.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.188" = type { %"class.WTF::HashMap.191" }
%"class.WTF::HashMap.191" = type { %"class.WTF::HashTable.192" }
%"class.WTF::HashTable.192" = type <{ %"struct.WTF::KeyValuePair.194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.194" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.195" }
%"class.blink::TraceWrapperV8Reference.195" = type { %"class.v8::TracedReference.196" }
%"class.v8::TracedReference.196" = type { %"class.v8::BasicTracedReference.197" }
%"class.v8::BasicTracedReference.197" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.201" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.blink::ScopedPersistent.210" = type { %"class.v8::Persistent.211" }
%"class.v8::Persistent.211" = type { %"class.v8::PersistentBase.212" }
%"class.v8::PersistentBase.212" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.213" = type { %"class.WTF::HashMap.216" }
%"class.WTF::HashMap.216" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair.219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.219" = type opaque
%"class.v8::Function" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.223, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%class.scoped_refptr.223 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::V8PerContextData"* }
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.225" }
%"class.blink::Persistent.225" = type { %"class.blink::PersistentBase.226" }
%"class.blink::PersistentBase.226" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.567", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.638", i32, i8, [3 x i8], %"class.blink::HeapVector.640", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.648", %"class.blink::Member.650", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.659", %"class.blink::Member.718", %"class.blink::Member.720", i8, [7 x i8] }>
%"class.blink::Supplementable.567" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.568" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.582" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.575" }
%"class.blink::HeapHashSet.575" = type { %"class.WTF::HashSet.578" }
%"class.WTF::HashSet.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"class.blink::WeakMember.581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.581" = type opaque
%"class.blink::Supplementable.582" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.583" }
%"class.blink::HeapHashMap.583" = type { %"class.WTF::HashMap.586" }
%"class.WTF::HashMap.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"struct.WTF::KeyValuePair.589"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.589" = type { i8*, %"class.blink::Member.1765" }
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1767" }
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.590, %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.626", %"class.std::__1::unique_ptr.626", %"class.blink::Member.632", i32, [4 x i8], %"class.WTF::HashSet.634", i32, i32 }
%class.scoped_refptr.590 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.591", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.593", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.598 }
%"class.WTF::RefCounted.591" = type { %"class.base::RefCounted.592" }
%"class.base::RefCounted.592" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.593" = type { %"class.absl::optional_internal::optional_data.594" }
%"class.absl::optional_internal::optional_data.594" = type { %"class.absl::optional_internal::optional_data_base.595" }
%"class.absl::optional_internal::optional_data_base.595" = type { %"class.absl::optional_internal::optional_data_dtor_base.596" }
%"class.absl::optional_internal::optional_data_dtor_base.596" = type { i8, %union.anon.597 }
%union.anon.597 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.598 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.602", %"class.std::__1::map.613", %"class.std::__1::map.622"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.593" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.602" = type { %"class.std::__1::__tree.603" }
%"class.std::__1::__tree.603" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.613" = type { %"class.std::__1::__tree.614" }
%"class.std::__1::__tree.614" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.615", %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.622" = type opaque
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.640" = type { %"class.WTF::Vector.643" }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.blink::Member.646"*, i32, i32 }
%"class.blink::Member.646" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.652", i32, i32 }
%"class.blink::HeapHashMap.652" = type { %"class.WTF::HashMap.655" }
%"class.WTF::HashMap.655" = type { %"class.WTF::HashTable.656" }
%"class.WTF::HashTable.656" = type <{ %"struct.WTF::KeyValuePair.658"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.658" = type opaque
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.665" }
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { %"class.mojo::StructPtr.668"*, i32, i32 }
%"class.mojo::StructPtr.668" = type { %"class.std::__1::unique_ptr.669" }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.672", %"class.WTF::HashMap.679", %"class.WTF::HashMap.684", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.689", i32, %"class.mojo::StructPtr.694", %"class.WTF::Vector.689" }
%"class.mojo::StructPtr.672" = type { %"class.std::__1::unique_ptr.673" }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.679" = type { %"class.WTF::HashTable.680" }
%"class.WTF::HashTable.680" = type <{ %"struct.WTF::KeyValuePair.683"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.683" = type opaque
%"class.WTF::HashMap.684" = type { %"class.WTF::HashTable.685" }
%"class.WTF::HashTable.685" = type <{ %"struct.WTF::KeyValuePair.688"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.688" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.694" = type { %"class.std::__1::unique_ptr.695" }
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.689", i8, i8, [6 x i8] }>
%"class.WTF::Vector.689" = type { %"class.WTF::VectorBuffer.690" }
%"class.WTF::VectorBuffer.690" = type { %"class.WTF::VectorBufferBase.691" }
%"class.WTF::VectorBufferBase.691" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.709" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.509", i32 }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.512", %"class.base::OnceCallback.513", %"class.absl::optional.514", %"class.absl::optional.519", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.526", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.534", %"class.std::__1::map.545", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.554", i8, %class.scoped_refptr.395, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.555" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.512" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.350" }
%"struct.std::__1::atomic.350" = type { %"struct.std::__1::__atomic_base.351" }
%"struct.std::__1::__atomic_base.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__cxx_atomic_impl.353" }
%"struct.std::__1::__cxx_atomic_impl.353" = type { %"struct.std::__1::__cxx_atomic_base_impl.354" }
%"struct.std::__1::__cxx_atomic_base_impl.354" = type { i32 }
%"class.base::OnceCallback.513" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.514" = type { %"class.absl::optional_internal::optional_data.515" }
%"class.absl::optional_internal::optional_data.515" = type { %"class.absl::optional_internal::optional_data_base.516" }
%"class.absl::optional_internal::optional_data_base.516" = type { %"class.absl::optional_internal::optional_data_dtor_base.517" }
%"class.absl::optional_internal::optional_data_dtor_base.517" = type { i8, %union.anon.518 }
%union.anon.518 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.519" = type { %"class.absl::optional_internal::optional_data.520" }
%"class.absl::optional_internal::optional_data.520" = type { %"class.absl::optional_internal::optional_data_base.521" }
%"class.absl::optional_internal::optional_data_base.521" = type { %"class.absl::optional_internal::optional_data_dtor_base.522" }
%"class.absl::optional_internal::optional_data_dtor_base.522" = type { i8, %union.anon.523 }
%union.anon.523 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.395, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.524" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.524" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.414 }
%class.scoped_refptr.414 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.415", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.415" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.416" }
%"struct.std::__1::atomic.416" = type { %"struct.std::__1::__atomic_base.417" }
%"struct.std::__1::__atomic_base.417" = type { %"struct.std::__1::__atomic_base.418" }
%"struct.std::__1::__atomic_base.418" = type { %"struct.std::__1::__cxx_atomic_impl.419" }
%"struct.std::__1::__cxx_atomic_impl.419" = type { %"struct.std::__1::__cxx_atomic_base_impl.420" }
%"struct.std::__1::__cxx_atomic_base_impl.420" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.468 }
%class.scoped_refptr.468 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1600", [4 x i8], %"class.base::RepeatingCallback.512", %class.scoped_refptr.395, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.231", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1600" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.525 }
%class.scoped_refptr.525 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.529", %class.scoped_refptr.530 }
%"class.base::RepeatingCallback.529" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.530 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.394", [4 x i8] }>
%"class.base::RefCountedThreadSafe.394" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.408", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.534" = type { %"class.std::__1::__tree.535" }
%"class.std::__1::__tree.535" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.536", %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.545" = type { %"class.std::__1::__tree.546" }
%"class.std::__1::__tree.546" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.554" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.395 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.396" }>
%"class.base::RefCountedThreadSafe.396" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.555" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.720" = type { %"class.blink::MemberBase.721" }
%"class.blink::MemberBase.721" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.blink::QualifiedName" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.228", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.228" = type { %"class.base::RefCounted.229" }
%"class.base::RefCounted.229" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.244" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.236", %"class.blink::Member.236" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.236", %"class.blink::Member.238", %"class.blink::Member.236", %"class.blink::Member.236", %"class.blink::Member.240" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.260", %"class.blink::Member.262", %"class.blink::Member.238", %"class.blink::Member.264", %"class.blink::Member.264", %"class.blink::Member.287", %"class.blink::Member.289", %"class.blink::Member.291", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.296", %"class.blink::HeapVector.298" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.346", %"class.WTF::Vector.346", i8, i32, %"class.blink::Member.357", %"class.blink::Member.632", %"class.blink::Member.895", %"class.blink::Member.897", %"class.blink::Member.899", %"class.blink::Member.901", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.909", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.304", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.920", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.279", %"class.blink::Member.870", %"class.blink::Member.279", %"class.blink::Member.279", %"class.blink::Member.279", %"class.blink::UserActionElementSet", %"class.blink::Member.936", double, double, i64, i64, %"class.blink::HeapHashSet.938", %"class.blink::HeapHashSet.945", i16, i8, %"class.blink::Member.952", %"class.blink::Member.954", %"class.blink::Member.956", %"class.blink::Member.958", %"class.blink::TextLinkColors", %"class.blink::Member.960", i8, [7 x i8], %"class.blink::HeapHashMap.962", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.279", %"class.WTF::Vector.969", %"class.blink::Member.974", %"class.blink::Member.976", i8, %"class.blink::Member.279", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.978", %"class.blink::HeapVector.980", %"class.std::__1::unique_ptr.988", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.994", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1007", %"class.WTF::Vector.1009", i8, i8, %"class.std::__1::unique_ptr.1014", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1020", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1028", i8, i32, %"class.blink::Member.1030", %"class.blink::Member.1032", %"class.blink::Member.1034", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1036", %"class.WTF::HashMap.1038", %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1051", i8, i32, %"class.blink::Member.1058", %"class.blink::Member.1060", i32, %"class.blink::Member.1062", %"class.blink::Member.1064", %"class.blink::Member.1066", %"class.std::__1::unique_ptr.1068", i64, %"class.std::__1::unique_ptr.1074", i32, i32, %"class.blink::Member.1080", %"class.blink::Member.1082", %"class.blink::Member.1084", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1086", %"class.WTF::Vector.881", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1088", %"class.blink::Member.1095", %"class.std::__1::unique_ptr.1097", %"class.blink::Member.1103", i8, i8, %"class.WTF::String", %"class.blink::Member.1105", i8, [7 x i8], %"class.blink::HeapHashMap.1107", %"class.blink::HeapObserverSet.1114", %"class.blink::Member.1122", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1124", i32, i8, i8, %"class.blink::WeakMember.1126", %"class.blink::Member.1127" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.339" }
%"class.blink::HeapHashMap.339" = type { %"class.WTF::HashMap.342" }
%"class.WTF::HashMap.342" = type { %"class.WTF::HashTable.343" }
%"class.WTF::HashTable.343" = type <{ %"struct.WTF::KeyValuePair.345"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.345" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348" }
%"class.WTF::VectorBufferBase.348" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.722", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.730", %"class.blink::Member.262", %"class.blink::Member.732", i8, %"class.blink::Member.734", %"class.blink::Member.736", %"class.blink::Member.738", %"class.blink::Member.738", %"class.blink::Member.738", %"class.blink::Member.738", %"class.blink::Member.738", %"class.blink::Member.738", %"class.blink::Member.740", %"class.blink::Member.742", %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.748", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.689", %"class.blink::Member.750", %class.scoped_refptr.752, %"class.blink::HeapHashSet.814", %"class.blink::Member.821", %"class.blink::HeapHashMap.834", %"class.std::__1::unique_ptr.841", %"class.blink::Member.853", %"class.blink::Member.874", %"class.blink::Member.876", %"class.blink::Member.878", %"class.WTF::Vector.881", %"class.util::TokenType.391", %"class.WTF::HashSet.886", %"class.WTF::Deque.890" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.380", %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", i8, %"class.WTF::Vector.388" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.373" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.361" }
%"class.blink::HeapVector.361" = type { %"class.WTF::Vector.364" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366", [32 x i8] }
%"class.WTF::VectorBufferBase.366" = type { %"struct.std::__1::pair.367"*, i32, i32 }
%"struct.std::__1::pair.367" = type { %"class.WTF::AtomicString", %"class.blink::Member.368" }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::HeapVector.370"* }
%"class.blink::HeapVector.370" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.WTF::Vector.376"* }
%"class.WTF::Vector.376" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1152", %"class.blink::Member.1154", %"class.blink::Member.1156", i8, i32, i8, i32, %"class.blink::Member.1158", %"class.blink::Member.382", %"class.blink::FrameLifecycle", %"class.blink::Member.380", %"class.blink::Member.380", %"class.blink::Member.380", %"class.blink::Member.380", %"class.blink::Member.380", %"class.blink::Member.380", %"class.blink::Member.859", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1168", i8, %"class.base::UnguessableToken", %"class.absl::optional.1170", %"class.absl::optional.1175", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.380", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1187", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1195", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1203", %"class.blink::FrameLoader", %"class.blink::Member.1224", %"class.blink::Member.279", %"class.blink::Member.1226", %"class.blink::Member.1228", %"class.blink::Member.1230", %"class.blink::Member.1232", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1234", %class.scoped_refptr.1236, %"class.blink::Member.1237", %"class.blink::Member.1239", %"class.blink::Member.1241", %"class.blink::Member.1243", %"class.blink::Member.1245", %"class.blink::Member.1247", %"class.blink::Member.1249", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1251", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1254", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1260", %"class.std::__1::unique_ptr.1261", %"class.absl::optional.1175", i32, [4 x i8], %"class.std::__1::unique_ptr.1267", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1275", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1280", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1285", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1288", %"class.blink::Member.1290", %"class.blink::Member.1292", %"class.blink::Member.1294", %"class.mojo::StructPtr.1297", %"class.blink::Member.1306", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1308", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1187" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1188" }
%"class.blink::HeapHashMap.1188" = type { %"class.WTF::HashMap.1191" }
%"class.WTF::HashMap.1191" = type { %"class.WTF::HashTable.1192" }
%"class.WTF::HashTable.1192" = type <{ %"struct.WTF::KeyValuePair.1194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1194" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1195" = type { %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.844", %"class.base::WeakPtrFactory.849" }
%"class.WTF::HashMap.844" = type { %"class.WTF::HashTable.845" }
%"class.WTF::HashTable.845" = type <{ %"struct.WTF::KeyValuePair.848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.848" = type opaque
%"class.base::WeakPtrFactory.849" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1201" }
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.857" }
%"class.blink::WeakMember.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.512", %"class.base::RepeatingCallback.1777", i64, %"class.std::__1::map.1778", i8*, i64, %"class.base::WeakPtrFactory.1787" }
%"class.base::RepeatingCallback.1777" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1778" = type { %"class.std::__1::__tree.1779" }
%"class.std::__1::__tree.1779" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1780", %"class.std::__1::__compressed_pair.1784" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.1784" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::WeakPtrFactory.1787" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1203" = type { %"class.WTF::HashSet.1206" }
%"class.WTF::HashSet.1206" = type { %"class.WTF::HashTable.1207" }
%"class.WTF::HashTable.1207" = type <{ %"class.blink::WeakMember.1209"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1209" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.859", %"class.blink::Member.1210", %"class.blink::Member.1212", %"class.std::__1::unique_ptr.1214", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1220" }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.230 }
%"class.WTF::HashSet.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1315", %"class.blink::Member.859", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1320", i8, i32, %"class.blink::Color", %"class.absl::optional.1322", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1327", %"class.blink::Member.1329", %"class.blink::Member.1329", %"class.std::__1::unique_ptr.1332", i32, [4 x i8], %"class.WTF::HashSet.1335", %"class.blink::Member.1342", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1344", %"class.blink::HeapHashSet.1351", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1359", i8, %"class.blink::Member.1365", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1377", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1391", i8, %"class.std::__1::unique_ptr.1397", %"class.std::__1::unique_ptr.1514", %"class.WTF::Vector.1520", i32, %class.scoped_refptr.1525, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1526", %"class.blink::Member.1528", %"class.blink::Member.1530", %"class.blink::HeapHashSet.1532", %"class.blink::HeapHashSet.1539", %"class.std::__1::unique_ptr.1546", %"class.std::__1::unique_ptr.1553", %"class.WTF::Vector.346" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1315" = type { %"class.WTF::HashTable.1316" }
%"class.WTF::HashTable.1316" = type <{ %class.scoped_refptr.1319*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1320" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1321", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.926, %"class.base::WeakPtrFactory.927" }
%class.scoped_refptr.926 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.927" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1321" = type { %"class.blink::MemberBase.1225" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1322" = type { %"class.absl::optional_internal::optional_data.1323" }
%"class.absl::optional_internal::optional_data.1323" = type { %"class.absl::optional_internal::optional_data_base.1324" }
%"class.absl::optional_internal::optional_data_base.1324" = type { %"class.absl::optional_internal::optional_data_dtor_base.1325" }
%"class.absl::optional_internal::optional_data_dtor_base.1325" = type { i8, %union.anon.1326 }
%union.anon.1326 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::HeapHashSet.1331"* }
%"class.blink::HeapHashSet.1331" = type opaque
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.WTF::HashSet.1335"* }
%"class.WTF::HashSet.1335" = type { %"class.WTF::HashTable.1336" }
%"class.WTF::HashTable.1336" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1344" = type { %"class.WTF::HashSet.1347" }
%"class.WTF::HashSet.1347" = type { %"class.WTF::HashTable.1348" }
%"class.WTF::HashTable.1348" = type <{ %"class.blink::Member.1350"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1350" = type opaque
%"class.blink::HeapHashSet.1351" = type { %"class.WTF::HashSet.1354" }
%"class.WTF::HashSet.1354" = type { %"class.WTF::HashTable.1355" }
%"class.WTF::HashTable.1355" = type <{ %"class.blink::Member.1357"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1587", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1598", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.279" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1589", %"class.blink::Member.1590", %"class.blink::Member.1592", %"class.blink::Member.1594", %"class.blink::Member.1596", %"class.WTF::Vector.346", i16, %class.scoped_refptr.926 }
%"class.blink::ThreadState::PrefinalizerRegistration.1589" = type { i8 }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1598" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1599", { i64, i64 } }
%"class.blink::WeakMember.1599" = type { %"class.blink::MemberBase.1358" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1369", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1369" = type { %"class.WTF::HashTable.1370" }
%"class.WTF::HashTable.1370" = type <{ %"struct.WTF::KeyValuePair.1372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1372" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1373", i32, i32 }
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1377" = type { %"class.WTF::LinkedHashSet.1380" }
%"class.WTF::LinkedHashSet.1380" = type { %"class.WTF::HashMap.1381", %"class.WTF::VectorBackedLinkedList.1385" }
%"class.WTF::HashMap.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %"struct.WTF::KeyValuePair.1384"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1384" = type opaque
%"class.WTF::VectorBackedLinkedList.1385" = type { %"class.WTF::Vector.1386", i32, i32 }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388" }
%"class.WTF::VectorBufferBase.1388" = type { %"class.WTF::VectorBackedLinkedListNode.1389"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1389" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1397" = type { %"class.std::__1::__compressed_pair.1398" }
%"class.std::__1::__compressed_pair.1398" = type { %"struct.std::__1::__compressed_pair_elem.1399" }
%"struct.std::__1::__compressed_pair_elem.1399" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1400, %class.scoped_refptr.1400, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1491", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1496", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1400 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1401", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1408" }
%"class.WTF::RefCounted.1401" = type { %"class.base::RefCounted.1402" }
%"class.base::RefCounted.1402" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1403", i32, [4 x i8] }>
%"class.WTF::Vector.1403" = type { %"class.WTF::VectorBuffer.1404" }
%"class.WTF::VectorBuffer.1404" = type { %"class.WTF::VectorBufferBase.1405" }
%"class.WTF::VectorBufferBase.1405" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1408" = type { %"class.WTF::VectorBuffer.1409" }
%"class.WTF::VectorBuffer.1409" = type { %"class.WTF::VectorBufferBase.1410" }
%"class.WTF::VectorBufferBase.1410" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1414", %"class.std::__1::unique_ptr.1463", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1411, %class.scoped_refptr.1412, %class.scoped_refptr.1413 }
%class.scoped_refptr.1411 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1427", i8, i8, %class.scoped_refptr.1411, i32, i32 }
%"class.WTF::RefCounted.1427" = type { %"class.base::RefCounted.1428" }
%"class.base::RefCounted.1428" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1412 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1582" }
%"class.blink::PaintPropertyNode.1582" = type { %"class.WTF::RefCounted.1583", i8, i8, %class.scoped_refptr.1412, i32, i32 }
%"class.WTF::RefCounted.1583" = type { %"class.base::RefCounted.1584" }
%"class.base::RefCounted.1584" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1413 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1579" }
%"class.blink::PaintPropertyNode.1579" = type { %"class.WTF::RefCounted.1580", i8, i8, %class.scoped_refptr.1413, i32, i32 }
%"class.WTF::RefCounted.1580" = type { %"class.base::RefCounted.1581" }
%"class.base::RefCounted.1581" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1417", %"class.WTF::Vector.1422", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1417" = type { %"class.WTF::VectorBuffer.1418" }
%"class.WTF::VectorBuffer.1418" = type { %"class.WTF::VectorBufferBase.1419" }
%"class.WTF::VectorBufferBase.1419" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1422" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1442" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1435, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1436", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1429" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1429" = type { %"class.std::__1::__compressed_pair.1430" }
%"class.std::__1::__compressed_pair.1430" = type { %"struct.std::__1::__compressed_pair_elem.1431" }
%"struct.std::__1::__compressed_pair_elem.1431" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1435 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1564", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1564" = type { %"class.WTF::RefCounted.1565", i8, i8, %class.scoped_refptr.1435, i32, i32 }
%"class.WTF::RefCounted.1565" = type { %"class.base::RefCounted.1566" }
%"class.base::RefCounted.1566" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1567" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1567" = type { %"class.absl::optional_internal::optional_data.1568" }
%"class.absl::optional_internal::optional_data.1568" = type { %"class.absl::optional_internal::optional_data_base.1569" }
%"class.absl::optional_internal::optional_data_base.1569" = type { %"class.absl::optional_internal::optional_data_dtor_base.1570" }
%"class.absl::optional_internal::optional_data_dtor_base.1570" = type { i8, %union.anon.1571 }
%union.anon.1571 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1572", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1572" = type { %"class.std::__1::__vector_base.1573" }
%"class.std::__1::__vector_base.1573" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1574" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1445", %"class.std::__1::unique_ptr.1451", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1445" = type { %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.1447" }
%"struct.std::__1::__compressed_pair_elem.1447" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1451" = type { %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1463" = type { %"class.std::__1::__compressed_pair.1464" }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1466", %"class.absl::optional.1466" }
%"class.absl::optional.1466" = type { %"class.absl::optional_internal::optional_data.1467" }
%"class.absl::optional_internal::optional_data.1467" = type { %"class.absl::optional_internal::optional_data_base.1468" }
%"class.absl::optional_internal::optional_data_base.1468" = type { %"class.absl::optional_internal::optional_data_dtor_base.1469" }
%"class.absl::optional_internal::optional_data_dtor_base.1469" = type { i8, [3 x i8], %union.anon.1470 }
%union.anon.1470 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1408"*, %"class.absl::optional.1476", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1476" = type { %"class.absl::optional_internal::optional_data.1477" }
%"class.absl::optional_internal::optional_data.1477" = type { %"class.absl::optional_internal::optional_data_base.1478" }
%"class.absl::optional_internal::optional_data_base.1478" = type { %"class.absl::optional_internal::optional_data_dtor_base.1479" }
%"class.absl::optional_internal::optional_data_dtor_base.1479" = type { i8, %union.anon.1480 }
%union.anon.1480 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1481", %"class.WTF::Vector.1486" }
%"class.WTF::Vector.1481" = type { %"class.WTF::VectorBuffer.1482" }
%"class.WTF::VectorBuffer.1482" = type { %"class.WTF::VectorBufferBase.1483", [128 x i8] }
%"class.WTF::VectorBufferBase.1483" = type { i32*, i32, i32 }
%"class.WTF::Vector.1486" = type { %"class.WTF::VectorBuffer.1487" }
%"class.WTF::VectorBuffer.1487" = type { %"class.WTF::VectorBufferBase.1488", [128 x i8] }
%"class.WTF::VectorBufferBase.1488" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1491" = type { %"class.WTF::VectorBuffer.1492" }
%"class.WTF::VectorBuffer.1492" = type { %"class.WTF::VectorBufferBase.1493" }
%"class.WTF::VectorBufferBase.1493" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"struct.WTF::KeyValuePair.1500"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1500" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1501", %"class.WTF::Vector.1506" }
%"class.WTF::HashMap.1501" = type { %"class.WTF::HashTable.1502" }
%"class.WTF::HashTable.1502" = type <{ %"struct.WTF::KeyValuePair.1505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1505" = type opaque
%"class.WTF::Vector.1506" = type { %"class.WTF::VectorBuffer.1507" }
%"class.WTF::VectorBuffer.1507" = type { %"class.WTF::VectorBufferBase.1508" }
%"class.WTF::VectorBufferBase.1508" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1514" = type { %"class.std::__1::__compressed_pair.1515" }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.1516" }
%"struct.std::__1::__compressed_pair_elem.1516" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1520" = type { %"class.WTF::VectorBuffer.1521" }
%"class.WTF::VectorBuffer.1521" = type { %"class.WTF::VectorBufferBase.1522" }
%"class.WTF::VectorBufferBase.1522" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1525 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1532" = type { %"class.WTF::HashSet.1535" }
%"class.WTF::HashSet.1535" = type { %"class.WTF::HashTable.1536" }
%"class.WTF::HashTable.1536" = type <{ %"class.blink::WeakMember.1538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1538" = type opaque
%"class.blink::HeapHashSet.1539" = type { %"class.WTF::HashSet.1542" }
%"class.WTF::HashSet.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"class.blink::WeakMember.1545"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1545" = type opaque
%"class.std::__1::unique_ptr.1546" = type { %"class.std::__1::__compressed_pair.1547" }
%"class.std::__1::__compressed_pair.1547" = type { %"struct.std::__1::__compressed_pair_elem.1548" }
%"struct.std::__1::__compressed_pair_elem.1548" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1549" }
%"class.base::time_internal::TimeBase.1549" = type { i64 }
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1556", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1556" = type { %"class.absl::optional_internal::optional_data.1557" }
%"class.absl::optional_internal::optional_data.1557" = type { %"class.absl::optional_internal::optional_data_base.1558" }
%"class.absl::optional_internal::optional_data_base.1558" = type { %"class.absl::optional_internal::optional_data_dtor_base.1559" }
%"class.absl::optional_internal::optional_data_dtor_base.1559" = type { i8, %union.anon.1560 }
%union.anon.1560 = type { %"class.base::Time" }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1236 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1251" = type { %"class.blink::Member.1252" }
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1790" }
%"class.mojo::Remote.1790" = type { %"class.mojo::internal::InterfacePtrState.1791" }
%"class.mojo::internal::InterfacePtrState.1791" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1792" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.393, %"class.std::__1::unique_ptr.509", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.395, i32 }>
%class.scoped_refptr.393 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.395, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.471", %"class.absl::optional.476", %"class.absl::optional.432", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.500", i8, [7 x i8], %class.scoped_refptr.395, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.394" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.395, %"class.std::__1::unique_ptr.421", %"class.absl::optional", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i32, i32, %"class.absl::optional.432", %"class.std::__1::unique_ptr.437", i8, i64, %class.scoped_refptr.467, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.470" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.395, i8, %"class.mojo::ScopedHandleBase.424", %class.scoped_refptr.425, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.426" }
%"class.mojo::ScopedHandleBase.424" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.425 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.426" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.430 }
%union.anon.430 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.431", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.431" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.440", i8, i64, %class.scoped_refptr.441, %class.scoped_refptr.463 }
%"class.base::RepeatingCallback.440" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.441 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.442", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.452", i8, [7 x i8] }>
%"class.base::RefCounted.442" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.443 }
%class.scoped_refptr.443 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.452" = type { %"class.std::__1::__tree.453" }
%"class.std::__1::__tree.453" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.463 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.467 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.469 }
%class.scoped_refptr.469 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.470" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.471" = type { %"class.absl::optional_internal::optional_data.472" }
%"class.absl::optional_internal::optional_data.472" = type { %"class.absl::optional_internal::optional_data_base.473" }
%"class.absl::optional_internal::optional_data_base.473" = type { %"class.absl::optional_internal::optional_data_dtor_base.474" }
%"class.absl::optional_internal::optional_data_dtor_base.474" = type { i8, %union.anon.475 }
%union.anon.475 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.476" = type { %"class.absl::optional_internal::optional_data.477" }
%"class.absl::optional_internal::optional_data.477" = type { %"class.absl::optional_internal::optional_data_base.478" }
%"class.absl::optional_internal::optional_data_base.478" = type { %"class.absl::optional_internal::optional_data_dtor_base.479" }
%"class.absl::optional_internal::optional_data_dtor_base.479" = type { i8, [7 x i8], %union.anon.480 }
%union.anon.480 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.432" = type { %"class.absl::optional_internal::optional_data.433" }
%"class.absl::optional_internal::optional_data.433" = type { %"class.absl::optional_internal::optional_data_base.434" }
%"class.absl::optional_internal::optional_data_base.434" = type { %"class.absl::optional_internal::optional_data_dtor_base.435" }
%"class.absl::optional_internal::optional_data_dtor_base.435" = type { i8, %union.anon.436 }
%union.anon.436 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.485 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.485 = type { %"class.std::__1::map.488" }
%"class.std::__1::map.488" = type { %"class.std::__1::__tree.489" }
%"class.std::__1::__tree.489" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.499"*, i64 }
%"class.std::__1::unique_ptr.499" = type opaque
%"class.std::__1::map.500" = type { %"class.std::__1::__tree.501" }
%"class.std::__1::__tree.501" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1792" = type { %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1260" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1273" }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1800" }
%"class.mojo::AssociatedRemote.1800" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1801" }
%"class.mojo::internal::AssociatedInterfacePtrState.1801" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1802" }
%"class.std::__1::unique_ptr.1802" = type { %"class.std::__1::__compressed_pair.1803" }
%"class.std::__1::__compressed_pair.1803" = type { %"struct.std::__1::__compressed_pair_elem.1804" }
%"struct.std::__1::__compressed_pair_elem.1804" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1275" = type { %"class.blink::Member.1276" }
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1810" }
%"class.mojo::AssociatedRemote.1810" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1811" }
%"class.mojo::internal::AssociatedInterfacePtrState.1811" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1812" }
%"class.std::__1::unique_ptr.1812" = type { %"class.std::__1::__compressed_pair.1813" }
%"class.std::__1::__compressed_pair.1813" = type { %"struct.std::__1::__compressed_pair_elem.1814" }
%"struct.std::__1::__compressed_pair_elem.1814" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1278" }
%"class.blink::Member.1278" = type { %"class.blink::MemberBase.1279" }
%"class.blink::MemberBase.1279" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1820", %"class.blink::Member.859", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1820" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1821" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.509" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1821" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1280" = type { %"class.blink::Member.1281" }
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1824", %"class.blink::Member.859", %"class.mojo::AssociatedReceiver.1825" }
%"class.blink::ThreadState::PrefinalizerRegistration.1824" = type { i8 }
%"class.mojo::AssociatedReceiver.1825" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1826" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1826" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1283" }
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1829", %"class.blink::Member.859", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1829" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.393, %"class.std::__1::unique_ptr.509", %"class.base::WeakPtrFactory.1830" }
%"class.base::WeakPtrFactory.1830" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1285" = type { %"class.blink::Member.1286" }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1833", %"class.blink::Member.859", %"class.mojo::AssociatedReceiver.1834" }
%"class.blink::ThreadState::PrefinalizerRegistration.1833" = type { i8 }
%"class.mojo::AssociatedReceiver.1834" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1835" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1835" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::HeapHashMap.1296"* }
%"class.blink::HeapHashMap.1296" = type opaque
%"class.mojo::StructPtr.1297" = type { %"class.std::__1::unique_ptr.1298" }
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1301", %"class.mojo::InlinedStructPtr.1302" }
%"class.mojo::InlinedStructPtr.1301" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1302" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1308" = type { %"class.absl::optional_internal::optional_data.1309" }
%"class.absl::optional_internal::optional_data.1309" = type { %"class.absl::optional_internal::optional_data_base.1310" }
%"class.absl::optional_internal::optional_data_base.1310" = type { %"class.absl::optional_internal::optional_data_dtor_base.1311" }
%"class.absl::optional_internal::optional_data_dtor_base.1311" = type { i8, %union.anon.1312 }
%union.anon.1312 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.380", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1160" }
%"class.std::__1::vector.1160" = type { %"class.std::__1::__vector_base.1161" }
%"class.std::__1::__vector_base.1161" = type { %"struct.std::__1::pair.1162"*, %"struct.std::__1::pair.1162"*, %"class.std::__1::__compressed_pair.1163" }
%"struct.std::__1::pair.1162" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::pair.1162"* }
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1170" = type { %"class.absl::optional_internal::optional_data.1171" }
%"class.absl::optional_internal::optional_data.1171" = type { %"class.absl::optional_internal::optional_data_base.1172" }
%"class.absl::optional_internal::optional_data_base.1172" = type { %"class.absl::optional_internal::optional_data_dtor_base.1173" }
%"class.absl::optional_internal::optional_data_dtor_base.1173" = type { i8, %union.anon.1174 }
%union.anon.1174 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1175" = type { %"class.absl::optional_internal::optional_data.1176" }
%"class.absl::optional_internal::optional_data.1176" = type { %"class.absl::optional_internal::optional_data_base.1177" }
%"class.absl::optional_internal::optional_data_base.1177" = type { %"class.absl::optional_internal::optional_data_dtor_base.1178" }
%"class.absl::optional_internal::optional_data_dtor_base.1178" = type { i8, %union.anon.1179 }
%union.anon.1179 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1180" }
%"class.blink::HeapHashSet.1180" = type { %"class.WTF::HashSet.1183" }
%"class.WTF::HashSet.1183" = type { %"class.WTF::HashTable.1184" }
%"class.WTF::HashTable.1184" = type <{ %"class.blink::WeakMember.1186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1186" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.390" }
%"class.WTF::VectorBufferBase.390" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.391", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.559" }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.567", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.638", i32, i8, [3 x i8], %"class.blink::HeapVector.640", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.648", %"class.blink::Member.650", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.659", %"class.blink::Member.718", %"class.blink::Member.720", i8 }>
%"class.blink::Supplementable.722" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.723" }
%"class.blink::HeapHashMap.723" = type { %"class.WTF::HashMap.726" }
%"class.WTF::HashMap.726" = type { %"class.WTF::HashTable.727" }
%"class.WTF::HashTable.727" = type <{ %"struct.WTF::KeyValuePair.729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.729" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.752 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.754", i64, %"class.WTF::Vector.758", %"class.WTF::Vector.763", %"class.WTF::Vector.769", %"class.WTF::Vector.787", %class.scoped_refptr.590, %"class.WTF::HashMap.793", %"class.WTF::Vector.798", %"class.WTF::Vector.758", %"class.WTF::Vector.804", %"class.WTF::HashMap.809", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.753" }
%"class.base::RefCountedThreadSafe.753" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { i8* }
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765", [8 x i8] }
%"class.WTF::VectorBufferBase.765" = type { %class.scoped_refptr.766*, i32, i32 }
%class.scoped_refptr.766 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.773", %"class.std::__1::unique_ptr.779" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.772 }
%class.scoped_refptr.772 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.787" = type { %"class.WTF::VectorBuffer.788" }
%"class.WTF::VectorBuffer.788" = type { %"class.WTF::VectorBufferBase.789" }
%"class.WTF::VectorBufferBase.789" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.790", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.790" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"struct.WTF::KeyValuePair.797"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.797" = type opaque
%"class.WTF::Vector.798" = type { %"class.WTF::VectorBuffer.799" }
%"class.WTF::VectorBuffer.799" = type { %"class.WTF::VectorBufferBase.800" }
%"class.WTF::VectorBufferBase.800" = type { %"class.mojo::ScopedHandleBase.801"*, i32, i32 }
%"class.mojo::ScopedHandleBase.801" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.758" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760", [16 x i8] }
%"class.WTF::VectorBufferBase.760" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.809" = type { %"class.WTF::HashTable.810" }
%"class.WTF::HashTable.810" = type <{ %"struct.WTF::KeyValuePair.813"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.813" = type { i8**, %"class.std::__1::unique_ptr.1769" }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.814" = type { %"class.WTF::HashSet.817" }
%"class.WTF::HashSet.817" = type { %"class.WTF::HashTable.818" }
%"class.WTF::HashTable.818" = type <{ %"class.blink::WeakMember.820"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.820" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.828", %"class.blink::Member.828", %"class.blink::Member.830", %"class.blink::Member.832", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.823" }
%"class.absl::optional.823" = type { %"class.absl::optional_internal::optional_data.824" }
%"class.absl::optional_internal::optional_data.824" = type { %"class.absl::optional_internal::optional_data_base.825" }
%"class.absl::optional_internal::optional_data_base.825" = type { %"class.absl::optional_internal::optional_data_dtor_base.826" }
%"class.absl::optional_internal::optional_data_dtor_base.826" = type { i8, %union.anon.827 }
%union.anon.827 = type { i64 }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::Event"* }
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.834" = type { %"class.WTF::HashMap.837" }
%"class.WTF::HashMap.837" = type { %"class.WTF::HashTable.838" }
%"class.WTF::HashTable.838" = type <{ %"struct.WTF::KeyValuePair.840"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.840" = type opaque
%"class.std::__1::unique_ptr.841" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.859", %"class.blink::CachedTextInputInfo", %"class.blink::Member.870", %"class.blink::Member.872", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.861", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.863", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.863" = type { %"class.WTF::HashMap.866" }
%"class.WTF::HashMap.866" = type { %"class.WTF::HashTable.867" }
%"class.WTF::HashTable.867" = type <{ %"struct.WTF::KeyValuePair.869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.869" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.236", i32, i32 }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.357", %"class.blink::Member.1146", %"class.blink::Member.1148" }
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.357", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1142" }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::HeapHashMap.880"* }
%"class.blink::HeapHashMap.880" = type opaque
%"class.util::TokenType.391" = type { %"class.base::StrongAlias.392" }
%"class.base::StrongAlias.392" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.886" = type { %"class.WTF::HashTable.887" }
%"class.WTF::HashTable.887" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.890" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.893" }
%"class.WTF::VectorBuffer.893" = type { %"class.WTF::VectorBufferBase.894" }
%"class.WTF::VectorBufferBase.894" = type { i64*, i32, i32 }
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.903" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.blink::KURL"* }
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.306", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.308, %"class.WTF::Vector.309", %"class.WTF::Vector.309", %"class.blink::Member.236", %"class.blink::Member.314", %"class.blink::HeapHashSet", %"class.blink::Member.262", %"class.WTF::HashSet.323", %"class.WTF::TextPosition", %"class.blink::Member.327", %"class.blink::HeapVector.329", %"class.blink::Member.336" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.308 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.309" = type { %"class.WTF::VectorBuffer.310" }
%"class.WTF::VectorBuffer.310" = type { %"class.WTF::VectorBufferBase.311" }
%"class.WTF::VectorBufferBase.311" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.316" }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"class.blink::WeakMember.322"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.322" = type { %"class.blink::MemberBase.239" }
%"class.WTF::HashSet.323" = type { %"class.WTF::HashTable.324" }
%"class.WTF::HashTable.324" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.329" = type { %"class.WTF::Vector.332" }
%"class.WTF::Vector.332" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { %"class.blink::Member.314"*, i32, i32 }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.919 }
%class.scoped_refptr.919 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.921" }
%"class.WTF::VectorBuffer.921" = type { %"class.WTF::VectorBufferBase.922" }
%"class.WTF::VectorBufferBase.922" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.923 }
%class.scoped_refptr.923 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.262", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.236", %"class.blink::Member.236", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.929" }
%"class.blink::HeapHashMap.929" = type { %"class.WTF::HashMap.932" }
%"class.WTF::HashMap.932" = type { %"class.WTF::HashTable.933" }
%"class.WTF::HashTable.933" = type <{ %"struct.WTF::KeyValuePair.935"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.935" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.938" = type { %"class.WTF::HashSet.941" }
%"class.WTF::HashSet.941" = type { %"class.WTF::HashTable.942" }
%"class.WTF::HashTable.942" = type <{ %"class.blink::WeakMember.944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.944" = type opaque
%"class.blink::HeapHashSet.945" = type { %"class.WTF::HashSet.948" }
%"class.WTF::HashSet.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ %"class.blink::WeakMember.951"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.951" = type opaque
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.238", %"class.blink::HeapVector.298" }
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.962" = type { %"class.WTF::HashMap.965" }
%"class.WTF::HashMap.965" = type { %"class.WTF::HashTable.966" }
%"class.WTF::HashTable.966" = type <{ %"struct.WTF::KeyValuePair.968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.968" = type opaque
%"class.WTF::Vector.969" = type { %"class.WTF::VectorBuffer.970" }
%"class.WTF::VectorBuffer.970" = type { %"class.WTF::VectorBufferBase.971" }
%"class.WTF::VectorBufferBase.971" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.980" = type { %"class.WTF::Vector.983" }
%"class.WTF::Vector.983" = type { %"class.WTF::VectorBuffer.984" }
%"class.WTF::VectorBuffer.984" = type { %"class.WTF::VectorBufferBase.985" }
%"class.WTF::VectorBufferBase.985" = type { %"class.blink::Member.986"*, i32, i32 }
%"class.blink::Member.986" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.994" = type { %"class.WTF::HashSet.997" }
%"class.WTF::HashSet.997" = type { %"class.WTF::HashTable.998" }
%"class.WTF::HashTable.998" = type <{ %"class.blink::WeakMember.1000"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1000" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1001", i32, [4 x i8] }>
%"class.WTF::Vector.1001" = type { %"class.WTF::VectorBuffer.1002" }
%"class.WTF::VectorBuffer.1002" = type { %"class.WTF::VectorBufferBase.1003" }
%"class.WTF::VectorBufferBase.1003" = type { %"struct.std::__1::pair.1004"*, i32, i32 }
%"struct.std::__1::pair.1004" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1009" = type { %"class.WTF::VectorBuffer.1010" }
%"class.WTF::VectorBuffer.1010" = type { %"class.WTF::VectorBufferBase.1011" }
%"class.WTF::VectorBufferBase.1011" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1014" = type { %"class.std::__1::__compressed_pair.1015" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.283" }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"class.blink::Member.279"*, i32, i32 }
%"class.blink::HeapVector.1020" = type { %"class.WTF::Vector.1023" }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.blink::Member.1026"*, i32, i32 }
%"class.blink::Member.1026" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.262" }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1038" = type { %"class.WTF::HashTable.1039" }
%"class.WTF::HashTable.1039" = type <{ %"struct.WTF::KeyValuePair.1042"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1042" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.928", { i64, i64 } }
%"class.blink::WeakMember.928" = type { %"class.blink::MemberBase.263" }
%"class.blink::HeapHashSet.1051" = type { %"class.WTF::HashSet.1054" }
%"class.WTF::HashSet.1054" = type { %"class.WTF::HashTable.1055" }
%"class.WTF::HashTable.1055" = type <{ %"class.blink::Member.1057"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1057" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.881" = type { %"class.WTF::VectorBuffer.882" }
%"class.WTF::VectorBuffer.882" = type { %"class.WTF::VectorBufferBase.883" }
%"class.WTF::VectorBufferBase.883" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1088" = type { %"class.WTF::HashMap.1091" }
%"class.WTF::HashMap.1091" = type { %"class.WTF::HashTable.1092" }
%"class.WTF::HashTable.1092" = type <{ %"struct.WTF::KeyValuePair.1094"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1094" = type opaque
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1107" = type { %"class.WTF::HashMap.1110" }
%"class.WTF::HashMap.1110" = type { %"class.WTF::HashTable.1111" }
%"class.WTF::HashTable.1111" = type <{ %"struct.WTF::KeyValuePair.1113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1113" = type opaque
%"class.blink::HeapObserverSet.1114" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1115" }
%"class.blink::HeapHashSet.1115" = type { %"class.WTF::HashSet.1118" }
%"class.WTF::HashSet.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"class.blink::WeakMember.1121"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1121" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.262", %"class.blink::HeapHashSet.1131", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1138", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1131" = type { %"class.WTF::HashSet.1134" }
%"class.WTF::HashSet.1134" = type { %"class.WTF::HashTable.1135" }
%"class.WTF::HashTable.1135" = type <{ %"class.blink::Member.1137"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1137" = type opaque
%"class.blink::HeapTaskRunnerTimer.1138" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1139", { i64, i64 } }
%"class.blink::WeakMember.1139" = type { %"class.blink::MemberBase.1125" }
%"class.blink::WeakMember.1126" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::Node"* }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.268" }
%"class.blink::HeapHashMap.268" = type { %"class.WTF::HashMap.271" }
%"class.WTF::HashMap.271" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"struct.WTF::KeyValuePair.274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.274" = type { %"class.WTF::AtomicString", %"class.blink::Member.275" }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.279", i32, %"class.blink::HeapVector" }
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.293" }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::HeapHashMap.295"* }
%"class.blink::HeapHashMap.295" = type opaque
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.298" = type { %"class.WTF::Vector.301" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.302" }
%"class.WTF::VectorBuffer.302" = type { %"class.WTF::VectorBufferBase.303" }
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::Member.304"*, i32, i32 }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.248", %"class.blink::Member.250", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.248" = type { %"class.WTF::SingleThreadedBitField.249" }
%"class.WTF::SingleThreadedBitField.249" = type { i32 }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.253", %"class.WTF::AtomicString", %"class.WTF::Vector.255" }
%"class.WTF::RefCounted.253" = type { %"class.base::RefCounted.254" }
%"class.base::RefCounted.254" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257", [32 x i8] }
%"class.WTF::VectorBufferBase.257" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.v8::Value" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.blink::V8StringResource" = type { %"class.v8::Local.1604", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.1604" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.1605" }
%"class.std::__1::unique_ptr.1605" = type { %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { i8* }
%"class.v8::String" = type { i8 }
%"class.blink::V8StringResource.1609" = type { %"class.v8::Local.1604", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::Symbol" = type { i8 }
%"class.v8::Data" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1601" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1601" = type { %"class.v8::TracedReference.1602" }
%"class.v8::TracedReference.1602" = type { %"class.v8::BasicTracedReference.1603" }
%"class.v8::BasicTracedReference.1603" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.1612", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.1612" = type { %"class.v8::String"* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1615", i8* }
%"class.WTF::StringAppend.1615" = type { %"class.WTF::StringAppend.1616", i8* }
%"class.WTF::StringAppend.1616" = type { %"class.WTF::StringAppend.1617", i8* }
%"class.WTF::StringAppend.1617" = type { i8*, %"class.WTF::String" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.WTF::StringTypeAdapter.1838" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.1619" = type { %"class.WTF::StringAppend.1616", %"class.WTF::String" }
%"class.WTF::StringAppend.1618" = type { %"class.WTF::StringAppend.1619", i8* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1625", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1622", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1634", %"class.WTF::Vector.1635" }
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.blink::SourceLocation"* }
%"class.blink::WeakMember.1634" = type { %"class.blink::MemberBase.860" }
%"class.WTF::Vector.1635" = type { %"class.WTF::VectorBuffer.1636" }
%"class.WTF::VectorBuffer.1636" = type { %"class.WTF::VectorBufferBase.1483" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::DOMParser" = type { %"class.blink::ScriptWrappable", %"class.blink::WeakMember.1639" }
%"class.blink::WeakMember.1639" = type { %"class.blink::MemberBase.358" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.1658", %"class.WTF::HashMap.1658", %"class.WTF::HashMap.1663", %"class.std::__1::unique_ptr.1668", %"class.std::__1::unique_ptr.1686", %"class.blink::Persistent.225", i8, i8, i8, %"class.WTF::Vector.346", %"class.std::__1::unique_ptr.1697", %"class.blink::Persistent.1703", %"class.blink::Persistent.1707", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.1640", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1646", %"class.std::__1::unique_ptr.1652", i32, i32 }
%"class.std::__1::unique_ptr.1640" = type { %"class.std::__1::__compressed_pair.1641" }
%"class.std::__1::__compressed_pair.1641" = type { %"struct.std::__1::__compressed_pair_elem.1642" }
%"struct.std::__1::__compressed_pair_elem.1642" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.1646" = type { %"class.std::__1::__compressed_pair.1647" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.1652" = type { %"class.std::__1::__compressed_pair.1653" }
%"class.std::__1::__compressed_pair.1653" = type { %"struct.std::__1::__compressed_pair_elem.1654" }
%"struct.std::__1::__compressed_pair_elem.1654" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type opaque
%"class.WTF::HashMap.1663" = type { %"class.WTF::HashTable.1664" }
%"class.WTF::HashTable.1664" = type <{ %"struct.WTF::KeyValuePair.1667"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1667" = type opaque
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.1676", %class.scoped_refptr.230 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1671", i8* }
%"class.WTF::HashMap.1671" = type { %"class.WTF::HashTable.1672" }
%"class.WTF::HashTable.1672" = type <{ %"struct.WTF::KeyValuePair.1675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1675" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.1676" = type { %"class.v8::PersistentValueMapBase.1677" }
%"class.v8::PersistentValueMapBase.1677" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1678", i8* }
%"class.WTF::HashMap.1678" = type { %"class.WTF::HashTable.1679" }
%"class.WTF::HashTable.1679" = type <{ %"struct.WTF::KeyValuePair.1682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1682" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1736", %"class.WTF::String", %"class.std::__1::unique_ptr.1738" }
%"class.WTF::RefCounted.1736" = type { %"class.base::RefCounted.1737" }
%"class.base::RefCounted.1737" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1738" = type { %"class.std::__1::__compressed_pair.1739" }
%"class.std::__1::__compressed_pair.1739" = type { %"struct.std::__1::__compressed_pair_elem.1740" }
%"struct.std::__1::__compressed_pair_elem.1740" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1741", %"class.std::__1::unique_ptr.1752", %"class.WTF::Vector.1758", i8, i32 }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.WTF::Vector.1744"* }
%"class.WTF::Vector.1744" = type { %"class.WTF::VectorBuffer.1745" }
%"class.WTF::VectorBuffer.1745" = type { %"class.WTF::VectorBufferBase.1746" }
%"class.WTF::VectorBufferBase.1746" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1752" = type { %"class.std::__1::__compressed_pair.1753" }
%"class.std::__1::__compressed_pair.1753" = type { %"struct.std::__1::__compressed_pair_elem.1754" }
%"struct.std::__1::__compressed_pair_elem.1754" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1758" = type { %"class.WTF::VectorBuffer.1759" }
%"class.WTF::VectorBuffer.1759" = type { %"class.WTF::VectorBufferBase.1746", [32 x i8] }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.210", %"class.WTF::HashMap.1689" }
%"class.WTF::HashMap.1689" = type { %"class.WTF::HashTable.1690" }
%"class.WTF::HashTable.1690" = type <{ %"struct.WTF::KeyValuePair.1693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1693" = type opaque
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1703" = type { %"class.blink::PersistentBase.1704" }
%"class.blink::PersistentBase.1704" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1707" = type { %"class.blink::PersistentBase.1708" }
%"class.blink::PersistentBase.1708" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1711", i64 }
%"class.blink::HeapVector.1711" = type { %"class.WTF::Vector.1714" }
%"class.WTF::Vector.1714" = type { %"class.WTF::VectorBuffer.1715" }
%"class.WTF::VectorBuffer.1715" = type { %"class.WTF::VectorBufferBase.1716" }
%"class.WTF::VectorBufferBase.1716" = type { %"struct.std::__1::pair.1717"*, i32, i32 }
%"struct.std::__1::pair.1717" = type { %"class.blink::UntracedMember", %"class.blink::Member.1734" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1733" }
%"class.blink::MemberBase.1733" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.v8::Signature" = type { i8 }
%"class.v8::CFunction" = type opaque
%"class.base::CheckedContiguousIterator" = type { i8**, i8**, i8** }
%"class.v8::Local" = type { %"class.v8::Name"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.v8::Array" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.WTF::StringAppend.1731" = type { %"class.WTF::String", i8* }
%"class.v8::External" = type { i8 }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1732" }
%"class.blink::WeakMember.1732" = type { %"class.blink::MemberBase.633" }
%"class.WTF::StringTypeAdapter.1841" = type { %"class.WTF::StringTypeAdapter.1842" }
%"class.WTF::StringTypeAdapter.1842" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZNK4base25CheckedContiguousIteratorIKPKcEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKPKcEppEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_10IDLBooleanEbXadL_ZNS_7Element19SetBooleanAttributeERKNS_13QualifiedNameEbEEEEvRKN2v820FunctionCallbackInfoINS7_5ValueEEES6_PKcSE_ = comdat any

$_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameES8_EEEEvRKN2v820FunctionCallbackInfoINSD_5ValueEEESC_PKcSK_ = comdat any

$_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE2EEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameES8_EEEEvRKN2v820FunctionCallbackInfoINSD_5ValueEEESC_PKcSK_ = comdat any

$_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameESA_EEEEvRKN2v820FunctionCallbackInfoINSF_5ValueEEESE_PKcSM_ = comdat any

$_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v88FunctionEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_ = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE11PrepareFastEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v85LocalINS2_5ValueEEEEEmm = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [21 x i8] c"The provided value '\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"' is not a valid enum value of type \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"@@iterator must be a function\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"prototype\00", align 1
@.str.5 = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/bindings/core/v8/generated_code_helper.cc\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"did_define\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"get \00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"set \00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"CSSStyleDeclaration\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@.str.12 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.21 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.29 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.30 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v85LocalINS1_5ValueEEEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = v8::Local<v8::Value>]\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28V8ConstructorAttributeGetterEN2v85LocalINS0_4NameEEERKNS0_20PropertyCallbackInfoINS0_5ValueEEEPKNS_15WrapperTypeInfoE(%"class.v8::Name"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8), %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #0 {
  %4 = alloca %"struct.blink::WrapperTypeInfo"*, align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Object"*
  %9 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %8) #9
  %10 = tail call %"class.blink::V8PerContextData"* @_ZN5blink16V8PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #9
  %11 = icmp eq %"class.blink::V8PerContextData"* %10, null
  br i1 %11, label %49, label %12

12:                                               ; preds = %3
  %13 = bitcast %"struct.blink::WrapperTypeInfo"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  store %"struct.blink::WrapperTypeInfo"* %2, %"struct.blink::WrapperTypeInfo"** %4, align 8
  %14 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %10, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.WTF::HashMap.191", %"class.WTF::HashMap.191"* %14, i64 0, i32 0
  %16 = call { %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"* } @_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v88FunctionEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_(%"class.WTF::HashTable.192"* %15, %"struct.blink::WrapperTypeInfo"** nonnull dereferenceable(8) %4) #9
  %17 = extractvalue { %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"* } %16, 0
  %18 = getelementptr inbounds %"class.WTF::HashMap.191", %"class.WTF::HashMap.191"* %14, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %10, i64 0, i32 2, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.194"* %17, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %17, i64 0, i32 1
  %27 = bitcast %"class.blink::TraceWrapperV8Reference.195"* %26 to %"class.v8::Function"**
  %28 = load %"class.v8::Function"*, %"class.v8::Function"** %27, align 8
  %29 = icmp eq %"class.v8::Function"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::V8PerContextData"* %10 to %"class.v8::internal::Isolate"**
  %32 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %33 = bitcast %"class.v8::Function"* %28 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %32, i64 %34) #9
  %36 = bitcast i64* %35 to %"class.v8::Function"*
  br label %40

37:                                               ; preds = %12
  %38 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %4, align 8
  %39 = call %"class.v8::Function"* @_ZN5blink16V8PerContextData26ConstructorForTypeSlowCaseEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"* nonnull %10, %"struct.blink::WrapperTypeInfo"* %38) #9
  br label %40

40:                                               ; preds = %25, %30, %37
  %41 = phi %"class.v8::Function"* [ %39, %37 ], [ %36, %30 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %42 = load i64*, i64** %5, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 4
  %44 = icmp eq %"class.v8::Function"* %41, null
  %45 = bitcast %"class.v8::Function"* %41 to i64*
  %46 = getelementptr inbounds i64, i64* %42, i64 3
  %47 = select i1 %44, i64* %46, i64* %45, !prof !2
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %43, align 8
  br label %49

49:                                               ; preds = %3, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::V8PerContextData"* @_ZN5blink16V8PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26IsCallbackFunctionRunnableEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"*, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_134IsCallbackFunctionRunnableInternalEPKNS_11ScriptStateES3_NS0_11IgnorePauseE(%"class.blink::ScriptState"* %0, %"class.blink::ScriptState"* %1, i32 0)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_134IsCallbackFunctionRunnableInternalEPKNS_11ScriptStateES3_NS0_11IgnorePauseE(%"class.blink::ScriptState"*, %"class.blink::ScriptState"* nocapture readonly, i32) unnamed_addr #0 {
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %63, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %9, align 8
  %11 = icmp eq %"class.blink::V8PerContextData"* %10, null
  br i1 %11, label %63, label %12

12:                                               ; preds = %8
  %13 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #9
  %14 = icmp eq %"class.blink::ExecutionContext"* %13, null
  br i1 %14, label %63, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %13, i64 0, i32 13
  %17 = load i8, i8* %16, align 4, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %63

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* nonnull %13) #9
  %21 = icmp eq i32 %2, 0
  %22 = and i1 %21, %20
  br i1 %22, label %63, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %26 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %27) #9
  %28 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.v8::Context"*, %"class.v8::Context"** %28, align 8
  %30 = icmp eq %"class.v8::Context"* %29, null
  br i1 %30, label %61, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = bitcast %"class.v8::Context"* %29 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %33, i64 %35) #9
  %37 = icmp eq i64* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %31
  %39 = bitcast i64* %36 to %"class.v8::Context"*
  %40 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* nonnull %39) #9
  %41 = icmp eq %"class.blink::ExecutionContext"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %40, i64 0, i32 13
  %44 = load i8, i8* %43, align 4, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %61

46:                                               ; preds = %42
  %47 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* nonnull %40) #9
  %48 = and i1 %21, %47
  br i1 %48, label %61, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 2, i32 0
  %51 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = bitcast %"class.blink::ExecutionContext"* %40 to i1 (%"class.blink::ExecutionContext"*, i32)***
  %57 = load i1 (%"class.blink::ExecutionContext"*, i32)**, i1 (%"class.blink::ExecutionContext"*, i32)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %57, i64 26
  %59 = load i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %58, align 8
  %60 = call zeroext i1 %59(%"class.blink::ExecutionContext"* nonnull %40, i32 0) #9
  br label %61

61:                                               ; preds = %42, %23, %31, %49, %55, %46, %38
  %62 = phi i1 [ false, %38 ], [ false, %42 ], [ false, %46 ], [ true, %49 ], [ %60, %55 ], [ false, %31 ], [ false, %23 ]
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  br label %63

63:                                               ; preds = %15, %8, %3, %61, %12, %19
  %64 = phi i1 [ false, %8 ], [ %62, %61 ], [ false, %12 ], [ false, %15 ], [ false, %19 ], [ false, %3 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink39IsCallbackFunctionRunnableIgnoringPauseEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"*, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_134IsCallbackFunctionRunnableInternalEPKNS_11ScriptStateES3_NS0_11IgnorePauseE(%"class.blink::ScriptState"* %0, %"class.blink::ScriptState"* %1, i32 1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30V8SetReflectedBooleanAttributeERKN2v820FunctionCallbackInfoINS0_5ValueEEEPKcS7_RKNS_13QualifiedNameE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24), i8*, i8*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 {
  %5 = alloca %"class.blink::CEReactionsScope", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = load i64, i64* %7, align 8
  %12 = add i64 %11, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i64 %11, -4294967296
  %16 = zext i32 %14 to i64
  %17 = or i64 %15, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load i16, i16* %19, align 2
  switch i16 %20, label %25 [
    i16 1057, label %21
    i16 1056, label %21
    i16 1040, label %21
  ]

21:                                               ; preds = %4, %4, %4
  %22 = add i64 %11, 19
  %23 = inttoptr i64 %22 to i8**
  %24 = load i8*, i8** %23, align 1
  br label %28

25:                                               ; preds = %4
  %26 = bitcast i64* %7 to %"class.v8::Object"*
  %27 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %26, i32 1) #9
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi i8* [ %24, %21 ], [ %27, %25 ]
  %30 = bitcast i8* %29 to %"class.blink::Element"*
  %31 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %5, i64 0, i32 1
  %33 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  %34 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %35 = bitcast %"class.blink::CEReactionsScope"* %5 to i64*
  store i64 %34, i64* %35, align 8
  store i8 0, i8* %32, align 8
  store %"class.blink::CEReactionsScope"* %5, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %28
  %40 = load i64*, i64** %6, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 160
  %44 = inttoptr i64 %43 to %"class.v8::Value"*
  br label %49

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = bitcast i64** %46 to %"class.v8::Value"**
  %48 = load %"class.v8::Value"*, %"class.v8::Value"** %47, align 8
  br label %49

49:                                               ; preds = %39, %45
  %50 = phi %"class.v8::Value"* [ %44, %39 ], [ %48, %45 ]
  %51 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %50) #9
  br i1 %51, label %52, label %55, !prof !4

52:                                               ; preds = %49
  %53 = bitcast %"class.v8::Value"* %50 to %"class.v8::Boolean"*
  %54 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %53) #9
  br label %57

55:                                               ; preds = %49
  %56 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %50, %"class.v8::Isolate"* %10) #9
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i1 [ %54, %52 ], [ %56, %55 ]
  call void @_ZN5blink7Element19SetBooleanAttributeERKNS_13QualifiedNameEb(%"class.blink::Element"* %30, %"class.blink::QualifiedName"* dereferenceable(8) %3, i1 zeroext %58) #9
  %59 = load i8, i8* %32, align 8, !range !3
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %5) #9
  br label %62

62:                                               ; preds = %57, %61
  %63 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink7Element19SetBooleanAttributeERKNS_13QualifiedNameEb(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32V8SetReflectedDOMStringAttributeERKN2v820FunctionCallbackInfoINS0_5ValueEEERKNS_13QualifiedNameE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::V8StringResource", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.v8::FunctionCallbackInfo"* %0 to %"class.v8::Object"**
  %7 = load %"class.v8::Object"*, %"class.v8::Object"** %6, align 8
  %8 = bitcast %"class.v8::Object"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = and i64 %9, -4294967296
  %14 = zext i32 %12 to i64
  %15 = or i64 %13, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load i16, i16* %17, align 2
  switch i16 %18, label %23 [
    i16 1057, label %19
    i16 1056, label %19
    i16 1040, label %19
  ]

19:                                               ; preds = %2, %2, %2
  %20 = add i64 %9, 19
  %21 = inttoptr i64 %20 to i8**
  %22 = load i8*, i8** %21, align 1
  br label %25

23:                                               ; preds = %2
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %7, i32 1) #9
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i8* [ %22, %19 ], [ %24, %23 ]
  %27 = bitcast i8* %26 to %"class.blink::Element"*
  %28 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %30 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %31 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %32 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %31, i64* %32, align 8
  store i8 0, i8* %29, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %33 = bitcast %"class.blink::V8StringResource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %33) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 160, i1 false)
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 1
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 160
  %43 = inttoptr i64 %42 to %"class.v8::Value"*
  br label %48

44:                                               ; preds = %25
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = bitcast i64** %45 to %"class.v8::Value"**
  %47 = load %"class.v8::Value"*, %"class.v8::Value"** %46, align 8
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi %"class.v8::Value"* [ %43, %37 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %4, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %49, %"class.v8::Value"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %4, i64 0, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %4, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %4, i64 0, i32 3, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.1605"* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %4) #9
  %56 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  br i1 %55, label %65, label %57

57:                                               ; preds = %48
  %58 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %59 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %58) #9
  %60 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %56, %"class.v8::Context"* %59) #9
  %61 = ptrtoint %"class.v8::String"* %60 to i64
  %62 = bitcast %"class.blink::V8StringResource"* %4 to i64*
  store i64 %61, i64* %62, align 8
  %63 = icmp eq %"class.v8::String"* %60, null
  %64 = bitcast %"class.v8::String"* %60 to %"class.v8::Value"*
  br i1 %63, label %118, label %65

65:                                               ; preds = %57, %48
  %66 = phi %"class.v8::Value"* [ %64, %57 ], [ %56, %48 ]
  %67 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  %68 = icmp eq %"class.v8::Value"* %66, null
  br i1 %68, label %73, label %69, !prof !2

69:                                               ; preds = %65
  %70 = bitcast %"class.v8::Value"* %66 to %"class.v8::String"*
  %71 = load i32, i32* %51, align 8
  %72 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 %71) #9
  br label %99

73:                                               ; preds = %65
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 acquire, align 4
  %79 = and i32 %78, 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %76
  %82 = load atomic i32, i32* %77 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %99

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #9
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  call void @llvm.trap() #9
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %99

97:                                               ; preds = %76
  %98 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %99

99:                                               ; preds = %69, %73, %81, %95, %97
  %100 = phi %"class.WTF::StringImpl"* [ %72, %69 ], [ %98, %97 ], [ %74, %81 ], [ %74, %95 ], [ null, %73 ]
  %101 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %101, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %27, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #9
  br label %117

117:                                              ; preds = %99, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %118

118:                                              ; preds = %57, %117
  %119 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %4, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  store i8* null, i8** %119, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %120) #9
  br label %123

123:                                              ; preds = %122, %118
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %33) #9
  %140 = load i8, i8* %29, align 8, !range !3
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %143

143:                                              ; preds = %139, %142
  %144 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %145 = load i64, i64* %144, align 8
  store i64 %145, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink40V8SetReflectedNullableDOMStringAttributeERKN2v820FunctionCallbackInfoINS0_5ValueEEERKNS_13QualifiedNameE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::V8StringResource.1609", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.v8::FunctionCallbackInfo"* %0 to %"class.v8::Object"**
  %7 = load %"class.v8::Object"*, %"class.v8::Object"** %6, align 8
  %8 = bitcast %"class.v8::Object"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = and i64 %9, -4294967296
  %14 = zext i32 %12 to i64
  %15 = or i64 %13, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load i16, i16* %17, align 2
  switch i16 %18, label %23 [
    i16 1057, label %19
    i16 1056, label %19
    i16 1040, label %19
  ]

19:                                               ; preds = %2, %2, %2
  %20 = add i64 %9, 19
  %21 = inttoptr i64 %20 to i8**
  %22 = load i8*, i8** %21, align 1
  br label %25

23:                                               ; preds = %2
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %7, i32 1) #9
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i8* [ %22, %19 ], [ %24, %23 ]
  %27 = bitcast i8* %26 to %"class.blink::Element"*
  %28 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %30 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %31 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %32 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %31, i64* %32, align 8
  store i8 0, i8* %29, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %33 = bitcast %"class.blink::V8StringResource.1609"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %33) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 160, i1 false)
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 1
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 160
  %43 = inttoptr i64 %42 to %"class.v8::Value"*
  br label %48

44:                                               ; preds = %25
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = bitcast i64** %45 to %"class.v8::Value"**
  %47 = load %"class.v8::Value"*, %"class.v8::Value"** %46, align 8
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi %"class.v8::Value"* [ %43, %37 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %4, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %49, %"class.v8::Value"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %4, i64 0, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %4, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %4, i64 0, i32 3, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.1605"* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE11PrepareFastEv(%"class.blink::V8StringResource.1609"* nonnull %4) #9
  %56 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  br i1 %55, label %65, label %57

57:                                               ; preds = %48
  %58 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %59 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %58) #9
  %60 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %56, %"class.v8::Context"* %59) #9
  %61 = ptrtoint %"class.v8::String"* %60 to i64
  %62 = bitcast %"class.blink::V8StringResource.1609"* %4 to i64*
  store i64 %61, i64* %62, align 8
  %63 = icmp eq %"class.v8::String"* %60, null
  %64 = bitcast %"class.v8::String"* %60 to %"class.v8::Value"*
  br i1 %63, label %118, label %65

65:                                               ; preds = %57, %48
  %66 = phi %"class.v8::Value"* [ %64, %57 ], [ %56, %48 ]
  %67 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  %68 = icmp eq %"class.v8::Value"* %66, null
  br i1 %68, label %73, label %69, !prof !2

69:                                               ; preds = %65
  %70 = bitcast %"class.v8::Value"* %66 to %"class.v8::String"*
  %71 = load i32, i32* %51, align 8
  %72 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 %71) #9
  br label %99

73:                                               ; preds = %65
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 acquire, align 4
  %79 = and i32 %78, 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %76
  %82 = load atomic i32, i32* %77 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %99

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #9
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  call void @llvm.trap() #9
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %99

97:                                               ; preds = %76
  %98 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %99

99:                                               ; preds = %69, %73, %81, %95, %97
  %100 = phi %"class.WTF::StringImpl"* [ %72, %69 ], [ %98, %97 ], [ %74, %81 ], [ %74, %95 ], [ null, %73 ]
  %101 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %101, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %27, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #9
  br label %117

117:                                              ; preds = %99, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %118

118:                                              ; preds = %57, %117
  %119 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %4, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  store i8* null, i8** %119, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %120) #9
  br label %123

123:                                              ; preds = %122, %118
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %33) #9
  %140 = load i8, i8* %29, align 8, !range !3
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %143

143:                                              ; preds = %139, %142
  %144 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %145 = load i64, i64* %144, align 8
  store i64 %145, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"* nocapture readonly, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = load i8, i8* %8, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %10, %6
  %14 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %15 = add i64 %14, 200
  %16 = inttoptr i64 %15 to %"class.v8::String"*
  br label %23

17:                                               ; preds = %10
  %18 = tail call i64 @strlen(i8* nonnull %8) #10
  %19 = trunc i64 %18 to i32
  %20 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %8, i32 1, i32 %19) #9
  %21 = icmp eq %"class.v8::String"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %17
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %23

23:                                               ; preds = %13, %17, %22
  %24 = phi %"class.v8::String"* [ %16, %13 ], [ %20, %17 ], [ null, %22 ]
  %25 = icmp eq %"class.v8::FunctionTemplate"* %5, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @_ZN2v816FunctionTemplate7InheritENS_5LocalIS0_EE(%"class.v8::FunctionTemplate"* %4, %"class.v8::FunctionTemplate"* nonnull %5) #9
  br label %27

27:                                               ; preds = %26, %23
  tail call void @_ZN2v816FunctionTemplate17ReadOnlyPrototypeEv(%"class.v8::FunctionTemplate"* %4) #9
  tail call void @_ZN2v816FunctionTemplate12SetClassNameENS_5LocalINS_6StringEEE(%"class.v8::FunctionTemplate"* %4, %"class.v8::String"* %24) #9
  %28 = bitcast %"class.v8::ObjectTemplate"* %3 to %"class.v8::Template"*
  %29 = tail call %"class.v8::Symbol"* @_ZN2v86Symbol14GetToStringTagEPNS_7IsolateE(%"class.v8::Isolate"* %0) #9
  %30 = bitcast %"class.v8::Symbol"* %29 to %"class.v8::Name"*
  %31 = bitcast %"class.v8::String"* %24 to %"class.v8::Data"*
  tail call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %28, %"class.v8::Name"* %30, %"class.v8::Data"* %31, i32 3) #9
  tail call void @_ZN2v814ObjectTemplate21SetInternalFieldCountEi(%"class.v8::ObjectTemplate"* %2, i32 2) #9
  ret void
}

declare void @_ZN2v816FunctionTemplate7InheritENS_5LocalIS0_EE(%"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v816FunctionTemplate17ReadOnlyPrototypeEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v816FunctionTemplate12SetClassNameENS_5LocalINS_6StringEEE(%"class.v8::FunctionTemplate"*, %"class.v8::String"*) local_unnamed_addr #2

declare void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"*, %"class.v8::Name"*, %"class.v8::Data"*, i32) local_unnamed_addr #2

declare %"class.v8::Symbol"* @_ZN2v86Symbol14GetToStringTagEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v814ObjectTemplate21SetInternalFieldCountEi(%"class.v8::ObjectTemplate"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings25SetupIDLNamespaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEE(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"* nocapture readonly, %"class.v8::ObjectTemplate"*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %1, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = load i8, i8* %5, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %7, %3
  %11 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %12 = add i64 %11, 200
  %13 = inttoptr i64 %12 to %"class.v8::String"*
  br label %20

14:                                               ; preds = %7
  %15 = tail call i64 @strlen(i8* nonnull %5) #10
  %16 = trunc i64 %15 to i32
  %17 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %5, i32 1, i32 %16) #9
  %18 = icmp eq %"class.v8::String"* %17, null
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %14
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %20

20:                                               ; preds = %10, %14, %19
  %21 = phi %"class.v8::String"* [ %13, %10 ], [ %17, %14 ], [ null, %19 ]
  %22 = bitcast %"class.v8::ObjectTemplate"* %2 to %"class.v8::Template"*
  %23 = tail call %"class.v8::Symbol"* @_ZN2v86Symbol14GetToStringTagEPNS_7IsolateE(%"class.v8::Isolate"* %0) #9
  %24 = bitcast %"class.v8::Symbol"* %23 to %"class.v8::Name"*
  %25 = bitcast %"class.v8::String"* %21 to %"class.v8::Data"*
  tail call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %22, %"class.v8::Name"* %24, %"class.v8::Data"* %25, i32 3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings33SetupIDLCallbackInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"* nocapture readonly, %"class.v8::FunctionTemplate"*) local_unnamed_addr #0 {
  tail call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %2) #9
  %4 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %1, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = load i8, i8* %5, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %7, %3
  %11 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %12 = add i64 %11, 200
  %13 = inttoptr i64 %12 to %"class.v8::String"*
  br label %20

14:                                               ; preds = %7
  %15 = tail call i64 @strlen(i8* nonnull %5) #10
  %16 = trunc i64 %15 to i32
  %17 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %5, i32 1, i32 %16) #9
  %18 = icmp eq %"class.v8::String"* %17, null
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %14
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %20

20:                                               ; preds = %10, %14, %19
  %21 = phi %"class.v8::String"* [ %13, %10 ], [ %17, %14 ], [ null, %19 ]
  tail call void @_ZN2v816FunctionTemplate12SetClassNameENS_5LocalINS_6StringEEE(%"class.v8::FunctionTemplate"* %2, %"class.v8::String"* %21) #9
  ret void
}

declare void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i64, i8** nocapture readonly, i8*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %7 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %10) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %7, %"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %11 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 0, i32 0
  %12 = load %"class.v8::String"*, %"class.v8::String"** %11, align 8
  %13 = icmp eq %"class.v8::String"* %12, null
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %6
  %15 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %12, i32 0) #9
  br label %37

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #9
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %25
  call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %14, %16, %20, %35
  %38 = phi %"class.WTF::StringImpl"* [ %15, %14 ], [ null, %16 ], [ %18, %20 ], [ %18, %35 ]
  %39 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  store i8* null, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %40) #9
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #9
  br label %60

60:                                               ; preds = %43, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %10) #9
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %346

64:                                               ; preds = %60
  %65 = icmp eq i64 %2, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %64, %71
  %67 = phi i64 [ %72, %71 ], [ 0, %64 ]
  %68 = getelementptr inbounds i8*, i8** %3, i64 %67
  %69 = load i8*, i8** %68, align 8
  %70 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKh(%"class.WTF::StringImpl"* %38, i8* %69) #9
  br i1 %70, label %346, label %71

71:                                               ; preds = %66
  %72 = add nuw i64 %67, 1
  %73 = icmp eq i64 %72, %2
  br i1 %73, label %74, label %66

74:                                               ; preds = %71, %64
  %75 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  %76 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76) #9
  %77 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %77, label %204, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %93, %78
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = load atomic i32, i32* %79 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %110

100:                                              ; preds = %95
  %101 = zext i32 %96 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #9
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %100
  call void @llvm.trap() #9
  unreachable

108:                                              ; preds = %100
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %83, align 4
  br label %110

110:                                              ; preds = %108, %95
  %111 = phi i32 [ %109, %108 ], [ %96, %95 ]
  %112 = load atomic i32, i32* %79 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  %116 = add i32 %111, -1
  store i32 %116, i32* %83, align 4
  br label %117

117:                                              ; preds = %115, %110
  %118 = phi i32 [ %116, %115 ], [ %111, %110 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %121

121:                                              ; preds = %117, %120
  %122 = load atomic i32, i32* %79 monotonic, align 4, !noalias !5
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = load i32, i32* %83, align 4
  br i1 %124, label %126, label %136

126:                                              ; preds = %121
  %127 = zext i32 %125 to i33
  %128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #9
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !2

133:                                              ; preds = %126
  call void @llvm.trap() #9, !noalias !5
  unreachable

134:                                              ; preds = %126
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %83, align 4, !noalias !5
  br label %136

136:                                              ; preds = %121, %134
  %137 = phi i32 [ %135, %134 ], [ %125, %121 ]
  %138 = load atomic i32, i32* %79 monotonic, align 4, !noalias !5
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %151

141:                                              ; preds = %136
  %142 = zext i32 %137 to i33
  %143 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #9
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !2

148:                                              ; preds = %141
  call void @llvm.trap() #9, !noalias !5
  unreachable

149:                                              ; preds = %141
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %83, align 4, !noalias !5
  br label %151

151:                                              ; preds = %149, %136
  %152 = phi i32 [ %150, %149 ], [ %137, %136 ]
  %153 = load atomic i32, i32* %79 monotonic, align 4, !noalias !5
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %151
  %157 = add i32 %152, -1
  store i32 %157, i32* %83, align 4, !noalias !5
  br label %158

158:                                              ; preds = %156, %151
  %159 = phi i32 [ %157, %156 ], [ %152, %151 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9, !noalias !5
  br label %162

162:                                              ; preds = %161, %158
  %163 = load atomic i32, i32* %79 monotonic, align 4, !noalias !8
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = load i32, i32* %83, align 4
  br i1 %165, label %167, label %177

167:                                              ; preds = %162
  %168 = zext i32 %166 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #9
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !2

174:                                              ; preds = %167
  call void @llvm.trap() #9, !noalias !8
  unreachable

175:                                              ; preds = %167
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %83, align 4, !noalias !8
  br label %177

177:                                              ; preds = %162, %175
  %178 = phi i32 [ %176, %175 ], [ %166, %162 ]
  %179 = load atomic i32, i32* %79 monotonic, align 4, !noalias !8
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %192

182:                                              ; preds = %177
  %183 = zext i32 %178 to i33
  %184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %183, i33 1) #9
  %185 = extractvalue { i33, i1 } %184, 1
  %186 = extractvalue { i33, i1 } %184, 0
  %187 = icmp slt i33 %186, 0
  %188 = or i1 %185, %187
  br i1 %188, label %189, label %190, !prof !2

189:                                              ; preds = %182
  call void @llvm.trap() #9, !noalias !8
  unreachable

190:                                              ; preds = %182
  %191 = trunc i33 %186 to i32
  store i32 %191, i32* %83, align 4, !noalias !8
  br label %192

192:                                              ; preds = %190, %177
  %193 = phi i32 [ %191, %190 ], [ %178, %177 ]
  %194 = ptrtoint i8* %4 to i64
  %195 = load atomic i32, i32* %79 monotonic, align 4, !noalias !8
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %192
  %199 = add i32 %193, -1
  store i32 %199, i32* %83, align 4, !noalias !8
  br label %200

200:                                              ; preds = %198, %192
  %201 = phi i32 [ %199, %198 ], [ %193, %192 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %213

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9, !noalias !8
  br label %213

204:                                              ; preds = %74
  %205 = ptrtoint i8* %4 to i64
  %206 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([21 x i8]* @.str to i64), i64* %206, align 8, !alias.scope !11
  %207 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %207, align 8, !alias.scope !11
  %208 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 1
  %209 = bitcast i8** %208 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.1 to i64), i64* %209, align 8, !alias.scope !11
  %210 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1
  %211 = bitcast i8** %210 to i64*
  store i64 %205, i64* %211, align 8, !alias.scope !11
  %212 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %212, align 8, !alias.scope !11
  br label %266

213:                                              ; preds = %203, %200
  %214 = load atomic i32, i32* %79 monotonic, align 4, !noalias !11
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %230

217:                                              ; preds = %213
  %218 = load i32, i32* %83, align 4, !noalias !11
  %219 = zext i32 %218 to i33
  %220 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %219, i33 1) #9
  %221 = extractvalue { i33, i1 } %220, 1
  %222 = extractvalue { i33, i1 } %220, 0
  %223 = icmp slt i33 %222, 0
  %224 = or i1 %221, %223
  br i1 %224, label %225, label %226, !prof !2

225:                                              ; preds = %217
  call void @llvm.trap() #9, !noalias !11
  unreachable

226:                                              ; preds = %217
  %227 = trunc i33 %222 to i32
  store i32 %227, i32* %83, align 4, !noalias !11
  %228 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([21 x i8]* @.str to i64), i64* %228, align 8, !alias.scope !11
  %229 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %229, align 8, !alias.scope !11
  br label %234

230:                                              ; preds = %213
  %231 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([21 x i8]* @.str to i64), i64* %231, align 8, !alias.scope !11
  %232 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %232, align 8, !alias.scope !11
  %233 = load i32, i32* %83, align 4, !noalias !11
  br label %234

234:                                              ; preds = %230, %226
  %235 = phi i32 [ %227, %226 ], [ %233, %230 ]
  %236 = phi %"class.WTF::StringImpl"** [ %229, %226 ], [ %232, %230 ]
  %237 = load atomic i32, i32* %79 monotonic, align 4, !noalias !11
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %250

240:                                              ; preds = %234
  %241 = zext i32 %235 to i33
  %242 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %241, i33 1) #9
  %243 = extractvalue { i33, i1 } %242, 1
  %244 = extractvalue { i33, i1 } %242, 0
  %245 = icmp slt i33 %244, 0
  %246 = or i1 %243, %245
  br i1 %246, label %247, label %248, !prof !2

247:                                              ; preds = %240
  call void @llvm.trap() #9, !noalias !11
  unreachable

248:                                              ; preds = %240
  %249 = trunc i33 %244 to i32
  store i32 %249, i32* %83, align 4, !noalias !11
  br label %250

250:                                              ; preds = %248, %234
  %251 = phi i32 [ %249, %248 ], [ %235, %234 ]
  %252 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 1
  %253 = bitcast i8** %252 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.1 to i64), i64* %253, align 8, !alias.scope !11
  %254 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1
  %255 = bitcast i8** %254 to i64*
  store i64 %194, i64* %255, align 8, !alias.scope !11
  %256 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %256, align 8, !alias.scope !11
  %257 = load atomic i32, i32* %79 monotonic, align 4, !noalias !11
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %250
  %261 = add i32 %251, -1
  store i32 %261, i32* %83, align 4, !noalias !11
  br label %262

262:                                              ; preds = %260, %250
  %263 = phi i32 [ %261, %260 ], [ %251, %250 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9, !noalias !11
  br label %266

266:                                              ; preds = %204, %262, %265
  %267 = phi %"class.WTF::StringImpl"** [ %207, %204 ], [ %236, %262 ], [ %236, %265 ]
  %268 = phi i1 [ true, %204 ], [ false, %262 ], [ false, %265 ]
  %269 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %270 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %269, %"class.WTF::StringImpl"** %270, align 8
  %271 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %272 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %272, i64 3
  %274 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %273, align 8
  call void %274(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %8) #9
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %266
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #9
  br label %290

290:                                              ; preds = %266, %286, %289
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #9
  br label %306

306:                                              ; preds = %290, %302, %305
  br i1 %268, label %331, label %307

307:                                              ; preds = %306
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  br i1 %311, label %314, label %316

314:                                              ; preds = %307
  %315 = add i32 %313, -1
  store i32 %315, i32* %312, align 4
  br label %316

316:                                              ; preds = %314, %307
  %317 = phi i32 [ %315, %314 ], [ %313, %307 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %320

320:                                              ; preds = %319, %316
  %321 = load atomic i32, i32* %308 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = load i32, i32* %312, align 4
  br i1 %323, label %325, label %327

325:                                              ; preds = %320
  %326 = add i32 %324, -1
  store i32 %326, i32* %312, align 4
  br label %327

327:                                              ; preds = %325, %320
  %328 = phi i32 [ %326, %325 ], [ %324, %320 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %331

331:                                              ; preds = %306, %327, %330
  br i1 %77, label %345, label %332

332:                                              ; preds = %331
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  br i1 %336, label %339, label %341

339:                                              ; preds = %332
  %340 = add i32 %338, -1
  store i32 %340, i32* %337, align 4
  br label %341

341:                                              ; preds = %339, %332
  %342 = phi i32 [ %340, %339 ], [ %338, %332 ]
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %341
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %345

345:                                              ; preds = %331, %341, %344
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  br label %346

346:                                              ; preds = %66, %345, %60
  %347 = phi i8 [ 0, %60 ], [ 0, %345 ], [ 1, %66 ]
  %348 = phi i64 [ undef, %60 ], [ %2, %345 ], [ %67, %66 ]
  %349 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %363

363:                                              ; preds = %346, %359, %362
  %364 = insertvalue { i8, i64 } undef, i8 %347, 0
  %365 = insertvalue { i8, i64 } %364, i64 %348, 1
  ret { i8, i64 } %365
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.1605"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.1605"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #9
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #9
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.1605"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #9
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableERKN3WTF6StringEN4base4spanIKPKcLm18446744073709551615EEE(%"class.WTF::String"* nocapture readonly dereferenceable(8), i64, i8**) local_unnamed_addr #0 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %13, %5
  %8 = phi i64 [ 0, %5 ], [ %14, %13 ]
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %10 = getelementptr inbounds i8*, i8** %2, i64 %8
  %11 = load i8*, i8** %10, align 8
  %12 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKh(%"class.WTF::StringImpl"* %9, i8* %11) #9
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = add nuw i64 %8, 1
  %15 = icmp eq i64 %14, %1
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %13, %3
  %17 = phi i64 [ 0, %3 ], [ %1, %13 ], [ %8, %7 ]
  %18 = phi i8 [ 0, %3 ], [ 0, %13 ], [ 1, %7 ]
  %19 = insertvalue { i8, i64 } undef, i8 %18, 0
  %20 = insertvalue { i8, i64 } %19, i64 %17, 1
  ret { i8, i64 } %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %8 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %9 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %13 = bitcast %"class.WTF::StringTypeAdapter.1838"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #9
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %9, i8* %15) #9
  %16 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #9
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %18) #9
  %19 = bitcast %"class.WTF::StringTypeAdapter.1838"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #9
  %21 = load i8*, i8** %20, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i8* %21) #9
  %22 = bitcast %"class.WTF::StringTypeAdapter.1838"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #9
  %24 = load i8*, i8** %23, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %2, i8* %24) #9
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %29 = select i1 %27, %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"* %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  br i1 %33, label %81, label %34

34:                                               ; preds = %1
  %35 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %36 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %37 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %36, i8** nonnull dereferenceable(8) %10) #9
  %38 = load i8*, i8** %10, align 8
  %39 = bitcast %"class.WTF::StringTypeAdapter.1838"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #9
  %40 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %8, i8* %40) #9
  %41 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringTypeAdapter.1838"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false) #9
  %43 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %7, i8* %43) #9
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1616"* %41, i8* %38) #9
  %44 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %41) #9
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %38, i64 %45
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1838"* nonnull %7, i8* %46) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #9
  %47 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1615"* %12) #9
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %38, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1838"* nonnull %8, i8* %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #9
  %50 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %50, label %128, label %51

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %128

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %128

81:                                               ; preds = %1
  %82 = bitcast i16** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %11) #9
  %85 = load i16*, i16** %11, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.1838"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false) #9
  %87 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %6, i8* %87) #9
  %88 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %89 = bitcast %"class.WTF::StringTypeAdapter.1838"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #9
  %90 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i8* %90) #9
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1616"* %88, i16* %85) #9
  %91 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %88) #9
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %85, i64 %92
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i16* %93) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #9
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1615"* %12) #9
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i16, i16* %85, i64 %95
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1838"* nonnull %6, i16* %96) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #9
  %97 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %97, label %128, label %98

98:                                               ; preds = %81
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %115

105:                                              ; preds = %98
  %106 = zext i32 %104 to i33
  %107 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %106, i33 1) #9
  %108 = extractvalue { i33, i1 } %107, 1
  %109 = extractvalue { i33, i1 } %107, 0
  %110 = icmp slt i33 %109, 0
  %111 = or i1 %108, %110
  br i1 %111, label %112, label %113, !prof !2

112:                                              ; preds = %105
  call void @llvm.trap() #9
  unreachable

113:                                              ; preds = %105
  %114 = trunc i33 %109 to i32
  store i32 %114, i32* %103, align 4
  br label %115

115:                                              ; preds = %98, %113
  %116 = phi i32 [ %114, %113 ], [ %104, %98 ]
  %117 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %118 = load atomic i32, i32* %99 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %123 = add i32 %116, -1
  store i32 %123, i32* %122, align 4
  br label %124

124:                                              ; preds = %121, %115
  %125 = phi i32 [ %123, %121 ], [ %116, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %128

128:                                              ; preds = %127, %124, %81, %80, %77, %34
  %129 = phi i8* [ %35, %34 ], [ %35, %77 ], [ %35, %80 ], [ %82, %81 ], [ %82, %124 ], [ %82, %127 ]
  %130 = phi i64 [ 0, %34 ], [ %70, %77 ], [ %70, %80 ], [ 0, %81 ], [ %117, %124 ], [ %117, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #9
  %131 = inttoptr i64 %130 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings31ReportInvalidEnumSetToAttributeEPN2v87IsolateERKN3WTF6StringES7_RNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringAppend.1619", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.1618", align 8
  %8 = alloca %"class.WTF::StringAppend.1619", align 8
  %9 = alloca %"class.WTF::StringAppend.1616", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #9
  %12 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %11)
  %13 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %12) #9
  %14 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = bitcast %"class.WTF::StringAppend.1618"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #9
  %16 = bitcast %"class.WTF::StringAppend.1619"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  %17 = bitcast %"class.WTF::StringAppend.1616"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %96, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %38

28:                                               ; preds = %21
  %29 = zext i32 %27 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #9
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %28
  tail call void @llvm.trap() #9
  unreachable

36:                                               ; preds = %28
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %26, align 4
  br label %38

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %27, %21 ]
  %40 = load atomic i32, i32* %22 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = zext i32 %39 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %26, align 4
  br label %53

53:                                               ; preds = %51, %38
  %54 = phi i32 [ %52, %51 ], [ %39, %38 ]
  %55 = load atomic i32, i32* %22 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = add i32 %54, -1
  store i32 %59, i32* %26, align 4
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i32 [ %59, %58 ], [ %54, %53 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #9
  br label %64

64:                                               ; preds = %60, %63
  %65 = load atomic i32, i32* %22 monotonic, align 4, !noalias !14
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = load i32, i32* %26, align 4
  br i1 %67, label %69, label %79

69:                                               ; preds = %64
  %70 = zext i32 %68 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #9
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  tail call void @llvm.trap() #9, !noalias !14
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %26, align 4, !noalias !14
  br label %79

79:                                               ; preds = %64, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %64 ]
  %81 = bitcast %"class.WTF::StringAppend.1616"* %9 to i64*
  store i64 ptrtoint ([21 x i8]* @.str to i64), i64* %81, align 8, !alias.scope !14
  %82 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %82, align 8, !alias.scope !14
  %83 = load atomic i32, i32* %22 monotonic, align 4, !noalias !14
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %100

86:                                               ; preds = %79
  %87 = zext i32 %80 to i33
  %88 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #9
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  tail call void @llvm.trap() #9, !noalias !14
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %26, align 4, !noalias !14
  br label %100

96:                                               ; preds = %4
  %97 = bitcast %"class.WTF::StringAppend.1616"* %9 to i64*
  store i64 ptrtoint ([21 x i8]* @.str to i64), i64* %97, align 8, !alias.scope !14
  %98 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8, !alias.scope !14
  %99 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %99, align 8, !alias.scope !14
  br label %112

100:                                              ; preds = %94, %79
  %101 = phi i32 [ %95, %94 ], [ %80, %79 ]
  %102 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %102, align 8, !alias.scope !14
  %103 = load atomic i32, i32* %22 monotonic, align 4, !noalias !14
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %100
  %107 = add i32 %101, -1
  store i32 %107, i32* %26, align 4, !noalias !14
  br label %108

108:                                              ; preds = %106, %100
  %109 = phi i32 [ %107, %106 ], [ %101, %100 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #9, !noalias !14
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %133, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %133

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i33
  %125 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #9
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !2

130:                                              ; preds = %121
  tail call void @llvm.trap() #9
  unreachable

131:                                              ; preds = %121
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %122, align 4
  br label %133

133:                                              ; preds = %112, %116, %131
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1619"* nonnull sret %8, %"class.WTF::StringAppend.1616"* nonnull dereferenceable(24) %9, %"class.WTF::StringImpl"* %114)
  %134 = bitcast %"class.WTF::StringAppend.1619"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134)
  %135 = bitcast %"class.WTF::StringAppend.1619"* %8 to i64*
  %136 = load i64, i64* %135, align 8, !noalias !17
  %137 = bitcast %"class.WTF::StringAppend.1619"* %5 to i64*
  store i64 %136, i64* %137, align 8, !noalias !17
  %138 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8, !noalias !17
  %140 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %140, align 8, !noalias !17
  %141 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %141, label %159, label %142

142:                                              ; preds = %133
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = zext i32 %149 to i33
  %151 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %150, i33 1) #9
  %152 = extractvalue { i33, i1 } %151, 1
  %153 = extractvalue { i33, i1 } %151, 0
  %154 = icmp slt i33 %153, 0
  %155 = or i1 %152, %154
  br i1 %155, label %156, label %157, !prof !2

156:                                              ; preds = %147
  call void @llvm.trap() #9
  unreachable

157:                                              ; preds = %147
  %158 = trunc i33 %153 to i32
  store i32 %158, i32* %148, align 4
  br label %159

159:                                              ; preds = %157, %142, %133
  %160 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %5, i64 0, i32 0, i32 1
  %161 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %8, i64 0, i32 0, i32 1
  %162 = bitcast i8** %161 to i64*
  %163 = load i64, i64* %162, align 8, !noalias !17
  %164 = bitcast i8** %160 to i64*
  store i64 %163, i64* %164, align 8, !noalias !17
  %165 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %8, i64 0, i32 1, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8, !noalias !17
  %167 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %167, align 8, !noalias !17
  %168 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %168, label %186, label %169

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %186

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i33
  %178 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %177, i33 1) #9
  %179 = extractvalue { i33, i1 } %178, 1
  %180 = extractvalue { i33, i1 } %178, 0
  %181 = icmp slt i33 %180, 0
  %182 = or i1 %179, %181
  br i1 %182, label %183, label %184, !prof !2

183:                                              ; preds = %174
  call void @llvm.trap() #9
  unreachable

184:                                              ; preds = %174
  %185 = trunc i33 %180 to i32
  store i32 %185, i32* %175, align 4
  br label %186

186:                                              ; preds = %159, %169, %184
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1618"* nonnull %7, %"class.WTF::StringAppend.1619"* nonnull byval(%"class.WTF::StringAppend.1619") align 8 %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134)
  %187 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1618"* nonnull %7)
  %188 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %188, align 8
  %189 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %190 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %190, i64 3
  %192 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %191, align 8
  call void %192(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %186
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #9
  br label %208

208:                                              ; preds = %186, %204, %207
  %209 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #9
  br label %225

225:                                              ; preds = %224, %221, %208
  %226 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #9
  br label %242

242:                                              ; preds = %225, %238, %241
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #9
  br label %258

258:                                              ; preds = %257, %254, %242
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #9
  br label %274

274:                                              ; preds = %258, %270, %273
  %275 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #9
  br label %291

291:                                              ; preds = %274, %287, %290
  br i1 %20, label %305, label %292

292:                                              ; preds = %291
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #9
  br label %305

305:                                              ; preds = %291, %301, %304
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %306 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #9
  %307 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %308 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  store %"class.WTF::StringImpl"* %309, %"class.WTF::StringImpl"** %307, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %328, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %328

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = zext i32 %318 to i33
  %320 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %319, i33 1) #9
  %321 = extractvalue { i33, i1 } %320, 1
  %322 = extractvalue { i33, i1 } %320, 0
  %323 = icmp slt i33 %322, 0
  %324 = or i1 %321, %323
  br i1 %324, label %325, label %326, !prof !2

325:                                              ; preds = %316
  call void @llvm.trap() #9
  unreachable

326:                                              ; preds = %316
  %327 = trunc i33 %322 to i32
  store i32 %327, i32* %317, align 4
  br label %328

328:                                              ; preds = %326, %311, %305
  %329 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*)***
  %330 = load void (%"class.blink::ExceptionState"*)**, void (%"class.blink::ExceptionState"*)*** %329, align 8
  %331 = getelementptr inbounds void (%"class.blink::ExceptionState"*)*, void (%"class.blink::ExceptionState"*)** %330, i64 6
  %332 = load void (%"class.blink::ExceptionState"*)*, void (%"class.blink::ExceptionState"*)** %331, align 8
  call void %332(%"class.blink::ExceptionState"* %3) #9
  %333 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %13) #9
  %334 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %335 = bitcast i8* %334 to %"class.blink::ConsoleMessage"*
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %335, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::SourceLocation"* %333) #9
  %336 = getelementptr inbounds i8, i8* %334, i64 -4
  %337 = bitcast i8* %336 to i16*
  %338 = load atomic i16, i16* %337 monotonic, align 2
  %339 = or i16 %338, 1
  store atomic i16 %339, i16* %337 release, align 2
  %340 = bitcast %"class.blink::ExecutionContext"* %13 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %341 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %341, i64 52
  %343 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %342, align 8
  call void %343(%"class.blink::ExecutionContext"* %13, %"class.blink::ConsoleMessage"* %335, i1 zeroext false) #9
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %359, label %346

346:                                              ; preds = %328
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  br i1 %350, label %353, label %355

353:                                              ; preds = %346
  %354 = add i32 %352, -1
  store i32 %354, i32* %351, align 4
  br label %355

355:                                              ; preds = %353, %346
  %356 = phi i32 [ %354, %353 ], [ %352, %346 ]
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #9
  br label %359

359:                                              ; preds = %328, %355, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1619"* noalias sret, %"class.WTF::StringAppend.1616"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1616", align 8
  %5 = bitcast %"class.WTF::StringAppend.1616"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1616"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #9
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1619"* %0, %"class.WTF::StringAppend.1616"* nonnull byval(%"class.WTF::StringAppend.1616") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1619"* %0, %"class.WTF::StringAppend.1616"* nonnull byval(%"class.WTF::StringAppend.1616") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1618"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #9
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.1838"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #9
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i8* %15) #9
  %16 = bitcast %"class.WTF::StringTypeAdapter.1838"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #9
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %2, i8* %18) #9
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1618"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #9
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1618"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #9
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #9
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1618"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #9
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1618"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #9
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #9
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8bindings18IsEsIterableObjectEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #9
  br i1 %5, label %6, label %46

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #9
  %8 = call %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"* %0) #9
  %9 = bitcast %"class.v8::Symbol"* %8 to %"class.v8::Value"*
  %10 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %11 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #9
  %12 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %10, %"class.v8::Context"* %11, %"class.v8::Value"* %9) #9
  %13 = icmp eq %"class.v8::Value"* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %6
  %15 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #9
  %16 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %17 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %17, i64 5
  %19 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, align 8
  call void %19(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %15) #9
  br label %44

20:                                               ; preds = %6
  %21 = bitcast %"class.v8::Value"* %12 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 3
  %24 = icmp eq i64 %23, 1
  br i1 %24, label %25, label %41

25:                                               ; preds = %20
  %26 = add i64 %22, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %22, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 67
  br i1 %35, label %36, label %41

36:                                               ; preds = %25
  %37 = add i64 %22, 23
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = ashr i32 %39, 1
  switch i32 %40, label %41 [
    i32 5, label %44
    i32 3, label %44
  ]

41:                                               ; preds = %36, %25, %20
  %42 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %12) #9
  br i1 %42, label %44, label %43

43:                                               ; preds = %41
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %44

44:                                               ; preds = %36, %36, %41, %43, %14
  %45 = phi i1 [ false, %14 ], [ false, %43 ], [ false, %36 ], [ true, %41 ], [ false, %36 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #9
  br label %46

46:                                               ; preds = %3, %44
  %47 = phi i1 [ %45, %44 ], [ false, %3 ]
  ret i1 %47
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink8bindings30ToDocumentFromExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %5 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %5, i64 1
  %7 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ExecutionContext"* nonnull %0) #9
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %11 = bitcast i32* %10 to %"class.blink::LocalDOMWindow"*
  br label %12

12:                                               ; preds = %1, %3, %9
  %13 = phi %"class.blink::LocalDOMWindow"* [ %11, %9 ], [ null, %3 ], [ null, %1 ]
  %14 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %13) #9
  ret %"class.blink::Document"* %14
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink8bindings31ExecutionContextFromV8WrappableEPKNS_5RangeE(%"class.blink::Range"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = bitcast %"class.blink::Node"* %3 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::Node"* %3) #9
  ret %"class.blink::ExecutionContext"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZN5blink8bindings31ExecutionContextFromV8WrappableEPKNS_9DOMParserE(%"class.blink::DOMParser"* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %"class.blink::DOMParser", %"class.blink::DOMParser"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %2, align 8
  %4 = icmp eq %"class.blink::LocalDOMWindow"* %3, null
  %5 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %3, i64 0, i32 1
  %6 = bitcast %"class.blink::ExecutionContext.base"* %5 to %"class.blink::ExecutionContext"*
  %7 = select i1 %4, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %6
  ret %"class.blink::ExecutionContext"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink8bindings30CreateNamedConstructorFunctionEPNS_11ScriptStateEPFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEPKciPKNS_15WrapperTypeInfoE(%"class.blink::ScriptState"* nocapture readonly, void (%"class.v8::FunctionCallbackInfo"*)*, i8*, i32, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #0 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %9, align 8
  %11 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %12 = add i64 %11, 8
  %13 = inttoptr i64 %12 to %"class.blink::V8PerIsolateData"**
  %14 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %13, align 8
  %15 = bitcast void (%"class.v8::FunctionCallbackInfo"*)* %1 to i8*
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.v8::Context"*, %"class.v8::Context"** %16, align 8
  %18 = icmp eq %"class.v8::Context"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %20, align 8
  %22 = icmp eq %"class.blink::V8PerContextData"* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %19, %5
  %24 = add i64 %11, 160
  %25 = inttoptr i64 %24 to %"class.v8::Value"*
  br label %86

26:                                               ; preds = %19
  %27 = tail call %"class.v8::Template"* @_ZN5blink16V8PerIsolateData14FindV8TemplateERKNS_15DOMWrapperWorldEPKv(%"class.blink::V8PerIsolateData"* %14, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %10, i8* %15) #9
  %28 = bitcast %"class.v8::Template"* %27 to %"class.v8::FunctionTemplate"*
  %29 = icmp eq %"class.v8::Template"* %27, null
  br i1 %29, label %30, label %51

30:                                               ; preds = %26
  %31 = tail call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %8, void (%"class.v8::FunctionCallbackInfo"*)* %1, %"class.v8::Value"* null, %"class.v8::Signature"* null, i32 %3, i32 1, i32 0, %"class.v8::CFunction"* null) #9
  %32 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* %4, %"class.v8::Isolate"* %8, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %10) #9
  %33 = bitcast %"class.v8::Template"* %32 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN2v816FunctionTemplate7InheritENS_5LocalIS0_EE(%"class.v8::FunctionTemplate"* %31, %"class.v8::FunctionTemplate"* %33) #9
  %34 = icmp eq i8* %2, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = load i8, i8* %2, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %35, %30
  %39 = add i64 %11, 200
  %40 = inttoptr i64 %39 to %"class.v8::String"*
  br label %47

41:                                               ; preds = %35
  %42 = tail call i64 @strlen(i8* nonnull %2) #10
  %43 = trunc i64 %42 to i32
  %44 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %8, i8* nonnull %2, i32 1, i32 %43) #9
  %45 = icmp eq %"class.v8::String"* %44, null
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %41
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %47

47:                                               ; preds = %38, %41, %46
  %48 = phi %"class.v8::String"* [ %40, %38 ], [ %44, %41 ], [ null, %46 ]
  tail call void @_ZN2v816FunctionTemplate12SetClassNameENS_5LocalINS_6StringEEE(%"class.v8::FunctionTemplate"* %31, %"class.v8::String"* %48) #9
  %49 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %31) #9
  tail call void @_ZN2v814ObjectTemplate21SetInternalFieldCountEi(%"class.v8::ObjectTemplate"* %49, i32 2) #9
  %50 = bitcast %"class.v8::FunctionTemplate"* %31 to %"class.v8::Template"*
  tail call void @_ZN5blink16V8PerIsolateData13AddV8TemplateERKNS_15DOMWrapperWorldEPKvN2v85LocalINS6_8TemplateEEE(%"class.blink::V8PerIsolateData"* %14, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %10, i8* %15, %"class.v8::Template"* %50) #9
  br label %51

51:                                               ; preds = %47, %26
  %52 = phi %"class.v8::FunctionTemplate"* [ %31, %47 ], [ %28, %26 ]
  %53 = load %"class.v8::Context"*, %"class.v8::Context"** %16, align 8
  %54 = icmp eq %"class.v8::Context"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %57 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %56, align 8
  %58 = bitcast %"class.v8::Context"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %57, i64 %59) #9
  %61 = bitcast i64* %60 to %"class.v8::Context"*
  br label %62

62:                                               ; preds = %51, %55
  %63 = phi %"class.v8::Context"* [ %61, %55 ], [ null, %51 ]
  %64 = tail call %"class.blink::V8PerContextData"* @_ZN5blink16V8PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %63) #9
  %65 = tail call %"class.v8::Function"* @_ZN2v816FunctionTemplate11GetFunctionENS_5LocalINS_7ContextEEE(%"class.v8::FunctionTemplate"* %52, %"class.v8::Context"* %63) #9
  %66 = icmp eq %"class.v8::Function"* %65, null
  br i1 %66, label %86, label %67

67:                                               ; preds = %62
  %68 = tail call %"class.v8::Object"* @_ZN5blink16V8PerContextData16PrototypeForTypeEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"* %64, %"struct.blink::WrapperTypeInfo"* %4) #9
  %69 = bitcast %"class.v8::Function"* %65 to %"class.v8::Object"*
  %70 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %8, i8* nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 9) #9
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %67
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %73

73:                                               ; preds = %67, %72
  %74 = bitcast %"class.v8::String"* %70 to %"class.v8::Name"*
  %75 = bitcast %"class.v8::Object"* %68 to %"class.v8::Value"*
  %76 = tail call i16 @_ZN2v86Object17DefineOwnPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEENS_17PropertyAttributeE(%"class.v8::Object"* nonnull %69, %"class.v8::Context"* %63, %"class.v8::Name"* %74, %"class.v8::Value"* %75, i32 7) #9
  %77 = trunc i16 %76 to i8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %86, label %79, !prof !2

79:                                               ; preds = %73
  %80 = icmp ult i16 %76, 256
  br i1 %80, label %81, label %84

81:                                               ; preds = %79
  %82 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.5, i64 0, i64 0), i32 346, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)) #9
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #9
  br label %84

84:                                               ; preds = %79, %81
  %85 = bitcast %"class.v8::Function"* %65 to %"class.v8::Value"*
  br label %86

86:                                               ; preds = %62, %73, %84, %23
  %87 = phi %"class.v8::Value"* [ %25, %23 ], [ null, %62 ], [ %85, %84 ], [ null, %73 ]
  ret %"class.v8::Value"* %87
}

declare %"class.v8::Template"* @_ZN5blink16V8PerIsolateData14FindV8TemplateERKNS_15DOMWrapperWorldEPKv(%"class.blink::V8PerIsolateData"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), i8*) local_unnamed_addr #2

declare %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, %"class.v8::Signature"*, i32, i32, i32, %"class.v8::CFunction"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink16V8PerIsolateData13AddV8TemplateERKNS_15DOMWrapperWorldEPKvN2v85LocalINS6_8TemplateEEE(%"class.blink::V8PerIsolateData"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), i8*, %"class.v8::Template"*) local_unnamed_addr #2

declare %"class.v8::Function"* @_ZN2v816FunctionTemplate11GetFunctionENS_5LocalINS_7ContextEEE(%"class.v8::FunctionTemplate"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink16V8PerContextData16PrototypeForTypeEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object17DefineOwnPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEENS_17PropertyAttributeE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings30InstallUnscopablePropertyNamesEPN2v87IsolateENS1_5LocalINS1_7ContextEEENS4_INS1_6ObjectEEEN4base4spanIKPKcLm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.v8::Context"*, %"class.v8::Object"*, i64, i8**) local_unnamed_addr #0 {
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 176
  %10 = inttoptr i64 %9 to %"class.v8::Value"*
  %11 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateENS_5LocalINS_5ValueEEEPNS3_INS_4NameEEEPS5_m(%"class.v8::Isolate"* %0, %"class.v8::Value"* %10, %"class.v8::Local"* null, %"class.v8::Local.1604"* null, i64 0) #9
  %12 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %14 = getelementptr inbounds i8*, i8** %4, i64 %3
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %6, i8** %4, i8** %4, i8** %14) #9
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %18 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %7, i8** %4, i8** %14, i8** %14) #9
  call void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #9
  %19 = load i8**, i8*** %13, align 8
  %20 = load i8**, i8*** %17, align 8
  %21 = icmp eq i8** %19, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %5
  %23 = add i64 %8, 200
  %24 = inttoptr i64 %23 to %"class.v8::String"*
  %25 = add i64 %8, 184
  %26 = inttoptr i64 %25 to %"class.v8::Value"*
  br label %36

27:                                               ; preds = %56, %5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  %28 = call %"class.v8::Symbol"* @_ZN2v86Symbol14GetUnscopablesEPNS_7IsolateE(%"class.v8::Isolate"* %0) #9
  %29 = bitcast %"class.v8::Symbol"* %28 to %"class.v8::Name"*
  %30 = bitcast %"class.v8::Object"* %11 to %"class.v8::Value"*
  %31 = call i16 @_ZN2v86Object17DefineOwnPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEENS_17PropertyAttributeE(%"class.v8::Object"* %2, %"class.v8::Context"* %1, %"class.v8::Name"* %29, %"class.v8::Value"* %30, i32 3) #9
  %32 = trunc i16 %31 to i8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %27
  call void @_ZN2v82V817FromJustIsNothingEv() #9
  br label %35

35:                                               ; preds = %27, %34
  ret void

36:                                               ; preds = %22, %56
  %37 = call dereferenceable(8) i8** @_ZNK4base25CheckedContiguousIteratorIKPKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %49, label %40

40:                                               ; preds = %36
  %41 = load i8, i8* %38, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  %44 = call i64 @strlen(i8* nonnull %38) #10
  %45 = trunc i64 %44 to i32
  %46 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %38, i32 1, i32 %45) #9
  %47 = icmp eq %"class.v8::String"* %46, null
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %43
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %49

49:                                               ; preds = %36, %40, %43, %48
  %50 = phi %"class.v8::String"* [ %46, %43 ], [ null, %48 ], [ %24, %40 ], [ %24, %36 ]
  %51 = bitcast %"class.v8::String"* %50 to %"class.v8::Name"*
  %52 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %11, %"class.v8::Context"* %1, %"class.v8::Name"* %51, %"class.v8::Value"* %26) #9
  %53 = trunc i16 %52 to i8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %49
  call void @_ZN2v82V817FromJustIsNothingEv() #9
  br label %56

56:                                               ; preds = %49, %55
  %57 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKPKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  call void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #9
  %58 = load i8**, i8*** %13, align 8
  %59 = load i8**, i8*** %17, align 8
  %60 = icmp eq i8** %58, %59
  br i1 %60, label %27, label %36
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateENS_5LocalINS_5ValueEEEPNS3_INS_4NameEEEPS5_m(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.v8::Local"*, %"class.v8::Local.1604"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i8** @_ZNK4base25CheckedContiguousIteratorIKPKcEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8**, i8*** %7, align 8
  %11 = load i8**, i8*** %8, align 8
  %12 = icmp eq i8** %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8*** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %17 = bitcast i8*** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i8* %16, i8* %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %26 = load i8**, i8*** %7, align 8
  ret i8** %26
}

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKPKcEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8**, i8*** %7, align 8
  %11 = load i8**, i8*** %8, align 8
  %12 = icmp eq i8** %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8*** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %17 = bitcast i8*** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i8* %16, i8* %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %26 = load i8**, i8*** %7, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  store i8** %27, i8*** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare %"class.v8::Symbol"* @_ZN2v86Symbol14GetUnscopablesEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Array"* @_ZN5blink8bindings26EnumerateIndexedPropertiesEPN2v87IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %6, !prof !2

4:                                                ; preds = %2
  %5 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEPNS_5LocalINS_5ValueEEEm(%"class.v8::Isolate"* %0, %"class.v8::Local.1604"* null, i64 0) #9
  br label %17

6:                                                ; preds = %2
  %7 = zext i32 %1 to i64
  %8 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v85LocalINS2_5ValueEEEEEmm(i64 %7) #9
  %9 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2v85LocalINS1_5ValueEEEEEPKcv, i64 0, i64 0)) #9
  %10 = bitcast i8* %9 to %"class.v8::Local.1604"*
  %11 = zext i32 %1 to i64
  br label %19

12:                                               ; preds = %19
  %13 = zext i32 %1 to i64
  %14 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEPNS_5LocalINS_5ValueEEEm(%"class.v8::Isolate"* %0, %"class.v8::Local.1604"* %10, i64 %13) #9
  %15 = icmp eq i8* %9, null
  br i1 %15, label %17, label %16, !prof !4

16:                                               ; preds = %12
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #9
  br label %17

17:                                               ; preds = %4, %12, %16
  %18 = phi %"class.v8::Array"* [ %5, %4 ], [ %14, %12 ], [ %14, %16 ]
  ret %"class.v8::Array"* %18

19:                                               ; preds = %19, %6
  %20 = phi i64 [ 0, %6 ], [ %26, %19 ]
  %21 = phi i32 [ 0, %6 ], [ %27, %19 ]
  %22 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %0, i32 %21) #9
  %23 = ptrtoint %"class.v8::Integer"* %22 to i64
  %24 = getelementptr inbounds %"class.v8::Local.1604", %"class.v8::Local.1604"* %10, i64 %20
  %25 = bitcast %"class.v8::Local.1604"* %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = add nuw nsw i64 %20, 1
  %27 = add nuw i32 %21, 1
  %28 = icmp eq i64 %26, %11
  br i1 %28, label %12, label %19
}

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEPNS_5LocalINS_5ValueEEEm(%"class.v8::Isolate"*, %"class.v8::Local.1604"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings28InstallCSSPropertyAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_NS7_INS1_9SignatureEEEN4base4spanIKPKcLm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Template"* nocapture readnone, %"class.v8::Template"*, %"class.v8::Template"* nocapture readnone, %"class.v8::Signature"*, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) local_unnamed_addr #0 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.WTF::StringAppend.1731", align 8
  %13 = alloca %"class.WTF::StringAppend.1731", align 8
  %14 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %15, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #9
  %16 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %17, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #9
  %18 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load i8**, i8*** %20, align 8, !noalias !20
  %23 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8, !noalias !20
  %25 = getelementptr inbounds i8*, i8** %22, i64 %24
  call void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %10, i8** %22, i8** %22, i8** %25) #9
  %26 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %28 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %11, i8** %22, i8** %25, i8** %25) #9
  call void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #9
  %29 = load i8**, i8*** %19, align 8
  %30 = load i8**, i8*** %27, align 8
  %31 = icmp eq i8** %29, %30
  br i1 %31, label %42, label %32

32:                                               ; preds = %7
  %33 = bitcast %"class.WTF::StringAppend.1731"* %12 to i8*
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %12, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %12, i64 0, i32 1
  %36 = bitcast %"class.WTF::StringAppend.1731"* %13 to i8*
  %37 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %13, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %13, i64 0, i32 1
  %39 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %40 = add i64 %39, 200
  %41 = inttoptr i64 %40 to %"class.v8::String"*
  br label %75

42:                                               ; preds = %302, %7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #9
  br label %58

58:                                               ; preds = %42, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #9
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  ret void

75:                                               ; preds = %32, %302
  %76 = call dereferenceable(8) i8** @_ZNK4base25CheckedContiguousIteratorIKPKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %10)
  %77 = load i8*, i8** %76, align 8
  %78 = call %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"* %0, i8* %77) #9
  %79 = bitcast %"class.v8::External"* %78 to %"class.v8::Value"*
  %80 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %0, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink8bindings23CSSPropertyAttributeGetERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %79, %"class.v8::Signature"* %5, i32 0, i32 0, i32 1, %"class.v8::CFunction"* null) #9
  %81 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %0, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink8bindings23CSSPropertyAttributeSetERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %79, %"class.v8::Signature"* %5, i32 1, i32 0, i32 0, %"class.v8::CFunction"* null) #9
  call void @_ZN2v816FunctionTemplate20SetAcceptAnyReceiverEb(%"class.v8::FunctionTemplate"* %80, i1 zeroext false) #9
  call void @_ZN2v816FunctionTemplate20SetAcceptAnyReceiverEb(%"class.v8::FunctionTemplate"* %81, i1 zeroext false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #9
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %128, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %101

91:                                               ; preds = %84
  %92 = zext i32 %90 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #9
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %91
  call void @llvm.trap() #9
  unreachable

99:                                               ; preds = %91
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %89, align 4
  br label %101

101:                                              ; preds = %84, %99
  %102 = phi i32 [ %100, %99 ], [ %90, %84 ]
  %103 = load atomic i32, i32* %85 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  br i1 %105, label %107, label %117

107:                                              ; preds = %101
  %108 = zext i32 %102 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #9
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !2

114:                                              ; preds = %107
  call void @llvm.trap() #9
  unreachable

115:                                              ; preds = %107
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %106, align 4
  br label %117

117:                                              ; preds = %115, %101
  %118 = phi i32 [ %116, %115 ], [ %102, %101 ]
  %119 = load atomic i32, i32* %85 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  %123 = add i32 %118, -1
  store i32 %123, i32* %106, align 4
  br label %124

124:                                              ; preds = %122, %117
  %125 = phi i32 [ %123, %122 ], [ %118, %117 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #9
  br label %128

128:                                              ; preds = %75, %124, %127
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %34, align 8
  store i8* %77, i8** %35, align 8
  %129 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1731"* nonnull %12)
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %128
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %138

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %137 = bitcast %"class.WTF::StringImpl"* %136 to i8*
  br label %138

138:                                              ; preds = %131, %133
  %139 = phi %"class.WTF::StringImpl"* [ %132, %131 ], [ %129, %133 ]
  %140 = phi i8* [ null, %131 ], [ %137, %133 ]
  %141 = phi i32 [ 0, %131 ], [ %135, %133 ]
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %138
  %147 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* %140, i32 1, i32 %141) #9
  %148 = icmp eq %"class.v8::String"* %147, null
  br i1 %148, label %149, label %155, !prof !2

149:                                              ; preds = %146
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %155

150:                                              ; preds = %138
  %151 = bitcast i8* %140 to i16*
  %152 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* %151, i32 1, i32 %141) #9
  %153 = icmp eq %"class.v8::String"* %152, null
  br i1 %153, label %154, label %155, !prof !2

154:                                              ; preds = %150
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %155

155:                                              ; preds = %146, %149, %150, %154
  %156 = phi %"class.v8::String"* [ %147, %146 ], [ null, %149 ], [ %152, %150 ], [ null, %154 ]
  call void @_ZN2v816FunctionTemplate12SetClassNameENS_5LocalINS_6StringEEE(%"class.v8::FunctionTemplate"* %80, %"class.v8::String"* %156) #9
  br i1 %130, label %170, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #9
  br label %170

170:                                              ; preds = %155, %166, %169
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #9
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #9
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %233, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %206

196:                                              ; preds = %189
  %197 = zext i32 %195 to i33
  %198 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %197, i33 1) #9
  %199 = extractvalue { i33, i1 } %198, 1
  %200 = extractvalue { i33, i1 } %198, 0
  %201 = icmp slt i33 %200, 0
  %202 = or i1 %199, %201
  br i1 %202, label %203, label %204, !prof !2

203:                                              ; preds = %196
  call void @llvm.trap() #9
  unreachable

204:                                              ; preds = %196
  %205 = trunc i33 %200 to i32
  store i32 %205, i32* %194, align 4
  br label %206

206:                                              ; preds = %189, %204
  %207 = phi i32 [ %205, %204 ], [ %195, %189 ]
  %208 = load atomic i32, i32* %190 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  br i1 %210, label %212, label %222

212:                                              ; preds = %206
  %213 = zext i32 %207 to i33
  %214 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %213, i33 1) #9
  %215 = extractvalue { i33, i1 } %214, 1
  %216 = extractvalue { i33, i1 } %214, 0
  %217 = icmp slt i33 %216, 0
  %218 = or i1 %215, %217
  br i1 %218, label %219, label %220, !prof !2

219:                                              ; preds = %212
  call void @llvm.trap() #9
  unreachable

220:                                              ; preds = %212
  %221 = trunc i33 %216 to i32
  store i32 %221, i32* %211, align 4
  br label %222

222:                                              ; preds = %220, %206
  %223 = phi i32 [ %221, %220 ], [ %207, %206 ]
  %224 = load atomic i32, i32* %190 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %222
  %228 = add i32 %223, -1
  store i32 %228, i32* %211, align 4
  br label %229

229:                                              ; preds = %227, %222
  %230 = phi i32 [ %228, %227 ], [ %223, %222 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #9
  br label %233

233:                                              ; preds = %186, %229, %232
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %37, align 8
  store i8* %77, i8** %38, align 8
  %234 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1731"* nonnull %13)
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %236, label %238

236:                                              ; preds = %233
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %243

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 1
  %242 = bitcast %"class.WTF::StringImpl"* %241 to i8*
  br label %243

243:                                              ; preds = %236, %238
  %244 = phi i8* [ null, %236 ], [ %242, %238 ]
  %245 = phi %"class.WTF::StringImpl"* [ %237, %236 ], [ %234, %238 ]
  %246 = phi i32 [ 0, %236 ], [ %240, %238 ]
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %243
  %252 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* %244, i32 1, i32 %246) #9
  %253 = icmp eq %"class.v8::String"* %252, null
  br i1 %253, label %254, label %260, !prof !2

254:                                              ; preds = %251
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %260

255:                                              ; preds = %243
  %256 = bitcast i8* %244 to i16*
  %257 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* %256, i32 1, i32 %246) #9
  %258 = icmp eq %"class.v8::String"* %257, null
  br i1 %258, label %259, label %260, !prof !2

259:                                              ; preds = %255
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %260

260:                                              ; preds = %251, %254, %255, %259
  %261 = phi %"class.v8::String"* [ %252, %251 ], [ null, %254 ], [ %257, %255 ], [ null, %259 ]
  call void @_ZN2v816FunctionTemplate12SetClassNameENS_5LocalINS_6StringEEE(%"class.v8::FunctionTemplate"* %81, %"class.v8::String"* %261) #9
  br i1 %235, label %275, label %262

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #9
  br label %275

275:                                              ; preds = %260, %271, %274
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #9
  br label %291

291:                                              ; preds = %275, %287, %290
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #9
  %292 = icmp eq i8* %77, null
  br i1 %292, label %302, label %293

293:                                              ; preds = %291
  %294 = load i8, i8* %77, align 1
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %302, label %296

296:                                              ; preds = %293
  %297 = call i64 @strlen(i8* nonnull %77) #10
  %298 = trunc i64 %297 to i32
  %299 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %77, i32 1, i32 %298) #9
  %300 = icmp eq %"class.v8::String"* %299, null
  br i1 %300, label %301, label %302, !prof !2

301:                                              ; preds = %296
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %302

302:                                              ; preds = %291, %293, %296, %301
  %303 = phi %"class.v8::String"* [ %299, %296 ], [ null, %301 ], [ %41, %293 ], [ %41, %291 ]
  %304 = bitcast %"class.v8::String"* %303 to %"class.v8::Name"*
  call void @_ZN2v88Template19SetAccessorPropertyENS_5LocalINS_4NameEEENS1_INS_16FunctionTemplateEEES5_NS_17PropertyAttributeENS_13AccessControlE(%"class.v8::Template"* %3, %"class.v8::Name"* %304, %"class.v8::FunctionTemplate"* %80, %"class.v8::FunctionTemplate"* %81, i32 0, i32 0) #9
  %305 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKPKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %10)
  call void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #9
  %306 = load i8**, i8*** %19, align 8
  %307 = load i8**, i8*** %27, align 8
  %308 = icmp eq i8** %306, %307
  br i1 %308, label %42, label %75
}

declare %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings23CSSPropertyAttributeGetERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::CSSStyleDeclaration"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 4
  %29 = bitcast i64* %28 to %"class.v8::External"*
  %30 = tail call i8* @_ZNK2v88External5ValueEv(%"class.v8::External"* %29) #9
  %31 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = icmp eq i8* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %23
  %34 = tail call i64 @strlen(i8* nonnull %30) #10
  br label %35

35:                                               ; preds = %23, %33
  %36 = phi i64 [ %34, %33 ], [ 0, %23 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* %30, i64 %36) #9
  %37 = call %"class.WTF::StringImpl"* @_ZN5blink19CSSStyleDeclaration20AnonymousNamedGetterERKN3WTF12AtomicStringE(%"class.blink::CSSStyleDeclaration"* %25, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #9
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  %55 = load i64*, i64** %26, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 1
  %57 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %57, label %77, label %58

58:                                               ; preds = %54
  %59 = load i64, i64* %56, align 8
  %60 = add i64 %59, 8
  %61 = inttoptr i64 %60 to %"class.blink::V8PerIsolateData"**
  %62 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %62, i64 0, i32 5, i32 0, i32 0, i32 0
  %64 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %63, align 8
  %65 = getelementptr inbounds i64, i64* %55, i64 3
  %66 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %64, i64 0, i32 3, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, %37
  br i1 %68, label %69, label %76

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %64, i64 0, i32 1, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = inttoptr i64 %71 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %65, align 8
  br label %83

76:                                               ; preds = %58
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %64, i64* %65, %"class.WTF::StringImpl"* nonnull %37) #9
  br label %83

77:                                               ; preds = %54
  %78 = getelementptr inbounds i64, i64* %55, i64 3
  %79 = load i64, i64* %56, align 8
  %80 = add i64 %79, 200
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %78, align 8
  br label %96

83:                                               ; preds = %69, %73, %76
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %96

96:                                               ; preds = %77, %92, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings23CSSPropertyAttributeSetERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = getelementptr inbounds i64, i64* %8, i64 4
  %13 = bitcast i64* %12 to %"class.v8::External"*
  %14 = tail call i8* @_ZNK2v88External5ValueEv(%"class.v8::External"* %13) #9
  %15 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  store i8* %14, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringImpl"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %28 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  %29 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %30 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %29, i64* %30, align 8
  store i8 0, i8* %27, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 -1
  %34 = bitcast i64* %33 to %"class.v8::Object"*
  %35 = load i64, i64* %33, align 8
  %36 = add i64 %35, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i64 %35, -4294967296
  %40 = zext i32 %38 to i64
  %41 = or i64 %39, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load i16, i16* %43, align 2
  switch i16 %44, label %49 [
    i16 1057, label %45
    i16 1056, label %45
    i16 1040, label %45
  ]

45:                                               ; preds = %1, %1, %1
  %46 = add i64 %35, 19
  %47 = inttoptr i64 %46 to i8**
  %48 = load i8*, i8** %47, align 1
  br label %51

49:                                               ; preds = %1
  %50 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %34, i32 1) #9
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i8* [ %48, %45 ], [ %50, %49 ]
  %53 = bitcast i8* %52 to %"class.blink::CSSStyleDeclaration"*
  %54 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %51
  %58 = load i64*, i64** %7, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 1
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 160
  %62 = inttoptr i64 %61 to %"class.v8::Value"*
  br label %66

63:                                               ; preds = %51
  %64 = bitcast i64** %31 to %"class.v8::Value"**
  %65 = load %"class.v8::Value"*, %"class.v8::Value"** %64, align 8
  br label %66

66:                                               ; preds = %57, %63
  %67 = phi %"class.v8::Value"* [ %62, %57 ], [ %65, %63 ]
  %68 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %68) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %11, %"class.v8::Value"* %67, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %69 = load i32, i32* %23, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %144

71:                                               ; preds = %66
  %72 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %34) #9
  %73 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %72)
  %74 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #9
  %75 = icmp eq i8* %14, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = call i64 @strlen(i8* nonnull %14) #10
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi i64 [ %77, %76 ], [ 0, %71 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* %14, i64 %79) #9
  %80 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %82 = load %"class.v8::String"*, %"class.v8::String"** %81, align 8
  %83 = icmp eq %"class.v8::String"* %82, null
  br i1 %83, label %86, label %84, !prof !2

84:                                               ; preds = %78
  %85 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %82, i32 0) #9
  br label %107

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %107

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #9
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %95
  call void @llvm.trap() #9
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %107

107:                                              ; preds = %84, %86, %90, %105
  %108 = phi %"class.WTF::StringImpl"* [ %85, %84 ], [ null, %86 ], [ %88, %90 ], [ %88, %105 ]
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %109, align 8
  %110 = call i32 @_ZN5blink19CSSStyleDeclaration20AnonymousNamedSetterEPNS_11ScriptStateERKN3WTF12AtomicStringERKNS3_6StringE(%"class.blink::CSSStyleDeclaration"* %53, %"class.blink::ScriptState"* %73, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #9
  br label %126

126:                                              ; preds = %107, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  %127 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #9
  br label %143

143:                                              ; preds = %126, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #9
  br label %144

144:                                              ; preds = %66, %143
  %145 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  store i8* null, i8** %145, align 8
  %147 = icmp eq i8* %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %146) #9
  br label %149

149:                                              ; preds = %148, %144
  %150 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #9
  br label %166

166:                                              ; preds = %149, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %68) #9
  %167 = load i8, i8* %27, align 8, !range !3
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %170

170:                                              ; preds = %166, %169
  %171 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %173 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %174 = load i64*, i64** %173, align 8
  %175 = icmp eq i64* %174, null
  br i1 %175, label %185, label %176

176:                                              ; preds = %170
  %177 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %178 = bitcast %"class.v8::Isolate"* %177 to %"class.v8::internal::Isolate"*
  %179 = load i64, i64* %174, align 8
  %180 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %178, i64 %179) #9
  %181 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %177) #9
  br i1 %181, label %185, label %182

182:                                              ; preds = %176
  %183 = bitcast i64* %180 to %"class.v8::Value"*
  %184 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %177, %"class.v8::Value"* %183) #9
  br label %185

185:                                              ; preds = %182, %176, %170
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #9
  br label %201

201:                                              ; preds = %185, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #9
  ret void
}

declare void @_ZN2v816FunctionTemplate20SetAcceptAnyReceiverEb(%"class.v8::FunctionTemplate"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1731"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1841", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1841", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.1838"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #9
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %6, i8* %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1731"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #9
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.1841"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.1841"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.1838"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #9
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i8* %45) #9
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1842"* nonnull %46, i8* %25) #9
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i8* %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1731"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #9
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.1841"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #9
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.1841"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.1838"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #9
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i8* %105) #9
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1842"* nonnull %106, i16* %85) #9
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i16* %109) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #9
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #9
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare void @_ZN2v88Template19SetAccessorPropertyENS_5LocalINS_4NameEEENS1_INS_16FunctionTemplateEEES5_NS_17PropertyAttributeENS_13AccessControlE(%"class.v8::Template"*, %"class.v8::Name"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*, i32, i32) local_unnamed_addr #2

declare i8* @_ZNK2v88External5ValueEv(%"class.v8::External"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink19CSSStyleDeclaration20AnonymousNamedGetterERKN3WTF12AtomicStringE(%"class.blink::CSSStyleDeclaration"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.1605"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %102

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.1605"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %102

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %84

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %84

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -2
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %84

57:                                               ; preds = %51
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %59 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #9
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  tail call void @llvm.trap() #9
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %57, %64, %79
  %82 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %83 = bitcast %"class.std::__1::unique_ptr.1605"* %82 to i64*
  store i64 0, i64* %83, align 8
  br label %102

84:                                               ; preds = %40, %36, %51
  %85 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %86 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %87 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %86) #9
  %88 = icmp eq %"class.v8::String"* %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %91 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %92 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %92, i64 5
  %94 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %93, align 8
  call void %94(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %90) #9
  %95 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 152, i1 false)
  br label %101

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %87, %"class.v8::String"** %97, align 8
  %98 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %100 = bitcast %"class.std::__1::unique_ptr.1605"* %99 to i64*
  store i64 0, i64* %100, align 8
  br label %101

101:                                              ; preds = %96, %89
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #9
  br label %102

102:                                              ; preds = %101, %81, %28, %21
  ret void
}

declare i32 @_ZN5blink19CSSStyleDeclaration20AnonymousNamedSetterEPNS_11ScriptStateERKN3WTF12AtomicStringERKNS3_6StringE(%"class.blink::CSSStyleDeclaration"*, %"class.blink::ScriptState"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 {
  tail call void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_10IDLBooleanEbXadL_ZNS_7Element19SetBooleanAttributeERKNS_13QualifiedNameEbEEEEvRKN2v820FunctionCallbackInfoINS7_5ValueEEES6_PKcSE_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, i8* %2, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_10IDLBooleanEbXadL_ZNS_7Element19SetBooleanAttributeERKNS_13QualifiedNameEbEEEEvRKN2v820FunctionCallbackInfoINS7_5ValueEEES6_PKcSE_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::CEReactionsScope", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 3, i16* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  store i8* %2, i8** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 3
  store i8* %3, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.WTF::StringImpl"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  %24 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %47, !prof !2

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %25) #9
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %27, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %107

47:                                               ; preds = %4
  %48 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #9
  %49 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %7, i64 0, i32 1
  %50 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  %51 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %52 = bitcast %"class.blink::CEReactionsScope"* %7 to i64*
  store i64 %51, i64* %52, align 8
  store i8 0, i8* %49, align 8
  store %"class.blink::CEReactionsScope"* %7, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %53 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 -1
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = and i64 %56, -4294967296
  %61 = zext i32 %59 to i64
  %62 = or i64 %60, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load i16, i16* %64, align 2
  switch i16 %65, label %70 [
    i16 1057, label %66
    i16 1056, label %66
    i16 1040, label %66
  ]

66:                                               ; preds = %47, %47, %47
  %67 = add i64 %56, 19
  %68 = inttoptr i64 %67 to %"class.blink::Element"**
  %69 = load %"class.blink::Element"*, %"class.blink::Element"** %68, align 1
  br label %82

70:                                               ; preds = %47
  %71 = bitcast i64* %55 to %"class.v8::Object"*
  %72 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %71, i32 1) #9
  %73 = load i32, i32* %24, align 8
  %74 = bitcast i8* %72 to %"class.blink::Element"*
  %75 = icmp sgt i32 %73, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %70
  %77 = load i64*, i64** %8, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 1
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 160
  %81 = inttoptr i64 %80 to %"class.v8::Value"*
  br label %86

82:                                               ; preds = %66, %70
  %83 = phi %"class.blink::Element"* [ %69, %66 ], [ %74, %70 ]
  %84 = bitcast i64** %53 to %"class.v8::Value"**
  %85 = load %"class.v8::Value"*, %"class.v8::Value"** %84, align 8
  br label %86

86:                                               ; preds = %76, %82
  %87 = phi %"class.blink::Element"* [ %74, %76 ], [ %83, %82 ]
  %88 = phi %"class.v8::Value"* [ %81, %76 ], [ %85, %82 ]
  %89 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %88) #9
  br i1 %89, label %90, label %93, !prof !4

90:                                               ; preds = %86
  %91 = bitcast %"class.v8::Value"* %88 to %"class.v8::Boolean"*
  %92 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %91) #9
  br label %95

93:                                               ; preds = %86
  %94 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %88, %"class.v8::Isolate"* %12) #9
  br label %95

95:                                               ; preds = %90, %93
  %96 = phi i1 [ %92, %90 ], [ %94, %93 ]
  %97 = load i32, i32* %21, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %95
  call void @_ZN5blink7Element19SetBooleanAttributeERKNS_13QualifiedNameEb(%"class.blink::Element"* %87, %"class.blink::QualifiedName"* dereferenceable(8) %1, i1 zeroext %96) #9
  br label %100

100:                                              ; preds = %95, %99
  %101 = load i8, i8* %49, align 8, !range !3
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %7) #9
  br label %104

104:                                              ; preds = %100, %103
  %105 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #9
  br label %107

107:                                              ; preds = %104, %46
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %108 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %109, null
  br i1 %110, label %120, label %111

111:                                              ; preds = %107
  %112 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %113 = bitcast %"class.v8::Isolate"* %112 to %"class.v8::internal::Isolate"*
  %114 = load i64, i64* %109, align 8
  %115 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %113, i64 %114) #9
  %116 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %112) #9
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = bitcast i64* %115 to %"class.v8::Value"*
  %119 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %112, %"class.v8::Value"* %118) #9
  br label %120

120:                                              ; preds = %117, %111, %107
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #9
  br label %136

136:                                              ; preds = %120, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 {
  tail call void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameES8_EEEEvRKN2v820FunctionCallbackInfoINSD_5ValueEEESC_PKcSK_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, i8* %2, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameES8_EEEEvRKN2v820FunctionCallbackInfoINSD_5ValueEEESC_PKcSK_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::CEReactionsScope", align 8
  %8 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 1
  %13 = bitcast i64* %12 to %"class.v8::Isolate"**
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 3, i16* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  store i8* %2, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 3
  store i8* %3, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %14, %"class.v8::Isolate"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringImpl"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %29, label %49, !prof !2

29:                                               ; preds = %4
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %27) #9
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %29, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %179

49:                                               ; preds = %4
  %50 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %7, i64 0, i32 1
  %52 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  %53 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %54 = bitcast %"class.blink::CEReactionsScope"* %7 to i64*
  store i64 %53, i64* %54, align 8
  store i8 0, i8* %51, align 8
  store %"class.blink::CEReactionsScope"* %7, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %55 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 -1
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i64 %58, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load i16, i16* %66, align 2
  switch i16 %67, label %73 [
    i16 1057, label %68
    i16 1056, label %68
    i16 1040, label %68
  ]

68:                                               ; preds = %49, %49, %49
  %69 = add i64 %58, 19
  %70 = inttoptr i64 %69 to %"class.blink::Element"**
  %71 = load %"class.blink::Element"*, %"class.blink::Element"** %70, align 1
  %72 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %72) #9
  br label %86

73:                                               ; preds = %49
  %74 = bitcast i64* %57 to %"class.v8::Object"*
  %75 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #9
  %76 = load i32, i32* %26, align 8
  %77 = bitcast i8* %75 to %"class.blink::Element"*
  %78 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %78) #9
  %79 = icmp sgt i32 %76, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %73
  %81 = load i64*, i64** %10, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 160
  %85 = inttoptr i64 %84 to %"class.v8::Value"*
  br label %91

86:                                               ; preds = %68, %73
  %87 = phi i8* [ %72, %68 ], [ %78, %73 ]
  %88 = phi %"class.blink::Element"* [ %71, %68 ], [ %77, %73 ]
  %89 = bitcast i64** %55 to %"class.v8::Value"**
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %89, align 8
  br label %91

91:                                               ; preds = %80, %86
  %92 = phi i8* [ %78, %80 ], [ %87, %86 ]
  %93 = phi %"class.blink::Element"* [ %77, %80 ], [ %88, %86 ]
  %94 = phi %"class.v8::Value"* [ %85, %80 ], [ %90, %86 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %8, %"class.v8::Isolate"* %14, %"class.v8::Value"* %94, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5)
  %95 = load i32, i32* %23, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %150

97:                                               ; preds = %91
  %98 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 0, i32 0
  %100 = load %"class.v8::String"*, %"class.v8::String"** %99, align 8
  %101 = icmp eq %"class.v8::String"* %100, null
  br i1 %101, label %104, label %102, !prof !2

102:                                              ; preds = %97
  %103 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %100, i32 0) #9
  br label %131

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = and i32 %110, 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %108
  %114 = load atomic i32, i32* %109 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %131

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #9
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %117
  call void @llvm.trap() #9
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %131

129:                                              ; preds = %108
  %130 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %106) #9
  br label %131

131:                                              ; preds = %102, %104, %113, %127, %129
  %132 = phi %"class.WTF::StringImpl"* [ %103, %102 ], [ %130, %129 ], [ %106, %113 ], [ %106, %127 ], [ null, %104 ]
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %93, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #9
  br label %149

149:                                              ; preds = %131, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  br label %150

150:                                              ; preds = %91, %149
  %151 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  store i8* null, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %150
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %152) #9
  br label %155

155:                                              ; preds = %154, %150
  %156 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %155, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %92) #9
  %173 = load i8, i8* %51, align 8, !range !3
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %7) #9
  br label %176

176:                                              ; preds = %172, %175
  %177 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  br label %179

179:                                              ; preds = %176, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %180 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = icmp eq i64* %181, null
  br i1 %182, label %192, label %183

183:                                              ; preds = %179
  %184 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %185 = bitcast %"class.v8::Isolate"* %184 to %"class.v8::internal::Isolate"*
  %186 = load i64, i64* %181, align 8
  %187 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %185, i64 %186) #9
  %188 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %184) #9
  br i1 %188, label %192, label %189

189:                                              ; preds = %183
  %190 = bitcast i64* %187 to %"class.v8::Value"*
  %191 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %184, %"class.v8::Value"* %190) #9
  br label %192

192:                                              ; preds = %189, %183, %179
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #9
  br label %208

208:                                              ; preds = %192, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings70PerformAttributeSetCEReactionsReflectTypeStringLegacyNullToEmptyStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 {
  tail call void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE2EEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameES8_EEEEvRKN2v820FunctionCallbackInfoINSD_5ValueEEESC_PKcSK_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, i8* %2, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE2EEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameES8_EEEEvRKN2v820FunctionCallbackInfoINSD_5ValueEEESC_PKcSK_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::CEReactionsScope", align 8
  %8 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 1
  %13 = bitcast i64* %12 to %"class.v8::Isolate"**
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 3, i16* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  store i8* %2, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 3
  store i8* %3, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %14, %"class.v8::Isolate"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringImpl"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %29, label %49, !prof !2

29:                                               ; preds = %4
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %27) #9
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %29, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %179

49:                                               ; preds = %4
  %50 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %7, i64 0, i32 1
  %52 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  %53 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %54 = bitcast %"class.blink::CEReactionsScope"* %7 to i64*
  store i64 %53, i64* %54, align 8
  store i8 0, i8* %51, align 8
  store %"class.blink::CEReactionsScope"* %7, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %55 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 -1
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i64 %58, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load i16, i16* %66, align 2
  switch i16 %67, label %73 [
    i16 1057, label %68
    i16 1056, label %68
    i16 1040, label %68
  ]

68:                                               ; preds = %49, %49, %49
  %69 = add i64 %58, 19
  %70 = inttoptr i64 %69 to %"class.blink::Element"**
  %71 = load %"class.blink::Element"*, %"class.blink::Element"** %70, align 1
  %72 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %72) #9
  br label %86

73:                                               ; preds = %49
  %74 = bitcast i64* %57 to %"class.v8::Object"*
  %75 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #9
  %76 = load i32, i32* %26, align 8
  %77 = bitcast i8* %75 to %"class.blink::Element"*
  %78 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %78) #9
  %79 = icmp sgt i32 %76, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %73
  %81 = load i64*, i64** %10, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 160
  %85 = inttoptr i64 %84 to %"class.v8::Value"*
  br label %91

86:                                               ; preds = %68, %73
  %87 = phi i8* [ %72, %68 ], [ %78, %73 ]
  %88 = phi %"class.blink::Element"* [ %71, %68 ], [ %77, %73 ]
  %89 = bitcast i64** %55 to %"class.v8::Value"**
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %89, align 8
  br label %91

91:                                               ; preds = %80, %86
  %92 = phi i8* [ %78, %80 ], [ %87, %86 ]
  %93 = phi %"class.blink::Element"* [ %77, %80 ], [ %88, %86 ]
  %94 = phi %"class.v8::Value"* [ %85, %80 ], [ %90, %86 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %8, %"class.v8::Isolate"* %14, %"class.v8::Value"* %94, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5)
  %95 = load i32, i32* %23, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %150

97:                                               ; preds = %91
  %98 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 0, i32 0
  %100 = load %"class.v8::String"*, %"class.v8::String"** %99, align 8
  %101 = icmp eq %"class.v8::String"* %100, null
  br i1 %101, label %104, label %102, !prof !2

102:                                              ; preds = %97
  %103 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %100, i32 0) #9
  br label %131

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = and i32 %110, 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %108
  %114 = load atomic i32, i32* %109 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %131

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #9
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %117
  call void @llvm.trap() #9
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %131

129:                                              ; preds = %108
  %130 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %106) #9
  br label %131

131:                                              ; preds = %102, %104, %113, %127, %129
  %132 = phi %"class.WTF::StringImpl"* [ %103, %102 ], [ %130, %129 ], [ %106, %113 ], [ %106, %127 ], [ null, %104 ]
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %93, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #9
  br label %149

149:                                              ; preds = %131, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  br label %150

150:                                              ; preds = %91, %149
  %151 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  store i8* null, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %150
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %152) #9
  br label %155

155:                                              ; preds = %154, %150
  %156 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %155, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %92) #9
  %173 = load i8, i8* %51, align 8, !range !3
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %7) #9
  br label %176

176:                                              ; preds = %172, %175
  %177 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  br label %179

179:                                              ; preds = %176, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %180 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = icmp eq i64* %181, null
  br i1 %182, label %192, label %183

183:                                              ; preds = %179
  %184 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %185 = bitcast %"class.v8::Isolate"* %184 to %"class.v8::internal::Isolate"*
  %186 = load i64, i64* %181, align 8
  %187 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %185, i64 %186) #9
  %188 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %184) #9
  br i1 %188, label %192, label %189

189:                                              ; preds = %183
  %190 = bitcast i64* %187 to %"class.v8::Value"*
  %191 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %184, %"class.v8::Value"* %190) #9
  br label %192

192:                                              ; preds = %189, %183, %179
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #9
  br label %208

208:                                              ; preds = %192, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings53PerformAttributeSetCEReactionsReflectTypeStringOrNullERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 {
  tail call void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameESA_EEEEvRKN2v820FunctionCallbackInfoINSF_5ValueEEESE_PKcSM_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, i8* %2, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings37PerformAttributeSetCEReactionsReflectINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEERKN3WTF12AtomicStringEXadL_ZNS_7Element12setAttributeERKNS_13QualifiedNameESA_EEEEvRKN2v820FunctionCallbackInfoINSF_5ValueEEESE_PKcSM_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::CEReactionsScope", align 8
  %8 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 1
  %13 = bitcast i64* %12 to %"class.v8::Isolate"**
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 3, i16* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  store i8* %2, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 3
  store i8* %3, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %14, %"class.v8::Isolate"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringImpl"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %29, label %49, !prof !2

29:                                               ; preds = %4
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %27) #9
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %29, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %179

49:                                               ; preds = %4
  %50 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %7, i64 0, i32 1
  %52 = bitcast %"class.blink::CEReactionsScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  %53 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %54 = bitcast %"class.blink::CEReactionsScope"* %7 to i64*
  store i64 %53, i64* %54, align 8
  store i8 0, i8* %51, align 8
  store %"class.blink::CEReactionsScope"* %7, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %55 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 -1
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i64 %58, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load i16, i16* %66, align 2
  switch i16 %67, label %73 [
    i16 1057, label %68
    i16 1056, label %68
    i16 1040, label %68
  ]

68:                                               ; preds = %49, %49, %49
  %69 = add i64 %58, 19
  %70 = inttoptr i64 %69 to %"class.blink::Element"**
  %71 = load %"class.blink::Element"*, %"class.blink::Element"** %70, align 1
  %72 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %72) #9
  br label %86

73:                                               ; preds = %49
  %74 = bitcast i64* %57 to %"class.v8::Object"*
  %75 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #9
  %76 = load i32, i32* %26, align 8
  %77 = bitcast i8* %75 to %"class.blink::Element"*
  %78 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %78) #9
  %79 = icmp sgt i32 %76, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %73
  %81 = load i64*, i64** %10, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 160
  %85 = inttoptr i64 %84 to %"class.v8::Value"*
  br label %91

86:                                               ; preds = %68, %73
  %87 = phi i8* [ %72, %68 ], [ %78, %73 ]
  %88 = phi %"class.blink::Element"* [ %71, %68 ], [ %77, %73 ]
  %89 = bitcast i64** %55 to %"class.v8::Value"**
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %89, align 8
  br label %91

91:                                               ; preds = %80, %86
  %92 = phi i8* [ %78, %80 ], [ %87, %86 ]
  %93 = phi %"class.blink::Element"* [ %77, %80 ], [ %88, %86 ]
  %94 = phi %"class.v8::Value"* [ %85, %80 ], [ %90, %86 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %8, %"class.v8::Isolate"* %14, %"class.v8::Value"* %94, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #9
  %95 = load i32, i32* %23, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %150

97:                                               ; preds = %91
  %98 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 0, i32 0
  %100 = load %"class.v8::String"*, %"class.v8::String"** %99, align 8
  %101 = icmp eq %"class.v8::String"* %100, null
  br i1 %101, label %104, label %102, !prof !2

102:                                              ; preds = %97
  %103 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %100, i32 0) #9
  br label %131

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = and i32 %110, 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %108
  %114 = load atomic i32, i32* %109 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %131

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #9
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %117
  call void @llvm.trap() #9
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %131

129:                                              ; preds = %108
  %130 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %106) #9
  br label %131

131:                                              ; preds = %102, %104, %113, %127, %129
  %132 = phi %"class.WTF::StringImpl"* [ %103, %102 ], [ %130, %129 ], [ %106, %113 ], [ %106, %127 ], [ null, %104 ]
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %93, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #9
  br label %149

149:                                              ; preds = %131, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  br label %150

150:                                              ; preds = %91, %149
  %151 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  store i8* null, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %150
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %152) #9
  br label %155

155:                                              ; preds = %154, %150
  %156 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %155, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %92) #9
  %173 = load i8, i8* %51, align 8, !range !3
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %7) #9
  br label %176

176:                                              ; preds = %172, %175
  %177 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  br label %179

179:                                              ; preds = %176, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %180 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = icmp eq i64* %181, null
  br i1 %182, label %192, label %183

183:                                              ; preds = %179
  %184 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %185 = bitcast %"class.v8::Isolate"* %184 to %"class.v8::internal::Isolate"*
  %186 = load i64, i64* %181, align 8
  %187 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %185, i64 %186) #9
  %188 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %184) #9
  br i1 %188, label %192, label %189

189:                                              ; preds = %183
  %190 = bitcast i64* %187 to %"class.v8::Value"*
  %191 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %184, %"class.v8::Value"* %190) #9
  br label %192

192:                                              ; preds = %189, %183, %179
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #9
  br label %208

208:                                              ; preds = %192, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #9
  ret void
}

declare %"class.v8::Function"* @_ZN5blink16V8PerContextData26ConstructorForTypeSlowCaseEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"* } @_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v88FunctionEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_(%"class.WTF::HashTable.192"*, %"struct.blink::WrapperTypeInfo"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.192", %"class.WTF::HashTable.192"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.194"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.192", %"class.WTF::HashTable.192"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"struct.blink::WrapperTypeInfo"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %34, i64 0, i32 0
  %36 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %35, align 8
  %37 = inttoptr i64 %12 to %"struct.blink::WrapperTypeInfo"*
  %38 = icmp eq %"struct.blink::WrapperTypeInfo"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"struct.blink::WrapperTypeInfo"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %63, i64 0, i32 0
  %65 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %64, align 8
  %66 = icmp eq %"struct.blink::WrapperTypeInfo"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.194"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.194"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.194"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.194"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"* } undef, %"struct.WTF::KeyValuePair.194"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"* } %79, %"struct.WTF::KeyValuePair.194"* %78, 1
  ret { %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"* } %80
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKh(%"class.WTF::StringImpl"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKPKcEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, i8**, i8**, i8**) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i8**, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8** %1, i8*** %7, align 8
  store i8** %2, i8*** %8, align 8
  store i8** %3, i8*** %9, align 8
  %14 = ptrtoint i8** %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8** %2 to i64
  %18 = bitcast i8*** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8** %3 to i64
  %21 = bitcast i8*** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8** %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8*** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %30 = bitcast i8*** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* %29, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8**, i8*** %8, align 8
  %43 = load i8**, i8*** %9, align 8
  %44 = icmp ugt i8** %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8*** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %49 = bitcast i8*** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* %48, i8* %50) #9
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #9
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKPKcE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8**, i8*** %11, align 8
  %15 = load i8**, i8*** %12, align 8
  %16 = icmp eq i8** %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %20, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8**, i8*** %32, align 8
  %36 = load i8**, i8*** %33, align 8
  %37 = icmp eq i8** %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8*** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %42 = bitcast i8*** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), i8* %41, i8* %43) #9
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #9
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #9
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !23

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !4

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #9
  br i1 %22, label %23, label %80, !prof !4

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #9
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #9
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #9
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #9
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE3EE11PrepareFastEv(%"class.blink::V8StringResource.1609"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %118, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %57

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 67
  br i1 %20, label %21, label %46

21:                                               ; preds = %10
  %22 = add i64 %7, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, -2
  switch i32 %25, label %46 [
    i32 6, label %26
    i32 10, label %26
  ]

26:                                               ; preds = %21, %21
  %27 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %0, i64 0, i32 2
  %28 = bitcast %"class.WTF::String"* %27 to i64*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 0, i64* %28, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %44, %41, %26
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br label %118

46:                                               ; preds = %21, %10
  %47 = add i64 %7, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i64 %7, -4294967296
  %51 = zext i32 %49 to i64
  %52 = or i64 %50, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = icmp ult i16 %55, 64
  br i1 %56, label %118, label %57, !prof !4

57:                                               ; preds = %5, %46
  %58 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #9
  br i1 %58, label %59, label %116, !prof !4

59:                                               ; preds = %57
  %60 = bitcast %"class.blink::V8StringResource.1609"* %0 to %"class.v8::Int32"**
  %61 = load %"class.v8::Int32"*, %"class.v8::Int32"** %60, align 8
  %62 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %61) #9
  %63 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %62) #9
  %64 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %0, i64 0, i32 2
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #9
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  tail call void @llvm.trap() #9
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %59
  %84 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %85 = bitcast %"class.WTF::String"* %64 to i64*
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %102

102:                                              ; preds = %83, %98, %101
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %65, label %118, label %103

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #9
  br label %118

116:                                              ; preds = %57
  %117 = getelementptr inbounds %"class.blink::V8StringResource.1609", %"class.blink::V8StringResource.1609"* %0, i64 0, i32 1
  store i32 1, i32* %117, align 8
  br label %118

118:                                              ; preds = %115, %112, %102, %46, %1, %116, %45
  %119 = phi i1 [ false, %116 ], [ true, %45 ], [ true, %1 ], [ true, %46 ], [ true, %102 ], [ true, %112 ], [ true, %115 ]
  ret i1 %119
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1615"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1615"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1615"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1615", %"class.WTF::StringAppend.1615"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1615", %"class.WTF::StringAppend.1615"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1617"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1617"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1617"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1617", %"class.WTF::StringAppend.1617"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1617", %"class.WTF::StringAppend.1617"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1838"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1616"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1841", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1838"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1838"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.1838"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.1841"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1841"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i8* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1842"* nonnull %34, i8* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1617"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i8* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1842"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1838"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1616"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1841", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1838"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1838"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.1838"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.1841"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1841"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1838"* nonnull %3, i16* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1842"* nonnull %34, i16* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1617"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1838"* nonnull %5, i16* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1842"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1619"*, %"class.WTF::StringAppend.1616"* byval(%"class.WTF::StringAppend.1616") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1616"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1619"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1616", %"class.WTF::StringAppend.1616"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1618"*, %"class.WTF::StringAppend.1619"* byval(%"class.WTF::StringAppend.1619") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1619"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1618"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1618"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1619"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1619"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1618"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1841", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1841"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #9
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1841"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1616"* %10, i8* %1) #9
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %10) #9
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1842"* nonnull %30, i8* %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1619"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1618"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1841", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1841"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1618", %"class.WTF::StringAppend.1618"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #9
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1841"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1616"* %10, i16* %1) #9
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1841", %"class.WTF::StringTypeAdapter.1841"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %10) #9
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1842"* nonnull %30, i16* %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1619"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i16* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1619"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1619", %"class.WTF::StringAppend.1619"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %8) #9
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1616"* %8) #9
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  ret i32 %18
}

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.231"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.231"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.231"*) local_unnamed_addr #2

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2v85LocalINS2_5ValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.30, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1731"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1838", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1838", %"class.WTF::StringTypeAdapter.1838"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1731", %"class.WTF::StringAppend.1731"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.1838"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1838"* nonnull %4, i8* %21) #9
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %46, i8* %47) #9
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  ret i32 %23
}

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.1605"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %76

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.1605"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %76

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %58

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = ashr i32 %54, 1
  switch i32 %55, label %58 [
    i32 5, label %56
    i32 3, label %56
  ]

56:                                               ; preds = %51, %51
  %57 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 152, i1 false)
  br label %76

58:                                               ; preds = %51, %40, %36
  %59 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %60 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %61 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %60) #9
  %62 = icmp eq %"class.v8::String"* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %65 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %66 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %66, i64 5
  %68 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %67, align 8
  call void %68(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %64) #9
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 152, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %61, %"class.v8::String"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.1605"* %73 to i64*
  store i64 0, i64* %74, align 8
  br label %75

75:                                               ; preds = %70, %63
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #9
  br label %76

76:                                               ; preds = %75, %56, %28, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base4spanIKPKcLm18446744073709551615EE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base4spanIKPKcLm18446744073709551615EE5beginEv"}
!23 = !{!"branch_weights", i32 2146410443, i32 1073205}
