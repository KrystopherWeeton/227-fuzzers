; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/ValidateSwitch.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/ValidateSwitch.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ValidateSwitch = type <{ %class.TIntermTraverser, i8, [7 x i8], %class.TParseContext*, i8, i8, i8, i8, i32, i8, [3 x i8], i32, %"class.std::__1::set.82", %"class.std::__1::set.92", i8, [7 x i8] }>
%class.TIntermTraverser = type { i32 (...)**, i8, i8, i8, i8, i32, %class.TVector.68, %"class.std::__1::vector.75" }
%class.TVector.68 = type { %"class.std::__1::vector.69" }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %class.TIntermNode**, %class.TIntermNode**, %"class.std::__1::__compressed_pair.71" }
%class.TIntermNode = type { i32 (...)**, %struct.TSourceLoc }
%struct.TSourceLoc = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.TIntermNode** }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.pool_allocator.74 }
%class.pool_allocator.74 = type { %class.TPoolAllocator* }
%class.TPoolAllocator = type { i64, i64, i64, i64, i64, %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"*, %"class.std::__1::vector.4", i32, i64 }
%"struct.TPoolAllocator::tHeader" = type { %"struct.TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.6" }
%"struct.TPoolAllocator::tAllocState" = type { i64, %"struct.TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.TPoolAllocator::tAllocState"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.77" }
%"struct.TIntermTraverser::ParentBlock" = type { %class.TIntermAggregate*, i64 }
%class.TIntermAggregate = type <{ %class.TIntermOperator.base, [4 x i8], %class.TVector.68, %"class.std::__1::basic_string.46", i8, i8, i8, i8, %struct.TSourceLoc, [4 x i8] }>
%class.TIntermOperator.base = type <{ %class.TIntermTyped, i32 }>
%class.TIntermTyped = type { %class.TIntermNode, %class.TType }
%class.TType = type { i8, i8, i8, i8, i8, i8, i32, i32, %class.TType*, %class.TInterfaceBlock*, %struct.TLayoutQualifier, %class.TStructure*, %"class.std::__1::basic_string.46"* }
%class.TInterfaceBlock = type <{ %class.TFieldListCollection, %"class.std::__1::basic_string.46"*, i32, i32, i32, [4 x i8] }>
%class.TFieldListCollection = type { i32 (...)**, %"class.std::__1::basic_string.46"*, %class.TVector*, %"class.std::__1::basic_string.46", i64 }
%class.TVector = type { %"class.std::__1::vector.53" }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %class.TField**, %class.TField**, %"class.std::__1::__compressed_pair.55" }
%class.TField = type { %class.TType*, %"class.std::__1::basic_string.46"*, %struct.TSourceLoc }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.TField** }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.pool_allocator.58 }
%class.pool_allocator.58 = type { %class.TPoolAllocator* }
%struct.TLayoutQualifier = type { i32, i32, i32 }
%class.TStructure = type <{ %class.TFieldListCollection, i32, i32, i8, [7 x i8] }>
%"class.std::__1::basic_string.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon.49 }
%union.anon.49 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.pool_allocator.52 }
%class.pool_allocator.52 = type { %class.TPoolAllocator* }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.TIntermTraverser::ParentBlock"* }
%"class.std::__1::set.82" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::set.92" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%class.TParseContext = type <{ %class.TIntermediate*, %class.TSymbolTable*, i32, [4 x i8], i8*, i8, i8, i8, i8, i32, i32, [4 x i8], %class.TIntermNode*, i32, i32, i32, [4 x i8], %class.TType*, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.TDiagnostics, %class.TDirectiveHandler, %"class.pp::Preprocessor", i8*, i8, i8, [6 x i8] }>
%class.TIntermediate = type { %class.TInfoSink* }
%class.TInfoSink = type { %class.TInfoSinkBase, %class.TInfoSinkBase, %class.TInfoSinkBase }
%class.TInfoSinkBase = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.TSymbolTable = type <{ %"class.std::__1::vector", %"class.std::__1::vector.19", %"class.std::__1::set", %"class.std::__1::set", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.TSymbolTableLevel**, %class.TSymbolTableLevel**, %"class.std::__1::__compressed_pair.14" }
%class.TSymbolTableLevel = type { %class.TMap }
%class.TMap = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.pool_allocator }
%class.pool_allocator = type { %class.TPoolAllocator* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.TSymbolTableLevel** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::map.21"*, %"class.std::__1::map.21"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::map.21" = type { %"class.std::__1::__tree.22" }
%"class.std::__1::__tree.22" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::map.21"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%class.TDiagnostics = type <{ %"class.pp::Diagnostics", i32, [4 x i8], %class.TInfoSink*, i32, i32, i32, [4 x i8] }>
%"class.pp::Diagnostics" = type { i32 (...)** }
%class.TDirectiveHandler = type { %"class.pp::DirectiveHandler", %struct.TPragma, %"class.std::__1::map.59"*, %class.TDiagnostics*, i32* }
%"class.pp::DirectiveHandler" = type { i32 (...)** }
%struct.TPragma = type { i8, i8 }
%"class.std::__1::map.59" = type { %"class.std::__1::__tree.60" }
%"class.std::__1::__tree.60" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.pp::Preprocessor" = type { %"struct.pp::PreprocessorImpl"* }
%"struct.pp::PreprocessorImpl" = type opaque
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node.106" = type { %"class.std::__1::__tree_node_base.base", i32 }
%class.TIntermSymbol = type { %class.TIntermTyped, i32, %"class.std::__1::basic_string.46" }
%class.TIntermConstantUnion = type { %class.TIntermTyped, %class.ConstantUnion* }
%class.ConstantUnion = type <{ %union.anon.102, i8, [3 x i8] }>
%union.anon.102 = type { i32 }
%class.TIntermBinary = type { %class.TIntermOperator.base, %class.TIntermTyped*, %class.TIntermTyped* }
%class.TIntermUnary = type { %class.TIntermOperator.base, %class.TIntermTyped* }
%class.TIntermSelection = type { %class.TIntermTyped, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode* }
%class.TIntermSwitch = type { %class.TIntermNode, %class.TIntermTyped*, %class.TIntermAggregate* }
%class.TIntermCase = type { %class.TIntermNode, %class.TIntermTyped* }
%class.TIntermLoop = type <{ %class.TIntermNode, i32, [4 x i8], %class.TIntermNode*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermNode*, i8, [7 x i8] }>
%class.TIntermBranch = type { %class.TIntermNode, i32, %class.TIntermTyped* }

$_ZN14ValidateSwitchD2Ev = comdat any

$_ZN14ValidateSwitchD0Ev = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZN16TIntermTraverserD2Ev = comdat any

$_ZN16TIntermTraverserD0Ev = comdat any

$_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol = comdat any

$_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion = comdat any

$_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary = comdat any

$_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary = comdat any

$_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection = comdat any

$_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate = comdat any

$_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop = comdat any

$_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch = comdat any

$_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch = comdat any

$_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__tree_iteratorIiPNS_11__tree_nodeIiPvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_ = comdat any

$_ZTV16TIntermTraverser = comdat any

@_ZTV14ValidateSwitch = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ValidateSwitch*)* @_ZN14ValidateSwitchD2Ev to i8*), i8* bitcast (void (%class.ValidateSwitch*)* @_ZN14ValidateSwitchD0Ev to i8*), i8* bitcast (void (%class.ValidateSwitch*, %class.TIntermSymbol*)* @_ZN14ValidateSwitch11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.ValidateSwitch*, %class.TIntermConstantUnion*)* @_ZN14ValidateSwitch18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermBinary*)* @_ZN14ValidateSwitch11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermUnary*)* @_ZN14ValidateSwitch10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermSelection*)* @_ZN14ValidateSwitch14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermAggregate*)* @_ZN14ValidateSwitch14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermLoop*)* @_ZN14ValidateSwitch9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermBranch*)* @_ZN14ValidateSwitch11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermSwitch*)* @_ZN14ValidateSwitch11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.ValidateSwitch*, i32, %class.TIntermCase*)* @_ZN14ValidateSwitch9visitCaseE5VisitP11TIntermCase to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"label statement nested inside control flow\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"duplicate default label\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"case label type does not match switch init-expression type\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"duplicate case label\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"statement before the first label\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.10 = private unnamed_addr constant [72 x i8] c"no statement between the last label and the end of the switch statement\00", align 1
@_ZTV16TIntermTraverser = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD0Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermSymbol*)* @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBinary*)* @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermUnary*)* @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermAggregate*)* @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, comdat, align 8

@_ZN14ValidateSwitchC1E10TBasicTypeP13TParseContext = hidden unnamed_addr alias void (%class.ValidateSwitch*, i8, %class.TParseContext*), void (%class.ValidateSwitch*, i8, %class.TParseContext*)* @_ZN14ValidateSwitchC2E10TBasicTypeP13TParseContext

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch8validateE10TBasicTypeP13TParseContextP16TIntermAggregateRK10TSourceLoc(i8 zeroext, %class.TParseContext*, %class.TIntermAggregate*, %struct.TSourceLoc* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.ValidateSwitch, align 8
  %6 = bitcast %class.ValidateSwitch* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 160, i1 false)
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 1
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 2
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 3
  store i8 1, i8* %10, align 2
  %11 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 4
  %12 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 29, i1 false) #7
  %13 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #8
  store %class.TPoolAllocator* %13, %class.TPoolAllocator** %12, align 8
  %14 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 7
  %15 = bitcast %"class.std::__1::vector.75"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV14ValidateSwitch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %16 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 1
  store i8 %0, i8* %16, align 8
  %17 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 3
  store %class.TParseContext* %1, %class.TParseContext** %17, align 8
  %18 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 4
  %19 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 11
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 12, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 9, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 13, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_node_base"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %25, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 14
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0
  %30 = bitcast %class.TIntermAggregate* %2 to void (%class.TIntermAggregate*, %class.TIntermTraverser*)***
  %31 = load void (%class.TIntermAggregate*, %class.TIntermTraverser*)**, void (%class.TIntermAggregate*, %class.TIntermTraverser*)*** %30, align 8
  %32 = load void (%class.TIntermAggregate*, %class.TIntermTraverser*)*, void (%class.TIntermAggregate*, %class.TIntermTraverser*)** %31, align 8
  call void %32(%class.TIntermAggregate* %2, %class.TIntermTraverser* nonnull %29) #8
  %33 = call zeroext i1 @_ZN14ValidateSwitch16validateInternalERK10TSourceLoc(%class.ValidateSwitch* nonnull %5, %struct.TSourceLoc* dereferenceable(16) %3) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV14ValidateSwitch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %34 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 13, i32 0
  %35 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %36 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %35, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.93"* %34, %"class.std::__1::__tree_node"* %36) #8
  %37 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 12, i32 0
  %38 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node.106"**
  %39 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %38, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.83"* %37, %"class.std::__1::__tree_node.106"* %39) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %40 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 7, i32 0, i32 0
  %41 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %40, align 8
  %42 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %4
  %44 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %41 to i64
  %45 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 7, i32 0, i32 1
  %46 = bitcast %"struct.TIntermTraverser::ParentBlock"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"struct.TIntermTraverser::ParentBlock"* %41 to i8*
  call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %43, %4
  %49 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %50 = load %class.TIntermNode**, %class.TIntermNode*** %49, align 8
  %51 = icmp eq %class.TIntermNode** %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = ptrtoint %class.TIntermNode** %50 to i64
  %54 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %55 = bitcast %class.TIntermNode*** %54 to i64*
  store i64 %53, i64* %55, align 8
  br label %56

56:                                               ; preds = %48, %52
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #7
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch16validateInternalERK10TSourceLoc(%class.ValidateSwitch* nocapture readonly, %struct.TSourceLoc* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 2, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  %8 = load %class.TParseContext*, %class.TParseContext** %7, align 8
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %8, %struct.TSourceLoc* dereferenceable(16) %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  %15 = load %class.TParseContext*, %class.TParseContext** %14, align 8
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %15, %struct.TSourceLoc* dereferenceable(16) %1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %16

16:                                               ; preds = %9, %13
  %17 = load i8, i8* %3, align 2, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %38

19:                                               ; preds = %16
  %20 = load i8, i8* %10, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 9
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 4
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 11
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 2
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 14
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br label %38

38:                                               ; preds = %26, %22, %19, %16, %34, %30
  %39 = phi i1 [ false, %30 ], [ false, %26 ], [ false, %22 ], [ false, %19 ], [ false, %16 ], [ %37, %34 ]
  ret i1 %39
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN14ValidateSwitchD2Ev(%class.ValidateSwitch*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV14ValidateSwitch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.93"* %3, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.106"**
  %10 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %9, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.83"* %7, %"class.std::__1::__tree_node.106"* %10) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %11, align 8
  %13 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %12 to i64
  %16 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %17 = bitcast %"struct.TIntermTraverser::ParentBlock"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.TIntermTraverser::ParentBlock"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %14, %1
  %20 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %class.TIntermNode**, %class.TIntermNode*** %20, align 8
  %22 = icmp eq %class.TIntermNode** %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %class.TIntermNode** %21 to i64
  %25 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %26 = bitcast %class.TIntermNode*** %25 to i64*
  store i64 %24, i64* %26, align 8
  br label %27

27:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN14ValidateSwitchC2E10TBasicTypeP13TParseContext(%class.ValidateSwitch*, i8 zeroext, %class.TParseContext*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %7, align 2
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 4
  %9 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 29, i1 false)
  %10 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #8
  store %class.TPoolAllocator* %10, %class.TPoolAllocator** %9, align 8
  %11 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 7
  %12 = bitcast %"class.std::__1::vector.75"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV14ValidateSwitch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %13 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 1
  store i8 %1, i8* %13, align 8
  %14 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  store %class.TParseContext* %2, %class.TParseContext** %14, align 8
  %15 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 4
  %16 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 11
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node_base"** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 9, i1 false)
  store %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node_base"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 14
  store i8 0, i8* %25, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN14ValidateSwitch11visitSymbolEP13TIntermSymbol(%class.ValidateSwitch* nocapture, %class.TIntermSymbol* nocapture readnone) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %7, align 2
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %9, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN14ValidateSwitch18visitConstantUnionEP20TIntermConstantUnion(%class.ValidateSwitch* nocapture, %class.TIntermConstantUnion* nocapture readnone) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %7, align 2
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %9, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch11visitBinaryE5VisitP13TIntermBinary(%class.ValidateSwitch* nocapture, i32, %class.TIntermBinary* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %8, align 2
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %10, align 1
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch10visitUnaryE5VisitP12TIntermUnary(%class.ValidateSwitch* nocapture, i32, %class.TIntermUnary* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %8, align 2
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %10, align 1
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch14visitSelectionE5VisitP16TIntermSelection(%class.ValidateSwitch* nocapture, i32, %class.TIntermSelection* nocapture readnone) unnamed_addr #3 align 2 {
  switch i32 %1, label %10 [
    i32 0, label %5
    i32 2, label %4
  ]

4:                                                ; preds = %3
  br label %5

5:                                                ; preds = %3, %4
  %6 = phi i32 [ -1, %4 ], [ 1, %3 ]
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %6
  store i32 %9, i32* %7, align 4
  br label %10

10:                                               ; preds = %5, %3
  %11 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %15, align 2
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %17, align 1
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch11visitSwitchE5VisitP13TIntermSwitch(%class.ValidateSwitch* nocapture, i32, %class.TIntermSwitch* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %8, align 2
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %10, align 1
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch9visitCaseE5VisitP11TIntermCase(%class.ValidateSwitch*, i32, %class.TIntermCase*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %class.TIntermCase, %class.TIntermCase* %2, i64 0, i32 1
  %7 = load %class.TIntermTyped*, %class.TIntermTyped** %6, align 8
  %8 = icmp eq %class.TIntermTyped* %7, null
  %9 = select i1 %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)
  %10 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  %15 = load %class.TParseContext*, %class.TParseContext** %14, align 8
  %16 = getelementptr inbounds %class.TIntermCase, %class.TIntermCase* %2, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %15, %struct.TSourceLoc* dereferenceable(16) %16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)) #8
  %17 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 9
  store i8 1, i8* %17, align 8
  br label %18

18:                                               ; preds = %13, %3
  %19 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 1, i8* %20, align 1
  %21 = load %class.TIntermTyped*, %class.TIntermTyped** %6, align 8
  %22 = icmp eq %class.TIntermTyped* %21, null
  br i1 %22, label %23, label %32

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 11
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 4
  %27 = icmp sgt i32 %25, 0
  br i1 %27, label %28, label %140

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  %30 = load %class.TParseContext*, %class.TParseContext** %29, align 8
  %31 = getelementptr inbounds %class.TIntermCase, %class.TIntermCase* %2, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %30, %struct.TSourceLoc* dereferenceable(16) %31, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %140

32:                                               ; preds = %18
  %33 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %21, i64 0, i32 0
  %34 = bitcast %class.TIntermTyped* %21 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %35 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %34, align 8
  %36 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %35, i64 2
  %37 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %36, align 8
  %38 = tail call %class.TIntermConstantUnion* %37(%class.TIntermNode* %33) #8
  %39 = icmp eq %class.TIntermConstantUnion* %38, null
  br i1 %39, label %140, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %38, i64 0, i32 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 8
  %43 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 1
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %42, %44
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  %48 = load %class.TParseContext*, %class.TParseContext** %47, align 8
  %49 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %38, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %48, %struct.TSourceLoc* dereferenceable(16) %49, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)) #8
  %50 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 4
  store i8 1, i8* %50, align 8
  br label %51

51:                                               ; preds = %40, %46
  switch i8 %42, label %140 [
    i8 2, label %52
    i8 3, label %96
  ]

52:                                               ; preds = %51
  %53 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #7
  store i32 -1431655766, i32* %4, align 4
  %54 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %38, i64 0, i32 1
  %55 = load %class.ConstantUnion*, %class.ConstantUnion** %54, align 8
  %56 = icmp eq %class.ConstantUnion* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %55, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %52, %57
  %61 = phi i32 [ %59, %57 ], [ 0, %52 ]
  store i32 %61, i32* %4, align 4
  %62 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_node.106"**
  %64 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node.106"* %64, null
  br i1 %65, label %92, label %66

66:                                               ; preds = %60, %66
  %67 = phi %"class.std::__1::__tree_end_node"* [ %77, %66 ], [ %62, %60 ]
  %68 = phi %"class.std::__1::__tree_node.106"* [ %78, %66 ], [ %64, %60 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %68, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %68, i64 0, i32 0, i32 1
  %73 = bitcast %"class.std::__1::__tree_node_base"** %72 to %"class.std::__1::__tree_node.106"**
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %68, i64 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_node.106"* %68 to %"class.std::__1::__tree_node.106"**
  %76 = select i1 %71, %"class.std::__1::__tree_node.106"** %73, %"class.std::__1::__tree_node.106"** %75
  %77 = select i1 %71, %"class.std::__1::__tree_end_node"* %67, %"class.std::__1::__tree_end_node"* %74
  %78 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %76, align 8
  %79 = icmp eq %"class.std::__1::__tree_node.106"* %78, null
  br i1 %79, label %80, label %66

80:                                               ; preds = %66
  %81 = icmp eq %"class.std::__1::__tree_end_node"* %77, %62
  br i1 %81, label %92, label %82

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::__tree_end_node"* %77 to %"class.std::__1::__tree_node.106"*
  %84 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %83, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %61, %85
  br i1 %86, label %92, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  %89 = load %class.TParseContext*, %class.TParseContext** %88, align 8
  %90 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %38, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %89, %struct.TSourceLoc* dereferenceable(16) %90, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)) #8
  %91 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 14
  store i8 1, i8* %91, align 8
  br label %95

92:                                               ; preds = %82, %80, %60
  %93 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0
  %94 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__tree_iteratorIiPNS_11__tree_nodeIiPvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.83"* %93, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #8
  br label %95

95:                                               ; preds = %92, %87
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #7
  br label %140

96:                                               ; preds = %51
  %97 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #7
  store i32 -1431655766, i32* %5, align 4
  %98 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %38, i64 0, i32 1
  %99 = load %class.ConstantUnion*, %class.ConstantUnion** %98, align 8
  %100 = icmp eq %class.ConstantUnion* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %99, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  br label %104

104:                                              ; preds = %96, %101
  %105 = phi i32 [ %103, %101 ], [ 0, %96 ]
  store i32 %105, i32* %5, align 4
  %106 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %107 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_node"**
  %108 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node"* %108, null
  br i1 %109, label %136, label %110

110:                                              ; preds = %104, %110
  %111 = phi %"class.std::__1::__tree_end_node"* [ %121, %110 ], [ %106, %104 ]
  %112 = phi %"class.std::__1::__tree_node"* [ %122, %110 ], [ %108, %104 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %112, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp ult i32 %114, %105
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %112, i64 0, i32 0, i32 1
  %117 = bitcast %"class.std::__1::__tree_node_base"** %116 to %"class.std::__1::__tree_node"**
  %118 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %112, i64 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::__tree_node"* %112 to %"class.std::__1::__tree_node"**
  %120 = select i1 %115, %"class.std::__1::__tree_node"** %117, %"class.std::__1::__tree_node"** %119
  %121 = select i1 %115, %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"* %118
  %122 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %120, align 8
  %123 = icmp eq %"class.std::__1::__tree_node"* %122, null
  br i1 %123, label %124, label %110

124:                                              ; preds = %110
  %125 = icmp eq %"class.std::__1::__tree_end_node"* %121, %106
  br i1 %125, label %136, label %126

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.std::__1::__tree_node"*
  %128 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %127, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %105, %129
  br i1 %130, label %136, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 3
  %133 = load %class.TParseContext*, %class.TParseContext** %132, align 8
  %134 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %38, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %133, %struct.TSourceLoc* dereferenceable(16) %134, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)) #8
  %135 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 14
  store i8 1, i8* %135, align 8
  br label %139

136:                                              ; preds = %126, %124, %104
  %137 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0
  %138 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.93"* %137, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #8
  br label %139

139:                                              ; preds = %136, %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #7
  br label %140

140:                                              ; preds = %32, %28, %23, %95, %139, %51
  ret i1 false
}

; Function Attrs: optsize
declare void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext*, %struct.TSourceLoc* dereferenceable(16), i8*, i8*, i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch14visitAggregateE5VisitP16TIntermAggregate(%class.ValidateSwitch* nocapture, i32, %class.TIntermAggregate* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 6, i32 0
  %5 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %6 = bitcast %class.TIntermNode*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.69"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %24, label %11

11:                                               ; preds = %3
  %12 = inttoptr i64 %7 to %class.TIntermNode**
  %13 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %12, i64 -1
  %14 = load %class.TIntermNode*, %class.TIntermNode** %13, align 8
  %15 = icmp eq %class.TIntermNode* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %21, align 2
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %23, align 1
  br label %24

24:                                               ; preds = %3, %11, %22
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch9visitLoopE5VisitP11TIntermLoop(%class.ValidateSwitch* nocapture, i32, %class.TIntermLoop* nocapture readnone) unnamed_addr #3 align 2 {
  switch i32 %1, label %10 [
    i32 0, label %5
    i32 2, label %4
  ]

4:                                                ; preds = %3
  br label %5

5:                                                ; preds = %3, %4
  %6 = phi i32 [ -1, %4 ], [ 1, %3 ]
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %6
  store i32 %9, i32* %7, align 4
  br label %10

10:                                               ; preds = %5, %3
  %11 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %15, align 2
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %17, align 1
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN14ValidateSwitch11visitBranchE5VisitP13TIntermBranch(%class.ValidateSwitch* nocapture, i32, %class.TIntermBranch* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 6
  store i8 1, i8* %8, align 2
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 7
  store i8 0, i8* %10, align 1
  ret i1 true
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN14ValidateSwitchD0Ev(%class.ValidateSwitch*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV14ValidateSwitch, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0
  %4 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.93"* %3, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0
  %8 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.106"**
  %10 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %9, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.83"* %7, %"class.std::__1::__tree_node.106"* %10) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %11, align 8
  %13 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %12 to i64
  %16 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %17 = bitcast %"struct.TIntermTraverser::ParentBlock"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.TIntermTraverser::ParentBlock"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %14, %1
  %20 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %class.TIntermNode**, %class.TIntermNode*** %20, align 8
  %22 = icmp eq %class.TIntermNode** %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %class.TIntermNode** %21 to i64
  %25 = getelementptr inbounds %class.ValidateSwitch, %class.ValidateSwitch* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %26 = bitcast %class.TIntermNode*** %25 to i64*
  store i64 %24, i64* %26, align 8
  br label %27

27:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.93"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.93"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.93"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.83"*, %"class.std::__1::__tree_node.106"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.106"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.106"* %1 to %"class.std::__1::__tree_node.106"**
  %6 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_node.106"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.106"**
  %9 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_node.106"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node.106"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD2Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD0Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol(%class.TIntermTraverser*, %class.TIntermSymbol*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion(%class.TIntermTraverser*, %class.TIntermConstantUnion*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary(%class.TIntermTraverser*, i32, %class.TIntermBinary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary(%class.TIntermTraverser*, i32, %class.TIntermUnary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection(%class.TIntermTraverser*, i32, %class.TIntermSelection*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate(%class.TIntermTraverser*, i32, %class.TIntermAggregate*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop(%class.TIntermTraverser*, i32, %class.TIntermLoop*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch(%class.TIntermTraverser*, i32, %class.TIntermBranch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch(%class.TIntermTraverser*, i32, %class.TIntermSwitch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase(%class.TIntermTraverser*, i32, %class.TIntermCase*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: optsize
declare %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__tree_iteratorIiPNS_11__tree_nodeIiPvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.83"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.106"**
  %6 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.106"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32, i32* %1, align 4
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node.106"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %12, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.106"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.106"**
  %43 = load %"class.std::__1::__tree_node.106"*, %"class.std::__1::__tree_node.106"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.106"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 32) #10, !noalias !3
  %47 = getelementptr inbounds i8, i8* %46, i64 28
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %2, align 4, !noalias !3
  store i32 %49, i32* %48, align 4, !noalias !3
  %50 = bitcast i8* %46 to %"class.std::__1::__tree_node.106"*
  %51 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_node_base"** dereferenceable(8) %41, %"class.std::__1::__tree_node_base"* nonnull %51) #8
  br label %52

52:                                               ; preds = %45, %39
  %53 = phi i8 [ 1, %45 ], [ 0, %39 ]
  %54 = phi %"class.std::__1::__tree_node.106"* [ %50, %45 ], [ %43, %39 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.106", %"class.std::__1::__tree_node.106"* %54, i64 0, i32 0, i32 0
  %56 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %55, 0
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %56, i8 %53, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %57
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_(%"class.std::__1::__tree.83"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree.83"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #8
  %20 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__tree_iteratorIjPNS_11__tree_nodeIjPvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.93"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.93", %"class.std::__1::__tree.93"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.93", %"class.std::__1::__tree.93"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32, i32* %1, align 4
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult i32 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 32) #10, !noalias !6
  %47 = getelementptr inbounds i8, i8* %46, i64 28
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %2, align 4, !noalias !6
  store i32 %49, i32* %48, align 4, !noalias !6
  %50 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %51 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_(%"class.std::__1::__tree.93"* %0, %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_node_base"** dereferenceable(8) %41, %"class.std::__1::__tree_node_base"* nonnull %51) #8
  br label %52

52:                                               ; preds = %45, %39
  %53 = phi i8 [ 1, %45 ], [ 0, %39 ]
  %54 = phi %"class.std::__1::__tree_node"* [ %50, %45 ], [ %43, %39 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 0
  %56 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %55, 0
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %56, i8 %53, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %57
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_(%"class.std::__1::__tree.93"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree.93", %"class.std::__1::__tree.93"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree.93"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree.93", %"class.std::__1::__tree.93"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #8
  %20 = getelementptr inbounds %"class.std::__1::__tree.93", %"class.std::__1::__tree.93"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind optsize }
attributes #9 = { optsize }
attributes #10 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
