; ModuleID = 'gen/services/device/public/mojom/usb_manager_client.mojom-test-utils.cc'
source_filename = "gen/services/device/public/mojom/usb_manager_client.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::mojom::UsbDeviceManagerClientAsyncWaiter" = type { %"class.device::mojom::UsbDeviceManagerClient"* }
%"class.device::mojom::UsbDeviceManagerClient" = type { i32 (...)** }
%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting" = type { %"class.device::mojom::UsbDeviceManagerClient" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.device::mojom::UsbDeviceInfo"* }
%"class.device::mojom::UsbDeviceInfo" = type { %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i32, i32, i16, i16, i8, i8, i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.13", i8, %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.3 }
%union.anon.3 = type { %"class.std::__1::basic_string.4" }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.18" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr.22"*, %"class.mojo::StructPtr.22"*, %"class.std::__1::__compressed_pair.78" }
%"class.mojo::StructPtr.22" = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.device::mojom::UsbConfigurationInfo"* }
%"class.device::mojom::UsbConfigurationInfo" = type { i8, %"class.absl::optional", i8, i8, i8, %"class.std::__1::vector.26", %"class.std::__1::vector.44" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.mojo::StructPtr.28"*, %"class.mojo::StructPtr.28"*, %"class.std::__1::__compressed_pair.70" }
%"class.mojo::StructPtr.28" = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.device::mojom::UsbInterfaceInfo"* }
%"class.device::mojom::UsbInterfaceInfo" = type { i8, i8, %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.mojo::StructPtr.34"*, %"class.mojo::StructPtr.34"*, %"class.std::__1::__compressed_pair.62" }
%"class.mojo::StructPtr.34" = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.device::mojom::UsbAlternateInterfaceInfo"* }
%"class.device::mojom::UsbAlternateInterfaceInfo" = type { i8, i8, i8, i8, %"class.absl::optional", %"class.std::__1::vector.38", %"class.std::__1::vector.44" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.mojo::StructPtr.40"*, %"class.mojo::StructPtr.40"*, %"class.std::__1::__compressed_pair.54" }
%"class.mojo::StructPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.device::mojom::UsbEndpointInfo"* }
%"class.device::mojom::UsbEndpointInfo" = type { i8, i32, i32, i32, i32, i32, i8, %"class.std::__1::vector.44" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.mojo::StructPtr.40"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.mojo::StructPtr.34"* }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.mojo::StructPtr.28"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i8*, i8*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.mojo::StructPtr.22"* }

$_ZN6device5mojom22UsbDeviceManagerClientD2Ev = comdat any

$_ZN6device5mojom43UsbDeviceManagerClientInterceptorForTestingD0Ev = comdat any

@_ZTVN6device5mojom43UsbDeviceManagerClientInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::mojom::UsbDeviceManagerClient"*)* @_ZN6device5mojom22UsbDeviceManagerClientD2Ev to i8*), i8* bitcast (void (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)* @_ZN6device5mojom43UsbDeviceManagerClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN6device5mojom43UsbDeviceManagerClientInterceptorForTesting13OnDeviceAddedEN4mojo9StructPtrINS0_13UsbDeviceInfoEEE to i8*), i8* bitcast (void (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN6device5mojom43UsbDeviceManagerClientInterceptorForTesting15OnDeviceRemovedEN4mojo9StructPtrINS0_13UsbDeviceInfoEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN6device5mojom33UsbDeviceManagerClientAsyncWaiterC1EPNS0_22UsbDeviceManagerClientE = hidden unnamed_addr alias void (%"class.device::mojom::UsbDeviceManagerClientAsyncWaiter"*, %"class.device::mojom::UsbDeviceManagerClient"*), void (%"class.device::mojom::UsbDeviceManagerClientAsyncWaiter"*, %"class.device::mojom::UsbDeviceManagerClient"*)* @_ZN6device5mojom33UsbDeviceManagerClientAsyncWaiterC2EPNS0_22UsbDeviceManagerClientE
@_ZN6device5mojom33UsbDeviceManagerClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.device::mojom::UsbDeviceManagerClientAsyncWaiter"*), void (%"class.device::mojom::UsbDeviceManagerClientAsyncWaiter"*)* @_ZN6device5mojom33UsbDeviceManagerClientAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5mojom43UsbDeviceManagerClientInterceptorForTesting13OnDeviceAddedEN4mojo9StructPtrINS0_13UsbDeviceInfoEEE(%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"* %0 to %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)***
  %5 = load %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)**, %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)*, %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)*, %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.device::mojom::UsbDeviceManagerClient"* %7(%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.device::mojom::UsbDeviceManagerClient"* %8 to void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)**, void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)*, void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)** %14, i64 2
  %16 = load void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)*, void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.device::mojom::UsbDeviceManagerClient"* %8, %"class.mojo::StructPtr"* nonnull %3) #7
  %17 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %10, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %10, align 8
  %18 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %17) #7
  %20 = bitcast %"class.device::mojom::UsbDeviceInfo"* %17 to i8*
  call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5mojom43UsbDeviceManagerClientInterceptorForTesting15OnDeviceRemovedEN4mojo9StructPtrINS0_13UsbDeviceInfoEEE(%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"* %0 to %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)***
  %5 = load %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)**, %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)*, %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)*, %"class.device::mojom::UsbDeviceManagerClient"* (%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.device::mojom::UsbDeviceManagerClient"* %7(%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.device::mojom::UsbDeviceManagerClient"* %8 to void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)**, void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)*, void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)** %14, i64 3
  %16 = load void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)*, void (%"class.device::mojom::UsbDeviceManagerClient"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.device::mojom::UsbDeviceManagerClient"* %8, %"class.mojo::StructPtr"* nonnull %3) #7
  %17 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %10, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %10, align 8
  %18 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %17) #7
  %20 = bitcast %"class.device::mojom::UsbDeviceInfo"* %17 to i8*
  call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device5mojom33UsbDeviceManagerClientAsyncWaiterC2EPNS0_22UsbDeviceManagerClientE(%"class.device::mojom::UsbDeviceManagerClientAsyncWaiter"* nocapture, %"class.device::mojom::UsbDeviceManagerClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::mojom::UsbDeviceManagerClientAsyncWaiter", %"class.device::mojom::UsbDeviceManagerClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.device::mojom::UsbDeviceManagerClient"* %1, %"class.device::mojom::UsbDeviceManagerClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device5mojom33UsbDeviceManagerClientAsyncWaiterD2Ev(%"class.device::mojom::UsbDeviceManagerClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device5mojom22UsbDeviceManagerClientD2Ev(%"class.device::mojom::UsbDeviceManagerClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device5mojom43UsbDeviceManagerClientInterceptorForTestingD0Ev(%"class.device::mojom::UsbDeviceManagerClientInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
